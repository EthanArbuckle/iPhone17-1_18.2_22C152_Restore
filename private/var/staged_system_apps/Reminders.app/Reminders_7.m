uint64_t sub_1004D44D8(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t result;

  if (a3)
  {
    v6 = *((void *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        v7 = a2;
      }
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    v9 = *((void *)a4 + 2);
  }
  else {
    v9 = v7;
  }
  if (v9)
  {
    sub_10003B754((uint64_t *)&unk_100791C60);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size_0(v10);
    v12 = v11 - 32;
    if (v11 < 32) {
      v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    v10 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v10 + 32;
  v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D4644(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1004D5B74(a1, a2, a3, a4, &qword_1007A1518, &qword_1007A0A78);
}

uint64_t sub_1004D4658(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10003B754(a5);
    v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size_0(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 17;
    }
    v13[2] = v11;
    v13[3] = 2 * (v15 >> 4);
  }
  else
  {
    v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 16 * v11) {
      memmove(v13 + 4, a4 + 4, 16 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 16 * v11 || v16 >= v17 + 16 * v11)
  {
    sub_10003B754(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D47E8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007907A0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  v13 = a4 + 32;
  size_t v14 = 48 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D4964(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10003B754(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size_0(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 40);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v11 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 40 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D4AE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1478);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 96);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v12 = v10 + 32;
  v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[96 * v8]) {
      memmove(v12, v13, 96 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[96 * v8] || v12 >= &v13[96 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D4C68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_100792888);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  v13 = v10 + 32;
  size_t v14 = a4 + 32;
  size_t v15 = 32 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D4DD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A14F0);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_10003B754(&qword_1007A14F8);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D4F5C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A14C8);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 4;
  unint64_t v14 = a4 + 4;
  size_t v15 = 4 * v8;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[v15]) {
      memmove(v10 + 4, a4 + 4, v15 * 8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    sub_10003B754(&qword_1007A14D0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D50E4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1B10);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_10003B754(&qword_100798710);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D5270(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1468);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 112);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 112 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D53F0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A14C0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 136);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[136 * v8]) {
      memmove(v12, v13, 136 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[136 * v8] || v12 >= &v13[136 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D5574(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1548);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D56E0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_10079C390);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[56 * v8]) {
      memmove(v12, v13, 56 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[56 * v8] || v12 >= &v13[56 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D586C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_1004D5878(a1, a2, a3, a4, &qword_10079C360);
}

uint64_t sub_1004D5878(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    sub_10003B754(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size_0(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    size_t v11 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D59C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1550);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  size_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 6 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_10003B754(&qword_10078FAC0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D5B60(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1004D5B74(a1, a2, a3, a4, &qword_10079C3E0, &qword_10079C1E8);
}

uint64_t sub_1004D5B74(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10003B754(a5);
  uint64_t v13 = *(void *)(sub_10003B754(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size_0(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10003B754(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D5DB4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1470);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D5F30(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1418);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size_0(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 3 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_10003B754(&qword_10079CD20);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D60CC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_10079D9A8);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_10003B754(&qword_1007A1450);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D6258(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_10003B754(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size_0(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    int64_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v14 = v11 + 32;
  unint64_t v15 = a4 + 32;
  size_t v16 = 16 * v9;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[v16]) {
      memmove(v14, v15, v16);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[v16] || v14 >= &v15[v16])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D63C4(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_10003B754(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = j__malloc_size_0(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    sub_10003B754(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D656C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_10003B754(&qword_1007A1460);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size_0(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1004D66D8(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10003B754(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size_0(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  v21 = (char *)v16 + v20;
  v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV11DateOptionsO21__derived_enum_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  v182 = (char *)a2;
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v178 = *(void *)(v3 - 8);
  v179 = (char *)v3;
  __chkstk_darwin(v3);
  v177 = (char *)&v160 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v180 = *(void *)(v5 - 8);
  uint64_t v181 = v5;
  __chkstk_darwin(v5);
  v172 = (char *)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v173 = (char *)&v160 - v8;
  __chkstk_darwin(v9);
  v171 = (char *)&v160 - v10;
  __chkstk_darwin(v11);
  v175 = (char *)&v160 - v12;
  __chkstk_darwin(v13);
  v176 = (char *)&v160 - v14;
  __chkstk_darwin(v15);
  v174 = (char *)&v160 - v16;
  uint64_t v17 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v160 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v22 = (char *)&v160 - v21;
  __chkstk_darwin(v23);
  unint64_t v25 = (char *)&v160 - v24;
  __chkstk_darwin(v26);
  v28 = (char *)&v160 - v27;
  __chkstk_darwin(v29);
  v31 = (char *)&v160 - v30;
  __chkstk_darwin(v32);
  v34 = (char *)&v160 - v33;
  uint64_t v35 = sub_10003B754(&qword_1007A1540);
  __chkstk_darwin(v35 - 8);
  v37 = (char *)&v160 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = &v37[*(int *)(v38 + 56)];
  sub_1004D8230(a1, (uint64_t)v37);
  sub_1004D8230((uint64_t)v182, (uint64_t)v39);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v182 = v37;
      sub_1004D8230((uint64_t)v37, (uint64_t)v31);
      uint64_t v42 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      v44 = *(char **)&v31[v42];
      uint64_t v43 = *(void *)&v31[v42 + 8];
      v46 = *(char **)&v31[v42 + 16];
      uint64_t v45 = *(void *)&v31[v42 + 24];
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v140 = *(void (**)(char *, uint64_t))(v180 + 8);
        v141 = v31;
        goto LABEL_55;
      }
      v47 = &v39[v42];
      v48 = *(char **)&v39[v42];
      uint64_t v49 = *(void *)&v39[v42 + 8];
      v177 = v48;
      uint64_t v178 = *((void *)v47 + 2);
      v179 = v46;
      uint64_t v50 = *((void *)v47 + 3);
      uint64_t v52 = v180;
      uint64_t v51 = v181;
      v53 = v174;
      (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v174, v39, v181);
      char v54 = static Date.== infix(_:_:)();
      v55 = v31;
      v56 = *(void (**)(char *, uint64_t))(v52 + 8);
      v56(v55, v51);
      if ((v54 & 1) == 0)
      {
        v56(v53, v51);
        goto LABEL_66;
      }
      if (v43)
      {
        v57 = v174;
        v58 = v179;
        if (!v49)
        {
LABEL_85:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v146 = v181;
          uint64_t v147 = (uint64_t)v182;
LABEL_86:
          v56(v57, v146);
          goto LABEL_93;
        }
        if ((v44 != v177 || v43 != v49) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_85;
        }
      }
      else
      {
        v57 = v174;
        v58 = v179;
        if (v49) {
          goto LABEL_85;
        }
      }
      if (v58 == (char *)v178 && v45 == v50)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = v181;
        uint64_t v147 = (uint64_t)v182;
      }
      else
      {
        char v151 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v146 = v181;
        uint64_t v147 = (uint64_t)v182;
        if ((v151 & 1) == 0) {
          goto LABEL_86;
        }
      }
      v56(v57, v146);
      uint64_t v139 = v147;
      goto LABEL_51;
    case 2u:
      v182 = v37;
      sub_1004D8230((uint64_t)v37, (uint64_t)v28);
      uint64_t v59 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      v61 = *(char **)&v28[v59];
      uint64_t v60 = *(void *)&v28[v59 + 8];
      v63 = *(char **)&v28[v59 + 16];
      uint64_t v62 = *(void *)&v28[v59 + 24];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v140 = *(void (**)(char *, uint64_t))(v180 + 8);
        v141 = v28;
        goto LABEL_55;
      }
      v64 = &v39[v59];
      v65 = *(char **)&v39[v59];
      uint64_t v66 = *(void *)&v39[v59 + 8];
      v177 = v65;
      uint64_t v178 = *((void *)v64 + 2);
      v179 = v63;
      uint64_t v67 = *((void *)v64 + 3);
      uint64_t v69 = v180;
      uint64_t v68 = v181;
      v70 = v176;
      (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v176, v39, v181);
      char v71 = static Date.== infix(_:_:)();
      v72 = v28;
      uint64_t v73 = v68;
      v74 = *(void (**)(char *, uint64_t))(v69 + 8);
      v74(v72, v73);
      if ((v71 & 1) == 0)
      {
        v74(v70, v73);
        goto LABEL_66;
      }
      if (v60)
      {
        v75 = v179;
        if (!v66)
        {
LABEL_87:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v147 = (uint64_t)v182;
          v148 = v176;
LABEL_88:
          v74(v148, v73);
          goto LABEL_93;
        }
        if ((v61 != v177 || v60 != v66) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_87;
        }
      }
      else
      {
        v75 = v179;
        if (v66) {
          goto LABEL_87;
        }
      }
      if (v75 == (char *)v178 && v62 == v67)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (uint64_t)v182;
        v148 = v176;
      }
      else
      {
        char v152 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (uint64_t)v182;
        v148 = v176;
        if ((v152 & 1) == 0) {
          goto LABEL_88;
        }
      }
      v74(v148, v73);
      uint64_t v139 = v147;
      goto LABEL_51;
    case 3u:
      v182 = v37;
      sub_1004D8230((uint64_t)v37, (uint64_t)v25);
      uint64_t v76 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      v78 = *(char **)&v25[v76];
      uint64_t v77 = *(void *)&v25[v76 + 8];
      v80 = *(char **)&v25[v76 + 16];
      uint64_t v79 = *(void *)&v25[v76 + 24];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v140 = *(void (**)(char *, uint64_t))(v180 + 8);
        v141 = v25;
LABEL_55:
        uint64_t v142 = v181;
LABEL_58:
        v140(v141, v142);
LABEL_59:
        v37 = v182;
LABEL_60:
        sub_10003B6F8((uint64_t)v37, &qword_1007A1540);
LABEL_95:
        char v41 = 0;
        return v41 & 1;
      }
      v81 = &v39[v76];
      v82 = *(char **)&v39[v76];
      uint64_t v83 = *(void *)&v39[v76 + 8];
      v177 = v82;
      uint64_t v178 = *((void *)v81 + 2);
      v179 = v80;
      uint64_t v84 = *((void *)v81 + 3);
      uint64_t v86 = v180;
      uint64_t v85 = v181;
      v87 = v175;
      (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v175, v39, v181);
      char v88 = static Date.== infix(_:_:)();
      v89 = v25;
      v90 = *(void (**)(char *, uint64_t))(v86 + 8);
      v90(v89, v85);
      if ((v88 & 1) == 0)
      {
        v90(v87, v85);
        goto LABEL_66;
      }
      if (v77)
      {
        v91 = v175;
        v92 = v179;
        if (!v83)
        {
LABEL_89:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v147 = (uint64_t)v182;
LABEL_90:
          v90(v91, v181);
          goto LABEL_93;
        }
        if ((v78 != v177 || v77 != v83) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_89;
        }
      }
      else
      {
        v91 = v175;
        v92 = v179;
        if (v83) {
          goto LABEL_89;
        }
      }
      if (v92 == (char *)v178 && v79 == v84)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (uint64_t)v182;
      }
      else
      {
        char v153 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (uint64_t)v182;
        if ((v153 & 1) == 0) {
          goto LABEL_90;
        }
      }
      v90(v91, v181);
      uint64_t v139 = v147;
      goto LABEL_51;
    case 4u:
      v182 = v37;
      sub_1004D8230((uint64_t)v37, (uint64_t)v22);
      v93 = (int *)sub_10003B754(&qword_100792C08);
      uint64_t v94 = v93[12];
      v179 = &v22[v94];
      uint64_t v95 = v93[16];
      uint64_t v96 = *(void *)&v22[v95 + 8];
      v97 = *(char **)&v22[v95 + 16];
      uint64_t v98 = *(void *)&v22[v95 + 24];
      v176 = *(char **)&v22[v95];
      v177 = v97;
      uint64_t v99 = v93[20];
      v100 = *(char **)&v22[v99 + 8];
      uint64_t v170 = *(void *)&v22[v99];
      uint64_t v101 = *(void *)&v22[v99 + 24];
      v174 = *(char **)&v22[v99 + 16];
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v143 = *(void (**)(char *, uint64_t))(v180 + 8);
        uint64_t v144 = v181;
        v143(v179, v181);
        v143(v22, v144);
        goto LABEL_59;
      }
      uint64_t v166 = v98;
      uint64_t v167 = v101;
      uint64_t v178 = v96;
      v175 = v100;
      v102 = &v39[v94];
      uint64_t v103 = *(void *)&v39[v95 + 8];
      v105 = *(char **)&v39[v95 + 16];
      uint64_t v104 = *(void *)&v39[v95 + 24];
      v163 = *(char **)&v39[v95];
      v164 = v105;
      uint64_t v168 = v104;
      uint64_t v169 = v103;
      uint64_t v161 = *(void *)&v39[v99];
      v165 = *(char **)&v39[v99 + 8];
      uint64_t v106 = *(void *)&v39[v99 + 24];
      v162 = *(char **)&v39[v99 + 16];
      uint64_t v107 = v180;
      v108 = *(void (**)(char *, char *, uint64_t))(v180 + 32);
      v109 = v171;
      v110 = v39;
      uint64_t v111 = v181;
      v108(v171, v110, v181);
      v112 = v173;
      v108(v173, v179, v111);
      v113 = v172;
      v108(v172, v102, v111);
      v114 = v109;
      uint64_t v115 = v111;
      LOBYTE(v111) = static Date.== infix(_:_:)();
      v116 = *(void (**)(char *, uint64_t))(v107 + 8);
      v116(v22, v115);
      if ((v111 & 1) == 0 || (v118 = v168, uint64_t v117 = v169, v119 = v113, (static Date.== infix(_:_:)() & 1) == 0))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v116(v113, v115);
        v116(v112, v115);
        v116(v114, v115);
        goto LABEL_68;
      }
      uint64_t v120 = v166;
      uint64_t v121 = v167;
      if (v178)
      {
        if (!v117)
        {
          swift_bridgeObjectRelease();
          goto LABEL_111;
        }
        if ((v176 != v163 || v178 != v117) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_111:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_112;
        }
      }
      else if (v117)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_112:
        swift_bridgeObjectRelease();
        uint64_t v155 = (uint64_t)v182;
LABEL_113:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v116(v119, v115);
        v156 = v173;
LABEL_128:
        v116(v156, v115);
        v116(v114, v115);
        uint64_t v145 = v155;
        goto LABEL_94;
      }
      if (v177 == v164 && v120 == v118)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v155 = (uint64_t)v182;
      }
      else
      {
        char v157 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v155 = (uint64_t)v182;
        if ((v157 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          v119 = v172;
          goto LABEL_113;
        }
      }
      if (v175)
      {
        if (!v165)
        {
LABEL_126:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v158 = v173;
LABEL_127:
          v116(v172, v115);
          v156 = v158;
          goto LABEL_128;
        }
        if ((v170 != v161 || v175 != v165) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_126;
        }
      }
      else if (v165)
      {
        goto LABEL_126;
      }
      if (v174 == v162 && v121 == v106)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v158 = v173;
      }
      else
      {
        char v159 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v158 = v173;
        if ((v159 & 1) == 0) {
          goto LABEL_127;
        }
      }
      v116(v172, v115);
      v116(v158, v115);
      v116(v114, v115);
      uint64_t v139 = v155;
      goto LABEL_51;
    case 5u:
      v182 = v37;
      sub_1004D8230((uint64_t)v37, (uint64_t)v19);
      uint64_t v122 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
      v124 = *(char **)&v19[v122];
      uint64_t v123 = *(void *)&v19[v122 + 8];
      uint64_t v126 = *(void *)&v19[v122 + 16];
      uint64_t v125 = *(void *)&v19[v122 + 24];
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v142 = (uint64_t)v179;
        v140 = *(void (**)(char *, uint64_t))(v178 + 8);
        v141 = v19;
        goto LABEL_58;
      }
      v127 = &v39[v122];
      v128 = *(char **)&v39[v122];
      uint64_t v129 = *(void *)&v39[v122 + 8];
      v176 = v128;
      uint64_t v180 = *((void *)v127 + 2);
      uint64_t v181 = v126;
      uint64_t v130 = *((void *)v127 + 3);
      v132 = v177;
      uint64_t v131 = v178;
      v133 = v179;
      (*(void (**)(char *, char *, char *))(v178 + 32))(v177, v39, v179);
      char v134 = static REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.== infix(_:_:)();
      v135 = v19;
      v136 = v133;
      v137 = *(void (**)(char *, char *))(v131 + 8);
      v137(v135, v136);
      if ((v134 & 1) == 0)
      {
        v137(v132, v136);
LABEL_66:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_68:
        uint64_t v145 = (uint64_t)v182;
        goto LABEL_94;
      }
      if (v123)
      {
        uint64_t v138 = v181;
        if (!v129)
        {
LABEL_91:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v147 = (uint64_t)v182;
          v149 = v177;
          goto LABEL_92;
        }
        if ((v124 != v176 || v123 != v129) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
        {
          swift_bridgeObjectRelease();
          goto LABEL_91;
        }
      }
      else
      {
        uint64_t v138 = v181;
        if (v129) {
          goto LABEL_91;
        }
      }
      if (v138 == v180 && v125 == v130)
      {
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (uint64_t)v182;
        v149 = v177;
      }
      else
      {
        char v154 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v147 = (uint64_t)v182;
        v149 = v177;
        if ((v154 & 1) == 0)
        {
LABEL_92:
          v137(v149, v136);
LABEL_93:
          uint64_t v145 = v147;
LABEL_94:
          sub_1004D9C30(v145);
          goto LABEL_95;
        }
      }
      v137(v149, v136);
      uint64_t v139 = v147;
LABEL_51:
      sub_1004D9C30(v139);
      char v41 = 1;
      return v41 & 1;
    case 6u:
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_60;
      }
      goto LABEL_50;
    case 7u:
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_60;
      }
      goto LABEL_50;
    case 8u:
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_60;
      }
LABEL_50:
      uint64_t v139 = (uint64_t)v37;
      goto LABEL_51;
    default:
      sub_1004D8230((uint64_t)v37, (uint64_t)v34);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_60;
      }
      char v40 = *v34 ^ *v39;
      sub_1004D9C30((uint64_t)v37);
      char v41 = v40 ^ 1;
      return v41 & 1;
  }
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV7DetailsV23__derived_struct_equalsySbAE_AEtFZ_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (!a2)
  {
    if (!a6)
    {
LABEL_9:
      if (a3 == a7 && a4 == a8) {
        return 1;
      }
      return _stringCompareWithSmolCheck(_:_:expecting:)();
    }
    return 0;
  }
  if (!a6) {
    return 0;
  }
  if (a1 == a5 && a2 == a6) {
    goto LABEL_9;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  uint64_t result = 0;
  if (v12) {
    goto LABEL_9;
  }
  return result;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV11TimeOptionsO4timeAE19ReminderKitInternal014REMCustomSmartcD10DescriptorC0dH0OSg_tcfC_0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100789F90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v15 - v10;
  sub_10003B694(a1, (uint64_t)v4, &qword_100789F90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10003B6F8(a1, &qword_100789F90);
    sub_10003B6F8((uint64_t)v4, &qword_100789F90);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  int v13 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.any(_:))
  {
    uint64_t v12 = 1;
LABEL_15:
    sub_10003B6F8(a1, &qword_100789F90);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    return v12;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.morning(_:))
  {
    uint64_t v12 = 2;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.afternoon(_:))
  {
    uint64_t v12 = 3;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.evening(_:))
  {
    uint64_t v12 = 4;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.night(_:))
  {
    uint64_t v12 = 5;
    goto LABEL_15;
  }
  if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterTime.noTime(_:))
  {
    uint64_t v12 = 6;
    goto LABEL_15;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO14priorityLevelsAESaySo011REMReminderH5LevelVGSg_tcfC_0(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    int v2 = sub_1000A2B48(0, result);
    char v3 = sub_1000A2B48(1, v1);
    int v4 = sub_1000A2B48(2, v1);
    int v5 = sub_1000A2B48(3, v1);
    swift_bridgeObjectRelease();
    if (v3)
    {
      if ((v4 & 1) == 0 && ((v2 | v5) & 1) == 0) {
        return 2;
      }
      return 1;
    }
    if (v2)
    {
      if (((v4 | v5) & 1) == 0) {
        return 5;
      }
      return 1;
    }
    if (v4)
    {
      if ((v5 & 1) == 0) {
        return 3;
      }
      return 1;
    }
    if (v5) {
      return 4;
    }
    else {
      return 0;
    }
  }
  return result;
}

double sub_1004D7FF0(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 153) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 169) = 2;
  return result;
}

uint64_t type metadata accessor for TTRSmartListFilterEditorViewModel(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A1290);
}

uint64_t sub_1004D8038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D809C(uint64_t result, uint64_t a2, void *a3, uint64_t a4, char a5, uint64_t a6)
{
  if (a6)
  {
    sub_1002464C8(result, a2, a3, a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004D80DC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 160);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    v4);
  return a1;
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV11DateOptionsO4BareO8rawValueAGSgSi_tcfC_0(unint64_t result)
{
  if (result >= 9) {
    return 9;
  }
  return result;
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV15PriorityOptionsO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 6) {
    return 6;
  }
  return result;
}

uint64_t sub_1004D8170(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  int v5 = *(void **)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  sub_100246478(*(void *)a1, v4, v5, v6, v7);
  *(void *)a2 = v3;
  *(void *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v5;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  return a2;
}

uint64_t sub_1004D81D4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004D8230(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D8294(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A11A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004D82FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004D8334(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004D8370()
{
  return sub_10003C868(&qword_1007A11B0, &qword_1007A11B8);
}

uint64_t sub_1004D839C()
{
  return sub_10003C868(&qword_1007A11C0, &qword_1007A11C8);
}

uint64_t sub_1004D83C8()
{
  return sub_10003C868(&qword_1007A11D0, &qword_1007A11D8);
}

uint64_t sub_1004D83F4()
{
  return sub_10003C868(&qword_1007A11E0, &qword_1007A11E8);
}

uint64_t sub_1004D8420()
{
  return sub_10003C868(&qword_1007A11F0, &qword_1007A11F8);
}

uint64_t sub_1004D844C()
{
  return sub_10003C868(&qword_1007A1200, &qword_1007A1208);
}

uint64_t sub_1004D8478()
{
  return sub_10003C868(&qword_1007A1210, &qword_1007A1218);
}

uint64_t sub_1004D84A4()
{
  return sub_10003C868(&qword_1007A1220, &qword_1007A1228);
}

unint64_t sub_1004D84D0()
{
  unint64_t result = qword_1007A1230;
  if (!qword_1007A1230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1230);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for TTRSmartListFilterEditorViewModel(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v18 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v11 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v8, v9, v11);
        uint64_t v12 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
        int v13 = &v8[v12];
        uint64_t v14 = &v9[v12];
        uint64_t v15 = *((void *)v14 + 1);
        *(void *)int v13 = *(void *)v14;
        *((void *)v13 + 1) = v15;
        uint64_t v16 = *((void *)v14 + 3);
        *((void *)v13 + 2) = *((void *)v14 + 2);
        *((void *)v13 + 3) = v16;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 4u:
        uint64_t v19 = type metadata accessor for Date();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
        v20(v8, v9, v19);
        uint64_t v21 = (int *)sub_10003B754(&qword_100792C08);
        v20(&v8[v21[12]], &v9[v21[12]], v19);
        uint64_t v22 = v21[16];
        uint64_t v23 = &v8[v22];
        uint64_t v24 = &v9[v22];
        uint64_t v25 = *((void *)v24 + 1);
        *(void *)uint64_t v23 = *(void *)v24;
        *((void *)v23 + 1) = v25;
        uint64_t v26 = *((void *)v24 + 3);
        *((void *)v23 + 2) = *((void *)v24 + 2);
        *((void *)v23 + 3) = v26;
        uint64_t v27 = v21[20];
        v28 = &v8[v27];
        uint64_t v29 = &v9[v27];
        uint64_t v30 = *((void *)v29 + 1);
        *(void *)v28 = *(void *)v29;
        *((void *)v28 + 1) = v30;
        uint64_t v31 = *((void *)v29 + 3);
        *((void *)v28 + 2) = *((void *)v29 + 2);
        *((void *)v28 + 3) = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_8;
      case 5u:
        uint64_t v32 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v8, v9, v32);
        uint64_t v33 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
        v34 = &v8[v33];
        uint64_t v35 = &v9[v33];
        uint64_t v36 = *((void *)v35 + 1);
        *(void *)v34 = *(void *)v35;
        *((void *)v34 + 1) = v36;
        uint64_t v37 = *((void *)v35 + 3);
        *((void *)v34 + 2) = *((void *)v35 + 2);
        *((void *)v34 + 3) = v37;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        break;
    }
    uint64_t v38 = a3[7];
    *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)a1 + v38) = *((unsigned char *)a2 + v38);
    uint64_t v39 = a3[8];
    char v40 = (char *)a1 + v39;
    char v41 = (char *)a2 + v39;
    if (*(void *)((char *)a2 + v39 + 40))
    {
      uint64_t v42 = *(void *)v41;
      uint64_t v43 = *((void *)v41 + 1);
      v44 = (void *)*((void *)v41 + 2);
      uint64_t v45 = *((void *)v41 + 3);
      char v46 = v41[32];
      sub_100246478(*(void *)v41, v43, v44, v45, v46);
      *(void *)char v40 = v42;
      *((void *)v40 + 1) = v43;
      *((void *)v40 + 2) = v44;
      *((void *)v40 + 3) = v45;
      v40[32] = v46;
      *((void *)v40 + 5) = *((void *)v41 + 5);
      v40[48] = v41[48];
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v47 = *((_OWORD *)v41 + 1);
      *(_OWORD *)char v40 = *(_OWORD *)v41;
      *((_OWORD *)v40 + 1) = v47;
      *((_OWORD *)v40 + 2) = *((_OWORD *)v41 + 2);
      v40[48] = v41[48];
    }
    uint64_t v48 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)a1 + v48) = *((unsigned char *)a2 + v48);
    uint64_t v49 = a3[11];
    uint64_t v50 = (char *)a1 + v49;
    uint64_t v51 = (char *)a2 + v49;
    uint64_t v52 = *((void *)v51 + 2);
    v53 = (void *)*((void *)v51 + 3);
    uint64_t v76 = a3;
    uint64_t v77 = a2;
    v78 = a1;
    uint64_t v62 = *((void *)v51 + 9);
    uint64_t v63 = *((void *)v51 + 10);
    uint64_t v64 = *((void *)v51 + 11);
    v65 = (void *)*((void *)v51 + 12);
    uint64_t v66 = *((void *)v51 + 13);
    uint64_t v67 = *((void *)v51 + 14);
    uint64_t v68 = *((void *)v51 + 15);
    uint64_t v69 = *((void *)v51 + 16);
    uint64_t v70 = *((void *)v51 + 17);
    uint64_t v71 = *((void *)v51 + 18);
    v72 = (void *)*((void *)v51 + 19);
    uint64_t v73 = (void *)*((void *)v51 + 20);
    char v74 = v51[168];
    unsigned __int8 v75 = v51[169];
    uint64_t v54 = *((void *)v51 + 8);
    v55 = *(void **)v51;
    uint64_t v56 = *((void *)v51 + 1);
    uint64_t v57 = *((void *)v51 + 4);
    uint64_t v58 = *((void *)v51 + 5);
    uint64_t v59 = *((void *)v51 + 6);
    uint64_t v60 = *((void *)v51 + 7);
    sub_1004D8AF8(*(void **)v51, v56, v52, v53, v57, v58, v59, v60, v54, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71,
      v72,
      v73,
      v74,
      v75);
    *(void *)uint64_t v50 = v55;
    *((void *)v50 + 1) = v56;
    *((void *)v50 + 2) = v52;
    *((void *)v50 + 3) = v53;
    *((void *)v50 + 4) = v57;
    *((void *)v50 + 5) = v58;
    *((void *)v50 + 6) = v59;
    *((void *)v50 + 7) = v60;
    *((void *)v50 + 8) = v54;
    uint64_t v18 = v78;
    *((void *)v50 + 9) = v62;
    *((void *)v50 + 10) = v63;
    *((void *)v50 + 11) = v64;
    *((void *)v50 + 12) = v65;
    *((void *)v50 + 13) = v66;
    *((void *)v50 + 14) = v67;
    *((void *)v50 + 15) = v68;
    *((void *)v50 + 16) = v69;
    *((void *)v50 + 17) = v70;
    *((void *)v50 + 18) = v71;
    *((void *)v50 + 19) = v72;
    *((void *)v50 + 20) = v73;
    v50[168] = v74;
    v50[169] = v75;
    *((unsigned char *)v78 + v76[12]) = *((unsigned char *)v77 + v76[12]);
  }
  return v18;
}

void sub_1004D8AF8(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20,void *a21,char a22,unsigned __int8 a23)
{
  if (a23 <= 1u)
  {
    id v27 = a1;
    sub_1004D29C0(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

void destroy for TTRSmartListFilterEditorViewModel(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v5 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      uint64_t v6 = &qword_100792C10;
      goto LABEL_5;
    case 4u:
      uint64_t v7 = type metadata accessor for Date();
      uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      v8(v4, v7);
      uint64_t v9 = sub_10003B754(&qword_100792C08);
      v8(v4 + *(int *)(v9 + 48), v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 5u:
      uint64_t v10 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v4, v10);
      uint64_t v6 = &qword_100792C00;
LABEL_5:
      sub_10003B754(v6);
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  uint64_t v11 = a1 + a2[8];
  if (*(void *)(v11 + 40))
  {
    sub_1002464C8(*(void *)v11, *(void *)(v11 + 8), *(void **)(v11 + 16), *(void *)(v11 + 24), *(unsigned char *)(v11 + 32));
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = a1 + a2[11];
  sub_1004D8E7C(*(void **)v12, *(void *)(v12 + 8), *(void *)(v12 + 16), *(void **)(v12 + 24), *(void *)(v12 + 32), *(void *)(v12 + 40), *(void *)(v12 + 48), *(void *)(v12 + 56), *(void *)(v12 + 64), *(void *)(v12 + 72), *(void *)(v12 + 80), *(void *)(v12 + 88), *(void **)(v12 + 96), *(void *)(v12 + 104), *(void *)(v12 + 112), *(void *)(v12 + 120), *(void *)(v12 + 128), *(void *)(v12 + 136), *(_OWORD *)(v12 + 144),
    *(void **)(v12 + 152),
    *(void **)(v12 + 160),
    *(_WORD *)(v12 + 168),
    HIBYTE(*(_WORD *)(v12 + 168)));
}

void sub_1004D8E7C(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, char a19, void *a20,void *a21,char a22,unsigned __int8 a23)
{
  if (a23 <= 1u)
  {

    sub_100246354(a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22);
  }
}

unsigned char *initializeWithCopy for TTRSmartListFilterEditorViewModel(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
      uint64_t v11 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      uint64_t v12 = &v7[v11];
      int v13 = &v8[v11];
      uint64_t v14 = *((void *)v13 + 1);
      *(void *)uint64_t v12 = *(void *)v13;
      *((void *)v12 + 1) = v14;
      uint64_t v15 = *((void *)v13 + 3);
      *((void *)v12 + 2) = *((void *)v13 + 2);
      *((void *)v12 + 3) = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4u:
      uint64_t v16 = type metadata accessor for Date();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(v7, v8, v16);
      uint64_t v18 = (int *)sub_10003B754(&qword_100792C08);
      v17(&v7[v18[12]], &v8[v18[12]], v16);
      uint64_t v19 = v18[16];
      uint64_t v20 = &v7[v19];
      uint64_t v21 = &v8[v19];
      uint64_t v22 = *((void *)v21 + 1);
      *(void *)uint64_t v20 = *(void *)v21;
      *((void *)v20 + 1) = v22;
      uint64_t v23 = *((void *)v21 + 3);
      *((void *)v20 + 2) = *((void *)v21 + 2);
      *((void *)v20 + 3) = v23;
      uint64_t v24 = v18[20];
      uint64_t v25 = &v7[v24];
      uint64_t v26 = &v8[v24];
      uint64_t v27 = *((void *)v26 + 1);
      *(void *)uint64_t v25 = *(void *)v26;
      *((void *)v25 + 1) = v27;
      uint64_t v28 = *((void *)v26 + 3);
      *((void *)v25 + 2) = *((void *)v26 + 2);
      *((void *)v25 + 3) = v28;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      uint64_t v29 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v7, v8, v29);
      uint64_t v30 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
      uint64_t v31 = &v7[v30];
      uint64_t v32 = &v8[v30];
      uint64_t v33 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = *(void *)v32;
      *((void *)v31 + 1) = v33;
      uint64_t v34 = *((void *)v32 + 3);
      *((void *)v31 + 2) = *((void *)v32 + 2);
      *((void *)v31 + 3) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  uint64_t v35 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v35] = a2[v35];
  uint64_t v36 = a3[8];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  if (*(void *)&a2[v36 + 40])
  {
    uint64_t v39 = *(void *)v38;
    uint64_t v40 = *((void *)v38 + 1);
    char v41 = (void *)*((void *)v38 + 2);
    uint64_t v42 = *((void *)v38 + 3);
    char v43 = v38[32];
    sub_100246478(*(void *)v38, v40, v41, v42, v43);
    *(void *)uint64_t v37 = v39;
    *((void *)v37 + 1) = v40;
    *((void *)v37 + 2) = v41;
    *((void *)v37 + 3) = v42;
    v37[32] = v43;
    *((void *)v37 + 5) = *((void *)v38 + 5);
    v37[48] = v38[48];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *((_OWORD *)v38 + 1);
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    *((_OWORD *)v37 + 1) = v44;
    *((_OWORD *)v37 + 2) = *((_OWORD *)v38 + 2);
    v37[48] = v38[48];
  }
  uint64_t v45 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v45] = a2[v45];
  uint64_t v46 = a3[11];
  long long v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  uint64_t v49 = *((void *)v48 + 2);
  uint64_t v50 = (void *)*((void *)v48 + 3);
  char v74 = a3;
  unsigned __int8 v75 = a2;
  uint64_t v73 = a1;
  uint64_t v59 = *((void *)v48 + 9);
  uint64_t v60 = *((void *)v48 + 10);
  uint64_t v61 = *((void *)v48 + 11);
  uint64_t v62 = (void *)*((void *)v48 + 12);
  uint64_t v63 = *((void *)v48 + 13);
  uint64_t v64 = *((void *)v48 + 14);
  uint64_t v65 = *((void *)v48 + 15);
  uint64_t v66 = *((void *)v48 + 16);
  uint64_t v67 = *((void *)v48 + 17);
  uint64_t v68 = *((void *)v48 + 18);
  uint64_t v69 = (void *)*((void *)v48 + 19);
  uint64_t v70 = (void *)*((void *)v48 + 20);
  char v71 = v48[168];
  unsigned __int8 v72 = v48[169];
  uint64_t v51 = *((void *)v48 + 8);
  uint64_t v52 = *(void **)v48;
  uint64_t v53 = *((void *)v48 + 1);
  uint64_t v54 = *((void *)v48 + 4);
  uint64_t v55 = *((void *)v48 + 5);
  uint64_t v56 = *((void *)v48 + 6);
  uint64_t v57 = *((void *)v48 + 7);
  sub_1004D8AF8(*(void **)v48, v53, v49, v50, v54, v55, v56, v57, v51, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68,
    v69,
    v70,
    v71,
    v72);
  *(void *)long long v47 = v52;
  *((void *)v47 + 1) = v53;
  *((void *)v47 + 2) = v49;
  *((void *)v47 + 3) = v50;
  *((void *)v47 + 4) = v54;
  *((void *)v47 + 5) = v55;
  *((void *)v47 + 6) = v56;
  *((void *)v47 + 7) = v57;
  *((void *)v47 + 8) = v51;
  *((void *)v47 + 9) = v59;
  *((void *)v47 + 10) = v60;
  *((void *)v47 + 11) = v61;
  *((void *)v47 + 12) = v62;
  *((void *)v47 + 13) = v63;
  *((void *)v47 + 14) = v64;
  *((void *)v47 + 15) = v65;
  *((void *)v47 + 16) = v66;
  *((void *)v47 + 17) = v67;
  *((void *)v47 + 18) = v68;
  *((void *)v47 + 19) = v69;
  *((void *)v47 + 20) = v70;
  v47[168] = v71;
  v47[169] = v72;
  unint64_t result = v73;
  v73[v74[12]] = v75[v74[12]];
  return result;
}

unsigned char *assignWithCopy for TTRSmartListFilterEditorViewModel(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    sub_1004D9C30((uint64_t)&a1[v6]);
    uint64_t v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v10 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v8, v10);
        uint64_t v11 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
        uint64_t v12 = &v7[v11];
        int v13 = &v8[v11];
        *(void *)uint64_t v12 = *(void *)v13;
        *((void *)v12 + 1) = *((void *)v13 + 1);
        *((void *)v12 + 2) = *((void *)v13 + 2);
        *((void *)v12 + 3) = *((void *)v13 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 4u:
        uint64_t v14 = type metadata accessor for Date();
        uint64_t v15 = v3;
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        v16(v7, v8, v14);
        uint64_t v17 = (int *)sub_10003B754(&qword_100792C08);
        v16(&v7[v17[12]], &v8[v17[12]], v14);
        uint64_t v3 = v15;
        uint64_t v18 = v17[16];
        uint64_t v19 = &v7[v18];
        uint64_t v20 = &v8[v18];
        *(void *)uint64_t v19 = *(void *)v20;
        *((void *)v19 + 1) = *((void *)v20 + 1);
        *((void *)v19 + 2) = *((void *)v20 + 2);
        *((void *)v19 + 3) = *((void *)v20 + 3);
        uint64_t v21 = v17[20];
        uint64_t v22 = &v7[v21];
        uint64_t v23 = &v8[v21];
        *(void *)uint64_t v22 = *(void *)v23;
        *((void *)v22 + 1) = *((void *)v23 + 1);
        *((void *)v22 + 2) = *((void *)v23 + 2);
        *((void *)v22 + 3) = *((void *)v23 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        uint64_t v24 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v7, v8, v24);
        uint64_t v25 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
        uint64_t v26 = &v7[v25];
        uint64_t v27 = &v8[v25];
        *(void *)uint64_t v26 = *(void *)v27;
        *((void *)v26 + 1) = *((void *)v27 + 1);
        *((void *)v26 + 2) = *((void *)v27 + 2);
        *((void *)v26 + 3) = *((void *)v27 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  a1[v3[6]] = a2[v3[6]];
  a1[v3[7]] = a2[v3[7]];
  uint64_t v28 = v3[8];
  uint64_t v29 = (uint64_t)&a1[v28];
  uint64_t v30 = &a2[v28];
  uint64_t v31 = *(void *)&a1[v28 + 40];
  uint64_t v32 = *(void *)&a2[v28 + 40];
  if (v31)
  {
    if (v32)
    {
      uint64_t v33 = *(void *)v30;
      uint64_t v34 = *((void *)v30 + 1);
      uint64_t v35 = (void *)*((void *)v30 + 2);
      uint64_t v36 = *((void *)v30 + 3);
      char v37 = v30[32];
      sub_100246478(*(void *)v30, v34, v35, v36, v37);
      uint64_t v38 = *(void *)v29;
      uint64_t v39 = *(void *)(v29 + 8);
      uint64_t v40 = *(void **)(v29 + 16);
      uint64_t v41 = *(void *)(v29 + 24);
      *(void *)uint64_t v29 = v33;
      *(void *)(v29 + 8) = v34;
      *(void *)(v29 + 16) = v35;
      *(void *)(v29 + 24) = v36;
      char v42 = *(unsigned char *)(v29 + 32);
      *(unsigned char *)(v29 + 32) = v37;
      sub_1002464C8(v38, v39, v40, v41, v42);
      *(void *)(v29 + 40) = *((void *)v30 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v29 + 48) = v30[48];
    }
    else
    {
      sub_1004D9C8C(v29);
      long long v49 = *((_OWORD *)v30 + 1);
      long long v48 = *((_OWORD *)v30 + 2);
      long long v50 = *(_OWORD *)v30;
      *(unsigned char *)(v29 + 48) = v30[48];
      *(_OWORD *)(v29 + 16) = v49;
      *(_OWORD *)(v29 + 32) = v48;
      *(_OWORD *)uint64_t v29 = v50;
    }
  }
  else if (v32)
  {
    uint64_t v43 = *(void *)v30;
    uint64_t v44 = *((void *)v30 + 1);
    uint64_t v45 = (void *)*((void *)v30 + 2);
    uint64_t v46 = *((void *)v30 + 3);
    char v47 = v30[32];
    sub_100246478(*(void *)v30, v44, v45, v46, v47);
    *(void *)uint64_t v29 = v43;
    *(void *)(v29 + 8) = v44;
    *(void *)(v29 + 16) = v45;
    *(void *)(v29 + 24) = v46;
    *(unsigned char *)(v29 + 32) = v47;
    *(void *)(v29 + 40) = *((void *)v30 + 5);
    *(unsigned char *)(v29 + 48) = v30[48];
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v51 = *(_OWORD *)v30;
    long long v52 = *((_OWORD *)v30 + 1);
    long long v53 = *((_OWORD *)v30 + 2);
    *(unsigned char *)(v29 + 48) = v30[48];
    *(_OWORD *)(v29 + 16) = v52;
    *(_OWORD *)(v29 + 32) = v53;
    *(_OWORD *)uint64_t v29 = v51;
  }
  a1[v3[9]] = a2[v3[9]];
  a1[v3[10]] = a2[v3[10]];
  uint64_t v54 = v3[11];
  uint64_t v55 = &a1[v54];
  uint64_t v56 = &a2[v54];
  uint64_t v57 = *(void **)v56;
  uint64_t v58 = *((void *)v56 + 1);
  uint64_t v59 = *((void *)v56 + 2);
  uint64_t v60 = (void *)*((void *)v56 + 3);
  uint64_t v98 = a2;
  uint64_t v99 = a1;
  uint64_t v61 = *((void *)v56 + 4);
  uint64_t v62 = *((void *)v56 + 5);
  uint64_t v64 = *((void *)v56 + 6);
  uint64_t v63 = *((void *)v56 + 7);
  v97 = v3;
  uint64_t v65 = *((void *)v56 + 8);
  uint64_t v83 = *((void *)v56 + 9);
  uint64_t v84 = *((void *)v56 + 10);
  uint64_t v85 = *((void *)v56 + 11);
  uint64_t v86 = (void *)*((void *)v56 + 12);
  uint64_t v87 = *((void *)v56 + 13);
  uint64_t v88 = *((void *)v56 + 14);
  uint64_t v89 = *((void *)v56 + 15);
  uint64_t v90 = *((void *)v56 + 16);
  uint64_t v91 = *((void *)v56 + 17);
  uint64_t v92 = *((void *)v56 + 18);
  v93 = (void *)*((void *)v56 + 19);
  uint64_t v94 = (void *)*((void *)v56 + 20);
  char v95 = v56[168];
  unsigned __int8 v96 = v56[169];
  sub_1004D8AF8(*(void **)v56, v58, v59, v60, v61, v62, v64, v63, v65, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92,
    v93,
    v94,
    v95,
    v96);
  uint64_t v66 = *(void **)v55;
  uint64_t v67 = *((void *)v55 + 1);
  *(void *)uint64_t v55 = v57;
  *((void *)v55 + 1) = v58;
  uint64_t v68 = *((void *)v55 + 2);
  uint64_t v69 = (void *)*((void *)v55 + 3);
  *((void *)v55 + 2) = v59;
  *((void *)v55 + 3) = v60;
  uint64_t v70 = *((void *)v55 + 4);
  uint64_t v71 = *((void *)v55 + 5);
  *((void *)v55 + 4) = v61;
  *((void *)v55 + 5) = v62;
  uint64_t v72 = *((void *)v55 + 6);
  uint64_t v73 = *((void *)v55 + 7);
  *((void *)v55 + 6) = v64;
  *((void *)v55 + 7) = v63;
  long long v74 = *((_OWORD *)v55 + 4);
  long long v75 = *((_OWORD *)v55 + 5);
  *((void *)v55 + 8) = v65;
  *((void *)v55 + 9) = v83;
  *((void *)v55 + 10) = v84;
  *((void *)v55 + 11) = v85;
  long long v76 = *((_OWORD *)v55 + 6);
  long long v77 = *((_OWORD *)v55 + 7);
  *((void *)v55 + 12) = v86;
  *((void *)v55 + 13) = v87;
  *((void *)v55 + 14) = v88;
  *((void *)v55 + 15) = v89;
  long long v78 = *((_OWORD *)v55 + 8);
  long long v79 = *((_OWORD *)v55 + 9);
  *((void *)v55 + 16) = v90;
  *((void *)v55 + 17) = v91;
  *((void *)v55 + 18) = v92;
  *((void *)v55 + 19) = v93;
  v80 = (void *)*((void *)v55 + 20);
  *((void *)v55 + 20) = v94;
  __int16 v81 = *((_WORD *)v55 + 84);
  v55[168] = v95;
  v55[169] = v96;
  sub_1004D8E7C(v66, v67, v68, v69, v70, v71, v72, v73, v74, SBYTE8(v74), v75, *((uint64_t *)&v75 + 1), (void *)v76, *((uint64_t *)&v76 + 1), v77, *((uint64_t *)&v77 + 1), v78, *((uint64_t *)&v78 + 1), v79,
    *((void **)&v79 + 1),
    v80,
    v81,
    HIBYTE(v81));
  unint64_t result = v99;
  v99[v97[12]] = v98[v97[12]];
  return result;
}

uint64_t sub_1004D9C30(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004D9C8C(uint64_t a1)
{
  return a1;
}

unsigned char *initializeWithTake for TTRSmartListFilterEditorViewModel(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v10 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      uint64_t v11 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      uint64_t v12 = &v7[v11];
      int v13 = &v8[v11];
      long long v14 = *((_OWORD *)v13 + 1);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
      *((_OWORD *)v12 + 1) = v14;
      goto LABEL_6;
    case 4u:
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(v7, v8, v15);
      uint64_t v17 = (int *)sub_10003B754(&qword_100792C08);
      v16(&v7[v17[12]], &v8[v17[12]], v15);
      uint64_t v18 = v17[16];
      uint64_t v19 = &v7[v18];
      uint64_t v20 = &v8[v18];
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      uint64_t v22 = v17[20];
      uint64_t v23 = &v7[v22];
      uint64_t v24 = &v8[v22];
      long long v25 = *((_OWORD *)v24 + 1);
      *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
      *((_OWORD *)v23 + 1) = v25;
      goto LABEL_6;
    case 5u:
      uint64_t v26 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v7, v8, v26);
      uint64_t v27 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
      uint64_t v28 = &v7[v27];
      uint64_t v29 = &v8[v27];
      long long v30 = *((_OWORD *)v29 + 1);
      *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
      *((_OWORD *)v28 + 1) = v30;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
      break;
  }
  uint64_t v31 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[8];
  uint64_t v33 = a3[9];
  uint64_t v34 = &a1[v32];
  uint64_t v35 = &a2[v32];
  long long v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  *((_OWORD *)v34 + 2) = *((_OWORD *)v35 + 2);
  v34[48] = v35[48];
  a1[v33] = a2[v33];
  uint64_t v37 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  uint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  long long v40 = v39[1];
  *uint64_t v38 = *v39;
  v38[1] = v40;
  long long v41 = v39[5];
  v38[4] = v39[4];
  v38[5] = v41;
  long long v42 = v39[3];
  v38[2] = v39[2];
  v38[3] = v42;
  *(_OWORD *)((char *)v38 + 154) = *(_OWORD *)((char *)v39 + 154);
  long long v43 = v39[9];
  v38[8] = v39[8];
  v38[9] = v43;
  long long v44 = v39[7];
  v38[6] = v39[6];
  v38[7] = v44;
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

unsigned char *assignWithTake for TTRSmartListFilterEditorViewModel(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = &a1[v6];
    uint64_t v8 = &a2[v6];
    sub_1004D9C30((uint64_t)&a1[v6]);
    uint64_t v9 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v10 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
        uint64_t v11 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
        uint64_t v12 = &v7[v11];
        int v13 = &v8[v11];
        long long v14 = *((_OWORD *)v13 + 1);
        *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
        *((_OWORD *)v12 + 1) = v14;
        goto LABEL_7;
      case 4u:
        uint64_t v15 = type metadata accessor for Date();
        uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
        v16(v7, v8, v15);
        uint64_t v17 = (int *)sub_10003B754(&qword_100792C08);
        v16(&v7[v17[12]], &v8[v17[12]], v15);
        uint64_t v18 = v17[16];
        uint64_t v19 = &v7[v18];
        uint64_t v20 = &v8[v18];
        long long v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        uint64_t v22 = v17[20];
        uint64_t v23 = &v7[v22];
        uint64_t v24 = &v8[v22];
        long long v25 = *((_OWORD *)v24 + 1);
        *(_OWORD *)uint64_t v23 = *(_OWORD *)v24;
        *((_OWORD *)v23 + 1) = v25;
        goto LABEL_7;
      case 5u:
        uint64_t v26 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v7, v8, v26);
        uint64_t v27 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
        uint64_t v28 = &v7[v27];
        uint64_t v29 = &v8[v27];
        long long v30 = *((_OWORD *)v29 + 1);
        *(_OWORD *)uint64_t v28 = *(_OWORD *)v29;
        *((_OWORD *)v28 + 1) = v30;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
  }
  uint64_t v31 = a3[7];
  a1[a3[6]] = a2[a3[6]];
  a1[v31] = a2[v31];
  uint64_t v32 = a3[8];
  uint64_t v33 = (uint64_t)&a1[v32];
  uint64_t v34 = &a2[v32];
  if (!*(void *)&a1[v32 + 40]) {
    goto LABEL_12;
  }
  if (!*((void *)v34 + 5))
  {
    sub_1004D9C8C(v33);
LABEL_12:
    long long v42 = *((_OWORD *)v34 + 1);
    *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    *(_OWORD *)(v33 + 16) = v42;
    *(_OWORD *)(v33 + 32) = *((_OWORD *)v34 + 2);
    goto LABEL_13;
  }
  char v35 = v34[32];
  uint64_t v36 = *(void *)v33;
  uint64_t v37 = *(void *)(v33 + 8);
  uint64_t v38 = *(void **)(v33 + 16);
  uint64_t v39 = *(void *)(v33 + 24);
  long long v40 = *((_OWORD *)v34 + 1);
  *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
  *(_OWORD *)(v33 + 16) = v40;
  char v41 = *(unsigned char *)(v33 + 32);
  *(unsigned char *)(v33 + 32) = v35;
  sub_1002464C8(v36, v37, v38, v39, v41);
  *(void *)(v33 + 40) = *((void *)v34 + 5);
  swift_bridgeObjectRelease();
LABEL_13:
  *(unsigned char *)(v33 + 48) = v34[48];
  uint64_t v43 = a3[10];
  a1[a3[9]] = a2[a3[9]];
  a1[v43] = a2[v43];
  uint64_t v44 = a3[11];
  uint64_t v45 = &a1[v44];
  uint64_t v46 = &a2[v44];
  uint64_t v47 = *((void *)v46 + 20);
  __int16 v48 = *((_WORD *)v46 + 84);
  long long v49 = *(void **)v45;
  uint64_t v50 = *((void *)v45 + 1);
  uint64_t v51 = *((void *)v45 + 2);
  long long v52 = (void *)*((void *)v45 + 3);
  uint64_t v53 = *((void *)v45 + 4);
  uint64_t v54 = *((void *)v45 + 5);
  uint64_t v55 = *((void *)v45 + 6);
  uint64_t v56 = *((void *)v45 + 7);
  long long v57 = *((_OWORD *)v45 + 4);
  long long v58 = *((_OWORD *)v45 + 5);
  long long v59 = *((_OWORD *)v45 + 6);
  long long v60 = *((_OWORD *)v45 + 7);
  long long v61 = *((_OWORD *)v45 + 8);
  long long v62 = *((_OWORD *)v45 + 9);
  uint64_t v63 = (void *)*((void *)v45 + 20);
  __int16 v64 = *((_WORD *)v45 + 84);
  long long v65 = *((_OWORD *)v46 + 1);
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  *((_OWORD *)v45 + 1) = v65;
  long long v66 = *((_OWORD *)v46 + 3);
  *((_OWORD *)v45 + 2) = *((_OWORD *)v46 + 2);
  *((_OWORD *)v45 + 3) = v66;
  long long v67 = *((_OWORD *)v46 + 5);
  *((_OWORD *)v45 + 4) = *((_OWORD *)v46 + 4);
  *((_OWORD *)v45 + 5) = v67;
  long long v68 = *((_OWORD *)v46 + 7);
  *((_OWORD *)v45 + 6) = *((_OWORD *)v46 + 6);
  *((_OWORD *)v45 + 7) = v68;
  long long v69 = *((_OWORD *)v46 + 9);
  *((_OWORD *)v45 + 8) = *((_OWORD *)v46 + 8);
  *((_OWORD *)v45 + 9) = v69;
  *((void *)v45 + 20) = v47;
  *((_WORD *)v45 + 84) = v48;
  sub_1004D8E7C(v49, v50, v51, v52, v53, v54, v55, v56, v57, SBYTE8(v57), v58, *((uint64_t *)&v58 + 1), (void *)v59, *((uint64_t *)&v59 + 1), v60, *((uint64_t *)&v60 + 1), v61, *((uint64_t *)&v61 + 1), v62,
    *((void **)&v62 + 1),
    v63,
    v64,
    HIBYTE(v64));
  a1[a3[12]] = a2[a3[12]];
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004DA4FC);
}

uint64_t sub_1004DA4FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32) + 40);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004DA5E4);
}

uint64_t sub_1004DA5E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32) + 40) = a2;
  }
  return result;
}

uint64_t sub_1004DA6A8()
{
  uint64_t result = type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TTRIBoardColumnSelectionRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TTRSmartListFilterEditorViewModel.Details(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TTRSmartListFilterEditorViewModel.Details(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for TTRSmartListFilterEditorViewModel.Details(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.Details(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.Details(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.Details()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.Details;
}

unsigned char *storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.FilterOperationOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DAA0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.FilterOperationOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.FilterOperationOptions;
}

unsigned char *storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.HashtagOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DAB10);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.HashtagOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.HashtagOptions;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v7 = type metadata accessor for Date();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
        uint64_t v9 = (uint64_t *)((char *)a1 + v8);
        uint64_t v10 = (uint64_t *)((char *)a2 + v8);
        uint64_t v11 = v10[1];
        *uint64_t v9 = *v10;
        v9[1] = v11;
        uint64_t v12 = v10[3];
        v9[2] = v10[2];
        v9[3] = v12;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v15 = type metadata accessor for Date();
        uint64_t v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16);
        v16(a1, a2, v15);
        uint64_t v17 = (int *)sub_10003B754(&qword_100792C08);
        v16((uint64_t *)((char *)a1 + v17[12]), (uint64_t *)((char *)a2 + v17[12]), v15);
        uint64_t v18 = v17[16];
        uint64_t v19 = (uint64_t *)((char *)a1 + v18);
        uint64_t v20 = (uint64_t *)((char *)a2 + v18);
        uint64_t v21 = v20[1];
        *uint64_t v19 = *v20;
        v19[1] = v21;
        uint64_t v22 = v20[3];
        v19[2] = v20[2];
        v19[3] = v22;
        uint64_t v23 = v17[20];
        uint64_t v24 = (uint64_t *)((char *)a1 + v23);
        long long v25 = (uint64_t *)((char *)a2 + v23);
        uint64_t v26 = v25[1];
        void *v24 = *v25;
        v24[1] = v26;
        uint64_t v27 = v25[3];
        v24[2] = v25[2];
        v24[3] = v27;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v28 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v28 - 8) + 16))(a1, a2, v28);
        uint64_t v29 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
        long long v30 = (uint64_t *)((char *)a1 + v29);
        uint64_t v31 = (uint64_t *)((char *)a2 + v29);
        uint64_t v32 = v31[1];
        *long long v30 = *v31;
        v30[1] = v32;
        uint64_t v33 = v31[3];
        v30[2] = v31[2];
        v30[3] = v33;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
    case 2:
    case 3:
      uint64_t v3 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      unsigned int v4 = &qword_100792C10;
      goto LABEL_5;
    case 4:
      uint64_t v5 = type metadata accessor for Date();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(a1, v5);
      uint64_t v7 = sub_10003B754(&qword_100792C08);
      v6(a1 + *(int *)(v7 + 48), v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    case 5:
      uint64_t v8 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      unsigned int v4 = &qword_100792C00;
LABEL_5:
      sub_10003B754(v4);
LABEL_6:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = *((void *)v9 + 1);
      *(void *)uint64_t v8 = *(void *)v9;
      *((void *)v8 + 1) = v10;
      uint64_t v11 = *((void *)v9 + 3);
      *((void *)v8 + 2) = *((void *)v9 + 2);
      *((void *)v8 + 3) = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 4u:
      uint64_t v12 = type metadata accessor for Date();
      uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
      v13(a1, a2, v12);
      long long v14 = (int *)sub_10003B754(&qword_100792C08);
      v13(&a1[v14[12]], &a2[v14[12]], v12);
      uint64_t v15 = v14[16];
      uint64_t v16 = &a1[v15];
      uint64_t v17 = &a2[v15];
      uint64_t v18 = *((void *)v17 + 1);
      *(void *)uint64_t v16 = *(void *)v17;
      *((void *)v16 + 1) = v18;
      uint64_t v19 = *((void *)v17 + 3);
      *((void *)v16 + 2) = *((void *)v17 + 2);
      *((void *)v16 + 3) = v19;
      uint64_t v20 = v14[20];
      uint64_t v21 = &a1[v20];
      uint64_t v22 = &a2[v20];
      uint64_t v23 = *((void *)v22 + 1);
      *(void *)uint64_t v21 = *(void *)v22;
      *((void *)v21 + 1) = v23;
      uint64_t v24 = *((void *)v22 + 3);
      *((void *)v21 + 2) = *((void *)v22 + 2);
      *((void *)v21 + 3) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_6;
    case 5u:
      uint64_t v25 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
      uint64_t v26 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
      uint64_t v27 = &a1[v26];
      uint64_t v28 = &a2[v26];
      uint64_t v29 = *((void *)v28 + 1);
      *(void *)uint64_t v27 = *(void *)v28;
      *((void *)v27 + 1) = v29;
      uint64_t v30 = *((void *)v28 + 3);
      *((void *)v27 + 2) = *((void *)v28 + 2);
      *((void *)v27 + 3) = v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004D9C30((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        *(void *)uint64_t v8 = *(void *)v9;
        *((void *)v8 + 1) = *((void *)v9 + 1);
        *((void *)v8 + 2) = *((void *)v9 + 2);
        *((void *)v8 + 3) = *((void *)v9 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 4u:
        uint64_t v10 = type metadata accessor for Date();
        uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
        v11(a1, a2, v10);
        uint64_t v12 = (int *)sub_10003B754(&qword_100792C08);
        v11(&a1[v12[12]], &a2[v12[12]], v10);
        uint64_t v13 = v12[16];
        long long v14 = &a1[v13];
        uint64_t v15 = &a2[v13];
        *(void *)long long v14 = *(void *)v15;
        *((void *)v14 + 1) = *((void *)v15 + 1);
        *((void *)v14 + 2) = *((void *)v15 + 2);
        *((void *)v14 + 3) = *((void *)v15 + 3);
        uint64_t v16 = v12[20];
        uint64_t v17 = &a1[v16];
        uint64_t v18 = &a2[v16];
        *(void *)uint64_t v17 = *(void *)v18;
        *((void *)v17 + 1) = *((void *)v18 + 1);
        *((void *)v17 + 2) = *((void *)v18 + 2);
        *((void *)v17 + 3) = *((void *)v18 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_7;
      case 5u:
        uint64_t v19 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
        uint64_t v20 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
        uint64_t v21 = &a1[v20];
        uint64_t v22 = &a2[v20];
        *(void *)uint64_t v21 = *(void *)v22;
        *((void *)v21 + 1) = *((void *)v22 + 1);
        *((void *)v21 + 2) = *((void *)v22 + 2);
        *((void *)v21 + 3) = *((void *)v22 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

char *initializeWithTake for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
    case 3u:
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      long long v10 = *((_OWORD *)v9 + 1);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
      *((_OWORD *)v8 + 1) = v10;
      goto LABEL_6;
    case 4u:
      uint64_t v11 = type metadata accessor for Date();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
      v12(a1, a2, v11);
      uint64_t v13 = (int *)sub_10003B754(&qword_100792C08);
      v12(&a1[v13[12]], &a2[v13[12]], v11);
      uint64_t v14 = v13[16];
      uint64_t v15 = &a1[v14];
      uint64_t v16 = &a2[v14];
      long long v17 = *((_OWORD *)v16 + 1);
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
      *((_OWORD *)v15 + 1) = v17;
      uint64_t v18 = v13[20];
      uint64_t v19 = &a1[v18];
      uint64_t v20 = &a2[v18];
      long long v21 = *((_OWORD *)v20 + 1);
      *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
      *((_OWORD *)v19 + 1) = v21;
      goto LABEL_6;
    case 5u:
      uint64_t v22 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
      uint64_t v23 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
      uint64_t v24 = &a1[v23];
      uint64_t v25 = &a2[v23];
      long long v26 = *((_OWORD *)v25 + 1);
      *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
      *((_OWORD *)v24 + 1) = v26;
LABEL_6:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithTake for TTRSmartListFilterEditorViewModel.DateOptions(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004D9C30((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
      case 3u:
        uint64_t v6 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = *(int *)(sub_10003B754(&qword_100792C10) + 48);
        uint64_t v8 = &a1[v7];
        uint64_t v9 = &a2[v7];
        long long v10 = *((_OWORD *)v9 + 1);
        *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
        *((_OWORD *)v8 + 1) = v10;
        goto LABEL_7;
      case 4u:
        uint64_t v11 = type metadata accessor for Date();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32);
        v12(a1, a2, v11);
        uint64_t v13 = (int *)sub_10003B754(&qword_100792C08);
        v12(&a1[v13[12]], &a2[v13[12]], v11);
        uint64_t v14 = v13[16];
        uint64_t v15 = &a1[v14];
        uint64_t v16 = &a2[v14];
        long long v17 = *((_OWORD *)v16 + 1);
        *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
        *((_OWORD *)v15 + 1) = v17;
        uint64_t v18 = v13[20];
        uint64_t v19 = &a1[v18];
        uint64_t v20 = &a2[v18];
        long long v21 = *((_OWORD *)v20 + 1);
        *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
        *((_OWORD *)v19 + 1) = v21;
        goto LABEL_7;
      case 5u:
        uint64_t v22 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(a1, a2, v22);
        uint64_t v23 = *(int *)(sub_10003B754(&qword_100792C00) + 48);
        uint64_t v24 = &a1[v23];
        uint64_t v25 = &a2[v23];
        long long v26 = *((_OWORD *)v25 + 1);
        *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
        *((_OWORD *)v24 + 1) = v26;
LABEL_7:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1004DBE74()
{
  uint64_t v9 = &unk_100679B38;
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    long long v10 = &v8;
    swift_getTupleTypeLayout2();
    uint64_t v11 = &v7;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v6;
    v4[4] = v2;
    v4[5] = v2;
    v4[6] = " ";
    v4[7] = " ";
    swift_getTupleTypeLayout();
    uint64_t v13 = &v5;
    uint64_t result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v14 = v4;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.DateOptions.Bare(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.DateOptions.Bare(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DC134);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.DateOptions.Bare()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.DateOptions.Bare;
}

unsigned char *storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.TimeOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DC238);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.TimeOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.TimeOptions;
}

unsigned char *storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PriorityOptions(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DC33CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.PriorityOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.PriorityOptions;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.FlaggedOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.FlaggedOptions;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.LocationOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.LocationOptions;
}

void destroy for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1)
{
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100246478(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_100246478(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  long long v10 = *(void **)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_1002464C8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_1002464C8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 32) & 0x7E | (*(unsigned __int8 *)(a1 + 32) >> 7)) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)uint64_t result = a2 - 127;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2)
    {
      *(_OWORD *)uint64_t result = 0u;
      *(_OWORD *)(result + 16) = 0u;
      *(unsigned char *)(result + 32) = 2 * (((-a2 >> 1) & 0x3F) - ((_BYTE)a2 << 6));
    }
  }
  return result;
}

uint64_t sub_1004DC580(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32) >> 7;
}

uint64_t sub_1004DC58C(uint64_t result)
{
  *(unsigned char *)(result + 32) &= ~0x80u;
  return result;
}

uint64_t sub_1004DC59C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = *(unsigned char *)(result + 32) & 1 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.LocationState()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.LocationState;
}

uint64_t destroy for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1)
{
  sub_1002464C8(*(void *)a1, *(void *)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100246478(*(void *)a2, v5, v6, v7, v8);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void **)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  char v8 = *(unsigned char *)(a2 + 32);
  sub_100246478(*(void *)a2, v5, v6, v7, v8);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  uint64_t v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  char v13 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v8;
  sub_1002464C8(v9, v10, v11, v12, v13);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void **)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  char v10 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v4;
  sub_1002464C8(v5, v6, v7, v8, v10);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.LocationData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.LocationData()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.LocationData;
}

unsigned char *_s9Reminders33TTRSmartListFilterEditorViewModelV15LocationOptionsOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004DC904);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.ListsOptions()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.ListsOptions;
}

void destroy for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_10003B9C0(*(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  if (*(void *)(a1 + 80) != 1)
  {
    swift_bridgeObjectRelease();
    sub_10003B9C0(*(void **)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(unsigned char *)(a1 + 136));
    unint64_t v2 = *(void **)(a1 + 144);
    int v3 = *(void **)(a1 + 152);
    char v4 = *(unsigned char *)(a1 + 160);
    sub_10003B9B0(v2, v3, v4);
  }
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  char v11 = *(unsigned char *)(a2 + 64);
  swift_bridgeObjectRetain();
  sub_10003BED8(v5, v6, v7, v8, v9, v10, v11);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  uint64_t v12 = *(void *)(a2 + 80);
  if (v12 == 1)
  {
    long long v13 = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = v13;
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    long long v14 = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 88) = v14;
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = v12;
    uint64_t v15 = *(void **)(a2 + 88);
    uint64_t v16 = *(void *)(a2 + 96);
    uint64_t v17 = *(void *)(a2 + 104);
    uint64_t v18 = *(void *)(a2 + 112);
    uint64_t v19 = *(void *)(a2 + 120);
    uint64_t v20 = *(void *)(a2 + 128);
    char v21 = *(unsigned char *)(a2 + 136);
    swift_bridgeObjectRetain();
    sub_10003BED8(v15, v16, v17, v18, v19, v20, v21);
    *(void *)(a1 + 88) = v15;
    *(void *)(a1 + 96) = v16;
    *(void *)(a1 + 104) = v17;
    *(void *)(a1 + 112) = v18;
    *(void *)(a1 + 120) = v19;
    *(void *)(a1 + 128) = v20;
    *(unsigned char *)(a1 + 136) = v21;
    uint64_t v22 = *(void **)(a2 + 144);
    uint64_t v23 = *(void **)(a2 + 152);
    char v24 = *(unsigned char *)(a2 + 160);
    sub_10003BF34(v22, v23, v24);
    *(void *)(a1 + 144) = v22;
    *(void *)(a1 + 152) = v23;
    *(unsigned char *)(a1 + 160) = v24;
  }
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 40);
  uint64_t v8 = *(void *)(a2 + 48);
  uint64_t v9 = *(void *)(a2 + 56);
  char v10 = *(unsigned char *)(a2 + 64);
  sub_10003BED8(v4, v5, v6, v7, v8, v9, v10);
  char v11 = *(void **)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = *(void *)(a1 + 48);
  uint64_t v16 = *(void *)(a1 + 56);
  char v17 = *(unsigned char *)(a1 + 64);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(unsigned char *)(a1 + 64) = v10;
  sub_10003B9C0(v11, v12, v13, v14, v15, v16, v17);
  uint64_t v18 = (_OWORD *)(a1 + 72);
  uint64_t v19 = (_OWORD *)(a2 + 72);
  uint64_t v20 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) == 1)
  {
    if (v20 == 1)
    {
      long long v21 = *(_OWORD *)(a2 + 88);
      *uint64_t v18 = *v19;
      *(_OWORD *)(a1 + 88) = v21;
      long long v22 = *(_OWORD *)(a2 + 104);
      long long v23 = *(_OWORD *)(a2 + 120);
      long long v24 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
      *(_OWORD *)(a1 + 120) = v23;
      *(_OWORD *)(a1 + 136) = v24;
      *(_OWORD *)(a1 + 104) = v22;
    }
    else
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      uint64_t v29 = *(void **)(a2 + 88);
      uint64_t v30 = *(void *)(a2 + 96);
      uint64_t v31 = *(void *)(a2 + 104);
      uint64_t v32 = *(void *)(a2 + 112);
      uint64_t v33 = *(void *)(a2 + 120);
      uint64_t v34 = *(void *)(a2 + 128);
      char v35 = *(unsigned char *)(a2 + 136);
      swift_bridgeObjectRetain();
      sub_10003BED8(v29, v30, v31, v32, v33, v34, v35);
      *(void *)(a1 + 88) = v29;
      *(void *)(a1 + 96) = v30;
      *(void *)(a1 + 104) = v31;
      *(void *)(a1 + 112) = v32;
      *(void *)(a1 + 120) = v33;
      *(void *)(a1 + 128) = v34;
      *(unsigned char *)(a1 + 136) = v35;
      uint64_t v36 = *(void **)(a2 + 144);
      uint64_t v37 = *(void **)(a2 + 152);
      char v38 = *(unsigned char *)(a2 + 160);
      sub_10003BF34(v36, v37, v38);
      *(void *)(a1 + 144) = v36;
      *(void *)(a1 + 152) = v37;
      *(unsigned char *)(a1 + 160) = v38;
    }
  }
  else if (v20 == 1)
  {
    sub_1004DCD40(a1 + 72);
    long long v25 = *(_OWORD *)(a2 + 88);
    *uint64_t v18 = *v19;
    *(_OWORD *)(a1 + 88) = v25;
    long long v27 = *(_OWORD *)(a2 + 120);
    long long v26 = *(_OWORD *)(a2 + 136);
    long long v28 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
    *(_OWORD *)(a1 + 120) = v27;
    *(_OWORD *)(a1 + 136) = v26;
    *(_OWORD *)(a1 + 104) = v28;
  }
  else
  {
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v39 = *(void **)(a2 + 88);
    uint64_t v40 = *(void *)(a2 + 96);
    uint64_t v41 = *(void *)(a2 + 104);
    uint64_t v42 = *(void *)(a2 + 112);
    uint64_t v43 = *(void *)(a2 + 120);
    uint64_t v44 = *(void *)(a2 + 128);
    char v45 = *(unsigned char *)(a2 + 136);
    sub_10003BED8(v39, v40, v41, v42, v43, v44, v45);
    uint64_t v46 = *(void **)(a1 + 88);
    uint64_t v47 = *(void *)(a1 + 96);
    uint64_t v48 = *(void *)(a1 + 104);
    uint64_t v49 = *(void *)(a1 + 112);
    uint64_t v50 = *(void *)(a1 + 120);
    uint64_t v51 = *(void *)(a1 + 128);
    char v52 = *(unsigned char *)(a1 + 136);
    *(void *)(a1 + 88) = v39;
    *(void *)(a1 + 96) = v40;
    *(void *)(a1 + 104) = v41;
    *(void *)(a1 + 112) = v42;
    *(void *)(a1 + 120) = v43;
    *(void *)(a1 + 128) = v44;
    *(unsigned char *)(a1 + 136) = v45;
    sub_10003B9C0(v46, v47, v48, v49, v50, v51, v52);
    uint64_t v53 = *(void **)(a2 + 144);
    uint64_t v54 = *(void **)(a2 + 152);
    char v55 = *(unsigned char *)(a2 + 160);
    sub_10003BF34(v53, v54, v55);
    uint64_t v56 = *(void **)(a1 + 144);
    long long v57 = *(void **)(a1 + 152);
    char v58 = *(unsigned char *)(a1 + 160);
    *(void *)(a1 + 144) = v53;
    *(void *)(a1 + 152) = v54;
    *(unsigned char *)(a1 + 160) = v55;
    sub_10003B9B0(v56, v57, v58);
  }
  return a1;
}

uint64_t sub_1004DCD40(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(unsigned char *)(a1 + 160) = *((unsigned char *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 64);
  long long v6 = *(void **)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  char v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v13;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = v5;
  sub_10003B9C0(v6, v7, v8, v9, v10, v11, v12);
  if (*(void *)(a1 + 80) != 1)
  {
    uint64_t v14 = *(void *)(a2 + 80);
    if (v14 != 1)
    {
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = v14;
      swift_bridgeObjectRelease();
      char v17 = *(unsigned char *)(a2 + 136);
      uint64_t v18 = *(void **)(a1 + 88);
      uint64_t v19 = *(void *)(a1 + 96);
      uint64_t v20 = *(void *)(a1 + 104);
      uint64_t v21 = *(void *)(a1 + 112);
      uint64_t v22 = *(void *)(a1 + 120);
      uint64_t v23 = *(void *)(a1 + 128);
      char v24 = *(unsigned char *)(a1 + 136);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(unsigned char *)(a1 + 136) = v17;
      sub_10003B9C0(v18, v19, v20, v21, v22, v23, v24);
      char v25 = *(unsigned char *)(a2 + 160);
      long long v26 = *(void **)(a1 + 144);
      long long v27 = *(void **)(a1 + 152);
      char v28 = *(unsigned char *)(a1 + 160);
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(unsigned char *)(a1 + 160) = v25;
      sub_10003B9B0(v26, v27, v28);
      return a1;
    }
    sub_1004DCD40(a1 + 72);
  }
  long long v15 = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = v15;
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 145) = *(_OWORD *)(a2 + 145);
  long long v16 = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = v16;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 161)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 161) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 161) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.ListData()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.ListData;
}

void destroy for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1)
{
  sub_1004D8E7C(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void **)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(_OWORD *)(a1 + 144),
    *(void **)(a1 + 152),
    *(void **)(a1 + 160),
    *(_WORD *)(a1 + 168),
    HIBYTE(*(_WORD *)(a1 + 168)));
}

uint64_t initializeWithCopy for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 72);
  uint64_t v14 = *(void *)(a2 + 80);
  uint64_t v15 = *(void *)(a2 + 88);
  long long v16 = *(void **)(a2 + 96);
  uint64_t v17 = *(void *)(a2 + 104);
  uint64_t v18 = *(void *)(a2 + 112);
  uint64_t v19 = *(void *)(a2 + 120);
  uint64_t v20 = *(void *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 136);
  uint64_t v22 = *(void *)(a2 + 144);
  uint64_t v23 = *(void **)(a2 + 152);
  char v24 = *(void **)(a2 + 160);
  char v25 = *(unsigned char *)(a2 + 168);
  unsigned __int8 v26 = *(unsigned char *)(a2 + 169);
  uint64_t v7 = *(void *)(a2 + 64);
  uint64_t v8 = *(void **)a2;
  uint64_t v9 = *(void *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = *(void **)(a2 + 24);
  sub_1004D8AF8(*(void **)a2, v9, v10, v11, v3, v4, v5, v6, v7, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26);
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v9;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v11;
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v13;
  *(void *)(a1 + 80) = v14;
  *(void *)(a1 + 88) = v15;
  *(void *)(a1 + 96) = v16;
  *(void *)(a1 + 104) = v17;
  *(void *)(a1 + 112) = v18;
  *(void *)(a1 + 120) = v19;
  *(void *)(a1 + 128) = v20;
  *(void *)(a1 + 136) = v21;
  *(void *)(a1 + 144) = v22;
  *(void *)(a1 + 152) = v23;
  *(void *)(a1 + 160) = v24;
  *(unsigned char *)(a1 + 168) = v25;
  *(unsigned char *)(a1 + 169) = v26;
  return a1;
}

uint64_t assignWithCopy for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void **)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  uint64_t v11 = *(void *)(a2 + 64);
  uint64_t v29 = *(void *)(a2 + 72);
  uint64_t v30 = *(void *)(a2 + 80);
  uint64_t v31 = *(void *)(a2 + 88);
  uint64_t v32 = *(void **)(a2 + 96);
  uint64_t v33 = *(void *)(a2 + 104);
  uint64_t v34 = *(void *)(a2 + 112);
  uint64_t v35 = *(void *)(a2 + 120);
  uint64_t v36 = *(void *)(a2 + 128);
  uint64_t v37 = *(void *)(a2 + 136);
  uint64_t v38 = *(void *)(a2 + 144);
  uint64_t v39 = *(void **)(a2 + 152);
  uint64_t v40 = *(void **)(a2 + 160);
  char v41 = *(unsigned char *)(a2 + 168);
  unsigned __int8 v42 = *(unsigned char *)(a2 + 169);
  sub_1004D8AF8(*(void **)a2, v4, v5, v6, v7, v8, v9, v10, v11, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38,
    v39,
    v40,
    v41,
    v42);
  char v12 = *(void **)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void **)(a1 + 24);
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v11;
  *(void *)(a1 + 72) = v29;
  *(void *)(a1 + 80) = v30;
  *(void *)(a1 + 88) = v31;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v32;
  *(void *)(a1 + 104) = v33;
  *(void *)(a1 + 112) = v34;
  *(void *)(a1 + 120) = v35;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v36;
  *(void *)(a1 + 136) = v37;
  *(void *)(a1 + 144) = v38;
  *(void *)(a1 + 152) = v39;
  unsigned __int8 v26 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v40;
  __int16 v27 = *(_WORD *)(a1 + 168);
  *(unsigned char *)(a1 + 168) = v41;
  *(unsigned char *)(a1 + 169) = v42;
  sub_1004D8E7C(v12, v13, v14, v15, v16, v17, v18, v19, v20, SBYTE8(v20), v21, *((uint64_t *)&v21 + 1), (void *)v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((uint64_t *)&v24 + 1), v25,
    *((void **)&v25 + 1),
    v26,
    v27,
    HIBYTE(v27));
  return a1;
}

__n128 initializeWithTake for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_OWORD *)(a1 + 154) = *(long long *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 160);
  __int16 v4 = *(_WORD *)(a2 + 168);
  long long v5 = *(void **)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  long long v8 = *(void **)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  long long v13 = *(_OWORD *)(a1 + 64);
  long long v14 = *(_OWORD *)(a1 + 80);
  long long v15 = *(_OWORD *)(a1 + 96);
  long long v16 = *(_OWORD *)(a1 + 112);
  long long v17 = *(_OWORD *)(a1 + 128);
  long long v18 = *(_OWORD *)(a1 + 144);
  uint64_t v19 = *(void **)(a1 + 160);
  __int16 v20 = *(_WORD *)(a1 + 168);
  long long v21 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v21;
  long long v22 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v22;
  long long v23 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v23;
  long long v24 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v24;
  long long v25 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v25;
  *(void *)(a1 + 160) = v3;
  *(_WORD *)(a1 + 168) = v4;
  sub_1004D8E7C(v5, v7, v6, v8, v9, v10, v11, v12, v13, SBYTE8(v13), v14, *((uint64_t *)&v14 + 1), (void *)v15, *((uint64_t *)&v15 + 1), v16, *((uint64_t *)&v16 + 1), v17, *((uint64_t *)&v17 + 1), v18,
    *((void **)&v18 + 1),
    v19,
    v20,
    HIBYTE(v20));
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListsData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 170)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 169);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.ListsData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 168) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 170) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 170) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 169) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1004DD494(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)__n128 result = a2 - 2;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    LOBYTE(a2) = 2;
    *(unsigned char *)(result + 168) = 0;
  }
  *(unsigned char *)(result + 169) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.ListsData()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.ListsData;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.HelpTopic(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.HelpTopic(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1004DD5DCLL);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.HelpTopic()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.HelpTopic;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PresenterState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.PresenterState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.PresenterState()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.PresenterState;
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible()
{
  return &type metadata for TTRSmartListFilterEditorViewModel.PresenterState.DateVisible;
}

unint64_t sub_1004DD6D0()
{
  unint64_t result = qword_1007A1390;
  if (!qword_1007A1390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1390);
  }
  return result;
}

unint64_t sub_1004DD728()
{
  unint64_t result = qword_1007A1398;
  if (!qword_1007A1398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1398);
  }
  return result;
}

unint64_t sub_1004DD780()
{
  unint64_t result = qword_1007A13A0;
  if (!qword_1007A13A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A13A0);
  }
  return result;
}

unint64_t sub_1004DD7D8()
{
  unint64_t result = qword_1007A13A8;
  if (!qword_1007A13A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A13A8);
  }
  return result;
}

uint64_t sub_1004DD838()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A1558);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A1558);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1004DD900()
{
  if (qword_100785610 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_1007A1558);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    unsigned int v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Attempting to show debug menu", v3, 2u);
    swift_slowDealloc();
  }

  id v4 = [self daemonUserDefaults];
  unsigned int v5 = [v4 enableInAppDebugMenu];

  if (v5)
  {
    swift_beginAccess();
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v7 = Strong;
      id v8 = [Strong rootViewController];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = sub_10017FB50();
        [v9 presentViewController:v10 animated:1 completion:0];

        return;
      }
    }
    long long v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      long long v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Not showing debug menu because rootViewController is not found", v15, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    oslog = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(oslog, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v11, "Debug menu is disabled. You can enable in Internal Settings.", v12, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t type metadata accessor for TTRIDebugMenuManager()
{
  return self;
}

uint64_t sub_1004DDBC8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004DDC00()
{
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNameRouter()
{
  return self;
}

char *sub_1004DDC2C(double a1, double a2, double a3, double a4)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_activeReorderingContext] = 0;
  id v10 = objc_allocWithZone((Class)UILabel);
  os_log_type_t v11 = v4;
  id v12 = [v10 init];
  uint64_t v13 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel;
  *(void *)&v11[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel] = v12;
  [v12 setNumberOfLines:0];
  id v14 = v12;
  NSString v15 = String._bridgeToObjectiveC()();
  id v16 = [self fontWithName:v15 size:12.0];

  [v14 setFont:v16];
  long long v17 = *(void **)&v11[v13];
  long long v18 = self;
  id v19 = v17;
  id v20 = [v18 whiteColor];
  [v19 setTextColor:v20];

  id v21 = *(id *)&v11[v13];
  id v22 = [v18 blackColor];
  [v21 setBackgroundColor:v22];

  id v23 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 6.0, 6.0];
  uint64_t v24 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_pointView;
  *(void *)&v11[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_pointView] = v23;
  [v23 setClipsToBounds:1];
  id v25 = [v23 layer];
  [v25 setCornerRadius:3.0];

  id v26 = [*(id *)&v11[v24] layer];
  [v26 setCornerCurve:kCACornerCurveCircular];

  id v27 = *(id *)&v11[v24];
  id v28 = [v18 ttr_systemRedColor];
  [v27 setBackgroundColor:v28];

  id v29 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v30 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_borderView;
  *(void *)&v11[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_borderView] = v29;
  id v31 = [v29 layer];
  id v32 = [v18 greenColor];
  id v33 = [v32 CGColor];

  [v31 setBorderColor:v33];
  id v34 = [*(id *)&v11[v30] layer];
  [v34 setBorderWidth:1.0];

  v52.receiver = v11;
  v52.super_class = ObjectType;
  uint64_t v35 = (char *)[v52 initWithFrame:a1, a2, a3, a4];
  [v35 setUserInteractionEnabled:0];
  uint64_t v36 = OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel;
  uint64_t v37 = *(void **)&v35[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_infoLabel];
  [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v35 addSubview:v37];
  uint64_t v38 = self;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_10066C430;
  id v40 = [v35 safeAreaLayoutGuide];
  id v41 = [v40 leadingAnchor];

  id v42 = [*(id *)&v35[v36] leadingAnchor];
  id v43 = [v41 constraintEqualToAnchor:v42];

  *(void *)(v39 + 32) = v43;
  id v44 = [v35 safeAreaLayoutGuide];
  id v45 = [v44 bottomAnchor];

  id v46 = [*(id *)&v35[v36] bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46 constant:70.0];

  *(void *)(v39 + 40) = v47;
  specialized Array._endMutation()();
  sub_1001088A8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v38 activateConstraints:isa];

  uint64_t v49 = *(void **)&v35[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_pointView];
  [v49 setTranslatesAutoresizingMaskIntoConstraints:1];
  [v35 addSubview:v49];
  uint64_t v50 = *(void **)&v35[OBJC_IVAR____TtC9Reminders50TTRIRemindersBoardColumnReorderingDebugOverlayView_borderView];
  [v50 setTranslatesAutoresizingMaskIntoConstraints:1];
  [v35 addSubview:v50];

  return v35;
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingDebugOverlayView()
{
  return self;
}

uint64_t type metadata accessor for TTRIEditTodaySectionsHostingController(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007A16F8);
}

uint64_t sub_1004DE338()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1004DE384@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v43 = type metadata accessor for EditMode();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unsigned int v3 = (char *)&v37 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_1007A1748);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_1007A1750);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10003B754(&qword_1007A1758);
  uint64_t v10 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10003B754(&qword_1007A1760);
  __chkstk_darwin(v38);
  id v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_1007A1768);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v44 = v15;
  uint64_t v45 = v16;
  __chkstk_darwin(v15);
  uint64_t v39 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = v1;
  long long v18 = (long long *)v1;
  unint64_t v19 = *(void *)(v1 + 16);
  long long v37 = *v18;
  long long v48 = v37;
  unint64_t v49 = v19;
  uint64_t v20 = enum case for Font.Design.rounded(_:);
  uint64_t v21 = type metadata accessor for Font.Design();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 104))(v9, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v9, 0, 1, v21);
  sub_1004DFBD0();
  swift_unknownObjectRetain();
  swift_retain();
  View.fontDesign(_:)();
  sub_10003B6F8((uint64_t)v9, &qword_1007A1750);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v24 = v41;
  uint64_t v25 = v43;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v3, enum case for EditMode.active(_:), v43);
  static Binding.constant(_:)();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v3, v25);
  uint64_t v26 = sub_10003B754(&qword_1007A1778);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v6, 0, 1, v26);
  uint64_t v27 = v38;
  id v28 = (uint64_t *)&v14[*(int *)(v38 + 36)];
  uint64_t v29 = sub_10003B754(&qword_1007A1780);
  sub_1004DFC4C((uint64_t)v6, (uint64_t)v28 + *(int *)(v29 + 28));
  uint64_t *v28 = KeyPath;
  uint64_t v30 = v42;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v14, v12, v42);
  sub_10003B6F8((uint64_t)v6, &qword_1007A1748);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  *(void *)&long long v48 = static TTRLocalizableStrings.Sections.editSectionsTitle(listLayout:)();
  *((void *)&v48 + 1) = v31;
  unint64_t v32 = sub_1004DFCB4();
  unint64_t v33 = sub_100022F44();
  id v34 = v39;
  View.navigationTitle<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)v14, &qword_1007A1760);
  uint64_t v47 = v40;
  sub_10003B754(&qword_1007A17A0);
  *(void *)&long long v48 = v27;
  *((void *)&v48 + 1) = &type metadata for String;
  unint64_t v49 = v32;
  unint64_t v50 = v33;
  swift_getOpaqueTypeConformance2();
  sub_100037EA0(&qword_1007A17A8, &qword_1007A17A0);
  uint64_t v35 = v44;
  View.toolbar<A>(content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v34, v35);
}

uint64_t sub_1004DE95C(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007A1748);
  __chkstk_darwin(v2 - 8);
  sub_1004DFC4C(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return EnvironmentValues.editMode.setter();
}

uint64_t sub_1004DE9E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v26 = a2;
  uint64_t v25 = sub_10003B754(&qword_1007A17B0);
  __chkstk_darwin(v25);
  id v23 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10003B754(&qword_1007A17B8);
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ToolbarItemPlacement();
  __chkstk_darwin(v7 - 8);
  uint64_t v22 = sub_10003B754(&qword_1007A17C0);
  uint64_t v8 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static ToolbarItemPlacement.cancellationAction.getter();
  uint64_t v28 = a1;
  sub_10003B754(&qword_1007A17C8);
  uint64_t v11 = sub_100039710(&qword_1007A17D0);
  uint64_t v12 = sub_100039710(&qword_1007A17D8);
  uint64_t v13 = sub_100037EA0(&qword_1007A17E0, &qword_1007A17D0);
  unint64_t v14 = sub_100022F44();
  unint64_t v15 = sub_1004DFD90();
  uint64_t v29 = v11;
  uint64_t v30 = &type metadata for String;
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  unint64_t v33 = &type metadata for TTRDiscardChangesDialog;
  uint64_t v34 = v13;
  unint64_t v35 = v14;
  uint64_t v36 = v13;
  unint64_t v37 = v15;
  swift_getOpaqueTypeConformance2();
  ToolbarItem<>.init(placement:content:)();
  static ToolbarItemPlacement.confirmationAction.getter();
  uint64_t v27 = v21;
  ToolbarItem<>.init(placement:content:)();
  uint64_t v16 = &v23[*(int *)(v25 + 48)];
  uint64_t v17 = v22;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v23, v10, v22);
  long long v18 = v16;
  uint64_t v19 = v24;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v18, v6, v24);
  TupleToolbarContent.init(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

uint64_t sub_1004DED90(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007A17D0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[0] = static TTRLocalizableStrings.Common.alertCancelButton.getter();
  v10[1] = v6;
  long long v11 = *(_OWORD *)(a1 + 24);
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v7 + 32) = v8;
  *(void *)(v7 + 48) = *(void *)(a1 + 32);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1004DFE5C((uint64_t)&v11);
  sub_100022F44();
  Button<>.init<A>(_:action:)();
  sub_100037EA0(&qword_1007A17E0, &qword_1007A17D0);
  View.confirmationDialog<A>(for:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1004DEF40(uint64_t a1)
{
  static TTRLocalizableStrings.Common.doneButton.getter();
  long long v5 = *(_OWORD *)(a1 + 24);
  uint64_t v2 = swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 32) = v3;
  *(void *)(v2 + 48) = *(void *)(a1 + 32);
  swift_unknownObjectRetain();
  swift_retain();
  sub_1004DFE5C((uint64_t)&v5);
  sub_100022F44();
  return Button<>.init<A>(_:action:)();
}

uint64_t sub_1004DF010@<X0>(uint64_t a1@<X8>)
{
  return sub_1004DE384(a1);
}

uint64_t sub_1004DF04C()
{
  return Section<>.init(content:)();
}

uint64_t sub_1004DF0B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  uint64_t v6 = sub_10003B754(&qword_1007A1820);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTREditTodaySectionsModelObject.viewModel.getter();
  uint64_t v10 = TTREditTodaySectionsViewModel.cellViewModels.getter();
  swift_bridgeObjectRelease();
  uint64_t v20 = v10;
  sub_10003B754(&qword_1007A1848);
  type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
  type metadata accessor for ListCell(0);
  sub_100037EA0(&qword_1007A1850, &qword_1007A1848);
  sub_1004E0324(&qword_1007A1828, (void (*)(uint64_t))type metadata accessor for ListCell);
  sub_1004E0324(&qword_1007A1858, (void (*)(uint64_t))&type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel);
  ForEach<>.init(_:content:)();
  long long v11 = (void *)swift_allocObject();
  uint64_t v12 = v19;
  v11[2] = v18;
  v11[3] = v12;
  v11[4] = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1004E03AC;
  *(void *)(v13 + 24) = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 16))(a4, v9, v6);
  unint64_t v14 = (void *)(a4 + *(int *)(sub_10003B754(&qword_1007A1810) + 36));
  *unint64_t v14 = sub_1004E044C;
  v14[1] = v13;
  unint64_t v15 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  swift_unknownObjectRetain();
  swift_retain();
  return v15(v9, v6);
}

uint64_t sub_1004DF364@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004E0478(a1, a2);
}

uint64_t sub_1004DF36C()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_1004DF388()
{
  uint64_t v1 = type metadata accessor for InsetGroupedListStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10003B754(&qword_1007A17F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *((void *)v0 + 2);
  long long v12 = *v0;
  uint64_t v13 = v9;
  sub_10003B754(&qword_1007A17F8);
  sub_1004E0134();
  List<>.init(content:)();
  InsetGroupedListStyle.init()();
  sub_100037EA0(&qword_1007A1840, &qword_1007A17F0);
  View.listStyle<A>(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1004DF594@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  sub_100022F44();
  swift_bridgeObjectRetain();
  uint64_t v6 = Text.init<A>(_:)();
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  if (*(void *)(a1 + *(int *)(v4 + 24) + 8))
  {
    char v33 = v5;
    swift_bridgeObjectRetain();
    uint64_t v11 = Text.init<A>(_:)();
    uint64_t v13 = v12;
    char v15 = v14 & 1;
    static Color.secondary.getter();
    uint64_t v34 = v8;
    uint64_t v16 = Text.foregroundColor(_:)();
    uint64_t v18 = v17;
    uint64_t v35 = v10;
    char v20 = v19;
    swift_release();
    sub_1004E0BF4(v11, v13, v15);
    swift_bridgeObjectRelease();
    static Font.subheadline.getter();
    uint64_t v21 = Text.font(_:)();
    uint64_t v23 = v22;
    char v25 = v24;
    uint64_t v27 = v26;
    swift_release();
    uint64_t v28 = v25 & 1;
    uint64_t v29 = v16;
    uint64_t v8 = v34;
    char v30 = v20 & 1;
    uint64_t v10 = v35;
    sub_1004E0BF4(v29, v18, v30);
    swift_bridgeObjectRelease();
    char v5 = v33;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v28 = 0;
    uint64_t v27 = 0;
  }
  char v31 = v5 & 1;
  *(void *)a2 = v6;
  *(void *)(a2 + 8) = v8;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v21;
  *(void *)(a2 + 40) = v23;
  *(void *)(a2 + 48) = v28;
  *(void *)(a2 + 56) = v27;
  sub_1004E0B5C(v6, v8, v5 & 1);
  swift_bridgeObjectRetain();
  sub_1004E0B6C(v21, v23, v28, v27);
  sub_1004E0BB0(v21, v23, v28, v27);
  sub_1004E0BF4(v6, v8, v31);
  return swift_bridgeObjectRelease();
}

__n128 sub_1004DF7AC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v3 = static HorizontalAlignment.leading.getter();
  sub_1004DF594(v1, (uint64_t)&v9);
  char v4 = v10;
  uint64_t v5 = v11;
  __n128 result = v9;
  long long v7 = v12;
  long long v8 = v13;
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(__n128 *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 72) = v8;
  return result;
}

void sub_1004DF820()
{
}

uint64_t sub_1004DF87C()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1004DF88C()
{
  return swift_unknownObjectRelease();
}

void sub_1004DF89C()
{
}

uint64_t sub_1004DF8CC()
{
  return type metadata accessor for TTRIEditTodaySectionsHostingController(0);
}

BOOL sub_1004DF8D4(char *a1, uint64_t a2, void *a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)&a1[qword_1007A16F0 + 8];
  uint64_t ObjectType = swift_getObjectType();
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  id v8 = a3;
  id v9 = v4;
  LOBYTE(v4) = v7(ObjectType, v5);

  return (v4 & 1) == 0;
}

void sub_1004DF970(char *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void *)&a1[qword_1007A16F0 + 8];
  uint64_t ObjectType = swift_getObjectType();
  long long v7 = *(void (**)(uint64_t, uint64_t))(v5 + 24);
  id v8 = a3;
  id v9 = a1;
  v7(ObjectType, v5);
}

uint64_t destroy for TTRIEditTodaySectionsView()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TTRIEditTodaySectionsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRIEditTodaySectionsView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRIEditTodaySectionsView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TTRIEditTodaySectionsView()
{
  return &type metadata for TTRIEditTodaySectionsView;
}

uint64_t sub_1004DFBB4()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1004DFBD0()
{
  unint64_t result = qword_1007A1770;
  if (!qword_1007A1770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1770);
  }
  return result;
}

uint64_t sub_1004DFC24()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t sub_1004DFC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A1748);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1004DFCB4()
{
  unint64_t result = qword_1007A1788;
  if (!qword_1007A1788)
  {
    sub_100039710(&qword_1007A1760);
    sub_1004DFBD0();
    swift_getOpaqueTypeConformance2();
    sub_100037EA0((unint64_t *)&unk_1007A1790, &qword_1007A1780);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1788);
  }
  return result;
}

uint64_t sub_1004DFD80@<X0>(uint64_t a1@<X8>)
{
  return sub_1004DE9E8(*(void *)(v1 + 16), a1);
}

uint64_t sub_1004DFD88()
{
  return sub_1004DED90(*(void *)(v0 + 16));
}

unint64_t sub_1004DFD90()
{
  unint64_t result = qword_1007A17E8;
  if (!qword_1007A17E8)
  {
    sub_100039710(&qword_1007A17D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A17E8);
  }
  return result;
}

uint64_t sub_1004DFE04()
{
  return sub_1004DEF40(*(void *)(v0 + 16));
}

uint64_t sub_1004DFE10()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t sub_1004DFE5C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1004DFE8C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t destroy for SectionsList()
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t _s9Reminders12SectionsListVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_unknownObjectRetain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SectionsList(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = v4;
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for SectionsList(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for SectionsList()
{
  return &type metadata for SectionsList;
}

uint64_t sub_1004E0018()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004E010C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004E0128()
{
  return sub_1004DF04C();
}

unint64_t sub_1004E0134()
{
  unint64_t result = qword_1007A1800;
  if (!qword_1007A1800)
  {
    sub_100039710(&qword_1007A17F8);
    sub_1004E01B4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1800);
  }
  return result;
}

unint64_t sub_1004E01B4()
{
  unint64_t result = qword_1007A1808;
  if (!qword_1007A1808)
  {
    sub_100039710(&qword_1007A1810);
    sub_1004E0254();
    sub_100037EA0(&qword_1007A1830, &qword_1007A1838);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1808);
  }
  return result;
}

unint64_t sub_1004E0254()
{
  unint64_t result = qword_1007A1818;
  if (!qword_1007A1818)
  {
    sub_100039710(&qword_1007A1820);
    sub_1004E0324(&qword_1007A1828, (void (*)(uint64_t))type metadata accessor for ListCell);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1818);
  }
  return result;
}

uint64_t type metadata accessor for ListCell(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A18B8);
}

uint64_t sub_1004E0318@<X0>(uint64_t a1@<X8>)
{
  return sub_1004DF0B8(v1[2], v1[3], v1[4], a1);
}

uint64_t sub_1004E0324(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004E036C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004E03AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, ObjectType, v5);
}

uint64_t sub_1004E0414()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004E044C(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 16))(a1, *a2);
}

uint64_t sub_1004E0478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t *sub_1004E04DC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(v6 + 20);
    id v9 = (uint64_t *)((char *)a1 + v8);
    char v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *id v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = *(int *)(v6 + 24);
    long long v13 = (uint64_t *)((char *)a1 + v12);
    char v14 = (uint64_t *)((char *)a2 + v12);
    uint64_t v15 = v14[1];
    void *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1004E05D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004E0668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  long long v13 = (void *)(a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1004E070C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(v5 + 24);
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  *uint64_t v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004E07DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  *(_OWORD *)(a1 + *(int *)(v5 + 20)) = *(_OWORD *)(a2 + *(int *)(v5 + 20));
  *(_OWORD *)(a1 + *(int *)(v5 + 24)) = *(_OWORD *)(a2 + *(int *)(v5 + 24));
  return a1;
}

uint64_t sub_1004E0860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  uint64_t v5 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  uint64_t v6 = *(int *)(v5 + 20);
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  *uint64_t v7 = v10;
  v7[1] = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(int *)(v5 + 24);
  uint64_t v12 = (void *)(a1 + v11);
  long long v13 = (uint64_t *)(a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004E0910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004E0924);
}

uint64_t sub_1004E0924(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1004E0990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004E09A4);
}

uint64_t sub_1004E09A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_1004E0A14()
{
  uint64_t result = type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004E0AA0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004E0B40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1004E0B5C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1004E0B6C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1004E0B5C(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1004E0BB0(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1004E0BF4(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1004E0BF4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004E0C04()
{
  return sub_100037EA0(&qword_1007A18F0, &qword_1007A18F8);
}

uint64_t sub_1004E0C44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(*(void *)(v13 + 64));
  uint64_t result = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v49 - v17;
  char v19 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor);
  uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 8);
  uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 16);
  uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 24);
  uint64_t v24 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 32);
  uint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 40);
  uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 48);
  char v26 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 56);
  if ((~*(_DWORD *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 40) & 0xFELL) != 0)
  {
    uint64_t v52 = result;
    uint64_t v53 = v9;
    uint64_t v55 = v16;
    uint64_t v56 = v5;
    uint64_t v57 = v1;
    char v58 = v18;
    long long v66 = v19;
    uint64_t v67 = v20;
    uint64_t v68 = v21;
    uint64_t v69 = v22;
    uint64_t v70 = v24;
    char v71 = v23;
    uint64_t v60 = v25;
    uint64_t v72 = v25;
    int v59 = v26 & 1;
    char v73 = v26 & 1;
    uint64_t v27 = v19;
    uint64_t v28 = v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem;
    uint64_t v29 = v20;
    uint64_t v30 = v23;
    sub_10003B694(v28, (uint64_t)v11, (uint64_t *)&unk_100788DC0);
    uint64_t v54 = v13;
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    uint64_t v64 = v29;
    long long v65 = v27;
    uint64_t v62 = v22;
    uint64_t v63 = v21;
    uint64_t v61 = v24;
    if (v31 == 1)
    {
      sub_1000C7850(v27, v29, v21, v22, v24, v30);
      uint64_t result = sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      uint64_t v32 = (uint64_t)v11;
      uint64_t v33 = (uint64_t)v58;
      sub_1004E2A6C(v32, (uint64_t)v58, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v51 = v30;
      sub_1000C7850(v27, v29, v21, v22, v24, v30);
      uint64_t v34 = sub_1004E10E0();
      if (v34)
      {
        uint64_t v36 = (void *)v34;
        uint64_t v37 = v57;
        uint64_t v38 = (uint64_t)v53;
        uint64_t v50 = v35;
        sub_10005FCB8(v33, (uint64_t)v53);
        uint64_t v39 = v54 + 56;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v38, 0, 1, v12);
        CurrentValueSubject.send(_:)();
        sub_10003B6F8(v38, (uint64_t *)&unk_100788DC0);
        uint64_t v40 = type metadata accessor for TaskPriority();
        uint64_t v41 = (uint64_t)v56;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v56, 1, 1, v40);
        uint64_t v42 = v55;
        sub_10005FCB8(v33, v55);
        unint64_t v43 = (*(unsigned __int8 *)(v39 + 24) + 40) & ~(unint64_t)*(unsigned __int8 *)(v39 + 24);
        unint64_t v44 = (v52 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v45 = (void *)swift_allocObject();
        v45[2] = 0;
        v45[3] = 0;
        v45[4] = v37;
        sub_1004E2A6C(v42, (uint64_t)v45 + v43, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v46 = (void *)((char *)v45 + v44);
        uint64_t v47 = v50;
        void *v46 = v36;
        v46[1] = v47;
        swift_retain();
        id v48 = v36;
        sub_1000286A4(v41, (uint64_t)&unk_1007A19E0, (uint64_t)v45);

        swift_release();
      }
      uint64_t result = sub_1002F3090(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      LOBYTE(v30) = v51;
    }
    uint64_t v23 = v30;
    uint64_t v20 = v64;
    char v19 = v65;
    uint64_t v22 = v62;
    uint64_t v21 = v63;
    uint64_t v25 = v60;
    uint64_t v24 = v61;
    char v26 = v59;
  }
  *(void *)a1 = v19;
  *(void *)(a1 + 8) = v20;
  *(void *)(a1 + 16) = v21;
  *(void *)(a1 + 24) = v22;
  *(void *)(a1 + 32) = v24;
  *(void *)(a1 + 40) = v23;
  *(void *)(a1 + 48) = v25;
  *(unsigned char *)(a1 + 56) = v26;
  return result;
}

uint64_t sub_1004E10E0()
{
  sub_1004E2D50(v0, (uint64_t)v10);
  sub_1004E2D50((uint64_t)v10, (uint64_t)v11);
  int v1 = v12 >> 6;
  if (!v1)
  {
    v12 &= 0x3Fu;
    uint64_t v2 = v11[0];
    uint64_t v3 = (unint64_t *)&qword_100788600;
    goto LABEL_5;
  }
  if (v1 == 1)
  {
    v12 &= 0x3Fu;
    uint64_t v2 = v11[0];
    uint64_t v3 = &qword_100788D80;
LABEL_5:
    uint64_t ObjectType = sub_1000368FC(0, v3);
    goto LABEL_7;
  }
  v12 &= 0x3Fu;
  uint64_t v2 = v11[0];
  uint64_t ObjectType = swift_getObjectType();
LABEL_7:
  v9[3] = ObjectType;
  v9[0] = v2;
  sub_1002D3B90((uint64_t)v9, (uint64_t)v7);
  if (v8)
  {
    sub_10040FB84((uint64_t)v10);
    sub_10003B754(&qword_1007A1A18);
    if (swift_dynamicCast()) {
      return v6;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_10040FB84((uint64_t)v10);
    sub_10003B6F8((uint64_t)v7, &qword_100788D60);
    return 0;
  }
}

uint64_t sub_1004E120C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10003D2E4;
  return sub_1004E12C0(a5, a6);
}

uint64_t sub_1004E12C0(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  v3[12] = *v2;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  v3[13] = v4;
  v3[14] = *(void *)(v4 - 8);
  v3[15] = swift_task_alloc();
  v3[16] = sub_10003B754(&qword_100799D98);
  v3[17] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  v3[18] = v5;
  v3[19] = *(void *)(v5 - 8);
  v3[20] = swift_task_alloc();
  sub_10003B754((uint64_t *)&unk_100788DC0);
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  sub_10003B754((uint64_t *)&unk_10078E360);
  v3[23] = swift_task_alloc();
  v3[24] = swift_task_alloc();
  v3[25] = swift_task_alloc();
  uint64_t v6 = sub_10003B754(&qword_1007A19F0);
  v3[26] = v6;
  v3[27] = *(void *)(v6 - 8);
  v3[28] = swift_task_alloc();
  uint64_t v7 = sub_10003B754(&qword_1007A19F8);
  v3[29] = v7;
  v3[30] = *(void *)(v7 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = type metadata accessor for MainActor();
  v3[33] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[34] = v9;
  v3[35] = v8;
  return _swift_task_switch(sub_1004E15C0, v9, v8);
}

uint64_t sub_1004E15C0()
{
  uint64_t v1 = v0;
  uint64_t v14 = v0 + 56;
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v12 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 208);
  sub_10003B754(&qword_1007A1A00);
  swift_allocObject();
  uint64_t v4 = PassthroughSubject.init()();
  *(void *)(v0 + 288) = v4;
  id v5 = [self defaultCenter];
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  id v6 = [self mainQueue];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = v12;
  swift_retain();
  *(void *)(v0 + 296) = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();
  swift_release();

  sub_10003B6F8(v0 + 16, &qword_100788D60);
  *(void *)(v0 + 48) = v4;
  sub_100037EA0(&qword_1007A1A08, &qword_1007A1A00);
  Publisher<>.rem_bufferedValues.getter();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  *(void *)(v0 + 304) = OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_cellInfoButtonVisibilityAssertion;
  *(void *)(v0 + 312) = static MainActor.shared.getter();
  uint64_t v8 = sub_100037EA0(&qword_1007A1A10, &qword_1007A19F8);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v1 + 320) = v9;
  *uint64_t v9 = v1;
  v9[1] = sub_1004E1850;
  uint64_t v10 = *(void *)(v1 + 232);
  return dispatch thunk of AsyncIteratorProtocol.next()(v14, v10, v8);
}

uint64_t sub_1004E1850()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 328) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_1004E2034;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_1004E19E8;
  }
  return _swift_task_switch(v7, v4, v6);
}

uint64_t sub_1004E19E8()
{
  swift_release();
  v0[42] = v0[7];
  uint64_t v1 = v0[34];
  uint64_t v2 = v0[35];
  return _swift_task_switch(sub_1004E1A54, v1, v2);
}

uint64_t sub_1004E1A54()
{
  uint64_t v1 = v0[42];
  if (!v1)
  {
    (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
LABEL_20:
    swift_release();
    swift_release();
LABEL_21:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v37 = (uint64_t (*)(void))v0[1];
    return v37();
  }
  if (static Task<>.isCancelled.getter())
  {
LABEL_19:
    (*(void (**)(void, void))(v0[30] + 8))(v0[31], v0[29]);
    swift_unknownObjectRelease();
    goto LABEL_20;
  }
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v45 = v1;
  CurrentValueSubject.value.getter();
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  uint64_t v6 = v0[25];
  uint64_t v7 = v0[22];
  if (v5)
  {
    uint64_t v9 = v0[13];
    uint64_t v8 = v0[14];
    sub_10003B6F8(v0[22], (uint64_t *)&unk_100788DC0);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56);
    v10(v6, 1, 1, v9);
  }
  else
  {
    uint64_t v11 = v0[20];
    uint64_t v12 = v0[13];
    uint64_t v13 = v0[14];
    sub_10005FCB8(v0[22], v11);
    sub_10003B6F8(v7, (uint64_t *)&unk_100788DC0);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_1002F3090(v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v10(v6, 0, 1, v12);
  }
  uint64_t v15 = v0[24];
  uint64_t v14 = v0[25];
  uint64_t v16 = v0[16];
  uint64_t v17 = v0[17];
  uint64_t v18 = v0[13];
  uint64_t v19 = v0[14];
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  v10(v15, 0, 1, v18);
  uint64_t v20 = v17 + *(int *)(v16 + 48);
  sub_10003B694(v14, v17, (uint64_t *)&unk_10078E360);
  sub_10003B694(v15, v20, (uint64_t *)&unk_10078E360);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 48);
  if (v21(v17, 1, v18) == 1)
  {
    uint64_t v22 = v0[25];
    uint64_t v23 = v0[13];
    sub_10003B6F8(v0[24], (uint64_t *)&unk_10078E360);
    sub_10003B6F8(v22, (uint64_t *)&unk_10078E360);
    int v24 = v21(v20, 1, v23);
    uint64_t v25 = v45;
    if (v24 == 1)
    {
      sub_10003B6F8(v0[17], (uint64_t *)&unk_10078E360);
      goto LABEL_15;
    }
LABEL_13:
    sub_10003B6F8(v0[17], &qword_100799D98);
    goto LABEL_19;
  }
  uint64_t v26 = v0[13];
  sub_10003B694(v0[17], v0[23], (uint64_t *)&unk_10078E360);
  int v27 = v21(v20, 1, v26);
  uint64_t v29 = v0[24];
  uint64_t v28 = v0[25];
  uint64_t v30 = v0[23];
  if (v27 == 1)
  {
    sub_10003B6F8(v0[24], (uint64_t *)&unk_10078E360);
    sub_10003B6F8(v28, (uint64_t *)&unk_10078E360);
    sub_1002F3090(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    goto LABEL_13;
  }
  uint64_t v31 = v0[17];
  uint64_t v32 = v0[15];
  sub_1004E2A6C(v20, v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  char v33 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
  sub_1002F3090(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10003B6F8(v29, (uint64_t *)&unk_10078E360);
  sub_10003B6F8(v28, (uint64_t *)&unk_10078E360);
  sub_1002F3090(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10003B6F8(v31, (uint64_t *)&unk_10078E360);
  uint64_t v25 = v45;
  if ((v33 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_15:
  if (v0[10] == v25)
  {
    uint64_t v38 = v0[30];
    uint64_t v39 = v0[31];
    uint64_t v40 = v0[29];
    uint64_t v41 = v0[21];
    uint64_t v42 = v0[18];
    uint64_t v43 = v0[19];
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v41, 1, 1, v42);
    CurrentValueSubject.send(_:)();
    swift_unknownObjectRelease();
    swift_release();
    sub_10003B6F8(v41, (uint64_t *)&unk_100788DC0);
    (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v39, v40);
    goto LABEL_21;
  }
  swift_unknownObjectRelease();
  v0[39] = static MainActor.shared.getter();
  uint64_t v34 = sub_100037EA0(&qword_1007A1A10, &qword_1007A19F8);
  uint64_t v35 = (void *)swift_task_alloc();
  v0[40] = v35;
  *uint64_t v35 = v0;
  v35[1] = sub_1004E1850;
  uint64_t v36 = v0[29];
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 7, v36, v34);
}

uint64_t sub_1004E2034()
{
  *(void *)(v0 + 64) = *(void *)(v0 + 328);
  sub_10003B754(&qword_1007883B0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1004E20B8()
{
  uint64_t result = (uint64_t)sub_1004E2AD4();
  if (result)
  {
    uint64_t result = (uint64_t)sub_1004E2C24();
    if (result)
    {
      PassthroughSubject.send(_:)();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1004E2110()
{
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_singleTargetItem, (uint64_t *)&unk_100788DC0);
  sub_1000A74BC(*(id *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor), *(void *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 8), *(void *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 16), *(void *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 24), *(void *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 32), *(void *)(v0 + OBJC_IVAR____TtC9Reminders44TTRIRemindersListDetailPopoverAnchorProvider_popoverAnchor + 40));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1004E21B0()
{
  return type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider();
}

uint64_t type metadata accessor for TTRIRemindersListDetailPopoverAnchorProvider()
{
  uint64_t result = qword_1007A1940;
  if (!qword_1007A1940) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004E2204()
{
  sub_1000DF808();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1004E22AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  unint64_t v19 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = v19 + 16;

  return _swift_deallocObject(v0, v20, v2 | 7);
}

uint64_t sub_1004E28CC()
{
  uint64_t v2 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(void *)(v0 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_10000C2D4;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[2] = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_10003D2E4;
  return sub_1004E12C0(v4, v5);
}

uint64_t sub_1004E2A2C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004E2A64()
{
  return sub_1004E20B8();
}

uint64_t sub_1004E2A6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_1004E2AD4()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    *(void *)&long long v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    *((void *)&v10 + 1) = v2;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v3 = sub_10035C79C((uint64_t)v8), (v4 & 1) != 0))
    {
      sub_100038DC0(*(void *)(v1 + 56) + 32 * v3, (uint64_t)&v10);
    }
    else
    {
      long long v10 = 0u;
      long long v11 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_100055AE8((uint64_t)v8);
  }
  else
  {
    long long v10 = 0u;
    long long v11 = 0u;
  }
  sub_10003B694((uint64_t)&v10, (uint64_t)v8, &qword_100788D60);
  if (!v8[3])
  {
    sub_10003B6F8((uint64_t)v8, &qword_100788D60);
    goto LABEL_12;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100798730);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:
    id v6 = 0;
    goto LABEL_13;
  }
  id v5 = v9;
  id v6 = [v9 BOOLValue];

LABEL_13:
  sub_10003B6F8((uint64_t)&v10, &qword_100788D60);
  return v6;
}

id sub_1004E2C24()
{
  Notification.object.getter();
  if (!v8)
  {
    sub_10003B6F8((uint64_t)v7, &qword_100788D60);
    return 0;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100791C40);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v0 = [v6 popoverPresentationController];
  if (!v0)
  {

    return 0;
  }
  uint64_t v1 = v0;
  id v2 = [v0 sourceItem];
  if (v2)
  {
    id v3 = v2;
  }
  else
  {
    id v5 = [v1 sourceView];
    if (!v5) {
      id v5 = [v1 barButtonItem];
    }
    id v3 = v5;
  }
  return v3;
}

uint64_t sub_1004E2D50(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1004E2DAC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A1A20);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A1A20);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004E2E74()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks;
  int v2 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks);
  if (v2 == 2)
  {
    unsigned __int8 v3 = sub_1004E2EC0(v0);
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    unsigned __int8 v3 = v2 & 1;
  }
  return v3 & 1;
}

id sub_1004E2EC0(uint64_t a1)
{
  id v1 = [*(id *)(a1 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder) subtaskContext];
  if (!v1) {
    return 0;
  }
  int v2 = v1;
  id v14 = 0;
  id v3 = [v1 hasSubtasksWithError:&v14];
  if (v14)
  {
    id v4 = v14;
    swift_willThrow();
    if (qword_100785618 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100018BF8(v5, (uint64_t)qword_1007A1A20);
    id v6 = v4;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      id v14 = (id)swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      swift_getErrorValue();
      uint64_t v10 = Error.rem_errorDescription.getter();
      sub_1000385A8(v10, v11, (uint64_t *)&v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return 0;
  }
  id v12 = v3;

  return v12;
}

void sub_1004E3118()
{
  uint64_t v0 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor();
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x65646E696D65722ELL;
  v1._object = (void *)0xE900000000000072;
  String.append(_:)(v1);
  qword_1007A1A38 = v2;
  unk_1007A1A40 = v3;
}

uint64_t type metadata accessor for TTRIRemindersListDragReminder()
{
  return self;
}

void *sub_1004E344C()
{
  Swift::String v1 = *(void **)(*v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder);
  id v2 = v1;
  return v1;
}

uint64_t sub_1004E3480()
{
  return sub_1004E2E74() & 1;
}

uint64_t sub_1004E34A8()
{
  return REMReminder.parentReminderID.getter();
}

uint64_t sub_1004E34D8(uint64_t a1)
{
  unint64_t v28 = (unint64_t)_swiftEmptyArrayStorage;
  if (!((unint64_t)a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_15;
    }
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    if (v2) {
      goto LABEL_16;
    }
LABEL_35:
    uint64_t v2 = 1;
    goto LABEL_36;
  }
LABEL_29:
  if (a1 < 0) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_33;
  }
LABEL_3:
  uint64_t v6 = type metadata accessor for TTRIRemindersListDragReminder();
  if (v5 < 1) {
    goto LABEL_38;
  }
  uint64_t v7 = (objc_class *)v6;
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(a1 + 8 * i + 32);
    }
    uint64_t v10 = v9;
    unint64_t v24 = 0xD000000000000029;
    unint64_t v25 = 0x80000001006ABF00;
    AnyHashable.init<A>(_:)();
    UIDragItem.localObject<A>(ofType:forKey:)();
    sub_100055AE8((uint64_t)v26);
    unint64_t v11 = v27;
    if (v27)
    {
      id v12 = *(void **)&v27[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
      char v13 = v27[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList];
      id v14 = objc_allocWithZone(v7);
      v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
      *(void *)&v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v12;
      v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v13;
      v23.receiver = v14;
      v23.super_class = v7;
      id v15 = v12;
      [super init];

      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v1 = v28;
  if (v28 >> 62) {
    goto LABEL_34;
  }
LABEL_15:
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_35;
  }
LABEL_16:
  unint64_t v3 = v1 & 0xC000000000000001;
  if ((v1 & 0xC000000000000001) != 0) {
    goto LABEL_39;
  }
  if ((*(unsigned char *)(*(void *)(v1 + 32)
                 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList) & 1) != 0)
  {
    while (1)
    {
      if (v2 == 1) {
        goto LABEL_36;
      }
      uint64_t v16 = 1;
      while (v3)
      {
        uint64_t v17 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (__OFADD__(v16++, 1))
        {
          __break(1u);
          goto LABEL_29;
        }
        int v19 = *(unsigned __int8 *)(v17
                                 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
        swift_unknownObjectRelease();
        if (v19 != 1) {
          goto LABEL_27;
        }
LABEL_20:
        if (v16 == v2) {
          goto LABEL_35;
        }
      }
      if (!__OFADD__(v16, 1)) {
        break;
      }
      __break(1u);
LABEL_38:
      __break(1u);
LABEL_39:
      int v22 = *(unsigned __int8 *)(specialized _ArrayBuffer._getElementSlowPath(_:)()
                               + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
      swift_unknownObjectRelease();
      if (v22 != 1) {
        goto LABEL_27;
      }
    }
    char v20 = *(unsigned char *)(*(void *)(v1 + 32 + 8 * v16++)
                   + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList);
    if ((v20 & 1) == 0) {
      goto LABEL_27;
    }
    goto LABEL_20;
  }
LABEL_27:
  uint64_t v2 = 0;
LABEL_36:
  swift_bridgeObjectRelease_n();
  return v2;
}

id sub_1004E3820(void *a1)
{
  uint64_t v2 = (objc_class *)type metadata accessor for TTRIRemindersListDragReminder();
  unint64_t v11 = 0xD000000000000029;
  unint64_t v12 = 0x80000001006ABF00;
  AnyHashable.init<A>(_:)();
  UIDragItem.localObject<A>(ofType:forKey:)();
  sub_100055AE8((uint64_t)v13);
  unint64_t v3 = v14;
  if (v14)
  {
    id v4 = *(void **)&v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder];
    char v5 = v14[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList];
    uint64_t v6 = objc_allocWithZone(v2);
    v6[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder____lazy_storage___hasSubtasks] = 2;
    *(void *)&v6[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder] = v4;
    v6[OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_isFromRecentlyDeletedList] = v5;
    v10.receiver = v6;
    v10.super_class = v2;
    id v7 = v4;
    id v8 = [super init];
  }
  else
  {

    return 0;
  }
  return v8;
}

id sub_1004E393C(uint64_t a1, void *a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  objc_super v10 = (char *)&aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Reminder();
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)&aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  _Block_copy(a4);
  if (qword_100785620 != -1) {
    swift_once();
  }
  if (qword_1007A1A38 == a1 && (void *)unk_1007A1A40 == a2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    id v15 = self;
    aBlock = 0;
    unint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    aBlock = (void **)0xD00000000000001ALL;
    unint64_t v34 = 0x80000001006B23A0;
    uint64_t v16 = qword_1007A1A38;
    uint64_t v17 = (void *)unk_1007A1A40;
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = v16;
    v18._object = v17;
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [v15 internalErrorWithDebugDescription:v19];
  }
  else
  {
    sub_1000368FC(0, (unint64_t *)&qword_100791B70);
    if (static NSItemProviderWriting.canWriteTypeIdentifier(_:)())
    {
      uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
      unint64_t v25 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders29TTRIRemindersListDragReminder_reminder);
      *((void *)&v40 + 1) = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
      uint64_t v41 = &protocol witness table for REMReminder;
      *(void *)&long long v39 = v25;
      TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)();
      long long v39 = 0u;
      long long v40 = 0u;
      uint64_t v41 = 0;
      id v26 = v25;
      TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)();
      TTRRemindersListViewModel.Reminder.localizedDescription.getter();
      NSString v27 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v28 = String._bridgeToObjectiveC()();
      uint64_t v37 = sub_1001E1B9C;
      uint64_t v38 = v14;
      aBlock = _NSConcreteStackBlock;
      unint64_t v34 = 1107296256;
      uint64_t v35 = sub_1005DF654;
      uint64_t v36 = &unk_10074E298;
      uint64_t v29 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id v22 = [v27 loadDataWithTypeIdentifier:v28 forItemProviderCompletionHandler:v29];
      _Block_release(v29);

      sub_1004E3E1C((uint64_t)v13);
      swift_release();
      return v22;
    }
    uint64_t v30 = self;
    aBlock = 0;
    unint64_t v34 = 0xE000000000000000;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    aBlock = (void **)0xD00000000000001CLL;
    unint64_t v34 = 0x80000001006BCC10;
    v31._countAndFlagsBits = a1;
    v31._object = a2;
    String.append(_:)(v31);
    NSString v32 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [v30 internalErrorWithDebugDescription:v32];
  }
  uint64_t v21 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void, void *))a4)[2](a4, 0, v21);
  swift_release();

  return 0;
}

uint64_t sub_1004E3DE4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004E3E1C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Reminder();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1004E3E78(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_preferredTintColor] = 0;
  v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_isExpanded] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_layoutDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_gridView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_countLabel] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView_disclosureImageView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronFont] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsCellAccessoryView____lazy_storage___chevronConfiguration] = 0;
  v8.receiver = v1;
  v8.super_class = ObjectType;
  [super initWithCoder:a1];
  id v5 = v4;
  if (v4)
  {
    id v6 = v4;
    sub_100036B28();
  }
  return v5;
}

id sub_1004E403C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v5[3] = ObjectType;
  v5[0] = v0;
  id v2 = v0;
  static UIAccessibility.removeButtonShapesStatusChangeObserver(_:)();
  sub_100038CD8((uint64_t)v5);
  v4.receiver = v2;
  v4.super_class = ObjectType;
  [super dealloc];
}

void sub_1004E42AC()
{
  id v1 = [v0 layer];
  id v2 = [*(id *)&v0[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeColor] CGColor];
  [v1 setBorderColor:v2];

  double v3 = *(double *)&v0[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeWidth];
  if (v3 > 0.0)
  {
    id v4 = [v0 traitCollection];
    [v4 displayScale];

    ceil(_:toScale:)();
    double v3 = v5;
  }
  id v6 = [v0 layer];
  [v6 setBorderWidth:v3];
}

id sub_1004E44FC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeWidth] = 0;
  uint64_t v4 = OBJC_IVAR____TtC9Reminders41TTRIBoardReminderCellBackgroundStrokeView_strokeColor;
  double v5 = self;
  id v6 = v1;
  *(void *)&v1[v4] = [v5 tintColor];

  v9.receiver = v6;
  v9.super_class = ObjectType;
  [super initWithCoder:a1];

  return v7;
}

uint64_t type metadata accessor for TTRIBoardReminderCellBackgroundStrokeView()
{
  return self;
}

void *sub_1004E460C(uint64_t (*a1)(id *), void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  NSString v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        objc_super v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v4 = v15;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1004E47B8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  id v18 = (uint64_t (*)(void *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    id v6 = (unsigned char *)(a3 + 56);
    uint64_t v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v9 = *((void *)v6 - 3);
      uint64_t v8 = *((void *)v6 - 2);
      uint64_t v10 = *((void *)v6 - 1);
      char v11 = *v6;
      v19[0] = v9;
      v19[1] = v8;
      v19[2] = v10;
      char v20 = v11;
      swift_bridgeObjectRetain();
      char v12 = v18(v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
      if (v12)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v21 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1004D3898(0, v7[2] + 1, 1);
          uint64_t v7 = v21;
        }
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        uint64_t v3 = 0;
        if (v14 >= v13 >> 1)
        {
          uint64_t result = sub_1004D3898(v13 > 1, v14 + 1, 1);
          uint64_t v3 = 0;
          uint64_t v7 = v21;
        }
        v7[2] = v14 + 1;
        unint64_t v15 = &v7[4 * v14];
        v15[4] = v9;
        v15[5] = v8;
        v15[6] = v10;
        *((unsigned char *)v15 + 56) = v11;
        uint64_t v4 = a3;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v3 = 0;
      }
      ++v5;
      v6 += 32;
      if (v17 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

void sub_1004E4960(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v23 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v22 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v11 = (char *)v19 - v10;
  uint64_t v24 = _swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(a3 + 16);
  if (v21)
  {
    unint64_t v12 = 0;
    unint64_t v13 = _swiftEmptyArrayStorage;
    v19[1] = a2;
    uint64_t v20 = a3;
    v19[0] = a1;
    while (v12 < *(void *)(a3 + 16))
    {
      unint64_t v14 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
      uint64_t v15 = *(void *)(v23 + 72);
      sub_1004E6450(a3 + v14 + v15 * v12, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      char v16 = a1(v11);
      if (v3)
      {
        sub_1002F3090((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        swift_bridgeObjectRelease();
        return;
      }
      if (v16)
      {
        sub_1004E2A6C((uint64_t)v11, v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1004D3504(0, v13[2] + 1, 1);
        }
        unint64_t v13 = v24;
        unint64_t v18 = v24[2];
        unint64_t v17 = v24[3];
        if (v18 >= v17 >> 1)
        {
          sub_1004D3504(v17 > 1, v18 + 1, 1);
          unint64_t v13 = v24;
        }
        v13[2] = v18 + 1;
        sub_1004E2A6C(v22, (uint64_t)v13 + v14 + v18 * v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        a3 = v20;
        a1 = (uint64_t (*)(char *))v19[0];
      }
      else
      {
        sub_1002F3090((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      if (v21 == ++v12) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_14:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1004E4BF8(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v17 = _swiftEmptyArrayStorage;
  id v6 = *(void **)(a3 + 16);
  if (v6)
  {
    uint64_t v7 = (uint64_t (*)(long long *))result;
    unint64_t v5 = 0;
    uint64_t v8 = a3 + 32;
    uint64_t v9 = _swiftEmptyArrayStorage;
    unint64_t v13 = *(void **)(a3 + 16);
    unint64_t v14 = (uint64_t (*)(long long *))result;
    while ((unint64_t)v5 < *(void *)(a3 + 16))
    {
      sub_1000145EC(v8, (uint64_t)v16);
      char v10 = v7(v16);
      if (v3)
      {
        sub_100038CD8((uint64_t)v16);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v5;
      }
      if (v10)
      {
        sub_100038ED8(v16, (uint64_t)v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1004D3CBC(0, v9[2] + 1, 1);
        }
        uint64_t v9 = v17;
        unint64_t v12 = v17[2];
        unint64_t v11 = v17[3];
        if (v12 >= v11 >> 1)
        {
          sub_1004D3CBC(v11 > 1, v12 + 1, 1);
          uint64_t v9 = v17;
        }
        v9[2] = v12 + 1;
        uint64_t result = sub_100038ED8(v15, (uint64_t)&v9[5 * v12 + 4]);
        id v6 = v13;
        uint64_t v7 = v14;
      }
      else
      {
        uint64_t result = sub_100038CD8((uint64_t)v16);
      }
      unint64_t v5 = (void *)((char *)v5 + 1);
      v8 += 40;
      if (v6 == v5)
      {
        unint64_t v5 = v17;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v5;
  }
  return result;
}

uint64_t sub_1004E4D84(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - v7;
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v24 - v10;
  sub_1000280F8((unint64_t *)&qword_10078C880, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t result = Set.init(minimumCapacity:)();
  int64_t v13 = 0;
  uint64_t v14 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v25 = result;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          goto LABEL_23;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            goto LABEL_23;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_1004E6450(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v20, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1004E2A6C((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1005A2CAC((uint64_t)v8, (uint64_t)v5);
    uint64_t result = sub_1002F3090((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18)
  {
LABEL_23:
    swift_release();
    return v25;
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t TTRReminderIDsWithMatchingHashtagsProvider.fetchReminderIDs(include:exclude:operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v7 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v27 - v11;
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_10035E1EC(v13);
  swift_bridgeObjectRelease();
  REMHashtagLabelCollection.init(labels:)();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_10035E1EC(v14);
  swift_bridgeObjectRelease();
  REMHashtagLabelCollection.init(labels:)();
  uint64_t v30 = a3;
  Swift::String v31 = v12;
  NSString v32 = v9;
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1004E4BF8((uint64_t)sub_1004E5C08, (uint64_t)v29, a4);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    uint64_t v27 = v4;
    uint64_t v36 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v17 = v15 + 32;
    do
    {
      sub_1000145EC(v17, (uint64_t)v33);
      uint64_t v19 = v34;
      uint64_t v18 = v35;
      sub_100038D28(v33, v34);
      unint64_t v20 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
      REMObjectID.codable.getter();

      sub_100038CD8((uint64_t)v33);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v17 += 40;
      --v16;
    }
    while (v16);
    int64_t v21 = v36;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    int64_t v21 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = sub_100027AD8((unint64_t)v21, (void (*)(void))&type metadata accessor for REMObjectID_Codable, &qword_10079F788, (void (*)(uint64_t))&type metadata accessor for REMObjectID_Codable, (void (*)(id *, uint64_t))sub_1005A3704);
  swift_bridgeObjectRelease();
  int64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v24 = v9;
  uint64_t v25 = v28;
  v23(v24, v28);
  v23(v12, v25);
  return v22;
}

uint64_t sub_1004E5324(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t v63 = a4;
  uint64_t v64 = a2;
  uint64_t v68 = a3;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_1007A1B60);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v58 = (char *)&v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v57 = (char *)&v54 - v13;
  __chkstk_darwin(v14);
  uint64_t v56 = (char *)&v54 - v15;
  __chkstk_darwin(v16);
  uint64_t v55 = (char *)&v54 - v17;
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v54 - v19;
  uint64_t v21 = a1[3];
  uint64_t v22 = a1[4];
  sub_100038D28(a1, v21);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v22 + 208))(v65, v21, v22);
  uint64_t v23 = v66;
  if (!v66)
  {
    sub_1004E638C((uint64_t)v65);
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v59 = v9;
  uint64_t v60 = v10;
  uint64_t v61 = v4;
  uint64_t v24 = v67;
  sub_100038D28(v65, v66);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  sub_100038CD8((uint64_t)v65);
  v65[0] = v25;
  sub_10003B754(&qword_10078D210);
  sub_1004E650C();
  uint64_t v62 = v20;
  REMHashtagLabelCollection.init<A>(hashtags:)();
  char v26 = REMHashtagLabelCollection.isEmpty.getter();
  uint64_t v27 = v63;
  char v28 = REMHashtagLabelCollection.isEmpty.getter();
  uint64_t v29 = *(int *)(v6 + 48);
  uint64_t v30 = *(int *)(v6 + 64);
  uint64_t v31 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v8, v64, v31);
  v8[v29] = (v26 & 1) == 0;
  v8[v30] = (v28 & 1) == 0;
  int v33 = (*(uint64_t (**)(char *, uint64_t))(v32 + 88))(v8, v31);
  if (v33 == enum case for REMCustomSmartListFilterDescriptor.Operation.and(_:))
  {
    if ((v26 & 1) == 0)
    {
      uint64_t v38 = v62;
      char v37 = REMHashtagLabelCollection.isSuperset(of:)();
      uint64_t v40 = v59;
      uint64_t v39 = v60;
      if (v28)
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v38, v59);
      }
      else
      {
        uint64_t v47 = v27;
        id v48 = *(void (**)(char *, char *, uint64_t))(v60 + 16);
        uint64_t v49 = v55;
        v48(v55, v38, v59);
        uint64_t v50 = v56;
        v48(v56, v47, v40);
        if (v37) {
          char v37 = REMHashtagLabelCollection.isDisjoint(with:)();
        }
        else {
          char v37 = 0;
        }
        uint64_t v51 = *(void (**)(char *, uint64_t))(v39 + 8);
        v51(v50, v40);
        v51(v49, v40);
        v51(v38, v40);
      }
      return v37 & 1;
    }
    uint64_t v34 = v60;
    uint64_t v35 = v59;
    if ((v28 & 1) == 0)
    {
      uint64_t v36 = v62;
      char v37 = REMHashtagLabelCollection.isDisjoint(with:)();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v35);
      return v37 & 1;
    }
LABEL_10:
    (*(void (**)(char *, uint64_t))(v34 + 8))(v62, v35);
    char v37 = 0;
    return v37 & 1;
  }
  if (v33 == enum case for REMCustomSmartListFilterDescriptor.Operation.or(_:))
  {
    uint64_t v34 = v60;
    uint64_t v35 = v59;
    if (v26)
    {
      if (v28) {
        goto LABEL_10;
      }
      uint64_t v41 = v62;
      char v42 = REMHashtagLabelCollection.isDisjoint(with:)();
    }
    else
    {
      uint64_t v41 = v62;
      char v42 = REMHashtagLabelCollection.isDisjoint(with:)();
      if ((v28 & 1) == 0)
      {
        uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v34 + 16);
        unint64_t v44 = v57;
        v43(v57, v41, v35);
        uint64_t v45 = v58;
        v43(v58, v27, v35);
        uint64_t v46 = v45;
        if (v42) {
          char v37 = REMHashtagLabelCollection.isDisjoint(with:)() ^ 1;
        }
        else {
          char v37 = 1;
        }
        uint64_t v52 = *(void (**)(char *, uint64_t))(v34 + 8);
        v52(v46, v35);
        v52(v44, v35);
        v52(v62, v35);
        return v37 & 1;
      }
    }
    (*(void (**)(char *, uint64_t))(v34 + 8))(v41, v35);
    char v37 = v42 ^ 1;
    return v37 & 1;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t TTRReminderIDsWithMatchingHashtagsProvider.fetchAllTaggedReminderIDs()(uint64_t a1)
{
  char v28 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    uint64_t v3 = a1 + 32;
    uint64_t v4 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_1000145EC(v3, (uint64_t)&v25);
      uint64_t v5 = v26;
      uint64_t v6 = v27;
      sub_100038D28(&v25, v26);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v6 + 208))(&v22, v5, v6);
      uint64_t v7 = v23;
      if (v23)
      {
        uint64_t v8 = v24;
        sub_100038D28(&v22, v23);
        uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
        sub_100038CD8((uint64_t)&v22);
        if ((v9 & 0xC000000000000001) != 0) {
          uint64_t v10 = __CocoaSet.count.getter();
        }
        else {
          uint64_t v10 = *(void *)(v9 + 16);
        }
        swift_bridgeObjectRelease();
        if (v10)
        {
          sub_100038ED8(&v25, (uint64_t)&v22);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1004D3CBC(0, v4[2] + 1, 1);
          }
          uint64_t v4 = v28;
          unint64_t v12 = v28[2];
          unint64_t v11 = v28[3];
          if (v12 >= v11 >> 1)
          {
            sub_1004D3CBC(v11 > 1, v12 + 1, 1);
            uint64_t v4 = v28;
          }
          v4[2] = v12 + 1;
          sub_100038ED8(&v22, (uint64_t)&v4[5 * v12 + 4]);
          goto LABEL_5;
        }
      }
      else
      {
        sub_1004E638C((uint64_t)&v22);
      }
      sub_100038CD8((uint64_t)&v25);
LABEL_5:
      v3 += 40;
      if (!--v2)
      {
        uint64_t v13 = v28;
        goto LABEL_18;
      }
    }
  }
  uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v14 = v13[2];
  if (v14)
  {
    *(void *)&long long v22 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v15 = (uint64_t)(v13 + 4);
    do
    {
      sub_1000145EC(v15, (uint64_t)&v25);
      uint64_t v16 = v26;
      uint64_t v17 = v27;
      sub_100038D28(&v25, v26);
      uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
      REMObjectID.codable.getter();

      sub_100038CD8((uint64_t)&v25);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v15 += 40;
      --v14;
    }
    while (v14);
    uint64_t v19 = (void *)v22;
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t v20 = sub_100027AD8((unint64_t)v19, (void (*)(void))&type metadata accessor for REMObjectID_Codable, &qword_10079F788, (void (*)(uint64_t))&type metadata accessor for REMObjectID_Codable, (void (*)(id *, uint64_t))sub_1005A3704);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1004E5BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.fetchReminderIDs(include:exclude:operation:)(a1, a2, a3, *v3);
}

uint64_t sub_1004E5BEC()
{
  return TTRReminderIDsWithMatchingHashtagsProvider.fetchAllTaggedReminderIDs()(*v0);
}

uint64_t sub_1004E5C08(void *a1)
{
  return sub_1004E5324(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32)) & 1;
}

uint64_t sub_1004E5C2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1000280F8(&qword_10079C8E0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1004E6450(v11, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005A398C((uint64_t)v8, (uint64_t)v6);
      sub_1002F3090((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1004E5DB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v13 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_1000280F8((unint64_t *)&qword_10078C880, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v14 = result;
  if (v9)
  {
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v12 = *(void *)(v3 + 72);
    do
    {
      sub_1004E6450(v11, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1005A2CAC((uint64_t)v8, (uint64_t)v6);
      sub_1002F3090((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v11 += v12;
      --v9;
    }
    while (v9);
    return v14;
  }
  return result;
}

uint64_t sub_1004E5F44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_1005A4348(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1004E5FDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  char v28 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v27 = (char *)v21 - v6;
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + 16);
  sub_1000280F8((unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v29 = Set.init(minimumCapacity:)();
  if (v10)
  {
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = v11 + 40;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 32);
    long long v25 = v12;
    long long v22 = (void (**)(char *, char *, uint64_t))(v11 + 16);
    uint64_t v23 = v14;
    uint64_t v26 = v11;
    uint64_t v16 = (void (**)(uint64_t, uint64_t))(v11 - 8);
    v21[1] = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v18 = (uint64_t)v27;
    uint64_t v17 = v28;
    while (1)
    {
      v25(v9, v13, v2);
      uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v9, 0, 1, v2);
      if ((*v24)(v9, 1, v2) == 1) {
        break;
      }
      (*v22)(v17, v9, v2);
      sub_1005A44F8(v18, v17);
      (*v16)(v18, v2);
      v13 += v23;
      if (!--v10) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
LABEL_7:
    v19(v9, 1, 1, v2);
  }
  return v29;
}

uint64_t sub_1004E6284(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004E63FC();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v5 = *v4++;
      sub_1005A4C20(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_1004E62F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004E64B8();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v9 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 40);
    do
    {
      unsigned int v5 = (void *)*((void *)v4 - 1);
      char v6 = *v4;
      v4 += 16;
      id v7 = v5;
      sub_1005A5064((uint64_t)v8, v5, v6);

      --v2;
    }
    while (v2);
    return v9;
  }
  return result;
}

uint64_t sub_1004E638C(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100787488);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for TTRReminderIDsWithMatchingHashtagsProvider()
{
  return &type metadata for TTRReminderIDsWithMatchingHashtagsProvider;
}

unint64_t sub_1004E63FC()
{
  unint64_t result = qword_1007A1B50;
  if (!qword_1007A1B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1B50);
  }
  return result;
}

uint64_t sub_1004E6450(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1004E64B8()
{
  unint64_t result = qword_1007A1B58;
  if (!qword_1007A1B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A1B58);
  }
  return result;
}

unint64_t sub_1004E650C()
{
  unint64_t result = qword_10078D218;
  if (!qword_10078D218)
  {
    sub_100039710(&qword_10078D210);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078D218);
  }
  return result;
}

void sub_1004E6568()
{
  _StringGuts.grow(_:)(16);
  uint64_t v0 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor();
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0x616E7265746E692ELL;
  v3._object = (void *)0xEE007473696C2E6CLL;
  String.append(_:)(v3);
  qword_1007A1B70 = v2;
  *(void *)algn_1007A1B78 = v1;
}

uint64_t sub_1004E6640()
{
  return type metadata accessor for TTRIAccountsListsDragItem();
}

uint64_t type metadata accessor for TTRIAccountsListsDragItem()
{
  uint64_t result = qword_1007A1BA8;
  if (!qword_1007A1BA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004E6694()
{
  uint64_t result = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1004E6A84()
{
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10066C6F0;
  if (qword_100785628 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)algn_1007A1B78;
  *(void *)(v0 + 32) = qword_1007A1B70;
  *(void *)(v0 + 40) = v1;
  uint64_t v2 = self;
  swift_bridgeObjectRetain();
  id v3 = [v2 writableTypeIdentifiersForItemProvider];
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100569C10(v4);
  return v0;
}

id sub_1004E6B74(uint64_t a1, void *a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a4;
  _Block_copy(a4);
  if (qword_100785628 != -1) {
    swift_once();
  }
  BOOL v9 = qword_1007A1B70 == a1 && *(void *)algn_1007A1B78 == (void)a2;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    uint64_t v10 = self;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v11 = qword_1007A1B70;
    uint64_t v12 = *(void **)algn_1007A1B78;
    swift_bridgeObjectRetain();
    v13._countAndFlagsBits = v11;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    NSString v14 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v15 = [v10 internalErrorWithDebugDescription:v14];
  }
  else
  {
    sub_1002D0F54();
    if (static NSItemProviderWriting.canWriteTypeIdentifier(_:)())
    {
      uint64_t v19 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
      uint64_t v20 = a3 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsDragItem_listState;
      char v28 = (void *)type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
      uint64_t v29 = (void (*)(uint64_t, unint64_t, uint64_t))&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
      uint64_t v21 = sub_1000394A8(v27);
      sub_1004E6F2C(v20, (uint64_t)v21);
      NSUserActivity.setPayload(_:)();
      sub_100038CD8((uint64_t)v27);
      NSString v22 = String._bridgeToObjectiveC()();
      uint64_t v29 = sub_1001E1B9C;
      uint64_t v30 = v8;
      v27[0] = (uint64_t)_NSConcreteStackBlock;
      v27[1] = 1107296256;
      v27[2] = (uint64_t)sub_1005DF654;
      char v28 = &unk_10074E310;
      uint64_t v23 = _Block_copy(v27);
      swift_retain();
      swift_release();
      id v17 = [v19 loadDataWithTypeIdentifier:v22 forItemProviderCompletionHandler:v23];
      _Block_release(v23);
      swift_release();

      return v17;
    }
    uint64_t v24 = self;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    v25._countAndFlagsBits = a1;
    v25._object = a2;
    String.append(_:)(v25);
    NSString v26 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v15 = [v24 internalErrorWithDebugDescription:v26];
  }
  uint64_t v16 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void, void *))a4)[2](a4, 0, v16);
  swift_release();

  return 0;
}

uint64_t sub_1004E6EF4()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004E6F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004E6F90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004E6FEC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A1BD0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A1BD0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004E70B4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 && *(unsigned char *)(v1 + 24) == 1)
  {
    *(unsigned char *)(v1 + 24) = 0;
    if (*(void *)(v1 + 16))
    {
      swift_retain();
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    uint64_t v2 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, enum case for PromiseError.cancelled(_:), v2);
    DeferredPromise.reject(_:)();
    swift_errorRelease();
    swift_release();
  }
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1004E71C0()
{
  sub_1004E70B4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListScrollSessionController()
{
  return self;
}

uint64_t sub_1004E7218(uint64_t a1, uint64_t a2)
{
  return *(unsigned __int8 *)(a2 + 16);
}

uint64_t sub_1004E7258(uint64_t result)
{
  if (*(unsigned char *)(result + 24) == 1)
  {
    *(unsigned char *)(result + 24) = 0;
    if (*(void *)(result + 16))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t v1 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v1 - 8) + 104))(v2, enum case for PromiseError.cancelled(_:), v1);
    DeferredPromise.reject(_:)();
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_1004E7340()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ScrollWithCompensationSession()
{
  return self;
}

uint64_t sub_1004E73A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v42 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  id v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)&v41 - v16;
  sub_1002AFA50(a1, (uint64_t)&v41 - v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = sub_1004EDB78((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload == 2)
  {
    sub_1002AFA50(a1, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v20 = (int *)v9;
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = &off_10074E4D0;
    uint64_t v41 = sub_1000394A8((uint64_t *)a2);
    uint64_t v21 = v11;
    sub_1002AFA50((uint64_t)v15, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v22 = *(void *)(v3 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 8))(v3, ObjectType, v22);
      uint64_t v25 = v3;
      swift_retain();
      swift_unknownObjectRelease();
      sub_1002AFA50((uint64_t)v15, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v8, 0, 1, v12);
      swift_retain();
      uint64_t v26 = TTRMutableTreeStorage.numberOfChildren(of:)();
      swift_release();
      sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
      BOOL v27 = v26 > 0;
      uint64_t v28 = (uint64_t)v21;
    }
    else
    {
      uint64_t v29 = qword_100785638;
      uint64_t v25 = v3;
      swift_retain();
      if (v29 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100018BF8(v30, (uint64_t)qword_1007A1D48);
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.fault.getter();
      uint64_t v28 = (uint64_t)v21;
      if (os_log_type_enabled(v31, v32))
      {
        int v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v33, 2u);
        swift_slowDealloc();
      }

      BOOL v27 = 0;
      uint64_t v24 = 0;
    }
    *(unsigned char *)(v28 + v20[5]) = v27;
    *(void *)(v28 + v20[6]) = sub_1004E8E04(v24);
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v34 = *(void *)(v25 + 24);
      uint64_t v35 = swift_getObjectType();
      uint64_t v36 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t))(v34 + 16))(v25, v15, v35, v34);
      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
      if (qword_100785638 != -1) {
        swift_once();
      }
      uint64_t v37 = type metadata accessor for Logger();
      sub_100018BF8(v37, (uint64_t)qword_1007A1D48);
      uint64_t v38 = Logger.logObject.getter();
      os_log_type_t v39 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v40 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v40 = 0;
        _os_log_impl((void *)&_mh_execute_header, v38, v39, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v40, 2u);
        swift_slowDealloc();
      }
      swift_release();

      uint64_t v36 = 0;
    }
    swift_release();
    sub_1004EDB78((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)(v28 + v20[7]) = v36;
    return sub_1004ED468(v28, (uint64_t)v41, type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

BOOL sub_1004E78F8(void *a1)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);
    swift_unknownObjectRelease();
    id v6 = [a1 objectID];
    swift_beginAccess();
    uint64_t v7 = v5[12];
    if (*(void *)(v7 + 16))
    {
      id v8 = v6;
      unint64_t v9 = sub_10035C188((uint64_t)v8);
      if (v10)
      {
        uint64_t v11 = *(void *)(*(void *)(v7 + 56) + 8 * v9);
        swift_endAccess();
        swift_bridgeObjectRetain();

        id v12 = v8;
        swift_retain();
        uint64_t v13 = (void *)sub_1000502F8(v11, v5, (uint64_t)v12);
        swift_bridgeObjectRelease();
        swift_release_n();

LABEL_12:
        uint64_t v19 = v13[2];
        swift_bridgeObjectRelease();
        return v19 == 0;
      }
    }
    swift_endAccess();
    swift_release();
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_12;
  }
  if (qword_100785638 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100018BF8(v14, (uint64_t)qword_1007A1D48);
  id v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v15, v16))
  {
    id v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v17, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_1004E7B18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v9, (uint64_t *)&unk_100788DC0);
  uint64_t v10 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
  uint64_t v11 = swift_allocObject();
  id v12 = (void *)(v11
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  *id v12 = 0;
  v12[1] = 0;
  uint64_t v13 = v11
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget;
  *(void *)(v13 + 8) = 0;
  *(void *)(v13 + 16) = 0;
  *(void *)uint64_t v13 = 0;
  *(unsigned char *)(v13 + 24) = -1;
  uint64_t v14 = v11
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  uint64_t v15 = sub_10003B754(&qword_100789648);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(unsigned char *)(v11
           + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder) = 2;
  sub_100028C3C((uint64_t)v9, v11+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, (uint64_t *)&unk_100788DC0);
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex) = a2;
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability) = v3;
  os_log_type_t v16 = (uint64_t (**)())(v11
                       + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  uint64_t v17 = *(void *)(v11
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  *os_log_type_t v16 = sub_1004EE288;
  v16[1] = (uint64_t (*)())v11;
  swift_retain();
  swift_retain();
  uint64_t result = sub_1000499C4(v17);
  a3[3] = v10;
  a3[4] = (uint64_t)&off_10074E368;
  *a3 = v11;
  return result;
}

uint64_t sub_1004E7CE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v24 = a1;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002AFA50(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
  uint64_t v11 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = (void *)(v12
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  void *v13 = 0;
  v13[1] = 0;
  uint64_t v14 = v12
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget;
  *(void *)(v14 + 8) = 0;
  *(void *)(v14 + 16) = 0;
  *(void *)uint64_t v14 = 0;
  *(unsigned char *)(v14 + 24) = -1;
  uint64_t v15 = v12
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  uint64_t v16 = sub_10003B754(&qword_100789648);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(unsigned char *)(v12
           + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder) = 2;
  sub_100028C3C((uint64_t)v10, v12+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, (uint64_t *)&unk_100788DC0);
  *(void *)(v12
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex) = 0;
  *(void *)(v12
            + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability) = v2;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  sub_1002AFA50(v24, (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v18 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1004ED468((uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(void *)(v19 + ((v7 + v18 + 7) & 0xFFFFFFFFFFFFFFF8)) = v17;
  uint64_t v20 = (void *)(v12
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  uint64_t v21 = *(void *)(v12
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  *uint64_t v20 = sub_1004EE1EC;
  v20[1] = v19;
  swift_retain();
  uint64_t result = sub_1000499C4(v21);
  a2[3] = v11;
  a2[4] = (uint64_t)&off_10074E368;
  *a2 = v12;
  return result;
}

uint64_t sub_1004E7FE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10003B754(&qword_1007A1FE8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000145EC(a1, (uint64_t)v17);
  sub_10003B754(&qword_10078FAD8);
  int v11 = swift_dynamicCast();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1004ED468((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
    sub_1002AFA50((uint64_t)v10, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1004EDB78((uint64_t)v10, type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem);
    uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_10003B6F8((uint64_t)v6, &qword_1007A1FE8);
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

uint64_t sub_1004E8230()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A1D48);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A1D48);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004E82F8()
{
  uint64_t v0 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v15 - v8;
  __chkstk_darwin(v7);
  int v11 = (char *)&v15 - v10;
  sub_1004E8570((uint64_t)v2);
  uint64_t v12 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v2, 1, v12))
  {
    sub_10003B6F8((uint64_t)v2, &qword_100789648);
    return 2;
  }
  else
  {
    sub_1002AFA50((uint64_t)v2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10003B6F8((uint64_t)v2, &qword_100789648);
    sub_1004ED468((uint64_t)v9, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1004ED468((uint64_t)v11, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t result = 2;
    switch(EnumCaseMultiPayload)
    {
      case 1:
      case 2:
        sub_1004EDB78((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t result = 0;
        break;
      case 10:
      case 11:
        return result;
      default:
        sub_1004EDB78((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return 2;
    }
  }
  return result;
}

uint64_t sub_1004E8570@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10003B754(&qword_10078FAC8);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1
     + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation;
  swift_beginAccess();
  sub_10003B694(v9, (uint64_t)v8, &qword_10078FAC8);
  uint64_t v10 = sub_10003B754(&qword_100789648);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_100028C3C((uint64_t)v8, a1, &qword_100789648);
  }
  sub_10003B6F8((uint64_t)v8, &qword_10078FAC8);
  sub_1004EA208(v1, a1);
  sub_10003B694(a1, (uint64_t)v6, &qword_100789648);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_10000A550((uint64_t)v6, v9, &qword_10078FAC8);
  return swift_endAccess();
}

uint64_t sub_1004E8748(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a3;
  uint64_t v54 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v54);
  uint64_t v6 = (void **)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v7 - 8);
  uint64_t v55 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v53 - v13;
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (id *)((char *)&v53 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = a1[3];
  uint64_t v19 = a1[4];
  sub_100038D28(a1, v18);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(v18, v19);
  if (v20)
  {
    uint64_t v21 = (void *)v20;
    sub_1002AFA50(a2, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_1004ED468((uint64_t)v14, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      id v22 = *v17;
      char v23 = static NSObject.== infix(_:_:)();

      sub_1004EDB78((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      if (v23) {
        return 2;
      }
    }
    else
    {

      sub_1004EDB78((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  sub_1002AFA50(a2, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v47 = &type metadata accessor for TTRRemindersListViewModel.Item;
    uint64_t v48 = (uint64_t)v12;
LABEL_31:
    sub_1004EDB78(v48, (uint64_t (*)(void))v47);
    return 0;
  }
  uint64_t v25 = v55;
  sub_1004ED468((uint64_t)v12, v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1002AFA50(v25, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1004EDB78(v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v47 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
    uint64_t v48 = (uint64_t)v6;
    goto LABEL_31;
  }
  uint64_t v26 = *v6;
  uint64_t v27 = a1[3];
  uint64_t v28 = a1[4];
  sub_100038D28(a1, v27);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  if (!v29)
  {
    sub_1004EDB78(v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

    return 0;
  }
  uint64_t v30 = (void *)v29;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_20;
  }
  uint64_t v32 = Strong;
  id v33 = [v30 objectID:v53, v54];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066D470;
  *(void *)(inited + 32) = v33;
  unint64_t v56 = inited;
  specialized Array._endMutation()();
  unint64_t v35 = v56;
  id v36 = v33;
  uint64_t v37 = sub_100028180(v35);
  swift_bridgeObjectRelease();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v49 = type metadata accessor for Logger();
    sub_100018BF8(v49, (uint64_t)qword_1007A1D48);
    uint64_t v50 = Logger.logObject.getter();
    os_log_type_t v51 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v52 = 0;
      _os_log_impl((void *)&_mh_execute_header, v50, v51, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v52, 2u);
      swift_slowDealloc();
    }
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  uint64_t v38 = *(void *)(v32 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 48))(v32, v37, ObjectType, v38);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v40)
  {
LABEL_26:

    swift_release();
    goto LABEL_30;
  }
  if (!*(void *)(v40 + 16))
  {

    swift_release();
LABEL_29:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  id v41 = v36;
  unint64_t v42 = sub_10035C188((uint64_t)v41);
  if ((v43 & 1) == 0)
  {

    swift_release();
    goto LABEL_29;
  }
  id v44 = *(id *)(*(void *)(v40 + 56) + 8 * v42);
  swift_release();

  swift_bridgeObjectRelease();
  uint64_t v45 = (void *)TTRSectionID.remObjectID.getter();

  if (!v45)
  {
LABEL_20:

LABEL_30:
    uint64_t v47 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
    uint64_t v48 = v25;
    goto LABEL_31;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  char v46 = static NSObject.== infix(_:_:)();

  sub_1004EDB78(v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v46) {
    return 2;
  }
  return 0;
}

id sub_1004E8E04(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (id *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1)
  {
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
    goto LABEL_6;
  }
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
LABEL_6:
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1004EDB78((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  sub_1004ED468((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  id v9 = *v7;
  sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  return v9;
}

void *sub_1004E9008(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 28));
  id v3 = v2;
  return v2;
}

uint64_t sub_1004E9034(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 20));
}

void *sub_1004E9040(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 24));
  id v3 = v2;
  return v2;
}

void *sub_1004E906C()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0
     + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget;
  id v3 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget);
  uint64_t v4 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget
                + 8);
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v6 = v3;
  int v7 = *(unsigned __int8 *)(v2 + 24);
  if (v7 == 255)
  {
    uint64_t v6 = (void *)sub_1004E9154(v1);
    uint64_t v14 = *(void **)(v2 + 8);
    uint64_t v15 = *(void **)v2;
    uint64_t v13 = *(void **)(v2 + 16);
    *(void *)uint64_t v2 = v6;
    *(void *)(v2 + 8) = v8;
    *(void *)(v2 + 16) = v9;
    char v10 = *(unsigned char *)(v2 + 24);
    *(unsigned char *)(v2 + 24) = v11;
    sub_1000AAE14(v6, v8, v9, v11);
    sub_100172348(v15, v14, v13, v10);
  }
  sub_10017235C(v3, v4, v5, v7);
  return v6;
}

uint64_t sub_1004E9154(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v2);
  uint64_t v4 = (void **)((char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v5 - 8);
  int v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v8 - 8);
  char v10 = (long long *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_10079C9F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v49 - v18;
  sub_1004E8570((uint64_t)v10);
  uint64_t v20 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v10, 1, v20) == 1)
  {
    uint64_t v21 = &qword_100789648;
    id v22 = v10;
LABEL_3:
    sub_10003B6F8((uint64_t)v22, v21);
  }
  else
  {
    sub_1004ED468((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1004ED468((uint64_t)v13, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1002AFA50((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        sub_1004E99E8((uint64_t)v19, &v49);
        sub_1004EDB78((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (!(void)v49)
        {
          sub_10003B6F8((uint64_t)&v49, &qword_1007A1FF0);
          uint64_t v23 = (uint64_t)v16;
          goto LABEL_9;
        }
        uint64_t v52 = (void *)v49;
        sub_100038ED8((long long *)((char *)&v49 + 8), (uint64_t)&v53);
        uint64_t v26 = v52;
        sub_100038ED8(&v53, (uint64_t)v56);
        uint64_t v27 = v57;
        uint64_t v28 = v58;
        sub_100038D28(v56, v57);
        uint64_t v24 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v28 + 24))(v26, v27, v28);

        sub_100038CD8((uint64_t)v56);
        sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return v24;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:
        sub_1004EDB78((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v23 = (uint64_t)v16;
        goto LABEL_9;
      case 0xAu:
      case 0xBu:
        goto LABEL_8;
      default:
        sub_1004ED468((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if ((sub_1004EA1BC() & 1) == 0)
        {
          sub_1002AFA50((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              os_log_type_t v39 = *v4;
              uint64_t v40 = *(void *)(a1
                              + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
              if (!swift_unknownObjectWeakLoadStrong())
              {
                if (qword_100785638 != -1) {
                  swift_once();
                }
                uint64_t v45 = type metadata accessor for Logger();
                sub_100018BF8(v45, (uint64_t)qword_1007A1D48);
                char v46 = Logger.logObject.getter();
                os_log_type_t v47 = static os_log_type_t.fault.getter();
                if (os_log_type_enabled(v46, v47))
                {
                  uint64_t v48 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v48 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v46, v47, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v48, 2u);
                  swift_slowDealloc();
                }

                goto LABEL_16;
              }
              uint64_t v41 = *(void *)(v40 + 24);
              uint64_t ObjectType = swift_getObjectType();
              uint64_t v24 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v41 + 40))(v40, v39, ObjectType, v41);
              int v44 = ~v43;

              swift_unknownObjectRelease();
              if (!v44) {
                goto LABEL_16;
              }
              sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              sub_1004EDB78((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              return v24;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              sub_1004EDB78((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
              goto LABEL_16;
            default:
LABEL_16:
              uint64_t v29 = *(void *)(a1
                              + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
              if (swift_unknownObjectWeakLoadStrong())
              {
                uint64_t v30 = *(void *)(v29 + 24);
                uint64_t v31 = swift_getObjectType();
                (*(void (**)(long long *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(v30 + 32))(&v49, v29, v7, v31, v30);
                swift_unknownObjectRelease();
                uint64_t v32 = *((void *)&v50 + 1);
                sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
                if (v32)
                {
                  sub_100038ED8(&v49, (uint64_t)&v52);
                  uint64_t v33 = v54;
                  uint64_t v34 = v55;
                  sub_100038D28(&v52, v54);
                  uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 16))(v33, v34);
                  sub_1004EDB78((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                  sub_100038CD8((uint64_t)&v52);
                  return v24;
                }
              }
              else
              {
                if (qword_100785638 != -1) {
                  swift_once();
                }
                uint64_t v35 = type metadata accessor for Logger();
                sub_100018BF8(v35, (uint64_t)qword_1007A1D48);
                id v36 = Logger.logObject.getter();
                os_log_type_t v37 = static os_log_type_t.fault.getter();
                if (os_log_type_enabled(v36, v37))
                {
                  uint64_t v38 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v38 = 0;
                  _os_log_impl((void *)&_mh_execute_header, v36, v37, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v38, 2u);
                  swift_slowDealloc();
                }

                uint64_t v51 = 0;
                long long v49 = 0u;
                long long v50 = 0u;
                sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              }
              sub_1004EDB78((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v21 = &qword_1007A0A50;
              id v22 = &v49;
              break;
          }
          goto LABEL_3;
        }
        sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
LABEL_8:
        uint64_t v23 = (uint64_t)v19;
LABEL_9:
        sub_1004EDB78(v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        break;
    }
  }
  return 0;
}

void sub_1004E99E8(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  int v7 = (long long *)((char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v56 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (void **)((char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = *(void *)(v2
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100018BF8(v30, (uint64_t)qword_1007A1D48);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v33, 2u);
      swift_slowDealloc();
    }

    goto LABEL_24;
  }
  uint64_t v55 = v10;
  uint64_t v18 = *(void *)(v17 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(v17, ObjectType, v18);
  swift_unknownObjectRelease();
  sub_1002AFA50(a1, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    swift_release();
    sub_1004EDB78((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_24:
    a2[1] = 0u;
    a2[2] = 0u;
    *a2 = 0u;
    return;
  }
  sub_1004ED468((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  if ((sub_10045AAA4() & 1) == 0)
  {
    sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    swift_release();
    goto LABEL_24;
  }
  uint64_t v54 = a2;
  uint64_t v21 = *v16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v53 = v20;
  if (!Strong)
  {
    uint64_t v34 = qword_100785638;
    id v35 = v21;
    if (v34 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100018BF8(v36, (uint64_t)qword_1007A1D48);
    os_log_type_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v39, 2u);
      swift_slowDealloc();
    }

    goto LABEL_21;
  }
  uint64_t v23 = *(void *)(v17 + 24);
  uint64_t v24 = swift_getObjectType();
  uint64_t v51 = *(uint64_t (**)(uint64_t, id, uint64_t, uint64_t))(v23 + 24);
  uint64_t v52 = v24;
  id v25 = v21;
  uint64_t v26 = (void *)v51(v17, v25, v52, v23);

  swift_unknownObjectRelease();
  if (!v26)
  {
LABEL_21:
    sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
LABEL_22:
    swift_release();
LABEL_23:
    a2 = v54;
    goto LABEL_24;
  }
  id v27 = [v26 subtaskContext];

  if (!v27)
  {
    sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    goto LABEL_22;
  }
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  if ((*(unsigned int (**)(long long *, uint64_t, uint64_t))(v56 + 48))(v7, 1, v11) == 1)
  {
    sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    swift_release();
    uint64_t v28 = (uint64_t *)&unk_100788DC0;
    uint64_t v29 = v7;
LABEL_37:
    sub_10003B6F8((uint64_t)v29, v28);
    goto LABEL_23;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  a2 = v54;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

    swift_release();
    sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_24;
  }
  uint64_t v41 = v26;
  uint64_t v42 = (uint64_t)v55;
  sub_1004ED468((uint64_t)v7, (uint64_t)v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_100018BF8(v47, (uint64_t)qword_1007A1D48);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v48, v49))
    {
      long long v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v50, 2u);
      swift_slowDealloc();
    }

    uint64_t v59 = 0;
    long long v57 = 0u;
    long long v58 = 0u;
    swift_release();
    sub_1004EDB78((uint64_t)v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    goto LABEL_36;
  }
  uint64_t v43 = *(void *)(v17 + 24);
  uint64_t v44 = swift_getObjectType();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 32))(&v57, v17, v42, v44, v43);
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v45 = *((void *)&v58 + 1);
  sub_1004EDB78(v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1004EDB78((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  if (!v45)
  {
LABEL_36:

    uint64_t v28 = &qword_1007A0A50;
    uint64_t v29 = &v57;
    goto LABEL_37;
  }
  sub_100038ED8(&v57, (uint64_t)v60);
  char v46 = v54;
  *uint64_t v54 = v41;
  sub_100038ED8(v60, (uint64_t)(v46 + 1));
}

uint64_t sub_1004EA1BC()
{
  uint64_t v1 = OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___isAfterPlaceholderReminder);
  if (v2 == 2)
  {
    char v3 = sub_1004EADC8(v0);
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    char v3 = v2 & 1;
  }
  return v3 & 1;
}

uint64_t sub_1004EA208@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v53 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v55 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v49 = (uint64_t)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10079C900);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = sub_10003B754(&qword_10078FA98);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_10003B754(&qword_10078FAA0);
  uint64_t v17 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v52 = (uint64_t)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(void *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100018BF8(v36, (uint64_t)qword_1007A1D48);
    os_log_type_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v37, v38))
    {
      os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v39, 2u);
      swift_slowDealloc();
    }

    goto LABEL_14;
  }
  uint64_t v51 = a2;
  uint64_t v20 = *(void *)(v19 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 8))(v19, ObjectType, v20);
  swift_unknownObjectRelease();
  uint64_t v23 = a1
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent;
  uint64_t v24 = *(void *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex);
  id v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
  uint64_t v26 = 1;
  uint64_t v50 = v6;
  v25(v11, 1, 1, v6);
  sub_1000DFC68(v23, (uint64_t)v11);
  *(void *)&v11[*(int *)(v8 + 36)] = v24;
  sub_100028C3C((uint64_t)v11, (uint64_t)v13, &qword_10079C900);
  uint64_t v27 = *(void *)(v22 + 32);
  uint64_t v28 = swift_getObjectType();
  uint64_t v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 24))(v13, 1, v28, v27);
  if (*(void *)(v29 + 16))
  {
    sub_10003B694(v29 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v16, &qword_10078FAA0);
    uint64_t v26 = 0;
  }
  uint64_t v30 = v54;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v16, v26, 1, v54);
  swift_release();
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)v13, &qword_10079C900);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v30);
  uint64_t v32 = v50;
  a2 = v51;
  uint64_t v33 = v55;
  if (v31 == 1)
  {
    uint64_t v34 = &qword_10078FA98;
    uint64_t v35 = (uint64_t)v16;
LABEL_13:
    sub_10003B6F8(v35, v34);
LABEL_14:
    uint64_t v42 = sub_10003B754(&qword_100789658);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a2, 1, 1, v42);
  }
  uint64_t v40 = v52;
  sub_100028C3C((uint64_t)v16, v52, &qword_10078FAA0);
  uint64_t v41 = v53;
  sub_10003B694(v40, v53, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v41, 1, v32) == 1)
  {
    sub_10003B6F8(v40, &qword_10078FAA0);
    uint64_t v34 = (uint64_t *)&unk_100788DC0;
    uint64_t v35 = v41;
    goto LABEL_13;
  }
  uint64_t v44 = v49;
  sub_1004ED468(v41, v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v45 = sub_10003B754(&qword_100789658);
  uint64_t v46 = *(int *)(v45 + 48);
  sub_1004ED468(v44, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v47 = *(void *)(v40 + *(int *)(v30 + 36));
  sub_10003B6F8(v40, &qword_10078FAA0);
  *(void *)(a2 + v46) = v47;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(a2, 0, 1, v45);
}

uint64_t sub_1004EA800(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (void **)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_100038D28(a1, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  if (v16)
  {
    uint64_t v17 = (void *)v16;
    sub_1002AFA50(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        sub_1004ED468((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        id v20 = [v17 objectID];
        uint64_t v21 = *v7;
        sub_1000368FC(0, qword_10078E3D0);
        id v22 = v21;
        char v23 = static NSObject.== infix(_:_:)();

        if ((v23 & 1) != 0
          || (uint64_t v24 = a1[3],
              uint64_t v25 = a1[4],
              sub_100038D28(a1, v24),
              ((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(v24, v25) & 1) != 0))
        {
          uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.ReminderID;
          uint64_t v19 = (uint64_t)v7;
          goto LABEL_9;
        }
        sub_1004E99E8(a2, &v41);
        if ((void)v41)
        {
          uint64_t v44 = (void *)v41;
          sub_100038ED8((long long *)((char *)&v41 + 8), (uint64_t)&v45);
          os_log_type_t v38 = v44;
          sub_100038ED8(&v45, (uint64_t)v48);
          uint64_t v39 = v49;
          uint64_t v40 = v50;
          sub_100038D28(v48, v49);
          char v26 = (*(uint64_t (**)(void *, void *, uint64_t, uint64_t))(v40 + 40))(v17, v38, v39, v40);

          sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_100038CD8((uint64_t)v48);
          return v26 & 1;
        }
        sub_10003B6F8((uint64_t)&v41, &qword_1007A1FF0);

        sub_1004EDB78((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        break;
      case 3u:
      case 4u:
      case 5u:
      case 6u:
      case 7u:
      case 8u:
      case 9u:

        sub_1004EDB78((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        break;
      case 0xAu:
      case 0xBu:
        goto LABEL_10;
      default:
        sub_1004ED468((uint64_t)v10, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (sub_1004EA1BC())
        {
          uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v19 = (uint64_t)v13;
LABEL_9:
          sub_1004EDB78(v19, (uint64_t (*)(void))v18);
LABEL_10:
        }
        else
        {
          uint64_t v28 = *(void *)(v2
                          + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v29 = *(void *)(v28 + 24);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(long long *__return_ptr, uint64_t, char *, uint64_t, uint64_t))(v29 + 32))(&v41, v28, v13, ObjectType, v29);
            swift_unknownObjectRelease();
            uint64_t v31 = *((void *)&v42 + 1);
            sub_1004EDB78((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            if (v31)
            {
              sub_100038ED8(&v41, (uint64_t)&v44);
              uint64_t v32 = v46;
              uint64_t v33 = v47;
              sub_100038D28(&v44, v46);
              char v26 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v33 + 32))(v17, v32, v33);

              sub_100038CD8((uint64_t)&v44);
              return v26 & 1;
            }
          }
          else
          {
            if (qword_100785638 != -1) {
              swift_once();
            }
            uint64_t v34 = type metadata accessor for Logger();
            sub_100018BF8(v34, (uint64_t)qword_1007A1D48);
            uint64_t v35 = Logger.logObject.getter();
            os_log_type_t v36 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v35, v36))
            {
              os_log_type_t v37 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)os_log_type_t v37 = 0;
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v37, 2u);
              swift_slowDealloc();
            }

            uint64_t v43 = 0;
            long long v41 = 0u;
            long long v42 = 0u;
            sub_1004EDB78((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          }

          sub_10003B6F8((uint64_t)&v41, &qword_1007A0A50);
        }
        break;
    }
  }
  char v26 = 0;
  return v26 & 1;
}

BOOL sub_1004EADC8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v26 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v26 - v9;
  uint64_t v11 = *(void *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex);
  uint64_t v12 = v11 - 1;
  if (v11 < 1) {
    return 0;
  }
  uint64_t v13 = *(void *)(a1
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100018BF8(v21, (uint64_t)qword_1007A1D48);
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v24, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v14 = *(void *)(v13 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(v13, ObjectType, v14);
  swift_unknownObjectRelease();
  uint64_t v18 = *(void *)(v16 + 24);
  uint64_t v17 = *(void *)(v16 + 32);
  swift_unknownObjectRetain();
  swift_release();
  uint64_t v19 = swift_getObjectType();
  v26[1] = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 + 8) + 32))(v12, a1+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, v19);
  swift_unknownObjectRelease();
  sub_1004ED468((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1004ED468((uint64_t)v10, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  BOOL v20 = swift_getEnumCaseMultiPayload() == 4;
  sub_1004EDB78((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v20;
}

uint64_t sub_1004EB080()
{
  sub_10003B6F8(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent, (uint64_t *)&unk_100788DC0);
  swift_release();
  sub_1000499C4(*(void *)(v0
                          + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter));
  sub_100172348(*(void **)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget), *(void **)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget+ 8), *(void **)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget+ 16), *(unsigned char *)(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___creationTarget+ 24));
  sub_10003B6F8(v0+ OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest____lazy_storage___actualInsertionLocation, &qword_10078FAC8);

  return swift_deallocClassInstance();
}

void *sub_1004EB144()
{
  return sub_1004E906C();
}

uint64_t sub_1004EB168@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E8570(a1);
}

uint64_t sub_1004EB18C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (uint64_t *)(*v2
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_additionalSubjectFilter);
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];
  uint64_t v9 = type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionPlan();
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10006C140(v7);
  uint64_t v10 = sub_1004ED378(v5, a1, v7, v8);
  sub_1000499C4(v7);
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  a2[3] = v9;
  a2[4] = (uint64_t)&off_10074E338;
  *a2 = v10;
  return result;
}

void *sub_1004EB258()
{
  uint64_t v1 = *(void **)(v0 + 32);
  int v2 = *(unsigned __int8 *)(v0 + 40);
  uint64_t v3 = v1;
  if (v2 == 254)
  {
    uint64_t v3 = (void *)sub_1004EB2E8(v0);
    uint64_t v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    unsigned __int8 v5 = *(unsigned char *)(v0 + 40);
    *(unsigned char *)(v0 + 40) = v6;
    sub_100172370(v3, v6);
    sub_100172384(v4, v5);
  }
  sub_100172398(v1, v2);
  return v3;
}

uint64_t sub_1004EB2E8(uint64_t a1)
{
  uint64_t v56 = sub_10003B754(&qword_10078FAE8);
  __chkstk_darwin(v56);
  uint64_t v55 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  long long v57 = (char *)&v48 - v4;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (uint64_t)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_10003B754(&qword_10078FAA0);
  __chkstk_darwin(v50);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v52 = (uint64_t)&v48 - v10;
  uint64_t v11 = sub_10003B754(&qword_10078FAF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v54 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_10003B754(&qword_10078FAF8);
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v48 = (uint64_t)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754((uint64_t *)&unk_10079C9F0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v58 = a1;
  uint64_t v59 = (uint64_t)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(*(void *)(a1 + 64)
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v28 = qword_100785638;
    swift_retain();
    if (v28 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100018BF8(v29, (uint64_t)qword_1007A1D48);
    uint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v32, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
  uint64_t v24 = *(void *)(v23 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 8))(v23, ObjectType, v24);
  swift_unknownObjectRelease();
  sub_1004E8570((uint64_t)v16);
  uint64_t v27 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v16, 1, v27) == 1)
  {
    sub_10003B6F8((uint64_t)v16, &qword_100789648);
    swift_release();
    return 0;
  }
  uint64_t v33 = *(void *)&v16[*(int *)(v27 + 48)];
  uint64_t v34 = *(int *)(v17 + 48);
  uint64_t v35 = v26;
  sub_1004ED468((uint64_t)v16, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(void *)&v19[v34] = v33;
  uint64_t v36 = *(void *)&v19[*(int *)(v17 + 48)];
  uint64_t v37 = v59;
  sub_1004ED468((uint64_t)v19, v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v38 = v49;
  sub_1002AFA50(v37, v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v39(v38, 0, 1, v20);
  v39((uint64_t)v8, 1, 1, v20);
  sub_10000A550(v38, (uint64_t)v8, (uint64_t *)&unk_100788DC0);
  uint64_t v40 = v50;
  *(void *)&v8[*(int *)(v50 + 36)] = v36;
  uint64_t v41 = v52;
  sub_100028C3C((uint64_t)v8, v52, &qword_10078FAA0);
  uint64_t v49 = v35;
  uint64_t v42 = *(void *)(v41 + *(int *)(v40 + 36));
  uint64_t v43 = (uint64_t)v55;
  v39((uint64_t)v55, 1, 1, v20);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1000DFC68(v41, v43);
  uint64_t v44 = (uint64_t)v57;
  *(void *)(v43 + *(int *)(v56 + 36)) = v42;
  sub_100028C3C(v43, v44, &qword_10078FAE8);
  uint64_t v45 = (uint64_t)v54;
  TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)();
  swift_release();
  sub_10003B6F8(v44, &qword_10078FAE8);
  swift_bridgeObjectRelease();
  sub_10003B6F8(v41, &qword_10078FAA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v45, 1, v53) == 1)
  {
    sub_1004EDB78(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    sub_10003B6F8(v45, &qword_10078FAF0);
    return 0;
  }
  uint64_t v47 = v48;
  sub_100028C3C(v45, v48, &qword_10078FAF8);
  sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
  TTRRelativeInsertionPosition.optionalMapSibling<A>(_:)();
  swift_release();
  sub_10003B6F8(v47, &qword_10078FAF8);
  sub_1004EDB78(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v60;
}

void sub_1004EBA80(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5 = *(void *)(*(void *)(a2 + 64)
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v6 = *(void *)(v5 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 16);
    uint64_t v9 = swift_retain();
    uint64_t v10 = v8(v9, a1, ObjectType, v6);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v11 = qword_100785638;
    swift_retain();
    if (v11 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_1007A1D48);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v15, 2u);
      swift_slowDealloc();
    }
    swift_release();

    uint64_t v10 = 0;
  }
  *a3 = v10;
}

uint64_t sub_1004EBBF4(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_100789648);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v61 = *(void *)(v62 - 8);
  uint64_t v6 = *(void *)(v61 + 64);
  __chkstk_darwin(v62);
  uint64_t v60 = (uint64_t)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v58 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v58 - v11;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  sub_10003B754(&qword_10078FAA8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100171C40;
  *(void *)(v15 + 24) = v13;
  *(void *)(inited + 32) = sub_1004ED460;
  *(void *)(inited + 40) = v15;
  uint64_t v63 = inited;
  uint64_t v65 = v1;
  uint64_t v16 = *(void *)(*(void *)(v1 + 64)
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v64 = v13;
  if (Strong)
  {
    uint64_t v59 = v12;
    uint64_t v18 = a1;
    uint64_t v19 = *(void *)(v16 + 24);
    uint64_t v20 = v9;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v58 = v5;
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v23 = ObjectType;
    uint64_t v9 = v20;
    uint64_t v24 = v19;
    a1 = v18;
    uint64_t v12 = v59;
    char v25 = v22(v23, v24);
    uint64_t v5 = v58;
    char v26 = v25;
    swift_unknownObjectRelease();
    if ((v26 & 1) == 0)
    {
LABEL_7:
      uint64_t v28 = v65;
      uint64_t v29 = (char *)v63;
      uint64_t v30 = *(void *)(v65 + 48);
      if (!v30) {
        goto LABEL_15;
      }
      goto LABEL_12;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_retain();
  }
  sub_1004E8570((uint64_t)v5);
  uint64_t v27 = sub_10003B754(&qword_100789658);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v5, 1, v27))
  {
    sub_10003B6F8((uint64_t)v5, &qword_100789648);
    goto LABEL_7;
  }
  sub_1002AFA50((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10003B6F8((uint64_t)v5, &qword_100789648);
  sub_1004ED468((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v31 = swift_allocObject();
  uint64_t v28 = v65;
  swift_weakInit();
  uint64_t v32 = v60;
  sub_1002AFA50((uint64_t)v12, v60, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v33 = (*(unsigned __int8 *)(v61 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v31;
  sub_1004ED468(v32, v34 + v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_1004EDB04;
  *(void *)(v35 + 24) = v34;
  uint64_t v29 = (char *)v63;
  unint64_t v37 = *(void *)(v63 + 16);
  unint64_t v36 = *(void *)(v63 + 24);
  swift_retain();
  if (v37 >= v36 >> 1) {
    uint64_t v29 = sub_100570310((char *)(v36 > 1), v37 + 1, 1, v29);
  }
  *((void *)v29 + 2) = v37 + 1;
  uint64_t v38 = &v29[16 * v37];
  *((void *)v38 + 4) = sub_1004F4F38;
  *((void *)v38 + 5) = v35;
  swift_release();
  sub_1004EDB78((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v30 = *(void *)(v28 + 48);
  if (v30)
  {
LABEL_12:
    uint64_t v39 = *(void *)(v28 + 56);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v30;
    *(void *)(v40 + 24) = v39;
    unint64_t v42 = *((void *)v29 + 2);
    unint64_t v41 = *((void *)v29 + 3);
    swift_retain_n();
    if (v42 >= v41 >> 1) {
      uint64_t v29 = sub_100570310((char *)(v41 > 1), v42 + 1, 1, v29);
    }
    *((void *)v29 + 2) = v42 + 1;
    uint64_t v43 = &v29[16 * v42];
    *((void *)v43 + 4) = sub_1004F4F38;
    *((void *)v43 + 5) = v40;
    sub_1000499C4(v30);
  }
LABEL_15:
  type metadata accessor for TTRProcessMoveSubjects();
  v71[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v44 = sub_10003B754(&qword_10078FAB0);
  uint64_t v45 = sub_100037EA0(&qword_10078FAB8, &qword_10078FAB0);
  char v46 = static TTRProcessMoveSubjects.process<A>(moveSubjects:disallowOverride:moveFilters:)();
  uint64_t v48 = v47;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v28 + 24) = v46 & 1;
  *(void *)(v28 + 16) = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void *)(v28 + 16);
  uint64_t v50 = *(void *)(v49 + 16);
  if (v50)
  {
    uint64_t v61 = v45;
    uint64_t v63 = v44;
    uint64_t v51 = v49 + 32;
    swift_bridgeObjectRetain();
    uint64_t v52 = _swiftEmptyArrayStorage;
    do
    {
      sub_10003B694(v51, (uint64_t)v71, &qword_10078FAC0);
      sub_1000145EC((uint64_t)v71, (uint64_t)v66);
      int v53 = v72;
      sub_100038ED8(v66, (uint64_t)v67);
      if (v53 == 1)
      {
        sub_100038ED8(v67, (uint64_t)&v68);
      }
      else
      {
        sub_100038CD8((uint64_t)v67);
        uint64_t v70 = 0;
        long long v68 = 0u;
        long long v69 = 0u;
      }
      sub_10003B6F8((uint64_t)v71, &qword_10078FAC0);
      if (*((void *)&v69 + 1))
      {
        sub_100038ED8(&v68, (uint64_t)v66);
        sub_100038ED8(v66, (uint64_t)&v68);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v52 = sub_1005702FC(0, v52[2] + 1, 1, v52);
        }
        unint64_t v55 = v52[2];
        unint64_t v54 = v52[3];
        if (v55 >= v54 >> 1) {
          uint64_t v52 = sub_1005702FC((void *)(v54 > 1), v55 + 1, 1, v52);
        }
        v52[2] = v55 + 1;
        sub_100038ED8(&v68, (uint64_t)&v52[5 * v55 + 4]);
      }
      else
      {
        sub_10003B6F8((uint64_t)&v68, (uint64_t *)&unk_100792000);
      }
      v51 += 48;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
    uint64_t v28 = v65;
  }
  else
  {
    uint64_t v52 = _swiftEmptyArrayStorage;
  }
  *(void *)(v28 + 72) = v52;
  swift_bridgeObjectRelease();
  if (!*(void *)(v28 + 72)) {
    __break(1u);
  }
  v71[0] = *(void *)(v28 + 72);
  swift_bridgeObjectRetain();
  uint64_t v56 = Sequence.completeCompactMap<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  *(void *)(v28 + 80) = v56;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004EC414@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  if (!v2)
  {
    __break(1u);
    JUMPOUT(0x1004ECBACLL);
  }
  uint64_t v3 = v1;
  unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v5 = *(void *)(v2 + 16);
  if (v5)
  {
    uint64_t v6 = v2 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_1000145EC(v6, (uint64_t)v55);
      uint64_t v7 = v56;
      uint64_t v8 = v57;
      sub_100038D28(v55, v56);
      uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
      sub_100038CD8((uint64_t)v55);
      if (v9)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v6 += 40;
      --v5;
    }
    while (v5);
    unint64_t v10 = v58;
  }
  else
  {
    swift_bridgeObjectRetain();
    unint64_t v10 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v50) {
      goto LABEL_20;
    }
  }
  else if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_20:
    swift_bridgeObjectRelease();
    uint64_t v32 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a1, 1, 1, v32);
  }
  uint64_t v11 = sub_1004EB258();
  if (v12 == 0xFF) {
    goto LABEL_20;
  }
  uint64_t v13 = v11;
  unsigned __int8 v14 = v12;
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = sub_1004E906C();
  uint64_t v19 = v16;
  uint64_t v20 = v17;
  switch(v21)
  {
    case 1:
      v55[0] = v10;
      sub_10003B754(&qword_10078FAE0);
      sub_1000368FC(0, qword_10078E3D0);
      sub_100037EA0((unint64_t *)&unk_100791EB0, &qword_10078FAE0);
      sub_1000511DC();
      uint64_t v24 = Sequence.mapToSet<A>(_:)();
      uint64_t v25 = *(void *)(v15
                      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
      if (swift_unknownObjectWeakLoadStrong())
      {
        int v53 = v19;
        uint64_t v26 = *(void *)(v25 + 24);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v52 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 48);
        uint64_t v28 = swift_retain();
        uint64_t v29 = v26;
        uint64_t v19 = v53;
        uint64_t v30 = v52(v28, v24, ObjectType, v29);
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v40 = qword_100785638;
        swift_retain();
        if (v40 != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        sub_100018BF8(v41, (uint64_t)qword_1007A1D48);
        unint64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v44, 2u);
          swift_slowDealloc();
        }
        swift_bridgeObjectRelease();

        swift_release();
        uint64_t v30 = 0;
      }
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v19;
      *(void *)(a1 + 16) = v13;
      *(unsigned char *)(a1 + 24) = v14;
      *(void *)(a1 + 32) = v30;
      uint64_t v31 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
      goto LABEL_37;
    case 2:
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v13;
      *(unsigned char *)(a1 + 24) = v14;
      uint64_t v31 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
      goto LABEL_37;
    case 3:
      sub_1000AA844(v16, v17, v18, 3);
      sub_1000AA998(v13, v14);
      goto LABEL_20;
    case 4:

      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v19;
      *(void *)(a1 + 16) = v13;
      *(unsigned char *)(a1 + 24) = v14;
      uint64_t v31 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
      goto LABEL_37;
    case 5:

      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v19;
      *(void *)(a1 + 16) = v20;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v14;
      uint64_t v31 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
      goto LABEL_37;
    case 6:
      unint64_t v54 = v16;
      v55[0] = v10;
      sub_10003B754(&qword_10078FAE0);
      sub_1000368FC(0, qword_10078E3D0);
      sub_100037EA0((unint64_t *)&unk_100791EB0, &qword_10078FAE0);
      sub_1000511DC();
      uint64_t v33 = Sequence.mapToSet<A>(_:)();
      uint64_t v34 = *(void *)(v15
                      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v35 = v33;
        uint64_t v36 = *(void *)(v34 + 24);
        uint64_t v37 = swift_getObjectType();
        uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 48);
        uint64_t v38 = swift_retain();
        uint64_t v39 = v51(v38, v35, v37, v36);
        swift_release();
        swift_bridgeObjectRelease();
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v45 = qword_100785638;
        swift_retain();
        if (v45 != -1) {
          swift_once();
        }
        uint64_t v46 = type metadata accessor for Logger();
        sub_100018BF8(v46, (uint64_t)qword_1007A1D48);
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v48 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v49 = 0;
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v49, 2u);
          swift_slowDealloc();
        }
        swift_bridgeObjectRelease();

        swift_release();
        uint64_t v39 = 0;
      }
      *(void *)a1 = v10;
      *(void *)(a1 + 8) = v54;
      *(unsigned char *)(a1 + 16) = (_BYTE)v20;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v14;
      *(void *)(a1 + 40) = v39;
      uint64_t v31 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
LABEL_37:
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(a1, 0, 1, v31);
      break;
    default:
      uint64_t v22 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a1, 1, 1, v22);
      sub_1000AA998(v13, v14);
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t sub_1004ECBC8()
{
  uint64_t v1 = sub_10003B754(&qword_10079C900);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v22 - v5;
  uint64_t v7 = *(void *)(v0 + 80);
  if (!v7) {
    return 0;
  }
  uint64_t v8 = *(void *)(v0 + 64);
  uint64_t v9 = *(void *)(v8
                 + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_dragAndDropCapability);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v16 = qword_100785638;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v16 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100018BF8(v17, (uint64_t)qword_1007A1D48);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v20, 2u);
      swift_slowDealloc();
    }
    swift_release();

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 8))(v9, ObjectType, v10);
  swift_bridgeObjectRetain();
  swift_unknownObjectRelease();
  uint64_t v12 = v8
      + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_parent;
  uint64_t v13 = *(void *)(v8
                  + OBJC_IVAR____TtCC9Reminders52TTRShowRemindersInListDragAndDropPresenterCapabilityP33_BB814B7023F4CD535F26EAE3B092798C25RemindersInsertionRequest_childIndex);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v3, 1, 1, v14);
  sub_1000DFC68(v12, (uint64_t)v3);
  *(void *)&v3[*(int *)(v1 + 36)] = v13;
  sub_100028C3C((uint64_t)v3, (uint64_t)v6, &qword_10079C900);
  v22[1] = v7;
  sub_10003B754(&qword_10078C4F0);
  sub_10003B754(&qword_10078C4F8);
  sub_100037EA0((unint64_t *)&qword_100791E80, &qword_10078C4F0);
  if (Sequence.completeCompactMap<A>(_:)())
  {
    sub_10003B754(&qword_10078C500);
    sub_100037EA0(&qword_10078C508, &qword_10079C900);
    sub_100037EA0(&qword_10078C510, &qword_10079C900);
    uint64_t v15 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v15 = 0;
  }
  sub_10003B6F8((uint64_t)v6, &qword_10079C900);
  return v15;
}

uint64_t sub_1004ECF7C(void *a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    char v6 = sub_1004EA800(a1, a3);
    swift_release();
    swift_release();
    if (v6) {
      return 0;
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t sub_1004ED014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
  sub_1004E7FE4(a1, (uint64_t)v6);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    type metadata accessor for TTRSmartListDragAndDropPresenterCapability();
    return sub_10016C2FC(a1, a2);
  }
  else
  {
    sub_1004ED468((uint64_t)v6, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a2, 0, 1, v7);
  }
}

void *sub_1004ED17C()
{
  return sub_1004EB258();
}

uint64_t sub_1004ED1A0()
{
  return sub_1004ECBC8();
}

uint64_t sub_1004ED1C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1004EC414(a1);
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability()
{
  return self;
}

uint64_t sub_1004ED20C()
{
  return type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(0);
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionRequest(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A1E60);
}

void sub_1004ED234()
{
  sub_1000DF808();
  if (v0 <= 0x3F)
  {
    sub_100171884();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.RemindersInsertionPlan()
{
  return self;
}

uint64_t type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability.MoveReminderSubjectForItem(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A2050);
}

uint64_t sub_1004ED378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
  *(unsigned char *)(v4 + 24) = 1;
  *(void *)(v4 + 32) = 0;
  *(unsigned char *)(v4 + 40) = -2;
  *(void *)(v4 + 72) = 0;
  *(void *)(v4 + 80) = 0;
  *(void *)(v4 + 56) = a4;
  *(void *)(v4 + 64) = a1;
  *(void *)(v4 + 48) = a3;
  swift_retain();
  sub_10006C140(a3);
  sub_1004EBBF4(a2);
  return v4;
}

uint64_t sub_1004ED3F0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004ED428()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004ED460@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001712F8(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1004ED468(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004ED4D0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004ED508()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1004EDB04(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1004ECF7C(a1, v4, v5);
}

uint64_t sub_1004EDB78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_1004EDBD8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1004EBA80(a1, v2, a2);
}

uint64_t sub_1004EDBE0()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:
  swift_release();

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | 7);
}

uint64_t sub_1004EE1EC(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1004E8748(a1, v1 + v4, v5);
}

uint64_t sub_1004EE288()
{
  return sub_1004E82F8();
}

char *sub_1004EE290(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v130 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v56 = *a2;
            *(void *)a1 = *a2;
            uint64_t v57 = v56;
            goto LABEL_33;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        unint64_t v58 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v59 = v58[5];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = (char *)a2 + v59;
        uint64_t v62 = *(uint64_t *)((char *)a2 + v59 + 8);
        if (v62)
        {
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v62;
          uint64_t v63 = (void *)*((void *)v61 + 2);
          uint64_t v64 = *((void *)v61 + 3);
          uint64_t v65 = *((void *)v61 + 4);
          uint64_t v66 = *((void *)v61 + 5);
          uint64_t v67 = *((void *)v61 + 6);
          uint64_t v126 = *((void *)v61 + 7);
          unsigned __int8 v121 = v61[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v63, v64, v65, v66, v67, v126, v121);
          *((void *)v60 + 2) = v63;
          *((void *)v60 + 3) = v64;
          *((void *)v60 + 4) = v65;
          *((void *)v60 + 5) = v66;
          *((void *)v60 + 6) = v67;
          *((void *)v60 + 7) = v126;
          v60[64] = v121;
          *(_DWORD *)(v60 + 65) = *(_DWORD *)(v61 + 65);
          int v68 = v61[120];
          if (v68 == 255)
          {
            long long v69 = *(_OWORD *)(v61 + 88);
            *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
            *(_OWORD *)(v60 + 88) = v69;
            *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
            v60[120] = v61[120];
          }
          else
          {
            char v127 = v68 & 1;
            uint64_t v73 = *((void *)v61 + 10);
            uint64_t v122 = (void *)*((void *)v61 + 9);
            uint64_t v74 = *((void *)v61 + 11);
            uint64_t v75 = *((void *)v61 + 12);
            uint64_t v76 = *((void *)v61 + 13);
            uint64_t v77 = *((void *)v61 + 14);
            sub_10003BED8(v122, v73, v74, v75, v76, v77, v68 & 1);
            *((void *)v60 + 9) = v122;
            *((void *)v60 + 10) = v73;
            *((void *)v60 + 11) = v74;
            *((void *)v60 + 12) = v75;
            *((void *)v60 + 13) = v76;
            *((void *)v60 + 14) = v77;
            v60[120] = v127;
          }
          uint64_t v6 = v130;
          v60[121] = v61[121];
        }
        else
        {
          long long v70 = *((_OWORD *)v61 + 5);
          *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
          *((_OWORD *)v60 + 5) = v70;
          *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
          *(_OWORD *)(v60 + 106) = *(_OWORD *)(v61 + 106);
          long long v71 = *((_OWORD *)v61 + 1);
          *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
          *((_OWORD *)v60 + 1) = v71;
          long long v72 = *((_OWORD *)v61 + 3);
          *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
          *((_OWORD *)v60 + 3) = v72;
        }
        a1[v58[6]] = *((unsigned char *)a2 + v58[6]);
        a1[v58[7]] = *((unsigned char *)a2 + v58[7]);
        a1[v58[8]] = *((unsigned char *)a2 + v58[8]);
        a1[v58[9]] = *((unsigned char *)a2 + v58[9]);
        a1[v58[10]] = *((unsigned char *)a2 + v58[10]);
        uint64_t v78 = v58[11];
        long long v79 = *(char **)((char *)a2 + v78);
        *(void *)&a1[v78] = v79;
        id v80 = v79;
        goto LABEL_66;
      case 1u:
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v131 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v82 = *a2;
            *(void *)a1 = *a2;
            uint64_t v83 = v82;
            goto LABEL_44;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v81 = type metadata accessor for Date();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        uint64_t v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v85 = v84[5];
        uint64_t v86 = &a1[v85];
        uint64_t v87 = (char *)a2 + v85;
        uint64_t v88 = *(uint64_t *)((char *)a2 + v85 + 8);
        if (v88)
        {
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = v88;
          uint64_t v89 = (void *)*((void *)v87 + 2);
          uint64_t v90 = *((void *)v87 + 3);
          uint64_t v91 = *((void *)v87 + 4);
          uint64_t v92 = *((void *)v87 + 5);
          uint64_t v93 = *((void *)v87 + 6);
          uint64_t v123 = *((void *)v87 + 7);
          unsigned __int8 v128 = v87[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v89, v90, v91, v92, v93, v123, v128);
          *((void *)v86 + 2) = v89;
          *((void *)v86 + 3) = v90;
          *((void *)v86 + 4) = v91;
          *((void *)v86 + 5) = v92;
          *((void *)v86 + 6) = v93;
          *((void *)v86 + 7) = v123;
          v86[64] = v128;
          *(_DWORD *)(v86 + 65) = *(_DWORD *)(v87 + 65);
          int v94 = v87[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v87 + 88);
            *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
            *(_OWORD *)(v86 + 88) = v95;
            *(_OWORD *)(v86 + 104) = *(_OWORD *)(v87 + 104);
            v86[120] = v87[120];
          }
          else
          {
            char v129 = v94 & 1;
            uint64_t v99 = *((void *)v87 + 10);
            v124 = (void *)*((void *)v87 + 9);
            uint64_t v100 = *((void *)v87 + 11);
            uint64_t v101 = *((void *)v87 + 12);
            uint64_t v102 = *((void *)v87 + 13);
            uint64_t v103 = *((void *)v87 + 14);
            sub_10003BED8(v124, v99, v100, v101, v102, v103, v94 & 1);
            *((void *)v86 + 9) = v124;
            *((void *)v86 + 10) = v99;
            *((void *)v86 + 11) = v100;
            *((void *)v86 + 12) = v101;
            *((void *)v86 + 13) = v102;
            *((void *)v86 + 14) = v103;
            v86[120] = v129;
          }
          uint64_t v6 = v131;
          v86[121] = v87[121];
        }
        else
        {
          long long v96 = *((_OWORD *)v87 + 5);
          *((_OWORD *)v86 + 4) = *((_OWORD *)v87 + 4);
          *((_OWORD *)v86 + 5) = v96;
          *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
          *(_OWORD *)(v86 + 106) = *(_OWORD *)(v87 + 106);
          long long v97 = *((_OWORD *)v87 + 1);
          *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
          *((_OWORD *)v86 + 1) = v97;
          long long v98 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v98;
        }
        a1[v84[6]] = *((unsigned char *)a2 + v84[6]);
        a1[v84[7]] = *((unsigned char *)a2 + v84[7]);
        a1[v84[8]] = *((unsigned char *)a2 + v84[8]);
        a1[v84[9]] = *((unsigned char *)a2 + v84[9]);
        a1[v84[10]] = *((unsigned char *)a2 + v84[10]);
        uint64_t v104 = v84[11];
        v105 = *(char **)((char *)a2 + v104);
        *(void *)&a1[v104] = v105;
        id v106 = v105;
        goto LABEL_66;
      case 2u:
        uint64_t v11 = *a2;
        *(void *)a1 = *a2;
        uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)&a1[v12];
        uint64_t v14 = (void **)((char *)a2 + v12);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        int v18 = v11;
        if (v17(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v108 = *v14;
            void *v13 = *v14;
            id v109 = v108;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v107 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(v13, v14, v107);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 3u:
        os_log_type_t v19 = *a2;
        *(void *)a1 = *a2;
        uint64_t v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)&a1[v20];
        uint64_t v14 = (void **)((char *)a2 + v20);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        char v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        uint64_t v22 = v19;
        if (v21(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            unint64_t v42 = *v14;
            void *v13 = *v14;
            id v43 = v42;
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v113 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v13, v14, v113);
LABEL_64:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 4u:
        uint64_t v23 = *a2;
        *(void *)a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)&a1[v24];
        uint64_t v14 = (void **)((char *)a2 + v24);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        uint64_t v26 = v23;
        if (v25(v14, 1, v15))
        {
LABEL_11:
          uint64_t v27 = sub_10003B754(&qword_10078C890);
          memcpy(v13, v14, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v111 = *v14;
              void *v13 = *v14;
              id v112 = v111;
              goto LABEL_61;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v110 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v110 - 8) + 16))(v13, v14, v110);
LABEL_61:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v13, v14, *(void *)(v16 + 64));
              break;
          }
LABEL_65:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
LABEL_66:
        swift_storeEnumTagMultiPayload();
LABEL_67:
        uint64_t v114 = v6[6];
        a1[v6[5]] = *((unsigned char *)a2 + v6[5]);
        uint64_t v115 = *(char **)((char *)a2 + v114);
        *(void *)&a1[v114] = v115;
        uint64_t v116 = v6[7];
        uint64_t v117 = *(char **)((char *)a2 + v116);
        *(void *)&a1[v116] = v117;
        id v118 = v115;
        id v119 = v117;
        break;
      case 5u:
        *(void *)a1 = *a2;
        a1[8] = *((unsigned char *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        uint64_t v28 = a2[2];
        *((void *)a1 + 2) = v28;
        uint64_t v29 = v28;
        goto LABEL_66;
      case 6u:
        uint64_t v37 = *a2;
        *(void *)a1 = *a2;
        uint64_t v38 = v37;
        goto LABEL_66;
      case 7u:
        uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v31 + 48))(a2, 1, v30))
        {
          uint64_t v32 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *a2;
          uint64_t v44 = *(int *)(v30 + 20);
          v132 = &a1[v44];
          uint64_t v125 = (char *)a2 + v44;
          uint64_t v45 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v132, v125, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
        }
        uint64_t v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        os_log_type_t v48 = &a1[v47];
        uint64_t v49 = (char **)((char *)a2 + v47);
        uint64_t v50 = v49[1];
        if (v50)
        {
          *(void *)os_log_type_t v48 = *v49;
          *((void *)v48 + 1) = v50;
          uint64_t v51 = (void *)v49[2];
          *((void *)v48 + 2) = v51;
          swift_bridgeObjectRetain();
          id v52 = v51;
        }
        else
        {
          *(_OWORD *)os_log_type_t v48 = *(_OWORD *)v49;
          *((void *)v48 + 2) = v49[2];
        }
        goto LABEL_66;
      case 8u:
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39))
        {
          uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          a1[*(int *)(v39 + 20)] = *((unsigned char *)a2 + *(int *)(v39 + 20));
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
        uint64_t v54 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)&a1[*(int *)(v54 + 20)] = *(char **)((char *)a2 + *(int *)(v54 + 20));
        goto LABEL_66;
      case 9u:
        *a1 = *(unsigned char *)a2;
        uint64_t v33 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v34 = &a1[v33];
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_66;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_67;
    }
  }
  return a1;
}

void sub_1004EF8B4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v4 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          break;
        default:
          break;
      }
LABEL_24:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v18 = a1 + *(int *)(v17 + 20);
      if (*(void *)(v18 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(unsigned char *)(v18 + 64));
        int v19 = *(unsigned __int8 *)(v18 + 120);
        if (v19 != 255) {
          sub_10003B9C0(*(void **)(v18 + 72), *(void *)(v18 + 80), *(void *)(v18 + 88), *(void *)(v18 + 96), *(void *)(v18 + 104), *(void *)(v18 + 112), v19 & 1);
        }
      }
      id v10 = *(id *)(a1 + *(int *)(v17 + 44));
      goto LABEL_28;
    case 2u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_32;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_32;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_32:
            id v10 = *v5;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            uint64_t v9 = type metadata accessor for Date();
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      id v10 = *(id *)(a1 + 16);
      goto LABEL_28;
    case 6u:
      id v10 = *(id *)a1;
      goto LABEL_28;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v14 + 8)) {
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      id v10 = *(id *)(v14 + 16);
LABEL_28:

LABEL_29:
      uint64_t v20 = *(void **)(a1 + *(int *)(a2 + 28));

      return;
    case 8u:
      uint64_t v15 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(a1, 1, v15))
      {
        uint64_t v16 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
      }
      goto LABEL_29;
    case 9u:
      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
      uint64_t v9 = type metadata accessor for AnyTip();
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_1004EFE90(void **a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v120 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v54 = *a2;
          *a1 = *a2;
          id v55 = v54;
          goto LABEL_31;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
LABEL_31:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v57 = v56[5];
      unint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = *(uint64_t *)((char *)a2 + v57 + 8);
      if (!v60) {
        goto LABEL_35;
      }
      *(void *)unint64_t v58 = *(void *)v59;
      *((void *)v58 + 1) = v60;
      uint64_t v61 = (void *)*((void *)v59 + 2);
      uint64_t v62 = *((void *)v59 + 3);
      uint64_t v63 = *((void *)v59 + 4);
      uint64_t v64 = *((void *)v59 + 5);
      uint64_t v65 = *((void *)v59 + 6);
      uint64_t v117 = *((void *)v59 + 7);
      unsigned __int8 v112 = v59[64];
      swift_bridgeObjectRetain();
      sub_100050F84(v61, v62, v63, v64, v65, v117, v112);
      *((void *)v58 + 2) = v61;
      *((void *)v58 + 3) = v62;
      *((void *)v58 + 4) = v63;
      *((void *)v58 + 5) = v64;
      *((void *)v58 + 6) = v65;
      *((void *)v58 + 7) = v117;
      v58[64] = v112;
      *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
      int v66 = v59[120];
      if (v66 == 255)
      {
        long long v67 = *(_OWORD *)(v59 + 88);
        *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
        *(_OWORD *)(v58 + 88) = v67;
        *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
        v58[120] = v59[120];
      }
      else
      {
        char v118 = v66 & 1;
        uint64_t v71 = *((void *)v59 + 10);
        uint64_t v113 = (void *)*((void *)v59 + 9);
        uint64_t v72 = *((void *)v59 + 11);
        uint64_t v73 = *((void *)v59 + 12);
        uint64_t v74 = *((void *)v59 + 13);
        uint64_t v75 = *((void *)v59 + 14);
        sub_10003BED8(v113, v71, v72, v73, v74, v75, v66 & 1);
        *((void *)v58 + 9) = v113;
        *((void *)v58 + 10) = v71;
        *((void *)v58 + 11) = v72;
        *((void *)v58 + 12) = v73;
        *((void *)v58 + 13) = v74;
        *((void *)v58 + 14) = v75;
        v58[120] = v118;
      }
      a3 = v120;
      v58[121] = v59[121];
      goto LABEL_38;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      unsigned __int8 v121 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v80 = *a2;
          *a1 = *a2;
          id v81 = v80;
          goto LABEL_42;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v79 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v82 = v56[5];
      unint64_t v58 = (char *)a1 + v82;
      uint64_t v59 = (char *)a2 + v82;
      uint64_t v83 = *(uint64_t *)((char *)a2 + v82 + 8);
      if (v83)
      {
        id v119 = a2;
        *(void *)unint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = v83;
        uint64_t v84 = (void *)*((void *)v59 + 2);
        uint64_t v85 = *((void *)v59 + 3);
        uint64_t v86 = *((void *)v59 + 4);
        uint64_t v87 = *((void *)v59 + 5);
        uint64_t v89 = *((void *)v59 + 6);
        uint64_t v88 = *((void *)v59 + 7);
        unsigned __int8 v114 = v59[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v84, v85, v86, v87, v89, v88, v114);
        *((void *)v58 + 2) = v84;
        *((void *)v58 + 3) = v85;
        *((void *)v58 + 4) = v86;
        *((void *)v58 + 5) = v87;
        *((void *)v58 + 6) = v89;
        *((void *)v58 + 7) = v88;
        v58[64] = v114;
        *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
        int v90 = v59[120];
        if (v90 == 255)
        {
          long long v91 = *(_OWORD *)(v59 + 88);
          *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
          *(_OWORD *)(v58 + 88) = v91;
          *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
          v58[120] = v59[120];
        }
        else
        {
          char v115 = v90 & 1;
          uint64_t v93 = (void *)*((void *)v59 + 9);
          uint64_t v92 = *((void *)v59 + 10);
          uint64_t v94 = *((void *)v59 + 11);
          uint64_t v95 = *((void *)v59 + 12);
          uint64_t v96 = *((void *)v59 + 13);
          uint64_t v97 = *((void *)v59 + 14);
          sub_10003BED8(v93, v92, v94, v95, v96, v97, v90 & 1);
          *((void *)v58 + 9) = v93;
          *((void *)v58 + 10) = v92;
          *((void *)v58 + 11) = v94;
          *((void *)v58 + 12) = v95;
          *((void *)v58 + 13) = v96;
          *((void *)v58 + 14) = v97;
          v58[120] = v115;
        }
        a3 = v121;
        v58[121] = v59[121];
        a2 = v119;
      }
      else
      {
LABEL_35:
        long long v68 = *((_OWORD *)v59 + 5);
        *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
        *((_OWORD *)v58 + 5) = v68;
        *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
        *(_OWORD *)(v58 + 106) = *(_OWORD *)(v59 + 106);
        long long v69 = *((_OWORD *)v59 + 1);
        *(_OWORD *)unint64_t v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v69;
        long long v70 = *((_OWORD *)v59 + 3);
        *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
        *((_OWORD *)v58 + 3) = v70;
      }
LABEL_38:
      *((unsigned char *)a1 + v56[6]) = *((unsigned char *)a2 + v56[6]);
      *((unsigned char *)a1 + v56[7]) = *((unsigned char *)a2 + v56[7]);
      *((unsigned char *)a1 + v56[8]) = *((unsigned char *)a2 + v56[8]);
      *((unsigned char *)a1 + v56[9]) = *((unsigned char *)a2 + v56[9]);
      *((unsigned char *)a1 + v56[10]) = *((unsigned char *)a2 + v56[10]);
      uint64_t v76 = v56[11];
      uint64_t v77 = *(void **)((char *)a2 + v76);
      *(void **)((char *)a1 + v76) = v77;
      id v78 = v77;
      goto LABEL_63;
    case 2u:
      uint64_t v9 = *a2;
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v10);
      uint64_t v12 = (void **)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v16 = v9;
      if (v15(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v99 = *v12;
          *uint64_t v11 = *v12;
          id v100 = v99;
          goto LABEL_52;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v98 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v98 - 8) + 16))(v11, v12, v98);
LABEL_52:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 3u:
      uint64_t v17 = *a2;
      *a1 = *a2;
      uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v18);
      uint64_t v12 = (void **)((char *)a2 + v18);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      int v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v20 = v17;
      if (v19(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v40 = *v12;
          *uint64_t v11 = *v12;
          id v41 = v40;
          goto LABEL_61;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v104 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(v11, v12, v104);
LABEL_61:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 4u:
      char v21 = *a2;
      *a1 = *a2;
      uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v22);
      uint64_t v12 = (void **)((char *)a2 + v22);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v24 = v21;
      if (v23(v12, 1, v13))
      {
LABEL_9:
        uint64_t v25 = sub_10003B754(&qword_10078C890);
        memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v102 = *v12;
            *uint64_t v11 = *v12;
            id v103 = v102;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v101 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v101 - 8) + 16))(v11, v12, v101);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
LABEL_62:
        (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
LABEL_63:
      swift_storeEnumTagMultiPayload();
LABEL_64:
      uint64_t v105 = a3[6];
      *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
      id v106 = *(void **)((char *)a2 + v105);
      *(void **)((char *)a1 + v105) = v106;
      uint64_t v107 = a3[7];
      v108 = *(void **)((char *)a2 + v107);
      *(void **)((char *)a1 + v107) = v108;
      id v109 = v106;
      id v110 = v108;
      return a1;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      uint64_t v26 = a2[2];
      a1[2] = v26;
      id v27 = v26;
      goto LABEL_63;
    case 6u:
      uint64_t v35 = *a2;
      *a1 = *a2;
      id v36 = v35;
      goto LABEL_63;
    case 7u:
      uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
      {
        uint64_t v30 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v42 = *(int *)(v28 + 20);
        uint64_t v122 = (char *)a1 + v42;
        uint64_t v116 = (char *)a2 + v42;
        uint64_t v43 = type metadata accessor for REMHashtagLabelSpecifier();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v122, v116, v43);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
      }
      uint64_t v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v46 = (void **)((char *)a1 + v45);
      uint64_t v47 = (void **)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      if (v48)
      {
        void *v46 = *v47;
        v46[1] = v48;
        uint64_t v49 = (void *)v47[2];
        v46[2] = v49;
        swift_bridgeObjectRetain();
        id v50 = v49;
      }
      else
      {
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
        v46[2] = v47[2];
      }
      goto LABEL_63;
    case 8u:
      uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
      {
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
      }
      uint64_t v52 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void **)((char *)a1 + *(int *)(v52 + 20)) = *(void **)((char *)a2 + *(int *)(v52 + 20));
      goto LABEL_63;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      goto LABEL_63;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_64;
  }
}

void **sub_1004F1464(void **a1, void **a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1004EDB78((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v139 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v52 = *a2;
            *a1 = *a2;
            id v53 = v52;
            goto LABEL_31;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        uint64_t v54 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v55 = v54[5];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        if (*(void **)((char *)a2 + v55 + 8))
        {
          *(void *)uint64_t v56 = *(void *)v57;
          *((void *)v56 + 1) = *((void *)v57 + 1);
          unint64_t v58 = (void *)*((void *)v57 + 2);
          uint64_t v59 = *((void *)v57 + 3);
          uint64_t v60 = *((void *)v57 + 4);
          uint64_t v61 = *((void *)v57 + 5);
          uint64_t v62 = *((void *)v57 + 6);
          uint64_t v136 = *((void *)v57 + 7);
          unsigned __int8 v131 = v57[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v58, v59, v60, v61, v62, v136, v131);
          *((void *)v56 + 2) = v58;
          *((void *)v56 + 3) = v59;
          *((void *)v56 + 4) = v60;
          *((void *)v56 + 5) = v61;
          *((void *)v56 + 6) = v62;
          *((void *)v56 + 7) = v136;
          v56[64] = v131;
          v56[65] = v57[65];
          v56[66] = v57[66];
          v56[67] = v57[67];
          v56[68] = v57[68];
          int v63 = v57[120];
          if (v63 == 255)
          {
            long long v64 = *(_OWORD *)(v57 + 72);
            long long v65 = *(_OWORD *)(v57 + 88);
            long long v66 = *(_OWORD *)(v57 + 104);
            v56[120] = v57[120];
            *(_OWORD *)(v56 + 88) = v65;
            *(_OWORD *)(v56 + 104) = v66;
            *(_OWORD *)(v56 + 72) = v64;
          }
          else
          {
            char v137 = v63 & 1;
            uint64_t v73 = *((void *)v57 + 10);
            v132 = (void *)*((void *)v57 + 9);
            uint64_t v74 = *((void *)v57 + 11);
            uint64_t v75 = *((void *)v57 + 12);
            uint64_t v76 = *((void *)v57 + 13);
            uint64_t v77 = *((void *)v57 + 14);
            sub_10003BED8(v132, v73, v74, v75, v76, v77, v63 & 1);
            *((void *)v56 + 9) = v132;
            *((void *)v56 + 10) = v73;
            *((void *)v56 + 11) = v74;
            *((void *)v56 + 12) = v75;
            *((void *)v56 + 13) = v76;
            *((void *)v56 + 14) = v77;
            v56[120] = v137;
          }
          a3 = v139;
          v56[121] = v57[121];
        }
        else
        {
          long long v67 = *(_OWORD *)v57;
          long long v68 = *((_OWORD *)v57 + 1);
          long long v69 = *((_OWORD *)v57 + 3);
          *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
          *((_OWORD *)v56 + 3) = v69;
          *(_OWORD *)uint64_t v56 = v67;
          *((_OWORD *)v56 + 1) = v68;
          long long v70 = *((_OWORD *)v57 + 4);
          long long v71 = *((_OWORD *)v57 + 5);
          long long v72 = *((_OWORD *)v57 + 6);
          *(_OWORD *)(v56 + 106) = *(_OWORD *)(v57 + 106);
          *((_OWORD *)v56 + 5) = v71;
          *((_OWORD *)v56 + 6) = v72;
          *((_OWORD *)v56 + 4) = v70;
        }
        *((unsigned char *)a1 + v54[6]) = *((unsigned char *)a2 + v54[6]);
        *((unsigned char *)a1 + v54[7]) = *((unsigned char *)a2 + v54[7]);
        *((unsigned char *)a1 + v54[8]) = *((unsigned char *)a2 + v54[8]);
        *((unsigned char *)a1 + v54[9]) = *((unsigned char *)a2 + v54[9]);
        *((unsigned char *)a1 + v54[10]) = *((unsigned char *)a2 + v54[10]);
        uint64_t v78 = v54[11];
        uint64_t v79 = *(void **)((char *)a2 + v78);
        *(void **)((char *)a1 + v78) = v79;
        id v80 = v79;
        goto LABEL_65;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        v140 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v82 = *a2;
            *a1 = *a2;
            id v83 = v82;
            goto LABEL_42;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v81 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        uint64_t v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v85 = v84[5];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        if (*(void **)((char *)a2 + v85 + 8))
        {
          uint64_t v138 = v84;
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = *((void *)v87 + 1);
          uint64_t v88 = (void *)*((void *)v87 + 2);
          uint64_t v89 = *((void *)v87 + 3);
          uint64_t v90 = *((void *)v87 + 4);
          uint64_t v91 = *((void *)v87 + 5);
          uint64_t v92 = *((void *)v87 + 6);
          uint64_t v133 = *((void *)v87 + 7);
          unsigned __int8 v93 = v87[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v88, v89, v90, v91, v92, v133, v93);
          *((void *)v86 + 2) = v88;
          *((void *)v86 + 3) = v89;
          *((void *)v86 + 4) = v90;
          *((void *)v86 + 5) = v91;
          *((void *)v86 + 6) = v92;
          *((void *)v86 + 7) = v133;
          v86[64] = v93;
          v86[65] = v87[65];
          v86[66] = v87[66];
          v86[67] = v87[67];
          v86[68] = v87[68];
          int v94 = v87[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v87 + 72);
            long long v96 = *(_OWORD *)(v87 + 88);
            long long v97 = *(_OWORD *)(v87 + 104);
            v86[120] = v87[120];
            *(_OWORD *)(v86 + 88) = v96;
            *(_OWORD *)(v86 + 104) = v97;
            *(_OWORD *)(v86 + 72) = v95;
          }
          else
          {
            char v134 = v94 & 1;
            uint64_t v105 = (void *)*((void *)v87 + 9);
            uint64_t v104 = *((void *)v87 + 10);
            uint64_t v106 = *((void *)v87 + 11);
            uint64_t v107 = *((void *)v87 + 12);
            uint64_t v108 = *((void *)v87 + 13);
            uint64_t v109 = *((void *)v87 + 14);
            sub_10003BED8(v105, v104, v106, v107, v108, v109, v94 & 1);
            *((void *)v86 + 9) = v105;
            *((void *)v86 + 10) = v104;
            *((void *)v86 + 11) = v106;
            *((void *)v86 + 12) = v107;
            *((void *)v86 + 13) = v108;
            *((void *)v86 + 14) = v109;
            v86[120] = v134;
          }
          a3 = v140;
          v86[121] = v87[121];
          uint64_t v84 = v138;
        }
        else
        {
          long long v98 = *(_OWORD *)v87;
          long long v99 = *((_OWORD *)v87 + 1);
          long long v100 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v100;
          *(_OWORD *)uint64_t v86 = v98;
          *((_OWORD *)v86 + 1) = v99;
          long long v101 = *((_OWORD *)v87 + 4);
          long long v102 = *((_OWORD *)v87 + 5);
          long long v103 = *((_OWORD *)v87 + 6);
          *(_OWORD *)(v86 + 106) = *(_OWORD *)(v87 + 106);
          *((_OWORD *)v86 + 5) = v102;
          *((_OWORD *)v86 + 6) = v103;
          *((_OWORD *)v86 + 4) = v101;
        }
        *((unsigned char *)a1 + v84[6]) = *((unsigned char *)a2 + v84[6]);
        *((unsigned char *)a1 + v84[7]) = *((unsigned char *)a2 + v84[7]);
        *((unsigned char *)a1 + v84[8]) = *((unsigned char *)a2 + v84[8]);
        *((unsigned char *)a1 + v84[9]) = *((unsigned char *)a2 + v84[9]);
        *((unsigned char *)a1 + v84[10]) = *((unsigned char *)a2 + v84[10]);
        uint64_t v110 = v84[11];
        uint64_t v111 = *(void **)((char *)a2 + v110);
        *(void **)((char *)a1 + v110) = v111;
        id v112 = v111;
        goto LABEL_65;
      case 2u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v10);
        uint64_t v12 = (void **)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v16 = v9;
        if (v15(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            unsigned __int8 v114 = *v12;
            *uint64_t v11 = *v12;
            id v115 = v114;
            goto LABEL_53;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v113 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v11, v12, v113);
LABEL_53:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 3u:
        uint64_t v17 = *a2;
        *a1 = *a2;
        uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v18);
        uint64_t v12 = (void **)((char *)a2 + v18);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        int v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v20 = v17;
        if (v19(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v117 = *v12;
            *uint64_t v11 = *v12;
            id v118 = v117;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v116 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v116 - 8) + 16))(v11, v12, v116);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 4u:
        char v21 = *a2;
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v22);
        uint64_t v12 = (void **)((char *)a2 + v22);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v24 = v21;
        if (v23(v12, 1, v13))
        {
LABEL_10:
          uint64_t v25 = sub_10003B754(&qword_10078C890);
          memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v120 = *v12;
              *uint64_t v11 = *v12;
              id v121 = v120;
              goto LABEL_63;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v119 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v119 - 8) + 16))(v11, v12, v119);
LABEL_63:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(void *)(v14 + 64));
              break;
          }
LABEL_64:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_65:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        uint64_t v26 = a2[2];
        a1[2] = v26;
        id v27 = v26;
        goto LABEL_65;
      case 6u:
        uint64_t v35 = *a2;
        *a1 = *a2;
        id v36 = v35;
        goto LABEL_65;
      case 7u:
        uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v29 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
        {
          uint64_t v30 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v40 = *(int *)(v28 + 20);
          v141 = (char *)a1 + v40;
          v135 = (char *)a2 + v40;
          uint64_t v41 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v141, v135, v41);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
        }
        uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v44 = (void **)((char *)a1 + v43);
        uint64_t v45 = (void **)((char *)a2 + v43);
        if (v45[1])
        {
          void *v44 = *v45;
          v44[1] = v45[1];
          uint64_t v46 = (void *)v45[2];
          v44[2] = v46;
          swift_bridgeObjectRetain();
          id v47 = v46;
        }
        else
        {
          long long v48 = *(_OWORD *)v45;
          v44[2] = v45[2];
          *(_OWORD *)uint64_t v44 = v48;
        }
        goto LABEL_65;
      case 8u:
        uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
        {
          uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
        }
        uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v50 + 20)) = *(void **)((char *)a2 + *(int *)(v50 + 20));
        goto LABEL_65;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_65;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v122 = a3[6];
  uint64_t v123 = *(void **)((char *)a1 + v122);
  v124 = *(void **)((char *)a2 + v122);
  *(void **)((char *)a1 + v122) = v124;
  id v125 = v124;

  uint64_t v126 = a3[7];
  char v127 = *(void **)((char *)a1 + v126);
  unsigned __int8 v128 = *(void **)((char *)a2 + v126);
  *(void **)((char *)a1 + v126) = v128;
  id v129 = v128;

  return a1;
}

void *sub_1004F2AB0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v36 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_25;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
LABEL_25:
      uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v38 = v37[5];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (_OWORD *)((char *)a2 + v38);
      long long v41 = v40[3];
      v39[2] = v40[2];
      v39[3] = v41;
      long long v42 = v40[1];
      _OWORD *v39 = *v40;
      v39[1] = v42;
      *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
      long long v43 = v40[6];
      long long v44 = v40[4];
      v39[5] = v40[5];
      v39[6] = v43;
      v39[4] = v44;
      *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
      *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
      *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
      *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
      *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
      *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
      goto LABEL_38;
    case 2u:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v46 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v14;
      uint64_t v11 = (char *)a2 + v14;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 4u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v16;
      uint64_t v11 = (char *)a2 + v16;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        uint64_t v15 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v48 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
LABEL_37:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_38:
      swift_storeEnumTagMultiPayload();
LABEL_39:
      uint64_t v49 = a3[6];
      *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
      *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);
      *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
      return a1;
    case 7u:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v27 = *(int *)(v17 + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      goto LABEL_38;
    case 8u:
      uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
      {
        uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v34 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
      }
      uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
      goto LABEL_38;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      id v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_38;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_39;
  }
}

void *sub_1004F3BAC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1004EDB78((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_26;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v45 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
LABEL_26:
        uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v38 = v37[5];
        uint64_t v39 = (_OWORD *)((char *)a1 + v38);
        uint64_t v40 = (_OWORD *)((char *)a2 + v38);
        long long v41 = v40[3];
        v39[2] = v40[2];
        v39[3] = v41;
        long long v42 = v40[1];
        _OWORD *v39 = *v40;
        v39[1] = v42;
        *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
        long long v43 = v40[6];
        long long v44 = v40[4];
        v39[5] = v40[5];
        v39[6] = v43;
        v39[4] = v44;
        *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
        *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
        *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
        *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
        *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
        *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v46 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 3u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v14;
        uint64_t v11 = (char *)a2 + v14;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 4u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v16;
        uint64_t v11 = (char *)a2 + v16;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_8:
          uint64_t v15 = sub_10003B754(&qword_10078C890);
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v48 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(v13 + 64));
              break;
          }
LABEL_38:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v27 = *(int *)(v17 + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((void *)v32 + 2) = *((void *)v33 + 2);
        goto LABEL_39;
      case 8u:
        uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v34 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
        goto LABEL_39;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_39;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v49 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v50 = *(void **)((char *)a1 + v49);
  *(void *)((char *)a1 + v49) = *(void *)((char *)a2 + v49);

  uint64_t v51 = a3[7];
  uint64_t v52 = *(void **)((char *)a1 + v51);
  *(void *)((char *)a1 + v51) = *(void *)((char *)a2 + v51);

  return a1;
}

uint64_t sub_1004F4CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004F4CF0);
}

uint64_t sub_1004F4CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1004F4DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004F4DD0);
}

uint64_t sub_1004F4DD0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = a2;
  }
  return result;
}

uint64_t sub_1004F4E8C()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1004F4F3C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A2090);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A2090);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004F5004()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v2 - 1;
    uint64_t v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = v3;
      uint64_t v6 = *v4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 40);
      swift_unknownObjectRetain();
      LOBYTE(v2) = v8(ObjectType, v6);
      swift_unknownObjectRelease();
      if (v2) {
        break;
      }
      uint64_t v3 = v5 - 1;
      v4 += 2;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v2 & 1;
}

void sub_1004F50C0()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v4 = *v3;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 48);
      swift_unknownObjectRetain();
      v6(ObjectType, v4);
      swift_unknownObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  sub_100038D28(v0 + 6, v0[9]);
  if (qword_1007851C0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100018BF8(v7, (uint64_t)qword_1007878B0);
  sub_1003AA294(0xD000000000000015, 0x80000001006A75B0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = Strong;
    id v10 = [Strong presentingViewController];

    if (v10)
    {
      [v10 dismissViewControllerAnimated:1 completion:0];
    }
  }
}

uint64_t sub_1004F5264()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  sub_100038CD8(v0 + 48);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIListDetailContainerPresenter()
{
  return self;
}

void sub_1004F52D8()
{
  void (*v16)(void *__return_ptr, uint64_t, uint64_t);
  void *Strong;
  void *v18;
  void v19[8];
  _OWORD v20[2];
  unsigned char v21[25];
  long long aBlock;
  long long v23;
  _OWORD v24[2];
  uint64_t vars8;

  uint64_t v1 = v0;
  if (sub_1004F5004())
  {
    id v2 = [self alertControllerWithTitle:0 message:0 preferredStyle:0];
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    uint64_t v3 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    *(void *)&v24[0] = sub_1004F573C;
    *((void *)&v24[0] + 1) = v3;
    *(void *)&aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&uint64_t v23 = sub_1001077FC;
    *((void *)&v23 + 1) = &unk_10074E550;
    uint64_t v5 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v6 = self;
    id v7 = [v6 actionWithTitle:v4 style:2 handler:v5];
    _Block_release(v5);
    swift_release();

    static TTRLocalizableStrings.Common.alertCancelButton.getter();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [v6 actionWithTitle:v8 style:1 handler:0];

    [v2 addAction:v7];
    [v2 addAction:v9];
    if (!swift_unknownObjectWeakLoadStrong()) {
      goto LABEL_7;
    }
    uint64_t v10 = sub_1003B63C4();
    char v12 = v11;
    swift_unknownObjectRelease();
    if (v12) {
      goto LABEL_7;
    }
    if (v10 < 0) {
      goto LABEL_7;
    }
    uint64_t v13 = v1[11];
    if (v10 >= *(void *)(v13 + 16)) {
      goto LABEL_7;
    }
    uint64_t v14 = *(void *)(v13 + 16 * v10 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 32);
    swift_unknownObjectRetain();
    v16(v19, ObjectType, v14);
    swift_unknownObjectRelease();
    sub_1000C77A4((uint64_t)v19, (uint64_t)v20);
    if ((~v21[8] & 0xFE) != 0)
    {
      aBlock = v20[0];
      uint64_t v23 = v20[1];
      v24[0] = *(_OWORD *)v21;
      *(_OWORD *)((char *)v24 + 9) = *(_OWORD *)&v21[9];
      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
      sub_1000C7874((uint64_t)v19);
    }
    else
    {
LABEL_7:
      [v2 setPreferredStyle:1];
    }
    sub_100038D28(v1 + 6, v1[9]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v18 = Strong;
      [Strong presentViewController:v2 animated:1 completion:0];
    }
    else
    {
    }
  }
  else
  {
    sub_1004F50C0();
  }
}

uint64_t sub_1004F562C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004F5664()
{
  if (qword_100785640 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_1007A2090);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1004F50C0();
    return swift_release();
  }
  return result;
}

uint64_t sub_1004F573C()
{
  return sub_1004F5664();
}

uint64_t sub_1004F5744()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A2160);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A2160);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1004F580C()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = sub_100544EC8();
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v29 = v1;
    sub_1004D3818(0, v3, 0);
    NSString v4 = (unsigned char *)(v2 + 40);
    do
    {
      uint64_t v5 = (void *)*((void *)v4 - 1);
      char v6 = *v4;
      id v7 = v5;
      uint64_t v8 = TTRListOrCustomSmartListChangeItem.displayName.getter();
      uint64_t v10 = v9;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_1004D3818(v11 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      uint64_t v13 = &_swiftEmptyArrayStorage[5 * v12];
      v13[4] = v8;
      v13[5] = v10;
      *((unsigned char *)v13 + 48) = 1;
      v13[7] = v5;
      *((unsigned char *)v13 + 64) = v6;
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v1 = v29;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectRetain();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1004F66CC(v14, v1);
  uint64_t v16 = v15;
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  int64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    sub_1004D3818(0, v17, 0);
    uint64_t v18 = (unsigned char *)(v16 + 40);
    do
    {
      uint64_t v19 = (void *)*((void *)v18 - 1);
      char v20 = *v18;
      id v21 = v19;
      uint64_t v22 = TTRListOrCustomSmartListChangeItem.displayName.getter();
      uint64_t v24 = v23;
      unint64_t v26 = _swiftEmptyArrayStorage[2];
      unint64_t v25 = _swiftEmptyArrayStorage[3];
      if (v26 >= v25 >> 1) {
        sub_1004D3818(v25 > 1, v26 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v26 + 1;
      uint64_t v27 = &_swiftEmptyArrayStorage[5 * v26];
      v27[4] = v22;
      v27[5] = v24;
      *((unsigned char *)v27 + 48) = 0;
      v27[7] = v19;
      *((unsigned char *)v27 + 64) = v20;
      v18 += 16;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1004F5A4C(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&aBlock[-2] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785648 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_1007A2160);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  long long v22 = xmmword_10066C6F0;
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v10 = (void *)*((void *)a1 + 3);
  uint64_t v11 = TTRListOrCustomSmartListChangeItem.objectID.getter();
  *(void *)(inited + 72) = sub_100028140();
  *(void *)(inited + 48) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static TTRLocalizableStrings.UndoAction.addListWithNameFormat.getter();
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v22;
  long long v24 = *a1;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_1000965C8();
  *(_OWORD *)(v12 + 32) = *a1;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = self;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  long long v16 = a1[1];
  *(_OWORD *)(v15 + 24) = *a1;
  *(_OWORD *)(v15 + 40) = v16;
  *(unsigned char *)(v15 + 56) = *((unsigned char *)a1 + 32);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1004F6924;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_10074E680;
  uint64_t v18 = _Block_copy(aBlock);
  sub_10026EA1C((uint64_t)&v24);
  id v19 = v10;
  swift_retain();
  swift_retain();
  swift_release();
  [v13 withActionName:v14 block:v18];

  _Block_release(v18);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F5E04(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&aBlock[-2] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785648 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_1007A2160);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  long long v22 = xmmword_10066C6F0;
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v10 = (void *)*((void *)a1 + 3);
  uint64_t v11 = TTRListOrCustomSmartListChangeItem.objectID.getter();
  *(void *)(inited + 72) = sub_100028140();
  *(void *)(inited + 48) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static TTRLocalizableStrings.UndoAction.removeListWithNameFormat.getter();
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = v22;
  long long v24 = *a1;
  *(void *)(v12 + 56) = &type metadata for String;
  *(void *)(v12 + 64) = sub_1000965C8();
  *(_OWORD *)(v12 + 32) = *a1;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = self;
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v2;
  long long v16 = a1[1];
  *(_OWORD *)(v15 + 24) = *a1;
  *(_OWORD *)(v15 + 40) = v16;
  *(unsigned char *)(v15 + 56) = *((unsigned char *)a1 + 32);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_1004F6900;
  *(void *)(v17 + 24) = v15;
  aBlock[4] = sub_1000218B0;
  aBlock[5] = v17;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_10074E608;
  uint64_t v18 = _Block_copy(aBlock);
  sub_10026EA1C((uint64_t)&v24);
  id v19 = v10;
  swift_retain();
  swift_retain();
  swift_release();
  [v13 withActionName:v14 block:v18];

  _Block_release(v18);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F61BC()
{
  TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter();
  TTRAccountEditor.move(list:topLevelPosition:)();
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10006C6A8();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1004F6260(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785648 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100018BF8(v6, (uint64_t)qword_1007A2160);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v12 = (void *)*((void *)a1 + 3);
  uint64_t v13 = TTRListOrCustomSmartListChangeItem.objectID.getter();
  unint64_t v14 = sub_100028140();
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 72) = v14;
  *(void *)(inited + 80) = 0x7865646E69;
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 88) = 0xE500000000000000;
  *(void *)(inited + 96) = a2;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static TTRLocalizableStrings.UndoAction.moveListWithNameFormat.getter();
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_10066C6F0;
  long long v26 = *a1;
  *(void *)(v15 + 56) = &type metadata for String;
  *(void *)(v15 + 64) = sub_1000965C8();
  *(_OWORD *)(v15 + 32) = *a1;
  swift_bridgeObjectRetain();
  static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v16 = self;
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v3;
  long long v19 = a1[1];
  *(_OWORD *)(v18 + 24) = *a1;
  *(_OWORD *)(v18 + 40) = v19;
  *(unsigned char *)(v18 + 56) = *((unsigned char *)a1 + 32);
  *(void *)(v18 + 64) = a2;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1004F6970;
  *(void *)(v20 + 24) = v18;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v20;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_10074E6F8;
  id v21 = _Block_copy(aBlock);
  sub_10026EA1C((uint64_t)&v26);
  id v22 = v12;
  swift_retain();
  swift_retain();
  swift_release();
  [v16 withActionName:v17 block:v21];

  _Block_release(v21);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F6650()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);

  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIGroupMembershipPresenter()
{
  return self;
}

void sub_1004F66CC(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  unint64_t v4 = 0;
  uint64_t v5 = a1 + 40;
  uint64_t v6 = -(uint64_t)v2;
  uint64_t v7 = _swiftEmptyArrayStorage;
  uint64_t v8 = &selRef_setAxis_;
  unint64_t v22 = *(void *)(a1 + 16);
  uint64_t v24 = -(uint64_t)v2;
  do
  {
    uint64_t v23 = v7;
    if (v4 <= v2) {
      unint64_t v9 = v2;
    }
    else {
      unint64_t v9 = v4;
    }
    uint64_t v25 = -(uint64_t)v9;
    for (uint64_t i = (unsigned char *)(v5 + 16 * v4++); ; i += 16)
    {
      if (v25 + v4 == 1)
      {
        __break(1u);
        return;
      }
      uint64_t v12 = (void *)*((void *)i - 1);
      char v13 = *i;
      id v27 = v12;
      char v26 = v13;
      unint64_t v14 = (void *)TTRListOrCustomSmartListChangeItem.parentListID.getter();
      id v15 = [*(id *)(a2 + 32) v8[30]];
      uint64_t v11 = v15;
      if (!v14)
      {
        if (!v15) {
          goto LABEL_10;
        }
        goto LABEL_8;
      }
      if (!v15)
      {
        uint64_t v11 = v14;
LABEL_8:

        goto LABEL_9;
      }
      sub_100028140();
      id v16 = v14;
      char v17 = static NSObject.== infix(_:_:)();

      uint64_t v6 = v24;
      if (v17) {
        goto LABEL_10;
      }
LABEL_9:
      if (TTRListOrCustomSmartListChangeItem.canBeIncludedInGroup.getter()) {
        break;
      }
LABEL_10:

      ++v4;
      if (v6 + v4 == 1) {
        return;
      }
    }
    uint64_t v7 = v23;
    uint64_t v18 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1004D37E8(0, v23[2] + 1, 1);
      uint64_t v7 = v23;
    }
    unint64_t v2 = v22;
    unint64_t v20 = v7[2];
    unint64_t v19 = v7[3];
    if (v20 >= v19 >> 1)
    {
      sub_1004D37E8(v19 > 1, v20 + 1, 1);
      uint64_t v7 = v23;
    }
    v7[2] = v20 + 1;
    id v21 = &v7[2 * v20];
    v21[4] = v12;
    *((unsigned char *)v21 + 40) = v26;
    uint64_t v6 = v18;
    uint64_t v8 = &selRef_setAxis_;
  }
  while (v18 + v4);
}

uint64_t sub_1004F68F8()
{
  return sub_100007A34(57);
}

uint64_t sub_1004F6900()
{
  return sub_1004F61BC();
}

uint64_t sub_1004F690C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F691C()
{
  return sub_100007A34(57);
}

uint64_t sub_1004F6924()
{
  return sub_100545204();
}

uint64_t sub_1004F6958()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F6968()
{
  return sub_100007A34(72);
}

void sub_1004F6970()
{
  sub_1005452A8(*(void *)(v0 + 48), *(unsigned char *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_1004F69A8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004F69C8(void *a1)
{
  return sub_1004F6A18(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dragSessionWillBegin {session: %s}", (uint64_t)&selRef_addObject_, (void (*)(void, void, void, void))sub_1004F70E0);
}

uint64_t sub_1004F69F0(void *a1)
{
  return sub_1004F6A18(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dragSessionDidEnd {session: %s}", (uint64_t)&selRef_removeObject_, (void (*)(void, void, void, void))sub_1004F70E0);
}

uint64_t sub_1004F6A18(void *a1, char *a2, uint64_t a3, void (*a4)(void, void, void, void))
{
  uint64_t v8 = v4;
  if (qword_100785650 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_1007A2240);
  swift_unknownObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v21 = a4;
    char v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)char v13 = 136315138;
    id v14 = [a1 description];
    format = a2;
    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    sub_1000385A8(v15, v17, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    a4 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, format, v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
  swift_unknownObjectRetain();
  uint64_t v18 = swift_retain();
  a4(v18, v8, a1, a3);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1004F6C44(void *a1)
{
  return sub_1004F6A18(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dropSessionDidEnter {session: %s}", (uint64_t)&selRef_addObject_, (void (*)(void, void, void, void))sub_1004F7340);
}

uint64_t sub_1004F6C6C(void *a1)
{
  return sub_1004F6A18(a1, "TTRIRemindersBoardDragAndDropActivityTracker: dropSessionDidEnd {session: %s}", (uint64_t)&selRef_removeObject_, (void (*)(void, void, void, void))sub_1004F7340);
}

uint64_t sub_1004F6C94()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A2240);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A2240);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1004F6D5C(char a1)
{
  sub_10003B754((uint64_t *)&unk_1007A2330);
  uint64_t v2 = swift_allocObject();
  int32x2_t v3 = vdup_n_s32((a1 & 1) == 0);
  v4.i64[0] = v3.u32[0];
  v4.i64[1] = v3.u32[1];
  *(_OWORD *)(v2 + 16) = xmmword_10066C680;
  *(int8x16_t *)(v2 + 32) = vandq_s8((int8x16_t)vcgezq_s64(vshlq_n_s64(v4, 0x3FuLL)), (int8x16_t)xmmword_10067A730);
  int32x2_t v5 = vdup_n_s32((a1 & 2) == 0);
  v4.i64[0] = v5.u32[0];
  v4.i64[1] = v5.u32[1];
  *(int8x16_t *)(v2 + 48) = vandq_s8((int8x16_t)vcgezq_s64(vshlq_n_s64(v4, 0x3FuLL)), (int8x16_t)xmmword_10067A740);
  sub_10003B754((uint64_t *)&unk_1007A03A0);
  sub_100037EA0(&qword_1007A2340, (uint64_t *)&unk_1007A03A0);
  Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v6 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v8 = v7;
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = v6;
  v9._object = v8;
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 93;
  v10._object = (void *)0xE100000000000000;
  String.append(_:)(v10);
  return 91;
}

uint64_t sub_1004F6EFC()
{
  return sub_1004F6D5C(*v0);
}

uint64_t sub_1004F6F04()
{
  sub_1000499C4(*(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersBoardDragAndDropActivityTracker()
{
  return self;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates()
{
  return &type metadata for TTRIRemindersBoardDragAndDropActivityTracker.ActiveStates;
}

unint64_t sub_1004F6F84()
{
  unint64_t result = qword_1007A2310;
  if (!qword_1007A2310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2310);
  }
  return result;
}

unint64_t sub_1004F6FDC()
{
  unint64_t result = qword_1007A2318;
  if (!qword_1007A2318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2318);
  }
  return result;
}

unint64_t sub_1004F7034()
{
  unint64_t result = qword_1007A2320;
  if (!qword_1007A2320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2320);
  }
  return result;
}

unint64_t sub_1004F708C()
{
  unint64_t result = qword_1007A2328;
  if (!qword_1007A2328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2328);
  }
  return result;
}

void sub_1004F70E0(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  [*(id *)(a2 + 40) *a4];
  BOOL v6 = (uint64_t)[*(id *)(a1 + 40) count] > 0;
  uint64_t v7 = (uint64_t)[*(id *)(a1 + 48) count];
  uint64_t v8 = v6 | 2;
  if (v7 < 1) {
    uint64_t v8 = v6;
  }
  *(void *)(a1 + 16) = v8;
  if (v8 != v5)
  {
    if (qword_100785650 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_1007A2240);
    swift_retain_n();
    Swift::String v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v13 = sub_1004F6D5C(v5);
      sub_1000385A8(v13, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v15 = sub_1004F6D5C(*(void *)(a1 + 16));
      sub_1000385A8(v15, v16, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRIRemindersBoardDragAndDropActivityTracker: state change {from: %s, to: %s}", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v17 = *(void (**)(uint64_t))(a1 + 24);
      if (!v17) {
        return;
      }
    }
    else
    {

      swift_release_n();
      unint64_t v17 = *(void (**)(uint64_t))(a1 + 24);
      if (!v17) {
        return;
      }
    }
    uint64_t v18 = swift_retain();
    v17(v18);
    sub_1000499C4((uint64_t)v17);
  }
}

void sub_1004F7340(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  [*(id *)(a2 + 48) *a4];
  BOOL v6 = (uint64_t)[*(id *)(a1 + 40) count] > 0;
  uint64_t v7 = (uint64_t)[*(id *)(a1 + 48) count];
  uint64_t v8 = v6 | 2;
  if (v7 < 1) {
    uint64_t v8 = v6;
  }
  *(void *)(a1 + 16) = v8;
  if (v8 != v5)
  {
    if (qword_100785650 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_1007A2240);
    swift_retain_n();
    Swift::String v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315394;
      uint64_t v13 = sub_1004F6D5C(v5);
      sub_1000385A8(v13, v14, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v15 = sub_1004F6D5C(*(void *)(a1 + 16));
      sub_1000385A8(v15, v16, &v19);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRIRemindersBoardDragAndDropActivityTracker: state change {from: %s, to: %s}", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      unint64_t v17 = *(void (**)(uint64_t))(a1 + 24);
      if (!v17) {
        return;
      }
    }
    else
    {

      swift_release_n();
      unint64_t v17 = *(void (**)(uint64_t))(a1 + 24);
      if (!v17) {
        return;
      }
    }
    uint64_t v18 = swift_retain();
    v17(v18);
    sub_1000499C4((uint64_t)v17);
  }
}

uint64_t sub_1004F75A0(double a1, double a2, double a3)
{
  if ((~*(void *)&a3 & 0x7FF0000000000000) == 0 || (~*(void *)&a1 & 0x7FF0000000000000) == 0)
  {
    sub_10009EECC();
    char v4 = FloatingPoint.rescaledAlmostEqual(to:tolerance:)();
  }
  else
  {
    double v5 = fabs(a3);
    double v6 = fabs(a1);
    if (v5 <= v6) {
      double v5 = v6;
    }
    if (v5 <= 2.22507386e-308) {
      double v5 = 2.22507386e-308;
    }
    char v4 = vabdd_f64(a3, a1) < v5 * a2;
  }
  return v4 & 1;
}

void sub_1004F7644()
{
  uint64_t v1 = v0;
  if (UIAccessibilityIsVoiceOverRunning() || UIAccessibilityIsSwitchControlRunning())
  {
    sub_10003B754(&qword_1007A25B0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_100670000;
    uint64_t v3 = v2 + 32;
    goto LABEL_4;
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    swift_retain();
    char v4 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
    swift_release();
    sub_10003B754(&qword_1007A25B0);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_100670000;
    uint64_t v3 = v10 + 32;
    if (v4)
    {
      *(void *)(v10 + 56) = sub_1000368FC(0, (unint64_t *)&qword_100788600);
      *(void *)(v10 + 32) = v4;
LABEL_5:
      uint64_t v5 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator;
      if (!*(void *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
      {
        __break(1u);
        goto LABEL_23;
      }
      swift_retain();
      id v6 = v4;
      uint64_t v7 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
      uint64_t v8 = swift_release();
      if (v7)
      {
        uint64_t v9 = type metadata accessor for TTRIReminderTitleTextView();
        uint64_t v8 = swift_dynamicCastClass();
        if (v8)
        {
          *(void *)(v3 + 56) = v9;
          *(void *)(v3 + 32) = v8;
          goto LABEL_14;
        }
      }
      *(_OWORD *)(v3 + 32) = 0u;
      *(_OWORD *)(v3 + 48) = 0u;
LABEL_14:
      if (*(void *)(v1 + v5))
      {
        __chkstk_darwin(v8);
        swift_retain();
        uint64_t v11 = TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)();
        swift_release();
        *(void *)(v3 + 88) = sub_1000368FC(0, (unint64_t *)&qword_100788600);
        *(void *)(v3 + 64) = v11;
        if (*(void *)(v1 + v5))
        {
          swift_retain();
          uint64_t v12 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
          swift_release();
          if (v12)
          {
            uint64_t v13 = type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
            uint64_t v14 = swift_dynamicCastClass();
            if (v14)
            {
              *(void *)(v3 + 120) = v13;
              *(void *)(v3 + 96) = v14;
LABEL_21:
              id v15 = sub_1004F9D10();
              *(void *)(v3 + 152) = type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView();
              *(void *)(v3 + 128) = v15;
              sub_10003B754(&qword_1007A25B8);
              sub_100037EA0(&qword_1007A25C0, &qword_1007A25B8);
              Sequence.removingNils<A>()();
              swift_bridgeObjectRelease();

              return;
            }
          }
          *(_OWORD *)(v3 + 96) = 0u;
          *(_OWORD *)(v3 + 112) = 0u;
          goto LABEL_21;
        }
        goto LABEL_24;
      }
LABEL_23:
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
LABEL_4:
    char v4 = 0;
    *(_OWORD *)uint64_t v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    goto LABEL_5;
  }
LABEL_25:
  __break(1u);
}

void sub_1004F7960()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    swift_retain();
    uint64_t v1 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
    swift_release();
    if (v1)
    {
      type metadata accessor for TTRIReminderTitleTextView();
      uint64_t v2 = (void *)swift_dynamicCastClass();
      uint64_t v3 = v2;
      if (v2)
      {
        if ([v2 canBecomeFirstResponder])
        {
          id v4 = [v3 window];
          [v4 makeKeyWindow];

          [v3 becomeFirstResponder];
        }
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004F7A50()
{
  uint64_t v1 = sub_10003B754(&qword_100794B10);
  __chkstk_darwin(v1 - 8);
  uint64_t v27 = (uint64_t)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v28 = (uint64_t)&v27 - v4;
  __chkstk_darwin(v5);
  uint64_t v7 = (unsigned __int8 *)&v27 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  swift_beginAccess();
  sub_10003B694(v11, (uint64_t)v10, &qword_100794B10);
  uint64_t v12 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  if (v14(v10, 1, v12) == 1)
  {
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  int v15 = v10[*(int *)(v12 + 72)];
  sub_100505034((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  BOOL v16 = v15 == 1;
  unint64_t v17 = v0;
  if (v16)
  {
    if (v14((char *)v11, 1, v12) == 1)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    *(unsigned char *)(v11 + *(int *)(v12 + 72)) = 0;
    sub_10003B694(v11, (uint64_t)v7, &qword_100794B10);
    if (v14((char *)v7, 1, v12) == 1)
    {
LABEL_22:
      __break(1u);
      return;
    }
    uint64_t v18 = v28;
    sub_10003B694(v11, v28, &qword_100794B10);
    uint64_t v19 = v27;
    sub_1005050FC((uint64_t)v7, v27, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
    swift_beginAccess();
    sub_100500E44(v19, v11);
    swift_endAccess();
    sub_1004FA9D8((uint64_t)v7, v18);
    sub_1004FAD30((uint64_t)v7);
    [v17 setUserInteractionEnabled:*v7];
    long long v20 = *((_OWORD *)v7 + 7);
    v30[0] = *((_OWORD *)v7 + 6);
    v30[1] = v20;
    v30[2] = *((_OWORD *)v7 + 8);
    sub_1004FB6E4((uint64_t)v30);
    sub_10003B6F8(v18, &qword_100794B10);
    sub_100505034((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  uint64_t v21 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator;
  if (!*(void *)&v17[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator]) {
    goto LABEL_19;
  }
  char v29 = 8;
  swift_retain();
  uint64_t v22 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
  swift_release();
  if (v22)
  {
    type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
    uint64_t v23 = (void *)swift_dynamicCastClass();
    if (v23)
    {
      id v24 = [v23 window];

      [v24 makeKeyWindow];
      uint64_t v22 = v24;
    }
  }
  if (!*(void *)&v17[v21]) {
    goto LABEL_20;
  }
  char v29 = 8;
  swift_retain();
  uint64_t v25 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
  swift_release();
  if (v25)
  {
    type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
    char v26 = (void *)swift_dynamicCastClass();
    if (v26) {
      [v26 becomeFirstResponder];
    }
  }
}

unint64_t sub_1004F7E60()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A2598);
  unint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_10066C680;
  uint64_t v3 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator;
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  unint64_t v4 = result;
  swift_retain();
  uint64_t v5 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
  swift_release();
  if (v5)
  {
    type metadata accessor for TTRIReminderTitleTextView();
    unint64_t result = swift_dynamicCastClass();
    if (result) {
      goto LABEL_6;
    }
  }
  unint64_t result = 0;
LABEL_6:
  *(void *)(v4 + 32) = result;
  if (*(void *)(v1 + v3))
  {
    swift_retain();
    uint64_t v6 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
    swift_release();
    uint64_t v7 = 0;
    if (v6)
    {
      type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
      uint64_t v7 = swift_dynamicCastClass();
      if (!v7)
      {

        uint64_t v7 = 0;
      }
    }
    *(void *)(v4 + 40) = v7;
    specialized Array._endMutation()();
    sub_10003B754(&qword_1007A25A0);
    type metadata accessor for TTRIReminderTitleTextView();
    sub_100037EA0(&qword_1007A25A8, &qword_1007A25A0);
    unint64_t v8 = Sequence.removingNils<A>()();
    swift_bridgeObjectRelease();
    if (v8 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v9 = result;
      if (result) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t result = swift_bridgeObjectRetain();
      if (v9)
      {
LABEL_12:
        if (v9 >= 1)
        {
          for (uint64_t i = 0; i != v9; ++i)
          {
            if ((v8 & 0xC000000000000001) != 0) {
              id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v14 = *(id *)(v8 + 8 * i + 32);
            }
            uint64_t v13 = v14;
            id v15 = [v14 _accessibilityInternalTextLinks];
            if (v15)
            {
              id v11 = v15;
              sub_1000368FC(0, &qword_100794B18);
              uint64_t v12 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v13 = v11;
            }
            else
            {
              uint64_t v12 = _swiftEmptyArrayStorage;
            }

            sub_10056A46C((unint64_t)v12);
          }
          swift_bridgeObjectRelease_n();
          if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
            goto LABEL_28;
          }
LABEL_25:
          if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) == 0) {
            return (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
          }
LABEL_28:
          BOOL v16 = sub_10035E8EC((unint64_t)_swiftEmptyArrayStorage);
          swift_bridgeObjectRelease();
          return (unint64_t)v16;
        }
        __break(1u);
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease_n();
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_28;
    }
    goto LABEL_25;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1004F8160()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    __break(1u);
    return;
  }
  swift_retain();
  uint64_t v1 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
  swift_release();
  if (v1)
  {
    type metadata accessor for TTRIReminderTitleTextView();
    uint64_t v2 = (void *)swift_dynamicCastClass();
    if (v2)
    {
      id v3 = [v2 attributedText];

      if (v3) {
        return;
      }
    }
    else
    {
    }
  }
  [objc_allocWithZone((Class)NSAttributedString) init];
}

void sub_1004F8220(char a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  if (qword_100785658 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_1007A2348);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v8 = _typeName(_:qualified:)();
    sub_1000385A8(v8, v9, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1000385A8(0xD00000000000001DLL, 0x80000001006BD560, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%s: %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    __break(1u);
    return;
  }
  LOBYTE(v21) = 2;
  swift_retain();
  uint64_t v10 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
  swift_release();
  if (v10)
  {
    type metadata accessor for TTRIReminderTitleTextView();
    id v11 = (void *)swift_dynamicCastClass();
    if (v11)
    {
      uint64_t v12 = v11;
      if (a1) {
        [v11 set_textInputSource:3];
      }
      UITextInput<>.ttrBeginEditing()();
      id v13 = [v12 selectedTextRange];

      if (v13)
      {
      }
      else
      {
        id v19 = v10;
        long long v20 = (void *)UITextInput<>.textRangeForEndOfDocument.getter();
        [v12 setSelectedTextRange:v20];
      }
      return;
    }
  }
  id v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = _typeName(_:qualified:)();
    sub_1000385A8(v17, v18, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    sub_1000385A8(0xD00000000000001DLL, 0x80000001006BD560, &v21);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: %s - Unable to get titleTextView", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

void sub_1004F8638()
{
  uint64_t v1 = v0;
  if (*(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator])
  {
    swift_retain();
    uint64_t v2 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
    swift_release();
    if (v2)
    {
      type metadata accessor for TTRIReminderTitleTextView();
      id v3 = (void *)swift_dynamicCastClass();
      if (v3)
      {
        uint64_t v4 = v3;
        [v3 bounds];
        [v1 convertRect:v4 fromCoordinateSpace:];
        CGRect v14 = CGRectInset(v13, 0.0, -12.0);
        CGFloat x = v14.origin.x;
        CGFloat y = v14.origin.y;
        CGFloat width = v14.size.width;
        CGFloat height = v14.size.height;
        [v1 bounds];
        v16.origin.CGFloat x = v9;
        v16.origin.CGFloat y = v10;
        v16.size.CGFloat width = v11;
        v16.size.CGFloat height = v12;
        v15.origin.CGFloat x = x;
        v15.origin.CGFloat y = y;
        v15.size.CGFloat width = width;
        v15.size.CGFloat height = height;
        CGRectIntersection(v15, v16);
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1004F8778(uint64_t a1@<X8>)
{
  if (*(void *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator])
  {
    id v3 = v1;
    swift_retain();
    uint64_t v4 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
    swift_release();
    CGFloat v5 = 0.0;
    if (v4)
    {
      type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
      os_log_type_t v6 = (void *)swift_dynamicCastClass();
      if (v6)
      {
        uint64_t v7 = v6;
        [v6 bounds];
        [v3 convertRect:v7 fromCoordinateSpace:];
        CGRect v20 = CGRectInset(v19, 0.0, -12.0);
        CGFloat x = v20.origin.x;
        CGFloat y = v20.origin.y;
        CGFloat width = v20.size.width;
        CGFloat height = v20.size.height;
        [v3 bounds];
        v23.origin.CGFloat x = v12;
        v23.origin.CGFloat y = v13;
        v23.size.CGFloat width = v14;
        v23.size.CGFloat height = v15;
        v21.origin.CGFloat x = x;
        v21.origin.CGFloat y = y;
        v21.size.CGFloat width = width;
        v21.size.CGFloat height = height;
        CGRect v22 = CGRectIntersection(v21, v23);
        CGFloat v5 = v22.origin.x;
        CGFloat v16 = v22.origin.y;
        CGFloat v17 = v22.size.width;
        CGFloat v18 = v22.size.height;

LABEL_7:
        *(CGFloat *)a1 = v5;
        *(CGFloat *)(a1 + 8) = v16;
        *(CGFloat *)(a1 + 16) = v17;
        *(CGFloat *)(a1 + 24) = v18;
        *(unsigned char *)(a1 + 32) = 0;
        return;
      }
    }
    CGFloat v16 = 0.0;
    CGFloat v17 = 0.0;
    CGFloat v18 = 0.0;
    goto LABEL_7;
  }
  __break(1u);
}

uint64_t sub_1004F88C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A2348);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A2348);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1004F898C(unsigned __int8 *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:1];
  sub_1004F8EB0();
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  [v3 setDirectionalLayoutMargins:xmmword_10078EF60, *(double *)&qword_10078EF70, *(double *)&qword_10078EF78];
  sub_1004FB98C();
  sub_1004F8AF0(a1);
  sub_10003B754(&qword_100789500);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C6F0;
  *(void *)(v4 + 32) = type metadata accessor for UITraitDisplayScale();
  *(void *)(v4 + 40) = &protocol witness table for UITraitDisplayScale;
  id v5 = v3;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  sub_100505034((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  return v5;
}

uint64_t sub_1004F8AF0(unsigned __int8 *a1)
{
  uint64_t v3 = sub_10003B754(&qword_100794B10);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v14 - v7 + 16;
  uint64_t v9 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess();
  sub_10003B694(v9, (uint64_t)v8, &qword_100794B10);
  sub_1005050FC((uint64_t)a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  uint64_t v10 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_100500E44((uint64_t)v5, v9);
  swift_endAccess();
  sub_1004FA9D8((uint64_t)a1, (uint64_t)v8);
  sub_1004FAD30((uint64_t)a1);
  [v1 setUserInteractionEnabled:*a1];
  long long v11 = *((_OWORD *)a1 + 7);
  v14[0] = *((_OWORD *)a1 + 6);
  v14[1] = v11;
  v14[2] = *((_OWORD *)a1 + 8);
  sub_1004FB6E4((uint64_t)v14);
  return sub_10003B6F8((uint64_t)v8, &qword_100794B10);
}

uint64_t sub_1004F8C9C()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_10050519C;
  *(void *)(v3 + 24) = v2;
  v8[4] = sub_1000499FC;
  void v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  id v8[2] = sub_100021888;
  v8[3] = &unk_10074E948;
  uint64_t v4 = _Block_copy(v8);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performWithoutAnimation:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

unint64_t sub_1004F8E44@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10050111C(*a1);
  *a2 = result;
  return result;
}

void sub_1004F8E70(void *a1@<X8>)
{
  *a1 = &off_100735A40;
}

BOOL sub_1004F8E84(void *a1, void *a2)
{
  if (*a1) {
    BOOL v2 = *a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  if (v2) {
    return (*a1 | *a2) == 0;
  }
  else {
    return *a1 == *a2;
  }
}

void sub_1004F8EB0()
{
  uint64_t v1 = (double *)&v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  if (v0[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics + 8])
  {
    id v2 = [v0 traitCollection];
    [v2 displayScale];
    double v4 = v3;

    *uint64_t v1 = fmax(v4, 1.0);
    *((unsigned char *)v1 + 8) = 0;
  }
}

void sub_1004F8F38()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      double v4 = *(void (**)(uint64_t))(v2 + 64);
      if (v4)
      {
        uint64_t v5 = swift_retain();
        v4(v5);
        sub_1000499C4((uint64_t)v4);
      }
    }
  }
}

id sub_1004F9020()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for TTRIReminderTitleTextView());
  uint64_t v3 = (void *)TTRIReminderTitleTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:hashtagTokenEditingBehavior:)();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v4 = v3;
  uint64_t v5 = (void *)static UIFont.roundedBodyFont.getter();
  [v4 setFont:v5];

  [v4 setAdjustsFontForContentSizeCategory:1];
  LODWORD(v6) = 1132068864;
  [v4 setLayoutSize:NUIContainerViewSizeUnbounded[0] withContentPriority:NUIContainerViewSizeUnbounded[1] v6];
  uint64_t v7 = self;
  id v8 = v4;
  id v9 = [v7 labelColor];
  [v8 setTextColor:v9];

  [v8 setBackgroundColor:0];
  id v10 = v8;
  v11._object = (void *)0x80000001006BD580;
  v12._countAndFlagsBits = 0x656C746954;
  v12._object = (void *)0xE500000000000000;
  v11._countAndFlagsBits = 0xD00000000000003FLL;
  TTRLocalizedString(_:comment:)(v12, v11);
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setAccessibilityLabel:v13];

  sub_1000368FC(0, (unint64_t *)&unk_1007885D0);
  UITextDraggable<>.disableDragInteraction_rdar93793341()();
  [v10 setTextDropDelegate:*(void *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler)];
  return v10;
}

void sub_1004F91F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      id v4 = *(void (**)(uint64_t))(v2 + 240);
      if (v4)
      {
        uint64_t v5 = swift_retain();
        v4(v5);
        sub_1000499C4((uint64_t)v4);
      }
    }
  }
}

void sub_1004F92E0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      id v4 = *(void (**)(uint64_t))(v2 + 168);
      if (v4)
      {
        uint64_t v5 = swift_retain();
        v4(v5);
        sub_1000499C4((uint64_t)v4);
      }
    }
  }
}

id sub_1004F93C8()
{
  uint64_t v1 = v0;
  id v2 = objc_allocWithZone((Class)type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView());
  uint64_t v3 = (void *)TTRIReminderTitleTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:hashtagTokenEditingBehavior:)();
  [v3 setTextContainerInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  id v4 = [v3 textContainer];
  [v4 setLineFragmentPadding:0.0];

  id v5 = [v3 layoutManager];
  [v5 setUsesFontLeading:0];

  double v6 = self;
  id v7 = v3;
  id v8 = [v6 clearColor];
  [v7 setBackgroundColor:v8];

  [v7 setAdjustsFontForContentSizeCategory:1];
  id v9 = v7;
  id v10 = [v6 secondaryLabelColor];
  [v9 setTextColor:v10];

  uint64_t v11 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v12 = v9;
  NSString v13 = (void *)static UIFont.roundedSubheadlineFont.getter();
  [v12 setFont:v13];

  id v14 = [v12 textContainer];
  [v14 setLineBreakMode:4];

  if (UIAccessibilityIsBoldTextEnabled()) {
    uint64_t v15 = static UIFont.roundedHeadlineFont.getter();
  }
  else {
    uint64_t v15 = static UIFont.roundedSubheadlineFont.getter();
  }
  CGFloat v16 = (void *)v15;
  static TTRLocalizableStrings.RemindersList.addNotePlaceholderText.getter();
  sub_10003B754(&qword_100793B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  CGFloat v18 = NSForegroundColorAttributeName;
  id v19 = [v6 placeholderTextColor];
  uint64_t v20 = sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  *(void *)(inited + 40) = v19;
  *(void *)(inited + 64) = v20;
  *(void *)(inited + 72) = NSFontAttributeName;
  *(void *)(inited + 104) = v11;
  *(void *)(inited + 80) = v16;
  CGRect v21 = NSFontAttributeName;
  id v22 = v16;
  sub_100421E1C(inited);
  id v23 = objc_allocWithZone((Class)NSAttributedString);
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1005025AC((unint64_t *)&qword_100793B50, type metadata accessor for Key);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v23 initWithString:v24 attributes:isa];

  [v12 setAttributedPlaceholder:v26];
  sub_1000368FC(0, (unint64_t *)&unk_1007885D0);
  UITextDraggable<>.disableDragInteraction_rdar93793341()();
  [v12 setTextDropDelegate:*(void *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler)];

  return v12;
}

void sub_1004F9798()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      id v4 = *(void (**)(uint64_t))(v2 + 200);
      if (v4)
      {
        uint64_t v5 = swift_retain();
        v4(v5);
        sub_1000499C4((uint64_t)v4);
      }
    }
  }
}

id sub_1004F9880()
{
  type metadata accessor for TTRNoAnimationContainerStackView();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v0 setAxis:0];
  [v0 setDistribution:8];
  id v1 = v0;
  sub_1004F8EB0();
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  ceil(_:toScale:)();
  [v1 setSpacing:];

  [v1 setAlignment:3];
  [v1 setDebugBoundingBoxesEnabled:0];
  double v2 = NUIContainerViewSizeUseDefault[0];
  double v3 = NUIContainerViewSizeUseDefault[1];
  type metadata accessor for UILayoutPriority(0);
  sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v4) = v6;
  [v1 setLayoutSize:v2 withContentPriority:v3, v4];
  return v1;
}

objc_class *sub_1004F9A14()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator);
  if (v2)
  {
    double v3 = *(objc_class **)(v0
                        + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator);
  }
  else
  {
    uint64_t v4 = v0;
    type metadata accessor for TTRIExpandedHitTestButton();
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v11.value.super.super.Class isa = (Class)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    Class isa = UIButton.init(type:primaryAction:)(UIButtonTypeCustom, v11).super.super.super.super.isa;
    sub_1004F8EB0();
    LODWORD(v7) = 1148846080;
    -[objc_class setLayoutSize:withContentPriority:](isa, "setLayoutSize:withContentPriority:", 24.0, 24.0, v7, 0, 0, 0, sub_1005025A4, v5);
    id v8 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = isa;
    double v3 = isa;

    double v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_1004F9B4C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = *(void (**)(uint64_t))(v2 + *(int *)(v3 + 108) + 24);
      if (v4)
      {
        uint64_t v5 = swift_retain();
        v4(v5);
        sub_1000499C4((uint64_t)v4);
      }
    }
  }
}

id sub_1004F9C40()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator);
  }
  else
  {
    type metadata accessor for TTRIRemindersListCellAssigneeView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v5 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"didPressAssigneeIndicator:"];
    [v5 setNumberOfTouchesRequired:1];
    [v4 addGestureRecognizer:v5];

    int v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1004F9D10()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView());
    int v6 = (void *)TTRIRemindersListCellAutoCompleteSuggestionsStackView.init(listLayout:)();
    double v7 = NUIContainerViewSizeUseDefault[0];
    double v8 = NUIContainerViewSizeUseDefault[1];
    type metadata accessor for UILayoutPriority(0);
    sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v9) = v13;
    [v6 setLayoutSize:v7 withContentPriority:v8, v9];
    id v10 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v11 = v2;
  return v3;
}

id sub_1004F9E28()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = objc_allocWithZone((Class)type metadata accessor for TTRISeparator());
    int v6 = (void *)TTRISeparator.init(axis:)();
    double v7 = *(void **)(v0 + v1);
    *(void *)(v4 + v1) = v6;
    id v3 = v6;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_1004F9EA0()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton);
  }
  else
  {
    uint64_t v4 = sub_1004F9F04(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void *sub_1004F9F04(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078ED08);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UIButton.Configuration();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)v20 - v10;
  sub_1000AEE64();
  UIButton.Configuration.title.setter();
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v12 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 0, 1, v12);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  int v13 = (void *)static UIFont.roundedBodyEmphasizedFont.getter();
  id v14 = [self configurationWithFont:v13 scale:1];

  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  sub_1004F8EB0();
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  UIButton.Configuration.contentInsets.setter();
  type metadata accessor for TTRIOutlineDisclosureButton();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v15 = (void *)UIButton.init(configuration:primaryAction:)();
  [v15 setChangesSelectionAsPrimaryAction:1];
  [v15 setContentHorizontalAlignment:3];
  [v15 setMinimumLayoutSize:NUIContainerViewLengthUseDefault, 44.0];
  id v16 = [self defaultCenter];
  memset(v20, 0, sizeof(v20));
  id v17 = [self mainQueue];
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  uint64_t v18 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();

  swift_release();
  sub_10003B6F8((uint64_t)v20, &qword_100788D60);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  swift_release();
  *(void *)(a1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription) = v18;
  swift_release();
  return v15;
}

uint64_t sub_1004FA374@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  static UIFont.roundedSubheadlineFont.getter();
  sub_10001B9FC();
  return AttributeContainer.subscript.setter();
}

void sub_1004FA444()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3) == 1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v4 = *(void (**)(uint64_t))(v2 + 128);
      if (v4)
      {
        uint64_t v5 = swift_retain();
        v4(v5);
        sub_1000499C4((uint64_t)v4);
      }
    }
  }
}

void sub_1004FA52C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1004FA580();
  }
}

void sub_1004FA580()
{
  uint64_t v0 = sub_10003B754(&qword_10078ED00);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v4 = __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - v5;
  uint64_t v7 = (void *)sub_1004F9EA0(v4);
  UIButton.configuration.getter();
  uint64_t v8 = type metadata accessor for UIButton.Configuration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8))
  {
    sub_10003B694((uint64_t)v6, (uint64_t)v2, &qword_10078ED00);
    UIButton.configuration.setter();

    sub_10003B6F8((uint64_t)v6, &qword_10078ED00);
  }
  else
  {
    UIAccessibilityButtonShapesEnabled();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v10 = [self systemImageNamed:v9];

    UIButton.Configuration.image.setter();
    UIButton.configuration.setter();
  }
}

id sub_1004FA748(void *a1)
{
  type metadata accessor for InfoButton();
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = v2;
  uint64_t v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:v3 primaryAction:0.0, 0.0, 0.0, 0.0, 0, 0, 0, sub_100500E3C, v12];

  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [self systemImageNamed:v5];

  [v4 setImage:v6 forState:0];
  id v7 = v4;
  TTRAccesibility.RemindersList.Label.EditDetails.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAccessibilityLabel:v8];

  LODWORD(v9) = 1148846080;
  [v7 setLayoutSize:NUIContainerViewSizeUseDefault[0] withContentPriority:NUIContainerViewSizeUseDefault[1] v9];
  [v7 setCustomAlignmentRectInsets:6.0, 0.0, 6.0, 0.0];
  [v7 sizeToFit];
  [a1 bounds];
  CGRectGetWidth(v13);
  [v7 frame];
  id v10 = v7;
  [a1 effectiveUserInterfaceLayoutDirection];
  CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)();
  [v10 setFrame:];

  return v10;
}

uint64_t sub_1004FA9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v23 = a2;
  uint64_t v5 = sub_10003B754(&qword_100794B10);
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = *(void *)(v22 + 64);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = xmmword_10066C4F0;
  uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView];
  if (v12)
  {
    CGRect v13 = (void *)result;
    *(void *)(result + 32) = v12;
    id v14 = v12;
    v13[5] = sub_1004F9E28();
    v13[6] = sub_1004F9D10();
    v13[7] = sub_1004F9EA0();
    aBlock[0] = v13;
    specialized Array._endMutation()();
    uint64_t v15 = aBlock[0];
    sub_1005050FC(a1, (uint64_t)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_10003B694(v23, (uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100794B10);
    unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v17 = (v9 + *(unsigned __int8 *)(v22 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = v3;
    v18[3] = v15;
    v18[4] = v3;
    sub_100505094((uint64_t)v10, (uint64_t)v18 + v16, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_100028C3C((uint64_t)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v18 + v17, &qword_100794B10);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_100504F4C;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_1000218B0;
    aBlock[5] = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    aBlock[3] = &unk_10074E8D0;
    uint64_t v20 = _Block_copy(aBlock);
    id v21 = v3;
    swift_retain();
    swift_release();
    [v21 performBatchUpdates:v20];
    _Block_release(v20);
    LOBYTE(v21) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((v21 & 1) == 0) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1004FAD30(uint64_t a1)
{
  uint64_t v87 = type metadata accessor for REMFeatureFlags();
  uint64_t v73 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  long long v72 = (char *)&v71 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v71 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v71 - v7;
  int v9 = TTRBoardReminderCellContentConfigurationType.priorityIndicatorIsHidden.getter();
  int v89 = *(unsigned __int8 *)(a1 + *(int *)(v3 + 84));
  LODWORD(v90) = v9;
  int v92 = TTRBoardReminderCellContentConfigurationType.infoButtonVisibility.getter();
  int v10 = TTRBoardReminderCellContentConfigurationType.listNameIsHidden.getter();
  unsigned int v83 = TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter();
  int v11 = TTRBoardReminderCellContentConfigurationType.descriptionLabelIsHidden.getter();
  int v12 = *(unsigned __int8 *)(a1 + *(int *)(v3 + 72));
  int v13 = TTRBoardReminderCellContentConfigurationType.locationLabelIsHidden.getter();
  int v14 = TTRBoardReminderCellContentConfigurationType.hashtagsLabelIsHidden.getter();
  if (!*(void *)(a1 + 192) || (*(unsigned char *)(a1 + 216) & 1) != 0)
  {
    BOOL v74 = 0;
    uint64_t v15 = *(void *)(a1 + 256);
    if (!v15) {
      goto LABEL_4;
    }
  }
  else
  {
    BOOL v74 = (*(unsigned char *)(a1 + 217) & 1) == 0;
    uint64_t v15 = *(void *)(a1 + 256);
    if (!v15)
    {
LABEL_4:
      BOOL v16 = 1;
      goto LABEL_7;
    }
  }
  BOOL v16 = *(void *)(v15 + 16) == 0;
LABEL_7:
  BOOL v75 = v16;
  int v91 = v90 ^ 1;
  LODWORD(v79) = v10 ^ 1;
  char v17 = TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter();
  sub_1005050FC(a1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  if (v17)
  {
    char v18 = TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter();
    sub_100505034((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_1005050FC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    if (v18)
    {
      int v76 = TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter();
      goto LABEL_12;
    }
  }
  else
  {
    sub_100505034((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    sub_1005050FC(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  int v76 = 0;
LABEL_12:
  char v19 = v89;
  int v78 = v11 ^ 1;
  int v82 = v13 ^ 1;
  int v80 = v12 ^ 1;
  int v81 = v14 ^ 1;
  int v20 = v92;
  sub_100505034((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  sub_10003B754(&qword_1007A2488);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10066C6F0;
  sub_10003B754(&qword_1007A2490);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v22;
  if (v90) {
    char v24 = 15;
  }
  else {
    char v24 = 1;
  }
  LODWORD(v77) = v20 != 2;
  *(_OWORD *)(v22 + 16) = xmmword_100670000;
  *(unsigned char *)(v22 + 32) = 0;
  *(unsigned char *)(v22 + 33) = v24;
  *(unsigned char *)(v22 + 34) = 2;
  if (v20 == 2) {
    char v25 = 15;
  }
  else {
    char v25 = 4;
  }
  *(unsigned char *)(v22 + 35) = v25;
  if (v19) {
    char v26 = 3;
  }
  else {
    char v26 = 15;
  }
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v23 + 36) = v26;
  uint64_t v93 = v23;
  sub_10003B754(&qword_1007A2498);
  sub_100037EA0(&qword_1007A24A0, &qword_1007A2498);
  Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  CGFloat.nuiUseDefault.unsafeMutableAddressor();
  unint64_t v28 = sub_100500F34();
  unint64_t v29 = sub_100500F88();
  unint64_t v30 = sub_100500FDC();
  unint64_t v85 = v29;
  unint64_t v86 = v28;
  unint64_t v84 = v30;
  uint64_t v31 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)();
  *(void *)(v27 + 16) = v21;
  uint64_t v90 = v27 + 16;
  *(void *)(v21 + 32) = v31;
  *(void *)(v21 + 40) = v32;
  *(void *)(v21 + 48) = v33;
  char v34 = v91 & 1;
  sub_1004FC764(5, v79 & 1, v27, v91 & 1, v77, v19 & 1);
  if (v83)
  {
    sub_1004FC764(7, v78 & 1, v27, v34, v20 != 2, v19 & 1);
    sub_1004FC764(8, v80 & 1, v27, v34, v20 != 2, v19 & 1);
    sub_1004FC764(9, v81 & 1, v27, v34, v20 != 2, v19 & 1);
    sub_1004FC764(10, v82 & 1, v27, v34, v20 != 2, v19 & 1);
    char v35 = 0;
    uint64_t v36 = v88;
  }
  else
  {
    char v37 = v20 != 2;
    char v38 = v19 & 1;
    unsigned int v83 = enum case for REMFeatureFlags.subtasksInSmartLists(_:);
    uint64_t v39 = v73;
    uint64_t v40 = *(void (**)(void))(v73 + 104);
    uint64_t v77 = v73 + 104;
    uint64_t v79 = (void (*)(char *, void, uint64_t))v40;
    long long v41 = v72;
    uint64_t v42 = v87;
    v40(v72);
    char v43 = REMFeatureFlags.isEnabled.getter();
    long long v44 = *(void (**)(char *, uint64_t))(v39 + 8);
    v44(v41, v42);
    sub_1004FC764(6, (v43 & 1) == 0, v27, v34, v37, v38);
    sub_1004FC764(7, v78 & 1, v27, v34, v37, v38);
    sub_1004FC764(8, v80 & 1, v27, v34, v37, v38);
    sub_1004FC764(9, v81 & 1, v27, v34, v37, v38);
    sub_1004FC764(10, v82 & 1, v27, v34, v37, v38);
    uint64_t v45 = v87;
    v79(v41, v83, v87);
    char v35 = REMFeatureFlags.isEnabled.getter();
    v44(v41, v45);
    uint64_t v36 = v88;
    char v19 = v89;
  }
  char v47 = v74;
  BOOL v46 = v75;
  char v48 = v92 != 2;
  char v49 = v35 & 1;
  char v50 = v91 & 1;
  sub_1004FC764(11, v49, v27, v91 & 1, v48, v19 & 1);
  sub_1004FC764(12, v47, v27, v50, v48, v19 & 1);
  sub_1004F8EB0();
  uint64_t v51 = (void **)v90;
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  if (!v46)
  {
    uint64_t v52 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)();
    uint64_t v54 = v53;
    uint64_t v56 = v55;
    swift_beginAccess();
    uint64_t v57 = *v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v57 = sub_1005700DC(0, v57[2] + 1, 1, v57);
    }
    unint64_t v59 = v57[2];
    unint64_t v58 = v57[3];
    if (v59 >= v58 >> 1) {
      uint64_t v57 = sub_1005700DC((void *)(v58 > 1), v59 + 1, 1, v57);
    }
    v57[2] = v59 + 1;
    uint64_t v60 = &v57[3 * v59];
    v60[4] = v52;
    v60[5] = v54;
    v60[6] = v56;
    *uint64_t v51 = v57;
    swift_endAccess();
  }
  if ((v76 & 1) == 0)
  {
    uint64_t v61 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)();
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    swift_beginAccess();
    long long v66 = *v51;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v66 = sub_1005700DC(0, v66[2] + 1, 1, v66);
    }
    unint64_t v68 = v66[2];
    unint64_t v67 = v66[3];
    if (v68 >= v67 >> 1) {
      long long v66 = sub_1005700DC((void *)(v67 > 1), v68 + 1, 1, v66);
    }
    v66[2] = v68 + 1;
    long long v69 = &v66[3 * v68];
    v69[4] = v61;
    v69[5] = v63;
    v69[6] = v65;
    *uint64_t v51 = v66;
    swift_endAccess();
  }
  if (*(void *)(v36 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
  {
    uint64_t v70 = swift_beginAccess();
    __chkstk_darwin(v70);
    *(&v71 - 2) = v36;
    *(&v71 - 1) = a1;
    swift_retain();
    swift_bridgeObjectRetain();
    TTRGridViewPredefinedContentPopulator.performUpdates(newGridSpecification:subviewUpdateHandler:)();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_1004FB6E4(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078ED00);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v21 - v6;
  __chkstk_darwin(v8);
  int v10 = (char *)&v21 - v9;
  if ((*(unsigned char *)(a1 + 16) & 1) == 0 && *(void *)(a1 + 8))
  {
    id v11 = sub_1004F9EA0();
    uint64_t v12 = *(unsigned char *)a1 & 1;
    int v13 = (objc_class *)type metadata accessor for TTRIOutlineDisclosureButton();
    v24.receiver = v11;
    v24.super_class = v13;
    unsigned int v14 = [super isSelected];
    v23.receiver = v11;
    v23.super_class = v13;
    [super setSelected:v12];
    v22.receiver = v11;
    v22.super_class = v13;
    if (v14 != objc_msgSendSuper2(&v22, "isSelected"))
    {
      v21.receiver = v11;
      v21.super_class = v13;
      char v15 = [super isSelected];
      sub_1000AEB70(v15);
    }

    id v16 = sub_1004F9EA0();
    UIButton.configuration.getter();
    uint64_t v17 = type metadata accessor for UIButton.Configuration();
    char v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48);
    if (v18(v10, 1, v17))
    {
      sub_10003B694((uint64_t)v10, (uint64_t)v4, &qword_10078ED00);
      UIButton.configuration.setter();

      sub_10003B6F8((uint64_t)v10, &qword_10078ED00);
    }
    else
    {
      TTRBoardReminderCellShowSubtasksConfiguration.showSubtasksButtonTitle.getter();
      UIButton.Configuration.title.setter();
      UIButton.configuration.setter();
    }
    id v19 = sub_1004F9EA0();
    UIButton.configuration.getter();
    if (v18(v7, 1, v17))
    {
      sub_10003B694((uint64_t)v7, (uint64_t)v4, &qword_10078ED00);
      UIButton.configuration.setter();

      sub_10003B6F8((uint64_t)v7, &qword_10078ED00);
    }
    else
    {
      id v20 = *(id *)(a1 + 24);
      UIButton.Configuration.baseForegroundColor.setter();
      UIButton.configuration.setter();
    }
  }
}

void sub_1004FB98C()
{
  uint64_t v1 = v0;
  [v1 setAxis:1];
  [v1 setDistribution:0];
  [v1 setAlignment:0];
  [v1 setLayoutMarginsRelativeArrangement:0];
  [v1 setPreservesSuperviewLayoutMargins:1];
  [v1 setDebugBoundingBoxesEnabled:0];
  TTRIMarginTransferringContainerStackView.marginTransferActionForArrangedSubview.setter();
  type metadata accessor for TTRNoAnimationContainerGridView();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView;
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = v2;

  uint64_t v5 = *(void **)&v1[v3];
  if (!v5)
  {
    __break(1u);
    goto LABEL_14;
  }
  [v5 setLayoutMarginsRelativeArrangement:1];
  uint64_t v6 = *(void **)&v1[v3];
  if (!v6)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  [v6 setHorizontalAlignment:0];
  uint64_t v7 = *(void **)&v1[v3];
  if (!v7)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  [v7 setVerticalAlignment:2];
  uint64_t v8 = *(void **)&v1[v3];
  if (!v8)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v9 = v8;
  sub_1004F8EB0();
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  ceil(_:toScale:)();
  [v9 setRowSpacing:];

  int v10 = *(void **)&v1[v3];
  if (!v10) {
    goto LABEL_17;
  }
  ceil(_:toScale:)();
  [v10 setColumnSpacing:];
  id v11 = *(void **)&v1[v3];
  if (!v11)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  [v11 setDebugBoundingBoxesEnabled:0];
  uint64_t v12 = *(void **)&v1[v3];
  if (!v12)
  {
LABEL_19:
    __break(1u);
    return;
  }
  sub_10003B754(&qword_1007A2578);
  swift_allocObject();
  id v13 = v12;
  uint64_t v14 = TTRGridViewPredefinedContentPopulator.init(gridView:)();

  *(void *)&v1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = v14;

  swift_release();
}

uint64_t sub_1004FBC04()
{
  type metadata accessor for TTRIOutlineDisclosureButton();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView();
    swift_dynamicCastClass();
  }

  return TTRIMarginTransferAction.init(edgesToReceiveMargins:redirectedTarget:)();
}

void sub_1004FBC78(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v32 = a5;
  uint64_t v9 = sub_10003B754(&qword_100794B10);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_1007A2548);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_10003B754(&qword_100794B50);
  uint64_t v15 = *(void *)(v33 - 8);
  double v16 = __chkstk_darwin(v33);
  char v18 = (uint64_t *)((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = [a1 arrangedSubviews:v16];
  if (!v19) {
    goto LABEL_3;
  }
  id v20 = v19;
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  unint64_t v21 = swift_bridgeObjectRetain();
  LOBYTE(v20) = sub_1000BA3F0(v21, a2);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0)
  {
LABEL_3:
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [a1 setArrangedSubviews:isa, v32];
  }
  sub_1004F8EB0();
  int v23 = *(unsigned __int8 *)(a4 + 2);
  uint64_t v24 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  char v25 = TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter();
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  double v27 = *((double *)&xmmword_10078EF60 + 1);
  double v26 = *(double *)&xmmword_10078EF60;
  double v28 = *(double *)&qword_10078EF70;
  if (v23)
  {
    double v28 = *(double *)&qword_10078EF70 + 1.0;
    double v27 = *((double *)&xmmword_10078EF60 + 1) + *((double *)&xmmword_10078EF60 + 1) + -10.0;
    double v26 = *(double *)&xmmword_10078EF60 + 1.0;
  }
  if ((v25 & 1) == 0) {
    double v28 = 0.0;
  }
  [a3 setDirectionalLayoutMargins:v26, v27, v28, *(double *)&qword_10078EF78, v32];
  sub_10003B694(a4 + *(int *)(v24 + 112), (uint64_t)v18, &qword_100794B50);
  sub_10003B694(v32, (uint64_t)v11, &qword_100794B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v11, 1, v24) == 1)
  {
    sub_10003B6F8((uint64_t)v11, &qword_100794B10);
    uint64_t v29 = 1;
  }
  else
  {
    sub_10003B694((uint64_t)&v11[*(int *)(v24 + 112)], (uint64_t)v14, &qword_100794B50);
    sub_100505034((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    uint64_t v29 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v14, v29, 1, v33);
  sub_1004FC0B8(v18);
  sub_10003B6F8((uint64_t)v14, &qword_1007A2548);
  sub_10003B6F8((uint64_t)v18, &qword_100794B50);
  id v30 = sub_1004F9E28();
  [v30 setHidden:TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter() & 1];

  id v31 = sub_1004F9EA0();
  [v31 setHidden:TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter() & 1];
}

void sub_1004FC0B8(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_1007A2550);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_1007A2558);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_1007A2560);
  __chkstk_darwin(v14);
  double v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_10078DE28);
  __chkstk_darwin(v17 - 8);
  __chkstk_darwin(v18);
  uint64_t v56 = (uint64_t)&v51 - v19;
  __chkstk_darwin(v20);
  uint64_t v57 = (uint64_t)&v51 - v22;
  uint64_t v23 = *a1;
  if (*a1)
  {
    uint64_t v51 = v21;
    uint64_t v52 = v10;
    uint64_t v54 = v8;
    uint64_t v55 = v7;
    uint64_t v24 = a1[1];
    uint64_t v53 = v2;
    uint64_t v25 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState;
    swift_beginAccess();
    double v26 = *(uint64_t (**)(void *, uint64_t))v25;
    v58[0] = v23;
    v58[1] = v24;
    swift_unknownObjectRetain_n();
    char v27 = v26(v58, v25 + 16);
    swift_unknownObjectRelease();
    if ((v27 & 1) == 0)
    {
      swift_unknownObjectRelease();
      *(void *)(v25 + 48) = v23;
      *(void *)(v25 + 56) = v24;
      *(void *)(v25 + 32) = 0;
      *(unsigned char *)(v25 + 40) = 1;
      swift_unknownObjectRetain();
    }
    sub_10003B754(&qword_100794B50);
    sub_10003B754(&qword_1007A2568);
    TTRBoardReminderInCellModuleState.receive(_:)();
    TTRBoardReminderInCellModuleState.consume()();
    swift_endAccess();
    uint64_t v28 = sub_10003B754(&qword_1007A2570);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v13, 1, v28) == 1)
    {
      sub_10003B6F8((uint64_t)v13, &qword_1007A2558);
      swift_unknownObjectRelease();
    }
    else
    {
      char v36 = v13[16];
      uint64_t v37 = (uint64_t)&v13[*(int *)(v28 + 64)];
      uint64_t v38 = (uint64_t)&v16[*(int *)(v14 + 64)];
      *(_OWORD *)double v16 = *(_OWORD *)v13;
      v16[16] = v36;
      sub_100028C3C(v37, v38, &qword_10078DE28);
      int v39 = v16[16];
      uint64_t v40 = v57;
      sub_100028C3C((uint64_t)&v16[*(int *)(v14 + 64)], v57, &qword_10078DE28);
      uint64_t v42 = v54;
      uint64_t v41 = v55;
      if (v39 == 1)
      {
        id v43 = sub_1004F9D10();
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v45 = *(void **)(Strong
                         + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack);
          *(void *)(Strong + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack) = v43;

          type metadata accessor for TTRIReminderCellAutoCompleteViewController();
          id v46 = v43;
          TTRAccessibilityReminderAutoCompleteAnnouncing.ttrAccessibilitySetUpAccessibilityStatusChangeObservationForAutoCompleteAnnouncements()();

          swift_unknownObjectRelease();
        }
        else
        {
        }
      }
      uint64_t v47 = v56;
      sub_10003B694(v40, v56, &qword_10078DE28);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v47, 1, v41) == 1)
      {
        sub_10003B6F8(v40, &qword_10078DE28);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v48 = v47;
      }
      else
      {
        uint64_t v49 = (uint64_t)v52;
        sub_100505094(v47, (uint64_t)v52, (uint64_t (*)(void))type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
        uint64_t v50 = v51;
        sub_1005050FC(v49, v51, (uint64_t (*)(void))type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v50, 0, 1, v41);
        sub_1002CF8F4(v50);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_100505034(v49, (uint64_t (*)(void))type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
        uint64_t v48 = v40;
      }
      sub_10003B6F8(v48, &qword_10078DE28);
    }
  }
  else
  {
    uint64_t v29 = sub_10003B754(&qword_100794B50);
    sub_10003B694((uint64_t)a1 + *(int *)(v29 + 28), (uint64_t)v6, &qword_1007A2550);
    uint64_t v30 = sub_10003B754(&qword_100794B68);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v6, 1, v30) != 1)
    {
      if (qword_100785658 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100018BF8(v31, (uint64_t)qword_1007A2348);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        char v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "TTRIBoardReminderCellContentView: missing autoComplete module", v34, 2u);
        swift_slowDealloc();
      }

      sub_100505034((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
    }
    id v35 = sub_1004F9D10();
    [v35 setHidden:1];
  }
}

uint64_t sub_1004FC764(uint64_t result, char a2, uint64_t a3, char a4, char a5, char a6)
{
  if (a2)
  {
    char v9 = result;
    uint64_t v10 = (void **)(a3 + 16);
    sub_10003B754(&qword_1007A2490);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_100670000;
    *(unsigned char *)(v11 + 32) = 0;
    if (a4) {
      char v12 = v9;
    }
    else {
      char v12 = 15;
    }
    *(unsigned char *)(v11 + 33) = v12;
    *(unsigned char *)(v11 + 34) = v9;
    if (a5) {
      char v13 = 4;
    }
    else {
      char v13 = 15;
    }
    *(unsigned char *)(v11 + 35) = v13;
    if (a6) {
      char v14 = 3;
    }
    else {
      char v14 = 15;
    }
    *(unsigned char *)(v11 + 36) = v14;
    sub_10003B754(&qword_1007A2498);
    sub_100037EA0(&qword_1007A24A0, &qword_1007A2498);
    Sequence.removingNils<A>()();
    swift_bridgeObjectRelease();
    CGFloat.nuiUseDefault.unsafeMutableAddressor();
    sub_100500F34();
    sub_100500F88();
    sub_100500FDC();
    uint64_t v15 = TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    swift_beginAccess();
    uint64_t v20 = *v10;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v10 = v20;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v20 = sub_1005700DC(0, v20[2] + 1, 1, v20);
      *uint64_t v10 = v20;
    }
    unint64_t v23 = v20[2];
    unint64_t v22 = v20[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t v20 = sub_1005700DC((void *)(v22 > 1), v23 + 1, 1, v20);
      *uint64_t v10 = v20;
    }
    _OWORD v20[2] = v23 + 1;
    uint64_t v24 = &v20[3 * v23];
    v24[4] = v15;
    v24[5] = v17;
    v24[6] = v19;
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1004FC964@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v86 = a4;
  v84[1] = a2;
  uint64_t v85 = a3;
  uint64_t v5 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  char v12 = (char *)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v84 - v14;
  switch(*(unsigned char *)(a1 + 16))
  {
    case 1:
      sub_1000368FC(0, &qword_100787808);
      uint64_t v18 = (void *)TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (!v18) {
        uint64_t v18 = sub_10050112C();
      }
      uint64_t v19 = v18;
      uint64_t v20 = v85;
      [v18 setFont:*(void *)(v85 + 8)];
      uint64_t v21 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
      [v19 setTintColor:*(void *)(v20 + *(int *)(v21 + 76))];
      if (!*(void *)(v20 + *(int *)(v21 + 88) + 8)) {
        goto LABEL_30;
      }
      goto LABEL_7;
    case 2:
      type metadata accessor for TTRIReminderTitleTextView();
      uint64_t v23 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v23) {
        id v24 = (id)v23;
      }
      else {
        id v24 = sub_1004F9020();
      }
      uint64_t v25 = v85;
      uint64_t v54 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
      sub_1004FD92C(v24, (uint64_t *)(v25 + *(int *)(v54 + 68)));
      goto LABEL_65;
    case 3:
      sub_1000368FC(0, &qword_1007A24C8);
      double v26 = (void *)TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (!v26) {
        double v26 = sub_1005012D8();
      }
      [v26 setPreferredSymbolConfiguration:*(void *)(v85 + 24)];
      goto LABEL_65;
    case 4:
      sub_1000368FC(0, &qword_100794990);
      uint64_t v27 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v27)
      {
        id v28 = (id)v27;
      }
      else
      {
        type metadata accessor for InfoButton();
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v55 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v56 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:v55 primaryAction:0.0];

        NSString v57 = String._bridgeToObjectiveC()();
        id v58 = [self systemImageNamed:v57];

        [v56 setImage:v58 forState:0];
        id v28 = v56;
        TTRAccesibility.RemindersList.Label.EditDetails.unsafeMutableAddressor();
        swift_bridgeObjectRetain();
        NSString v59 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v28 setAccessibilityLabel:v59];

        LODWORD(v60) = 1148846080;
        [v28 setLayoutSize:NUIContainerViewSizeUseDefault[0] withContentPriority:NUIContainerViewSizeUseDefault[1] v60];
        [v28 setCustomAlignmentRectInsets:6.0, 0.0, 6.0, 0.0];
      }
      uint64_t v61 = *(void **)(v85 + 232);
      if (v61)
      {
        id v62 = *(id *)(v85 + 232);
      }
      else
      {
        id v62 = [self tintColor];
        uint64_t v61 = 0;
      }
      id v78 = v61;
      [v28 setTintColor:v62];

      goto LABEL_65;
    case 5:
      sub_1000368FC(0, &qword_100787808);
      uint64_t v29 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (!v29) {
        uint64_t v29 = (uint64_t)sub_100501498();
      }
      uint64_t v30 = (void *)v29;
      uint64_t v31 = v85;
      type metadata accessor for TTRIBoardReminderCellContentConfiguration();
      goto LABEL_21;
    case 6:
      sub_1000368FC(0, &qword_100787808);
      uint64_t v32 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (!v32) {
        uint64_t v32 = (uint64_t)sub_100501498();
      }
      uint64_t v30 = (void *)v32;
      uint64_t v31 = v85;
LABEL_21:
      swift_bridgeObjectRetain();
      NSString v51 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 setText:v51];

      [v30 setFont:*(void *)(v31 + 16)];
      goto LABEL_65;
    case 7:
      sub_1000368FC(0, &qword_100787808);
      os_log_type_t v33 = (void *)TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (!v33) {
        os_log_type_t v33 = sub_100501634();
      }
      [v33 setAttributedText:*(void *)(v85 + *(int *)(type metadata accessor for TTRIBoardReminderCellContentConfiguration() + 96))];
      goto LABEL_65;
    case 8:
      type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
      uint64_t v34 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v34) {
        id v35 = (id)v34;
      }
      else {
        id v35 = sub_1004F93C8();
      }
      uint64_t v36 = v85;
      uint64_t v63 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
      sub_1004FDFC0(v35, v36 + *(int *)(v63 + 72));
      goto LABEL_65;
    case 9:
      sub_1000368FC(0, &qword_100787808);
      uint64_t v37 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (!v37) {
        uint64_t v37 = (uint64_t)sub_100501720();
      }
      uint64_t v19 = (void *)v37;
      uint64_t v38 = v85;
      if (*(void *)(v38 + *(int *)(type metadata accessor for TTRIBoardReminderCellContentConfiguration() + 80) + 8)) {
LABEL_7:
      }
        NSString v22 = String._bridgeToObjectiveC()();
      else {
LABEL_30:
      }
        NSString v22 = 0;
      [v19 setText:v22];

      goto LABEL_65;
    case 0xA:
      int v39 = (objc_class *)type metadata accessor for TTRILocationIndicator();
      uint64_t v40 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v40)
      {
        uint64_t v41 = (char *)v40;
        goto LABEL_69;
      }
      uint64_t v41 = (char *)[objc_allocWithZone(v39) init];
      id v64 = [self secondaryLabelColor];
      uint64_t v65 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor;
      long long v66 = *(void **)&v41[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor];
      *(void *)&v41[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor] = v64;
      id v67 = v64;
      unint64_t v68 = v67;
      if (v64)
      {
        if (v66)
        {
          sub_1000368FC(0, (unint64_t *)&qword_10078E640);
          id v69 = v66;
          id v70 = v68;
          char v71 = static NSObject.== infix(_:_:)();

          if (v71)
          {

            goto LABEL_69;
          }
        }
        goto LABEL_68;
      }
      if (v66)
      {
LABEL_68:
        id v80 = sub_1006134FC();
        id v81 = *(id *)&v41[v65];
        [v80 setTintColor:v81];

        id v82 = sub_100613688();
        id v83 = *(id *)&v41[v65];
        [v82 setTextColor:v83];

        goto LABEL_69;
      }

LABEL_69:
      sub_100501934((uint64_t)v41, *(void **)(v85 + 80), *(void **)(v85 + 88));
      sub_100500F34();
      sub_100500F88();
      sub_100500FDC();
      long long v87 = 0u;
      long long v88 = 0u;
      return TTRGridViewPredefinedContentPopulator.SubviewUpdateResult.init(view:userInfo:horizontalAlignment:verticalAlignment:)();
    case 0xB:
      sub_1000368FC(0, &qword_100794990);
      uint64_t v42 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v42)
      {
        id v43 = (void *)v42;
      }
      else
      {
        static UIButton.Configuration.borderless()();
        UIButton.Configuration.contentInsets.setter();
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v5);
        UIButton.Configuration.titleAlignment.setter();
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        long long v72 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
        id v73 = v72;
        id v43 = (void *)UIButton.init(configuration:primaryAction:)();
        [v43 setContentHorizontalAlignment:4];

        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      }
      sub_100501A28(v43, v85);
      goto LABEL_65;
    case 0xC:
      sub_1000368FC(0, &qword_100794990);
      uint64_t v44 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v44)
      {
        uint64_t v45 = (void *)v44;
      }
      else
      {
        static UIButton.Configuration.plain()();
        UIButton.Configuration.title.setter();
        (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v5);
        UIButton.Configuration.titleAlignment.setter();
        UIButton.Configuration.contentInsets.setter();
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        uint64_t v45 = (void *)UIButton.init(configuration:primaryAction:)();
        [v45 setContentHorizontalAlignment:4];
        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
      }
      sub_100501EEC((uint64_t)v45, v85);
      goto LABEL_65;
    case 0xD:
      id v46 = (objc_class *)type metadata accessor for TTRIRemindersListLargeImageAttachmentsView();
      uint64_t v47 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v47)
      {
        uint64_t v48 = (char *)v47;
      }
      else
      {
        uint64_t v48 = [(char *)objc_allocWithZone(v46) initWithFrame:0.0, 0.0, 0.0, 0.0];
        BOOL v74 = &v48[direct field offset for TTRIRemindersListLargeImageAttachmentsView.delegate];
        swift_beginAccess();
        *((void *)v74 + 1) = &off_10074E7E0;
        swift_unknownObjectWeakAssign();
        double v75 = NUIContainerViewSizeUseDefault[0];
        double v76 = NUIContainerViewSizeUseDefault[1];
        type metadata accessor for UILayoutPriority(0);
        int v89 = 1077936128;
        int v90 = 1148846080;
        sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
        static _UIKitNumericRawRepresentable.- infix(_:_:)();
        LODWORD(v77) = v87;
        [v48 setLayoutSize:v75 withContentPriority:v76, v77];
        [v48 setClipsToBounds:1];
        TTRIRemindersListLargeImageAttachmentsView.cornerRadius.setter();
      }
      sub_100502244((uint64_t)v48, *(void *)(v85 + 256));
      goto LABEL_65;
    case 0xE:
      sub_1000368FC(0, &qword_1007A24C0);
      uint64_t v49 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v49) {
        id v50 = (id)v49;
      }
      else {
        id v50 = sub_1004F9880();
      }
      sub_1004FE618(v50, v85);
      goto LABEL_65;
    default:
      type metadata accessor for TTRIReminderCompletionButton();
      uint64_t v16 = TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
      if (v16)
      {
        id v17 = (id)v16;
      }
      else
      {
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v52 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        id v17 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:v52 primaryAction:0.0];

        TTRIReminderCompletionButton.icon.setter();
        [v17 setCustomAlignmentRectInsets:5.0, 0.0, 5.0, 0.0];
        LODWORD(v53) = 1148846080;
        [v17 setLayoutSize:NUIContainerViewSizeUseDefault[0] withContentPriority:NUIContainerViewSizeUseDefault[1] v53];
      }
      sub_100501820(v17, *(unsigned char *)(v85 + 32), *(void **)(v85 + 40), *(unsigned char *)(v85 + 48), *(void **)(v85 + 56));
LABEL_65:
      sub_100500F34();
      sub_100500F88();
      sub_100500FDC();
      long long v87 = 0u;
      long long v88 = 0u;
      return TTRGridViewPredefinedContentPopulator.SubviewUpdateResult.init(view:userInfo:horizontalAlignment:verticalAlignment:)();
  }
}

void sub_1004FD92C(void *a1, uint64_t *a2)
{
  uint64_t v5 = sub_10003B754(&qword_100794BA8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRReminderCellTitleViewModel();
  uint64_t v57 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_1007A24D0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_1007A24D8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_1007A24E0);
  __chkstk_darwin(v17 - 8);
  __chkstk_darwin(v18);
  uint64_t v55 = (uint64_t)&v51 - v19;
  __chkstk_darwin(v20);
  uint64_t v56 = (uint64_t)&v51 - v22;
  uint64_t v23 = *a2;
  if (*a2)
  {
    uint64_t v51 = v21;
    uint64_t v52 = a1;
    uint64_t v53 = v8;
    uint64_t v54 = v10;
    uint64_t v24 = a2[1];
    uint64_t v25 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState;
    swift_beginAccess();
    double v26 = *(uint64_t (**)(void *, uint64_t))v25;
    v58[0] = v23;
    v58[1] = v24;
    swift_unknownObjectRetain_n();
    char v27 = v26(v58, v25 + 16);
    swift_unknownObjectRelease();
    if ((v27 & 1) == 0)
    {
      swift_unknownObjectRelease();
      *(void *)(v25 + 48) = v23;
      *(void *)(v25 + 56) = v24;
      *(void *)(v25 + 32) = 0;
      *(unsigned char *)(v25 + 40) = 1;
      swift_unknownObjectRetain();
    }
    sub_10003B754(&qword_100794B60);
    sub_10003B754(&qword_1007A24E8);
    TTRBoardReminderInCellModuleState.receive(_:)();
    TTRBoardReminderInCellModuleState.consume()();
    swift_endAccess();
    uint64_t v28 = sub_10003B754(&qword_1007A24F0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v13, 1, v28) == 1)
    {
      sub_10003B6F8((uint64_t)v13, &qword_1007A24D0);
      swift_unknownObjectRelease();
    }
    else
    {
      char v36 = v13[16];
      uint64_t v37 = (uint64_t)&v13[*(int *)(v28 + 64)];
      uint64_t v38 = (uint64_t)&v16[*(int *)(v14 + 64)];
      *(_OWORD *)uint64_t v16 = *(_OWORD *)v13;
      v16[16] = v36;
      sub_100028C3C(v37, v38, &qword_1007A24E0);
      uint64_t v39 = *((void *)v16 + 1);
      int v40 = v16[16];
      uint64_t v41 = v56;
      sub_100028C3C((uint64_t)&v16[*(int *)(v14 + 64)], v56, &qword_1007A24E0);
      if (v40 == 1)
      {
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t))(v39 + 48))(v52, ObjectType, v39);
      }
      uint64_t v43 = v55;
      sub_10003B694(v41, v55, &qword_1007A24E0);
      uint64_t v44 = v57;
      uint64_t v45 = v53;
      int v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v43, 1, v53);
      uint64_t v47 = (uint64_t)v54;
      if (v46 == 1)
      {
        sub_10003B6F8(v41, &qword_1007A24E0);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        uint64_t v48 = v43;
      }
      else
      {
        sub_100505094(v43, (uint64_t)v54, (uint64_t (*)(void))&type metadata accessor for TTRReminderCellTitleViewModel);
        uint64_t v49 = swift_getObjectType();
        uint64_t v50 = v51;
        sub_1005050FC(v47, v51, (uint64_t (*)(void))&type metadata accessor for TTRReminderCellTitleViewModel);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v44 + 56))(v50, 0, 1, v45);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 + 8) + 16))(v50, v49);
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        sub_100505034(v47, (uint64_t (*)(void))&type metadata accessor for TTRReminderCellTitleViewModel);
        uint64_t v48 = v41;
      }
      sub_10003B6F8(v48, &qword_1007A24E0);
    }
  }
  else
  {
    uint64_t v29 = sub_10003B754(&qword_100794B60);
    sub_10003B694((uint64_t)a2 + *(int *)(v29 + 28), (uint64_t)v7, &qword_100794BA8);
    uint64_t v30 = sub_10003B754(&qword_100794BB0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v7, 1, v30) != 1)
    {
      if (qword_100785658 != -1) {
        swift_once();
      }
      uint64_t v31 = type metadata accessor for Logger();
      sub_100018BF8(v31, (uint64_t)qword_1007A2348);
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v32, v33, "TTRIBoardReminderCellContentView: missing title editing module", v34, 2u);
        swift_slowDealloc();
      }

      sub_100505034((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRReminderCellTitleViewModel);
    }
    NSString v35 = String._bridgeToObjectiveC()();
    [a1 setText:v35];
  }
}

void sub_1004FDFC0(void *a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRIReminderCellNotesViewModel();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_1007A24F8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_1007A2500);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_1007A2508);
  __chkstk_darwin(v15 - 8);
  __chkstk_darwin(v16);
  __chkstk_darwin(v17);
  if (*(unsigned char *)a2 == 1)
  {
    sub_10003B754(&qword_100794B58);
    swift_beginAccess();
    sub_10003B754(&qword_1007A2510);
    TTRBoardReminderInCellModuleState.receive(_:)();
    swift_endAccess();
  }
  else
  {
    uint64_t v21 = *(void **)(a2 + 8);
    if (v21)
    {
      uint64_t v51 = v20;
      uint64_t v52 = v6;
      uint64_t v49 = v19;
      uint64_t v50 = a1;
      uint64_t v54 = (uint64_t)&v48 - v18;
      uint64_t v55 = v5;
      uint64_t v53 = v8;
      uint64_t v22 = *(void *)(a2 + 16);
      uint64_t v23 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState;
      swift_beginAccess();
      uint64_t v24 = *(uint64_t (**)(void *, uint64_t))v23;
      v57[0] = v21;
      v57[1] = v22;
      swift_unknownObjectRetain_n();
      char v25 = v24(v57, v23 + 16);
      NSString v56 = v21;
      swift_unknownObjectRelease();
      if ((v25 & 1) == 0)
      {
        swift_unknownObjectRelease();
        *(void *)(v23 + 48) = v56;
        *(void *)(v23 + 56) = v22;
        *(void *)(v23 + 32) = 0;
        *(unsigned char *)(v23 + 40) = 1;
        swift_unknownObjectRetain();
      }
      sub_10003B754(&qword_100794B58);
      sub_10003B754(&qword_1007A2510);
      TTRBoardReminderInCellModuleState.receive(_:)();
      TTRBoardReminderInCellModuleState.consume()();
      swift_endAccess();
      uint64_t v26 = sub_10003B754(&qword_1007A2518);
      int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v11, 1, v26);
      uint64_t v28 = v55;
      if (v27 == 1)
      {
        sub_10003B6F8((uint64_t)v11, &qword_1007A24F8);
        swift_unknownObjectRelease();
      }
      else
      {
        char v34 = v11[16];
        uint64_t v35 = (uint64_t)&v11[*(int *)(v26 + 64)];
        uint64_t v36 = (uint64_t)&v14[*(int *)(v12 + 64)];
        *(_OWORD *)uint64_t v14 = *(_OWORD *)v11;
        v14[16] = v34;
        sub_100028C3C(v35, v36, &qword_1007A2508);
        uint64_t v37 = *((void *)v14 + 1);
        int v38 = v14[16];
        sub_100028C3C((uint64_t)&v14[*(int *)(v12 + 64)], v54, &qword_1007A2508);
        if (v38 == 1)
        {
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(void *, uint64_t, uint64_t))(v37 + 64))(v50, ObjectType, v37);
        }
        uint64_t v40 = v54;
        uint64_t v41 = v51;
        sub_10003B694(v54, v51, &qword_1007A2508);
        uint64_t v42 = v52;
        int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v41, 1, v28);
        uint64_t v44 = (uint64_t)v53;
        if (v43 == 1)
        {
          sub_10003B6F8(v40, &qword_1007A2508);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          uint64_t v45 = v41;
        }
        else
        {
          sub_100505094(v41, (uint64_t)v53, (uint64_t (*)(void))&type metadata accessor for TTRIReminderCellNotesViewModel);
          uint64_t v46 = swift_getObjectType();
          uint64_t v47 = v49;
          sub_1005050FC(v44, v49, (uint64_t (*)(void))&type metadata accessor for TTRIReminderCellNotesViewModel);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v47, 0, 1, v28);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v47, v46, v37);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          sub_100505034(v44, (uint64_t (*)(void))&type metadata accessor for TTRIReminderCellNotesViewModel);
          uint64_t v45 = v40;
        }
        sub_10003B6F8(v45, &qword_1007A2508);
      }
    }
    else
    {
      if (qword_100785658 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_100018BF8(v29, (uint64_t)qword_1007A2348);
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v32 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "TTRIBoardReminderCellContentView: missing notes editing module", v32, 2u);
        swift_slowDealloc();
      }

      NSString v56 = String._bridgeToObjectiveC()();
      [a1 setText:v56];
      os_log_type_t v33 = v56;
    }
  }
}

void sub_1004FE618(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1004FFA50(a2, v2);
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView);
  *(void *)(v3 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView) = v6;
  uint64_t v8 = v6;

  sub_10003B754((uint64_t *)&unk_100793B30);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100671350;
  *(void *)(v9 + 32) = v6;
  uint64_t v10 = v8;
  *(void *)(v9 + 40) = sub_1004F9C40();
  *(void *)(v9 + 48) = sub_1004F9A14();
  specialized Array._endMutation()();
  sub_10003B754((uint64_t *)&unk_10079BB00);
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  sub_100037EA0(&qword_10079BB10, (uint64_t *)&unk_10079BB00);
  uint64_t v11 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  id v12 = [a1 arrangedSubviews];
  if (!v12) {
    goto LABEL_4;
  }
  uint64_t v13 = v12;
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  unint64_t v14 = swift_bridgeObjectRetain();
  LOBYTE(v13) = sub_1000BA3F0(v14, v11);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v13)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_4:
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a1 setArrangedSubviews:isa];
  }
  sub_1004F8EB0();
  if (qword_1007852D0 != -1) {
    swift_once();
  }
  ceil(_:toScale:)();
  [a1 setSpacing];
  uint64_t v16 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  char v17 = TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter();
  uint64_t v18 = sub_1004F9A14();
  uint64_t v19 = v18;
  if (v17)
  {
    [(objc_class *)v18 setHidden:1];
  }
  else
  {
    [(objc_class *)v18 setHidden:0];

    uint64_t v19 = sub_1004F9A14();
    [(objc_class *)v19 setBackgroundImage:*(void *)(a2 + *(int *)(v16 + 108)) forState:0];
  }

  char v20 = TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter();
  id v21 = sub_1004F9C40();
  id v22 = v21;
  if (v20)
  {
    [v21 setHidden:1];
  }
  else
  {
    [v21 setHidden:0];

    id v22 = sub_1004F9C40();
    id v23 = *(id *)(a2 + *(int *)(v16 + 104));
    TTRIRemindersListCellAssigneeView.contact.setter();
  }
}

id sub_1004FEA80(double a1, double a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = 0;
  uint64_t v11 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler;
  id v12 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler());
  uint64_t v13 = v4;
  *(void *)&v5[v11] = [v12 init];
  unint64_t v14 = &v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState];
  *((_OWORD *)v14 + 1) = 0u;
  *((void *)v14 + 4) = 0;
  v14[40] = 1;
  *((_OWORD *)v14 + 3) = 0u;
  uint64_t v15 = &v14[*(int *)(sub_10003B754(&qword_1007A24E8) + 48)];
  uint64_t v16 = sub_10003B754(&qword_1007A2580);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)unint64_t v14 = sub_1004F8E80;
  *((void *)v14 + 1) = 0;
  char v17 = &v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState];
  *((void *)v17 + 4) = 0;
  *((_OWORD *)v17 + 1) = 0u;
  unsigned char v17[40] = 1;
  *((_OWORD *)v17 + 3) = 0u;
  uint64_t v18 = &v17[*(int *)(sub_10003B754(&qword_1007A2510) + 48)];
  uint64_t v19 = sub_10003B754(&qword_1007A2588);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  *(void *)char v17 = sub_1004F8E80;
  *((void *)v17 + 1) = 0;
  char v20 = &v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState];
  *((void *)v20 + 4) = 0;
  *((_OWORD *)v20 + 1) = 0u;
  v20[40] = 1;
  *((_OWORD *)v20 + 3) = 0u;
  id v21 = &v20[*(int *)(sub_10003B754(&qword_1007A2568) + 48)];
  uint64_t v22 = sub_10003B754(&qword_1007A2590);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(void *)char v20 = sub_1004F8E80;
  *((void *)v20 + 1) = 0;
  id v23 = &v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  *(void *)id v23 = 0;
  v23[8] = 1;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton] = 0;
  uint64_t v24 = &v13[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  uint64_t v25 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);

  v27.receiver = v13;
  v27.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1004FEDD8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = 0;
  uint64_t v5 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler;
  id v6 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState];
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  *((_OWORD *)v8 + 3) = 0u;
  uint64_t v9 = &v8[*(int *)(sub_10003B754(&qword_1007A24E8) + 48)];
  uint64_t v10 = sub_10003B754(&qword_1007A2580);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)uint64_t v8 = sub_1004F8E80;
  *((void *)v8 + 1) = 0;
  uint64_t v11 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState];
  *((void *)v11 + 4) = 0;
  *((_OWORD *)v11 + 1) = 0u;
  v11[40] = 1;
  *((_OWORD *)v11 + 3) = 0u;
  id v12 = &v11[*(int *)(sub_10003B754(&qword_1007A2510) + 48)];
  uint64_t v13 = sub_10003B754(&qword_1007A2588);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)uint64_t v11 = sub_1004F8E80;
  *((void *)v11 + 1) = 0;
  unint64_t v14 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState];
  *((void *)v14 + 4) = 0;
  *((_OWORD *)v14 + 1) = 0u;
  v14[40] = 1;
  *((_OWORD *)v14 + 3) = 0u;
  uint64_t v15 = &v14[*(int *)(sub_10003B754(&qword_1007A2568) + 48)];
  uint64_t v16 = sub_10003B754(&qword_1007A2590);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)unint64_t v14 = sub_1004F8E80;
  *((void *)v14 + 1) = 0;
  char v17 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  *(void *)char v17 = 0;
  v17[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton] = 0;
  uint64_t v18 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  uint64_t v19 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);

  if (a1)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    v20.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v20.super.Class isa = 0;
  }
  v23.receiver = v7;
  v23.super_class = ObjectType;
  id v21 = [super initWithArrangedSubviews:v20.super.isa];

  return v21;
}

id sub_1004FF184(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentView] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator] = 0;
  uint64_t v5 = OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_unsupportedTextDropHandler;
  id v6 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState];
  *((_OWORD *)v8 + 1) = 0u;
  *((void *)v8 + 4) = 0;
  v8[40] = 1;
  *((_OWORD *)v8 + 3) = 0u;
  uint64_t v9 = &v8[*(int *)(sub_10003B754(&qword_1007A24E8) + 48)];
  uint64_t v10 = sub_10003B754(&qword_1007A2580);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)uint64_t v8 = sub_1004F8E80;
  *((void *)v8 + 1) = 0;
  uint64_t v11 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState];
  *((void *)v11 + 4) = 0;
  *((_OWORD *)v11 + 1) = 0u;
  v11[40] = 1;
  *((_OWORD *)v11 + 3) = 0u;
  id v12 = &v11[*(int *)(sub_10003B754(&qword_1007A2510) + 48)];
  uint64_t v13 = sub_10003B754(&qword_1007A2588);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  *(void *)uint64_t v11 = sub_1004F8E80;
  *((void *)v11 + 1) = 0;
  unint64_t v14 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState];
  *((void *)v14 + 4) = 0;
  *((_OWORD *)v14 + 1) = 0u;
  v14[40] = 1;
  *((_OWORD *)v14 + 3) = 0u;
  uint64_t v15 = &v14[*(int *)(sub_10003B754(&qword_1007A2568) + 48)];
  uint64_t v16 = sub_10003B754(&qword_1007A2590);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  *(void *)unint64_t v14 = sub_1004F8E80;
  *((void *)v14 + 1) = 0;
  char v17 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
  *(void *)char v17 = 0;
  v17[8] = 1;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_buttonShapesSubscription] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton] = 0;
  uint64_t v18 = &v7[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration];
  uint64_t v19 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);

  v22.receiver = v7;
  v22.super_class = ObjectType;
  [super initWithCoder:a1];

  return v20;
}

uint64_t sub_1004FF4C4()
{
  swift_release();
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_titleModuleState, &qword_1007A24E8);
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_notesModuleState, &qword_1007A2510);
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_autoCompleteModuleState, &qword_1007A2568);
  swift_release();

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___appLinkIndicator));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___assigneeIndicator));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___autoCompleteView));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksSeparator));
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___showSubtasksButton));
  return sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration, &qword_100794B10);
}

uint64_t sub_1004FF6F8()
{
  return type metadata accessor for TTRIBoardReminderCellContentView();
}

uint64_t type metadata accessor for TTRIBoardReminderCellContentView()
{
  uint64_t result = qword_1007A2400;
  if (!qword_1007A2400) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1004FF74C()
{
  sub_1004FF92C(319, &qword_1007A2410, &qword_1007A2418, (void (*)(uint64_t))&type metadata accessor for TTRReminderCellTitleViewModel);
  if (v0 <= 0x3F)
  {
    sub_1004FF92C(319, &qword_1007A2420, &qword_1007A2428, (void (*)(uint64_t))&type metadata accessor for TTRIReminderCellNotesViewModel);
    if (v1 <= 0x3F)
    {
      sub_1004FF92C(319, &qword_1007A2430, &qword_1007A2438, (void (*)(uint64_t))type metadata accessor for TTRIReminderCellAutoCompleteViewModel);
      if (v2 <= 0x3F)
      {
        sub_1004FF99C();
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_1004FF92C(uint64_t a1, unint64_t *a2, uint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_100039710(a3);
    a4(255);
    unint64_t v6 = type metadata accessor for TTRBoardReminderInCellModuleState();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1004FF99C()
{
  if (!qword_1007A2440)
  {
    type metadata accessor for TTRIBoardReminderCellContentConfiguration();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007A2440);
    }
  }
}

uint64_t sub_1004FF9F4()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

void *sub_1004FFA50(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v55 = &v49[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10003B754(&qword_1007A2538);
  __chkstk_darwin(v6);
  uint64_t v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v53 = &v49[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v13 = &v49[-v12];
  __chkstk_darwin(v14);
  uint64_t v16 = &v49[-v15];
  uint64_t v54 = type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment();
  uint64_t v17 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  NSString v56 = &v49[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  id v20 = 0;
  if (TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter()) {
    return v20;
  }
  uint64_t v21 = *(void *)(a1 + *(int *)(v19 + 100));
  if (!*(void *)(v21 + 16)) {
    return 0;
  }
  uint64_t v22 = v21 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  objc_super v23 = v56;
  sub_1005050FC(v22, (uint64_t)v56, (uint64_t (*)(void))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
  uint64_t v24 = *(void **)(v57 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_visibleLinkView);
  if (!v24)
  {
    uint64_t v28 = v54;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v55, v23, v3);
LABEL_18:
    uint64_t v40 = *(void **)&v23[*(int *)(v28 + 20)];
    id v41 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListReminderCellLinkView());
    id v42 = v40;
    id v20 = (id)TTRIRemindersListReminderCellLinkView.init(url:attachmentID:)();
    [v20 _setDisableAnimations:1];
    [v20 _setPreferredSizeClass:2];
    id v43 = [objc_allocWithZone((Class)LPLinkRendererSizeClassParameters) init];
    [v43 setOnlyShowIcon:1];
    [v20 _setSizeClassParameters:v43];
    sub_1004F8EB0();
    type metadata accessor for UILayoutPriority(0);
    int v58 = 0x40000000;
    int v59 = 1148846080;
    sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v44) = v60;
    [v20 setLayoutSize:24.0 withContentPriority:v44];

    goto LABEL_19;
  }
  id v20 = v24;
  id v25 = [v20 URL];
  if (v25)
  {
    uint64_t v26 = v25;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    objc_super v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v27(v16, 0, 1, v3);
  }
  else
  {
    objc_super v27 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v27(v16, 1, 1, v3);
  }
  uint64_t v29 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16);
  unint64_t v51 = (v4 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  uint64_t v52 = v29;
  v29(v13, v23, v3);
  v27(v13, 0, 1, v3);
  uint64_t v30 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_10003B694((uint64_t)v16, (uint64_t)v8, (uint64_t *)&unk_100788DF0);
  sub_10003B694((uint64_t)v13, v30, (uint64_t *)&unk_100788DF0);
  os_log_type_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v31((uint64_t)v8, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DF0);
    sub_10003B6F8((uint64_t)v16, (uint64_t *)&unk_100788DF0);
    int v32 = v31(v30, 1, v3);
    uint64_t v28 = v54;
    if (v32 == 1)
    {
      sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DF0);
      objc_super v23 = v56;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  os_log_type_t v33 = v53;
  sub_10003B694((uint64_t)v8, (uint64_t)v53, (uint64_t *)&unk_100788DF0);
  if (v31(v30, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DF0);
    sub_10003B6F8((uint64_t)v16, (uint64_t *)&unk_100788DF0);
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v33, v3);
    uint64_t v28 = v54;
LABEL_14:
    sub_10003B6F8((uint64_t)v8, &qword_1007A2538);
    objc_super v23 = v56;
LABEL_17:

    v52(v55, v23, v3);
    goto LABEL_18;
  }
  char v34 = v55;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 32))(v55, v30, v3);
  sub_1005025AC(&qword_1007A2540, (void (*)(uint64_t))&type metadata accessor for URL);
  int v50 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v35 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
  v35(v34, v3);
  sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DF0);
  sub_10003B6F8((uint64_t)v16, (uint64_t *)&unk_100788DF0);
  v35(v33, v3);
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DF0);
  objc_super v23 = v56;
  uint64_t v28 = v54;
  if ((v50 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_16:
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  uint64_t v36 = *(void **)&v23[*(int *)(v28 + 20)];
  id v37 = *(id *)((char *)v20 + direct field offset for TTRIRemindersListReminderCellLinkView.attachmentID);
  id v38 = v36;
  char v39 = static NSObject.== infix(_:_:)();

  if ((v39 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_19:
  uint64_t v45 = *(void **)&v23[*(int *)(v28 + 24)];
  if (v45)
  {
    uint64_t v46 = *(void (**)(void))((swift_isaMask & *v20) + 0x68);
    id v47 = v45;
    v46();
  }
  sub_100505034((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
  return v20;
}

uint64_t sub_1005001DC(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_100794B10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v22 - v7 + 16;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v22 - v10 + 16;
  uint64_t v12 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (unsigned __int8 *)((char *)v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  sub_1000145EC(a1, (uint64_t)v22);
  sub_10003B754(&qword_10078DDD8);
  int v16 = swift_dynamicCast();
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  if (v16)
  {
    v17(v11, 0, 1, v12);
    sub_100505094((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    uint64_t v18 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
    swift_beginAccess();
    sub_10003B694(v18, (uint64_t)v8, &qword_100794B10);
    sub_1005050FC((uint64_t)v15, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    v17(v5, 0, 1, v12);
    swift_beginAccess();
    sub_100500E44((uint64_t)v5, v18);
    swift_endAccess();
    sub_1004FA9D8((uint64_t)v15, (uint64_t)v8);
    sub_1004FAD30((uint64_t)v15);
    [v1 setUserInteractionEnabled:*v15];
    long long v19 = *((_OWORD *)v15 + 7);
    v22[0] = *((_OWORD *)v15 + 6);
    v22[1] = v19;
    void v22[2] = *((_OWORD *)v15 + 8);
    sub_1004FB6E4((uint64_t)v22);
    sub_10003B6F8((uint64_t)v8, &qword_100794B10);
    sub_100038CD8(a1);
    return sub_100505034((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  else
  {
    v17(v11, 1, 1, v12);
    sub_100038CD8(a1);
    return sub_10003B6F8((uint64_t)v11, &qword_100794B10);
  }
}

void (*sub_1005004D4(uint64_t **a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = (uint64_t *)malloc(0x78uLL);
  *a1 = v3;
  v3[13] = v1;
  uint64_t v4 = sub_10003B754(&qword_100794B10);
  uint64_t v5 = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  v3[14] = (uint64_t)v5;
  uint64_t v6 = v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess();
  sub_10003B694(v6, (uint64_t)v5, &qword_100794B10);
  uint64_t v7 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t result = (void (*)(uint64_t *, char))(*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    v3[3] = v7;
    v3[4] = sub_1005025AC(&qword_100794B28, (void (*)(uint64_t))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    uint64_t v9 = sub_1000394A8(v3);
    sub_100505094((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    return sub_100500648;
  }
  return result;
}

void sub_100500648(uint64_t *a1, char a2)
{
  unint64_t v2 = (void *)*a1;
  uint64_t v3 = *(void **)(*a1 + 112);
  if (a2)
  {
    sub_1000145EC(*a1, (uint64_t)v2 + 40);
    sub_1005001DC((uint64_t)v2 + 40);
    sub_100038CD8((uint64_t)v2);
  }
  else
  {
    sub_1005001DC(*a1);
  }
  free(v3);

  free(v2);
}

uint64_t sub_1005006C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_10003B754(&qword_100794B10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess();
  sub_10003B694(v6, (uint64_t)v5, &qword_100794B10);
  uint64_t v7 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    a1[3] = v7;
    a1[4] = sub_1005025AC(&qword_100794B28, (void (*)(uint64_t))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
    uint64_t v9 = sub_1000394A8(a1);
    return sub_100505094((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TTRIBoardReminderCellContentConfiguration);
  }
  return result;
}

void (*sub_100500824(uint64_t ***a1))(void *a1)
{
  unint64_t v2 = (uint64_t **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t *)sub_1005004D4(v2);
  return sub_1001157EC;
}

uint64_t sub_10050087C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = swift_getObjectType();

  return UIContentView.supports(_:)(a1, ObjectType, a3);
}

uint64_t sub_1005008CC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_appliedConfiguration;
  swift_beginAccess();
  uint64_t v6 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, void *))(v5 + 264);
    if (v8)
    {
      swift_retain();
      v8(a2, a1, &protocol witness table for TTRIRemindersListLargeImageAttachmentsView);
      return sub_1000499C4((uint64_t)v8);
    }
  }
  return result;
}

void sub_1005009A8(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  id v6 = [a1 selectedTextRange];
  uint64_t v7 = v6;
  if (v6)
  {
    id v8 = [v6 end];
    [a1 caretRectForPosition:v8];
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;

    [v3 convertRect:a1 fromCoordinateSpace:v10, v12, v14, v16];
    CGRect v30 = CGRectInset(v29, 0.0, -12.0);
    CGFloat x = v30.origin.x;
    CGFloat y = v30.origin.y;
    CGFloat width = v30.size.width;
    CGFloat height = v30.size.height;
    [v3 bounds];
    v33.origin.CGFloat x = v21;
    v33.origin.CGFloat y = v22;
    v33.size.CGFloat width = v23;
    v33.size.CGFloat height = v24;
    v31.origin.CGFloat x = x;
    v31.origin.CGFloat y = y;
    v31.size.CGFloat width = width;
    v31.size.CGFloat height = height;
    CGRect v32 = CGRectIntersection(v31, v33);
    CGFloat v25 = v32.origin.x;
    CGFloat v26 = v32.origin.y;
    CGFloat v27 = v32.size.width;
    CGFloat v28 = v32.size.height;
  }
  else
  {
    CGFloat v25 = 0.0;
    CGFloat v26 = 0.0;
    CGFloat v27 = 0.0;
    CGFloat v28 = 0.0;
  }
  *(CGFloat *)a2 = v25;
  *(CGFloat *)(a2 + 8) = v26;
  *(CGFloat *)(a2 + 16) = v27;
  *(CGFloat *)(a2 + 24) = v28;
  *(unsigned char *)(a2 + 32) = v7 == 0;
}

uint64_t type metadata accessor for InfoButton()
{
  return self;
}

uint64_t getEnumTagSinglePayload for TTRIBoardReminderCellContentView.ContentGridSubview(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTRIBoardReminderCellContentView.ContentGridSubview(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100500D38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardReminderCellContentView.ContentGridSubview()
{
  return &type metadata for TTRIBoardReminderCellContentView.ContentGridSubview;
}

uint64_t sub_100500D70()
{
  return sub_100037EA0(&qword_1007A2470, &qword_1007A2478);
}

unint64_t sub_100500DB0()
{
  unint64_t result = qword_1007A2480;
  if (!qword_1007A2480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2480);
  }
  return result;
}

uint64_t sub_100500E04()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100500E3C()
{
}

uint64_t sub_100500E44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100794B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_100500EAC()
{
}

void sub_100500EB4()
{
}

uint64_t sub_100500EC8()
{
  return 8;
}

uint64_t sub_100500ED4()
{
  return swift_release();
}

uint64_t sub_100500EDC(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100500EF0(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100500EFC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_100500F34()
{
  unint64_t result = qword_1007A24A8;
  if (!qword_1007A24A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A24A8);
  }
  return result;
}

unint64_t sub_100500F88()
{
  unint64_t result = qword_1007A24B0;
  if (!qword_1007A24B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A24B0);
  }
  return result;
}

unint64_t sub_100500FDC()
{
  unint64_t result = qword_1007A24B8;
  if (!qword_1007A24B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A24B8);
  }
  return result;
}

uint64_t sub_100501030@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004FC964(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void sub_10050104C(char *a1, id a2)
{
  [a2 displayScale];
  double v4 = v3;
  id v5 = [a1 traitCollection];
  [v5 displayScale];
  double v7 = v6;

  if ((sub_1004F75A0(v7, 0.0000000149011612, v4) & 1) == 0)
  {
    id v8 = [a1 traitCollection];
    [v8 displayScale];
    double v10 = v9;

    double v11 = (double *)&a1[OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView____lazy_storage___layoutMetrics];
    *double v11 = fmax(v10, 1.0);
    *((unsigned char *)v11 + 8) = 0;
  }
}

unint64_t sub_10050111C(unint64_t result)
{
  if (result >= 0xF) {
    return 15;
  }
  return result;
}

id sub_10050112C()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v1 = (void *)static UIFont.roundedBodyFont.getter();
  [v0 setFont:v1];

  [v0 setAdjustsFontForContentSizeCategory:1];
  uint64_t v2 = self;
  id v3 = [v2 tintColor];
  [v0 setTextColor:v3];

  id v4 = v0;
  id v5 = [v2 tintColor];
  [v4 setTintColor:v5];

  double v6 = NUIContainerViewSizeUseDefault[0];
  double v7 = NUIContainerViewSizeUseDefault[1];
  type metadata accessor for UILayoutPriority(0);
  sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v8) = v10;
  [v4 setLayoutSize:v6 withContentPriority:v7, v8];
  return v4;
}

id sub_1005012D8()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self systemImageNamed:v0];

  id v2 = [objc_allocWithZone((Class)UIImageView) initWithImage:v1];
  id v3 = [self configurationWithTextStyle:UIFontTextStyleBody scale:1];
  [v2 setPreferredSymbolConfiguration:v3];

  id v4 = [self ttr_systemOrangeColor];
  [v2 setTintColor:v4];

  double v5 = NUIContainerViewSizeUseDefault[0];
  double v6 = NUIContainerViewSizeUseDefault[1];
  type metadata accessor for UILayoutPriority(0);
  sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v7) = v9;
  [v2 setLayoutSize:v5 withContentPriority:v6, v7];

  return v2;
}

id sub_100501498()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  double v1 = NUIContainerViewSizeUnbounded[0];
  double v2 = NUIContainerViewSizeUnbounded[1];
  type metadata accessor for UILayoutPriority(0);
  sub_1005025AC((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v3) = v7;
  [v0 setLayoutSize:v1 withContentPriority:v2 v3];
  [v0 setTextAlignment:4];
  [v0 setNumberOfLines:0];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v4 = (void *)static UIFont.roundedSubheadlineFont.getter();
  [v0 setFont:v4];

  [v0 setAdjustsFontForContentSizeCategory:1];
  id v5 = [self secondaryLabelColor];
  [v0 setTextColor:v5];

  return v0;
}

id sub_100501634()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTextAlignment:4];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  double v1 = (void *)static UIFont.roundedSubheadlineFont.getter();
  [v0 setFont:v1];

  [v0 setNumberOfLines:0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  id v2 = [self secondaryLabelColor];
  [v0 setTextColor:v2];

  return v0;
}

id sub_100501720()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  [v0 setTextAlignment:4];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  double v1 = (void *)static UIFont.roundedSubheadlineFont.getter();
  Class isa = UIFont.withBoldTrait()().super.isa;

  [v0 setFont:isa];
  [v0 setTextColor:*(void *)TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor()];
  [v0 setNumberOfLines:0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  LODWORD(v3) = 1132068864;
  [v0 setLayoutSize:NUIContainerViewSizeUseDefault[0] withContentPriority:NUIContainerViewSizeUseDefault[1] v3];
  return v0;
}

void sub_100501820(void *a1, char a2, void *a3, char a4, void *a5)
{
  if (a4 == 2)
  {
    uint64_t v8 = 0;
    uint64_t v11 = 0;
    uint64_t v9 = 1;
  }
  else if (a4 == 3)
  {
    uint64_t v8 = 0;
    uint64_t v11 = 0;
    uint64_t v9 = 3;
  }
  else
  {
    uint64_t v8 = a2 & 1;
    uint64_t v9 = (uint64_t)a3;
    if (!a3) {
      uint64_t v9 = (uint64_t)[self tintColor];
    }
    id v10 = a3;
    uint64_t v11 = v8;
  }
  sub_100502468(v11, (char *)v9);
  TTRIReminderCompletionButton.icon.setter();
  id v12 = a5;
  TTRIReminderCompletionButton.preferredSymbolConfiguration.setter();
  [a1 setSelected:v8];
  TTRIReminderCompletionButton.prefersFadedAppearance.setter();

  sub_10050248C(v11, (char *)v9);
}

void sub_100501934(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon;
  double v6 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon);
  *(void *)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon) = a2;
  id v7 = a2;

  id v8 = sub_1006134FC();
  [v8 setHidden:*(void *)(a1 + v5) == 0];

  id v9 = sub_1006134FC();
  id v10 = *(id *)(a1 + v5);
  [v9 setImage:v10];

  uint64_t v11 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText);
  *(void *)(a1 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText) = a3;
  id v12 = a3;

  sub_100613598();
}

uint64_t sub_100501A28(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A2520);
  __chkstk_darwin(v4 - 8);
  uint64_t v35 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078ED00);
  __chkstk_darwin(v6 - 8);
  uint64_t v36 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (char *)&v33 - v9;
  uint64_t v11 = type metadata accessor for AttributedString();
  uint64_t v37 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  double v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for AttributeContainer();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v20 = (char *)&v33 - v19;
  type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t result = TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter();
  if ((result & 1) == 0)
  {
    uint64_t v33 = v11;
    char v34 = a1;
    AttributeContainer.init()();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v33 - 2) = v23;
    swift_getKeyPath();
    id v38 = *(id *)(a2 + 16);
    CGFloat v24 = v38;
    sub_10001B9FC();
    id v25 = v24;
    AttributeContainer.subscript.setter();
    uint64_t v26 = swift_getKeyPath();
    __chkstk_darwin(v26);
    *(&v33 - 2) = v27;
    swift_getKeyPath();
    id v38 = [self tintColor];
    sub_1005024D0();
    AttributeContainer.subscript.setter();
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v20, v14);
    swift_bridgeObjectRetain();
    AttributedString.init(_:attributes:)();
    CGFloat v28 = v34;
    UIButton.configuration.getter();
    uint64_t v29 = type metadata accessor for UIButton.Configuration();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v10, 1, v29))
    {
      sub_10003B694((uint64_t)v10, v36, &qword_10078ED00);
      UIButton.configuration.setter();
      sub_10003B6F8((uint64_t)v10, &qword_10078ED00);
      uint64_t v30 = v33;
      uint64_t v31 = v37;
    }
    else
    {
      uint64_t v31 = v37;
      CGRect v32 = v35;
      uint64_t v30 = v33;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v35, v13, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v32, 0, 1, v30);
      UIButton.Configuration.attributedTitle.setter();
      UIButton.configuration.setter();
    }
    [v28 setTintColor:*(void *)(a2 + 160)];
    (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v20, v14);
  }
  return result;
}

void sub_100501EEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10003B754(&qword_1007A2520);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078ED00);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v12 = *(void **)(a2 + 8);
  if (v12 && *(void *)(a2 + 192) && ((*(unsigned char *)(a2 + 216) | *(unsigned char *)(a2 + 217)) & 1) == 0)
  {
    uint64_t v30 = *(void *)(a2 + 184);
    uint64_t v29 = sub_1000368FC(0, &qword_10078D1F0);
    id v13 = v12;
    uint64_t v28 = static TTRLocalizableStrings.RemindersList.moveToSectionFormat()();
    uint64_t v27 = v14;
    sub_10003B754(&qword_100793B40);
    uint64_t inited = swift_initStackObject();
    long long v26 = xmmword_10066C6F0;
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v16 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
    *(void *)(inited + 64) = v16;
    *(void *)(inited + 40) = v13;
    id v17 = v13;
    uint64_t v18 = NSFontAttributeName;
    sub_100421E1C(inited);
    uint64_t v19 = swift_initStackObject();
    *(_OWORD *)(v19 + 16) = v26;
    *(void *)(v19 + 32) = v18;
    id v20 = v18;
    v21.super.Class isa = UIFont.withBoldTrait()().super.isa;
    *(void *)(v19 + 64) = v16;
    *(UIFont *)(v19 + 40) = v21;
    sub_100421E1C(v19);
    CGFloat v22 = (void *)static NSAttributedString.formattedString(format:formatAttributes:content:contentAttributes:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    UIButton.configuration.getter();
    uint64_t v23 = type metadata accessor for UIButton.Configuration();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v11, 1, v23))
    {
      sub_10003B694((uint64_t)v11, (uint64_t)v8, &qword_10078ED00);
      UIButton.configuration.setter();

      sub_10003B6F8((uint64_t)v11, &qword_10078ED00);
    }
    else
    {
      id v24 = v22;
      AttributedString.init(_:)();
      uint64_t v25 = type metadata accessor for AttributedString();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v5, 0, 1, v25);
      UIButton.Configuration.attributedTitle.setter();
      UIButton.configuration.setter();
    }
  }
}

uint64_t sub_100502244(uint64_t a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ImageAttachment();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (void **)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    int64_t v7 = *(void *)(a2 + 16);
    if (v7)
    {
      v23[1] = a1;
      uint64_t v25 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004D3CEC(0, v7, 0);
      uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
      v23[0] = a2;
      uint64_t v9 = a2 + ((v8 + 32) & ~v8);
      uint64_t v10 = *(void *)(v4 + 72);
      uint64_t v11 = v25;
      do
      {
        sub_1005050FC(v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        uint64_t v12 = *(void **)((char *)v6 + *(int *)(v24 + 24));
        id v13 = *v6;
        uint64_t v14 = TTRIRemindersListLargeImageAttachmentsView.ViewModel.init(image:attachmentID:)();
        uint64_t v16 = v15;
        id v17 = v12;
        id v18 = v13;
        sub_100505034((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D3CEC(0, v11[2] + 1, 1);
          uint64_t v11 = v25;
        }
        unint64_t v20 = v11[2];
        unint64_t v19 = v11[3];
        if (v20 >= v19 >> 1)
        {
          sub_1004D3CEC(v19 > 1, v20 + 1, 1);
          uint64_t v11 = v25;
        }
        v11[2] = v20 + 1;
        UIFont v21 = &v11[2 * v20];
        v21[4] = v14;
        v21[5] = v16;
        v9 += v10;
        --v7;
      }
      while (v7);
      swift_bridgeObjectRelease();
    }
  }
  return TTRIRemindersListLargeImageAttachmentsView.viewModels.setter();
}

void sub_100502450()
{
}

void sub_100502458()
{
}

void sub_100502460()
{
}

uint64_t sub_100502468(uint64_t a1, char *a2)
{
  if (a2 != (char *)3) {
    return (uint64_t)sub_100502478(a1, a2);
  }
  return a1;
}

char *sub_100502478(uint64_t a1, char *a2)
{
  if ((unint64_t)(a2 - 1) >= 2) {
    return a2;
  }
  return result;
}

void sub_10050248C(uint64_t a1, char *a2)
{
  if (a2 != (char *)3) {
    sub_10050249C(a1, a2);
  }
}

void sub_10050249C(uint64_t a1, char *a2)
{
  if ((unint64_t)(a2 - 1) >= 2) {
}
  }

void sub_1005024B0()
{
}

unint64_t sub_1005024D0()
{
  unint64_t result = qword_1007A2528;
  if (!qword_1007A2528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2528);
  }
  return result;
}

void sub_100502524()
{
}

uint64_t sub_10050254C()
{
  return 8;
}

uint64_t sub_10050255C()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

void sub_1005025A4()
{
}

uint64_t sub_1005025AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005025F4()
{
  double v1 = (int *)type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  uint64_t v2 = *((void *)v1 - 1);
  uint64_t v146 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v3 = (v146 + 40) & ~v146;
  uint64_t v144 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(sub_10003B754(&qword_100794B10) - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v143 = *(void *)(v4 + 64);

  swift_bridgeObjectRelease();
  uint64_t v147 = v0;
  uint64_t v6 = v0 + v3;

  if (*(void *)(v0 + v3 + 64)) {
    swift_release();
  }

  if (*(void *)(v6 + 128)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  if (*(void *)(v6 + 168)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 200)) {
    swift_release();
  }

  if (*(void *)(v6 + 240)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 264)) {
    swift_release();
  }
  uint64_t v7 = v6 + v1[17];
  swift_unknownObjectRelease();
  uint64_t v142 = sub_10003B754(&qword_100794B60);
  uint64_t v8 = v7 + *(int *)(v142 + 28);
  uint64_t v9 = sub_10003B754(&qword_100794BB0);
  v140 = *(unsigned int (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  uint64_t v141 = v9;
  if (!v140(v8, 1))
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_17;
          default:
            goto LABEL_36;
        }
        goto LABEL_36;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_35:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_17:
            uint64_t v10 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
            break;
          default:
            break;
        }
LABEL_36:
        uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v26 = v8 + *(int *)(v25 + 20);
        if (*(void *)(v26 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v26 + 16), *(void *)(v26 + 24), *(void *)(v26 + 32), *(void *)(v26 + 40), *(void *)(v26 + 48), *(void *)(v26 + 56), *(unsigned char *)(v26 + 64));
          int v27 = *(unsigned __int8 *)(v26 + 120);
          if (v27 != 255) {
            sub_10003B9C0(*(void **)(v26 + 72), *(void *)(v26 + 80), *(void *)(v26 + 88), *(void *)(v26 + 96), *(void *)(v26 + 104), *(void *)(v26 + 112), v27 & 1);
          }
        }
        id v16 = *(id *)(v8 + *(int *)(v25 + 44));
        goto LABEL_40;
      case 2u:

        uint64_t v11 = (id *)(v8 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_120;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 3u:

        uint64_t v11 = (id *)(v8 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_120;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 4u:

        uint64_t v11 = (id *)(v8 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v11, 1, v14))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_120:
              id v16 = *v11;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_24:
              uint64_t v15 = type metadata accessor for Date();
              (*(void (**)(id *, uint64_t))(*(void *)(v15 - 8) + 8))(v11, v15);
              break;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 5u:
        id v16 = *(id *)(v8 + 16);
        goto LABEL_40;
      case 6u:
        id v16 = *(id *)v8;
        goto LABEL_40;
      case 7u:
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17))
        {
          swift_bridgeObjectRelease();
          uint64_t v18 = v8 + *(int *)(v17 + 20);
          uint64_t v19 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
        }
        uint64_t v20 = v8 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(v20 + 8)) {
          goto LABEL_41;
        }
        swift_bridgeObjectRelease();
        id v16 = *(id *)(v20 + 16);
LABEL_40:

LABEL_41:
        uint64_t v28 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();

        swift_bridgeObjectRelease();
        break;
      case 8u:
        uint64_t v21 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v8, 1, v21))
        {
          uint64_t v22 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v8, v22);
        }
        goto LABEL_41;
      case 9u:
        uint64_t v23 = v8 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v24 = type metadata accessor for AnyTip();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
        goto LABEL_41;
      default:
        goto LABEL_41;
    }
  }
  uint64_t v29 = v6 + v1[18];
  swift_unknownObjectRelease();
  uint64_t v139 = sub_10003B754(&qword_100794B58);
  uint64_t v30 = v29 + *(int *)(v139 + 40);
  uint64_t v31 = sub_10003B754(&qword_100794B98);
  uint64_t v138 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48);
  if (!v138(v30, 1, v31))
  {
    uint64_t v32 = v5;
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_46;
          default:
            goto LABEL_65;
        }
        goto LABEL_65;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_64:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_46:
            uint64_t v33 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v30, v33);
            break;
          default:
            break;
        }
LABEL_65:
        uint64_t v48 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v49 = v30 + *(int *)(v48 + 20);
        if (*(void *)(v49 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v49 + 16), *(void *)(v49 + 24), *(void *)(v49 + 32), *(void *)(v49 + 40), *(void *)(v49 + 48), *(void *)(v49 + 56), *(unsigned char *)(v49 + 64));
          int v50 = *(unsigned __int8 *)(v49 + 120);
          if (v50 != 255) {
            sub_10003B9C0(*(void **)(v49 + 72), *(void *)(v49 + 80), *(void *)(v49 + 88), *(void *)(v49 + 96), *(void *)(v49 + 104), *(void *)(v49 + 112), v50 & 1);
          }
        }
        id v39 = *(id *)(v30 + *(int *)(v48 + 44));
        goto LABEL_69;
      case 2u:

        char v34 = (id *)(v30 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_121;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 3u:

        char v34 = (id *)(v30 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v34, 1, v36))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_121;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 4u:

        char v34 = (id *)(v30 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v34, 1, v37))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_121:
              id v39 = *v34;
              goto LABEL_69;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_53:
              uint64_t v38 = type metadata accessor for Date();
              (*(void (**)(id *, uint64_t))(*(void *)(v38 - 8) + 8))(v34, v38);
              break;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 5u:
        id v39 = *(id *)(v30 + 16);
        goto LABEL_69;
      case 6u:
        id v39 = *(id *)v30;
        goto LABEL_69;
      case 7u:
        uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v30, 1, v40))
        {
          swift_bridgeObjectRelease();
          uint64_t v41 = v30 + *(int *)(v40 + 20);
          uint64_t v42 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 - 8) + 8))(v41, v42);
        }
        uint64_t v43 = v30 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(v43 + 8)) {
          goto LABEL_70;
        }
        swift_bridgeObjectRelease();
        id v39 = *(id *)(v43 + 16);
LABEL_69:

LABEL_70:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v32;
        break;
      case 8u:
        uint64_t v44 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v30, 1, v44))
        {
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v30, v45);
        }
        goto LABEL_70;
      case 9u:
        uint64_t v46 = v30 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v47 = type metadata accessor for AnyTip();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v47 - 8) + 8))(v46, v47);
        goto LABEL_70;
      default:
        goto LABEL_70;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v51 = v6 + v1[26];

  swift_bridgeObjectRelease();
  if (*(void *)(v51 + 24)) {
    swift_release();
  }
  uint64_t v52 = v3 + v144 + v5;
  uint64_t v53 = v6 + v1[27];

  swift_bridgeObjectRelease();
  if (*(void *)(v53 + 24)) {
    swift_release();
  }
  uint64_t v145 = v5;
  uint64_t v54 = v52 & ~v5;
  uint64_t v55 = v6 + v1[28];
  swift_unknownObjectRelease();
  uint64_t v56 = sub_10003B754(&qword_100794B50);
  uint64_t v57 = v55 + *(int *)(v56 + 28);
  uint64_t v58 = sub_10003B754(&qword_100794B68);
  char v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48);
  if (!v137(v57, 1, v58))
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_97;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_79;
          default:
            goto LABEL_98;
        }
        goto LABEL_98;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_97:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_79:
            uint64_t v59 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v59 - 8) + 8))(v57, v59);
            break;
          default:
            break;
        }
LABEL_98:
        uint64_t v74 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v75 = v57 + *(int *)(v74 + 20);
        if (*(void *)(v75 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v75 + 16), *(void *)(v75 + 24), *(void *)(v75 + 32), *(void *)(v75 + 40), *(void *)(v75 + 48), *(void *)(v75 + 56), *(unsigned char *)(v75 + 64));
          int v76 = *(unsigned __int8 *)(v75 + 120);
          if (v76 != 255) {
            sub_10003B9C0(*(void **)(v75 + 72), *(void *)(v75 + 80), *(void *)(v75 + 88), *(void *)(v75 + 96), *(void *)(v75 + 104), *(void *)(v75 + 112), v76 & 1);
          }
        }
        id v65 = *(id *)(v57 + *(int *)(v74 + 44));
        goto LABEL_102;
      case 2u:

        int v60 = (id *)(v57 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v61 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48))(v60, 1, v61))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_122;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 3u:

        int v60 = (id *)(v57 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v62 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v60, 1, v62))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_122;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 4u:

        int v60 = (id *)(v57 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v63 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 48))(v60, 1, v63))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_122:
              id v65 = *v60;
              goto LABEL_102;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_86:
              uint64_t v64 = type metadata accessor for Date();
              (*(void (**)(id *, uint64_t))(*(void *)(v64 - 8) + 8))(v60, v64);
              break;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 5u:
        id v65 = *(id *)(v57 + 16);
        goto LABEL_102;
      case 6u:
        id v65 = *(id *)v57;
        goto LABEL_102;
      case 7u:
        uint64_t v66 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 48))(v57, 1, v66))
        {
          swift_bridgeObjectRelease();
          uint64_t v67 = v57 + *(int *)(v66 + 20);
          uint64_t v68 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
        }
        uint64_t v69 = v57 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(v69 + 8)) {
          goto LABEL_103;
        }
        swift_bridgeObjectRelease();
        id v65 = *(id *)(v69 + 16);
LABEL_102:

LABEL_103:
        type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 8u:
        uint64_t v70 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v57, 1, v70))
        {
          uint64_t v71 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v71 - 8) + 8))(v57, v71);
        }
        goto LABEL_103;
      case 9u:
        uint64_t v72 = v57 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v73 = type metadata accessor for AnyTip();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v72, v73);
        goto LABEL_103;
      default:
        goto LABEL_103;
    }
  }
  uint64_t v77 = v147;
  uint64_t v78 = v147 + v54;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(v2 + 48))(v147 + v54, 1, v1))
  {

    if (*(void *)(v78 + 64)) {
      swift_release();
    }

    if (*(void *)(v78 + 128)) {
      swift_release();
    }
    swift_bridgeObjectRelease();

    if (*(void *)(v78 + 168)) {
      swift_release();
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v78 + 200)) {
      swift_release();
    }

    if (*(void *)(v78 + 240)) {
      swift_release();
    }
    swift_bridgeObjectRelease();
    if (*(void *)(v78 + 264)) {
      swift_release();
    }
    uint64_t v79 = v78 + v1[17];
    swift_unknownObjectRelease();
    uint64_t v80 = v79 + *(int *)(v142 + 28);
    if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v140)(v80, 1, v141))
    {
      type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_143;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_124;
            default:
              goto LABEL_144;
          }
          goto LABEL_144;
        case 1u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_143:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_124:
              uint64_t v81 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v81 - 8) + 8))(v80, v81);
              break;
            default:
              break;
          }
LABEL_144:
          uint64_t v94 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v95 = v80 + *(int *)(v94 + 20);
          if (*(void *)(v95 + 8))
          {
            swift_bridgeObjectRelease();
            sub_1000510EC(*(void **)(v95 + 16), *(void *)(v95 + 24), *(void *)(v95 + 32), *(void *)(v95 + 40), *(void *)(v95 + 48), *(void *)(v95 + 56), *(unsigned char *)(v95 + 64));
            int v96 = *(unsigned __int8 *)(v95 + 120);
            if (v96 != 255) {
              sub_10003B9C0(*(void **)(v95 + 72), *(void *)(v95 + 80), *(void *)(v95 + 88), *(void *)(v95 + 96), *(void *)(v95 + 104), *(void *)(v95 + 112), v96 & 1);
            }
          }
          id v87 = *(id *)(v80 + *(int *)(v94 + 44));
          goto LABEL_148;
        case 2u:

          id v82 = (id *)(v80 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v83 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v83 - 8) + 48))(v82, 1, v83))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_217;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_131;
              default:
                goto LABEL_149;
            }
          }
          goto LABEL_149;
        case 3u:

          id v82 = (id *)(v80 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v84 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v82, 1, v84))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_217;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_131;
              default:
                goto LABEL_149;
            }
          }
          goto LABEL_149;
        case 4u:

          id v82 = (id *)(v80 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v85 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v82, 1, v85))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
LABEL_217:
                id v87 = *v82;
                goto LABEL_148;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
LABEL_131:
                uint64_t v86 = type metadata accessor for Date();
                goto LABEL_141;
              default:
                goto LABEL_149;
            }
          }
          goto LABEL_149;
        case 5u:
          id v87 = *(id *)(v80 + 16);
          goto LABEL_148;
        case 6u:
          id v87 = *(id *)v80;
          goto LABEL_148;
        case 7u:
          uint64_t v88 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v88 - 8) + 48))(v80, 1, v88))
          {
            swift_bridgeObjectRelease();
            uint64_t v89 = v80 + *(int *)(v88 + 20);
            uint64_t v90 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v90 - 8) + 8))(v89, v90);
          }
          uint64_t v91 = v80 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          if (!*(void *)(v91 + 8)) {
            goto LABEL_149;
          }
          swift_bridgeObjectRelease();
          id v87 = *(id *)(v91 + 16);
LABEL_148:

LABEL_149:
          long long v97 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();

          swift_bridgeObjectRelease();
          uint64_t v77 = v147;
          break;
        case 8u:
          uint64_t v92 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 48))(v80, 1, v92))
          {
            uint64_t v93 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v93 - 8) + 8))(v80, v93);
          }
          goto LABEL_149;
        case 9u:
          id v82 = (id *)(v80 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
          uint64_t v86 = type metadata accessor for AnyTip();
LABEL_141:
          (*(void (**)(id *, uint64_t))(*(void *)(v86 - 8) + 8))(v82, v86);
          goto LABEL_149;
        default:
          goto LABEL_149;
      }
    }
    uint64_t v98 = v78 + v1[18];
    swift_unknownObjectRelease();
    uint64_t v99 = v98 + *(int *)(v139 + 40);
    if (!v138(v99, 1, v31))
    {
      type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_173;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_154;
            default:
              goto LABEL_174;
          }
          goto LABEL_174;
        case 1u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_173:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_154:
              uint64_t v100 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v100 - 8) + 8))(v99, v100);
              break;
            default:
              break;
          }
LABEL_174:
          uint64_t v113 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v114 = v99 + *(int *)(v113 + 20);
          if (*(void *)(v114 + 8))
          {
            swift_bridgeObjectRelease();
            sub_1000510EC(*(void **)(v114 + 16), *(void *)(v114 + 24), *(void *)(v114 + 32), *(void *)(v114 + 40), *(void *)(v114 + 48), *(void *)(v114 + 56), *(unsigned char *)(v114 + 64));
            int v115 = *(unsigned __int8 *)(v114 + 120);
            if (v115 != 255) {
              sub_10003B9C0(*(void **)(v114 + 72), *(void *)(v114 + 80), *(void *)(v114 + 88), *(void *)(v114 + 96), *(void *)(v114 + 104), *(void *)(v114 + 112), v115 & 1);
            }
          }
          id v106 = *(id *)(v99 + *(int *)(v113 + 44));
          goto LABEL_178;
        case 2u:

          long long v101 = (id *)(v99 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v102 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v102 - 8) + 48))(v101, 1, v102))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_218;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_161;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_179;
        case 3u:

          long long v101 = (id *)(v99 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v103 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v103 - 8) + 48))(v101, 1, v103))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_218;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_161;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_179;
        case 4u:

          long long v101 = (id *)(v99 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v104 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v104 - 8) + 48))(v101, 1, v104))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
LABEL_218:
                id v106 = *v101;
                goto LABEL_178;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
LABEL_161:
                uint64_t v105 = type metadata accessor for Date();
                goto LABEL_171;
              default:
                goto LABEL_179;
            }
          }
          goto LABEL_179;
        case 5u:
          id v106 = *(id *)(v99 + 16);
          goto LABEL_178;
        case 6u:
          id v106 = *(id *)v99;
          goto LABEL_178;
        case 7u:
          uint64_t v107 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 48))(v99, 1, v107))
          {
            swift_bridgeObjectRelease();
            uint64_t v108 = v99 + *(int *)(v107 + 20);
            uint64_t v109 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v109 - 8) + 8))(v108, v109);
          }
          uint64_t v110 = v99 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          if (!*(void *)(v110 + 8)) {
            goto LABEL_179;
          }
          swift_bridgeObjectRelease();
          id v106 = *(id *)(v110 + 16);
LABEL_178:

LABEL_179:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 8u:
          uint64_t v111 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v111 - 8) + 48))(v99, 1, v111))
          {
            uint64_t v112 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v112 - 8) + 8))(v99, v112);
          }
          goto LABEL_179;
        case 9u:
          long long v101 = (id *)(v99 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
          uint64_t v105 = type metadata accessor for AnyTip();
LABEL_171:
          (*(void (**)(id *, uint64_t))(*(void *)(v105 - 8) + 8))(v101, v105);
          goto LABEL_179;
        default:
          goto LABEL_179;
      }
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    uint64_t v116 = v78 + v1[26];

    swift_bridgeObjectRelease();
    if (*(void *)(v116 + 24)) {
      swift_release();
    }
    uint64_t v117 = v78 + v1[27];

    swift_bridgeObjectRelease();
    if (*(void *)(v117 + 24)) {
      swift_release();
    }
    uint64_t v118 = v78 + v1[28];
    swift_unknownObjectRelease();
    uint64_t v119 = v118 + *(int *)(v56 + 28);
    if (!v137(v119, 1, v58))
    {
      type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_207;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_188;
            default:
              goto LABEL_208;
          }
          goto LABEL_208;
        case 1u:
          type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_207:

              break;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_188:
              uint64_t v120 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v120 - 8) + 8))(v119, v120);
              break;
            default:
              break;
          }
LABEL_208:
          uint64_t v133 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v134 = v119 + *(int *)(v133 + 20);
          if (*(void *)(v134 + 8))
          {
            swift_bridgeObjectRelease();
            sub_1000510EC(*(void **)(v134 + 16), *(void *)(v134 + 24), *(void *)(v134 + 32), *(void *)(v134 + 40), *(void *)(v134 + 48), *(void *)(v134 + 56), *(unsigned char *)(v134 + 64));
            int v135 = *(unsigned __int8 *)(v134 + 120);
            if (v135 != 255) {
              sub_10003B9C0(*(void **)(v134 + 72), *(void *)(v134 + 80), *(void *)(v134 + 88), *(void *)(v134 + 96), *(void *)(v134 + 104), *(void *)(v134 + 112), v135 & 1);
            }
          }
          id v126 = *(id *)(v119 + *(int *)(v133 + 44));
          goto LABEL_212;
        case 2u:

          id v121 = (id *)(v119 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v122 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v122 - 8) + 48))(v121, 1, v122))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_219;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_195;
              default:
                goto LABEL_213;
            }
          }
          goto LABEL_213;
        case 3u:

          id v121 = (id *)(v119 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v123 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v123 - 8) + 48))(v121, 1, v123))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                goto LABEL_219;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                goto LABEL_195;
              default:
                goto LABEL_213;
            }
          }
          goto LABEL_213;
        case 4u:

          id v121 = (id *)(v119 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
          uint64_t v124 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 48))(v121, 1, v124))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
LABEL_219:
                id v126 = *v121;
                goto LABEL_212;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
LABEL_195:
                uint64_t v125 = type metadata accessor for Date();
                goto LABEL_205;
              default:
                goto LABEL_213;
            }
          }
          goto LABEL_213;
        case 5u:
          id v126 = *(id *)(v119 + 16);
          goto LABEL_212;
        case 6u:
          id v126 = *(id *)v119;
          goto LABEL_212;
        case 7u:
          uint64_t v127 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48))(v119, 1, v127))
          {
            swift_bridgeObjectRelease();
            uint64_t v128 = v119 + *(int *)(v127 + 20);
            uint64_t v129 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v129 - 8) + 8))(v128, v129);
          }
          uint64_t v130 = v119 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          if (!*(void *)(v130 + 8)) {
            goto LABEL_213;
          }
          swift_bridgeObjectRelease();
          id v126 = *(id *)(v130 + 16);
LABEL_212:

LABEL_213:
          type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 8u:
          uint64_t v131 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 48))(v119, 1, v131))
          {
            uint64_t v132 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v132 - 8) + 8))(v119, v132);
          }
          goto LABEL_213;
        case 9u:
          id v121 = (id *)(v119 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
          uint64_t v125 = type metadata accessor for AnyTip();
LABEL_205:
          (*(void (**)(id *, uint64_t))(*(void *)(v125 - 8) + 8))(v121, v125);
          goto LABEL_213;
        default:
          goto LABEL_213;
      }
    }
  }

  return _swift_deallocObject(v77, v54 + v143, v146 | v145 | 7);
}

void sub_100504F4C()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRIBoardReminderCellContentConfiguration() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_10003B754(&qword_100794B10) - 8);
  uint64_t v5 = (void *)v0[2];
  uint64_t v6 = v0[3];
  uint64_t v7 = (void *)v0[4];
  uint64_t v8 = (uint64_t)v0 + ((v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_1004FBC78(v5, v6, v7, (uint64_t)v0 + v2, v8);
}

uint64_t sub_100505024()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100505034(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100505094(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005050FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100505164()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10050519C()
{
  v2.receiver = *(id *)(v0 + 16);
  v2.super_class = (Class)swift_getObjectType();
  return [super layoutSubviews];
}

uint64_t sub_1005051E0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100505208@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    uint64_t v10 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    id v12 = [v10 objectIDWithUUID:isa];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = (char *)a1 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    *a1 = v12;
    uint64_t v14 = enum case for REMNavigationSpecifier.AccountPathSpecifier.showInAccountsList(_:);
    uint64_t v15 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
    uint64_t v16 = enum case for REMNavigationSpecifier.account(_:);
    uint64_t v17 = type metadata accessor for REMNavigationSpecifier();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(a1, v16, v17);
  }
  return result;
}

uint64_t sub_100505464(void *a1, uint64_t a2)
{
  return sub_1005054C4(a1, a2, &qword_10079B1A0);
}

uint64_t sub_100505484(void *a1, uint64_t a2)
{
  return sub_1005054C4(a1, a2, &qword_10079B1D0);
}

uint64_t sub_1005054A4(void *a1, uint64_t a2)
{
  return sub_1005054C4(a1, a2, &qword_10079B1E8);
}

uint64_t sub_1005054C4(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_100038D28(a1, v10);
  static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
  uint64_t v12 = sub_10003B754(a3);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8) + 40))(a2, v9, v12, v12, v10);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

uint64_t sub_100505604(uint64_t (*a1)(void, void))
{
  return a1(0, 0);
}

uint64_t sub_100505638@<X0>(void *a1@<X8>)
{
  uint64_t v2 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)();
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    id v10 = [v8 objectIDWithUUID:isa];

    uint64_t v11 = (char *)a1 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    *a1 = v10;
    uint64_t v12 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
    uint64_t v13 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
    uint64_t v14 = enum case for REMNavigationSpecifier.list(_:);
    uint64_t v15 = type metadata accessor for REMNavigationSpecifier();
    return (*(uint64_t (**)(void *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(a1, v14, v15);
  }
  return result;
}

id sub_100505834(void *a1)
{
  return sub_100505948(a1);
}

id sub_100505890(void *a1)
{
  return sub_100505948(a1);
}

id sub_1005058EC(void *a1)
{
  return sub_100505948(a1);
}

id sub_100505948(void *a1)
{
  uint64_t v2 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)();
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    __break(1u);
  }
  uint64_t v7 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  id v9 = [v7 objectIDWithUUID:isa];

  id v14 = 0;
  id v10 = [a1 fetchReminderWithObjectID:v9 error:&v14];
  if (v10)
  {
    id v11 = v14;
  }
  else
  {
    id v12 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v10;
}

id sub_100505B34(void *a1)
{
  uint64_t v2 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)();
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    __break(1u);
  }
  uint64_t v7 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  id v9 = [v7 objectIDWithUUID:isa];

  id v14 = 0;
  id v10 = [a1 fetchReminderWithObjectID:v9 error:&v14];
  if (v10)
  {
    id v11 = v14;
  }
  else
  {
    id v12 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v10;
}

uint64_t sub_100505D28(void *a1)
{
  uint64_t v3 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v34 - v7;
  id v39 = "EF-91CB-A8A3484D56AE";
  UUID.init(uuidString:)();
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v38(v8, 1, v9) == 1) {
    __break(1u);
  }
  id v11 = self;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  uint64_t v36 = *(void (**)(char *, uint64_t))(v10 + 8);
  v36(v8, v9);
  id v37 = v11;
  id v13 = [v11 objectIDWithUUID:isa];

  id v40 = 0;
  id v14 = [a1 fetchReminderWithObjectID:v13 error:&v40];

  id v15 = v40;
  if (!v14)
  {
    uint64_t v29 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (uint64_t)v14;
  }
  if (![v14 isCompleted])
  {
    if (qword_100785660 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100018BF8(v30, (uint64_t)qword_1007A25C8);
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v31, "Reminder.isCompleted == false, no need to update it.", v32, 2u);
      swift_slowDealloc();
    }
    goto LABEL_17;
  }
  uint64_t v34 = v1;
  id v35 = a1;
  if (qword_100785660 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100018BF8(v16, (uint64_t)qword_1007A25C8);
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Reminder isCompleted. Marking as not-completed", v19, 2u);
    swift_slowDealloc();
  }

  id v20 = objc_allocWithZone((Class)REMSaveRequest);
  id v21 = [v20 initWithStore:v35];
  uint64_t v22 = [v21 updateReminder:v14];
  [v22 setCompleted:0];
  id v40 = 0;
  if (![v21 saveSynchronouslyWithError:&v40])
  {
    id v33 = v40;
    goto LABEL_20;
  }
  id v23 = v40;
  UUID.init(uuidString:)();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v5, 1, v9);
  if (result != 1)
  {
    Class v25 = UUID._bridgeToObjectiveC()().super.isa;
    v36(v5, v9);
    id v26 = [v37 objectIDWithUUID:v25];

    id v40 = 0;
    id v27 = [v35 fetchReminderWithObjectID:v26 error:&v40];

    id v28 = v40;
    if (v27)
    {

      id v14 = v27;
LABEL_17:

      return (uint64_t)v14;
    }
    id v33 = v28;
LABEL_20:
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return (uint64_t)v14;
  }
  __break(1u);
  return result;
}

uint64_t sub_100506240()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10050628C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A2C60);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A2C60);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100506354()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100506384()
{
  sub_100506354();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIAnyTreeViewAccessibilityDelegate()
{
  return sub_10003BC54();
}

uint64_t OpenAnyListAppIntent.$target.getter()
{
  return IntentParameter.projectedValue.getter();
}

void *OpenAnyListAppIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenAnyListAppIntent.openAppWhenRun;
}

void *OpenAnyListAppIntent.persistentIdentifier.unsafeMutableAddressor()
{
  return &static OpenAnyListAppIntent.persistentIdentifier;
}

unint64_t static OpenAnyListAppIntent.persistentIdentifier.getter()
{
  return 0xD000000000000019;
}

uint64_t sub_10050642C()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100018C30(v6, static OpenAnyListAppIntent.title);
  sub_100018BF8(v6, (uint64_t)static OpenAnyListAppIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenAnyListAppIntent.title.unsafeMutableAddressor()
{
  if (qword_100785670 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_100018BF8(v0, (uint64_t)static OpenAnyListAppIntent.title);
}

uint64_t static OpenAnyListAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100785670 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100018BF8(v2, (uint64_t)static OpenAnyListAppIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static OpenAnyListAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10003B754(&qword_1007857D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t OpenAnyListAppIntent.target.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t OpenAnyListAppIntent.target.setter(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyListEntity();
  __chkstk_darwin(v2 - 8);
  sub_1005077B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_100507814(a1);
}

uint64_t (*OpenAnyListAppIntent.target.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100506B20;
}

uint64_t OpenAnyListAppIntent.perform()(uint64_t a1, uint64_t a2)
{
  v2[3] = a1;
  v2[4] = a2;
  uint64_t v3 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  v2[8] = v4;
  v2[9] = *(void *)(v4 - 8);
  v2[10] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for REMNavigationSpecifier();
  v2[11] = v5;
  v2[12] = *(void *)(v5 - 8);
  v2[13] = swift_task_alloc();
  type metadata accessor for AnyListEntity();
  v2[14] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v2[15] = v6;
  v2[16] = *(void *)(v6 - 8);
  v2[17] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for RemindersAppIntentCategory();
  v2[18] = v7;
  v2[19] = *(void *)(v7 - 8);
  v2[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100506DB4, v9, v8);
}

uint64_t sub_100506DB4()
{
  uint64_t v1 = v0[20];
  uint64_t v3 = v0[18];
  uint64_t v2 = v0[19];
  uint64_t v15 = v0[17];
  uint64_t v4 = v0[14];
  uint64_t v18 = v0[16];
  uint64_t v19 = v0[15];
  uint64_t v16 = v0[12];
  uint64_t v17 = v0[11];
  uint64_t v5 = v0[9];
  uint64_t v6 = v0[8];
  uint64_t v13 = v0[7];
  uint64_t v14 = v0[13];
  uint64_t v7 = v0[6];
  uint64_t v11 = v0[10];
  uint64_t v12 = v0[5];
  uint64_t v8 = v0[4];
  swift_release();
  v0[2] = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for RemindersAppIntentCategory.publicAppIntent(_:), v3);
  sub_10026FECC();
  AppIntent.postAnalytics(category:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  IntentParameter.wrappedValue.getter();
  (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v11, enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:), v6);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v13, enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:), v12);
  sub_10025B688(v11, v13, v14);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v13, v12);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v6);
  REMNavigationSpecifier.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v17);
  sub_100507814(v4);
  URL.open()();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v19);
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100507010()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t sub_100507034(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyListEntity();
  __chkstk_darwin(v2 - 8);
  sub_1005077B0(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  IntentParameter.wrappedValue.setter();
  return sub_100507814(a1);
}

uint64_t (*sub_1005070C4(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = IntentParameter.wrappedValue.modify();
  return sub_100506B20;
}

void sub_100507120(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t sub_10050717C(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000C2D4;
  return OpenAnyListAppIntent.perform()(a1, v4);
}

uint64_t sub_10050721C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = _s9Reminders20OpenAnyListAppIntentVACycfC_0();
  *a1 = result;
  return result;
}

uint64_t _s9Reminders20OpenAnyListAppIntentVACycfC_0()
{
  uint64_t v0 = type metadata accessor for InputConnectionBehavior();
  uint64_t v32 = *(void *)(v0 - 8);
  uint64_t v33 = v0;
  __chkstk_darwin(v0);
  os_log_type_t v31 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_10003B754(&qword_1007857C8);
  __chkstk_darwin(v2 - 8);
  uint64_t v30 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v25 - v5;
  uint64_t v6 = sub_10003B754(&qword_1007857D0);
  __chkstk_darwin(v6 - 8);
  id v28 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_1007857D8);
  __chkstk_darwin(v8 - 8);
  id v26 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Locale();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = type metadata accessor for LocalizedStringResource();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v27 = sub_10003B754(&qword_1007857E0);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v18 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  v19(v13, v18, v10);
  uint64_t v20 = v26;
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  uint64_t v21 = type metadata accessor for AnyListEntity();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v28, 1, 1, v21);
  uint64_t v22 = type metadata accessor for IntentDialog();
  id v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v29, 1, 1, v22);
  v23(v30, 1, 1, v22);
  (*(void (**)(char *, void, uint64_t))(v32 + 104))(v31, enum case for InputConnectionBehavior.default(_:), v33);
  sub_100507A8C(&qword_1007857E8);
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t sub_1005077B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyListEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100507814(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyListEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100507874()
{
  unint64_t result = qword_1007A2D28;
  if (!qword_1007A2D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2D28);
  }
  return result;
}

uint64_t sub_1005078C8()
{
  return sub_100507A8C(&qword_10079EEA0);
}

unint64_t sub_100507904()
{
  unint64_t result = qword_1007A2D30;
  if (!qword_1007A2D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2D30);
  }
  return result;
}

unint64_t sub_10050795C()
{
  unint64_t result = qword_1007A2D38;
  if (!qword_1007A2D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2D38);
  }
  return result;
}

uint64_t sub_1005079B0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1005079CC()
{
  return swift_getOpaqueTypeConformance2();
}

ValueMetadata *type metadata accessor for OpenAnyListAppIntent()
{
  return &type metadata for OpenAnyListAppIntent;
}

unint64_t sub_100507A30()
{
  unint64_t result = qword_1007A2D48;
  if (!qword_1007A2D48)
  {
    sub_100039710(&qword_1007A2D50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2D48);
  }
  return result;
}

uint64_t sub_100507A8C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for AnyListEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100507AD0(unint64_t a1, unint64_t a2)
{
  sub_100028140();
  if (a2 >> 62)
  {
    uint64_t v4 = _CocoaArrayWrapper.subscript.getter();
    self;
    if (swift_dynamicCastObjCClass()) {
      return v4;
    }
LABEL_10:
    _StringGuts.grow(_:)(85);
    unint64_t v6 = 0xD000000000000046;
    unint64_t v5 = 0x80000001006BD830;
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  swift_unknownObjectRetain();
  self;
  if (swift_dynamicCastObjCClass()) {
    return v4;
  }
  _StringGuts.grow(_:)(82);
  unint64_t v5 = 0x80000001006BD7E0;
  unint64_t v6 = 0xD000000000000043;
LABEL_11:
  String.append(_:)(*(Swift::String *)&v6);
  v8._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0x756F662074756220;
  v9._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v9);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v10._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:flags:)();
  __break(1u);
  return result;
}

id sub_100507CAC(char a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource] = 0;
  *(void *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView] = 0;
  Swift::String v9 = &a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  *Swift::String v9 = 0u;
  v9[1] = 0u;
  *(void *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton] = 0;
  *(void *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton] = 0;
  a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style] = a1 & 1;
  Swift::String v10 = &a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
  *Swift::String v10 = a2;
  v10[1] = &off_1007400D0;
  *(void *)&a4[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_localUndoManager] = a3;
  v12.receiver = a4;
  v12.super_class = ObjectType;
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_100507D84(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply();
  __chkstk_darwin(v8 - 8);
  Swift::String v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100792528);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36[3] = type metadata accessor for TTRITemplatesListRouter();
  v36[4] = &off_1007556D8;
  v36[0] = a2;
  *(void *)(a4 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 56) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a4 + 64) = TTRTemplatesListViewModel.init(isPlaceholder:)();
  *(unsigned char *)(a4 + 72) = v14 & 1;
  *(void *)(a4 + 80) = v15;
  *(void *)(a4 + 88) = v16;
  *(unsigned char *)(a4 + 176) = 0;
  uint64_t v17 = sub_10003B754(&qword_100792530);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 1, 1, v17);
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && _CocoaArrayWrapper.endIndex.getter()) {
    sub_100508170((unint64_t)_swiftEmptyArrayStorage);
  }
  TTRTemplatesListViewModel.OptimisticApply.init(templateOrdering:deletedTemplateIDs:)();
  uint64_t v18 = OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_editorUndoManager;
  id v19 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 initWithDebugIdentifier:v20];

  *(void *)(a4 + v18) = v21;
  *(void *)(a4 + 96) = a1;
  *(void *)(a4 + 104) = protocol witness table for TTRTemplatesListInteractor;
  sub_1000145EC((uint64_t)v36, a4 + 112);
  *(void *)(a4 + 160) = a3;
  uint64_t ObjectType = (void *)swift_getObjectType();
  id v23 = (void *)protocol witness table for TTRTemplatesListInteractor[1];
  v35[7] = ObjectType;
  v35[8] = v23;
  v35[4] = a1;
  type metadata accessor for TTRRemoveTemplatePresenterCapability();
  swift_allocObject();
  *(void *)(a4 + 152) = TTRRemoveTemplatePresenterCapability.init(interactor:)();
  type metadata accessor for TTRMainActorDeferredAction();
  swift_allocObject();
  swift_retain_n();
  v35[0] = a3;
  uint64_t v24 = TTRMainActorDeferredAction.init()();
  *(void *)(a4 + 168) = v24;
  swift_beginAccess();
  *(void *)(v24 + 24) = &off_100740068;
  swift_unknownObjectWeakAssign();
  uint64_t v25 = *(void *)(a4 + 104);
  uint64_t v26 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 24))(v26, v25)) {
    TTRTemplatesListViewModel.init(templates:)();
  }
  else {
    TTRTemplatesListViewModel.init(isPlaceholder:)();
  }
  uint64_t v27 = a4 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_optimisticApply;
  swift_beginAccess();
  sub_1005087B4(v27, (uint64_t)v10);
  uint64_t v28 = TTRTemplatesListViewModel.applying(_:)();
  LOBYTE(v27) = v29;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100508818((uint64_t)v10);
  swift_release();

  sub_100038CD8((uint64_t)v36);
  *(void *)(a4 + 64) = v28;
  *(unsigned char *)(a4 + 72) = v27 & 1;
  *(void *)(a4 + 80) = v31;
  *(void *)(a4 + 88) = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a4;
}

void sub_100508170(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10003B754(&qword_10079F780);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_100507AD0(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_100028140();
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      v3[2] = v24;
LABEL_12:
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100028140();
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_23:

        uint64_t v5 = v43;
        goto LABEL_24;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_23;
        }
      }
      uint64_t v5 = v43;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_39;
    }
    v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

id sub_1005084A8(char a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v27 = a3;
  char v6 = a1 & 1;
  id v7 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithDebugIdentifier:v8, v27];

  type metadata accessor for TTRInteractorAsyncEditsCommitter();
  swift_allocObject();
  type metadata accessor for TTRTemplatesListInteractor();
  swift_allocObject();
  BOOL v10 = (void *)TTRTemplatesListInteractor.init(account:undoManager:committer:)();
  uint64_t v11 = type metadata accessor for TTRITemplatesListRouter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTRIActivityAlertRouterCapability();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = 0;
  *(void *)(v12 + 32) = v13;
  v28[3] = v11;
  v28[4] = &off_1007556D8;
  v28[0] = v12;
  type metadata accessor for TTRITemplatesListPresenter();
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = sub_100038E88((uint64_t)v28, v11);
  __chkstk_darwin(v15);
  uint64_t v17 = (void *)((char *)&v28[-1] - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v18 + 16))(v17);
  uint64_t v19 = *v17;
  id v20 = v9;
  id v21 = a2;
  swift_retain();
  swift_retain();
  uint64_t v22 = sub_100507D84(v10, v19, v20, v14);
  sub_100038CD8((uint64_t)v28);
  uint64_t v23 = objc_allocWithZone((Class)type metadata accessor for TTRITemplatesListViewController());
  id v24 = v20;
  swift_retain();
  id v25 = sub_100507CAC(v6, v22, (uint64_t)v24, v23);
  swift_beginAccess();
  v10[3] = &off_1007400C0;
  swift_unknownObjectWeakAssign();
  *(void *)(v22 + 24) = &off_1007432B8;
  swift_unknownObjectWeakAssign();
  *(void *)(v22 + 40) = a4;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  TTRTemplatesListInteractor.start()();
  swift_release();
  swift_release();

  return v25;
}

uint64_t sub_1005087B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100508818(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRTemplatesListViewModel.OptimisticApply();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100508874@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754(&qword_1007A2DA8);
  __chkstk_darwin(v6 - 8);
  NSString v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellConfigurationState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)v3;
  uint64_t v14 = *(void *)(v3 + 8);
  char v15 = *(unsigned char *)(v3 + 16);
  int v29 = *(unsigned __int8 *)(v3 + 17);
  char v34 = *(unsigned char *)(v3 + 18);
  uint64_t v28 = *(void *)(v3 + 24);
  uint64_t v16 = *(void *)(v3 + 32);
  uint64_t v31 = *(void *)(v3 + 40);
  uint64_t v32 = v16;
  uint64_t v30 = *(void *)(v3 + 48);
  sub_1000145EC(a1, (uint64_t)v33);
  sub_10050AB9C(v3);
  sub_10003B754(&qword_1007A2DB0);
  int v17 = swift_dynamicCast();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (!v17)
  {
    v18(v8, 1, 1, v9);
    char v20 = v29;
    uint64_t v21 = v28;
    goto LABEL_5;
  }
  v18(v8, 0, 1, v9);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  char v20 = v29;
  uint64_t v21 = v28;
  if (v19 == 1)
  {
LABEL_5:
    uint64_t result = sub_10003B6F8((uint64_t)v8, &qword_1007A2DA8);
    char v24 = v34;
    goto LABEL_6;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
  char v22 = UICellConfigurationState.isEditing.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v24 = v22 ^ 1;
LABEL_6:
  *(void *)a2 = v13;
  *(void *)(a2 + 8) = v14;
  *(unsigned char *)(a2 + 16) = v15;
  *(unsigned char *)(a2 + 17) = v20;
  *(unsigned char *)(a2 + 18) = v24 & 1;
  uint64_t v25 = v32;
  *(void *)(a2 + 24) = v21;
  *(void *)(a2 + 32) = v25;
  uint64_t v26 = v30;
  *(void *)(a2 + 40) = v31;
  *(void *)(a2 + 48) = v26;
  return result;
}

uint64_t sub_100508AF4()
{
  long long v1 = *(_OWORD *)(v0 + 16);
  v6[0] = *(_OWORD *)v0;
  v6[1] = v1;
  v6[2] = *(_OWORD *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 48);
  id v2 = objc_allocWithZone((Class)type metadata accessor for CompletedCellContentView());
  sub_10050AB9C((uint64_t)v6);
  sub_100508BF8((uint64_t)v6);
  uint64_t v4 = v3;
  sub_10050AD14((unint64_t *)&qword_1007A2DB8, (void (*)(uint64_t))type metadata accessor for CompletedCellContentView);
  return v4;
}

double sub_100508B90@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = v2[1];
  long long v10 = *v2;
  long long v11 = v4;
  long long v12 = v2[2];
  uint64_t v13 = *((void *)v2 + 6);
  sub_100508874(a1, (uint64_t)v7);
  long long v5 = v7[1];
  *(_OWORD *)a2 = v7[0];
  *(_OWORD *)(a2 + 16) = v5;
  double result = *(double *)&v8;
  *(_OWORD *)(a2 + 32) = v8;
  *(void *)(a2 + 48) = v9;
  return result;
}

void sub_100508BF8(uint64_t a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10003B754(&qword_10078ED00);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v77 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v75 = (char *)&v74 - v7;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v74 - v8;
  long long v10 = &v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration];
  long long v11 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)long long v10 = *(_OWORD *)a1;
  *((_OWORD *)v10 + 1) = v11;
  *((_OWORD *)v10 + 2) = *(_OWORD *)(a1 + 32);
  *((void *)v10 + 6) = *(void *)(a1 + 48);
  id v12 = objc_allocWithZone((Class)UILabel);
  uint64_t v79 = v1;
  uint64_t v81 = a1;
  sub_10050AB9C(a1);
  id v13 = [v12 init];
  id v14 = [objc_allocWithZone((Class)UILabel) init];
  static TTRLocalizableStrings.Common.dotSeparator.getter();
  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setText:v15];

  uint64_t v16 = (void *)sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  int v17 = self;
  id v18 = v13;
  id v19 = v14;
  char v20 = (void *)static UIFont.roundedBodyFont.getter();
  [v18 setFont:v20];

  id v21 = [v17 secondaryLabelColor];
  [v18 setTextColor:v21];

  [v18 setAdjustsFontForContentSizeCategory:1];
  id v22 = v19;
  id v82 = v16;
  uint64_t v23 = (uint64_t)v75;
  char v24 = (void *)static UIFont.roundedBodyFont.getter();
  uint64_t v25 = v22;
  [v22 setFont:v24];

  id v26 = [v17 secondaryLabelColor];
  [v22 setTextColor:v26];

  [v22 setAdjustsFontForContentSizeCategory:1];
  id v78 = v18;

  id v76 = self;
  uint64_t v27 = (char *)[v76 buttonWithType:1];
  static TTRLocalizableStrings.RemindersList.clearCompletedButtonTitle.getter();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v27 setTitle:v28 forStates:0];

  static UIButton.Configuration.plain()();
  uint64_t v29 = type metadata accessor for UIButton.Configuration();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = *(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56);
  v31(v9, 0, 1, v29);
  UIButton.configuration.setter();
  UIButton.configuration.getter();
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
  if (v32(v23, 1, v29))
  {
    sub_10050ABF8(v23, (uint64_t)v9);
    UIButton.configuration.setter();
    sub_10003B6F8(v23, &qword_10078ED00);
  }
  else
  {
    UIButton.Configuration.contentInsets.setter();
    UIButton.configuration.setter();
  }
  id v33 = [v27 titleLabel];
  if (v33)
  {
    char v34 = v33;
    char v35 = (void *)static UIFont.roundedBodyFont.getter();
    [v34 setFont:v35];
  }
  id v36 = [v27 titleLabel];
  [v36 setAdjustsFontSizeToFitWidth:1];

  [v27 setShowsMenuAsPrimaryAction:1];
  id v37 = [v76 buttonWithType:1];
  static UIButton.Configuration.plain()();
  v31(v9, 0, 1, v29);
  UIButton.configuration.setter();
  uint64_t v38 = (uint64_t)v77;
  UIButton.configuration.getter();
  if (v32(v38, 1, v29))
  {
    sub_10050ABF8(v38, (uint64_t)v9);
    UIButton.configuration.setter();
    sub_10003B6F8(v38, &qword_10078ED00);
  }
  else
  {
    UIButton.Configuration.contentInsets.setter();
    UIButton.configuration.setter();
  }
  uint64_t v77 = v27;
  id v39 = [v37 titleLabel];
  if (v39)
  {
    uint64_t v40 = v39;
    unint64_t v41 = (void *)static UIFont.roundedBodyFont.getter();
    [v40 setFont:v41];
  }
  id v42 = [v37 titleLabel];
  [v42 setAdjustsFontSizeToFitWidth:1];

  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  sub_10003B754((uint64_t *)&unk_1007A3EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100671360;
  id v44 = v78;
  *(void *)(inited + 32) = v78;
  *(_DWORD *)(inited + 40) = 1132068864;
  *(void *)(inited + 48) = v25;
  type metadata accessor for UILayoutPriority(0);
  LODWORD(aBlock) = 1144750080;
  int v91 = 1065353216;
  id v82 = (id)sub_10050AD14((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
  id v45 = v44;
  id v46 = v25;
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  id v47 = v77;
  *(void *)(inited + 64) = v77;
  *(_DWORD *)(inited + 72) = 1144750080;
  *(void *)(inited + 80) = v37;
  *(_DWORD *)(inited + 88) = 1144750080;
  id v48 = v47;
  id v49 = v37;
  static UIView.setContentPriorities(_:for:)();
  swift_setDeallocating();
  sub_10003B754((uint64_t *)&unk_10078E650);
  swift_arrayDestroy();
  int v50 = v79;
  *(void *)&v79[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_completedCountLabel] = v45;
  *(void *)&v50[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_separatorLabel] = v46;
  *(void *)&v50[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_clearButton] = v48;
  *(void *)&v50[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton] = v49;
  id v51 = v45;
  id v52 = v46;
  id v53 = v48;
  id v54 = v49;

  v90.receiver = v50;
  v90.super_class = ObjectType;
  id v55 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  id v56 = objc_allocWithZone((Class)UIView);
  id v57 = v55;
  id v58 = [v56 init];
  int v91 = 1132068864;
  int v89 = 1065353216;
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v59) = aBlock;
  [v58 setContentHuggingPriority:0 forAxis:v59];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v60 = swift_allocObject();
  *(_OWORD *)(v60 + 16) = xmmword_100671100;
  *(void *)(v60 + 32) = v51;
  *(void *)(v60 + 40) = v52;
  *(void *)(v60 + 48) = v53;
  *(void *)(v60 + 56) = v58;
  *(void *)(v60 + 64) = v54;
  aBlock = (void **)v60;
  specialized Array._endMutation()();
  id v61 = v57;
  id v78 = v51;
  uint64_t v77 = (char *)v52;
  uint64_t v62 = (objc_class *)v53;
  uint64_t ObjectType = v62;
  uint64_t v63 = (char *)v54;
  uint64_t v79 = v63;
  uint64_t v64 = (char *)v61;
  id v82 = v58;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v64 setArrangedSubviews:isa];

  [v64 setAxis:0];
  [v64 setSpacing:5.0];
  [v64 setAlignment:2];
  [v64 setDistribution:0];
  [v64 setLayoutMarginsRelativeArrangement:1];
  [v64 setPreservesSuperviewLayoutMargins:1];
  [v64 setDebugBoundingBoxesEnabled:0];
  uint64_t v66 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v87 = sub_10050AC98;
  uint64_t v88 = v66;
  aBlock = _NSConcreteStackBlock;
  uint64_t v84 = 1107296256;
  uint64_t v85 = sub_1000A2290;
  uint64_t v86 = &unk_10074EC08;
  uint64_t v67 = _Block_copy(&aBlock);
  swift_release();
  [(objc_class *)v62 _setMenuProvider:v67];
  _Block_release(v67);
  [v63 addTarget:v64 action:"showHideAction:" forControlEvents:0x2000];
  uint64_t v68 = *(void *)&v64[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 24];
  uint64_t v69 = *(void *)&v64[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                      + 40];
  uint64_t v70 = swift_allocObject();
  *(void *)(v70 + 16) = v64;
  uint64_t v71 = swift_allocObject();
  *(void *)(v71 + 16) = sub_10050ACA0;
  *(void *)(v71 + 24) = v70;
  id v87 = sub_1000218B0;
  uint64_t v88 = v71;
  aBlock = _NSConcreteStackBlock;
  uint64_t v84 = 1107296256;
  uint64_t v85 = sub_100021888;
  uint64_t v86 = &unk_10074EC80;
  uint64_t v72 = _Block_copy(&aBlock);
  uint64_t v73 = v64;
  swift_bridgeObjectRetain();
  sub_10006C140(v68);
  sub_10006C140(v69);
  swift_retain();
  swift_release();
  [v73 performBatchUpdates:v72];
  _Block_release(v72);
  LOBYTE(v72) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  sub_10050ACB8(v81);
  swift_bridgeObjectRelease();

  sub_1000499C4(v68);
  sub_1000499C4(v69);

  if (v72)
  {
    __break(1u);
  }
  else
  {
  }
}

void *sub_100509868()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  long long v1 = Strong;
  if (Strong)
  {
    id v2 = *(uint64_t (**)(void))&Strong[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                                    + 40];
    if (v2)
    {
      sub_10006C140(*(void *)&Strong[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                                     + 40]);

      long long v1 = (void *)v2();
      sub_1000499C4((uint64_t)v2);
    }
    else
    {

      return 0;
    }
  }
  return v1;
}

uint64_t sub_1005099D8()
{
  sub_10003B754((uint64_t *)&unk_1007938C0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10066C6F0;
  id v2 = *(void **)(v0
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_completedCountLabel);
  *(void *)(v1 + 56) = sub_1000368FC(0, &qword_100787808);
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = v0
     + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                + 16))
  {
    uint64_t v4 = *(void **)(v0
                  + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_clearButton);
    uint64_t v14 = sub_1000368FC(0, &qword_100794990);
    *(void *)&long long v13 = v4;
    id v5 = v2;
    id v6 = v4;
    uint64_t v1 = (uint64_t)sub_1005714BC((void *)1, 2, 1, (void *)v1);
    *(void *)(v1 + 16) = 2;
    sub_100038E1C(&v13, (_OWORD *)(v1 + 64));
    if (!*(unsigned char *)(v3 + 17)) {
      return v1;
    }
  }
  else
  {
    id v7 = v2;
    if (!*(unsigned char *)(v3 + 17)) {
      return v1;
    }
  }
  uint64_t v8 = *(void **)(v0
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton);
  uint64_t v14 = sub_1000368FC(0, &qword_100794990);
  *(void *)&long long v13 = v8;
  unint64_t v9 = *(void *)(v1 + 16);
  unint64_t v10 = *(void *)(v1 + 24);
  id v11 = v8;
  if (v9 >= v10 >> 1) {
    uint64_t v1 = (uint64_t)sub_1005714BC((void *)(v10 > 1), v9 + 1, 1, (void *)v1);
  }
  *(void *)(v1 + 16) = v9 + 1;
  sub_100038E1C(&v13, (_OWORD *)(v1 + 32 * v9 + 32));
  return v1;
}

uint64_t sub_100509B68(uint64_t a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration];
  int v4 = v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                         + 16];
  int v5 = v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                         + 17];
  int v6 = v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                         + 18];
  uint64_t result = *(void *)a1;
  BOOL v8 = result == *(void *)&v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration]
    && *(void *)(a1 + 8) == *(void *)&v1[OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                                           + 8];
  if (!v8 && (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) == 0)
    || (*(unsigned __int8 *)(a1 + 16) == v4 ? (BOOL v9 = *(unsigned __int8 *)(a1 + 17) == v5) : (BOOL v9 = 0),
        !v9 || v6 != (*(unsigned char *)(a1 + 18) & 1)))
  {
    uint64_t v10 = *((void *)v3 + 3);
    uint64_t v11 = *((void *)v3 + 5);
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v1;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_10050AFD4;
    *(void *)(v13 + 24) = v12;
    v16[4] = sub_1000499FC;
    v16[5] = v13;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 1107296256;
    long long v16[2] = sub_100021888;
    v16[3] = &unk_10074ED20;
    uint64_t v14 = _Block_copy(v16);
    swift_bridgeObjectRetain();
    sub_10006C140(v10);
    sub_10006C140(v11);
    NSString v15 = v1;
    swift_retain();
    swift_release();
    [v15 performBatchUpdates:v14];
    _Block_release(v14);
    LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_1000499C4(v10);
    uint64_t result = sub_1000499C4(v11);
    if (v15) {
      __break(1u);
    }
  }
  return result;
}

id sub_100509D7C(uint64_t a1)
{
  id v2 = *(void **)(a1
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_completedCountLabel);
  uint64_t v3 = (unsigned char *)(a1
               + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration);
  swift_bridgeObjectRetain();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v4];

  if (!v3[16])
  {
    uint64_t v5 = 1;
    goto LABEL_5;
  }
  if (v3[16] == 1)
  {
    uint64_t v5 = 0;
LABEL_5:
    uint64_t v6 = v3[18];
    goto LABEL_7;
  }
  uint64_t v6 = 0;
  uint64_t v5 = 0;
LABEL_7:
  [*(id *)(a1 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_separatorLabel) setHidden:v5];
  id v7 = *(void **)(a1
                + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_clearButton);
  [v7 setHidden:v5];
  if ((v5 & 1) == 0) {
    [v7 setEnabled:v6];
  }
  if (v3[17])
  {
    BOOL v8 = *(void **)(a1
                  + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton);
    if (v3[17] == 1) {
      static TTRLocalizableStrings.showButtonTitle.getter();
    }
    else {
      static TTRLocalizableStrings.hideButtonTitle.getter();
    }
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v8 setTitle:v11 forState:0];

    BOOL v9 = v8;
    uint64_t v10 = 0;
  }
  else
  {
    BOOL v9 = *(void **)(a1
                  + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_showHideButton);
    uint64_t v10 = 1;
  }

  return [v9 setHidden:v10];
}

uint64_t type metadata accessor for CompletedCellContentView()
{
  return self;
}

uint64_t destroy for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24)) {
    uint64_t result = swift_release();
  }
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_WORD *)(a1 + 17) = *(_WORD *)(a2 + 17);
  uint64_t v6 = (_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v7;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  uint64_t v8 = *(void *)(a2 + 40);
  if (v8)
  {
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  }
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 24);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  uint64_t v5 = *(void *)(a2 + 24);
  if (v4)
  {
    if (v5)
    {
      uint64_t v6 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v6;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v7 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v7;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  uint64_t v8 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v8)
    {
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v8;
      *(void *)(a1 + 48) = v10;
      swift_retain();
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v8)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v9 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 24);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(unsigned char *)(a1 + 18) = *(unsigned char *)(a2 + 18);
  if (v6)
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 32);
      *(void *)(a1 + 24) = v5;
      *(void *)(a1 + 32) = v7;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v5)
  {
    uint64_t v8 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v5;
    *(void *)(a1 + 32) = v8;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
LABEL_8:
  uint64_t v9 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v9)
    {
      uint64_t v11 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v9;
      *(void *)(a1 + 48) = v11;
      return a1;
    }
LABEL_14:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    return a1;
  }
  if (!v9)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v10 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListCompletedCellContentConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListCompletedCellContentConfiguration()
{
  return &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
}

uint64_t sub_10050A478(uint64_t a1)
{
  sub_1000145EC(a1, (uint64_t)v15);
  sub_10003B754(&qword_10078DDD8);
  if (swift_dynamicCast())
  {
    long long v3 = v16;
    __int16 v4 = v17;
    char v5 = BYTE2(v17);
    uint64_t v6 = *((void *)&v17 + 1);
    long long v8 = v18;
    uint64_t v7 = v19;
    uint64_t v9 = v1
       + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
    long long v10 = *(_OWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 16);
    long long v16 = *(_OWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration);
    long long v17 = v10;
    long long v18 = *(_OWORD *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 32);
    uint64_t v11 = *(void *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 40);
    uint64_t v19 = *(void *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 48);
    uint64_t v14 = v11;
    uint64_t v12 = *(void *)(v1
                    + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                    + 24);
    *(_OWORD *)uint64_t v9 = v3;
    *(_WORD *)(v9 + 16) = v4;
    *(unsigned char *)(v9 + 18) = v5;
    *(void *)(v9 + 24) = v6;
    *(_OWORD *)(v9 + 32) = v8;
    *(void *)(v9 + 48) = v7;
    sub_10050AB9C((uint64_t)&v16);
    swift_bridgeObjectRetain();
    sub_10006C140(v6);
    sub_10006C140(*((uint64_t *)&v8 + 1));
    swift_bridgeObjectRelease();
    sub_1000499C4(v12);
    sub_1000499C4(v14);
    sub_100509B68((uint64_t)&v16);
    swift_bridgeObjectRelease();
    sub_1000499C4(v6);
    sub_1000499C4(*((uint64_t *)&v8 + 1));
    sub_10050ACB8((uint64_t)&v16);
  }
  return sub_100038CD8(a1);
}

void (*sub_10050A5D0(void *a1))(void **a1, char a2)
{
  long long v3 = malloc(0x130uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
  v3[36] = v1;
  v3[37] = v4;
  char v5 = (uint64_t *)(v1 + v4);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  __int16 v8 = *((_WORD *)v5 + 8);
  char v9 = *((unsigned char *)v5 + 18);
  uint64_t v10 = v5[3];
  uint64_t v11 = v5[4];
  uint64_t v12 = v5[5];
  uint64_t v13 = v5[6];
  v3[29] = &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
  v3[30] = sub_100397FD4();
  uint64_t v14 = swift_allocObject();
  v3[26] = v14;
  *(void *)(v14 + 16) = v7;
  *(void *)(v14 + 24) = v6;
  *(_WORD *)(v14 + 32) = v8;
  *(unsigned char *)(v14 + 34) = v9;
  *(void *)(v14 + 40) = v10;
  *(void *)(v14 + 48) = v11;
  *(void *)(v14 + 56) = v12;
  *(void *)(v14 + 64) = v13;
  swift_bridgeObjectRetain();
  sub_10006C140(v10);
  sub_10006C140(v12);
  return sub_10050A6C0;
}

void sub_10050A6C0(void **a1, char a2)
{
  long long v3 = (char *)*a1;
  uint64_t v4 = (uint64_t)*a1 + 168;
  uint64_t v5 = (uint64_t)*a1 + 208;
  sub_1000145EC(v5, v4);
  if (a2)
  {
    sub_1000145EC(v4, (uint64_t)(v3 + 248));
    sub_10003B754(&qword_10078DDD8);
    if (swift_dynamicCast())
    {
      uint64_t v6 = (long long *)(*((void *)v3 + 36) + *((void *)v3 + 37));
      uint64_t v7 = *((void *)v3 + 14);
      uint64_t v8 = *((void *)v3 + 15);
      __int16 v9 = *((_WORD *)v3 + 64);
      char v10 = v3[130];
      uint64_t v11 = *((void *)v3 + 17);
      uint64_t v12 = *((void *)v3 + 18);
      uint64_t v13 = *((void *)v3 + 19);
      uint64_t v14 = *((void *)v3 + 20);
      long long v16 = v6[1];
      long long v15 = v6[2];
      long long v17 = *v6;
      *((void *)v3 + 6) = *((void *)v6 + 6);
      *((_OWORD *)v3 + 1) = v16;
      *((_OWORD *)v3 + 2) = v15;
      *(_OWORD *)long long v3 = v17;
      uint64_t v30 = *((void *)v6 + 3);
      uint64_t v32 = *((void *)v6 + 5);
      *(void *)uint64_t v6 = v7;
      *((void *)v6 + 1) = v8;
      *((_WORD *)v6 + 8) = v9;
      *((unsigned char *)v6 + 18) = v10;
      *((void *)v6 + 3) = v11;
      *((void *)v6 + 4) = v12;
      *((void *)v6 + 5) = v13;
      *((void *)v6 + 6) = v14;
      sub_10050AB9C((uint64_t)v3);
      swift_bridgeObjectRetain();
      sub_10006C140(v11);
      sub_10006C140(v13);
      swift_bridgeObjectRelease();
      sub_1000499C4(v30);
      sub_1000499C4(v32);
      sub_100509B68((uint64_t)v3);
      swift_bridgeObjectRelease();
      sub_1000499C4(v11);
      sub_1000499C4(v13);
      sub_10050ACB8((uint64_t)v3);
    }
    sub_100038CD8(v4);
  }
  else
  {
    sub_10003B754(&qword_10078DDD8);
    if (swift_dynamicCast())
    {
      long long v18 = (long long *)(*((void *)v3 + 36) + *((void *)v3 + 37));
      uint64_t v19 = *((void *)v3 + 14);
      uint64_t v20 = *((void *)v3 + 15);
      __int16 v21 = *((_WORD *)v3 + 64);
      char v22 = v3[130];
      uint64_t v23 = *((void *)v3 + 17);
      uint64_t v24 = *((void *)v3 + 18);
      uint64_t v25 = *((void *)v3 + 19);
      uint64_t v26 = *((void *)v3 + 20);
      long long v28 = v18[1];
      long long v27 = v18[2];
      long long v29 = *v18;
      *((void *)v3 + 13) = *((void *)v18 + 6);
      *(_OWORD *)(v3 + 72) = v28;
      *(_OWORD *)(v3 + 88) = v27;
      *(_OWORD *)(v3 + 56) = v29;
      uint64_t v31 = *((void *)v18 + 3);
      uint64_t v33 = *((void *)v18 + 5);
      *(void *)long long v18 = v19;
      *((void *)v18 + 1) = v20;
      *((_WORD *)v18 + 8) = v21;
      *((unsigned char *)v18 + 18) = v22;
      *((void *)v18 + 3) = v23;
      *((void *)v18 + 4) = v24;
      *((void *)v18 + 5) = v25;
      *((void *)v18 + 6) = v26;
      sub_10050AB9C((uint64_t)(v3 + 56));
      swift_bridgeObjectRetain();
      sub_10006C140(v23);
      sub_10006C140(v25);
      swift_bridgeObjectRelease();
      sub_1000499C4(v31);
      sub_1000499C4(v33);
      sub_100509B68((uint64_t)(v3 + 56));
      swift_bridgeObjectRelease();
      sub_1000499C4(v23);
      sub_1000499C4(v25);
      sub_10050ACB8((uint64_t)(v3 + 56));
    }
  }
  sub_100038CD8(v5);

  free(v3);
}

uint64_t sub_10050A964@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1
     + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration;
  uint64_t v5 = *(void *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration);
  uint64_t v4 = *(void *)(v1
                 + OBJC_IVAR____TtC9RemindersP33_C60407860759646D296FA14F7D6D1E3324CompletedCellContentView_internalConfiguration
                 + 8);
  __int16 v6 = *(_WORD *)(v3 + 16);
  char v7 = *(unsigned char *)(v3 + 18);
  uint64_t v8 = *(void *)(v3 + 24);
  uint64_t v9 = *(void *)(v3 + 32);
  uint64_t v10 = *(void *)(v3 + 40);
  uint64_t v11 = *(void *)(v3 + 48);
  a1[3] = (uint64_t)&type metadata for TTRIRemindersListCompletedCellContentConfiguration;
  a1[4] = sub_100397FD4();
  uint64_t v12 = swift_allocObject();
  *a1 = v12;
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = v4;
  *(_WORD *)(v12 + 32) = v6;
  *(unsigned char *)(v12 + 34) = v7;
  *(void *)(v12 + 40) = v8;
  *(void *)(v12 + 48) = v9;
  *(void *)(v12 + 56) = v10;
  *(void *)(v12 + 64) = v11;
  swift_bridgeObjectRetain();
  sub_10006C140(v8);

  return sub_10006C140(v10);
}

void (*sub_10050AA34(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_10050A5D0(v2);
  return sub_1001157EC;
}

uint64_t sub_10050AA8C(uint64_t a1)
{
  sub_1000145EC(a1, (uint64_t)v5);
  sub_10003B754(&qword_10078DDD8);
  uint64_t v1 = swift_dynamicCast();
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_1000499C4(v3);
    sub_1000499C4(v4);
  }
  return v1;
}

double sub_10050AB24@<D0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (a1 > 0) {
    int v4 = 1;
  }
  else {
    int v4 = 2;
  }
  int v5 = v4 & (a2 << 15 >> 31);
  if (a2) {
    int v6 = 2;
  }
  else {
    int v6 = 1;
  }
  int v7 = v6 & (a2 << 23 >> 31);
  *(void *)a3 = TTRRemindersListViewModel.CompletedRemindersState.countText.getter();
  *(void *)(a3 + 8) = v8;
  *(unsigned char *)(a3 + 16) = v5;
  *(unsigned char *)(a3 + 17) = v7;
  *(unsigned char *)(a3 + 18) = 1;
  double result = 0.0;
  *(_OWORD *)(a3 + 24) = 0u;
  *(_OWORD *)(a3 + 40) = 0u;
  return result;
}

uint64_t sub_10050AB9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  sub_10006C140(v2);
  sub_10006C140(v3);
  return a1;
}

uint64_t sub_10050ABF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078ED00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050AC60()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10050AC98()
{
  return sub_100509868();
}

id sub_10050ACA0()
{
  return sub_100509D7C(*(void *)(v0 + 16));
}

uint64_t sub_10050ACA8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10050ACB8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRelease();
  sub_1000499C4(v2);
  sub_1000499C4(v3);
  return a1;
}

uint64_t sub_10050AD14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10050AD5C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10050ADB4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050ADEC()
{
  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for TTRIRemindersListCompletedCellContentConfiguration.ShowHideButtonState()
{
  return &type metadata for TTRIRemindersListCompletedCellContentConfiguration.ShowHideButtonState;
}

unsigned char *_s9Reminders50TTRIRemindersListCompletedCellContentConfigurationV16ClearButtonStateOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10050AEDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListCompletedCellContentConfiguration.ClearButtonState()
{
  return &type metadata for TTRIRemindersListCompletedCellContentConfiguration.ClearButtonState;
}

unint64_t sub_10050AF18()
{
  unint64_t result = qword_1007A2DC0;
  if (!qword_1007A2DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2DC0);
  }
  return result;
}

unint64_t sub_10050AF70()
{
  unint64_t result = qword_1007A2DC8;
  if (!qword_1007A2DC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2DC8);
  }
  return result;
}

id sub_10050AFDC(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v109 = a4;
  id v106 = a3;
  uint64_t v107 = a1;
  int v96 = (void **)a2;
  uint64_t v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v108 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v97 = (uint64_t *)((char *)&v93 - v7);
  uint64_t v100 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v100);
  uint64_t v111 = (uint64_t)&v93 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v99);
  uint64_t v98 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v10 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v12 = (char *)&v93 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v15 = (char *)&v93 - v14;
  uint64_t v16 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v16 - 8);
  uint64_t v94 = (void **)((char *)&v93 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  __int16 v21 = (char *)&v93 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v93 - v23;
  sub_10003B754(&qword_100789180);
  uint64_t v25 = (_OWORD *)swift_allocObject();
  v25[1] = xmmword_10066C6F0;
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
  v116[0] = v25;
  sub_1000A13DC();
  sub_10003B754(&qword_100789188);
  sub_1000A1434();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v95 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  uint64_t v26 = v96;
  long long v27 = v94;
  sub_10035A878((uint64_t)v96, (uint64_t)v94, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  uint64_t v103 = v24;
  uint64_t v104 = v19;
  long long v28 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v105 = v18;
  v28(v21, v24, v18);
  uint64_t v29 = (uint64_t)v27;
  sub_100055D48(v27, (uint64_t)v21, 0, (uint64_t)v116);
  unint64_t ObjectType = sub_10050BC5C();
  *(void *)&long long v114 = &protocol witness table for REMTemplate;
  v112[0] = v106;
  id v30 = v106;
  static REMRemindersListDataView.SortingStyle.fallbackForTemplate.getter();
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
  uint64_t v31 = v110;
  long long v101 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v102 = v10 + 8;
  v101(v12, v110);
  sub_10050BC9C((uint64_t)v112);
  uint64_t v32 = *v26;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  id v106 = v15;
  v33(v12, v15, v31);
  type metadata accessor for TTRShowTemplateWithSectionsDataModelSource();
  swift_allocObject();
  id v34 = v30;
  id v35 = v32;
  uint64_t v36 = TTRShowTemplateWithSectionsDataModelSource.init(store:template:listRepresentation:countCompleted:sortingStyle:canChangeSortingStyle:)();
  id v37 = v116[0];
  uint64_t v38 = v98;
  *uint64_t v98 = 1;
  uint64_t v39 = (uint64_t)v38;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTRShowTemplateViewModelSource();
  uint64_t v40 = swift_allocObject();
  swift_retain();
  uint64_t v41 = sub_10050BCFC(v36, (uint64_t)v37, v39, v40);
  sub_10035A878((uint64_t)v26, v29, v95);
  sub_100057134((uint64_t)v116, (uint64_t)v112);
  swift_retain();
  sub_100056B24(v29, (uint64_t)v112, v41, (uint64_t)&off_1007512D8, v111);
  id v42 = v97;
  sub_100056CAC((uint64_t)v97);
  uint64_t v98 = (unsigned char *)type metadata accessor for TTRIShowTemplatePresenter();
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_isConfirmingUpdate) = 0;
  id v44 = (uint64_t *)(v43 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_dataModelSource);
  uint64_t *v44 = v36;
  v44[1] = (uint64_t)&protocol witness table for TTRShowTemplateWithSectionsDataModelSource;
  uint64_t v46 = *v42;
  uint64_t v45 = v42[1];
  unint64_t ObjectType = swift_getObjectType();
  *(void *)&long long v114 = *(void *)(v45 + 16);
  v112[0] = v46;
  type metadata accessor for TTRRemoveTemplatePresenterCapability();
  swift_allocObject();
  *(void *)(v43 + OBJC_IVAR____TtC9Reminders25TTRIShowTemplatePresenter_removeTemplateCapability) = TTRRemoveTemplatePresenterCapability.init(interactor:)();
  uint64_t v47 = (uint64_t)v108;
  sub_10035A878((uint64_t)v42, (uint64_t)v108, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain();
  uint64_t v48 = v109;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v49 = sub_100358DD4(v47, v48, v43);
  sub_1002F21D4((uint64_t)v42, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v50 = *(void *)(v49 + 144);
  uint64_t v51 = swift_getObjectType();
  id v52 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 104);
  swift_retain();
  uint64_t v53 = v52(v51, v50);
  uint64_t v99 = v41;
  if (v53)
  {
    uint64_t v55 = v54;
    uint64_t v56 = swift_getObjectType();
    LOBYTE(v55) = (*(uint64_t (**)(uint64_t, uint64_t))(v55 + 16))(v56, v55);
    swift_release();
    swift_unknownObjectRelease();
    char v57 = v55 & 1;
  }
  else
  {
    swift_release();
    char v57 = 0;
  }
  id v58 = sub_1001D0C84(v57, v49);
  int v96 = (void **)v59;
  uint64_t v61 = v60;
  uint64_t v63 = v62;
  long long v97 = (uint64_t *)swift_getObjectType();
  *(void *)(v49 + 24) = *(void *)(v63 + 8);
  uint64_t v95 = (uint64_t (*)(uint64_t))(v49 + 16);
  uint64_t v109 = v61;
  swift_unknownObjectWeakAssign();
  uint64_t v64 = *(void *)(v49 + 144);
  uint64_t v65 = swift_getObjectType();
  uint64_t v66 = *(uint64_t (**)(uint64_t, uint64_t))(v64 + 104);
  swift_retain_n();
  uint64_t v108 = v58;
  if (v66(v65, v64))
  {
    uint64_t v68 = v67;
    uint64_t v69 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v68 + 16))(v69, v68);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v70 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  id v71 = v108;
  uint64_t v72 = (void *)sub_10035A06C(v49);
  swift_release();

  uint64_t v73 = *(void (**)(void *, _UNKNOWN **, uint64_t *, uint64_t))(v63 + 32);
  id v74 = v72;
  v73(v72, &off_1007464D0, v97, v63);
  uint64_t v75 = (char *)v116[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v75 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  id v76 = (char *)v116[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v76 + 1) = &protocol witness table for TTRShowTemplateWithSectionsDataModelSource;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v77 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v36 + 384);
  uint64_t v78 = swift_retain();
  v77(v78, &off_100750250);
  swift_retain();
  uint64_t v79 = swift_retain();
  sub_1005B1F9C(v79, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  *(void *)(*(void *)(v111 + *(int *)(v100 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v117, (uint64_t)v112);
  long long v114 = v118;
  long long v115 = v119;
  *(void *)(v118 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v112);
  sub_100038DC0((uint64_t)&v120, (uint64_t)v112);
  uint64_t v80 = *((void *)&v121 + 1);
  long long v114 = v121;
  uint64_t v81 = swift_getObjectType();
  id v82 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v80 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v82(v49, &off_10073CA90, v81, v80);
  swift_unknownObjectRelease();
  uint64_t v83 = sub_100038CD8((uint64_t)v112);
  (*(void (**)(uint64_t))(*(void *)v36 + 456))(v83);
  id v84 = objc_allocWithZone((Class)UINavigationController);
  swift_retain_n();
  id v85 = [v84 initWithRootViewController:v74];
  id v86 = [v85 navigationBar];
  [v86 setPrefersLargeTitles:1];

  id v87 = [v85 presentationController];
  if (v87)
  {
    uint64_t v88 = v87;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v89 = *(void *)(v49 + 24);
      uint64_t v90 = swift_getObjectType();
      (*(void (**)(void *, uint64_t, uint64_t))(v89 + 96))(v88, v90, v89);
      swift_unknownObjectRelease();
    }
    *(unsigned char *)(v49 + 520) = 1;
    swift_release_n();
  }
  else
  {
    swift_release_n();
  }
  int v91 = v107;
  v107[3] = (uint64_t)v98;
  v91[4] = (uint64_t)&off_10073C640;
  uint64_t *v91 = v49;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v111, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  v101((char *)v106, v110);
  sub_100057B44(v116);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v103, v105);
  return v85;
}

id TTRIShowTemplateAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTemplateAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowTemplateAssembly()
{
  return self;
}

id TTRIShowTemplateAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTemplateAssembly();
  return [super dealloc];
}

unint64_t sub_10050BC5C()
{
  unint64_t result = qword_10078D3B8;
  if (!qword_10078D3B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078D3B8);
  }
  return result;
}

uint64_t sub_10050BC9C(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100787480);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10050BCFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation) = 0;
  uint64_t v11 = a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
  *(void *)uint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) = 1;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  sub_10035A878(a3, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  uint64_t v12 = sub_100359DC4(a1, a2, (uint64_t)v10, a4);
  sub_1002F21D4(a3, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  return v12;
}

char *sub_10050BE2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v5 = objc_allocWithZone((Class)UILabel);
  uint64_t v6 = v3;
  id v7 = [v5 init];
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v8 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  [v7 setFont:v8];

  [v7 setUserInteractionEnabled:0];
  [v7 setAdjustsFontForContentSizeCategory:1];
  id v9 = [self secondaryLabelColor];
  [v7 setTextColor:v9];

  LODWORD(v10) = 1132068864;
  [v7 setContentCompressionResistancePriority:0 forAxis:v10];
  [v7 setAdjustsFontSizeToFitWidth:1];
  [v7 setBaselineAdjustment:1];
  [v7 setMinimumScaleFactor:0.5];
  type metadata accessor for TTRIStackedAvatarsView();
  id v11 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10066C430;
  *(void *)(v12 + 32) = v11;
  *(void *)(v12 + 40) = v7;
  specialized Array._endMutation()();
  id v13 = objc_allocWithZone((Class)UIStackView);
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  id v14 = v11;
  id v15 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [v13 initWithArrangedSubviews:isa];

  [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v17 setAxis:0];
  [v17 setDistribution:0];
  [v17 setAlignment:3];
  [v17 setSpacing:12.0];
  *(void *)&v6[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_statusLabel] = v15;
  *(void *)&v6[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackedAvatarsView] = v14;
  *(void *)&v6[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackView] = v17;
  id v56 = v14;
  id v55 = v15;
  id v18 = v17;

  if (a3)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  v57.receiver = v6;
  v57.super_class = ObjectType;
  [super initWithStyle:a1 reuseIdentifier:v19];

  id v21 = v20;
  id v22 = [v21 contentView];
  [v22 addSubview:v18];

  uint64_t v23 = self;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_10066C4F0;
  id v25 = [v21 contentView];
  id v26 = [v25 layoutMarginsGuide];

  id v27 = [v26 leadingAnchor];
  id v28 = [v18 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v24 + 32) = v29;
  id v30 = [v21 contentView];
  id v31 = [v30 layoutMarginsGuide];

  id v32 = [v31 trailingAnchor];
  id v33 = [v18 trailingAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  *(void *)(v24 + 40) = v34;
  id v35 = [v21 contentView];
  id v36 = [v35 layoutMarginsGuide];

  id v37 = [v36 topAnchor];
  id v38 = [v18 topAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  *(void *)(v24 + 48) = v39;
  id v40 = [v21 contentView];
  id v41 = [v40 layoutMarginsGuide];

  id v42 = [v41 bottomAnchor];
  id v43 = [v18 bottomAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  *(void *)(v24 + 56) = v44;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class v45 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:v45];

  [v21 setSeparatorInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  uint64_t v46 = (char *)v21;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  uint64_t v47 = *(char **)&v46[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackedAvatarsView];
  uint64_t v48 = &v47[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  swift_beginAccess();
  unint64_t v49 = *(void *)v48;
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  [v47 setHidden:v50 == 0];
  sub_10050C578();

  return v46;
}

uint64_t sub_10050C578()
{
  swift_getObjectType();
  sub_10050C6E4();
  sub_10003B754(&qword_100789500);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10066C6F0;
  *(void *)(v0 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
  *(void *)(v0 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
  UIView.registerForTraitChanges<A>(_:handler:)();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

id sub_10050C6E4()
{
  id v1 = [v0 traitCollection];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  int v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackView];
  uint64_t v4 = v1 & 1;
  BOOL v5 = (v1 & 1) == 0;
  if (v1) {
    uint64_t v6 = 1;
  }
  else {
    uint64_t v6 = 3;
  }
  if (v5) {
    uint64_t v7 = 1;
  }
  else {
    uint64_t v7 = 2;
  }
  [*(id *)&v0[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_stackView] setAxis:v4];
  [v3 setAlignment:v6];
  uint64_t v8 = *(void **)&v0[OBJC_IVAR____TtC9Reminders47TTRIRemindersListSharingStatusCellTableViewCell_statusLabel];

  return [v8 setNumberOfLines:v7];
}

uint64_t type metadata accessor for TTRIRemindersListSharingStatusCellTableViewCell()
{
  return self;
}

void sub_10050C840(void *a1, void *a2)
{
  id v3 = [a1 traitCollection];
  id v4 = [v3 preferredContentSizeCategory];

  LODWORD(v3) = UIContentSizeCategory.isAccessibilityCategory.getter() & 1;
  id v5 = [a2 preferredContentSizeCategory];
  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter() & 1;

  if (v3 != v4) {
    sub_10050C6E4();
  }
}

uint64_t sub_10050C8E8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A2E38);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A2E38);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10050C9B0()
{
  return swift_retain();
}

uint64_t sub_10050C9F0()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue);
}

void sub_10050CA00(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) != (a1 & 1))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) = a1 & 1;
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
    if (v2)
    {
      id v4 = v2;
      id v3 = [v4 appearanceContext];

      if (v3)
      {
        type metadata accessor for TTRListEditor();
        __chkstk_darwin(v4);
        static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)();
      }
      else
      {
      }
    }
  }
}

_UNKNOWN **sub_10050CB1C()
{
  return &off_1007352E8;
}

uint64_t sub_10050CB28()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v8, (uint64_t)v3, &qword_100786EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 128;
  }
  else
  {
    sub_100513BE0((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    int v10 = *(unsigned __int8 *)(v0
                             + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders);
    if (v10 == 2)
    {
      sub_100513B34((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      uint64_t result = 64;
      if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount + 16) & 1) == 0)
      {
        if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount) <= 0) {
          return 64;
        }
        else {
          return 65;
        }
      }
    }
    else
    {
      int v11 = v7[*(int *)(v4 + 112)];
      sub_100513B34((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if (v10)
      {
        unsigned int v12 = 65;
        unsigned int v13 = 67;
      }
      else
      {
        unsigned int v12 = 64;
        unsigned int v13 = 66;
      }
      if (v11) {
        return v13;
      }
      else {
        return v12;
      }
    }
  }
  return result;
}

uint64_t sub_10050CD50@<X0>(void *a1@<X8>)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v3)
  {
    *a1 = [v3 objectID];
    uint64_t v4 = type metadata accessor for TTRAutoCompleteReminderListScope();
    swift_storeEnumTagMultiPayload();
    uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = a1;
    uint64_t v7 = 0;
    uint64_t v8 = v4;
  }
  else
  {
    uint64_t v9 = type metadata accessor for TTRAutoCompleteReminderListScope();
    uint64_t v5 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v8 = v9;
    uint64_t v6 = a1;
    uint64_t v7 = 1;
  }

  return v5(v6, v7, 1, v8);
}

uint64_t sub_10050CE2C(uint64_t a1, uint64_t (*a2)(void))
{
  id v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  uint64_t v4 = (uint64_t)v3;
  if (!v3) {
    uint64_t v4 = sub_10058BAD0(a1, a2);
  }
  id v5 = v3;
  return v4;
}

void *sub_10050CE74()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  id v2 = v1;
  return v1;
}

uint64_t sub_10050CEAC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance))
  {
    __chkstk_darwin(a1);
    swift_retain();
    char v7 = sub_1002AE304(a1, a4 & 1, (uint64_t (*)(uint64_t))sub_100513BD4);
    swift_release();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_10050CF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100513ACC(a3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a3) = sub_10045B98C((uint64_t)v6);
  sub_100513B34((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return a3 & 1;
}

void *sub_10050D040()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  id v2 = v1;
  return v1;
}

id sub_10050D07C@<X0>(uint64_t a1@<X8>)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  uint64_t v4 = sub_1005993E8;
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    uint64_t v4 = sub_100513BCC;
    char v6 = 1;
    uint64_t v7 = 2;
  }
  else
  {
    uint64_t v7 = 0;
    char v6 = 0;
    uint64_t v5 = 0;
  }
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  id v8 = v3;

  return v8;
}

uint64_t sub_10050D11C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = [a1 objectID];
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  swift_storeEnumTagMultiPayload();
  uint64_t v4 = *(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

void sub_10050D1B4(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v4);
  char v6 = (void **)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v10 - 8);
  unsigned int v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v13 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v13)
  {
    id v14 = v13;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.parent(of:)();
    swift_release();
    swift_release();
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v9, 1, v15) == 1)
    {

      sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100513BE0((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_100513ACC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v16 = *v6;
          sub_10003B754((uint64_t *)&unk_1007894B0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10066D470;
          id v18 = *(void **)(a2 + 16);
          *(void *)(inited + 32) = [v18 objectID];
          unint64_t v25 = inited;
          specialized Array._endMutation()();
          sub_100028180(v25);
          swift_bridgeObjectRelease();
          type metadata accessor for TTRListEditor();
          v24[1] = v14;
          id v19 = v14;
          id v20 = [v18 saveRequest];
          unint64_t v25 = a2;
          type metadata accessor for TTRReminderEditor();
          sub_1000D69E0();
          TTRUndoableEditing.undoManager.getter();
          TTROneshotEditing.init(item:saveRequest:undoManager:)();
          id v21 = v16;
          TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();

          swift_bridgeObjectRelease();
          swift_release();

          id v22 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v23 = (uint64_t)v12;
        }
        else
        {
          sub_100513B34((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

          id v22 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
          uint64_t v23 = (uint64_t)v6;
        }
      }
      else
      {

        id v22 = &type metadata accessor for TTRRemindersListViewModel.Item;
        uint64_t v23 = (uint64_t)v9;
      }
      sub_100513B34(v23, (uint64_t (*)(void))v22);
    }
  }
}

void *sub_10050D590()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void **)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  id v14 = (char *)&v26 - v13;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  sub_100513BE0((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v15 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v15)
  {
    sub_100513ACC((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        id v19 = v15;
        sub_100513B34((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100513B34((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return v15;
      case 2u:
        sub_100513BE0((uint64_t)v11, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        id v20 = *v4;
        id v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
        swift_beginAccess();
        uint64_t v22 = *v21;
        id v23 = v15;
        id v24 = v20;
        swift_bridgeObjectRetain();
        id v17 = sub_100598448(v24, v22);

        swift_bridgeObjectRelease();
        sub_100513B34((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100513B34((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        if (!v17) {

        }
        return v17;
      case 5u:
        sub_100513B34((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        unint64_t v25 = v11[2];
        goto LABEL_16;
      case 6u:
        sub_100513B34((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        unint64_t v25 = *v11;
LABEL_16:

        return 0;
      case 0xAu:
      case 0xBu:
        uint64_t v16 = (uint64_t)v14;
        goto LABEL_8;
      default:
        sub_100513B34((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v16 = (uint64_t)v11;
LABEL_8:
        sub_100513B34(v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        break;
    }
    return 0;
  }
  sub_100513B34((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return 0;
}

uint64_t sub_10050DA00(uint64_t a1)
{
  return sub_10050DFE8(a1, (void (*)(uint64_t))sub_1004E73A4);
}

uint64_t sub_10050DA18()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = &off_10074EF30;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10050DAB0(void *a1)
{
  LOBYTE(a1) = sub_1004E78F8(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_10050DAF0(void *a1)
{
  void (*v12)(long long *__return_ptr, uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  unsigned char v35[40];
  long long v36;
  uint64_t v37;
  long long v38;
  uint64_t v39;
  uint64_t v40;
  void v41[3];
  uint64_t v42;
  uint64_t v43;

  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3))
  {
    uint64_t v6 = v5;
    uint64_t v7 = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 56))(a1, v7, v6);
    swift_unknownObjectRelease();
    if ((v6 & 1) == 0)
    {
LABEL_19:
      id v18 = 0;
      return v18 & 1;
    }
  }
  uint64_t v8 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (!v9)
  {
LABEL_7:
    if (qword_100785678 != -1) {
      swift_once();
    }
    id v19 = type metadata accessor for Logger();
    sub_100018BF8(v19, (uint64_t)qword_1007A2E38);
    sub_1000145EC((uint64_t)a1, (uint64_t)v41);
    swift_retain_n();
    id v20 = Logger.logObject.getter();
    id v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = 7104878;
      id v23 = swift_slowAlloc();
      id v40 = swift_slowAlloc();
      *(_DWORD *)id v23 = 136315394;
      id v24 = *(void **)(v1 + v8);
      if (v24)
      {
        unint64_t v25 = [v24 description];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        id v28 = v27;
      }
      else
      {
        id v28 = 0xE300000000000000;
        uint64_t v26 = 7104878;
      }
      *(void *)&id v38 = sub_1000385A8(v26, v28, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      id v29 = v42;
      id v30 = v43;
      sub_100038D28(v41, v42);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v30 + 176))(&v38, v29, v30);
      sub_10003B694((uint64_t)&v38, (uint64_t)&v36, &qword_100787480);
      if (v37)
      {
        sub_100038ED8(&v36, (uint64_t)v35);
        sub_1000145EC((uint64_t)v35, (uint64_t)&v34);
        sub_10003B754(&qword_1007A3548);
        uint64_t v22 = String.init<A>(describing:)();
        id v32 = v31;
        sub_100038CD8((uint64_t)v35);
        sub_10003B6F8((uint64_t)&v38, &qword_100787480);
      }
      else
      {
        sub_10003B6F8((uint64_t)&v38, &qword_100787480);
        id v32 = 0xE300000000000000;
      }
      *(void *)&id v38 = sub_1000385A8(v22, v32, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100038CD8((uint64_t)v41);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "matchesListPredicate returns false because one of the lists is nil {viewModelSourceList: %s, reminderList: %s}", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      sub_100038CD8((uint64_t)v41);
    }

    goto LABEL_19;
  }
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_100038D28(a1, v10);
  uint64_t v12 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 176);
  uint64_t v13 = v9;
  v12(&v38, v10, v11);
  if (!v39)
  {

    sub_10003B6F8((uint64_t)&v38, &qword_100787480);
    goto LABEL_7;
  }
  sub_100038ED8(&v38, (uint64_t)v41);
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  id v14 = [v13 objectID];
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  sub_100038D28(v41, v42);
  id v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  id v18 = static NSObject.== infix(_:_:)();

  sub_100038CD8((uint64_t)v41);
  return v18 & 1;
}

uint64_t sub_10050DF74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10050DA18();
  sub_1004E7B18(a1, a2, a3);

  return swift_release();
}

uint64_t sub_10050DFD0(uint64_t a1)
{
  return sub_10050DFE8(a1, (void (*)(uint64_t))sub_1004E7CE4);
}

uint64_t sub_10050DFE8(uint64_t a1, void (*a2)(uint64_t))
{
  sub_10050DA18();
  a2(a1);

  return swift_release();
}

uint64_t sub_10050E044(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v82 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (id *)((char *)v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v9 = (id *)((char *)v74 - v8);
  uint64_t v87 = sub_10003B754(&qword_100792830);
  uint64_t v10 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v86 = (uint64_t)v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v85 = (uint64_t)v74 - v13;
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v15 = *(void **)(v14 - 8);
  __chkstk_darwin(v14 - 8);
  id v17 = (char *)v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10050DA18();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v88 = v15;
    uint64_t v19 = *(void *)(v18 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 8))(v18, ObjectType, v19);
    swift_unknownObjectRelease();
    swift_retain();
    uint64_t v22 = sub_100478634(a1, 1, v21, v18);
    uint64_t v77 = v23;
    id v24 = (void *)a1;
    uint64_t v26 = v25;
    swift_release();
    swift_release_n();
    if (v22)
    {
      uint64_t v75 = v22;
      uint64_t v76 = v10;
      v74[1] = v26;
      id v27 = _swiftEmptyArrayStorage;
      unint64_t v89 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v28 = v24[2];
      if (v28)
      {
        uint64_t v29 = (uint64_t)v24
            + ((*((unsigned __int8 *)v88 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v88 + 80));
        uint64_t v30 = v88[9];
        uint64_t v88 = v24;
        swift_bridgeObjectRetain();
        do
        {
          sub_100513ACC(v29, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v31 = TTRRemindersListViewModel.Item.reminderObjectID.getter();
          sub_100513B34((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (v31)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          v29 += v30;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        id v27 = (void *)v89;
      }
      uint64_t v37 = sub_100028180((unint64_t)v27);
      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
      uint64_t v39 = swift_getObjectType();
      if ((*(uint64_t (**)(uint64_t, uint64_t))(v38 + 8))(v39, v38)
        && (uint64_t v41 = v40,
            uint64_t v42 = swift_getObjectType(),
            LOBYTE(v41) = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v42, v41),
            swift_unknownObjectRelease(),
            (v41 & 1) != 0))
      {
        uint64_t v88 = _swiftEmptyArrayStorage;
        uint64_t v43 = v77;
      }
      else
      {
        uint64_t v43 = v77;
        uint64_t v81 = *(void *)(v77 + 16);
        if (v81)
        {
          unint64_t v80 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
          uint64_t v79 = v77 + v80;
          uint64_t v44 = *(void *)(v76 + 72);
          swift_bridgeObjectRetain();
          uint64_t v45 = 0;
          uint64_t v88 = _swiftEmptyArrayStorage;
          uint64_t v78 = v44;
          do
          {
            uint64_t v84 = v45;
            unint64_t v46 = v79 + v44 * v45;
            uint64_t v47 = *(int *)(v87 + 48);
            unint64_t v83 = v46;
            unint64_t v48 = *(void *)(v46 + v47);
            unint64_t v89 = v48;
            uint64_t v49 = *(void *)(v48 + 16);
            if (v49)
            {
              uint64_t v50 = v82;
              uint64_t v51 = v48 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
              swift_bridgeObjectRetain_n();
              uint64_t v52 = *(void *)(v50 + 72);
              do
              {
                sub_100513ACC(v51, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                sub_10050E9A8(v9, v37, v2, &v89, (SEL *)&selRef_fetchObjectIDsOfCompletedSubtasksWithError_);
                sub_100513B34((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
                v51 += v52;
                --v49;
              }
              while (v49);
              swift_bridgeObjectRelease();
              unint64_t v48 = v89;
              uint64_t v47 = *(int *)(v87 + 48);
              uint64_t v44 = v78;
            }
            else
            {
              swift_bridgeObjectRetain();
            }
            uint64_t v53 = v85;
            sub_100513ACC(v83, v85, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
            *(void *)(v53 + v47) = v48;
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v88 = (void *)sub_1005709CC(0, v88[2] + 1, 1, (unint64_t)v88);
            }
            unint64_t v55 = v88[2];
            unint64_t v54 = v88[3];
            if (v55 >= v54 >> 1) {
              uint64_t v88 = (void *)sub_1005709CC(v54 > 1, v55 + 1, 1, (unint64_t)v88);
            }
            uint64_t v56 = v85;
            uint64_t v57 = v84 + 1;
            id v58 = v88;
            v88[2] = v55 + 1;
            uint64_t v59 = (uint64_t)v58 + v80 + v55 * v44;
            uint64_t v45 = v57;
            sub_100028C3C(v56, v59, &qword_100792830);
            swift_bridgeObjectRelease();
          }
          while (v45 != v81);
          uint64_t v43 = v77;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v88 = _swiftEmptyArrayStorage;
        }
      }
      uint64_t v84 = *(void *)(v43 + 16);
      if (v84)
      {
        unint64_t v83 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        uint64_t v81 = v43 + v83;
        unint64_t v60 = *(void *)(v76 + 72);
        swift_bridgeObjectRetain();
        uint64_t v61 = 0;
        unint64_t v80 = v60;
        do
        {
          uint64_t v62 = v81 + v60 * v61;
          uint64_t v63 = *(int *)(v87 + 48);
          unint64_t v64 = *(void *)(v62 + v63);
          unint64_t v89 = v64;
          uint64_t v65 = *(void *)(v64 + 16);
          if (v65)
          {
            uint64_t v85 = v62;
            uint64_t v66 = v82;
            uint64_t v67 = v64 + ((*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80));
            swift_bridgeObjectRetain_n();
            uint64_t v68 = *(void *)(v66 + 72);
            do
            {
              sub_100513ACC(v67, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_10050E9A8(v6, v37, v2, &v89, (SEL *)&selRef_fetchObjectIDsOfUnsupportedSubtasksWithError_);
              sub_100513B34((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v67 += v68;
              --v65;
            }
            while (v65);
            swift_bridgeObjectRelease();
            unint64_t v64 = v89;
            uint64_t v63 = *(int *)(v87 + 48);
            uint64_t v62 = v85;
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t v69 = v62;
          uint64_t v70 = v86;
          sub_100513ACC(v69, v86, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          *(void *)(v70 + v63) = v64;
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v88 = (void *)sub_1005709CC(0, v88[2] + 1, 1, (unint64_t)v88);
          }
          unint64_t v72 = v88[2];
          unint64_t v71 = v88[3];
          if (v72 >= v71 >> 1) {
            uint64_t v88 = (void *)sub_1005709CC(v71 > 1, v72 + 1, 1, (unint64_t)v88);
          }
          ++v61;
          uint64_t v73 = v88;
          v88[2] = v72 + 1;
          unint64_t v60 = v80;
          sub_100028C3C(v86, (uint64_t)v73 + v83 + v72 * v80, &qword_100792830);
          swift_bridgeObjectRelease();
        }
        while (v61 != v84);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v75;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100018BF8(v32, (uint64_t)qword_1007A1D48);
    id v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v35 = 0;
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v35, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
}

void sub_10050E9A8(id *a1, uint64_t a2, uint64_t a3, unint64_t *a4, SEL *a5)
{
  uint64_t v50 = a4;
  uint64_t v9 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = *a1;
  LOBYTE(a2) = sub_100457094(v16, a2);

  if (a2)
  {
    uint64_t v49 = a5;
    id v17 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
    swift_beginAccess();
    uint64_t v18 = *v17;
    id v19 = v16;
    swift_bridgeObjectRetain();
    id v20 = sub_100598448(v19, v18);

    swift_bridgeObjectRelease();
    if (v20)
    {
      id v21 = [v20 subtaskContext];
      if (!v21)
      {

        return;
      }
      id v46 = v21;
      id v47 = v20;
      uint64_t v52 = 0;
      id v22 = [v21 *v49, &v52];
      uint64_t v23 = v52;
      if (!v22)
      {
        id v36 = v52;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_100785678 == -1) {
          goto LABEL_20;
        }
        goto LABEL_27;
      }
      id v24 = v22;
      sub_1000368FC(0, qword_10078E3D0);
      unint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v23;

      if (v25 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        if (v27) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v27 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v27)
        {
LABEL_7:
          if (v27 >= 1)
          {
            uint64_t v28 = 0;
            uint64_t v49 = (SEL *)((char *)a1 + *(int *)(v12 + 20));
            unint64_t v48 = v25 & 0xC000000000000001;
            unint64_t v29 = v25;
            do
            {
              if (v48) {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v30 = *(id *)(v25 + 8 * v28 + 32);
              }
              sub_10003B694((uint64_t)v49, (uint64_t)v11, &qword_10078C890);
              TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)();
              uint64_t v31 = v50;
              unint64_t v32 = *v50;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              unint64_t *v31 = v32;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v32 = sub_1005709E0(0, *(void *)(v32 + 16) + 1, 1, v32);
                *uint64_t v50 = v32;
              }
              unint64_t v35 = *(void *)(v32 + 16);
              unint64_t v34 = *(void *)(v32 + 24);
              if (v35 >= v34 >> 1)
              {
                unint64_t v32 = sub_1005709E0(v34 > 1, v35 + 1, 1, v32);
                *uint64_t v50 = v32;
              }
              ++v28;
              *(void *)(v32 + 16) = v35 + 1;
              sub_100513BE0((uint64_t)v15, v32+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              unint64_t v25 = v29;
            }
            while (v27 != v28);
            goto LABEL_24;
          }
          __break(1u);
LABEL_27:
          swift_once();
LABEL_20:
          uint64_t v37 = type metadata accessor for Logger();
          sub_100018BF8(v37, (uint64_t)qword_1007A2E38);
          swift_errorRetain();
          swift_errorRetain();
          id v38 = v47;
          uint64_t v39 = Logger.logObject.getter();
          os_log_type_t v40 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v39, v40))
          {
            uint64_t v41 = swift_slowAlloc();
            uint64_t v42 = (void *)swift_slowAlloc();
            uint64_t v50 = (unint64_t *)swift_slowAlloc();
            uint64_t v52 = v50;
            *(_DWORD *)uint64_t v41 = 138412546;
            id v43 = [v38 objectID];
            uint64_t v51 = (uint64_t)v43;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v42 = v43;

            *(_WORD *)(v41 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v44 = Error.rem_errorDescription.getter();
            uint64_t v51 = sub_1000385A8(v44, v45, (uint64_t *)&v52);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v39, v40, "Failed to fetch objectIDs of completed subtasks of reminder {reminder.objectID: %@, error: %s}", (uint8_t *)v41, 0x16u);
            sub_10003B754(&qword_10078AC60);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
          return;
        }
      }
LABEL_24:

      swift_bridgeObjectRelease_n();
    }
  }
}

void *sub_10050EFF0(unint64_t a1)
{
  uint64_t v2 = sub_10050DA18();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v2, ObjectType, v3);
    swift_unknownObjectRelease();
    swift_retain();
    uint64_t v6 = sub_10047BB6C(a1, 1, v5, v2);
    swift_release();
    swift_release_n();
  }
  else
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_1007A1D48);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v10, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
  return v6;
}

void *sub_10050F180()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v1)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    id v2 = v1;
    uint64_t v1 = (void *)static NSUserActivity.forStoringListPayload(for:)();
  }
  return v1;
}

uint64_t sub_10050F1E8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v1)
  {
    v4[3] = type metadata accessor for TTRUserActivityListPayload();
    v4[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
    *sub_1000394A8(v4) = (uint64_t)v1;
    type metadata accessor for TTRUserActivityListPayload.State();
    swift_storeEnumTagMultiPayload();
    id v2 = v1;
    NSUserActivity.setPayload(_:)();

    return sub_100038CD8((uint64_t)v4);
  }
  return result;
}

void *sub_10050F288()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v10)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    id v11 = v10;
    uint64_t v10 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
    uint64_t v12 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_100588C58(ObjectType, v13);
      swift_unknownObjectRelease();
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 1, v15) != 1)
      {
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100513B34((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ItemID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
        goto LABEL_7;
      }
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    }
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
LABEL_7:
    uint64_t v18 = (uint64_t)v3 + *(int *)(sub_10003B754(&qword_10078B618) + 48);
    *uint64_t v3 = [v11 objectID];
    sub_10003B694((uint64_t)v9, v18, (uint64_t *)&unk_10078E360);
    type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
    swift_storeEnumTagMultiPayload();
    _OWORD v22[3] = v1;
    v22[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
    id v19 = sub_1000394A8(v22);
    sub_100513ACC((uint64_t)v3, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    NSUserActivity.setPayload(_:)();

    sub_100513B34((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
    sub_100038CD8((uint64_t)v22);
  }
  return v10;
}

void *sub_10050F5E4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)REMList.accountCapabilities.getter();
    [v3 supportsSections];
  }
  return v1;
}

uint64_t sub_10050F660()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___groceryTipFetchHelper;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___groceryTipFetchHelper))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___groceryTipFetchHelper);
  }
  else
  {
    uint64_t Helper = type metadata accessor for GroceryTipFetchHelper();
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults + 24);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults + 32);
    uint64_t v6 = sub_100038D28((void *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults), v4);
    v18[3] = v4;
    uint64_t v7 = *(void *)(v5 + 8);
    v18[4] = v7;
    uint64_t v8 = sub_1000394A8(v18);
    os_log_type_t v9 = *(void (**)(char *, uint64_t *, uint64_t, double))(*(void *)(v4 - 8) + 16);
    uint64_t v10 = ((uint64_t (*)(uint64_t *, void *, uint64_t))v9)(v8, v6, v4);
    double v11 = __chkstk_darwin(v10);
    uint64_t v13 = (char *)&v18[-1] - v12;
    v9((char *)&v18[-1] - v12, v8, v4, v11);
    uint64_t v2 = sub_100513284((uint64_t)v13, Helper, v4, v7);
    sub_100038CD8((uint64_t)v18);
    uint64_t v14 = swift_allocObject();
    swift_weakInit();
    uint64_t v15 = *(void *)(v2 + 24);
    *(void *)(v2 + 24) = sub_1005133DC;
    *(void *)(v2 + 32) = v14;
    sub_1000499C4(v15);
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10050F7F4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10050F84C();
    return swift_release();
  }
  return result;
}

uint64_t sub_10050F84C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListTip();
  __chkstk_darwin(v2 - 8);
  uint64_t v38 = (uint64_t)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListTips();
  __chkstk_darwin(v4 - 8);
  uint64_t v37 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_1007A3540);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v11 = (char *)&v37 - v10;
  uint64_t v12 = type metadata accessor for AnyTip();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v37 - v17;
  double v20 = __chkstk_darwin(v19);
  id v22 = (char *)&v37 - v21;
  char v23 = *(unsigned char *)(sub_10050F660(v20) + 16);
  swift_release();
  if (v23)
  {
    uint64_t v25 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v26 = *(void *)(v25 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 144))(1, ObjectType, v26);
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v22, v11, v12);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v22, v12);
        uint64_t v28 = (uint64_t)v37;
        TTRRemindersListTips.init(tipID:tip:)();
        uint64_t v29 = v38;
        sub_100513ACC(v28, v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTips);
        swift_retain();
        TTRRemindersListCurrentTipCapability.requestShowTip(_:)();
        swift_release();
        sub_100513B34(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTip);
        sub_100513B34(v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTips);
        return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v22, v12);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v11, 1, 1, v12);
    }
    sub_10003B6F8((uint64_t)v11, &qword_1007A3540);
  }
  int v31 = *(unsigned __int8 *)(sub_10050F660(v24) + 16);
  swift_release();
  if (v31 == 2 || (v31 & 1) != 0) {
    goto LABEL_15;
  }
  uint64_t v32 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (!swift_unknownObjectWeakLoadStrong())
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v8, 1, 1, v12);
    goto LABEL_14;
  }
  uint64_t v33 = *(void *)(v32 + 8);
  uint64_t v34 = swift_getObjectType();
  (*(void (**)(void, uint64_t, uint64_t))(v33 + 144))(0, v34, v33);
  swift_unknownObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) == 1)
  {
LABEL_14:
    sub_10003B6F8((uint64_t)v8, &qword_1007A3540);
LABEL_15:
    swift_retain();
    TTRRemindersListCurrentTipCapability.requestDismissTip()();
    return swift_release();
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v8, v12);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v15, v12);
  uint64_t v35 = (uint64_t)v37;
  TTRRemindersListTips.init(tipID:tip:)();
  uint64_t v36 = v38;
  sub_100513ACC(v35, v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTips);
  swift_retain();
  TTRRemindersListCurrentTipCapability.requestShowTip(_:)();
  swift_release();
  sub_100513B34(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTip);
  sub_100513B34(v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTips);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_10050FDBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v7 - 8);
  uint64_t v61 = (char *)v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v9 - 8);
  double v11 = (void *)((char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v13)
  {
    uint64_t v59 = v6;
    uint64_t v60 = a1;
    type metadata accessor for TTRListColors();
    uint64_t v63 = sub_1000368FC(0, &qword_100791CF0);
    unint64_t v64 = &protocol witness table for REMList;
    v62[0] = v13;
    id v14 = v13;
    static TTRListColors.color(for:)();
    sub_10003B6F8((uint64_t)v62, &qword_100787480);
    uint64_t v15 = (void *)REMList.accountCapabilities.getter();
    unsigned int v57 = [v15 supportsSections];

    *double v11 = [v14 objectID];
    uint64_t v16 = type metadata accessor for TTRListType();
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    id v58 = v11;
    v17(v11, 0, 1, v16);
    id v18 = [v14 displayName];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v20;
    uint64_t v56 = v19;

    uint64_t v54 = TTRListColors.Color.nativeColor.getter();
    uint64_t v21 = 0;
    int v52 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount + 16);
    if ((v52 & 1) == 0) {
      uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount + 8);
    }
    uint64_t v53 = v21;
    type metadata accessor for TTRRemindersListViewModel();
    uint64_t v50 = static TTRRemindersListViewModel.makeListSharingInfo(_:)();
    uint64_t v51 = v22;
    uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    uint64_t v26 = v25(ObjectType, v23);
    if (v26) {
      swift_unknownObjectRelease();
    }
    uint64_t v49 = v26;
    uint64_t v27 = *(void **)(v2 + v12);
    if (v27)
    {
      id v28 = v27;
      uint64_t v29 = (void *)REMList.accountCapabilities.getter();
      unsigned int v48 = [v29 supportsSections];
    }
    else
    {
      unsigned int v48 = 0;
    }
    uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(ObjectType, v23);
    if (v33) {
      swift_unknownObjectRelease();
    }
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(ObjectType, v23)) {
      swift_unknownObjectRelease();
    }
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 56))(v62, ObjectType, v23);
    v47[1] = v63;
    sub_10003B6F8((uint64_t)v62, &qword_100791FA0);
    if (v25(ObjectType, v23))
    {
      uint64_t v35 = v34;
      uint64_t v36 = swift_getObjectType();
      int v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v36, v35);
      swift_unknownObjectRelease();
    }
    else
    {
      int v37 = 0;
    }
    uint64_t v38 = v59;
    v47[2] = v33;
    LODWORD(v59) = v37;
    id v39 = [v14 objectID];
    id v40 = [v39 stringRepresentation];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v61, 1, 1, v41);
    uint64_t v42 = type metadata accessor for TTRTemplatePublicLinkData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v38, 1, 1, v42);
    [v14 isOriginOfExistingTemplate];
    id v43 = [v14 groceryContext];
    if (v43)
    {
      uint64_t v44 = v43;
      [v43 shouldCategorizeGroceryItems];
    }
    uint64_t v45 = v60;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();

    sub_100513A88((uint64_t)v65, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    uint64_t v46 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  }
  else
  {
    uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    int v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
    return v31(a1, 1, 1, v30);
  }
}

uint64_t sub_1005104DC()
{
  swift_release();

  swift_release();
  sub_100038CD8(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults);

  return swift_release();
}

uint64_t sub_10051054C()
{
  uint64_t v0 = sub_100588C8C();
  swift_release();

  swift_release();
  sub_100038CD8(v0 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_100510600()
{
  return type metadata accessor for TTRShowRemindersInListViewModelSource();
}

uint64_t type metadata accessor for TTRShowRemindersInListViewModelSource()
{
  uint64_t result = qword_1007A2EB8;
  if (!qword_1007A2EB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100510654()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005106C4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v52 = *v1;
  uint64_t v4 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_100786EF0);
  double v9 = __chkstk_darwin(v8 - 8);
  double v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [a1 objectID];
  uint64_t v13 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  id v14 = *(void **)((char *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  uint64_t v53 = v4;
  if (v14)
  {
    id v15 = [v14 objectID];
    id v16 = v15;
    if (v12)
    {
      if (v15)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v17 = v12;
        uint64_t v51 = v5;
        id v18 = v17;
        char v19 = static NSObject.== infix(_:_:)();

        uint64_t v5 = v51;
LABEL_9:
        id v12 = v16;
        goto LABEL_10;
      }
LABEL_6:
      char v19 = 0;
LABEL_10:

      goto LABEL_12;
    }
    if (v15)
    {
      char v19 = 0;
      goto LABEL_9;
    }
  }
  else if (v12)
  {
    goto LABEL_6;
  }
  char v19 = 1;
LABEL_12:
  id v20 = [a1 appearanceContext];
  if (v20)
  {
    uint64_t v21 = v20;
    unsigned __int8 v22 = [v20 showingLargeAttachments];

    *((unsigned char *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) = v22;
  }
  uint64_t v23 = *(void **)((char *)v2 + v13);
  *(void *)((char *)v2 + v13) = a1;

  id v24 = a1;
  sub_10050FDBC((uint64_t)v11);
  sub_1005885DC((uint64_t)v11);
  if ((v19 & 1) == 0)
  {
    sub_10050F660();
    sub_100510B98(v24);
    swift_release();
    uint64_t v25 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v26 = *((void *)v25 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 88))(1, ObjectType, v26);
      swift_unknownObjectRelease();
    }
    id v28 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    id v29 = [v24 groceryContext];
    uint64_t v49 = v11;
    uint64_t v50 = a1;
    uint64_t v51 = v5;
    if (v29)
    {
      uint64_t v30 = v29;
      unsigned __int8 v31 = [v29 shouldCategorizeGroceryItems];
    }
    else
    {
      unsigned __int8 v31 = 0;
    }
    type metadata accessor for REMAnalyticsManager();
    static REMAnalyticsManager.shared.getter();
    uint64_t v32 = sub_10003B754(&qword_10078D258);
    uint64_t v33 = (uint64_t *)&v7[*(int *)(v32 + 48)];
    uint64_t v34 = (uint64_t *)&v7[*(int *)(v32 + 80)];
    unsigned __int8 v35 = [v24 isShared];
    *uint64_t v7 = v31;
    v7[1] = v35;
    uint64_t v36 = enum case for REMRemindersOpenUserOperation.list(_:);
    uint64_t v37 = type metadata accessor for REMRemindersOpenUserOperation();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v7, v36, v37);
    *uint64_t v33 = TTRUserDefaults.activitySessionId.getter();
    v33[1] = v38;
    TTRUserDefaults.activitySessionBeginTime.getter();
    uint64_t *v34 = _typeName(_:qualified:)();
    v34[1] = v39;
    uint64_t v40 = v51;
    uint64_t v41 = v53;
    (*(void (**)(char *, void, uint64_t))(v51 + 104))(v7, enum case for REMAnalyticsEvent.openListUserOperation(_:), v53);
    REMAnalyticsManager.post(event:)();

    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v41);
    double v11 = v49;
    a1 = v50;
  }
  uint64_t v42 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v43 = *((void *)v42 + 1);
    uint64_t v44 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v43 + 120))(v44, v43);
    swift_unknownObjectRelease();
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v45 = *((void *)v42 + 1);
    uint64_t v46 = swift_getObjectType();
    (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 96))(a1, 0, v46, v45);
    swift_unknownObjectRelease();
  }
  return sub_10003B6F8((uint64_t)v11, &qword_100786EF0);
}

uint64_t sub_100510B98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v2 + 80))
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  *(void *)(v2 + 80) = 0;
  swift_release();
  uint64_t v7 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  type metadata accessor for MainActor();
  swift_retain();
  id v9 = a1;
  uint64_t v10 = static MainActor.shared.getter();
  double v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v8;
  void v11[5] = v9;
  swift_release();
  *(void *)(v2 + 80) = sub_1000286A4((uint64_t)v6, (uint64_t)&unk_1007A3528, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_100510D50(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v86 = v11;
  uint64_t v87 = v12;
  __chkstk_darwin(v11);
  uint64_t v90 = (uint64_t)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v84);
  uint64_t v85 = (char *)&v79 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v15 - 8);
  unint64_t v89 = (char *)&v79 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v17 - 8);
  uint64_t v88 = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v82 = *(void *)(v19 - 8);
  uint64_t v83 = v19;
  __chkstk_darwin(v19);
  uint64_t v81 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  int v96 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v21 - 8);
  uint64_t v97 = v21;
  __chkstk_darwin(v21);
  unint64_t v80 = (char *)&v79 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v79 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v27 = __chkstk_darwin(v26);
  id v29 = (uint64_t (**)(char *, uint64_t, uint64_t))((char *)&v79 - v28);
  uint64_t v30 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  unsigned __int8 v31 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  uint64_t v32 = &selRef_setAxis_;
  uint64_t v91 = a3;
  uint64_t v92 = v10;
  id v94 = a1;
  if (!v31)
  {
    if (!a1)
    {
      int v35 = 1;
      int v95 = 1;
      uint64_t v36 = v96;
      goto LABEL_25;
    }
    uint64_t v93 = a2;
    id v34 = 0;
LABEL_7:
    id v37 = [a1 v32[315]];
    uint64_t v38 = v37;
    if (v34)
    {
      if (v37)
      {
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v41 = v40;
        if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42) {
          int v95 = 1;
        }
        else {
          int v95 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v94;
        goto LABEL_21;
      }
    }
    else
    {
      if (!v37)
      {
        int v95 = 1;
        goto LABEL_21;
      }
    }
    int v95 = 0;
LABEL_21:
    uint64_t v43 = *(void **)(v4 + v30);
    *(void *)(v4 + v30) = a1;
    id v34 = a1;

    uint64_t v44 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v45 = *(void *)(v44 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v45 + 120))(ObjectType, v45);
      swift_unknownObjectRelease();
    }
    int v35 = 0;
    uint64_t v36 = v96;
    goto LABEL_24;
  }
  uint64_t v93 = a2;
  id v33 = [v31 sortingStyle:v27];
  uint64_t v32 = &selRef_setAxis_;
  id v34 = v33;
  if (a1) {
    goto LABEL_7;
  }
  int v35 = 1;
  uint64_t v36 = v96;
  if (!v33)
  {
    int v95 = 1;
    goto LABEL_25;
  }
  int v95 = 0;
LABEL_24:

LABEL_25:
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  sub_10003B694((uint64_t)v29, (uint64_t)v25, &qword_100786F00);
  uint64_t v47 = v97;
  int v48 = v36[6](v25, 1, v97);
  if (v48 == 1)
  {
    uint64_t v49 = 0;
    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v51 = v80;
    v36[4](v80, (uint64_t)v25, v47);
    int v96 = v29;
    uint64_t v52 = v4;
    int v53 = v35;
    uint64_t v54 = v47;
    uint64_t v49 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v50 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    uint64_t v55 = v54;
    int v35 = v53;
    uint64_t v4 = v52;
    id v29 = v96;
    ((void (*)(char *, uint64_t))v36[1])(v51, v55);
  }
  int v56 = v95;
  sub_10003B6F8((uint64_t)v29, &qword_100786F00);
  uint64_t v57 = v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount;
  *(void *)uint64_t v57 = v49;
  *(void *)(v57 + 8) = v50;
  *(unsigned char *)(v57 + 16) = v48 == 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter();
  uint64_t v58 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t v59 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v58 + 32))(v59, v58))
  {
    uint64_t v61 = v60;
    uint64_t v62 = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v61 + 16))(0, v62, v61);
    swift_unknownObjectRelease();
  }
  if ((v35 | v56))
  {
    uint64_t v63 = v88;
    sub_10050FDBC(v88);
    *uint64_t v85 = 2;
    swift_storeEnumTagMultiPayload();
    sub_100105478(v100);
    sub_100028C3C((uint64_t)v100, (uint64_t)v101, (uint64_t *)&unk_10079CA00);
    uint64_t v64 = (uint64_t)v89;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v65 = v90;
    sub_100513ACC(v64, v90, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v66 = REMRemindersListDataView.FlatModel.reminders.getter();
    uint64_t v67 = v86;
    *(void *)(v65 + *(int *)(v86 + 20)) = v66;
    *(unsigned char *)(v65 + *(int *)(v67 + 24)) = 0;
    sub_10003B754(&qword_10078D1E8);
    unint64_t v68 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_10066C6F0;
    sub_100513ACC(v65, v69 + v68, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    uint64_t v70 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v73 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v92, 1, 1, v72);
    v99[3] = v70;
    v99[4] = &off_10074D320;
    v99[0] = v71;
    sub_1000145EC((uint64_t)v99, (uint64_t)v98);
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v69;
    sub_100038ED8(v98, v74 + 24);
    *(void *)(v74 + 64) = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10059DBB0(1, v63, (uint64_t (*)(uint64_t))sub_100051174, v74, v91, 0, v73);
    swift_release();
    sub_100038CD8((uint64_t)v99);
    swift_bridgeObjectRelease();
    sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
    sub_100513B34(v65, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_100513B34(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10003B6F8(v63, &qword_100786EF0);
    return swift_release();
  }
  else
  {
    id v76 = v94;
    id v77 = [v76 sortingStyle];
    uint64_t v78 = (uint64_t)v81;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_10059388C(v78, 1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 8))(v78, v83);
  }
}

uint64_t sub_1005116B0(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a3;
  uint64_t v95 = a2;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v84 = (char *)&v82 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v93 = (uint64_t)&v82 - v11;
  uint64_t v87 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v82 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = 0;
  uint64_t v13 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v82 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v21 = __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v82 - v22;
  uint64_t v24 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list;
  uint64_t v94 = v3;
  uint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  id v92 = a1;
  unint64_t v89 = v7;
  if (!v25)
  {
    if (!a1)
    {
      char v28 = 1;
      goto LABEL_17;
    }
    id v27 = 0;
LABEL_7:
    id v30 = [a1 sortingStyle];
    unsigned __int8 v31 = v30;
    if (v27)
    {
      if (v30)
      {
        uint64_t v83 = v13;
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v34 = v33;
        if (v32 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v34 == v35) {
          int v91 = 1;
        }
        else {
          int v91 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        a1 = v92;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v13 = v83;
LABEL_21:
        uint64_t v36 = v94;
        id v37 = *(void **)(v94 + v24);
        *(void *)(v94 + v24) = a1;
        uint64_t v29 = v36;
        id v27 = a1;

        uint64_t v38 = v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v39 = *(void *)(v38 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v39 + 120))(ObjectType, v39);
          swift_unknownObjectRelease();
        }
        char v28 = 0;
        goto LABEL_24;
      }
    }
    else
    {
      if (!v30)
      {
        int v91 = 1;
        goto LABEL_21;
      }
    }
    int v91 = 0;
    goto LABEL_21;
  }
  id v26 = [v25 sortingStyle:v21];
  id v27 = v26;
  if (a1) {
    goto LABEL_7;
  }
  char v28 = 1;
  if (!v26)
  {
LABEL_17:
    int v91 = 1;
    uint64_t v29 = v94;
    goto LABEL_25;
  }
  int v91 = 0;
  uint64_t v29 = v94;
LABEL_24:

LABEL_25:
  REMRemindersListDataView.SectionsModel.remindersCount.getter();
  sub_10003B694((uint64_t)v23, (uint64_t)v19, &qword_100786F00);
  int v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
  if (v41 == 1)
  {
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v19, v13);
    uint64_t v42 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v43 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_10003B6F8((uint64_t)v23, &qword_100786F00);
  uint64_t v44 = v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount;
  *(void *)uint64_t v44 = v42;
  *(void *)(v44 + 8) = v43;
  *(unsigned char *)(v44 + 16) = v41 == 1;
  *(unsigned char *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter();
  uint64_t v45 = *(void *)(v29 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t v46 = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 32))(v46, v45);
  if (result)
  {
    uint64_t v49 = v48;
    uint64_t v50 = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v49 + 16))(0, v50, v49);
    uint64_t result = swift_unknownObjectRelease();
  }
  if ((v28 & 1) == 0)
  {
    id v51 = v92;
    uint64_t v52 = v51;
    if ((v91 & 1) == 0)
    {
      id v63 = [v51 sortingStyle];
      uint64_t v64 = (uint64_t)v85;
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_10059388C(v64, 1);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 8))(v64, v87);
    }
    sub_10050FDBC(v93);
    id v53 = [v52 groceryContext];
    if (v53
      && (uint64_t v54 = v53, v55 = [v53 shouldCategorizeGroceryItems], v54, v55))
    {
      sub_100038D28((void *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults), *(void *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults + 24));
      id v56 = [v52 objectID];
      char v57 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

      if (v57)
      {
        uint64_t v58 = REMRemindersListDataView.SectionsModel.sections.getter();
        swift_retain();
        uint64_t v59 = v90;
        uint64_t v60 = (uint64_t)sub_1005134B8(v58, v29);
        uint64_t v90 = v59;
        swift_bridgeObjectRelease();
        swift_release();
        char v61 = 1;
        uint64_t v62 = (uint64_t)v84;
        goto LABEL_39;
      }
      char v61 = 1;
    }
    else
    {
      char v61 = 0;
    }
    uint64_t v62 = (uint64_t)v84;
    uint64_t v60 = REMRemindersListDataView.SectionsModel.sections.getter();
LABEL_39:
    sub_10003B694(v93, v62, &qword_100786EF0);
    uint64_t v65 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 48))(v62, 1, v65) == 1)
    {
      sub_10003B6F8(v62, &qword_100786EF0);
LABEL_45:
      *(void *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance) = 0;
LABEL_50:
      uint64_t v73 = swift_release();
      __chkstk_darwin(v73);
      *(&v82 - 4) = (uint64_t)v52;
      *(&v82 - 3) = v60;
      *((unsigned char *)&v82 - 16) = v61;
      uint64_t v74 = swift_bridgeObjectRetain();
      uint64_t v75 = sub_1000D60EC(v74, (void (*)(void, char *))sub_1005133E4, (uint64_t)(&v82 - 6));
      swift_bridgeObjectRelease_n();
      uint64_t v76 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
      uint64_t v77 = swift_allocObject();
      uint64_t v78 = type metadata accessor for TTRRemindersListViewModel.Item();
      uint64_t v79 = (uint64_t)v89;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v89, 1, 1, v78);
      v97[3] = v76;
      v97[4] = &off_10074D320;
      v97[0] = v77;
      sub_1000145EC((uint64_t)v97, (uint64_t)v96);
      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = v75;
      sub_100038ED8(v96, v80 + 24);
      *(void *)(v80 + 64) = v29;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v81 = v93;
      sub_10059DBB0(1, v93, (uint64_t (*)(uint64_t))sub_100250D74, v80, v88, 0, v79);
      swift_release();
      sub_100038CD8((uint64_t)v97);
      swift_bridgeObjectRelease();

      sub_10003B6F8(v79, (uint64_t *)&unk_100788DC0);
      sub_10003B6F8(v81, &qword_100786EF0);
      return swift_release();
    }
    int v66 = *(unsigned __int8 *)(v62 + *(int *)(v65 + 64));
    sub_100513B34(v62, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v66 != 1) {
      goto LABEL_45;
    }
    uint64_t v67 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance;
    uint64_t v68 = *(void *)(v29 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance);
    if (v68)
    {
      swift_beginAccess();
      uint64_t v69 = *(void **)(v68 + 40);
      swift_bridgeObjectRetain();
      uint64_t v70 = REMRemindersListDataView.SectionsModel.sections.getter();
      if (v69)
      {
LABEL_49:
        uint64_t v71 = sub_1000368FC(0, &qword_10078B5E8);
        type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
        uint64_t v72 = swift_allocObject();
        swift_retain();
        swift_bridgeObjectRetain();
        *(void *)(v29 + v67) = sub_1000D59C8(v29, v70, v71, v60, 1, v69, v72);
        goto LABEL_50;
      }
    }
    else
    {
      uint64_t v70 = REMRemindersListDataView.SectionsModel.sections.getter();
    }
    uint64_t v69 = &_swiftEmptySetSingleton;
    goto LABEL_49;
  }
  return result;
}

uint64_t sub_1005120C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X8>)
{
  int v41 = a5;
  uint64_t v39 = a4;
  uint64_t v40 = a1;
  uint64_t v51 = a6;
  uint64_t v48 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v48);
  uint64_t v46 = (uint64_t *)((char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v13 - 8);
  uint64_t v49 = (uint64_t)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v47 = (char *)&v37 - v16;
  type metadata accessor for TTRListColors();
  v72[3] = sub_1000368FC(0, &qword_100791CF0);
  v72[4] = &protocol witness table for REMList;
  v72[0] = a3;
  id v42 = a3;
  static TTRListColors.color(for:)();
  uint64_t v17 = v70[0];
  uint64_t v18 = v70[1];
  uint64_t v19 = v70[2];
  uint64_t v43 = v70[3];
  uint64_t v44 = v70[4];
  uint64_t v45 = v70[5];
  int v20 = v71;
  sub_10003B6F8((uint64_t)v72, &qword_100787480);
  uint64_t v50 = a2;
  REMRemindersListDataView.SectionLite.type.getter();
  int v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v21 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v22 = *v12;
    uint64_t v23 = v12[1];
    unsigned __int8 v24 = v20;
    unint64_t v25 = v12[2];
    swift_bridgeObjectRelease();
    if (v40) {
      char v26 = 3;
    }
    else {
      char v26 = 2;
    }
    void *v46 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v23;
    unint64_t v55 = v25;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    int v59 = 192;
    char v60 = v26;
    __int16 v61 = v52;
    char v62 = v53;
    uint64_t v63 = v17;
    uint64_t v64 = v18;
    uint64_t v65 = v19;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    uint64_t v68 = v45;
    __int16 v69 = v24;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v54);
    sub_100028C3C((uint64_t)&v54, (uint64_t)v72, (uint64_t *)&unk_10079CA00);
    sub_100513A88((uint64_t)v70, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    id v27 = [v42 objectID];
    uint64_t v28 = (uint64_t)v47;
    goto LABEL_8;
  }
  uint64_t v38 = v19;
  LODWORD(v40) = v20;
  uint64_t v29 = v46;
  id v30 = v42;
  if (v21 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    sub_100513A88((uint64_t)v70, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    *uint64_t v29 = [v30 objectID];
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    int v59 = 192;
    char v60 = 3;
    __int16 v61 = v52;
    char v62 = v53;
    uint64_t v63 = v17;
    uint64_t v64 = v18;
    uint64_t v65 = v38;
    uint64_t v66 = v43;
    uint64_t v67 = v44;
    uint64_t v68 = v45;
    __int16 v69 = v40;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v54);
    sub_100028C3C((uint64_t)&v54, (uint64_t)v72, (uint64_t *)&unk_10079CA00);
    id v31 = [v30 objectID];
    uint64_t v28 = (uint64_t)v47;
LABEL_8:
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v32 = v49;
    sub_100513ACC(v28, v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v33 = REMRemindersListDataView.SectionLite.reminders.getter();
    sub_100513A88((uint64_t)v70, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    sub_100513B34(v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v34 = v32;
    uint64_t v35 = v51;
    sub_100513BE0(v34, v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(void *)(v35 + *(int *)(result + 20)) = v33;
    *(unsigned char *)(v35 + *(int *)(result + 24)) = 0;
    return result;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100512620()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_100513ACC(v11, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    char v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v4, v1);
    v13(v7, v1);
  }
  return v12 & 1;
}

void *sub_100512828()
{
  return sub_1005138B4();
}

id sub_100512830@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list);
  if (v2)
  {
    *(void *)(a1 + 24) = &type metadata for TTRShowRemindersInListDragAndDropREMListTarget;
    *(void *)(a1 + 32) = &off_100736DC0;
    *(void *)a1 = v2;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return v2;
}

uint64_t sub_10051286C(uint64_t a1, void *a2)
{
  return sub_1005133F0(a2);
}

uint64_t sub_100512874(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance)) {
    return 0;
  }
  swift_retain();
  uint64_t v4 = (void *)sub_100421E44((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  uint64_t v5 = sub_100230EF8(v4, a2);
  swift_release_n();
  return v5;
}

uint64_t sub_100512908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[25] = a4;
  v5[26] = a5;
  sub_10003B754(&qword_10079AF90);
  v5[27] = swift_task_alloc();
  v5[28] = type metadata accessor for MainActor();
  v5[29] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1005129D4, v7, v6);
}

uint64_t sub_1005129D4()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_20;
  }
  uint64_t v2 = Strong;
  uint64_t v3 = (void *)(Strong + 40);
  sub_100038D28((void *)(Strong + 40), *(void *)(Strong + 64));
  if ((TTRUserDefaults.hasCreatedGroceryList.getter() & 1) == 0)
  {
    sub_100038D28(v3, *(void *)(v2 + 64));
    if (TTRUserDefaults.groceryTipDismissed.getter()) {
      goto LABEL_16;
    }
    REMList.ttrGroceryContext.getter();
    if (*(void *)(v0 + 80))
    {
      sub_100038ED8((long long *)(v0 + 56), v0 + 16);
      uint64_t v10 = *(void *)(v0 + 40);
      uint64_t v11 = *(void *)(v0 + 48);
      sub_100038D28((void *)(v0 + 16), v10);
      char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 24))(v10, v11);
      sub_100038CD8(v0 + 16);
      if (v12)
      {
        char v9 = 0;
        goto LABEL_17;
      }
      goto LABEL_16;
    }
    uint64_t v13 = v0 + 56;
LABEL_15:
    sub_10003B6F8(v13, &qword_1007A9FC0);
    goto LABEL_16;
  }
  REMList.ttrGroceryContext.getter();
  if (!*(void *)(v0 + 160))
  {
    uint64_t v13 = v0 + 136;
    goto LABEL_15;
  }
  sub_100038ED8((long long *)(v0 + 136), v0 + 96);
  uint64_t v4 = *(void *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 128);
  sub_100038D28((void *)(v0 + 96), v4);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(v4, v5) & 1) == 0
    || (id v6 = [*(id *)(v0 + 208) sectionContext]) == 0)
  {
    sub_100038CD8(v0 + 96);
    goto LABEL_16;
  }
  uint64_t v7 = v6;
  unsigned __int8 v8 = [v6 hasSections];

  sub_100038CD8(v0 + 96);
  if ((v8 & 1) == 0)
  {
LABEL_16:
    char v9 = 2;
    goto LABEL_17;
  }
  char v9 = 1;
LABEL_17:
  if ((static Task<>.isCancelled.getter() & 1) == 0)
  {
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v15 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v17 = static MainActor.shared.getter();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = &protocol witness table for MainActor;
    *(void *)(v18 + 32) = v16;
    *(unsigned char *)(v18 + 40) = v9;
    swift_release();
    sub_10019B448(v14, (uint64_t)&unk_1007A3538, v18);
    swift_release();
  }
  swift_release();
LABEL_20:
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_100512CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 64) = a5;
  *(void *)(v5 + 40) = a1;
  *(void *)(v5 + 48) = a4;
  type metadata accessor for MainActor();
  *(void *)(v5 + 56) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100512D70, v7, v6);
}

uint64_t sub_100512D70()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v2 = Strong;
  if (Strong)
  {
    int v3 = *(unsigned __int8 *)(Strong + 16);
    int v4 = *(unsigned __int8 *)(v0 + 64);
    if (v3 == 2)
    {
      if (v4 == 2)
      {
LABEL_9:
        swift_release();
        goto LABEL_10;
      }
    }
    else if (v4 != 2 && ((v4 ^ v3) & 1) == 0)
    {
      goto LABEL_9;
    }
    *(unsigned char *)(Strong + 16) = v4;
    uint64_t v5 = *(void (**)(uint64_t))(Strong + 24);
    if (v5)
    {
      uint64_t v6 = swift_retain();
      v5(v6);
      sub_1000499C4((uint64_t)v5);
    }
    goto LABEL_9;
  }
LABEL_10:
  **(unsigned char **)(v0 + 40) = v2 == 0;
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_100512E74()
{
  sub_1000499C4(*(void *)(v0 + 24));
  sub_100038CD8(v0 + 40);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for GroceryTipFetchHelper()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for GroceryTipFetchHelper.GroceryTipType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100512FACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GroceryTipFetchHelper.GroceryTipType()
{
  return &type metadata for GroceryTipFetchHelper.GroceryTipType;
}

unint64_t sub_100512FE8()
{
  unint64_t result = qword_1007A3518;
  if (!qword_1007A3518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1007A3518);
  }
  return result;
}

uint64_t sub_100513040()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100513078()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005130C0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  unsigned __int8 v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unsigned __int8 v8 = v2;
  v8[1] = sub_10000C2D4;
  return sub_100512908(a1, v4, v5, v7, v6);
}

uint64_t sub_100513180()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1005131C0(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  unsigned __int8 v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *unsigned __int8 v8 = v2;
  v8[1] = sub_10003D2E4;
  return sub_100512CD4(a1, v4, v5, v6, v7);
}

uint64_t sub_100513284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v6 = sub_1000394A8(v16);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(v6, a1, a3);
  uint64_t v7 = swift_allocObject();
  uint64_t v8 = sub_100038E88((uint64_t)v16, v17);
  double v9 = __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v16[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v12 + 16))(v11, v9);
  uint64_t v13 = *v11;
  *(void *)(v7 + 64) = type metadata accessor for TTRUserDefaults();
  *(void *)(v7 + 72) = &off_10074EE88;
  *(void *)(v7 + 32) = 0;
  *(void *)(v7 + 40) = v13;
  *(unsigned char *)(v7 + 16) = 2;
  *(void *)(v7 + 80) = 0;
  *(void *)(v7 + 24) = 0;
  sub_100038CD8((uint64_t)v16);
  return v7;
}

uint64_t sub_1005133DC()
{
  return sub_10050F7F4();
}

uint64_t sub_1005133E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005120C4(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32), a3);
}

uint64_t sub_1005133F0(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance);
  if (!v2) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v7(ObjectType, v5);
    swift_unknownObjectRelease();
    id v8 = a1;
    uint64_t Strong = TTRSection.init(with:store:)();
    swift_release();
  }
  return Strong;
}

void *sub_1005134B8(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void **)((char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for REMRemindersListDataView.SectionLite();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v49 = (char *)v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12.n128_f64[0] = __chkstk_darwin(v11);
  uint64_t v50 = (char *)v35 - v13;
  unint64_t result = _swiftEmptyArrayStorage;
  uint64_t v51 = _swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    v35[1] = v2;
    uint64_t v37 = OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance;
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    uint64_t v16 = v9 + 16;
    uint64_t v47 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    unint64_t v41 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
    uint64_t v19 = a1 + v41;
    uint64_t v45 = (uint64_t (**)(void **, uint64_t))(v5 + 88);
    int v44 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:);
    int v40 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:);
    uint64_t v39 = (void (**)(void **, uint64_t))(v5 + 96);
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v36 = (void (**)(char *, uint64_t))(v16 - 8);
    id v42 = v7;
    uint64_t v43 = v8;
    uint64_t v46 = v18;
    v17(v50, a1 + v41, v8, v12);
    while (1)
    {
      REMRemindersListDataView.SectionLite.type.getter();
      int v23 = (*v45)(v7, v4);
      if (v23 == v44)
      {
        (*v39)(v7, v4);
        unsigned __int8 v24 = *v7;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (REMRemindersListDataView.SectionLite.isEmpty.getter())
        {
          uint64_t v25 = *(void *)(v38 + v37);
          if (!v25)
          {

LABEL_4:
            int v20 = v50;
            (*v36)(v50, v8);
            uint64_t v22 = v46;
            goto LABEL_5;
          }
          swift_beginAccess();
          uint64_t v26 = *(void *)(v25 + 40);
          swift_bridgeObjectRetain();
          char v27 = sub_100457094(v24, v26);

          swift_bridgeObjectRelease();
          if ((v27 & 1) == 0) {
            goto LABEL_4;
          }
        }
        else
        {
        }
      }
      else if (v23 != v40)
      {
        unint64_t result = (void *)_diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        return result;
      }
      uint64_t v28 = v16;
      uint64_t v29 = v4;
      id v30 = *v48;
      (*v48)(v49, v50, v8);
      id v31 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D343C(0, v31[2] + 1, 1);
        id v31 = v51;
      }
      unint64_t v33 = v31[2];
      unint64_t v32 = v31[3];
      if (v33 >= v32 >> 1)
      {
        sub_1004D343C(v32 > 1, v33 + 1, 1);
        id v31 = v51;
      }
      v31[2] = v33 + 1;
      uint64_t v22 = v46;
      unint64_t v34 = (unint64_t)v31 + v41 + v33 * v46;
      uint64_t v8 = v43;
      v30((char *)v34, v49, v43);
      uint64_t v51 = v31;
      uint64_t v4 = v29;
      uint64_t v16 = v28;
      uint64_t v7 = v42;
      int v20 = v50;
LABEL_5:
      v19 += v22;
      if (!--v15) {
        return v51;
      }
      v47(v20, v19, v8, v21);
    }
  }
  return result;
}

void *sub_1005138B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_100513B34((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_100513BE0((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_100513B34((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_100513A88(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_100513ACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100513B34(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100513B94()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100513BCC@<X0>(void *a1@<X8>)
{
  return sub_10050D11C(*(void **)(v1 + 16), a1);
}

uint64_t sub_100513BD4()
{
  return sub_10050CF68(v0[2], v0[3], v0[4]);
}

uint64_t sub_100513BE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_100513C48()
{
  TTRListEditor.edit(showingLargeAttachments:)(*(unsigned char *)(v0 + 16));
}

id sub_100513C7C(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100513F00();
  sub_100513F40();
  Class isa = Set._bridgeToObjectiveC()().super.isa;
  v10.receiver = v2;
  v10.super_class = ObjectType;
  [super pressesEnded:a2 withEvent:isa];

  id result = [v2 delegate];
  if (result)
  {
    id v8 = result;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      id v9 = v8;
    }
    else {
      id v9 = 0;
    }
    if (v9)
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_1004495D0(a1);
        swift_unknownObjectRelease();
      }
    }
    return (id)swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TTRIBoardColumnCollectionView()
{
  return self;
}

unint64_t sub_100513F00()
{
  unint64_t result = qword_1007A3578;
  if (!qword_1007A3578)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007A3578);
  }
  return result;
}

unint64_t sub_100513F40()
{
  unint64_t result = qword_1007A3580;
  if (!qword_1007A3580)
  {
    sub_100513F00();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A3580);
  }
  return result;
}

uint64_t *sub_100513F98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v16 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v17 + 48))(a2, 1, v16))
      {
        uint64_t v18 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
        memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        uint64_t v27 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        uint64_t v28 = *(void *)(v27 - 8);
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v28 + 48))(a2, 1, v27))
        {
          uint64_t v29 = sub_10003B754(&qword_100787088);
          memcpy(a1, a2, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v31 = type metadata accessor for IndexPath();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v31 - 8) + 16))(a1, a2, v31);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v28 + 56))(a1, 0, 1, v27);
        }
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v17 + 56))(a1, 0, 1, v16);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for IndexPath();
      uint64_t v8 = *(void *)(v7 - 8);
      id v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
      v9(a1, a2, v7);
      uint64_t v10 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v9((uint64_t *)((char *)a1 + *(int *)(v10 + 20)), (uint64_t *)((char *)a2 + *(int *)(v10 + 20)), v7);
      uint64_t v11 = *(int *)(v10 + 24);
      id v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7))
      {
        uint64_t v14 = sub_10003B754(&qword_10078E8F0);
        memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        v9((uint64_t *)v12, (uint64_t *)v13, v7);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
      }
    }
    else
    {
      uint64_t v19 = type metadata accessor for IndexPath();
      uint64_t v20 = *(void *)(v19 - 8);
      __n128 v21 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 16);
      v21(a1, a2, v19);
      uint64_t v22 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v21((uint64_t *)((char *)a1 + *(int *)(v22 + 20)), (uint64_t *)((char *)a2 + *(int *)(v22 + 20)), v19);
      uint64_t v23 = *(int *)(v22 + 24);
      unsigned __int8 v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))((char *)a2 + v23, 1, v19))
      {
        uint64_t v26 = sub_10003B754(&qword_10078E8F0);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        v21((uint64_t *)v24, (uint64_t *)v25, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
      }
      uint64_t v30 = type metadata accessor for TTRICollectionViewItemHit(0);
      *((unsigned char *)a1 + *(int *)(v30 + 20)) = *((unsigned char *)a2 + *(int *)(v30 + 20));
      *((unsigned char *)a1 + *(int *)(v30 + 24)) = *((unsigned char *)a2 + *(int *)(v30 + 24));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewHitIndexPaths(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A37B0);
}

uint64_t type metadata accessor for TTRICollectionViewItemHit(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A3718);
}

uint64_t type metadata accessor for TTRICollectionViewEmptySpaceType(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007A36A8);
}

uint64_t sub_100514534(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v10 = sub_10003B754((uint64_t *)&unk_10079CFF0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a1, 1, v10);
    if (result) {
      return result;
    }
    uint64_t v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11);
    if (result) {
      return result;
    }
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result > 2) {
      return result;
    }
    uint64_t v12 = type metadata accessor for IndexPath();
    id v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
    uint64_t v8 = v12;
    uint64_t v7 = a1;
  }
  else
  {
    if (result > 1) {
      return result;
    }
    uint64_t v3 = type metadata accessor for IndexPath();
    uint64_t v4 = *(void *)(v3 - 8);
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v13(a1, v3);
    uint64_t v5 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v13(a1 + *(int *)(v5 + 20), v3);
    uint64_t v6 = a1 + *(int *)(v5 + 24);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v6, 1, v3);
    if (result) {
      return result;
    }
    uint64_t v7 = v6;
    uint64_t v8 = v3;
    id v9 = (uint64_t (*)(uint64_t, uint64_t))v13;
  }

  return v9(v7, v8);
}

char *sub_10051474C(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = sub_10003B754((uint64_t *)&unk_10079CFF0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
    {
      size_t v11 = *(void *)(*(void *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      uint64_t v12 = a1;
LABEL_7:
      memcpy(v12, a2, v11);
      goto LABEL_17;
    }
    uint64_t v23 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(a2, 1, v23))
    {
      uint64_t v25 = sub_10003B754(&qword_100787088);
      memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v27 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, a2, v27);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = type metadata accessor for IndexPath();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v7(a1, a2, v5);
      uint64_t v8 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v5);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      a2 += v9;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        v7(v10, a2, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
        goto LABEL_17;
      }
      size_t v11 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
      uint64_t v12 = v10;
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for IndexPath();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v17(a1, a2, v15);
    uint64_t v18 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v15);
    uint64_t v19 = *(int *)(v18 + 24);
    uint64_t v20 = &a1[v19];
    __n128 v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&a2[v19], 1, v15))
    {
      uint64_t v22 = sub_10003B754(&qword_10078E8F0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v17(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    }
    uint64_t v26 = type metadata accessor for TTRICollectionViewItemHit(0);
    a1[*(int *)(v26 + 20)] = a2[*(int *)(v26 + 20)];
    a1[*(int *)(v26 + 24)] = a2[*(int *)(v26 + 24)];
  }
LABEL_17:
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100514C1C(char *a1, char *a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = a2;
    sub_10051663C((uint64_t)a1, type metadata accessor for TTRICollectionViewHitTestResult);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13))
      {
        uint64_t v23 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v3, 1, v23))
        {
          uint64_t v25 = sub_10003B754(&qword_100787088);
          memcpy(a1, v3, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v27 = type metadata accessor for IndexPath();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 16))(a1, v3, v27);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        goto LABEL_18;
      }
      size_t v11 = *(void *)(*(void *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      uint64_t v12 = a1;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v15 = type metadata accessor for IndexPath();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
        v17(a1, v3, v15);
        uint64_t v18 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
        v17(&a1[*(int *)(v18 + 20)], &v3[*(int *)(v18 + 20)], v15);
        uint64_t v19 = *(int *)(v18 + 24);
        uint64_t v20 = &a1[v19];
        __n128 v21 = &v3[v19];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v3[v19], 1, v15))
        {
          uint64_t v22 = sub_10003B754(&qword_10078E8F0);
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v17(v20, v21, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
        }
        uint64_t v26 = type metadata accessor for TTRICollectionViewItemHit(0);
        a1[*(int *)(v26 + 20)] = v3[*(int *)(v26 + 20)];
        a1[*(int *)(v26 + 24)] = v3[*(int *)(v26 + 24)];
        goto LABEL_18;
      }
      uint64_t v5 = type metadata accessor for IndexPath();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v6 + 16);
      v7(a1, v3, v5);
      uint64_t v8 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v7(&a1[*(int *)(v8 + 20)], &v3[*(int *)(v8 + 20)], v5);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      v3 += v9;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5))
      {
        v7(v10, v3, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
        goto LABEL_18;
      }
      size_t v11 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
      uint64_t v12 = v10;
    }
    memcpy(v12, v3, v11);
LABEL_18:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewHitTestResult(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A3600);
}

char *sub_100515130(char *a1, char *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = sub_10003B754((uint64_t *)&unk_10079CFF0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(a2, 1, v13))
    {
      size_t v11 = *(void *)(*(void *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      uint64_t v12 = a1;
LABEL_7:
      memcpy(v12, a2, v11);
      goto LABEL_17;
    }
    uint64_t v23 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    uint64_t v24 = *(void *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(a2, 1, v23))
    {
      uint64_t v25 = sub_10003B754(&qword_100787088);
      memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v27 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
  }
  else
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = type metadata accessor for IndexPath();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v7(a1, a2, v5);
      uint64_t v8 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v7(&a1[*(int *)(v8 + 20)], &a2[*(int *)(v8 + 20)], v5);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      a2 += v9;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        v7(v10, a2, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
        goto LABEL_17;
      }
      size_t v11 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
      uint64_t v12 = v10;
      goto LABEL_7;
    }
    uint64_t v15 = type metadata accessor for IndexPath();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
    v17(a1, a2, v15);
    uint64_t v18 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v17(&a1[*(int *)(v18 + 20)], &a2[*(int *)(v18 + 20)], v15);
    uint64_t v19 = *(int *)(v18 + 24);
    uint64_t v20 = &a1[v19];
    __n128 v21 = &a2[v19];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&a2[v19], 1, v15))
    {
      uint64_t v22 = sub_10003B754(&qword_10078E8F0);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      v17(v20, v21, v15);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
    }
    uint64_t v26 = type metadata accessor for TTRICollectionViewItemHit(0);
    a1[*(int *)(v26 + 20)] = a2[*(int *)(v26 + 20)];
    a1[*(int *)(v26 + 24)] = a2[*(int *)(v26 + 24)];
  }
LABEL_17:
  swift_storeEnumTagMultiPayload();
  return a1;
}

char *sub_100515600(char *a1, char *a2)
{
  if (a1 != a2)
  {
    uint64_t v3 = a2;
    sub_10051663C((uint64_t)a1, type metadata accessor for TTRICollectionViewHitTestResult);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      uint64_t v14 = *(void *)(v13 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v3, 1, v13))
      {
        uint64_t v23 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v3, 1, v23))
        {
          uint64_t v25 = sub_10003B754(&qword_100787088);
          memcpy(a1, v3, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          swift_getEnumCaseMultiPayload();
          uint64_t v27 = type metadata accessor for IndexPath();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, v3, v27);
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v13);
        goto LABEL_18;
      }
      size_t v11 = *(void *)(*(void *)(type metadata accessor for TTRICollectionViewEmptySpaceType(0) - 8) + 64);
      uint64_t v12 = a1;
    }
    else
    {
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v15 = type metadata accessor for IndexPath();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v17(a1, v3, v15);
        uint64_t v18 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
        v17(&a1[*(int *)(v18 + 20)], &v3[*(int *)(v18 + 20)], v15);
        uint64_t v19 = *(int *)(v18 + 24);
        uint64_t v20 = &a1[v19];
        __n128 v21 = &v3[v19];
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(&v3[v19], 1, v15))
        {
          uint64_t v22 = sub_10003B754(&qword_10078E8F0);
          memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v17(v20, v21, v15);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
        }
        uint64_t v26 = type metadata accessor for TTRICollectionViewItemHit(0);
        a1[*(int *)(v26 + 20)] = v3[*(int *)(v26 + 20)];
        a1[*(int *)(v26 + 24)] = v3[*(int *)(v26 + 24)];
        goto LABEL_18;
      }
      uint64_t v5 = type metadata accessor for IndexPath();
      uint64_t v6 = *(void *)(v5 - 8);
      uint64_t v7 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
      v7(a1, v3, v5);
      uint64_t v8 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
      v7(&a1[*(int *)(v8 + 20)], &v3[*(int *)(v8 + 20)], v5);
      uint64_t v9 = *(int *)(v8 + 24);
      uint64_t v10 = &a1[v9];
      v3 += v9;
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v3, 1, v5))
      {
        v7(v10, v3, v5);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v10, 0, 1, v5);
        goto LABEL_18;
      }
      size_t v11 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
      uint64_t v12 = v10;
    }
    memcpy(v12, v3, v11);
LABEL_18:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100515AF4()
{
  uint64_t result = type metadata accessor for TTRICollectionViewItemHit(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TTRICollectionViewHitIndexPaths(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for TTRICollectionViewEmptySpaceType(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_100515BF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10003B754((uint64_t *)&unk_10079CFF0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = sub_10003B754(&qword_100787088);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v13 = type metadata accessor for IndexPath();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100515E48(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (!result)
    {
      uint64_t result = swift_getEnumCaseMultiPayload();
      if (result <= 2)
      {
        uint64_t v5 = type metadata accessor for IndexPath();
        uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
        return v6(a1, v5);
      }
    }
  }
  return result;
}

void *sub_100515F54(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_10003B754(&qword_100787088);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v11 = type metadata accessor for IndexPath();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_10051616C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = sub_10003B754(&qword_100787088);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v21 = type metadata accessor for IndexPath();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10003B6F8((uint64_t)a1, (uint64_t *)&unk_10079CFF0);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  uint64_t v15 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(a1, 1, v15);
  int v19 = v17(a2, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v20 = type metadata accessor for IndexPath();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      return a1;
    }
    goto LABEL_17;
  }
  if (v19)
  {
    sub_10051663C((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
LABEL_17:
    size_t v14 = *(void *)(*(void *)(sub_10003B754(&qword_100787088) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10051663C((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    swift_getEnumCaseMultiPayload();
    uint64_t v23 = type metadata accessor for IndexPath();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_10051663C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_10051669C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = sub_10003B754(&qword_100787088);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v11 = type metadata accessor for IndexPath();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1005168B4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = sub_10003B754(&qword_100787088);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        swift_getEnumCaseMultiPayload();
        uint64_t v21 = type metadata accessor for IndexPath();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v21 - 8) + 32))(a1, a2, v21);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
    goto LABEL_7;
  }
  if (v10)
  {
    sub_10003B6F8((uint64_t)a1, (uint64_t *)&unk_10079CFF0);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  uint64_t v15 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  int v18 = v17(a1, 1, v15);
  int v19 = v17(a2, 1, v15);
  if (v18)
  {
    if (!v19)
    {
      swift_getEnumCaseMultiPayload();
      uint64_t v20 = type metadata accessor for IndexPath();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
      return a1;
    }
    goto LABEL_17;
  }
  if (v19)
  {
    sub_10051663C((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
LABEL_17:
    size_t v14 = *(void *)(*(void *)(sub_10003B754(&qword_100787088) - 8) + 64);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_10051663C((uint64_t)a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    swift_getEnumCaseMultiPayload();
    uint64_t v23 = type metadata accessor for IndexPath();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100516D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100516D98);
}

uint64_t sub_100516D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_100516E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100516E1C);
}

uint64_t sub_100516E1C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100516EA0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_100516F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

void sub_100516F80()
{
  sub_1005187D4(319, &qword_1007A36B8, (void (*)(uint64_t))type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

char *sub_100517014(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(void *)(v7 - 8);
    int v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
    v9(&a1[*(int *)(v10 + 20)], &a2[*(int *)(v10 + 20)], v7);
    uint64_t v11 = *(int *)(v10 + 24);
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v11], 1, v7))
    {
      uint64_t v14 = sub_10003B754(&qword_10078E8F0);
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      v9(v12, v13, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v12, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 24);
    a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
    a1[v16] = a2[v16];
  }
  return a1;
}

char *sub_1005171F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v6);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10003B754(&qword_10078E8F0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v14] = a2[v14];
  return a1;
}

uint64_t sub_100517380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v5);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = *(uint64_t (**)(void))(v6 + 48);
  uint64_t v17 = (void *)(a1 + v9);
  int v12 = v11();
  int v13 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v11)(v10, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(v17, v10, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v17, 0, 1, v5);
      goto LABEL_9;
    }
    size_t v14 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
    uint64_t v15 = v17;
  }
  else
  {
    if (!v13)
    {
      v7((uint64_t)v17, (uint64_t)v10, v5);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v17, v5);
    size_t v14 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
    uint64_t v15 = v17;
  }
  memcpy(v15, v10, v14);
LABEL_9:
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

char *sub_1005175A8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v8(&a1[*(int *)(v9 + 20)], &a2[*(int *)(v9 + 20)], v6);
  uint64_t v10 = *(int *)(v9 + 24);
  uint64_t v11 = &a1[v10];
  int v12 = &a2[v10];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v10], 1, v6))
  {
    uint64_t v13 = sub_10003B754(&qword_10078E8F0);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    v8(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 24);
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  a1[v14] = a2[v14];
  return a1;
}

uint64_t sub_100517734(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v7(a1 + *(int *)(v8 + 20), a2 + *(int *)(v8 + 20), v5);
  uint64_t v9 = *(int *)(v8 + 24);
  uint64_t v10 = (const void *)(a2 + v9);
  uint64_t v11 = *(uint64_t (**)(void))(v6 + 48);
  int v18 = (void *)(a1 + v9);
  int v12 = v11();
  int v13 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v11)(v10, 1, v5);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(v18, v10, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v18, 0, 1, v5);
      goto LABEL_9;
    }
    size_t v14 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
    uint64_t v15 = v18;
  }
  else
  {
    if (!v13)
    {
      v7((uint64_t)v18, (uint64_t)v10, v5);
      goto LABEL_9;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(v18, v5);
    size_t v14 = *(void *)(*(void *)(sub_10003B754(&qword_10078E8F0) - 8) + 64);
    uint64_t v15 = v18;
  }
  memcpy(v15, v10, v14);
LABEL_9:
  uint64_t v16 = *(int *)(a3 + 24);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  return a1;
}

uint64_t sub_100517958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051796C);
}

uint64_t sub_10051796C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100517A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100517A3C);
}

uint64_t sub_100517A3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_100517AF8()
{
  uint64_t result = type metadata accessor for TTRICollectionViewHitIndexPaths(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100517B90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)a1 + v10;
    int v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = sub_10003B754(&qword_10078E8F0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_100517D44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  v8(a1 + *(int *)(a2 + 20), v4);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_100517E64(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = sub_10003B754(&qword_10078E8F0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_100517FC8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10003B754(&qword_10078E8F0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

char *sub_100518194(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v11, 1, v6))
  {
    uint64_t v12 = sub_10003B754(&qword_10078E8F0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  return a1;
}

char *sub_1005182F8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v8(&a1[*(int *)(a3 + 20)], &a2[*(int *)(a3 + 20)], v6);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = sub_10003B754(&qword_10078E8F0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  return a1;
}

uint64_t sub_1005184C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005184D8);
}

uint64_t sub_1005184D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_10003B754(&qword_10078E8F0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 24);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1005185D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005185E8);
}

uint64_t sub_1005185E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_10003B754(&qword_10078E8F0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 24);
    return v13(v15, a2, a2, v14);
  }
}

void sub_1005186F0()
{
  type metadata accessor for IndexPath();
  if (v0 <= 0x3F)
  {
    sub_1005187D4(319, qword_10078E7E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1005187D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100518828()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100787088);
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = type metadata accessor for TTRICollectionViewGapHit(0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRICollectionViewItemHit(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  __chkstk_darwin(v17);
  int v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10051A2D8(v1, (uint64_t)v19, type metadata accessor for TTRICollectionViewHitTestResult);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_100519E88((uint64_t)v19, (uint64_t)v13, type metadata accessor for TTRICollectionViewGapHit);
      unint64_t v29 = 0x203A706147;
      unint64_t v30 = 0xE500000000000000;
      v21._countAndFlagsBits = sub_1005192FC();
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      uint64_t v22 = v29;
      uint64_t v23 = type metadata accessor for TTRICollectionViewGapHit;
      uint64_t v24 = (uint64_t)v13;
    }
    else
    {
      sub_100519E88((uint64_t)v19, (uint64_t)v10, type metadata accessor for TTRICollectionViewEmptySpaceType);
      sub_10051A2D8((uint64_t)v10, (uint64_t)v7, type metadata accessor for TTRICollectionViewEmptySpaceType);
      uint64_t v25 = sub_10003B754((uint64_t *)&unk_10079CFF0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v7, 1, v25) == 1)
      {
        uint64_t v22 = 0x6170537974706D65;
      }
      else
      {
        sub_10051A340((uint64_t)v7, (uint64_t)v4);
        unint64_t v29 = 0;
        unint64_t v30 = 0xE000000000000000;
        _StringGuts.grow(_:)(22);
        swift_bridgeObjectRelease();
        unint64_t v29 = 0xD000000000000013;
        unint64_t v30 = 0x80000001006BDBF0;
        v26._countAndFlagsBits = Optional.descriptionOrNil.getter();
        String.append(_:)(v26);
        swift_bridgeObjectRelease();
        v27._countAndFlagsBits = 41;
        v27._object = (void *)0xE100000000000000;
        String.append(_:)(v27);
        uint64_t v22 = v29;
        sub_10003B6F8((uint64_t)v4, &qword_100787088);
      }
      uint64_t v23 = type metadata accessor for TTRICollectionViewEmptySpaceType;
      uint64_t v24 = (uint64_t)v10;
    }
  }
  else
  {
    sub_100519E88((uint64_t)v19, (uint64_t)v16, type metadata accessor for TTRICollectionViewItemHit);
    uint64_t v22 = sub_100518C38();
    uint64_t v23 = type metadata accessor for TTRICollectionViewItemHit;
    uint64_t v24 = (uint64_t)v16;
  }
  sub_10051663C(v24, v23);
  return v22;
}

uint64_t sub_100518C38()
{
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10066C6F0;
  v2._countAndFlagsBits = sub_1005192FC();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = 0x203A746948;
  *(void *)(v1 + 40) = 0xE500000000000000;
  sub_10003B754((uint64_t *)&unk_1007A2330);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10066C680;
  uint64_t v4 = type metadata accessor for TTRICollectionViewItemHit(0);
  uint64_t v5 = 7368564;
  if (*(unsigned char *)(v0 + *(int *)(v4 + 20))) {
    uint64_t v5 = 0x6D6F74746F62;
  }
  unint64_t v6 = 0xE300000000000000;
  if (*(unsigned char *)(v0 + *(int *)(v4 + 20))) {
    unint64_t v6 = 0xE600000000000000;
  }
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v6;
  uint64_t v7 = 0x656C6464696DLL;
  if (*(unsigned char *)(v0 + *(int *)(v4 + 24)))
  {
    unint64_t v8 = 0xE600000000000000;
  }
  else
  {
    uint64_t v7 = 0;
    unint64_t v8 = 0;
  }
  *(void *)(v3 + 48) = v7;
  *(void *)(v3 + 56) = v8;
  sub_10003B754((uint64_t *)&unk_1007A03A0);
  sub_100037EA0(&qword_1007A2340, (uint64_t *)&unk_1007A03A0);
  Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = v9;
  v12._object = v11;
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  unint64_t v14 = *(void *)(v1 + 16);
  unint64_t v13 = *(void *)(v1 + 24);
  if (v14 >= v13 >> 1) {
    uint64_t v1 = (uint64_t)sub_100022F98((char *)(v13 > 1), v14 + 1, 1, (char *)v1);
  }
  *(void *)(v1 + 16) = v14 + 1;
  uint64_t v15 = v1 + 16 * v14;
  *(void *)(v15 + 32) = 0x2020202020;
  *(void *)(v15 + 40) = 0xE500000000000000;
  uint64_t v16 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_100518EBC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100787088);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10051A2D8(v1, (uint64_t)v7, type metadata accessor for TTRICollectionViewEmptySpaceType);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1) {
    return 0x6170537974706D65;
  }
  sub_10051A340((uint64_t)v7, (uint64_t)v4);
  unint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  unint64_t v13 = 0xD000000000000013;
  unint64_t v14 = 0x80000001006BDBF0;
  v10._countAndFlagsBits = Optional.descriptionOrNil.getter();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 41;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  unint64_t v9 = v13;
  sub_10003B6F8((uint64_t)v4, &qword_100787088);
  return v9;
}

uint64_t sub_100519094()
{
  if (*v0) {
    return 0x6D6F74746F62;
  }
  else {
    return 7368564;
  }
}

uint64_t sub_1005190C4()
{
  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = sub_1005192FC();
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0x6F6974726F70202CLL;
  v2._object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v2);
  uint64_t v3 = type metadata accessor for TTRICollectionViewItemHit(0);
  if (*(unsigned char *)(v0 + *(int *)(v3 + 20))) {
    uint64_t v4 = 0x6D6F74746F62;
  }
  else {
    uint64_t v4 = 7368564;
  }
  if (*(unsigned char *)(v0 + *(int *)(v3 + 20))) {
    unint64_t v5 = 0xE600000000000000;
  }
  else {
    unint64_t v5 = 0xE300000000000000;
  }
  unint64_t v6 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  v7._object = (void *)0x80000001006BDC10;
  v7._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v7);
  if (*(unsigned char *)(v0 + *(int *)(v3 + 24))) {
    uint64_t v8 = 1702195828;
  }
  else {
    uint64_t v8 = 0x65736C6166;
  }
  if (*(unsigned char *)(v0 + *(int *)(v3 + 24))) {
    unint64_t v9 = 0xE400000000000000;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  unint64_t v10 = v9;
  String.append(_:)(*(Swift::String *)&v8);
  swift_bridgeObjectRelease();
  return 0x746968206D657449;
}

uint64_t sub_100519224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_10051929C() & 1) != 0
    && *(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) == *(unsigned __int8 *)(a2 + *(int *)(a3 + 20)))
  {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 24)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 24)) ^ 1;
  }
  else
  {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1005192A0()
{
  v0._countAndFlagsBits = sub_1005192FC();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  return 0x203A706147;
}

uint64_t sub_1005192FC()
{
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  type metadata accessor for IndexPath();
  sub_100159F44((unint64_t *)&qword_10078C820);
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._countAndFlagsBits = 1030758444;
  v1._object = (void *)0xE400000000000000;
  String.append(_:)(v1);
  type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v2._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 1029972012;
  v3._object = (void *)0xE400000000000000;
  String.append(_:)(v3);
  sub_10003B754(&qword_10078E8F0);
  v4._countAndFlagsBits = Optional.descriptionOrNil.getter();
  String.append(_:)(v4);
  swift_bridgeObjectRelease();
  return 4025961;
}

uint64_t sub_10051944C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  uint64_t v33 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v31 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_1007A37F8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100787088);
  __chkstk_darwin(v9 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_1007A3800);
  __chkstk_darwin(v17 - 8);
  int v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = (uint64_t)&v19[*(int *)(v20 + 56)];
  sub_10051A2D8(a1, (uint64_t)v19, type metadata accessor for TTRICollectionViewEmptySpaceType);
  sub_10051A2D8(a2, v21, type metadata accessor for TTRICollectionViewEmptySpaceType);
  uint64_t v22 = sub_10003B754((uint64_t *)&unk_10079CFF0);
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48);
  if (v23((uint64_t)v19, 1, v22) == 1)
  {
    if (v23(v21, 1, v22) == 1) {
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  sub_10051A2D8((uint64_t)v19, (uint64_t)v16, type metadata accessor for TTRICollectionViewEmptySpaceType);
  if (v23(v21, 1, v22) != 1)
  {
    sub_10051A340(v21, (uint64_t)v13);
    uint64_t v24 = (uint64_t)&v8[*(int *)(v6 + 48)];
    sub_10051A340((uint64_t)v16, (uint64_t)v8);
    sub_10003B694((uint64_t)v13, v24, &qword_100787088);
    uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
    if (v25((uint64_t)v8, 1, v4) == 1)
    {
      sub_10003B6F8((uint64_t)v13, &qword_100787088);
      if (v25(v24, 1, v4) == 1)
      {
        sub_10003B6F8((uint64_t)v8, &qword_100787088);
LABEL_14:
        sub_10051663C((uint64_t)v19, type metadata accessor for TTRICollectionViewEmptySpaceType);
        return 1;
      }
    }
    else
    {
      uint64_t v26 = v32;
      sub_10003B694((uint64_t)v8, v32, &qword_100787088);
      if (v25(v24, 1, v4) != 1)
      {
        uint64_t v27 = v31;
        sub_100519E88(v24, v31, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        char v28 = sub_1005DD54C(v26, v27);
        sub_10051663C(v27, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        sub_10003B6F8((uint64_t)v13, &qword_100787088);
        sub_10051663C(v26, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        sub_10003B6F8((uint64_t)v8, &qword_100787088);
        if (v28) {
          goto LABEL_14;
        }
LABEL_15:
        sub_10051663C((uint64_t)v19, type metadata accessor for TTRICollectionViewEmptySpaceType);
        return 0;
      }
      sub_10003B6F8((uint64_t)v13, &qword_100787088);
      sub_10051663C(v26, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    }
    sub_10003B6F8((uint64_t)v8, &qword_1007A37F8);
    goto LABEL_15;
  }
  sub_10003B6F8((uint64_t)v16, &qword_100787088);
LABEL_6:
  sub_10003B6F8((uint64_t)v19, &qword_1007A3800);
  return 0;
}

uint64_t sub_10051994C(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v2 = type metadata accessor for TTRICollectionViewEmptySpaceType(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v33 = (uint64_t)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRICollectionViewGapHit(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRICollectionViewItemHit(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v32 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v32 - v17;
  uint64_t v19 = sub_10003B754(&qword_1007A37F0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v21[*(int *)(v22 + 56)];
  sub_10051A2D8(v34, (uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
  sub_10051A2D8(v35, v23, type metadata accessor for TTRICollectionViewHitTestResult);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10051A2D8((uint64_t)v21, (uint64_t)v18, type metadata accessor for TTRICollectionViewHitTestResult);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_100519E88(v23, (uint64_t)v9, type metadata accessor for TTRICollectionViewItemHit);
      if (sub_100519EF0((uint64_t)v18, (uint64_t)v9)
        && v18[*(int *)(v7 + 20)] == v9[*(int *)(v7 + 20)]
        && v18[*(int *)(v7 + 24)] == v9[*(int *)(v7 + 24)])
      {
        sub_10051663C((uint64_t)v9, type metadata accessor for TTRICollectionViewItemHit);
        sub_10051663C((uint64_t)v18, type metadata accessor for TTRICollectionViewItemHit);
        sub_10051663C((uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
        char v25 = 1;
        return v25 & 1;
      }
      sub_10051663C((uint64_t)v9, type metadata accessor for TTRICollectionViewItemHit);
      sub_10051663C((uint64_t)v18, type metadata accessor for TTRICollectionViewItemHit);
      sub_10051663C((uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
      goto LABEL_13;
    }
    char v28 = type metadata accessor for TTRICollectionViewItemHit;
    uint64_t v29 = (uint64_t)v18;
LABEL_12:
    sub_10051663C(v29, v28);
    sub_10003B6F8((uint64_t)v21, &qword_1007A37F0);
LABEL_13:
    char v25 = 0;
    return v25 & 1;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_10051A2D8((uint64_t)v21, (uint64_t)v12, type metadata accessor for TTRICollectionViewHitTestResult);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v30 = v33;
      sub_100519E88(v23, v33, type metadata accessor for TTRICollectionViewEmptySpaceType);
      char v25 = sub_10051944C((uint64_t)v12, v30);
      sub_10051663C(v30, type metadata accessor for TTRICollectionViewEmptySpaceType);
      uint64_t v26 = (uint64_t)v12;
      uint64_t v27 = type metadata accessor for TTRICollectionViewEmptySpaceType;
      goto LABEL_9;
    }
    char v28 = type metadata accessor for TTRICollectionViewEmptySpaceType;
    uint64_t v29 = (uint64_t)v12;
    goto LABEL_12;
  }
  sub_10051A2D8((uint64_t)v21, (uint64_t)v15, type metadata accessor for TTRICollectionViewHitTestResult);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    char v28 = type metadata accessor for TTRICollectionViewGapHit;
    uint64_t v29 = (uint64_t)v15;
    goto LABEL_12;
  }
  sub_100519E88(v23, (uint64_t)v6, type metadata accessor for TTRICollectionViewGapHit);
  char v25 = sub_100519EF0((uint64_t)v15, (uint64_t)v6);
  sub_10051663C((uint64_t)v6, type metadata accessor for TTRICollectionViewGapHit);
  uint64_t v26 = (uint64_t)v15;
  uint64_t v27 = type metadata accessor for TTRICollectionViewGapHit;
LABEL_9:
  sub_10051663C(v26, v27);
  sub_10051663C((uint64_t)v21, type metadata accessor for TTRICollectionViewHitTestResult);
  return v25 & 1;
}

uint64_t type metadata accessor for TTRICollectionViewGapHit(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A3860);
}

uint64_t sub_100519E88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_100519EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10078E8E8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v27 - v18;
  if ((static IndexPath.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v28 = v5;
  uint64_t v20 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  if ((static IndexPath.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  sub_10003B694(a1 + *(int *)(v20 + 24), (uint64_t)v19, &qword_10078E8F0);
  sub_10003B694(a2 + *(int *)(v20 + 24), (uint64_t)v16, &qword_10078E8F0);
  uint64_t v21 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_10003B694((uint64_t)v19, (uint64_t)v10, &qword_10078E8F0);
  sub_10003B694((uint64_t)v16, v21, &qword_10078E8F0);
  uint64_t v22 = v28;
  uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v23((uint64_t)v10, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v16, &qword_10078E8F0);
    sub_10003B6F8((uint64_t)v19, &qword_10078E8F0);
    if (v23(v21, 1, v4) == 1)
    {
      sub_10003B6F8((uint64_t)v10, &qword_10078E8F0);
      return 1;
    }
    goto LABEL_8;
  }
  sub_10003B694((uint64_t)v10, (uint64_t)v13, &qword_10078E8F0);
  if (v23(v21, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v16, &qword_10078E8F0);
    sub_10003B6F8((uint64_t)v19, &qword_10078E8F0);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v13, v4);
LABEL_8:
    sub_10003B6F8((uint64_t)v10, &qword_10078E8E8);
    return 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v7, v21, v4);
  sub_100159F44((unint64_t *)&qword_100787548);
  char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
  char v25 = *(void (**)(char *, uint64_t))(v22 + 8);
  v25(v7, v4);
  sub_10003B6F8((uint64_t)v16, &qword_10078E8F0);
  sub_10003B6F8((uint64_t)v19, &qword_10078E8F0);
  v25(v13, v4);
  sub_10003B6F8((uint64_t)v10, &qword_10078E8F0);
  return (v24 & 1) != 0;
}

uint64_t sub_10051A2D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10051A340(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100787088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_10051A3A8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v9((uint64_t *)((char *)a1 + *(int *)(v6 + 20)), (uint64_t *)((char *)a2 + *(int *)(v6 + 20)), v7);
    uint64_t v10 = *(int *)(v6 + 24);
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
    {
      uint64_t v13 = sub_10003B754(&qword_10078E8F0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9((uint64_t *)v11, (uint64_t *)v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10051A564(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v7(a1, v2);
  uint64_t v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v7(a1 + *(int *)(v4 + 20), v2);
  uint64_t v5 = a1 + *(int *)(v4 + 24);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v2);
  }
  return result;
}

char *sub_10051A68C(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  v6(a1, a2, v4);
  uint64_t v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    uint64_t v11 = sub_10003B754(&qword_10078E8F0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v6(v9, v10, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  return a1;
}

char *sub_10051A7F8(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  uint64_t v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  int v12 = v11(&a1[v8], 1, v4);
  int v13 = v11(v10, 1, v4);
  if (!v12)
  {
    if (!v13)
    {
      v6(v9, v10, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10003B754(&qword_10078E8F0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v9, v10, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  return a1;
}

char *sub_10051A9CC(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  v6(a1, a2, v4);
  uint64_t v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4))
  {
    uint64_t v11 = sub_10003B754(&qword_10078E8F0);
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    v6(v9, v10, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  }
  return a1;
}

char *sub_10051AB38(char *a1, char *a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(void *, const void *, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  uint64_t v7 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  v6(&a1[*(int *)(v7 + 20)], &a2[*(int *)(v7 + 20)], v4);
  uint64_t v8 = *(int *)(v7 + 24);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v5 + 48);
  int v12 = v11(&a1[v8], 1, v4);
  int v13 = v11(v10, 1, v4);
  if (!v12)
  {
    if (!v13)
    {
      v6(v9, v10, v4);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_10003B754(&qword_10078E8F0);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v9, v10, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
  return a1;
}

uint64_t sub_10051AD0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10051AD20);
}

uint64_t sub_10051AD20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10051AD8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10051ADA0);
}

uint64_t sub_10051ADA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRICollectionViewHitIndexPaths(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_10051AE10()
{
  uint64_t result = type metadata accessor for TTRICollectionViewHitIndexPaths(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRICollectionViewItemHit.Portion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10051AF68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRICollectionViewItemHit.Portion()
{
  return &type metadata for TTRICollectionViewItemHit.Portion;
}

unint64_t sub_10051AFA4()
{
  unint64_t result = qword_1007A3898;
  if (!qword_1007A3898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A3898);
  }
  return result;
}

uint64_t sub_10051AFF8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A38A0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A38A0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_10051B0C0(void *a1, void *a2, void *a3)
{
  unsigned int v4 = v3;
  __int16 v69 = a2;
  uint64_t v67 = a1;
  uint64_t v6 = *(void *)((swift_isaMask & *(void *)v3) + 0x50);
  uint64_t v62 = *(void *)((swift_isaMask & *(void *)v3) + 0x58);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v61 = AssociatedTypeWitness;
  __chkstk_darwin(AssociatedTypeWitness);
  long long v58 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int v59 = (char *)&v53 - v10;
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v65 = *(void *)(v11 - 8);
  uint64_t v66 = v11;
  __chkstk_darwin(v11);
  uint64_t v64 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v63 = (uint64_t)&v53 - v14;
  uint64_t v15 = type metadata accessor for Optional();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = *(void *)(v6 - 8);
  __chkstk_darwin(v20);
  uint64_t v56 = v21;
  long long v57 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v24 = (char *)&v53 - v23;
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v26 = result;
  id v68 = a3;
  sub_10012BDB8((uint64_t)a3, (uint64_t)v18);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v55 = v19;
  uint64_t v28 = v19 + 32;
  uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  v29(v24, v18, v6);
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    goto LABEL_18;
  }
  uint64_t v30 = result;
  uint64_t v31 = v69;
  swift_getObjectType();
  uint64_t v32 = (void *)sub_100119CD0();

  uint64_t v33 = sub_100350AFC((uint64_t)v32);
  uint64_t v54 = v28;
  char v53 = v29;
  if (!v33) {
    uint64_t v33 = sub_10051B86C((uint64_t)v4, v31);
  }
  [v31 setLocalContext:v33, v53, v54];
  uint64_t v34 = *(uint64_t (**)(void *, void *, char *))&v4[qword_1007A38C0];
  unint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v35 = result;
    uint64_t v36 = (void *)sub_100119CD0();

    unint64_t v27 = v34(v36, v31, v24);
    if (v27 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      id v37 = v68;
      if (v52) {
        goto LABEL_10;
      }
    }
    else
    {
      id v37 = v68;
      if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_10:
        __int16 v69 = (void *)v27;
        uint64_t v38 = v64;
        uint64_t v39 = v65;
        uint64_t v40 = v66;
        (*(void (**)(char *, id, uint64_t))(v65 + 16))(v64, v37, v66);
        swift_beginAccess();
        uint64_t v41 = v63;
        sub_1005A44F8(v63, v38);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v41, v40);
        swift_endAccess();
        sub_10051C340();
        if (sub_10051B978((uint64_t)v24, (uint64_t)v37, v67))
        {
          uint64_t v42 = v62;
          (*(void (**)(uint64_t, uint64_t))(v62 + 24))(v6, v62);
          uint64_t v43 = v24;
          swift_beginAccess();
          uint64_t v44 = v61;
          swift_getAssociatedConformanceWitness();
          type metadata accessor for Set();
          uint64_t v45 = v59;
          Set.insert(_:)();
          swift_endAccess();
          (*(void (**)(char *, uint64_t))(v60 + 8))(v45, v44);
          id v68 = self;
          uint64_t v46 = v55;
          uint64_t v47 = v57;
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v57, v43, v6);
          unint64_t v48 = (*(unsigned __int8 *)(v46 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v46 + 80);
          uint64_t v49 = (char *)swift_allocObject();
          *((void *)v49 + 2) = v6;
          *((void *)v49 + 3) = v42;
          *((void *)v49 + 4) = v4;
          v53(&v49[v48], v47, v6);
          aBlock[4] = sub_10051D16C;
          aBlock[5] = v49;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10000AD88;
          aBlock[3] = &unk_10074F330;
          uint64_t v50 = _Block_copy(aBlock);
          uint64_t v51 = v4;
          swift_release();
          [v68 animateWithDuration:v50 animations:0.2];
          _Block_release(v50);
          swift_release();
          (*(void (**)(char *, uint64_t))(v46 + 8))(v43, v6);
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v6);
          swift_release();
        }
        return v69;
      }
    }
    (*(void (**)(char *, uint64_t))(v55 + 8))(v24, v6);
    swift_release();
    return (void *)v27;
  }
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_10051B86C(uint64_t a1, void *a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unsigned int v4 = (void *)result;
    type metadata accessor for TTRIAnyTreeViewDragSessionContext();
    uint64_t v5 = sub_100119CD0();

    uint64_t v6 = swift_allocObject();
    sub_10051C564(v5);
    [a2 setLocalContext:v6];
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10051B938(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10051C564(a1);
  return v2;
}

uint64_t sub_10051B978(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v7 = *(void *)((swift_isaMask & *v3) + 0x50);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v24[-v10];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  uint64_t v13 = (void *)result;
  BOOL v14 = sub_10011AFD8(a1);

  if (!v14) {
    return 0;
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    goto LABEL_16;
  }
  uint64_t v15 = (void *)result;
  uint64_t v16 = *(void *)(v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v16 + 16))(v11, a1, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v11, 0, 1, v7);
  uint64_t v17 = sub_100120448((uint64_t)v11);
  char v19 = v18;

  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t result = 0;
  if ((v19 & 1) == 0 && v17 >= 1)
  {
    id v20 = [a3 indexPathsForSelectedRows];
    if (v20)
    {
      uint64_t v21 = v20;
      type metadata accessor for IndexPath();
      uint64_t v22 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v22 = _swiftEmptyArrayStorage;
    }
    __chkstk_darwin(v20);
    *(void *)&v24[-16] = a2;
    if (sub_1003E236C((uint64_t (*)(char *))sub_10051D1AC, (uint64_t)&v24[-32], (uint64_t)v22))
    {
      unint64_t v23 = v22[2];
      swift_bridgeObjectRelease();
      if (v23 > 1) {
        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 1;
  }
  return result;
}

void sub_10051BC28(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (id)Strong;
    sub_10013C0D4(a2, 100);
  }
  else
  {
    __break(1u);
  }
}

Class sub_10051BC94(void *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = a3;
  swift_unknownObjectRetain();
  id v12 = a1;
  sub_10051B0C0(v11, a4, v10);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100055B3C();
  v13.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v13.super.isa;
}

Class sub_10051BDE8(void *a1, double a2, double a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  BOOL v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v15 = a5;
  swift_unknownObjectRetain();
  id v16 = a1;
  sub_10051C75C(a6, (uint64_t)v14, a2, a3);

  swift_unknownObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  sub_100055B3C();
  v17.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v17.super.isa;
}

id sub_10051BF50(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  uint64_t v11 = (void *)sub_10051CBF8((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v11;
}

void sub_10051C060(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

void sub_10051C078(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

void sub_10051C090(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v8 = a3;
  swift_unknownObjectRetain();
  id v9 = a1;
  a5(a4);

  swift_unknownObjectRelease();
}

uint64_t sub_10051C114(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  char v8 = sub_10051CF98(a4);

  swift_unknownObjectRelease();
  return v8 & 1;
}

void sub_10051C178()
{
}

uint64_t sub_10051C1BC()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_10051C294()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_10051C340()
{
  if (qword_100785680 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_1007A38A0);
  swift_retain();
  unint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    int v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)int v3 = 136315138;
    uint64_t v8 = v4;
    swift_beginAccess();
    type metadata accessor for IndexPath();
    sub_10051D050();
    swift_bridgeObjectRetain();
    uint64_t v5 = Set.description.getter();
    unint64_t v7 = v6;
    swift_bridgeObjectRelease();
    sub_1000385A8(v5, v7, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "TTRIAnyTreeViewDragSessionContext: draggedIndexPaths updated: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release();
  }
}

uint64_t sub_10051C564(uint64_t a1)
{
  UUID.init()();
  *(void *)(v1 + qword_1007BBC58) = &_swiftEmptySetSingleton;
  uint64_t v3 = qword_1007BBC60;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  *(void *)(v1 + v3) = Set.init()();
  *(void *)(v1 + qword_1007BBC50) = a1;
  return v1;
}

uint64_t sub_10051C658()
{
  uint64_t v1 = v0 + qword_1007BBC48;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_10051C6EC()
{
  sub_10051C658();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIAnyTreeViewDragSessionContext()
{
  return sub_10003BC54();
}

void *sub_10051C75C(uint64_t a1, uint64_t a2, double a3, double a4)
{
  uint64_t v5 = v4;
  uint64_t v46 = a1;
  uint64_t v9 = swift_isaMask & *v4;
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v41 = (uint64_t)&v40 - v13;
  uint64_t v14 = *(void *)(v9 + 80);
  uint64_t v15 = type metadata accessor for Optional();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  char v18 = (char *)&v40 - v17;
  uint64_t v19 = *(void *)(v14 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v40 - v21;
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  char v24 = result;
  uint64_t v45 = a2;
  sub_10012BDB8(a2, (uint64_t)v18);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v18, v14);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result) {
    goto LABEL_18;
  }
  char v25 = result;
  char v26 = sub_10012BFB0((uint64_t)v22);

  if (v26)
  {
LABEL_12:
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
    return _swiftEmptyArrayStorage;
  }
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (!result)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v27 = result;
  swift_getObjectType();
  uint64_t v28 = (void *)sub_100119CD0();

  uint64_t v29 = sub_100350AFC((uint64_t)v28);
  if (!v29) {
    goto LABEL_12;
  }
  uint64_t v30 = *(uint64_t (**)(void *, uint64_t, char *, double, double))((char *)v5 + qword_1007A38C8);
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v31 = result;
    uint64_t v32 = (void *)sub_100119CD0();

    unint64_t v33 = v30(v32, v46, v22, a3, a4);
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v34 = v45;
      if (v39) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v34 = v45;
      if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_11:
        uint64_t v36 = v43;
        uint64_t v35 = v44;
        id v37 = v42;
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v42, v34, v44);
        swift_beginAccess();
        uint64_t v38 = v41;
        sub_1005A44F8(v41, v37);
        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v38, v35);
        swift_endAccess();
        sub_10051C340();
        swift_release();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
        return (void *)v33;
      }
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v22, v14);
    swift_release();
    return (void *)v33;
  }
LABEL_20:
  __break(1u);
  return result;
}

uint64_t sub_10051CBF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = (void *)result;
    sub_10012BDB8(a1, (uint64_t)v8);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    uint64_t v16 = *(uint64_t (**)(void *, char *))((char *)v2 + qword_1007A38D0);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v17 = (void *)result;
      char v18 = (void *)sub_100119CD0();

      uint64_t v15 = v16(v18, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
      return v15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10051CE48(uint64_t a1)
{
  *(void *)(v1 + qword_1007A38F8) = a1;
  swift_unknownObjectRelease();
  uint64_t v3 = *(void (**)(id, uint64_t))(v1 + qword_1007A38D8);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = (id)sub_100119CD0();
    swift_unknownObjectRetain();

    v3(v6, a1);
  }
  else
  {
    __break(1u);
  }
}

void sub_10051CEF4(uint64_t a1)
{
  *(void *)(v1 + qword_1007A38F8) = 0;
  swift_unknownObjectRelease();
  uint64_t v3 = *(void (**)(id, uint64_t))(v1 + qword_1007A38E0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = (id)sub_100119CD0();

    v3(v6, a1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10051CF98(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(void *, uint64_t))(v1 + qword_1007A38E8);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    id v6 = (void *)sub_100119CD0();

    char v7 = v3(v6, a1);
    return v7 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10051D020()
{
}

unint64_t sub_10051D050()
{
  unint64_t result = qword_10078E340;
  if (!qword_10078E340)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078E340);
  }
  return result;
}

uint64_t sub_10051D0A8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10051D16C()
{
  sub_10051BC28(*(void *)(v0 + 32), v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_10051D1AC()
{
  return sub_1003E7BB4() & 1;
}

uint64_t sub_10051D1CC(uint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_10051DF34(a1, a2, a3 & 0x1FF);
}

uint64_t sub_10051D1D4(uint64_t a1, uint64_t a2, __int16 a3)
{
  return sub_10051E410(a1, a2, a3 & 0x1FF);
}

uint64_t type metadata accessor for TTRDerivedUntouchedPresentationTreeMaker()
{
  return self;
}

uint64_t sub_10051D200(uint64_t a1)
{
  sub_10003B754(&qword_100789BD8);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = a1;
  sub_100037EA0(&qword_1007A09B0, &qword_100789BD8);
  swift_retain();
  return v2;
}

void *sub_10051D284(uint64_t a1, int a2)
{
  LODWORD(v97) = a2;
  uint64_t v98 = a1;
  uint64_t v101 = sub_10003B754(&qword_1007A09D8);
  uint64_t v99 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v3 = (char *)&v80 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v81);
  uint64_t v82 = (char *)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v5 - 8);
  uint64_t v92 = (uint64_t)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v90 = *(void *)(v7 - 8);
  uint64_t v91 = v7;
  __chkstk_darwin(v7);
  uint64_t v94 = (uint64_t)&v80 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v9 - 8);
  uint64_t v86 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  uint64_t v84 = *(void *)(v11 - 8);
  uint64_t v85 = v11;
  __chkstk_darwin(v11);
  uint64_t v87 = (uint64_t)&v80 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v96 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v100 = (uint64_t)&v80 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v80 = (uint64_t *)((char *)&v80 - v16);
  __chkstk_darwin(v17);
  uint64_t v95 = (uint64_t)&v80 - v18;
  __chkstk_darwin(v19);
  uint64_t v93 = (uint64_t)&v80 - v20;
  __chkstk_darwin(v21);
  uint64_t v88 = (uint64_t)&v80 - v22;
  __chkstk_darwin(v23);
  uint64_t v83 = (uint64_t)&v80 - v24;
  __chkstk_darwin(v25);
  unint64_t v27 = (char *)&v80 - v26;
  uint64_t v28 = sub_10003B754((uint64_t *)&unk_10079F410);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v80 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for TTRRemindersListTip();
  uint64_t v32 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  uint64_t v34 = (char *)&v80 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = sub_10056F4F4(0, 5, 0, (unint64_t)_swiftEmptyArrayStorage);
  uint64_t v89 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  sub_10003B694(v98 + *(int *)(v89 + 40), (uint64_t)v30, (uint64_t *)&unk_10079F410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31) == 1)
  {
    unint64_t v36 = v35;
    sub_10003B6F8((uint64_t)v30, (uint64_t *)&unk_10079F410);
    uint64_t v37 = v13;
    uint64_t v38 = v96;
  }
  else
  {
    sub_10051E078((uint64_t)v30, (uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTip);
    sub_10051E558((uint64_t)v34, (uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTip);
    swift_storeEnumTagMultiPayload();
    unint64_t v40 = *(void *)(v35 + 16);
    unint64_t v39 = *(void *)(v35 + 24);
    unint64_t v36 = v35;
    uint64_t v37 = v13;
    if (v40 >= v39 >> 1) {
      unint64_t v36 = sub_10056F4F4(v39 > 1, v40 + 1, 1, v35);
    }
    uint64_t v38 = v96;
    *(void *)(v36 + 16) = v40 + 1;
    sub_10051E078((uint64_t)v27, v36+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10051E5C0((uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListTip);
  }
  uint64_t v41 = (int *)v89;
  uint64_t v42 = v98;
  uint64_t v43 = v86;
  sub_10003B694(v98 + *(int *)(v89 + 96), v86, (uint64_t *)&unk_1007AD380);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v43, 1, v85) == 1)
  {
    sub_10003B6F8(v43, (uint64_t *)&unk_1007AD380);
    unint64_t v44 = v36;
  }
  else
  {
    uint64_t v45 = v43;
    uint64_t v46 = v87;
    sub_10051E078(v45, v87, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
    sub_10051E558(v46, v83, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
    swift_storeEnumTagMultiPayload();
    unint64_t v44 = v36;
    unint64_t v48 = *(void *)(v36 + 16);
    unint64_t v47 = *(void *)(v36 + 24);
    if (v48 >= v47 >> 1) {
      unint64_t v44 = sub_10056F4F4(v47 > 1, v48 + 1, 1, v36);
    }
    *(void *)(v44 + 16) = v48 + 1;
    sub_10051E078(v83, v44+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v48, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10051E5C0(v87, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
  }
  uint64_t v49 = v92;
  sub_10003B694(v42 + v41[25], v92, &qword_10079BAB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v49, 1, v91) == 1)
  {
    sub_10003B6F8(v49, &qword_10079BAB0);
  }
  else
  {
    uint64_t v50 = v49;
    uint64_t v51 = v94;
    sub_10051E078(v50, v94, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
    sub_10051E558(v51, v88, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
    swift_storeEnumTagMultiPayload();
    unint64_t v53 = *(void *)(v44 + 16);
    unint64_t v52 = *(void *)(v44 + 24);
    if (v53 >= v52 >> 1) {
      unint64_t v44 = sub_10056F4F4(v52 > 1, v53 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v53 + 1;
    sub_10051E078(v88, v44+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10051E5C0(v94, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  }
  if (*(unsigned char *)(v42 + v41[27]) == 1)
  {
    swift_storeEnumTagMultiPayload();
    unint64_t v55 = *(void *)(v44 + 16);
    unint64_t v54 = *(void *)(v44 + 24);
    if (v55 >= v54 >> 1) {
      unint64_t v44 = sub_10056F4F4(v54 > 1, v55 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v55 + 1;
    sub_10051E078(v93, v44+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  if (*(unsigned char *)(v42 + v41[29]) == 1)
  {
    swift_storeEnumTagMultiPayload();
    unint64_t v57 = *(void *)(v44 + 16);
    unint64_t v56 = *(void *)(v44 + 24);
    if (v57 >= v56 >> 1) {
      unint64_t v44 = sub_10056F4F4(v56 > 1, v57 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v57 + 1;
    sub_10051E078(v95, v44+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  uint64_t v58 = sub_1003EAB4C(v42, v97);
  if (v60)
  {
    uint64_t v61 = (uint64_t)v80;
    uint64_t *v80 = v58;
    *(unsigned char *)(v61 + 8) = v59 & 1;
    *(unsigned char *)(v61 + 9) = BYTE1(v59) & 1;
    *(unsigned char *)(v61 + 10) = BYTE2(v59) & 1;
    *(void *)(v61 + 16) = v60;
    swift_storeEnumTagMultiPayload();
    unint64_t v63 = *(void *)(v44 + 16);
    unint64_t v62 = *(void *)(v44 + 24);
    if (v63 >= v62 >> 1) {
      unint64_t v44 = sub_10056F4F4(v62 > 1, v63 + 1, 1, v44);
    }
    *(void *)(v44 + 16) = v63 + 1;
    sub_10051E078(v61, v44+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  int64_t v64 = *(void *)(v44 + 16);
  if (v64)
  {
    uint64_t v98 = v37;
    uint64_t v103 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004D337C(0, v64, 0);
    uint64_t v65 = *(unsigned __int8 *)(v38 + 80);
    unint64_t v97 = v44;
    uint64_t v66 = v44 + ((v65 + 32) & ~v65);
    uint64_t v67 = *(void *)(v38 + 72);
    do
    {
      uint64_t v68 = v100;
      sub_10051E558(v66, v100, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10051E558(v68, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v69 = v101;
      uint64_t v70 = &v3[*(int *)(v101 + 52)];
      *(void *)uint64_t v70 = 0;
      *((void *)v70 + 1) = 0;
      v70[16] = 1;
      *(void *)&v3[*(int *)(v69 + 56)] = _swiftEmptyArrayStorage;
      sub_10051E5C0(v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      unsigned __int8 v71 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D337C(0, v71[2] + 1, 1);
        unsigned __int8 v71 = v103;
      }
      unint64_t v73 = v71[2];
      unint64_t v72 = v71[3];
      if (v73 >= v72 >> 1)
      {
        sub_1004D337C(v72 > 1, v73 + 1, 1);
        unsigned __int8 v71 = v103;
      }
      v71[2] = v73 + 1;
      unint64_t v74 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
      sub_100028C3C((uint64_t)v3, (uint64_t)v71 + v74 + *(void *)(v99 + 72) * v73, &qword_1007A09D8);
      v66 += v67;
      --v64;
    }
    while (v64);
    swift_bridgeObjectRelease_n();
    unsigned char *v82 = 13;
    swift_storeEnumTagMultiPayload();
    sub_100105478(v102);
    sub_100028C3C((uint64_t)v102, (uint64_t)v104, (uint64_t *)&unk_10079CA00);
    uint64_t v75 = v100;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    swift_storeEnumTagMultiPayload();
    sub_10003B754(&qword_1007A13C0);
    uint64_t v76 = swift_allocObject();
    *(_OWORD *)(v76 + 16) = xmmword_10066C6F0;
    sub_10051E558(v75, v76 + v74, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v77 = v101;
    unint64_t v78 = v76 + v74 + *(int *)(v101 + 52);
    *(void *)unint64_t v78 = 0;
    *(void *)(v78 + 8) = 0;
    *(unsigned char *)(v78 + 16) = 1;
    *(void *)(v76 + v74 + *(int *)(v77 + 56)) = v71;
    sub_10051E5C0(v75, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return (void *)v76;
}

uint64_t sub_10051DF34(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_10003B754(&qword_100789BD8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  swift_retain();
  swift_retain();
  if (sub_10051D284(a2, a3 & 0x1FF)[2])
  {
    sub_10003B754(&qword_10078C500);
    TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)();
    swift_release();
    sub_10003B754(&qword_1007A3AF8);
    swift_allocObject();
    uint64_t v6 = TTRTreeStorageDerivedTreeWithDesignatedInitialItems.init(upstreamTree:designatedItemTree:)();
    uint64_t v7 = (unint64_t *)&unk_1007A3B00;
    uint64_t v8 = &qword_1007A3AF8;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v7 = &qword_1007A09B0;
    uint64_t v8 = &qword_100789BD8;
  }
  sub_100037EA0(v7, v8);
  return v6;
}

uint64_t sub_10051E078(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10051E0E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v7);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10051E558(a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  LODWORD(a2) = v11[*(int *)(v9 + 120)];
  sub_10051E5C0((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (a2 == 1)
  {
    *uint64_t v6 = 2;
    swift_storeEnumTagMultiPayload();
    sub_100105478(v19);
    sub_100028C3C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_10079CA00);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = &qword_1007A3B38;
    sub_10003B754(&qword_1007A3B38);
    swift_allocObject();
    uint64_t v13 = TTRTreeStorageDerivedRerootedTree.init(upstreamTree:rootItem:)();
    uint64_t v14 = (unint64_t *)&unk_1007A3B40;
  }
  else
  {
    sub_10003B754(&qword_1007A3B20);
    *(void *)(swift_allocObject() + 16) = a1;
    *uint64_t v6 = 2;
    swift_storeEnumTagMultiPayload();
    sub_100105478(v19);
    sub_100028C3C((uint64_t)v19, (uint64_t)v20, (uint64_t *)&unk_10079CA00);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = &qword_1007A3B28;
    sub_10003B754(&qword_1007A3B28);
    swift_allocObject();
    uint64_t v13 = TTRTreeStorageDerivedRerootedTree.init(upstreamTree:rootItem:)();
    uint64_t v14 = (unint64_t *)&unk_1007A3B30;
  }
  uint64_t v15 = sub_100037EA0(v14, v12);
  sub_10003B754(&qword_100789B90);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v13;
  *(void *)(v16 + 24) = v15;
  swift_retain();
  return v16;
}

uint64_t sub_10051E410(uint64_t a1, uint64_t a2, __int16 a3)
{
  sub_10003B754(&qword_100789BD8);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  swift_retain();
  uint64_t v7 = sub_10051E0E0(v6, a2);
  if (sub_10051D284(a2, a3 & 0x1FF)[2])
  {
    sub_10003B754(&qword_10078C500);
    TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)();
    swift_release();
    sub_10003B754(&qword_1007A3B08);
    swift_allocObject();
    uint64_t v7 = TTRTreeStorageDerivedTreeWithDesignatedInitialItems.init(upstreamTree:designatedItemTree:)();
    uint64_t v8 = (unint64_t *)&unk_1007A3B10;
    uint64_t v9 = &qword_1007A3B08;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v8 = (unint64_t *)&unk_1007A3B18;
    uint64_t v9 = &qword_100789B90;
  }
  sub_100037EA0(v8, v9);
  return v7;
}

uint64_t sub_10051E558(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10051E5C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_10051E6A4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIDebugController();
  return [super dealloc];
}

uint64_t type metadata accessor for TTRIDebugController()
{
  return self;
}

id sub_10051E70C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView;
  objc_super v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 0.0, 0.0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    objc_super v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10051E790()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess();
  sub_100038338(v1, (uint64_t)v7);
  if (!v8)
  {
    sub_1000383A0((uint64_t)v7);
LABEL_6:
    id v3 = (uint64_t *)TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor();
    goto LABEL_7;
  }
  sub_100038E2C((uint64_t)v7, (uint64_t)v6);
  sub_1000383A0((uint64_t)v7);
  uint64_t v2 = v6[0];
  sub_100038D6C((uint64_t)v6);
  if (v2 <= 0
    || !*(void *)(v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName + 8))
  {
    goto LABEL_6;
  }
  id v3 = (uint64_t *)TTRAccesibility.AccountsList.Format.GroupMemberName_ItemCount.unsafeMutableAddressor();
LABEL_7:
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  return v4;
}

void sub_10051E874(uint64_t a1, uint64_t a2)
{
  v8.receiver = v2;
  v8.super_class = (Class)type metadata accessor for TTRIAccountsListsBaseCell();
  [super didUpdateFocusInContext:a1 withAnimationCoordinator:a2];
  if ((static UIAccessibility.ttriIsFullKeyboardAccessRunning.getter() & 1) == 0)
  {
    if ([v2 isFocused]) {
      uint64_t v5 = 2;
    }
    else {
      uint64_t v5 = 0;
    }
    id v6 = [v2 contentView];
    [v6 setOverrideUserInterfaceStyle:v5];

    id v7 = [v2 accessoryView];
    [v7 setOverrideUserInterfaceStyle:v5];
  }
}

uint64_t sub_10051EAEC()
{
  uint64_t v1 = v0;
  id v2 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)((char *)v0
                                                             + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel), "text"));
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    id v7 = (uint64_t *)TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor();
    uint64_t v4 = *v7;
    uint64_t v6 = v7[1];
    swift_bridgeObjectRetain();
  }
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10066C6F0;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v6;
  uint64_t v42 = v8;
  uint64_t v9 = *(void **)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_subtitleLabel);
  id v10 = [v9 text];
  if (v10)
  {
    uint64_t v11 = v10;
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    swift_bridgeObjectRelease();
    uint64_t v15 = HIBYTE(v14) & 0xF;
    if ((v14 & 0x2000000000000000) == 0) {
      uint64_t v15 = v12 & 0xFFFFFFFFFFFFLL;
    }
    if (v15)
    {
      id v16 = [v9 text];
      if (v16)
      {
        uint64_t v17 = v16;
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v20 = v19;

        unint64_t v22 = *(void *)(v8 + 16);
        unint64_t v21 = *(void *)(v8 + 24);
        if (v22 >= v21 >> 1) {
          uint64_t v8 = (uint64_t)sub_100022F98((char *)(v21 > 1), v22 + 1, 1, (char *)v8);
        }
        *(void *)(v8 + 16) = v22 + 1;
        uint64_t v23 = v8 + 16 * v22;
        *(void *)(v23 + 32) = v18;
        *(void *)(v23 + 40) = v20;
        uint64_t v42 = v8;
      }
    }
  }
  if (*(void *)((char *)v1
                 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes))
  {
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_100569C10(v24);
    uint64_t v8 = v42;
  }
  v41[0] = v8;
  TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v25 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  uint64_t v28 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x1E0))(v28);
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount + 8)) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = *(void *)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount);
  }
  uint64_t v30 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess();
  sub_100038338(v30, (uint64_t)v41);
  if (!v41[5])
  {
    sub_1000383A0((uint64_t)v41);
LABEL_22:
    sub_10003B754((uint64_t *)&unk_100788EE0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_10066C680;
    *(void *)(v36 + 56) = &type metadata for String;
    unint64_t v37 = sub_1000965C8();
    *(void *)(v36 + 32) = v25;
    *(void *)(v36 + 40) = v27;
    *(void *)(v36 + 96) = &type metadata for Int;
    *(void *)(v36 + 104) = &protocol witness table for Int;
    *(void *)(v36 + 64) = v37;
    *(void *)(v36 + 72) = v29;
    goto LABEL_23;
  }
  sub_100038E2C((uint64_t)v41, (uint64_t)v40);
  sub_1000383A0((uint64_t)v41);
  uint64_t v31 = v40[0];
  sub_100038D6C((uint64_t)v40);
  if (v31 <= 0) {
    goto LABEL_22;
  }
  uint64_t v32 = *(void *)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName + 8);
  if (!v32) {
    goto LABEL_22;
  }
  uint64_t v33 = *(void *)((char *)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName);
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_100671350;
  *(void *)(v34 + 56) = &type metadata for String;
  unint64_t v35 = sub_1000965C8();
  *(void *)(v34 + 32) = v25;
  *(void *)(v34 + 40) = v27;
  *(void *)(v34 + 96) = &type metadata for Int;
  *(void *)(v34 + 104) = &protocol witness table for Int;
  *(void *)(v34 + 64) = v35;
  *(void *)(v34 + 72) = v29;
  *(void *)(v34 + 136) = &type metadata for String;
  *(void *)(v34 + 144) = v35;
  *(void *)(v34 + 112) = v33;
  *(void *)(v34 + 120) = v32;
  swift_bridgeObjectRetain();
LABEL_23:
  uint64_t v38 = String.init(format:_:)();
  swift_bridgeObjectRelease();
  return v38;
}

id sub_10051F10C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsBaseCell();
  return [super dealloc];
}

uint64_t sub_10051F220()
{
  return swift_unknownObjectWeakLoadStrong();
}

void (*sub_10051F274(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v8 = *(void *)(v6 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_10010F184;
}

uint64_t sub_10051F300()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10051F338(void *a1, void *a2)
{
  id v4 = [a1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter() & 1;
  id v6 = [a2 preferredContentSizeCategory];
  LODWORD(v5) = UIContentSizeCategory.isAccessibilityCategory.getter() & 1;

  if (v4 != v5)
  {
    *((unsigned char *)a1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows) = 1;
    [a1 setNeedsLayout];
  }
}

void sub_10051F41C()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityCount];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  objc_super v2 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityGroupName];
  *objc_super v2 = 0;
  v2[1] = 0;
  id v3 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel];
  *(_OWORD *)id v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  *((void *)v3 + 6) = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_leadingControl] = 0;
  v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_unitTest_forceLargeTextLayout] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_ttriAccessibilityAdditionalLabelAttributes] = 0;
  id v4 = &v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_totalIndentation];
  *(void *)id v4 = 0;
  void v4[8] = 1;
  v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_needsUpdateGridSubviewRows] = 1;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell____lazy_storage___fillerView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10051F544()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10051F57C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10051F58C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  id v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  id v7 = &v19[-v6];
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v8 - 8);
  id v10 = &v19[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v11 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess();
    sub_100247978(v13, (uint64_t)v10);
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v11 + 8) + 16))(v10, ObjectType);
    swift_unknownObjectRelease();
    sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_10079CA20);
  }
  uint64_t v14 = v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess();
  uint64_t v15 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  if (!result)
  {
    sub_100520C78(v14, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000AA9AC((uint64_t)v5, (uint64_t)v7);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter + 8);
    uint64_t v18 = swift_getObjectType();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v17 + 80))(v7, v18, v17);
    return sub_100520CE0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return result;
}

uint64_t sub_10051F7DC()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess();
  sub_100247978(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_10079CA20);
  if (v4 == 1 || (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) == 0)
  {
    char v12 = 0;
  }
  else
  {
    id v7 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    uint64_t v8 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 88);
    id v11 = v7;
    char v12 = v10(ObjectType, v8);
    swift_unknownObjectRelease();
  }
  return v12 & 1;
}

uint64_t sub_10051F954()
{
  uint64_t v1 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v21 - v5;
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v10 - 8);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess();
  uint64_t v14 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14)) {
    return 0;
  }
  sub_100520C78(v13, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.sectionCasesOnly.getter();
  sub_100520CE0((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100520C78((uint64_t)v6, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v3, 1, v15) == 1)
  {
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
  }
  else
  {
    sub_100520C78((uint64_t)v3, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_100520CE0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 0, 1, v16);
  }
  sub_100520CE0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  type metadata accessor for TTRRemindersListViewModel.SectionID();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v12, 1, v16) == 1)
  {
    sub_10003B6F8((uint64_t)v12, &qword_10078C890);
    return 0;
  }
  uint64_t v17 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
  char v19 = v18;
  sub_100520CE0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  uint64_t result = 0;
  switch(v19)
  {
    case 1:

      uint64_t result = 1;
      break;
    case 3:
      return result;
    default:

      return 0;
  }
  return result;
}

uint64_t sub_10051FD20()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1);
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle)) {
      uint64_t v3 = 3;
    }
    else {
      uint64_t v3 = 0;
    }
    sub_100246F6C(v3, (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) & 1) == 0, *(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) & 1);
    swift_unknownObjectRelease();
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = *(void *)(v0 + 40);
    uint64_t v5 = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v4 + 16))(v0, &off_10074F470, 1, v5, v4);
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1005205B0(v0, 1, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10051FE40()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v1 + 16))(v0, &off_10074F470, 2, ObjectType, v1);
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1005205B0(v0, 2, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10051FEF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_editingPresenter + 8);
  if (!swift_unknownObjectWeakLoadStrong()
    || (uint64_t v3 = *(void *)(v0 + 24),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v5 = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(ObjectType),
        unint64_t v7 = v6,
        swift_unknownObjectRelease(),
        !v7))
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = 0;
    unint64_t v7 = 0xE000000000000000;
  }
  uint64_t v8 = swift_getObjectType();
  (*(void (**)(uint64_t, unint64_t, void, uint64_t, uint64_t))(v2 + 72))(v5, v7, *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_listLayout), v8, v2);
  swift_bridgeObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    sub_100246F6C(*(void *)(Strong+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins), *(unsigned char *)(Strong+ OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins+ 8), 0);
    swift_unknownObjectRelease();
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v10 = *(void *)(v1 + 40);
    uint64_t v11 = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v10 + 16))(v1, &off_10074F470, 3, v11, v10);
    swift_unknownObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1005205B0(v1, 3, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005200AC()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  sub_1000499D4(v0 + 48);
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel, (uint64_t *)&unk_10079CA20);

  swift_unknownObjectRelease();
  sub_100038CD8(v0 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_router);
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100520170()
{
  return type metadata accessor for TTRIRemindersListEditableSectionNamePresenter();
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNamePresenter()
{
  uint64_t result = qword_1007A3F68;
  if (!qword_1007A3F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005201C4()
{
  sub_1004CB97C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_100520298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess();
  return sub_100247978(v3, a1);
}

uint64_t sub_1005202F4()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v2 + 8) + 32))(ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100520368(char *a1, char a2)
{
  uint64_t v3 = v2;
  char v5 = a2 & 1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1002469C4(a1);
    swift_unknownObjectRelease();
  }
  uint64_t v6 = OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_layoutStyle) = v5;
  unsigned __int8 v7 = [a1 isEditing];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    char v10 = *(unsigned char *)(v3 + v6) & 1;
    char v11 = v10 == 0;
    if (v10) {
      uint64_t v12 = 3;
    }
    else {
      uint64_t v12 = 0;
    }
    if ((v7 & 1) == 0)
    {
      char v10 = 0;
      uint64_t v12 = *(void *)(v9
                      + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins);
      char v11 = *(unsigned char *)(v9
                     + OBJC_IVAR____TtC9Reminders50TTRIRemindersListEditableSectionNameViewController_previousLineIndexWhereClippingBegins
                     + 8);
    }
    sub_100246F6C(v12, v11, v10 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100520454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void *)(v4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + 24))(a3, a4, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005204E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100520734(v4, a3, a4, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100520558()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1005209E4(v0, result);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005205B0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(a1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v7 + 8))(a1, &off_10074F470, ObjectType, v7);
    uint64_t v11 = v10;
    uint64_t result = swift_unknownObjectRelease();
    if (v9)
    {
      uint64_t v16 = swift_getObjectType();
      uint64_t v17 = *(void *)(v11 + 8);
      *(void *)&long long v15 = v9;
      sub_100038ED8(&v15, (uint64_t)v18);
      uint64_t v12 = a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
      swift_beginAccess();
      sub_100347580(v12, (uint64_t)&v15);
      LOBYTE(v15) = 1;
      sub_100339678((uint64_t)&v15);
      switch(a2)
      {
        case 1:
          sub_1000145EC((uint64_t)v18, (uint64_t)v13);
          HIBYTE(v14) = 0;
          goto LABEL_6;
        case 2:
          sub_1000145EC((uint64_t)v18, (uint64_t)v13);
          __int16 v14 = 257;
LABEL_6:
          sub_100347580(v12, (uint64_t)&v15);
          sub_10034763C((uint64_t)v13, (uint64_t)&v15 + 8);
          sub_100339678((uint64_t)&v15);
          break;
        default:
          return sub_100038CD8((uint64_t)v18);
      }
      return sub_100038CD8((uint64_t)v18);
    }
  }
  return result;
}

uint64_t sub_100520734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v12 - 8);
  __int16 v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v25 - v19;
  uint64_t v21 = a1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess();
  sub_100247978(v21, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8)) {
    return sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10079CA20);
  }
  sub_100520C78((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10079CA20);
  sub_100520C78((uint64_t)v11, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100520CE0((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_1000AA9AC((uint64_t)v17, (uint64_t)v20);
  uint64_t v23 = *(void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v23 + 864))(v20, a2, a3, ObjectType, v23);
  return sub_100520CE0((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_1005209E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v21 - v15;
  uint64_t v17 = a1 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
  swift_beginAccess();
  sub_100247978(v17, (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4)) {
    return sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_10079CA20);
  }
  sub_100520C78((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_10079CA20);
  sub_100520C78((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100520CE0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  sub_1000AA9AC((uint64_t)v13, (uint64_t)v16);
  uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 872))(v16, ObjectType, v19);
  return sub_100520CE0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100520C78(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100520CE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100520D40()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A4038);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A4038);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100520E08()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  sub_1000D89E0(*(void **)(v0 + 48));
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 120);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIAboutYourDevicesPresenter()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for TTRISmartListFilterEditorModuleAction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100520F5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorModuleAction()
{
  return &type metadata for TTRISmartListFilterEditorModuleAction;
}

unint64_t sub_100520F98()
{
  unint64_t result = qword_1007A4110;
  if (!qword_1007A4110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A4110);
  }
  return result;
}

uint64_t sub_100520FEC(void *a1, void *a2)
{
  swift_getObjectType();
  type metadata accessor for RDIDispatchQueue();
  unsigned int v4 = (void *)static RDIDispatchQueue.storeQueue.getter();
  sub_10007CD0C();
  static OS_dispatch_queue.main.getter();
  type metadata accessor for REMContactsProvider();
  swift_allocObject();
  id v5 = v4;
  REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)();
  type metadata accessor for TTRReminderLocationOptionsProvider();
  swift_allocObject();
  id v6 = a1;
  swift_retain();
  id v10 = a2;
  TTRReminderLocationOptionsProvider.init(store:meCardProvider:geoService:)();
  type metadata accessor for TTRLocationQuickPicksInteractor();
  swift_allocObject();
  id v7 = v10;
  swift_retain();
  uint64_t v8 = TTRLocationQuickPicksInteractor.init(geoService:locationOptionsProvider:)();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_100521190()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A4118);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A4118);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100521258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[4] = a2;
  v3[5] = a3;
  v3[3] = a1;
  return _swift_task_switch(sub_1005212EC, 0, 0);
}

uint64_t sub_1005212EC()
{
  uint64_t v1 = (id *)(v0 + 2);
  unint64_t v2 = v0[5];
  int v3 = (void *)v0[3];
  id v4 = [v3 store];
  id v5 = [v3 objectID];
  if (v2 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  *uint64_t v1 = 0;
  id v7 = [v4 createShareForListWithID:v5 appIconData:isa error:v0 + 2];

  if (*v1)
  {
    *v1;

LABEL_6:
    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  if (!v7)
  {
    if (qword_1007856B0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_1007A4118);
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Failed to create share for list", v14, 2u);
      swift_slowDealloc();
    }

    sub_100522A78();
    swift_allocError();
    goto LABEL_6;
  }
  id v10 = (uint64_t (*)(id))v0[1];
  return v10(v7);
}

void sub_10052156C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1007856B0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100018BF8(v5, (uint64_t)qword_1007A4118);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000385A8(a2, a3, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v8 = Error.localizedDescription.getter();
      sub_1000385A8(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Could not add share observer for {accountID: %s, error: %s}", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1005217E0(uint64_t a1, void *a2)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1007856B0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_1007A4118);
    swift_errorRetain();
    id v4 = a2;
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      id v17 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412546;
      id v8 = [v4 objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v7 = v8;

      *(_WORD *)(v6 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v9 = Error.rem_errorDescription.getter();
      sub_1000385A8(v9, v10, (uint64_t *)&v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v5, "Failed to stop share {list.objectID: %@, error: %s}", (uint8_t *)v6, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return;
    }
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  else
  {
    if (qword_1007856B0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_1007A4118);
    oslog = a2;
    uint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138543362;
      id v17 = [oslog objectID];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v15 = v17;

      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Cleaning up canceled share. Successfully stopped share. {list.objectID: %{public}@}", v14, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

void _s9Reminders23TTRListSharingUtilitiesC26addCKShareObserverIfNeeded3forySo7REMListC_tFZ_0(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 account];
  id v8 = [v7 accountTypeHost];

  LODWORD(v7) = [v8 isCloudKit];
  if (v7)
  {
    id v9 = [a1 account];
    id v10 = [v9 remObjectID];

    id v11 = [v10 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v12 = UUID.uuidString.getter();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    id v15 = [a1 store];
    NSString v16 = String._bridgeToObjectiveC()();
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    id v17 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v12;
    *(void *)(v18 + 24) = v14;
    aBlock[4] = sub_100522B44;
    aBlock[5] = v18;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009ADC;
    aBlock[3] = &unk_10074F678;
    uint64_t v19 = _Block_copy(aBlock);
    swift_release();
    [v15 addCKShareObserverIfNeededForAccountID:v16 queue:v17 completion:v19];
    _Block_release(v19);
  }
}

id _s9Reminders23TTRListSharingUtilitiesC17shareItemProvider3forSo06NSItemG0CSo7REMListC_tFZ_0(void *a1)
{
  uint64_t v2 = self;
  id v3 = [a1 account];
  id v4 = [v2 newCloudContainerForAccount:v3];

  id v5 = [self rem_remindersAllowedSharingOptions];
  id v6 = [objc_allocWithZone((Class)NSItemProvider) init];
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  type metadata accessor for RemindersUICoreBundleLookupObject();
  id v7 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
  id v8 = (UIImage *)static UIImage.ttr_image(named:in:)();

  if (v8 && (id v9 = UIImagePNGRepresentation(v8), v8, v9))
  {
    uint64_t v10 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v12 = 0xF000000000000000;
  }
  id v13 = [a1 store];
  id v14 = [a1 objectID];
  *(void *)&long long v20 = 0;
  id v15 = [v13 fetchShareForListWithID:v14 error:&v20];

  if ((void)v20)
  {
    id v16 = (id)v20;

    swift_willThrow();
LABEL_7:
    id v17 = (void *)swift_allocObject();
    v17[2] = a1;
    v17[3] = v10;
    v17[4] = v12;
    sub_100522A50(v10, v12);
    id v18 = a1;
    NSItemProvider.registerCKShare(container:allowedSharingOptions:preparationHandler:)();
    sub_100522A64(v10, v12);
    swift_release();
    goto LABEL_13;
  }
  if (!v15) {
    goto LABEL_7;
  }
  static CKShare.SystemFieldKey.thumbnailImageData.getter();
  if (v12 >> 60 == 15)
  {
    unint64_t v22 = 0;
    long long v20 = 0u;
    long long v21 = 0u;
  }
  else
  {
    *((void *)&v21 + 1) = &type metadata for Data;
    unint64_t v22 = &protocol witness table for Data;
    *(void *)&long long v20 = v10;
    *((void *)&v20 + 1) = v12;
  }
  sub_100522A50(v10, v12);
  sub_1000368FC(0, &qword_1007A9FD0);
  CKRecordKeyValueSetting.subscript.setter();
  NSItemProvider.registerCKShare(_:container:allowedSharingOptions:)((CKShare)v15, (CKContainer)v4, (CKAllowedSharingOptions)v5);
  sub_100522A64(v10, v12);

LABEL_13:
  return v6;
}

void _s9Reminders23TTRListSharingUtilitiesC11cancelShare3forySo7REMListC_tFZ_0(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 account];
  id v8 = [v7 accountTypeHost];

  LODWORD(v7) = [v8 isCloudKit];
  if (v7)
  {
    id v9 = [a1 store];
    id v10 = [a1 objectID];
    aBlock[0] = 0;
    unint64_t v11 = [v9 fetchShareForListWithID:v10 error:aBlock];

    if (aBlock[0])
    {
      id v12 = aBlock[0];

      swift_willThrow();
      if (qword_1007856B0 != -1) {
        swift_once();
      }
      uint64_t v13 = type metadata accessor for Logger();
      sub_100018BF8(v13, (uint64_t)qword_1007A4118);
      id v14 = v12;
      id v15 = a1;
      id v16 = v14;
      unint64_t v11 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v11, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v19 = (void *)swift_slowAlloc();
        aBlock[0] = (id)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 138412546;
        id v20 = [v15 objectID];
        uint64_t v36 = (uint64_t)v20;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v19 = v20;

        *(_WORD *)(v18 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v21 = Error.rem_errorDescription.getter();
        uint64_t v36 = sub_1000385A8(v21, v22, (uint64_t *)aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v11, v17, "Failed to fetch share for list. {list.objectID: %@, error: %s}", (uint8_t *)v18, 0x16u);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_12:
        return;
      }
    }
    else if (v11)
    {
      id v23 = [v11 participants];
      sub_1000368FC(0, &qword_1007A41E0);
      unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v24 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v25 == 1)
      {
        id v26 = [a1 account];
        id v27 = [v26 remObjectID];

        id v28 = [v27 uuid];
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        UUID.uuidString.getter();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        id v29 = [a1 store];
        NSString v30 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        sub_1000368FC(0, (unint64_t *)&qword_100788E40);
        uint64_t v31 = (void *)static OS_dispatch_queue.main.getter();
        uint64_t v32 = (void *)swift_allocObject();
        v32[2] = a1;
        aBlock[4] = sub_100522B04;
        aBlock[5] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_100009ADC;
        aBlock[3] = &unk_10074F628;
        uint64_t v33 = _Block_copy(aBlock);
        id v34 = a1;
        swift_release();
        [v29 stopShare:v11 accountID:v30 queue:v31 completion:v33];
        _Block_release(v33);

        return;
      }
      goto LABEL_12;
    }
  }
}

id _s9Reminders23TTRListSharingUtilitiesC17remindersAppImage3forSo7IFImageCSgSo17ISImageDescriptorC_tFZ_0(uint64_t a1)
{
  id v2 = [self mainBundle];
  id v3 = [v2 bundleIdentifier];

  if (!v3) {
    return 0;
  }
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v4 = objc_allocWithZone((Class)ISIcon);
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithBundleIdentifier:v5];

  id v7 = [v6 imageForDescriptor:a1];
  id v8 = v7;
  if (v7)
  {
    if ([v7 placeholder])
    {
      id v9 = [v6 prepareImageForDescriptor:a1];

      id v6 = v8;
      if (!v9) {
        return v8;
      }
    }
    else
    {
      id v9 = v8;
    }

    return v9;
  }
  else
  {
  }
  return v8;
}

uint64_t type metadata accessor for TTRListSharingUtilities()
{
  return self;
}

uint64_t sub_100522944()
{
  unint64_t v1 = *(void *)(v0 + 32);
  if (v1 >> 60 != 15) {
    sub_1000C7ED8(*(void *)(v0 + 24), v1);
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100522994()
{
  long long v5 = *(_OWORD *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_1003E7AB8;
  *(void *)(v3 + 40) = v2;
  *(_OWORD *)(v3 + 24) = v5;
  return _swift_task_switch(sub_1005212EC, 0, 0);
}

uint64_t sub_100522A50(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1001E1BA4(a1, a2);
  }
  return a1;
}

uint64_t sub_100522A64(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1000C7ED8(a1, a2);
  }
  return a1;
}

unint64_t sub_100522A78()
{
  unint64_t result = qword_1007A41D8;
  if (!qword_1007A41D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A41D8);
  }
  return result;
}

uint64_t sub_100522ACC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100522B04(uint64_t a1)
{
  sub_1005217E0(a1, *(void **)(v1 + 16));
}

uint64_t sub_100522B0C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100522B44(uint64_t a1)
{
  sub_10052156C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unsigned char *storeEnumTagSinglePayload for TTRListSharingUtilities.CKErrorTypes(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100522BE8);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListSharingUtilities.CKErrorTypes()
{
  return &type metadata for TTRListSharingUtilities.CKErrorTypes;
}

unint64_t sub_100522C24()
{
  unint64_t result = qword_1007A41E8;
  if (!qword_1007A41E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A41E8);
  }
  return result;
}

id TTRIAboutYourDevicesAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAboutYourDevicesAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIAboutYourDevicesAssembly()
{
  return self;
}

id TTRIAboutYourDevicesAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAboutYourDevicesAssembly();
  return [super dealloc];
}

id sub_100522D44(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_upgradeInfo];
  *(void *)uint64_t v5 = 1;
  *(_OWORD *)(v5 + 40) = 0u;
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 8) = 0u;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_pageStackView] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_titleLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceSubtitle] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceExplanation] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceLearnMore] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_deviceList] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedSubtitle] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_unsupportedDeviceList] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListSubtitle] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListExplanation] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListLearnMore] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_sharedListRecipients] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLabel] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_macOSUnavailableLearnMore] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_accountBeingUpgradedHint] = 0;
  uint64_t v6 = &a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_viewModel];
  *(_OWORD *)uint64_t v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((void *)v6 + 6) = 0;
  id v7 = &a2[OBJC_IVAR____TtC9Reminders34TTRIAboutYourDevicesViewController_presenter];
  *(void *)id v7 = a1;
  *((void *)v7 + 1) = &off_10074F528;
  swift_unknownObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  v11.receiver = a2;
  v11.super_class = ObjectType;
  id v9 = [super initWithTitle:v8 detailText:0 icon:0 contentLayout:2];

  swift_release();
  return v9;
}

id sub_100522EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v20 = a1;
  type metadata accessor for TTRAboutYourDevicesInteractor();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = type metadata accessor for TTRIAboutYourDevicesRouter();
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v21[3] = v6;
  v21[4] = &off_100751E28;
  v21[0] = v7;
  type metadata accessor for TTRIAboutYourDevicesPresenter();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = sub_100038E88((uint64_t)v21, v6);
  double v10 = __chkstk_darwin(v9);
  id v12 = (void *)((char *)&v21[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v13 + 16))(v12, v10);
  uint64_t v14 = *v12;
  *(void *)(v8 + 144) = v6;
  *(void *)(v8 + 152) = &off_100751E28;
  *(void *)(v8 + 120) = v14;
  *(void *)(v8 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v8 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v8 + 104) = v5;
  *(void *)(v8 + 112) = &off_1007381D0;
  long long v15 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)a3;
  *(_OWORD *)(v8 + 64) = v15;
  *(_OWORD *)(v8 + 80) = *(_OWORD *)(a3 + 32);
  *(void *)(v8 + 96) = *(void *)(a3 + 48);
  swift_retain();
  swift_retain();
  sub_100269D9C((void **)a3);
  sub_100038CD8((uint64_t)v21);
  id v16 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIAboutYourDevicesViewController());
  uint64_t v17 = swift_retain();
  id v18 = sub_100522D44(v17, v16);
  *(void *)(v5 + 24) = &off_10074F520;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(void *)(v8 + 24) = &off_1007408F8;
  swift_unknownObjectWeakAssign();
  *(void *)(v8 + 40) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v18;
}

void *sub_10052314C(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v50 = a2;
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v44 = (uint64_t)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v41 = (uint64_t)&v40 - v10;
  uint64_t v11 = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  id v16 = (char *)&v40 - v15;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v46 = a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v47 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v21 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  uint64_t v42 = v7;
  unint64_t v22 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v51 = a1;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v24 = 0;
  uint64_t v45 = _swiftEmptyArrayStorage;
  if (v20) {
    goto LABEL_8;
  }
LABEL_14:
  int64_t v34 = v24 + 1;
  if (!__OFADD__(v24, 1))
  {
    if (v34 < v47)
    {
      unint64_t v35 = *(void *)(v46 + 8 * v34);
      ++v24;
      if (v35) {
        goto LABEL_29;
      }
      int64_t v24 = v34 + 1;
      if (v34 + 1 >= v47) {
        goto LABEL_32;
      }
      unint64_t v35 = *(void *)(v46 + 8 * v24);
      if (v35) {
        goto LABEL_29;
      }
      int64_t v24 = v34 + 2;
      if (v34 + 2 >= v47) {
        goto LABEL_32;
      }
      unint64_t v35 = *(void *)(v46 + 8 * v24);
      if (v35) {
        goto LABEL_29;
      }
      int64_t v24 = v34 + 3;
      if (v34 + 3 >= v47) {
        goto LABEL_32;
      }
      unint64_t v35 = *(void *)(v46 + 8 * v24);
      if (v35)
      {
LABEL_29:
        unint64_t v20 = (v35 - 1) & v35;
        for (unint64_t i = __clz(__rbit64(v35)) + (v24 << 6); ; unint64_t i = v26 | (v24 << 6))
        {
          sub_10053C374(*(void *)(v51 + 56) + *(void *)(v48 + 72) * i, (uint64_t)v16, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
          uint64_t v37 = sub_10053C30C((uint64_t)v16, (uint64_t)v13, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
          uint64_t v38 = *(void *)&v13[*(int *)(v49 + 20)];
          if ((*(void *)v50(v37) & ~v38) != 0)
          {
            uint64_t v25 = 1;
          }
          else
          {
            sub_10053C374((uint64_t)v13, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v25 = 0;
          }
          (*v21)(v5, v25, 1, v6);
          sub_10053B6D4((uint64_t)v13, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
          if ((*v22)(v5, 1, v6) == 1)
          {
            unint64_t result = (void *)sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100788DC0);
            if (!v20) {
              goto LABEL_14;
            }
          }
          else
          {
            uint64_t v43 = &type metadata accessor for TTRRemindersListViewModel.Item;
            uint64_t v28 = v41;
            sub_10053C30C((uint64_t)v5, v41, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_10053C30C(v28, v44, (uint64_t (*)(void))v43);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v45 = (void *)sub_10056F4F4(0, v45[2] + 1, 1, (unint64_t)v45);
            }
            unint64_t v30 = v45[2];
            unint64_t v29 = v45[3];
            uint64_t v31 = (uint64_t (**)(void))(v30 + 1);
            if (v30 >= v29 >> 1)
            {
              uint64_t v43 = (uint64_t (**)(void))(v30 + 1);
              unint64_t v39 = (void *)sub_10056F4F4(v29 > 1, v30 + 1, 1, (unint64_t)v45);
              uint64_t v31 = v43;
              uint64_t v45 = v39;
            }
            uint64_t v32 = v44;
            uint64_t v33 = v45;
            v45[2] = v31;
            unint64_t result = (void *)sub_10053C30C(v32, (uint64_t)v33+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            if (!v20) {
              goto LABEL_14;
            }
          }
LABEL_8:
          unint64_t v26 = __clz(__rbit64(v20));
          v20 &= v20 - 1;
        }
      }
      int64_t v36 = v34 + 4;
      if (v36 < v47)
      {
        unint64_t v35 = *(void *)(v46 + 8 * v36);
        if (v35)
        {
          int64_t v24 = v36;
          goto LABEL_29;
        }
        while (1)
        {
          int64_t v24 = v36 + 1;
          if (__OFADD__(v36, 1)) {
            goto LABEL_34;
          }
          if (v24 >= v47) {
            break;
          }
          unint64_t v35 = *(void *)(v46 + 8 * v24);
          ++v36;
          if (v35) {
            goto LABEL_29;
          }
        }
      }
    }
LABEL_32:
    swift_release();
    return v45;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_100523670()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A4218);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A4218);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100523738()
{
  uint64_t v1 = sub_10003B754(&qword_1007927F8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100018BF8(v8, (uint64_t)qword_1007A4218);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v0 + 96);
  swift_beginAccess();
  if (*(void *)(v9 + 40))
  {
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v10 + 24);
    swift_unknownObjectRetain();
    v12(ObjectType, v10);
    swift_unknownObjectRelease();
  }
  sub_1005273A8(v0, 0);
  uint64_t v13 = *(void *)(v0 + 40);
  uint64_t v14 = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 96))(v14, v13);
  if (result)
  {
    uint64_t v16 = result;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v17 = *(void *)(v16 + 64);
      sub_1002AD7B4(0, 0xE000000000000000, v16, (uint64_t)v3);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {
        swift_unknownObjectRelease();
        sub_10003B6F8((uint64_t)v3, &qword_1007927F8);
      }
      else
      {
        sub_10053C30C((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
        uint64_t v18 = swift_getObjectType();
        (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 48))(v7, &v7[*(int *)(v4 + 24)], 1, 1, v18, v17);
        swift_unknownObjectRelease();
        sub_10053B6D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TTRRemindersListViewModelSourceSectionsContext.ParamsForAddingEditableSection);
      }
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100523A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = *(void *)(a1 + 56);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v12 + 40))(ObjectType, v12);
  uint64_t v15 = v14;
  uint64_t v16 = swift_getObjectType();
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(a2, a3, a4, a5, a6, v16, v15);
  swift_unknownObjectRelease();
  if (v17)
  {
    uint64_t v18 = *(void *)(a1 + 40);
    uint64_t v19 = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 96))(v19, v18))
    {
      uint64_t v21 = v20;
      uint64_t v22 = swift_getObjectType();
      id v23 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48);
      id v24 = v17;
      uint64_t v25 = (void (*)(unsigned char *, void))v23(v26, v22, v21);
      sub_100027C64(&v27, v24);
      v25(v26, 0);
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_100523BA8(void *a1@<X0>, void (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v194 = a3;
  v204 = a2;
  uint64_t v213 = a4;
  uint64_t v216 = *v4;
  v217 = v4;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  v188 = (char *)&v178 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v187 = (char *)&v178 - v9;
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v184 = *(void *)(v10 - 8);
  uint64_t v185 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  v183 = (char *)&v178 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v182 = (char *)&v178 - v13;
  uint64_t v14 = sub_10003B754(&qword_1007A4530);
  __chkstk_darwin(v14 - 8);
  v192 = (char *)&v178 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = sub_10003B754(&qword_1007A4538);
  __chkstk_darwin(v181);
  uint64_t v180 = (uint64_t)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v206 = *(void *)(v210 - 8);
  uint64_t v17 = __chkstk_darwin(v210);
  uint64_t v189 = (uint64_t)&v178 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v196 = (char *)&v178 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v190 = (uint64_t)&v178 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v178 = (uint64_t)&v178 - v24;
  __chkstk_darwin(v23);
  uint64_t v193 = (uint64_t)&v178 - v25;
  uint64_t v26 = sub_10003B754(&qword_1007A0A70);
  __chkstk_darwin(v26 - 8);
  v201 = (char *)&v178 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v202 = (void *)type metadata accessor for TTRRemindersListUncommittedReminder(0);
  v200 = (unsigned int (**)(uint64_t, uint64_t, void *))*(v202 - 1);
  __chkstk_darwin(v202);
  uint64_t v191 = (uint64_t)&v178 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  v195 = (char *)&v178 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  v179 = (char *)&v178 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v203 = (uint64_t)&v178 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  uint64_t v186 = (uint64_t)&v178 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v207 = (uint64_t)&v178 - v39;
  __chkstk_darwin(v38);
  uint64_t v205 = (uint64_t)&v178 - v40;
  v199 = (void (*)(void (*)(void), uint64_t, uint64_t, uint64_t, uint64_t))type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v199);
  uint64_t v211 = (uint64_t)&v178 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_10003B754(&qword_100791CC0);
  __chkstk_darwin(v42 - 8);
  v209 = (char *)&v178 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = sub_10003B754(&qword_100791CC8);
  __chkstk_darwin(v198);
  uint64_t v197 = (uint64_t)&v178 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v45 - 8);
  uint64_t v208 = (uint64_t)&v178 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v47 - 8);
  uint64_t v49 = (char *)&v178 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  v215 = (char *)type metadata accessor for REMAnalyticsEvent();
  uint64_t v50 = *((void *)v215 - 1);
  __chkstk_darwin(v215);
  unint64_t v52 = (char *)&v178 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for Logger();
  uint64_t v54 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  unint64_t v56 = (char *)&v178 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v57 = sub_100018BF8(v53, (uint64_t)qword_1007A4218);
  (*(void (**)(char *, uint64_t, uint64_t))(v54 + 16))(v56, v57, v53);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x736E6F6974706FLL;
  *(void *)(inited + 40) = 0xE700000000000000;
  id v212 = a1;
  *(void *)&long long v221 = a1;
  uint64_t v59 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v59;
  *(void *)(inited + 56) = v60;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v53);
  uint64_t v61 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v62 = v61;
  static REMAnalyticsManager.shared.getter();
  uint64_t v63 = sub_10003B754(&qword_100791F78);
  int64_t v64 = (uint64_t *)&v52[*(int *)(v63 + 48)];
  uint64_t v65 = &v52[*(int *)(v63 + 80)];
  uint64_t v66 = enum case for REMUserOperation.createReminder(_:);
  uint64_t v67 = type metadata accessor for REMUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 104))(v52, v66, v67);
  uint64_t *v64 = TTRUserDefaults.activitySessionId.getter();
  v64[1] = v68;
  id v214 = v62;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *(void *)&long long v221 = 0;
  *((void *)&v221 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  uint64_t v69 = _typeName(_:qualified:)();
  uint64_t v71 = v70;
  swift_bridgeObjectRelease();
  *(void *)&long long v221 = v69;
  *((void *)&v221 + 1) = v71;
  v72._countAndFlagsBits = 0x746C75616665442DLL;
  v72._object = (void *)0xEF6E6F6974636553;
  String.append(_:)(v72);
  uint64_t v73 = *((void *)&v221 + 1);
  *(void *)uint64_t v65 = v221;
  *((void *)v65 + 1) = v73;
  unint64_t v74 = v215;
  (*(void (**)(char *, void, char *))(v50 + 104))(v52, enum case for REMAnalyticsEvent.userOperation(_:), v215);
  REMAnalyticsManager.post(event:)();
  swift_release();
  (*(void (**)(char *, char *))(v50 + 8))(v52, v74);
  uint64_t v75 = v217;
  uint64_t v76 = v217[5];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v76 + 136))(ObjectType, v76);
  uint64_t v78 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48))(v49, 1, v78) == 1)
  {
    uint64_t v79 = &qword_100786EF0;
    uint64_t v80 = (uint64_t)v49;
LABEL_5:
    sub_10003B6F8(v80, v79);
LABEL_10:

    uint64_t v85 = sub_10003B754(&qword_10079C930);
    uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56);
    uint64_t v87 = v213;
LABEL_11:
    v86(v87, 1, 1, v85);
    return;
  }
  int v81 = v49[*(int *)(v78 + 44)];
  sub_10053B6D4((uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v81 != 1) {
    goto LABEL_10;
  }
  unsigned int v82 = v212;
  if ((v212 & 4) != 0)
  {
    uint64_t v88 = v75[12];
    swift_beginAccess();
    if (*(void *)(v88 + 40))
    {
      uint64_t v89 = *(void *)(v88 + 48);
      uint64_t v90 = swift_getObjectType();
      uint64_t v91 = *(void (**)(uint64_t, uint64_t))(v89 + 24);
      swift_unknownObjectRetain();
      v91(v90, v89);
      swift_unknownObjectRelease();
    }
    else if ((v82 & 1) == 0)
    {
      goto LABEL_8;
    }
    uint64_t v110 = sub_10003B754(&qword_10079C930);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v213, 1, 1, v110);

    return;
  }
LABEL_8:
  uint64_t v83 = v209;
  sub_1005255A8(v82, (uint64_t)v209);
  uint64_t v84 = sub_10003B754(&qword_100791CD0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v83, 1, v84) == 1)
  {
    uint64_t v79 = &qword_100791CC0;
    uint64_t v80 = (uint64_t)v83;
    goto LABEL_5;
  }
  uint64_t v92 = &v83[*(int *)(v84 + 48)];
  uint64_t v93 = (uint64_t)v83;
  uint64_t v94 = *((void *)v92 + 1);
  uint64_t v216 = *(void *)v92;
  char v95 = v92[16];
  uint64_t v96 = v197;
  uint64_t v97 = v198;
  uint64_t v98 = v197 + *(int *)(v198 + 48);
  sub_10053C30C(v93, v197, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  *(void *)uint64_t v98 = v216;
  *(void *)(v98 + 8) = v94;
  *(unsigned char *)(v98 + 16) = v95;
  uint64_t v99 = (char **)(v96 + *(int *)(v97 + 48));
  v209 = *v99;
  v215 = v99[1];
  LODWORD(v216) = *((unsigned __int8 *)v99 + 16);
  uint64_t v100 = v96;
  uint64_t v101 = v208;
  sub_10053C30C(v100, v208, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  uint64_t v102 = v211;
  sub_10053C374(v101, v211, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  swift_storeEnumTagMultiPayload();
  uint64_t v103 = (uint64_t)v201;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 392))(v102, ObjectType, v76);
  uint64_t v104 = v202;
  if (v200[6](v103, 1, v202) == 1)
  {
    sub_10003B6F8(v103, &qword_1007A0A70);
    uint64_t v106 = v206;
    uint64_t v105 = v207;
    uint64_t v107 = *(unsigned int (***)(uint64_t, uint64_t, void *))(v206 + 56);
    uint64_t v108 = v207;
    uint64_t v109 = v210;
LABEL_21:
    v200 = v107;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v107)(v108, 1, 1, v109);
    goto LABEL_23;
  }
  uint64_t v111 = v191;
  sub_10053C30C(v103, v191, type metadata accessor for TTRRemindersListUncommittedReminder);
  uint64_t v112 = *(void *)(v111 + *((int *)v104 + 6));
  uint64_t v106 = v206;
  uint64_t v105 = v207;
  uint64_t v109 = v210;
  if (v112 && *(unsigned char *)(v112 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
  {
    sub_10053B6D4(v111, type metadata accessor for TTRRemindersListUncommittedReminder);
    uint64_t v107 = *(unsigned int (***)(uint64_t, uint64_t, void *))(v106 + 56);
    uint64_t v108 = v105;
    goto LABEL_21;
  }
  uint64_t v113 = v111 + *((int *)v104 + 5);
  uint64_t v114 = v186;
  sub_10053C374(v113, v186, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10053B6D4(v111, type metadata accessor for TTRRemindersListUncommittedReminder);
  v200 = *(unsigned int (***)(uint64_t, uint64_t, void *))(v106 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v200)(v114, 0, 1, v109);
  sub_100028C3C(v114, v105, (uint64_t *)&unk_100788DC0);
LABEL_23:
  uint64_t v115 = (uint64_t)v217;
  unsigned int v116 = v212;
  uint64_t v117 = v212 & 0x20;
  uint64_t v118 = v105;
  uint64_t v119 = v203;
  sub_10003B694(v118, v203, (uint64_t *)&unk_100788DC0);
  uint64_t v120 = *(void **)(v106 + 48);
  v201 = (char *)(v106 + 48);
  v202 = v120;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v120)(v119, 1, v109) == 1)
  {
    LODWORD(v199) = v117 != 0;
    sub_10003B6F8(v119, (uint64_t *)&unk_100788DC0);
    long long v121 = (void (*)(void))swift_allocObject();
    *((void *)v121 + 2) = v115;
    uint64_t v122 = v209;
    uint64_t v123 = v215;
    *((void *)v121 + 3) = v209;
    *((void *)v121 + 4) = v123;
    char v124 = v216;
    *((unsigned char *)v121 + 40) = v216;
    if (v116) {
      uint64_t v125 = 2;
    }
    else {
      uint64_t v125 = (v116 >> 4) & 1;
    }
    id v212 = (id)(v76 + 400);
    id v126 = *(void (**)(uint64_t, uint64_t, void, uint64_t (*)(uint64_t), void (*)(void), void (*)(void), uint64_t, uint64_t, uint64_t))(v76 + 400);
    swift_retain();
    sub_10053C5A0(v122, v123, v124);
    uint64_t v127 = (uint64_t)v192;
    v126(v211, v125, v199, sub_10053C590, v121, v204, v194, ObjectType, v76);
    uint64_t v128 = sub_10003B754(&qword_1007A1528);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 48))(v127, 1, v128) == 1)
    {
      sub_10003B6F8(v127, &qword_1007A4530);
      uint64_t v129 = v205;
      uint64_t v109 = v210;
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v200)(v205, 1, 1, v210);
      swift_release();
      uint64_t v130 = v213;
      uint64_t v115 = (uint64_t)v217;
      uint64_t v131 = (uint64_t)v196;
    }
    else
    {
      v204 = v121;
      uint64_t v147 = *(void *)(v127 + *(int *)(v128 + 48));
      uint64_t v148 = v181;
      uint64_t v149 = *(int *)(v181 + 48);
      uint64_t v150 = v127;
      uint64_t v151 = v180;
      sub_10053C30C(v150, v180, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(void *)(v151 + v149) = v147;
      id v212 = *(id *)(v151 + *(int *)(v148 + 48));
      uint64_t v152 = v151;
      uint64_t v153 = v190;
      sub_10053C30C(v152, v190, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v154 = v205;
      sub_10053C374(v153, v205, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v200)(v154, 0, 1, v210);
      uint64_t v155 = v182;
      (*(void (**)(uint64_t, uint64_t))(v76 + 600))(ObjectType, v76);
      char v157 = v183;
      uint64_t v156 = v184;
      uint64_t v158 = v185;
      (*(void (**)(char *, void, uint64_t))(v184 + 104))(v183, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v185);
      LOBYTE(v154) = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
      char v159 = *(void (**)(char *, uint64_t))(v156 + 8);
      v159(v157, v158);
      v159(v155, v158);
      if (v154)
      {
        uint64_t v160 = v190;
        id v161 = v212;
        (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v76 + 632))(v219, ObjectType, v76);
        sub_100028C3C((uint64_t)v219, (uint64_t)v220, &qword_100792800);
        uint64_t v115 = (uint64_t)v217;
        if (*(void *)&v220[0])
        {
          long long v221 = v220[0];
          long long v222 = v220[1];
          long long v223 = v220[2];
          long long v224 = v220[3];
          uint64_t v162 = v217[7];
          uint64_t v206 = swift_getObjectType();
          sub_10003B754((uint64_t *)&unk_1007894B0);
          uint64_t v163 = swift_allocObject();
          *(_OWORD *)(v163 + 16) = xmmword_10066D470;
          *(void *)(v163 + 32) = v161;
          uint64_t v218 = v163;
          specialized Array._endMutation()();
          uint64_t v164 = v218;
          v165 = *(void (**)(uint64_t, uint64_t, uint64_t, long long *, uint64_t, uint64_t))(v162 + 440);
          id v166 = v161;
          v165(v164, 1, 4, &v221, v206, v162);
          uint64_t v115 = (uint64_t)v217;
          swift_bridgeObjectRelease();
          sub_1001D96B8((uint64_t)v219);

          sub_10053B6D4(v160, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_release();
        }
        else
        {
          sub_10053B6D4(v160, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_release();
        }
        uint64_t v130 = v213;
      }
      else
      {
        sub_10053B6D4(v190, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();

        uint64_t v130 = v213;
        uint64_t v115 = (uint64_t)v217;
      }
      uint64_t v131 = (uint64_t)v196;
      uint64_t v129 = v205;
      uint64_t v109 = v210;
    }
  }
  else
  {
    uint64_t v132 = v193;
    sub_10053C30C(v119, v193, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if ((sub_100525AC8(v115, v132, v116) & 1) != 0
      && TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)())
    {
      uint64_t v134 = v133;
      BOOL v135 = (v212 & 1) == 0;
      uint64_t v203 = swift_getObjectType();
      v199 = *(void (**)(void (*)(void), uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 40);
      uint64_t v136 = v204;
      uint64_t v137 = v194;
      sub_10006C140((uint64_t)v204);
      uint64_t v138 = v135 | (8 * v117);
      uint64_t v139 = (uint64_t)v179;
      uint64_t v109 = v210;
      v199(v136, v137, v138, v203, v134);
      swift_unknownObjectRelease();
      sub_1000499C4((uint64_t)v136);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v139, 1, v109) != 1)
      {
        sub_10053B6D4(v193, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v169 = v178;
        sub_10053C30C(v139, v178, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v129 = v205;
        sub_10053C30C(v169, v205, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        ((void (*)(uint64_t, void, uint64_t, uint64_t))v200)(v129, 0, 1, v109);
        uint64_t v130 = v213;
        uint64_t v170 = (uint64_t)v195;
        uint64_t v131 = (uint64_t)v196;
        goto LABEL_51;
      }
      sub_10003B6F8(v139, (uint64_t *)&unk_100788DC0);
      uint64_t v132 = v193;
    }
    uint64_t v129 = v205;
    sub_10053C374(v132, v205, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v200)(v129, 0, 1, v109);
    uint64_t v130 = v213;
    uint64_t v131 = (uint64_t)v196;
    if (v204)
    {
      swift_retain();
      *(void *)&long long v221 = _typeName(_:qualified:)();
      *((void *)&v221 + 1) = v140;
      v141._countAndFlagsBits = 0x6C616974696E692DLL;
      v141._object = (void *)0xED000065756C6156;
      String.append(_:)(v141);
      uint64_t v142 = sub_1003C34E0(v132, (void *)v221, *((unint64_t *)&v221 + 1));
      swift_bridgeObjectRelease();
      if (v142)
      {
        type metadata accessor for TTRReminderEditor();
        uint64_t v143 = *(void **)(v142 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        *(void *)&long long v223 = 0;
        long long v221 = 0u;
        long long v222 = 0u;
        swift_retain();
        id v144 = v143;
        TTRReminderEditor.__allocating_init(changeItem:undoContext:)();
        uint64_t v145 = v204;
        v204();
        swift_release();
        uint64_t v146 = (uint64_t)v145;
        uint64_t v132 = v193;
        sub_1000499C4(v146);
        swift_release();
        swift_release();
      }
      else
      {
        sub_1000499C4((uint64_t)v204);
      }
      uint64_t v109 = v210;
    }
    if ((v212 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v167 = *(void *)(v115 + 24);
      uint64_t v168 = swift_getObjectType();
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v167 + 24))(v115, &off_10074F848, v132, v168, v167);
      swift_unknownObjectRelease();
    }
    sub_10053B6D4(v132, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  uint64_t v170 = (uint64_t)v195;
LABEL_51:
  sub_10003B694(v129, v170, (uint64_t *)&unk_100788DC0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v202)(v170, 1, v109) == 1)
  {

    sub_1000AAEE4(v209, v215, v216);
    sub_10003B6F8(v207, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v129, (uint64_t *)&unk_100788DC0);
    sub_10053B6D4(v211, type metadata accessor for TTRRemindersListReminderCreationLocation);
    sub_10053B6D4(v208, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10003B6F8(v170, (uint64_t *)&unk_100788DC0);
    uint64_t v85 = sub_10003B754(&qword_10079C930);
    uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56);
    uint64_t v87 = v130;
    goto LABEL_11;
  }
  sub_10053C30C(v170, v131, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v171 = *(void *)(v115 + 88);
  if (!v171) {
    goto LABEL_57;
  }
  swift_retain();
  uint64_t v172 = (uint64_t)v187;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  uint64_t v173 = (uint64_t)v188;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  char v174 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
  sub_10053B6D4(v173, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10053B6D4(v172, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if ((v174 & 1) == 0)
  {
    swift_release();
    uint64_t v129 = v205;
LABEL_57:
    uint64_t v175 = v189;
    sub_10053C374(v131, v189, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    type metadata accessor for PencilWritingStateReporter(0);
    uint64_t v171 = swift_allocObject();
    swift_weakInit();
    *(void *)(v171
              + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable) = 0;
    sub_10053C30C(v175, v171 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_weakAssign();

    sub_1000AAEE4(v209, v215, v216);
    sub_10003B6F8(v207, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v129, (uint64_t *)&unk_100788DC0);
    sub_10053B6D4(v211, type metadata accessor for TTRRemindersListReminderCreationLocation);
    sub_10053B6D4(v208, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    *(void *)(v115 + 88) = v171;
    swift_retain();
    swift_release();
    goto LABEL_58;
  }

  sub_1000AAEE4(v209, v215, v216);
  sub_10003B6F8(v207, (uint64_t *)&unk_100788DC0);
  sub_10003B6F8(v205, (uint64_t *)&unk_100788DC0);
  sub_10053B6D4(v211, type metadata accessor for TTRRemindersListReminderCreationLocation);
  sub_10053B6D4(v208, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_58:
  uint64_t v176 = sub_10003B754(&qword_10079C930);
  v177 = (uint64_t *)(v130 + *(int *)(v176 + 48));
  sub_10053C30C(v131, v130, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t *v177 = v171;
  v177[1] = (uint64_t)&off_10074F748;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v176 - 8) + 56))(v130, 0, 1, v176);
}

uint64_t sub_1005255A8@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  void (*v13)(void **__return_ptr, void, uint64_t (*)(), void *, uint64_t, uint64_t);
  void *v14;
  void *v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  id v24;
  id v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  void *v42;
  unsigned __int8 v43;
  void (*v44)(id);
  uint64_t vars8;

  uint64_t v3 = v2;
  uint64_t v40 = a2;
  uint64_t v5 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v39 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v3[5];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(void **__return_ptr, void, uint64_t (*)(), void *, uint64_t, uint64_t))(v11 + 336);
  swift_retain();
  v13(&v41, (a1 >> 6) & 1, sub_10053C5F4, v3, ObjectType, v11);
  swift_release();
  uint64_t v15 = v41;
  uint64_t v14 = v42;
  uint64_t v16 = v43;
  if (v43)
  {
    if (v43 == 1)
    {
      if (v42 == 3 && !v41)
      {
        uint64_t v17 = v3[7];
        uint64_t v18 = swift_getObjectType();
        uint64_t v19 = (id)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 536))(v18, v17);
        uint64_t v38 = 1;
        if (v19)
        {
          uint64_t v20 = v19;
          uint64_t v21 = 1;
          goto LABEL_13;
        }
        uint64_t v22 = 0;
        goto LABEL_24;
      }
      uint64_t v19 = v41;
    }
    else
    {
      uint64_t v19 = sub_1000652AC(v41, v42, v43);
    }
    uint64_t v20 = v15;
    uint64_t v21 = (uint64_t)v14;
LABEL_13:
    v44(v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_100065320(v15, v14, v16);
      swift_release();
      sub_100065320(v20, (void *)v21, v16);
      sub_10003B6F8((uint64_t)v7, &qword_10078C890);
LABEL_21:
      uint64_t v31 = v40;
      uint64_t v32 = sub_10003B754(&qword_100791CD0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v31, 1, 1, v32);
    }
    uint64_t v23 = v39;
    sub_10053C30C((uint64_t)v7, v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (v16 == 1)
    {
      sub_100065320(v15, v14, 1);
      swift_release();
      uint64_t v26 = 0;
      uint64_t v21 = v21;
    }
    else
    {
      if (v16 != 2)
      {
        sub_100065320(v20, (void *)v21, 3);
        sub_100065320(v15, v14, 3);
        swift_release();
        sub_10053B6D4(v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        goto LABEL_21;
      }
      uint64_t v24 = (id)v21;
      uint64_t v25 = v20;
      sub_100065320(v20, (void *)v21, 2);
      sub_100065320(v15, v14, 2);
      swift_release();
      uint64_t v26 = 1;
    }
    uint64_t v27 = sub_10003B754(&qword_100791CD0);
    uint64_t v28 = v40;
    uint64_t v29 = v40 + *(int *)(v27 + 48);
    sub_10053C30C(v23, v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    *(void *)uint64_t v29 = v20;
    *(void *)(v29 + 8) = v21;
    *(unsigned char *)(v29 + 16) = v26;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v28, 0, 1, v27);
  }
  if (!(_BYTE)v41 || (v22 = v42, uint64_t v38 = (uint64_t)v41, v41 != 1))
  {
    sub_100065320(v41, v42, 0);
    LOBYTE(v16) = 0;
    goto LABEL_27;
  }
LABEL_24:
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v33 = v3[3];
    uint64_t v34 = swift_getObjectType();
    (*(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v33 + 40))(v3, &off_10074F848, v34, v33);
    sub_100065320((void *)v38, v22, 0);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100065320((void *)v38, v22, 0);
  }
LABEL_27:
  uint64_t v35 = v40;
  sub_100065320(v15, v14, v16);
  swift_release();
  uint64_t v36 = sub_10003B754(&qword_100791CD0);
  uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);

  return v37(v35, 1, 1, v36);
}

uint64_t sub_100525AC8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)();
  if (result)
  {
    if ((a3 & 8) != 0)
    {
      swift_unknownObjectRelease();
      return 1;
    }
    if ((a3 & 0x10) != 0)
    {
      uint64_t v6 = v5;
      uint64_t ObjectType = swift_getObjectType();
      LOBYTE(v6) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
      swift_unknownObjectRelease();
      if (v6) {
        return 1;
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return 0;
  }
  return result;
}

uint64_t sub_100525B68(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 432))(ObjectType, v3);
  uint64_t v5 = TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)();
  swift_bridgeObjectRelease();
  return v5;
}

void sub_100525C3C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  unsigned int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload >= 2)
  {
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
      sub_10053B6D4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      return;
    }
  }
  else
  {
    sub_10053B6D4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  uint64_t v17 = (void *)_typeName(_:qualified:)();
  unint64_t v18 = v10;
  v11._countAndFlagsBits = 0x6C616974696E692DLL;
  v11._object = (void *)0xED000065756C6156;
  String.append(_:)(v11);
  sub_1003C34E0(a1, v17, v18);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v12 = *(void *)(v2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 320))(a1, ObjectType, v12);
  if (v14)
  {
    uint64_t v15 = v14;
    sub_100525E8C(a1, v14, 0, 0, 0x101u, a2);
  }
  else
  {
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(a2, 1, 1, v16);
  }
}

void sub_100525E8C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  unsigned int v136 = a5;
  uint64_t v137 = a3;
  uint64_t v138 = a4;
  uint64_t v154 = a6;
  id v142 = *(id *)v6;
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v130 = *(void *)(v10 - 8);
  uint64_t v131 = v10;
  __chkstk_darwin(v10);
  uint64_t v129 = (char *)&v121 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v128 = (char *)&v121 - v13;
  uint64_t v14 = sub_10003B754(&qword_1007A4530);
  __chkstk_darwin(v14 - 8);
  BOOL v135 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v127 = sub_10003B754(&qword_1007A4538);
  __chkstk_darwin(v127);
  uint64_t v126 = (uint64_t)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_1007A0A70);
  __chkstk_darwin(v17 - 8);
  uint64_t v143 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v153 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v132 = (uint64_t)&v121 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v133 = (uint64_t)&v121 - v21;
  __chkstk_darwin(v22);
  uint64_t v134 = (uint64_t)&v121 - v23;
  uint64_t v141 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v141);
  uint64_t v149 = (uint64_t)&v121 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v25 - 8);
  uint64_t v150 = (uint64_t)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v139 = *(void *)(v27 - 8);
  uint64_t v140 = v27;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Logger();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v121 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(v6 + 32);
  uint64_t v148 = v7;
  uint64_t v35 = *(void *)(v7 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v37 = *(uint64_t (**)(uint64_t, void *))(v35 + 352);
  uint64_t v147 = a2;
  uint64_t v151 = ObjectType;
  uint64_t v152 = v34;
  uint64_t v38 = (void *)v37(a1, a2);
  char v41 = v40;
  uint64_t v42 = v39;
  switch((char)v40)
  {
    case 1:
      uint64_t v146 = v40;
      int v125 = 0;
      unint64_t v124 = v39;
      goto LABEL_7;
    case 2:
      uint64_t v146 = v40;
      uint64_t v44 = v38;
      id v45 = v39;
      uint64_t v38 = v44;
      int v125 = 1;
      unint64_t v124 = (unint64_t)v42;
LABEL_7:
      id v144 = v38;
      uint64_t v145 = v42;
      uint64_t v46 = qword_1007856B8;
      id v47 = v38;
      if (v46 != -1) {
        swift_once();
      }
      uint64_t v48 = sub_100018BF8(v30, (uint64_t)qword_1007A4218);
      (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v33, v48, v30);
      sub_10003B754((uint64_t *)&unk_100788E30);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
      *(void *)(inited + 32) = 1835365481;
      *(void *)(inited + 40) = 0xE400000000000000;
      sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v123 = a1;
      uint64_t v50 = TTRTreeStorageItem.treeItemDescription.getter();
      *(void *)(inited + 72) = &type metadata for String;
      *(void *)(inited + 48) = v50;
      *(void *)(inited + 56) = v51;
      sub_10003D820(inited);
      sub_10001A078();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v30);
      unint64_t v52 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
      type metadata accessor for REMAnalyticsManager();
      id v53 = v52;
      static REMAnalyticsManager.shared.getter();
      uint64_t v54 = sub_10003B754(&qword_100791F78);
      uint64_t v55 = (uint64_t *)&v29[*(int *)(v54 + 48)];
      unint64_t v56 = &v29[*(int *)(v54 + 80)];
      uint64_t v57 = enum case for REMUserOperation.createReminder(_:);
      uint64_t v58 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 104))(v29, v57, v58);
      uint64_t *v55 = TTRUserDefaults.activitySessionId.getter();
      v55[1] = v59;
      id v122 = v53;
      TTRUserDefaults.activitySessionBeginTime.getter();
      *(void *)&v159[0] = _typeName(_:qualified:)();
      *((void *)&v159[0] + 1) = v60;
      v61._countAndFlagsBits = 0x69547974706D452DLL;
      v61._object = (void *)0xEB00000000656C74;
      String.append(_:)(v61);
      uint64_t v62 = *((void *)&v159[0] + 1);
      *(void *)unint64_t v56 = *(void *)&v159[0];
      *((void *)v56 + 1) = v62;
      uint64_t v64 = v139;
      uint64_t v63 = v140;
      (*(void (**)(char *, void, uint64_t))(v139 + 104))(v29, enum case for REMAnalyticsEvent.userOperation(_:), v140);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v64 + 8))(v29, v63);
      uint64_t v65 = swift_allocObject();
      uint64_t v66 = v147;
      uint64_t v67 = v148;
      uint64_t v68 = v144;
      *(void *)(v65 + 16) = v148;
      *(void *)(v65 + 24) = v68;
      *(void *)(v65 + 32) = v124;
      *(unsigned char *)(v65 + 40) = v125;
      *(void *)(v65 + 48) = v66;
      *(unsigned char *)(v65 + 56) = 3;
      uint64_t v69 = v149;
      sub_10053C374(v123, v149, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_storeEnumTagMultiPayload();
      uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 392);
      id v71 = v66;
      sub_1000652AC(v68, v145, v146);
      id v142 = v71;
      swift_retain();
      uint64_t v72 = (uint64_t)v143;
      uint64_t v73 = v151;
      v70(v69, v151, v35);
      uint64_t v74 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v72, 1, v74) == 1)
      {
        uint64_t v75 = (v136 >> 8) & 1;
        sub_10003B6F8(v72, &qword_1007A0A70);
        uint64_t v76 = (uint64_t)v135;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 400))(v69, 0, v75, sub_10053C4B8, v65, v137, v138, v73, v35);
        uint64_t v77 = sub_10003B754(&qword_1007A1528);
        int v78 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 48))(v76, 1, v77);
        uint64_t v79 = v150;
        if (v78 == 1)
        {
          sub_10003B6F8(v76, &qword_1007A4530);

          int v81 = v144;
          uint64_t v80 = v145;
          char v82 = v146;
          sub_100065320(v144, v145, v146);
          sub_100065320(v81, v80, v82);
          sub_10053B6D4(v69, type metadata accessor for TTRRemindersListReminderCreationLocation);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v79, 1, 1, v155);
        }
        else
        {
          uint64_t v95 = *(void *)(v76 + *(int *)(v77 + 48));
          uint64_t v96 = v127;
          uint64_t v97 = *(int *)(v127 + 48);
          uint64_t v98 = v76;
          uint64_t v99 = v126;
          sub_10053C30C(v98, v126, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          *(void *)(v99 + v97) = v95;
          uint64_t v143 = *(char **)(v99 + *(int *)(v96 + 48));
          uint64_t v100 = v99;
          uint64_t v101 = v132;
          sub_10053C30C(v100, v132, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10053C374(v101, v79, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v79, 0, 1, v155);
          uint64_t v102 = v128;
          (*(void (**)(uint64_t, uint64_t))(v35 + 600))(v151, v35);
          uint64_t v104 = v129;
          uint64_t v103 = v130;
          uint64_t v105 = v131;
          (*(void (**)(char *, void, uint64_t))(v130 + 104))(v129, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v131);
          char v106 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
          uint64_t v107 = *(void (**)(char *, uint64_t))(v103 + 8);
          v107(v104, v105);
          v107(v102, v105);
          if ((v106 & 1) != 0
            && ((*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v35 + 632))(v157, v151, v35),
                sub_100028C3C((uint64_t)v157, (uint64_t)v158, &qword_100792800),
                *(void *)&v158[0]))
          {
            v159[0] = v158[0];
            v159[1] = v158[1];
            v159[2] = v158[2];
            v159[3] = v158[3];
            uint64_t v108 = *(void *)(v148 + 56);
            uint64_t v109 = swift_getObjectType();
            sub_10003B754((uint64_t *)&unk_1007894B0);
            uint64_t v110 = swift_allocObject();
            *(_OWORD *)(v110 + 16) = xmmword_10066D470;
            uint64_t v111 = v143;
            *(void *)(v110 + 32) = v143;
            uint64_t v156 = v110;
            specialized Array._endMutation()();
            uint64_t v112 = v156;
            uint64_t v113 = *(void (**)(uint64_t, void *, uint64_t, _OWORD *, uint64_t, uint64_t))(v108 + 440);
            id v114 = v111;
            uint64_t v115 = v108;
            uint64_t v116 = v132;
            v113(v112, v147, 3, v159, v109, v115);
            uint64_t v69 = v149;
            uint64_t v79 = v150;

            swift_bridgeObjectRelease();
            sub_1001D96B8((uint64_t)v157);
            id v117 = v142;
          }
          else
          {

            id v114 = v122;
            uint64_t v79 = v150;
            id v117 = v143;
            uint64_t v116 = v132;
          }

          uint64_t v119 = v144;
          uint64_t v118 = v145;
          char v120 = v146;
          sub_100065320(v144, v145, v146);
          sub_100065320(v119, v118, v120);
          sub_10053B6D4(v116, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10053B6D4(v69, type metadata accessor for TTRRemindersListReminderCreationLocation);
        }
        uint64_t v89 = v154;
      }
      else
      {
        uint64_t v83 = v72 + *(int *)(v74 + 20);
        uint64_t v84 = v133;
        sub_10053C374(v83, v133, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10053B6D4(v72, type metadata accessor for TTRRemindersListUncommittedReminder);
        uint64_t v85 = v134;
        sub_10053C30C(v84, v134, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v86 = v150;
        sub_10053C374(v85, v150, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v87 = v86;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v153 + 56))(v86, 0, 1, v155);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v89 = v154;
        if (Strong)
        {
          uint64_t v90 = *(void *)(v67 + 24);
          uint64_t v91 = swift_getObjectType();
          (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v90 + 24))(v67, &off_10074F848, v85, v91, v90);
          swift_unknownObjectRelease();
        }

        uint64_t v93 = v144;
        uint64_t v92 = v145;
        char v94 = v146;
        sub_100065320(v144, v145, v146);
        sub_100065320(v93, v92, v94);
        sub_10053B6D4(v85, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10053B6D4(v69, type metadata accessor for TTRRemindersListReminderCreationLocation);
        uint64_t v79 = v87;
      }
      sub_100028C3C(v79, v89, (uint64_t *)&unk_100788DC0);
      swift_release();
      break;
    default:
      uint64_t v43 = v38;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56))(v154, 1, 1, v155);
      sub_100065320(v43, v42, v41);
      break;
  }
}

void sub_100526D04(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)())
  {
    uint64_t v6 = v5;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v6 + 24))(ObjectType, v6);
    swift_unknownObjectRelease();
    return;
  }
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  _StringGuts.grow(_:)(23);
  uint64_t v8 = (void *)_typeName(_:qualified:)();
  unint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v30 = v8;
  unint64_t v31 = v10;
  v11._object = (void *)0x80000001006BE2F0;
  v11._countAndFlagsBits = 0xD000000000000015;
  String.append(_:)(v11);
  uint64_t v12 = sub_1003C2C40(a1, v30, v31);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (v12)
  {
    uint64_t v15 = swift_getObjectType();
    (*(void (**)(void **__return_ptr, uint64_t, uint64_t))(v14 + 32))(&v30, v15, v14);
    uint64_t v16 = v32;
    uint64_t v17 = v33;
    sub_100038D28(&v30, v32);
    (*(void (**)(uint64_t, uint64_t))(v17 + 48))(v16, v17);
    if (v18)
    {
      Swift::tuple_title_String_isValid_Bool v36 = String.validatedReminderTitle()();
      Swift::Bool isValid = v36.isValid;
      swift_bridgeObjectRelease();
      sub_100038CD8((uint64_t)&v30);
      swift_bridgeObjectRelease();
      if (isValid) {
        goto LABEL_15;
      }
    }
    else
    {
      sub_100038CD8((uint64_t)&v30);
    }
    TTRRemindersListEditingSession.effectiveParentList.getter();
    static TTRLocalizableStrings.Common.defaultTitleForBlankReminder(effectiveParentList:)();
    sub_10003B6F8((uint64_t)&v30, &qword_100787480);
    id v26 = objc_allocWithZone((Class)NSAttributedString);
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v28 = [v26 initWithString:v27];

    TTRRemindersListEditingSession.setTitleWithOptionalUndo(_:locale:undoRegistration:canMarkHasSetTitle:)();
    uint64_t v29 = (void *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor();
    (*(void (**)(void, uint64_t, uint64_t))(v14 + 104))(*v29, v15, v14);
LABEL_15:
    (*(void (**)(void, uint64_t, uint64_t))(v14 + 112))(0, v15, v14);
    swift_unknownObjectRelease();
    return;
  }
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100018BF8(v20, (uint64_t)qword_1007A4218);
  sub_10053C374(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v24 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v34 = sub_1000385A8(v24, v25, (uint64_t *)&v30);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10053B6D4((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "populateTitleIfEmpty: failed to acquire editing session {item: %s}", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10053B6D4((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
}

id sub_100527208@<X0>(id a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = a1;
  *(unsigned char *)(a2 + 8) = 0;
  return a1;
}

uint64_t sub_100527214@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 120))(ObjectType, a1);
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = v6 & 1;
  return result;
}

uint64_t sub_10052726C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 160))(a1, ObjectType, v5);
  id v8 = [v7 objectID];
  *(void *)(swift_allocObject() + 16) = v8;
  sub_10003B754((uint64_t *)&unk_100791BA0);
  swift_allocObject();
  uint64_t result = Future.init(_:)();
  *(unsigned char *)a3 = 0;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = result;
  return result;
}

uint64_t sub_100527340@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 128))(ObjectType, a1);
  *a2 = result & 1;
  a2[1] = v6;
  a2[2] = v7;
  return result;
}

uint64_t sub_100527398(uint64_t a1)
{
  return sub_1005273A8(a1, 0);
}

uint64_t sub_1005273A0(uint64_t a1)
{
  return sub_1005273A8(a1, 1);
}

uint64_t sub_1005273A8(uint64_t a1, char a2)
{
  uint64_t v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v9 = (char *)v26 - v8;
  uint64_t v10 = a1 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess();
  sub_10053C374(v10, (uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  v9[*(int *)(v4 + 20)] = a2;
  sub_10053C374(v10, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  char v11 = sub_10053B734((uint64_t)v7, (uint64_t)v9);
  sub_10053B6D4((uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v11 & 1) == 0)
  {
    if (qword_1007856B8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_1007A4218);
    swift_retain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    int v15 = v14;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      v29[0] = v28;
      *(_DWORD *)uint64_t v16 = 136315394;
      v26[1] = v16 + 4;
      sub_10053C374(v10, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      int v27 = v15;
      unint64_t v17 = sub_10052941C();
      unint64_t v19 = v18;
      sub_10053B6D4((uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      uint64_t v30 = sub_1000385A8(v17, v19, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_beginAccess();
      unint64_t v20 = sub_10052941C();
      uint64_t v30 = sub_1000385A8(v20, v21, v29);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, (os_log_type_t)v27, "TTRReminderListEditingPresenter editing state changed {from: '%s', to: '%s'}", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    sub_10053C374((uint64_t)v9, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    swift_beginAccess();
    sub_10053C2A8((uint64_t)v7, v10);
    swift_endAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v22 = *(void *)(a1 + 24);
      uint64_t ObjectType = swift_getObjectType();
      v29[3] = v4;
      v29[4] = (uint64_t)&off_10074F730;
      uint64_t v24 = sub_1000394A8(v29);
      sub_10053C374((uint64_t)v9, (uint64_t)v24, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v22 + 8))(a1, &off_10074F848, v29, ObjectType, v22);
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)v29);
    }
  }
  return sub_10053B6D4((uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
}

uint64_t sub_1005277FC(void (*a1)(char *))
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)v25 - v8;
  uint64_t v10 = v1 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state;
  swift_beginAccess();
  sub_10053C374(v10, (uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  a1(v9);
  sub_10053C374(v10, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  char v11 = sub_10053B734((uint64_t)v6, (uint64_t)v9);
  sub_10053B6D4((uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if ((v11 & 1) == 0)
  {
    if (qword_1007856B8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_1007A4218);
    swift_retain_n();
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      v28[0] = v26;
      *(_DWORD *)uint64_t v15 = 136315394;
      v25[1] = v15 + 4;
      sub_10053C374(v10, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      unint64_t v16 = sub_10052941C();
      uint64_t v27 = v4;
      unint64_t v18 = v17;
      sub_10053B6D4((uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      uint64_t v29 = sub_1000385A8(v16, v18, v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      swift_beginAccess();
      unint64_t v19 = sub_10052941C();
      uint64_t v29 = sub_1000385A8(v19, v20, v28);
      uint64_t v4 = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "TTRReminderListEditingPresenter editing state changed {from: '%s', to: '%s'}", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    sub_10053C374((uint64_t)v9, (uint64_t)v6, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    swift_beginAccess();
    sub_10053C2A8((uint64_t)v6, v10);
    swift_endAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v21 = *(void *)(v2 + 24);
      uint64_t ObjectType = swift_getObjectType();
      v28[3] = v4;
      v28[4] = (uint64_t)&off_10074F730;
      uint64_t v23 = sub_1000394A8(v28);
      sub_10053C374((uint64_t)v9, (uint64_t)v23, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      (*(void (**)(uint64_t, _UNKNOWN **, uint64_t *, uint64_t, uint64_t))(v21 + 8))(v2, &off_10074F848, v28, ObjectType, v21);
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)v28);
    }
  }
  return sub_10053B6D4((uint64_t)v9, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
}

uint64_t sub_100527C5C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for REMFeatureFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 464))(a1, ObjectType, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 424))(a1, ObjectType, v10);
  if ((a2 & 1) == 0)
  {
    return swift_release();
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for REMFeatureFlags.undoByAttribute(_:), v6);
  char v13 = REMFeatureFlags.isEnabled.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if ((v13 & 1) == 0) {
    return swift_release();
  }
  if (v12)
  {
    uint64_t v15 = qword_1007856B8;
    swift_retain();
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100018BF8(v16, (uint64_t)qword_1007A4218);
    swift_retain_n();
    unint64_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v17, v18))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)unint64_t v19 = 136315138;
      aBlock[0] = v20;
      type metadata accessor for TTRRemindersListViewModel.Item();
      sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = TTRTreeStorageItem.treeItemDescription.getter();
      v29[1] = sub_1000385A8(v21, v22, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRReminderListEditingPresenter: register undo for discarding uncommitted reminder {item: %s}", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    uint64_t v23 = self;
    static TTRLocalizableStrings.UndoAction.deleteReminder.getter();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v3;
    *(void *)(v25 + 24) = v12;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_10053DA14;
    *(void *)(v26 + 24) = v25;
    aBlock[4] = (uint64_t)sub_1000218B0;
    aBlock[5] = v26;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_100021888;
    aBlock[3] = (uint64_t)&unk_10074F9E8;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    [v23 withActionName:v24 block:v27];

    swift_release_n();
    _Block_release(v27);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_10052813C(uint64_t a1, void (*a2)(void **), uint64_t a3)
{
  void (*v57)(void **__return_ptr, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(void **);
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  void v66[4];
  void (*v67)(void **);
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  long long v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  void *v81;
  unint64_t v82;
  unint64_t v83;

  uint64_t v4 = v3;
  long long v66[3] = a3;
  uint64_t v67 = a2;
  uint64_t v72 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v6 = *(void *)(v72 - 8);
  uint64_t v7 = __chkstk_darwin(v72);
  uint64_t v8 = __chkstk_darwin(v7);
  uint64_t v73 = (char *)v66 - v9;
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v66 - v11;
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v83 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v70 = v4;
  if (v14)
  {
    uint64_t v69 = v10;
    uint64_t v15 = *(void *)(v4 + 32);
    uint64_t v16 = *(void *)(v4 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 464);
    uint64_t v80 = v16 + 464;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
    int v78 = *(void *)(v6 + 72);
    uint64_t v74 = v16 + 248;
    v66[1] = a1;
    uint64_t v19 = ObjectType;
    swift_bridgeObjectRetain();
    uint64_t v20 = (char *)_swiftEmptyArrayStorage;
    *(void *)&long long v21 = 136315138;
    id v71 = v21;
    v66[2] = &type metadata for Any[8];
    uint64_t v76 = v16;
    uint64_t v77 = v19;
    uint64_t v68 = v15;
    while (1)
    {
      sub_10053C374(v18, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v23 = v79(v12, v19, v16);
      swift_release();
      if (v23)
      {
        int v81 = (void *)_typeName(_:qualified:)();
        char v82 = v24;
        v25._countAndFlagsBits = 0x746964652DLL;
        v25._object = (void *)0xE500000000000000;
        String.append(_:)(v25);
        uint64_t v26 = sub_1003C2C40((uint64_t)v12, v81, v82);
        uint64_t v28 = v27;
        swift_bridgeObjectRelease();
        if (!v26)
        {
          uint64_t v33 = (uint64_t)v73;
          if (qword_1007856B8 != -1) {
            swift_once();
          }
          uint64_t v34 = type metadata accessor for Logger();
          sub_100018BF8(v34, (uint64_t)qword_1007A4218);
          sub_10053C374((uint64_t)v12, v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v35 = Logger.logObject.getter();
          os_log_type_t v36 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v35, v36))
          {
            uint64_t v37 = swift_slowAlloc();
            uint64_t v75 = v20;
            uint64_t v38 = v37;
            int v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v38 = v71;
            sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v39 = TTRTreeStorageItem.treeItemDescription.getter();
            *(void *)(v38 + 4) = sub_1000385A8(v39, v40, (uint64_t *)&v81);
            swift_bridgeObjectRelease();
            sub_10053B6D4(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v35, v36, "Skip edit; failed to create editing session {item: %s}",
              (uint8_t *)v38,
              0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v20 = v75;
            swift_slowDealloc();
          }
          else
          {

            sub_10053B6D4(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10053B6D4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v16 = v76;
          goto LABEL_5;
        }
        swift_unknownObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = sub_1005704D8(0, *((void *)v20 + 2) + 1, 1, v20);
        }
        unint64_t v30 = *((void *)v20 + 2);
        unint64_t v29 = *((void *)v20 + 3);
        if (v30 >= v29 >> 1) {
          uint64_t v20 = sub_1005704D8((char *)(v29 > 1), v30 + 1, 1, v20);
        }
        *((void *)v20 + 2) = v30 + 1;
        unint64_t v22 = &v20[16 * v30];
        *((void *)v22 + 4) = v26;
        *((void *)v22 + 5) = v28;
        swift_unknownObjectRelease();
        uint64_t v16 = v76;
      }
      else
      {
        unint64_t v31 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 248))(v12, v19, v16);
        if (!v31)
        {
          if (qword_1007856B8 != -1) {
            swift_once();
          }
          uint64_t v41 = type metadata accessor for Logger();
          sub_100018BF8(v41, (uint64_t)qword_1007A4218);
          uint64_t v42 = v69;
          sub_10053C374((uint64_t)v12, v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v43 = Logger.logObject.getter();
          os_log_type_t v44 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v43, v44))
          {
            uint64_t v45 = swift_slowAlloc();
            uint64_t v75 = v20;
            uint64_t v46 = v45;
            int v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v46 = v71;
            sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v47 = TTRTreeStorageItem.treeItemDescription.getter();
            *(void *)(v46 + 4) = sub_1000385A8(v47, v48, (uint64_t *)&v81);
            swift_bridgeObjectRelease();
            sub_10053B6D4(v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v43, v44, "Skip edit; failed to get REMReminder {item: %s}",
              (uint8_t *)v46,
              0xCu);
            swift_arrayDestroy();
            uint64_t v19 = v77;
            swift_slowDealloc();
            uint64_t v20 = v75;
            swift_slowDealloc();
          }
          else
          {

            sub_10053B6D4(v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10053B6D4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v16 = v76;
          goto LABEL_6;
        }
        id v32 = v31;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      sub_10053B6D4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
      uint64_t v19 = v77;
LABEL_6:
      v18 += v78;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        unint64_t v13 = v83;
        goto LABEL_31;
      }
    }
  }
  uint64_t v20 = (char *)_swiftEmptyArrayStorage;
LABEL_31:
  unint64_t v49 = *((void *)v20 + 2);
  if (!(v13 >> 62))
  {
    uint64_t v50 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v51 = v49 + v50;
    if (!__OFADD__(v49, v50)) {
      goto LABEL_33;
    }
LABEL_48:
    __break(1u);
LABEL_49:
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  uint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v51 = v49 + v65;
  if (__OFADD__(v49, v65)) {
    goto LABEL_48;
  }
LABEL_33:
  if (v51 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v80 = v51;
  uint64_t v75 = v20;
  uint64_t v52 = *((void *)v20 + 2);
  id v53 = v67;
  if (v52)
  {
    uint64_t v54 = (uint64_t *)(v75 + 40);
    do
    {
      uint64_t v55 = *v54;
      uint64_t v56 = swift_getObjectType();
      uint64_t v57 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v55 + 72);
      swift_unknownObjectRetain();
      v57(&v81, v56, v55);
      v53(&v81);
      sub_100038CD8((uint64_t)&v81);
      uint64_t v58 = *(void *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor();
      uint64_t v59 = *(void *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
      if ((v59 & ~v58) == 0) {
        uint64_t v59 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 104))(v59 | v58, v56, v55);
      (*(void (**)(void, uint64_t, uint64_t))(v55 + 112))(0, v56, v55);
      swift_unknownObjectRelease();
      v54 += 2;
      --v52;
    }
    while (v52);
  }
  swift_bridgeObjectRelease();
  unint64_t v49 = v83;
  if (v83 >> 62) {
    goto LABEL_49;
  }
  uint64_t v60 = *(void *)((v83 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_41:
  Swift::String v61 = v67;
  if (v60)
  {
    uint64_t v62 = *(void *)(v70 + 56);
    uint64_t v63 = swift_getObjectType();
    (*(void (**)(void **__return_ptr, unint64_t, uint64_t, uint64_t))(v62 + 48))(&v81, v49, v63, v62);
    swift_bridgeObjectRelease();
    v61(&v81);
    sub_100038CD8((uint64_t)&v81);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v80;
}

uint64_t sub_100528ABC(uint64_t a1, uint64_t a2)
{
  uint64_t v53 = a1;
  uint64_t v56 = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  uint64_t v54 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v46 = (uint64_t)v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v45 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item() - 8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v57 = (uint64_t)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v55 = (uint64_t)v44 - v12;
  uint64_t result = __chkstk_darwin(v11);
  unint64_t v17 = (char *)v44 - v16;
  uint64_t v18 = *(void *)(a2 + 16);
  if (v18)
  {
    v44[0] = v5;
    v44[1] = a2;
    uint64_t v19 = (void *)(v2 + 72);
    uint64_t v20 = *(unsigned __int8 *)(v15 + 80);
    uint64_t v21 = a2 + ((v20 + 32) & ~v20);
    uint64_t v47 = *(void *)(v15 + 72);
    uint64_t v51 = ((v20 + 16) & ~v20) + v14;
    uint64_t v52 = (v20 + 16) & ~v20;
    uint64_t v49 = v2;
    uint64_t v50 = v20 | 7;
    swift_bridgeObjectRetain();
    unint64_t v22 = 0;
    uint64_t v23 = v18 - 1;
    unint64_t v48 = (void *)0x80000001006BE240;
    while (1)
    {
      sub_10053C374(v21, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      uint64_t v24 = v55;
      sub_10053C374((uint64_t)v17, v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10053C374(v24, v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v25 = swift_allocObject();
      sub_10053C30C(v24, v25 + v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000499C4((uint64_t)v22);
      swift_beginAccess();
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v58 = (void *)*v19;
      uint64_t v27 = v58;
      *uint64_t v19 = 0x8000000000000000;
      unint64_t v29 = sub_10035C1D4((uint64_t)v7);
      uint64_t v30 = v27[2];
      BOOL v31 = (v28 & 1) == 0;
      uint64_t v32 = v30 + v31;
      if (__OFADD__(v30, v31)) {
        break;
      }
      char v33 = v28;
      if (v27[3] >= v32)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100361304();
          uint64_t v27 = v58;
        }
      }
      else
      {
        sub_100572BA4(v32, isUniquelyReferenced_nonNull_native);
        uint64_t v27 = v58;
        unint64_t v34 = sub_10035C1D4((uint64_t)v7);
        if ((v33 & 1) != (v35 & 1)) {
          goto LABEL_19;
        }
        unint64_t v29 = v34;
      }
      *uint64_t v19 = v27;
      swift_bridgeObjectRelease();
      os_log_type_t v36 = (void *)*v19;
      if (v33)
      {
        sub_10053B6D4(v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        unint64_t v37 = *(void *)(v54 + 72) * v29;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v38 = v57;
        uint64_t v39 = v46;
        sub_10053C374(v57, v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(void *)(v39 + *(int *)(v56 + 20)) = 0;
        swift_bridgeObjectRetain();
        sub_10053B6D4(v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        v36[(v29 >> 6) + 8] |= 1 << v29;
        sub_10053C374((uint64_t)v7, v36[6] + *(void *)(v45 + 72) * v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        unint64_t v37 = *(void *)(v54 + 72) * v29;
        sub_10053C30C(v39, v36[7] + v37, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
        uint64_t v40 = v36[2];
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_18;
        }
        v36[2] = v42;
      }
      *(void *)(v36[7] + v37 + *(int *)(v56 + 20)) |= v53;
      swift_endAccess();
      swift_bridgeObjectRelease();
      sub_10053B6D4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      v43._object = v48;
      v43._countAndFlagsBits = 0xD000000000000017;
      TTRDeferredAction.scheduleNextRunLoop(reason:)(v43);
      sub_10053B6D4((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (!v23)
      {
        swift_release();
        return swift_bridgeObjectRelease();
      }
      v21 += v47;
      --v23;
      unint64_t v22 = sub_10053C3E0;
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    sub_10053B6D4(v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100529068@<X0>(uint64_t a1@<X8>)
{
  return sub_10003B694(v1, a1, &qword_100792060);
}

void sub_100529094(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t v9 = *(void *)(v1 + 88);
  if (v9) {
    BOOL v10 = v9 == a1;
  }
  else {
    BOOL v10 = 0;
  }
  if (v10)
  {
    *(void *)(v1 + 88) = 0;
    swift_release();
    sub_10053C374(a1 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)())
    {
      uint64_t v12 = v11;
      uint64_t ObjectType = swift_getObjectType();
      char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 32))(ObjectType, v12);
      swift_unknownObjectRelease();
    }
    else
    {
      char v14 = 0;
    }
    if (qword_1007856B8 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100018BF8(v15, (uint64_t)qword_1007A4218);
    sub_10053C374((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315394;
      if (v14) {
        uint64_t v19 = 1702195828;
      }
      else {
        uint64_t v19 = 0x65736C6166;
      }
      if (v14) {
        unint64_t v20 = 0xE400000000000000;
      }
      else {
        unint64_t v20 = 0xE500000000000000;
      }
      uint64_t v23 = sub_1000385A8(v19, v20, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2080;
      sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v23 = sub_1000385A8(v21, v22, &v24);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_10053B6D4((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Reminders List mark item committable for pencil {marked: %s, item: %s}", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_10053B6D4((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    sub_10053B6D4((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
}

unint64_t sub_10052941C()
{
  uint64_t v1 = sub_10003B754(&qword_100792060);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(v0, (uint64_t)v3, &qword_100792060);
  uint64_t v7 = sub_10003B754(&qword_100787160);
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v3, 1, v7);
  if (v8 == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100792060);
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_10053C30C((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 0, 1, v10);
  }
  sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  uint64_t v11 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  uint64_t v12 = 0x20676E6974696465;
  unint64_t v13 = 0xD000000000000014;
  if (!*(unsigned char *)(v0 + *(int *)(v11 + 20)))
  {
    unint64_t v13 = 0x20676E6974696465;
    uint64_t v12 = 0x7469646520746F6ELL;
  }
  if (v8 == 1) {
    return v12;
  }
  else {
    return v13;
  }
}

uint64_t sub_100529678()
{
  sub_1000499D4(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  sub_10053B6D4(v0 + OBJC_IVAR____TtC9Reminders31TTRReminderListEditingPresenter_state, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  return v0;
}

uint64_t sub_1005296F4()
{
  sub_100529678();

  return swift_deallocClassInstance();
}

uint64_t sub_10052974C()
{
  return type metadata accessor for TTRReminderListEditingPresenter(0);
}

uint64_t type metadata accessor for TTRReminderListEditingPresenter(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A4260);
}

uint64_t sub_100529774()
{
  uint64_t result = type metadata accessor for TTRReminderListEditingPresenter.EditingState(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRReminderListEditingPresenter.EditingState(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007A44E8);
}

uint64_t sub_100529864()
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 0;
  }
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v1 + 56))(v0, &off_10074F848, ObjectType, v1);
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_1005298F0()
{
  return TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterWillBeginEditing(_:)();
}

uint64_t sub_100529914()
{
  return TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterDidFinishEditing(_:editingSession:)();
}

uint64_t sub_100529938()
{
  return TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterWillBeginEditing(_:)();
}

uint64_t sub_10052995C()
{
  return TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterDidFinishEditing(_:)();
}

void sub_100529980(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, uint64_t a6@<X8>)
{
}

void *sub_10052998C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return sub_10053E42C(a1, a2, a3, a6 & 1, (a6 >> 8) & 1);
}

uint64_t sub_100529998(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 664))(a1, ObjectType, v3);
}

uint64_t sub_100529A00()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 672))(ObjectType, v1) & 1;
}

uint64_t sub_100529A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v12;
  *uint64_t v12 = v6;
  v12[6] = a5;
  v12[7] = v5;
  v12[4] = a3;
  v12[5] = a4;
  v12[2] = a1;
  v12[3] = a2;
  v12[1] = sub_100529B4C;
  v12[8] = *v5;
  return _swift_task_switch(sub_100529C9C, 0, 0);
}

uint64_t sub_100529B4C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_100529C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[6] = a5;
  void v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  _OWORD v6[3] = a2;
  v6[8] = *v5;
  return _swift_task_switch(sub_100529C9C, 0, 0);
}

uint64_t sub_100529C9C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void *)(v0[7] + 24);
    swift_getObjectType();
    uint64_t v9 = *(void *)(v2 + 72) + **(int **)(v2 + 72);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[10] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100529E6C;
    __asm { BRAA            X9, X16 }
  }
  uint64_t v4 = self;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v6 = String._bridgeToObjectiveC()();
  [v4 unexpectedNilPropertyWithClass:ObjCClassFromMetadata property:v6];

  swift_willThrow();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_100529E6C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_100529FFC;
  }
  else
  {
    *(void *)(v4 + 96) = a1;
    uint64_t v5 = sub_100529F94;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_100529F94()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 96);
  return v1(v2);
}

uint64_t sub_100529FFC()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10052A068(uint64_t a1, uint64_t a2)
{
  swift_getObjectType();
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v3 + 432))(ObjectType, v3);
  uint64_t v5 = TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)();
  swift_bridgeObjectRelease();
  return v5;
}

void *sub_10052A144(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16))
  {
    if (qword_1007856B8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_1007A4218);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 134218240;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v5 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "objectIDs count not matching titles count {objectIDs: %ld, titles: %ld}", (uint8_t *)v5, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease();
      a1 = swift_bridgeObjectRelease();
    }
  }
  __chkstk_darwin(a1);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_10053C828(v6, sub_10053F1EC);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10052A328(uint64_t result, void *a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) <= result) {
    goto LABEL_4;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_4:
    id v4 = a2;
    return (uint64_t)a2;
  }
  __break(1u);
  return result;
}

uint64_t sub_10052A390(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, unsigned __int8 a9)
{
  uint64_t v13 = *(void *)(a2 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = a3(a1);
  uint64_t v16 = *(void *)(a2 + 40);
  uint64_t v17 = swift_getObjectType();
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 432))(v17, v16);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t))(v13 + 168))(v15, 2, a5, a6, a7, a8, a9, v18, ObjectType, v13);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10052A4A0(uint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  return sub_1003C2C40(a2, a3, a4);
}

uint64_t sub_10052A4D0()
{
  return sub_1005277FC((void (*)(char *))sub_10053F320);
}

uint64_t sub_10052A50C()
{
  uint64_t v53 = *v0;
  uint64_t v1 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v1 - 8);
  uint64_t v49 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754(&qword_1007A4540);
  __chkstk_darwin(v3 - 8);
  uint64_t v47 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_1007A4548);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v42 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v44 = (uint64_t)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t v43 = v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t v54 = v0;
  sub_10053C374((uint64_t)v0 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t)&v41 - v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100018BF8(v19, (uint64_t)qword_1007A4218);
  sub_10053C374((uint64_t)v18, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.debug.getter();
  BOOL v22 = os_log_type_enabled(v20, v21);
  unint64_t v48 = v18;
  if (v22)
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v56 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v24 = TTRTreeStorageItem.treeItemDescription.getter();
    id v55 = (id)sub_1000385A8(v24, v25, &v56);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10053B6D4((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "PencilWritingStateReporter: schedule for item %s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10053B6D4((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  uint64_t v41 = OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable;
  if (*(void *)((char *)v54
                 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  uint64_t v56 = 1;
  sub_10003B754(&qword_1007A4550);
  swift_allocObject();
  uint64_t v56 = CurrentValueSubject.init(_:)();
  uint64_t v26 = v7;
  static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
  uint64_t v28 = v45;
  uint64_t v27 = v46;
  uint64_t v29 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v47, 1, 1, v46);
  id v55 = [self mainRunLoop];
  uint64_t v30 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v31 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v49, 1, 1, v30);
  sub_10053C640();
  sub_100037EA0(&qword_1007A4558, &qword_1007A4550);
  sub_10053C680((unint64_t *)&qword_10078ACA0, (void (*)(uint64_t))sub_10053C640);
  uint64_t v32 = v50;
  Publisher.delay<A>(for:tolerance:scheduler:options:)();
  sub_10003B6F8(v31, &qword_100791B80);

  sub_10003B6F8(v29, &qword_1007A4540);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
  swift_release();
  uint64_t v33 = (uint64_t)v48;
  uint64_t v34 = v44;
  sub_10053C374((uint64_t)v48, v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  unint64_t v35 = (*(unsigned __int8 *)(v42 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v36 = swift_allocObject();
  sub_10053C30C(v34, v36 + v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100037EA0(&qword_1007A4560, &qword_1007A4548);
  unint64_t v37 = v54;
  uint64_t v38 = v52;
  uint64_t v39 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v38);
  sub_10053B6D4(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *(void *)((char *)v37 + v41) = v39;
  return swift_release();
}

uint64_t sub_10052ACE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100018BF8(v8, (uint64_t)qword_1007A4218);
  sub_10053C374(a3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v12 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v15 = sub_1000385A8(v12, v13, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10053B6D4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "PencilWritingStateReporter: perform delayed action for item %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_10053B6D4((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100529094(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_10052AF80()
{
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_1007A4218);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v10 = v5;
    type metadata accessor for TTRRemindersListViewModel.Item();
    sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = TTRTreeStorageItem.treeItemDescription.getter();
    sub_1000385A8(v6, v7, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "PencilWritingStateReporter: cancel scheduled for item %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v8 = OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_cancellable))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v0 + v8) = 0;
  return swift_release();
}

uint64_t sub_10052B1B8()
{
  sub_10053B6D4(v0 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_weakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10052B250()
{
  return type metadata accessor for PencilWritingStateReporter(0);
}

uint64_t type metadata accessor for PencilWritingStateReporter(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A4368);
}

uint64_t sub_10052B278()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void **sub_10052B31C(void **a1, void **a2, uint64_t a3)
{
  os_log_type_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v126 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v56 = *v3;
            *a1 = *v3;
            id v57 = v56;
            goto LABEL_33;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v55 - 8) + 16))(a1, v3, v55);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        uint64_t v58 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v59 = v58[5];
        uint64_t v60 = (char *)a1 + v59;
        Swift::String v61 = (char *)v3 + v59;
        uint64_t v62 = *(uint64_t *)((char *)v3 + v59 + 8);
        if (v62)
        {
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v62;
          uint64_t v63 = (void *)*((void *)v61 + 2);
          uint64_t v64 = *((void *)v61 + 3);
          uint64_t v65 = *((void *)v61 + 4);
          uint64_t v66 = *((void *)v61 + 5);
          uint64_t v67 = *((void *)v61 + 7);
          uint64_t v119 = *((void *)v61 + 6);
          unint64_t v124 = v3;
          unsigned __int8 v68 = v61[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v63, v64, v65, v66, v119, v67, v68);
          *((void *)v60 + 2) = v63;
          *((void *)v60 + 3) = v64;
          *((void *)v60 + 4) = v65;
          *((void *)v60 + 5) = v66;
          *((void *)v60 + 6) = v119;
          *((void *)v60 + 7) = v67;
          v60[64] = v68;
          *(_DWORD *)(v60 + 65) = *(_DWORD *)(v61 + 65);
          int v69 = v61[120];
          if (v69 == 255)
          {
            long long v70 = *(_OWORD *)(v61 + 88);
            *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
            *(_OWORD *)(v60 + 88) = v70;
            *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
            v60[120] = v61[120];
          }
          else
          {
            char v120 = v69 & 1;
            uint64_t v75 = (void *)*((void *)v61 + 9);
            uint64_t v74 = *((void *)v61 + 10);
            uint64_t v76 = *((void *)v61 + 11);
            uint64_t v77 = *((void *)v61 + 12);
            uint64_t v78 = *((void *)v61 + 13);
            uint64_t v79 = *((void *)v61 + 14);
            sub_10003BED8(v75, v74, v76, v77, v78, v79, v69 & 1);
            *((void *)v60 + 9) = v75;
            *((void *)v60 + 10) = v74;
            *((void *)v60 + 11) = v76;
            *((void *)v60 + 12) = v77;
            *((void *)v60 + 13) = v78;
            *((void *)v60 + 14) = v79;
            v60[120] = v120;
          }
          uint64_t v6 = v126;
          v60[121] = v61[121];
          os_log_type_t v3 = v124;
        }
        else
        {
          long long v71 = *((_OWORD *)v61 + 5);
          *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
          *((_OWORD *)v60 + 5) = v71;
          *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
          *(_OWORD *)(v60 + 106) = *(_OWORD *)(v61 + 106);
          long long v72 = *((_OWORD *)v61 + 1);
          *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
          *((_OWORD *)v60 + 1) = v72;
          long long v73 = *((_OWORD *)v61 + 3);
          *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
          *((_OWORD *)v60 + 3) = v73;
        }
        *((unsigned char *)a1 + v58[6]) = *((unsigned char *)v3 + v58[6]);
        *((unsigned char *)a1 + v58[7]) = *((unsigned char *)v3 + v58[7]);
        *((unsigned char *)a1 + v58[8]) = *((unsigned char *)v3 + v58[8]);
        *((unsigned char *)a1 + v58[9]) = *((unsigned char *)v3 + v58[9]);
        *((unsigned char *)a1 + v58[10]) = *((unsigned char *)v3 + v58[10]);
        uint64_t v80 = v58[11];
        int v81 = *(void **)((char *)v3 + v80);
        *(void **)((char *)a1 + v80) = v81;
        id v82 = v81;
        goto LABEL_66;
      case 1u:
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v127 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v84 = *v3;
            *a1 = *v3;
            id v85 = v84;
            goto LABEL_44;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v83 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v83 - 8) + 16))(a1, v3, v83);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, v3, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        uint64_t v86 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v87 = v86[5];
        uint64_t v88 = (char *)a1 + v87;
        uint64_t v89 = (char *)v3 + v87;
        uint64_t v90 = *(uint64_t *)((char *)v3 + v87 + 8);
        if (v90)
        {
          int v125 = v3;
          *(void *)uint64_t v88 = *(void *)v89;
          *((void *)v88 + 1) = v90;
          uint64_t v91 = (void *)*((void *)v89 + 2);
          uint64_t v92 = *((void *)v89 + 3);
          uint64_t v93 = *((void *)v89 + 4);
          uint64_t v94 = *((void *)v89 + 5);
          uint64_t v96 = *((void *)v89 + 6);
          uint64_t v95 = *((void *)v89 + 7);
          unsigned __int8 v121 = v89[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v91, v92, v93, v94, v96, v95, v121);
          *((void *)v88 + 2) = v91;
          *((void *)v88 + 3) = v92;
          *((void *)v88 + 4) = v93;
          *((void *)v88 + 5) = v94;
          *((void *)v88 + 6) = v96;
          *((void *)v88 + 7) = v95;
          v88[64] = v121;
          *(_DWORD *)(v88 + 65) = *(_DWORD *)(v89 + 65);
          int v97 = v89[120];
          if (v97 == 255)
          {
            long long v98 = *(_OWORD *)(v89 + 88);
            *(_OWORD *)(v88 + 72) = *(_OWORD *)(v89 + 72);
            *(_OWORD *)(v88 + 88) = v98;
            *(_OWORD *)(v88 + 104) = *(_OWORD *)(v89 + 104);
            v88[120] = v89[120];
          }
          else
          {
            char v122 = v97 & 1;
            uint64_t v103 = (void *)*((void *)v89 + 9);
            uint64_t v102 = *((void *)v89 + 10);
            uint64_t v104 = *((void *)v89 + 11);
            uint64_t v105 = *((void *)v89 + 12);
            uint64_t v106 = *((void *)v89 + 13);
            uint64_t v107 = *((void *)v89 + 14);
            sub_10003BED8(v103, v102, v104, v105, v106, v107, v97 & 1);
            *((void *)v88 + 9) = v103;
            *((void *)v88 + 10) = v102;
            *((void *)v88 + 11) = v104;
            *((void *)v88 + 12) = v105;
            *((void *)v88 + 13) = v106;
            *((void *)v88 + 14) = v107;
            v88[120] = v122;
          }
          uint64_t v6 = v127;
          v88[121] = v89[121];
          os_log_type_t v3 = v125;
        }
        else
        {
          long long v99 = *((_OWORD *)v89 + 5);
          *((_OWORD *)v88 + 4) = *((_OWORD *)v89 + 4);
          *((_OWORD *)v88 + 5) = v99;
          *((_OWORD *)v88 + 6) = *((_OWORD *)v89 + 6);
          *(_OWORD *)(v88 + 106) = *(_OWORD *)(v89 + 106);
          long long v100 = *((_OWORD *)v89 + 1);
          *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
          *((_OWORD *)v88 + 1) = v100;
          long long v101 = *((_OWORD *)v89 + 3);
          *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
          *((_OWORD *)v88 + 3) = v101;
        }
        *((unsigned char *)a1 + v86[6]) = *((unsigned char *)v3 + v86[6]);
        *((unsigned char *)a1 + v86[7]) = *((unsigned char *)v3 + v86[7]);
        *((unsigned char *)a1 + v86[8]) = *((unsigned char *)v3 + v86[8]);
        *((unsigned char *)a1 + v86[9]) = *((unsigned char *)v3 + v86[9]);
        *((unsigned char *)a1 + v86[10]) = *((unsigned char *)v3 + v86[10]);
        uint64_t v108 = v86[11];
        uint64_t v109 = *(void **)((char *)v3 + v108);
        *(void **)((char *)a1 + v108) = v109;
        id v110 = v109;
        goto LABEL_66;
      case 2u:
        uint64_t v11 = *v3;
        *a1 = *v3;
        uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        unint64_t v13 = (void **)((char *)a1 + v12);
        uint64_t v14 = (void **)((char *)v3 + v12);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v18 = v11;
        if (v17(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v112 = *v14;
            NSObject *v13 = *v14;
            id v113 = v112;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v111 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v111 - 8) + 16))(v13, v14, v111);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 3u:
        uint64_t v19 = *v3;
        *a1 = *v3;
        uint64_t v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        unint64_t v13 = (void **)((char *)a1 + v20);
        uint64_t v14 = (void **)((char *)v3 + v20);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        os_log_type_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v22 = v19;
        if (v21(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v42 = *v14;
            NSObject *v13 = *v14;
            id v43 = v42;
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v117 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v117 - 8) + 16))(v13, v14, v117);
LABEL_64:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 4u:
        uint64_t v23 = *v3;
        *a1 = *v3;
        uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        unint64_t v13 = (void **)((char *)a1 + v24);
        uint64_t v14 = (void **)((char *)v3 + v24);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        unint64_t v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v26 = v23;
        if (v25(v14, 1, v15))
        {
LABEL_11:
          uint64_t v27 = sub_10003B754(&qword_10078C890);
          memcpy(v13, v14, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v115 = *v14;
              NSObject *v13 = *v14;
              id v116 = v115;
              goto LABEL_61;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v114 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v114 - 8) + 16))(v13, v14, v114);
LABEL_61:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v13, v14, *(void *)(v16 + 64));
              break;
          }
LABEL_65:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
LABEL_66:
        swift_storeEnumTagMultiPayload();
LABEL_67:
        *(void **)((char *)a1 + *(int *)(v6 + 20)) = *(void **)((char *)v3 + *(int *)(v6 + 20));
        break;
      case 5u:
        *a1 = *v3;
        *((unsigned char *)a1 + 8) = *((unsigned char *)v3 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
        uint64_t v28 = v3[2];
        a1[2] = v28;
        id v29 = v28;
        goto LABEL_66;
      case 6u:
        unint64_t v37 = *v3;
        *a1 = *v3;
        id v38 = v37;
        goto LABEL_66;
      case 7u:
        uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48))(v3, 1, v30))
        {
          uint64_t v32 = sub_10003B754(&qword_10078C518);
          memcpy(a1, v3, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *a1 = *v3;
          uint64_t v44 = *(int *)(v30 + 20);
          uint64_t v128 = (char *)a1 + v44;
          uint64_t v123 = (char *)v3 + v44;
          uint64_t v45 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v128, v123, v45);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
        }
        uint64_t v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        unint64_t v48 = (void **)((char *)a1 + v47);
        uint64_t v49 = (void **)((char *)v3 + v47);
        uint64_t v50 = v49[1];
        if (v50)
        {
          void *v48 = *v49;
          v48[1] = v50;
          uint64_t v51 = (void *)v49[2];
          v48[2] = v51;
          swift_bridgeObjectRetain();
          id v52 = v51;
        }
        else
        {
          *(_OWORD *)unint64_t v48 = *(_OWORD *)v49;
          v48[2] = v49[2];
        }
        goto LABEL_66;
      case 8u:
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48))(v3, 1, v39))
        {
          uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, v3, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, v3, v53);
          *((unsigned char *)a1 + *(int *)(v39 + 20)) = *((unsigned char *)v3 + *(int *)(v39 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
        uint64_t v54 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v54 + 20)) = *(void **)((char *)v3 + *(int *)(v54 + 20));
        goto LABEL_66;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)v3;
        uint64_t v33 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v34 = (char *)a1 + v33;
        unint64_t v35 = (char *)v3 + v33;
        uint64_t v36 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_66;
      default:
        memcpy(a1, v3, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_67;
    }
  }
  return a1;
}

void sub_10052C924(uint64_t a1)
{
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_24;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_25;
      }
      goto LABEL_25;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_24:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v2 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
          break;
        default:
          break;
      }
LABEL_25:
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v14 = a1 + *(int *)(v13 + 20);
      if (*(void *)(v14 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v14 + 16), *(void *)(v14 + 24), *(void *)(v14 + 32), *(void *)(v14 + 40), *(void *)(v14 + 48), *(void *)(v14 + 56), *(unsigned char *)(v14 + 64));
        int v15 = *(unsigned __int8 *)(v14 + 120);
        if (v15 != 255) {
          sub_10003B9C0(*(void **)(v14 + 72), *(void *)(v14 + 80), *(void *)(v14 + 88), *(void *)(v14 + 96), *(void *)(v14 + 104), *(void *)(v14 + 112), v15 & 1);
        }
      }
      id v6 = *(id *)(a1 + *(int *)(v13 + 44));
      goto LABEL_29;
    case 2u:

      a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(a1, 1, v3))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_20;
          default:
            return;
        }
      }
      return;
    case 3u:

      a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_20;
          default:
            return;
        }
      }
      return;
    case 4u:

      a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a1, 1, v5))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_20;
          default:
            return;
        }
      }
      return;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v6 = *(id *)a1;
      goto LABEL_29;
    case 7u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(a1, 1, v7))
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = a1 + *(int *)(v7 + 20);
        uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      }
      a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(a1 + 8)) {
        return;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v6 = *(id *)(a1 + 16);
LABEL_29:

      break;
    case 8u:
      uint64_t v10 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(a1, 1, v10)) {
        return;
      }
LABEL_20:
      uint64_t v11 = type metadata accessor for Date();
LABEL_21:
      uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
      v12(a1, v11);
      break;
    case 9u:
      a1 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v11 = type metadata accessor for AnyTip();
      goto LABEL_21;
    default:
      return;
  }
}

void **sub_10052CECC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v117 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v54 = *a2;
          *a1 = *a2;
          id v55 = v54;
          goto LABEL_31;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
LABEL_31:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v57 = v56[5];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = *(uint64_t *)((char *)a2 + v57 + 8);
      if (!v60) {
        goto LABEL_35;
      }
      uint64_t v112 = a1;
      uint64_t v115 = a2;
      *(void *)uint64_t v58 = *(void *)v59;
      *((void *)v58 + 1) = v60;
      Swift::String v61 = (void *)*((void *)v59 + 2);
      uint64_t v62 = *((void *)v59 + 3);
      uint64_t v63 = *((void *)v59 + 4);
      uint64_t v64 = *((void *)v59 + 5);
      uint64_t v65 = *((void *)v59 + 6);
      uint64_t v66 = *((void *)v59 + 7);
      unsigned __int8 v67 = v59[64];
      swift_bridgeObjectRetain();
      sub_100050F84(v61, v62, v63, v64, v65, v66, v67);
      *((void *)v58 + 2) = v61;
      *((void *)v58 + 3) = v62;
      *((void *)v58 + 4) = v63;
      *((void *)v58 + 5) = v64;
      *((void *)v58 + 6) = v65;
      *((void *)v58 + 7) = v66;
      v58[64] = v67;
      *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
      int v68 = v59[120];
      if (v68 == 255)
      {
        long long v69 = *(_OWORD *)(v59 + 88);
        *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
        *(_OWORD *)(v58 + 88) = v69;
        *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
        v58[120] = v59[120];
      }
      else
      {
        long long v73 = (void *)*((void *)v59 + 9);
        uint64_t v74 = *((void *)v59 + 10);
        uint64_t v75 = *((void *)v59 + 11);
        uint64_t v76 = *((void *)v59 + 12);
        uint64_t v77 = *((void *)v59 + 13);
        uint64_t v78 = *((void *)v59 + 14);
        char v79 = v68 & 1;
        sub_10003BED8(v73, v74, v75, v76, v77, v78, v68 & 1);
        *((void *)v58 + 9) = v73;
        *((void *)v58 + 10) = v74;
        *((void *)v58 + 11) = v75;
        *((void *)v58 + 12) = v76;
        *((void *)v58 + 13) = v77;
        *((void *)v58 + 14) = v78;
        v58[120] = v79;
      }
      a3 = v117;
      v58[121] = v59[121];
      a1 = v112;
      a2 = v115;
      goto LABEL_38;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v118 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v84 = *a2;
          *a1 = *a2;
          id v85 = v84;
          goto LABEL_42;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v83 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v86 = v56[5];
      uint64_t v58 = (char *)a1 + v86;
      uint64_t v59 = (char *)a2 + v86;
      uint64_t v87 = *(uint64_t *)((char *)a2 + v86 + 8);
      if (v87)
      {
        id v113 = a1;
        id v116 = a2;
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = v87;
        uint64_t v88 = (void *)*((void *)v59 + 2);
        uint64_t v89 = *((void *)v59 + 3);
        uint64_t v90 = *((void *)v59 + 4);
        uint64_t v91 = *((void *)v59 + 5);
        uint64_t v92 = *((void *)v59 + 6);
        uint64_t v93 = *((void *)v59 + 7);
        unsigned __int8 v94 = v59[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v88, v89, v90, v91, v92, v93, v94);
        *((void *)v58 + 2) = v88;
        *((void *)v58 + 3) = v89;
        *((void *)v58 + 4) = v90;
        *((void *)v58 + 5) = v91;
        *((void *)v58 + 6) = v92;
        *((void *)v58 + 7) = v93;
        v58[64] = v94;
        *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
        int v95 = v59[120];
        if (v95 == 255)
        {
          long long v96 = *(_OWORD *)(v59 + 88);
          *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
          *(_OWORD *)(v58 + 88) = v96;
          *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
          v58[120] = v59[120];
        }
        else
        {
          int v97 = (void *)*((void *)v59 + 9);
          uint64_t v98 = *((void *)v59 + 10);
          uint64_t v99 = *((void *)v59 + 11);
          uint64_t v100 = *((void *)v59 + 12);
          uint64_t v101 = *((void *)v59 + 13);
          uint64_t v102 = *((void *)v59 + 14);
          char v103 = v95 & 1;
          sub_10003BED8(v97, v98, v99, v100, v101, v102, v95 & 1);
          *((void *)v58 + 9) = v97;
          *((void *)v58 + 10) = v98;
          *((void *)v58 + 11) = v99;
          *((void *)v58 + 12) = v100;
          *((void *)v58 + 13) = v101;
          *((void *)v58 + 14) = v102;
          v58[120] = v103;
        }
        a3 = v118;
        v58[121] = v59[121];
        a1 = v113;
        a2 = v116;
      }
      else
      {
LABEL_35:
        long long v70 = *((_OWORD *)v59 + 5);
        *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
        *((_OWORD *)v58 + 5) = v70;
        *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
        *(_OWORD *)(v58 + 106) = *(_OWORD *)(v59 + 106);
        long long v71 = *((_OWORD *)v59 + 1);
        *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v71;
        long long v72 = *((_OWORD *)v59 + 3);
        *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
        *((_OWORD *)v58 + 3) = v72;
      }
LABEL_38:
      *((unsigned char *)a1 + v56[6]) = *((unsigned char *)a2 + v56[6]);
      *((unsigned char *)a1 + v56[7]) = *((unsigned char *)a2 + v56[7]);
      *((unsigned char *)a1 + v56[8]) = *((unsigned char *)a2 + v56[8]);
      *((unsigned char *)a1 + v56[9]) = *((unsigned char *)a2 + v56[9]);
      *((unsigned char *)a1 + v56[10]) = *((unsigned char *)a2 + v56[10]);
      uint64_t v80 = v56[11];
      int v81 = *(void **)((char *)a2 + v80);
      *(void **)((char *)a1 + v80) = v81;
      id v82 = v81;
      goto LABEL_63;
    case 2u:
      uint64_t v9 = *a2;
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v10);
      uint64_t v12 = (void **)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      int v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v16 = v9;
      if (v15(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v105 = *v12;
          *uint64_t v11 = *v12;
          id v106 = v105;
          goto LABEL_52;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v104 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(v11, v12, v104);
LABEL_52:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 3u:
      uint64_t v17 = *a2;
      *a1 = *a2;
      uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v18);
      uint64_t v12 = (void **)((char *)a2 + v18);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v20 = v17;
      if (v19(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v40 = *v12;
          *uint64_t v11 = *v12;
          id v41 = v40;
          goto LABEL_61;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v110 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v110 - 8) + 16))(v11, v12, v110);
LABEL_61:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 4u:
      os_log_type_t v21 = *a2;
      *a1 = *a2;
      uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v22);
      uint64_t v12 = (void **)((char *)a2 + v22);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v24 = v21;
      if (v23(v12, 1, v13))
      {
LABEL_9:
        uint64_t v25 = sub_10003B754(&qword_10078C890);
        memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v108 = *v12;
            *uint64_t v11 = *v12;
            id v109 = v108;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v107 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(v11, v12, v107);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
LABEL_62:
        (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
LABEL_63:
      swift_storeEnumTagMultiPayload();
LABEL_64:
      *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
      return a1;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      id v26 = a2[2];
      a1[2] = v26;
      id v27 = v26;
      goto LABEL_63;
    case 6u:
      unint64_t v35 = *a2;
      *a1 = *a2;
      id v36 = v35;
      goto LABEL_63;
    case 7u:
      uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
      {
        uint64_t v30 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v42 = *(int *)(v28 + 20);
        uint64_t v119 = (char *)a1 + v42;
        uint64_t v114 = (char *)a2 + v42;
        uint64_t v43 = type metadata accessor for REMHashtagLabelSpecifier();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v119, v114, v43);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
      }
      uint64_t v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v46 = (void **)((char *)a1 + v45);
      uint64_t v47 = (void **)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      if (v48)
      {
        void *v46 = *v47;
        v46[1] = v48;
        uint64_t v49 = (void *)v47[2];
        v46[2] = v49;
        swift_bridgeObjectRetain();
        id v50 = v49;
      }
      else
      {
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
        v46[2] = v47[2];
      }
      goto LABEL_63;
    case 8u:
      uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
      {
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
      }
      uint64_t v52 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void **)((char *)a1 + *(int *)(v52 + 20)) = *(void **)((char *)a2 + *(int *)(v52 + 20));
      goto LABEL_63;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      goto LABEL_63;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_64;
  }
}

void **sub_10052E458(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10053B6D4((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v131 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v52 = *a2;
            *a1 = *a2;
            id v53 = v52;
            goto LABEL_31;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        uint64_t v54 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v55 = v54[5];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        if (*(void **)((char *)a2 + v55 + 8))
        {
          *(void *)uint64_t v56 = *(void *)v57;
          *((void *)v56 + 1) = *((void *)v57 + 1);
          uint64_t v58 = (void *)*((void *)v57 + 2);
          uint64_t v59 = *((void *)v57 + 3);
          uint64_t v60 = *((void *)v57 + 4);
          uint64_t v61 = *((void *)v57 + 5);
          uint64_t v62 = *((void *)v57 + 6);
          uint64_t v128 = *((void *)v57 + 7);
          unsigned __int8 v123 = v57[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v58, v59, v60, v61, v62, v128, v123);
          *((void *)v56 + 2) = v58;
          *((void *)v56 + 3) = v59;
          *((void *)v56 + 4) = v60;
          *((void *)v56 + 5) = v61;
          *((void *)v56 + 6) = v62;
          *((void *)v56 + 7) = v128;
          v56[64] = v123;
          v56[65] = v57[65];
          v56[66] = v57[66];
          v56[67] = v57[67];
          v56[68] = v57[68];
          int v63 = v57[120];
          if (v63 == 255)
          {
            long long v64 = *(_OWORD *)(v57 + 72);
            long long v65 = *(_OWORD *)(v57 + 88);
            long long v66 = *(_OWORD *)(v57 + 104);
            v56[120] = v57[120];
            *(_OWORD *)(v56 + 88) = v65;
            *(_OWORD *)(v56 + 104) = v66;
            *(_OWORD *)(v56 + 72) = v64;
          }
          else
          {
            char v129 = v63 & 1;
            uint64_t v73 = *((void *)v57 + 10);
            unint64_t v124 = (void *)*((void *)v57 + 9);
            uint64_t v74 = *((void *)v57 + 11);
            uint64_t v75 = *((void *)v57 + 12);
            uint64_t v76 = *((void *)v57 + 13);
            uint64_t v77 = *((void *)v57 + 14);
            sub_10003BED8(v124, v73, v74, v75, v76, v77, v63 & 1);
            *((void *)v56 + 9) = v124;
            *((void *)v56 + 10) = v73;
            *((void *)v56 + 11) = v74;
            *((void *)v56 + 12) = v75;
            *((void *)v56 + 13) = v76;
            *((void *)v56 + 14) = v77;
            v56[120] = v129;
          }
          a3 = v131;
          v56[121] = v57[121];
        }
        else
        {
          long long v67 = *(_OWORD *)v57;
          long long v68 = *((_OWORD *)v57 + 1);
          long long v69 = *((_OWORD *)v57 + 3);
          *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
          *((_OWORD *)v56 + 3) = v69;
          *(_OWORD *)uint64_t v56 = v67;
          *((_OWORD *)v56 + 1) = v68;
          long long v70 = *((_OWORD *)v57 + 4);
          long long v71 = *((_OWORD *)v57 + 5);
          long long v72 = *((_OWORD *)v57 + 6);
          *(_OWORD *)(v56 + 106) = *(_OWORD *)(v57 + 106);
          *((_OWORD *)v56 + 5) = v71;
          *((_OWORD *)v56 + 6) = v72;
          *((_OWORD *)v56 + 4) = v70;
        }
        *((unsigned char *)a1 + v54[6]) = *((unsigned char *)a2 + v54[6]);
        *((unsigned char *)a1 + v54[7]) = *((unsigned char *)a2 + v54[7]);
        *((unsigned char *)a1 + v54[8]) = *((unsigned char *)a2 + v54[8]);
        *((unsigned char *)a1 + v54[9]) = *((unsigned char *)a2 + v54[9]);
        *((unsigned char *)a1 + v54[10]) = *((unsigned char *)a2 + v54[10]);
        uint64_t v78 = v54[11];
        char v79 = *(void **)((char *)a2 + v78);
        *(void **)((char *)a1 + v78) = v79;
        id v80 = v79;
        goto LABEL_65;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v132 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v82 = *a2;
            *a1 = *a2;
            id v83 = v82;
            goto LABEL_42;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v81 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        uint64_t v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v85 = v84[5];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        if (*(void **)((char *)a2 + v85 + 8))
        {
          uint64_t v130 = v84;
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = *((void *)v87 + 1);
          uint64_t v88 = (void *)*((void *)v87 + 2);
          uint64_t v89 = *((void *)v87 + 3);
          uint64_t v90 = *((void *)v87 + 4);
          uint64_t v91 = *((void *)v87 + 5);
          uint64_t v92 = *((void *)v87 + 6);
          uint64_t v125 = *((void *)v87 + 7);
          unsigned __int8 v93 = v87[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v88, v89, v90, v91, v92, v125, v93);
          *((void *)v86 + 2) = v88;
          *((void *)v86 + 3) = v89;
          *((void *)v86 + 4) = v90;
          *((void *)v86 + 5) = v91;
          *((void *)v86 + 6) = v92;
          *((void *)v86 + 7) = v125;
          v86[64] = v93;
          v86[65] = v87[65];
          v86[66] = v87[66];
          v86[67] = v87[67];
          v86[68] = v87[68];
          int v94 = v87[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v87 + 72);
            long long v96 = *(_OWORD *)(v87 + 88);
            long long v97 = *(_OWORD *)(v87 + 104);
            v86[120] = v87[120];
            *(_OWORD *)(v86 + 88) = v96;
            *(_OWORD *)(v86 + 104) = v97;
            *(_OWORD *)(v86 + 72) = v95;
          }
          else
          {
            char v126 = v94 & 1;
            uint64_t v105 = (void *)*((void *)v87 + 9);
            uint64_t v104 = *((void *)v87 + 10);
            uint64_t v106 = *((void *)v87 + 11);
            uint64_t v107 = *((void *)v87 + 12);
            uint64_t v108 = *((void *)v87 + 13);
            uint64_t v109 = *((void *)v87 + 14);
            sub_10003BED8(v105, v104, v106, v107, v108, v109, v94 & 1);
            *((void *)v86 + 9) = v105;
            *((void *)v86 + 10) = v104;
            *((void *)v86 + 11) = v106;
            *((void *)v86 + 12) = v107;
            *((void *)v86 + 13) = v108;
            *((void *)v86 + 14) = v109;
            v86[120] = v126;
          }
          a3 = v132;
          v86[121] = v87[121];
          uint64_t v84 = v130;
        }
        else
        {
          long long v98 = *(_OWORD *)v87;
          long long v99 = *((_OWORD *)v87 + 1);
          long long v100 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v100;
          *(_OWORD *)uint64_t v86 = v98;
          *((_OWORD *)v86 + 1) = v99;
          long long v101 = *((_OWORD *)v87 + 4);
          long long v102 = *((_OWORD *)v87 + 5);
          long long v103 = *((_OWORD *)v87 + 6);
          *(_OWORD *)(v86 + 106) = *(_OWORD *)(v87 + 106);
          *((_OWORD *)v86 + 5) = v102;
          *((_OWORD *)v86 + 6) = v103;
          *((_OWORD *)v86 + 4) = v101;
        }
        *((unsigned char *)a1 + v84[6]) = *((unsigned char *)a2 + v84[6]);
        *((unsigned char *)a1 + v84[7]) = *((unsigned char *)a2 + v84[7]);
        *((unsigned char *)a1 + v84[8]) = *((unsigned char *)a2 + v84[8]);
        *((unsigned char *)a1 + v84[9]) = *((unsigned char *)a2 + v84[9]);
        *((unsigned char *)a1 + v84[10]) = *((unsigned char *)a2 + v84[10]);
        uint64_t v110 = v84[11];
        uint64_t v111 = *(void **)((char *)a2 + v110);
        *(void **)((char *)a1 + v110) = v111;
        id v112 = v111;
        goto LABEL_65;
      case 2u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v10);
        uint64_t v12 = (void **)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        int v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v16 = v9;
        if (v15(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v114 = *v12;
            *uint64_t v11 = *v12;
            id v115 = v114;
            goto LABEL_53;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v113 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v11, v12, v113);
LABEL_53:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 3u:
        uint64_t v17 = *a2;
        *a1 = *a2;
        uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v18);
        uint64_t v12 = (void **)((char *)a2 + v18);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v20 = v17;
        if (v19(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v117 = *v12;
            *uint64_t v11 = *v12;
            id v118 = v117;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v116 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v116 - 8) + 16))(v11, v12, v116);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 4u:
        os_log_type_t v21 = *a2;
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v22);
        uint64_t v12 = (void **)((char *)a2 + v22);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v24 = v21;
        if (v23(v12, 1, v13))
        {
LABEL_10:
          uint64_t v25 = sub_10003B754(&qword_10078C890);
          memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              char v120 = *v12;
              *uint64_t v11 = *v12;
              id v121 = v120;
              goto LABEL_63;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v119 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v119 - 8) + 16))(v11, v12, v119);
LABEL_63:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(void *)(v14 + 64));
              break;
          }
LABEL_64:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_65:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        id v26 = a2[2];
        a1[2] = v26;
        id v27 = v26;
        goto LABEL_65;
      case 6u:
        unint64_t v35 = *a2;
        *a1 = *a2;
        id v36 = v35;
        goto LABEL_65;
      case 7u:
        uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v29 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
        {
          uint64_t v30 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v40 = *(int *)(v28 + 20);
          uint64_t v133 = (char *)a1 + v40;
          uint64_t v127 = (char *)a2 + v40;
          uint64_t v41 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v133, v127, v41);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
        }
        uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v44 = (void **)((char *)a1 + v43);
        uint64_t v45 = (void **)((char *)a2 + v43);
        if (v45[1])
        {
          void *v44 = *v45;
          v44[1] = v45[1];
          uint64_t v46 = (void *)v45[2];
          void v44[2] = v46;
          swift_bridgeObjectRetain();
          id v47 = v46;
        }
        else
        {
          long long v48 = *(_OWORD *)v45;
          void v44[2] = v45[2];
          *(_OWORD *)uint64_t v44 = v48;
        }
        goto LABEL_65;
      case 8u:
        uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
        {
          uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
        }
        uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v50 + 20)) = *(void **)((char *)a2 + *(int *)(v50 + 20));
        goto LABEL_65;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_65;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *(void **)((char *)a1 + *(int *)(a3 + 20)) = *(void **)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_10052FA74(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v36 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_25;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
LABEL_25:
      uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v38 = v37[5];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (_OWORD *)((char *)a2 + v38);
      long long v41 = v40[3];
      v39[2] = v40[2];
      v39[3] = v41;
      long long v42 = v40[1];
      _OWORD *v39 = *v40;
      v39[1] = v42;
      *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
      long long v43 = v40[6];
      long long v44 = v40[4];
      v39[5] = v40[5];
      v39[6] = v43;
      v39[4] = v44;
      *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
      *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
      *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
      *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
      *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
      *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
      goto LABEL_38;
    case 2u:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v46 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v14;
      uint64_t v11 = (char *)a2 + v14;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 4u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v16;
      uint64_t v11 = (char *)a2 + v16;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        uint64_t v15 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v48 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
LABEL_37:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_38:
      swift_storeEnumTagMultiPayload();
LABEL_39:
      *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
      return a1;
    case 7u:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v27 = *(int *)(v17 + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      goto LABEL_38;
    case 8u:
      uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
      {
        uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v34 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
      }
      uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
      goto LABEL_38;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      id v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_38;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_39;
  }
}

void *sub_100530B5C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10053B6D4((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_26;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v45 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
LABEL_26:
        uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v38 = v37[5];
        uint64_t v39 = (_OWORD *)((char *)a1 + v38);
        uint64_t v40 = (_OWORD *)((char *)a2 + v38);
        long long v41 = v40[3];
        v39[2] = v40[2];
        v39[3] = v41;
        long long v42 = v40[1];
        _OWORD *v39 = *v40;
        v39[1] = v42;
        *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
        long long v43 = v40[6];
        long long v44 = v40[4];
        v39[5] = v40[5];
        v39[6] = v43;
        v39[4] = v44;
        *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
        *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
        *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
        *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
        *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
        *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v46 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 3u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v14;
        uint64_t v11 = (char *)a2 + v14;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 4u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v16;
        uint64_t v11 = (char *)a2 + v16;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_8:
          uint64_t v15 = sub_10003B754(&qword_10078C890);
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v48 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(v13 + 64));
              break;
          }
LABEL_38:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v27 = *(int *)(v17 + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((void *)v32 + 2) = *((void *)v33 + 2);
        goto LABEL_39;
      case 8u:
        uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v34 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
        goto LABEL_39;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_39;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100531C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100531C7C);
}

uint64_t sub_100531C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_100531CE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100531CFC);
}

uint64_t sub_100531CFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A4458);
}

uint64_t sub_100531D8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10053B5E4(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
}

char *sub_100531DB0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10003B754(&qword_100787160);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_10003B754(&qword_100792060);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              int v63 = *a2;
              *(void *)a1 = *a2;
              long long v64 = v63;
              goto LABEL_35;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v62 = type metadata accessor for Date();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
LABEL_35:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
              break;
          }
          long long v65 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v66 = v65[5];
          long long v67 = &a1[v66];
          long long v68 = (char *)a2 + v66;
          uint64_t v69 = *(uint64_t *)((char *)a2 + v66 + 8);
          if (!v69) {
            goto LABEL_39;
          }
          uint64_t v130 = v8;
          *(void *)long long v67 = *(void *)v68;
          *((void *)v67 + 1) = v69;
          long long v70 = (void *)*((void *)v68 + 2);
          uint64_t v71 = *((void *)v68 + 3);
          uint64_t v73 = *((void *)v68 + 4);
          uint64_t v72 = *((void *)v68 + 5);
          uint64_t v109 = *((void *)v68 + 6);
          uint64_t v113 = v65;
          __dstc = (void *)*((void *)v68 + 7);
          unsigned __int8 v116 = v68[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v70, v71, v73, v72, v109, (uint64_t)__dstc, v116);
          *((void *)v67 + 2) = v70;
          *((void *)v67 + 3) = v71;
          *((void *)v67 + 4) = v73;
          *((void *)v67 + 5) = v72;
          *((void *)v67 + 6) = v109;
          *((void *)v67 + 7) = __dstc;
          v67[64] = v116;
          *(_DWORD *)(v67 + 65) = *(_DWORD *)(v68 + 65);
          int v74 = v68[120];
          if (v74 == 255)
          {
            long long v75 = *(_OWORD *)(v68 + 88);
            *(_OWORD *)(v67 + 72) = *(_OWORD *)(v68 + 72);
            *(_OWORD *)(v67 + 88) = v75;
            *(_OWORD *)(v67 + 104) = *(_OWORD *)(v68 + 104);
            v67[120] = v68[120];
          }
          else
          {
            char __dstd = v74 & 1;
            char v79 = (void *)*((void *)v68 + 9);
            uint64_t v80 = *((void *)v68 + 10);
            uint64_t v81 = *((void *)v68 + 11);
            uint64_t v82 = *((void *)v68 + 12);
            uint64_t v117 = *((void *)v68 + 13);
            uint64_t v110 = *((void *)v68 + 14);
            sub_10003BED8(v79, v80, v81, v82, v117, v110, v74 & 1);
            *((void *)v67 + 9) = v79;
            *((void *)v67 + 10) = v80;
            *((void *)v67 + 11) = v81;
            *((void *)v67 + 12) = v82;
            *((void *)v67 + 13) = v117;
            *((void *)v67 + 14) = v110;
            v67[120] = __dstd;
          }
          uint64_t v8 = v130;
          v67[121] = v68[121];
          long long v65 = v113;
          goto LABEL_42;
        case 1u:
          uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v87 = *a2;
              *(void *)a1 = *a2;
              uint64_t v88 = v87;
              goto LABEL_46;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v86 = type metadata accessor for Date();
              (*(void (**)(char *, char **, uint64_t))(*(void *)(v86 - 8) + 16))(a1, a2, v86);
LABEL_46:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
              break;
          }
          long long v65 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v89 = v65[5];
          long long v67 = &a1[v89];
          long long v68 = (char *)a2 + v89;
          uint64_t v90 = *(uint64_t *)((char *)a2 + v89 + 8);
          if (v90)
          {
            uint64_t v131 = v8;
            *(void *)long long v67 = *(void *)v68;
            *((void *)v67 + 1) = v90;
            uint64_t v91 = (void *)*((void *)v68 + 2);
            uint64_t v92 = *((void *)v68 + 3);
            uint64_t v94 = *((void *)v68 + 4);
            uint64_t v93 = *((void *)v68 + 5);
            uint64_t v111 = *((void *)v68 + 6);
            uint64_t v114 = v65;
            __dste = (void *)*((void *)v68 + 7);
            unsigned __int8 v118 = v68[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v91, v92, v94, v93, v111, (uint64_t)__dste, v118);
            *((void *)v67 + 2) = v91;
            *((void *)v67 + 3) = v92;
            *((void *)v67 + 4) = v94;
            *((void *)v67 + 5) = v93;
            *((void *)v67 + 6) = v111;
            *((void *)v67 + 7) = __dste;
            v67[64] = v118;
            *(_DWORD *)(v67 + 65) = *(_DWORD *)(v68 + 65);
            int v95 = v68[120];
            if (v95 == 255)
            {
              long long v96 = *(_OWORD *)(v68 + 88);
              *(_OWORD *)(v67 + 72) = *(_OWORD *)(v68 + 72);
              *(_OWORD *)(v67 + 88) = v96;
              *(_OWORD *)(v67 + 104) = *(_OWORD *)(v68 + 104);
              v67[120] = v68[120];
            }
            else
            {
              char __dstf = v95 & 1;
              long long v97 = (void *)*((void *)v68 + 9);
              uint64_t v98 = *((void *)v68 + 10);
              uint64_t v99 = *((void *)v68 + 11);
              uint64_t v100 = *((void *)v68 + 12);
              uint64_t v119 = *((void *)v68 + 13);
              uint64_t v112 = *((void *)v68 + 14);
              sub_10003BED8(v97, v98, v99, v100, v119, v112, v95 & 1);
              *((void *)v67 + 9) = v97;
              *((void *)v67 + 10) = v98;
              *((void *)v67 + 11) = v99;
              *((void *)v67 + 12) = v100;
              *((void *)v67 + 13) = v119;
              *((void *)v67 + 14) = v112;
              v67[120] = __dstf;
            }
            uint64_t v8 = v131;
            v67[121] = v68[121];
            long long v65 = v114;
          }
          else
          {
LABEL_39:
            long long v76 = *((_OWORD *)v68 + 5);
            *((_OWORD *)v67 + 4) = *((_OWORD *)v68 + 4);
            *((_OWORD *)v67 + 5) = v76;
            *((_OWORD *)v67 + 6) = *((_OWORD *)v68 + 6);
            *(_OWORD *)(v67 + 106) = *(_OWORD *)(v68 + 106);
            long long v77 = *((_OWORD *)v68 + 1);
            *(_OWORD *)long long v67 = *(_OWORD *)v68;
            *((_OWORD *)v67 + 1) = v77;
            long long v78 = *((_OWORD *)v68 + 3);
            *((_OWORD *)v67 + 2) = *((_OWORD *)v68 + 2);
            *((_OWORD *)v67 + 3) = v78;
          }
LABEL_42:
          a1[v65[6]] = *((unsigned char *)a2 + v65[6]);
          a1[v65[7]] = *((unsigned char *)a2 + v65[7]);
          a1[v65[8]] = *((unsigned char *)a2 + v65[8]);
          a1[v65[9]] = *((unsigned char *)a2 + v65[9]);
          a1[v65[10]] = *((unsigned char *)a2 + v65[10]);
          uint64_t v83 = v65[11];
          uint64_t v84 = *(char **)((char *)a2 + v83);
          *(void *)&a1[v83] = v84;
          id v85 = v84;
          goto LABEL_67;
        case 2u:
          uint64_t v127 = v8;
          uint64_t v14 = *a2;
          *(void *)a1 = *a2;
          uint64_t v15 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (void **)&a1[v15];
          uint64_t v16 = (void **)((char *)a2 + v15);
          uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v18 = *(void *)(v17 - 8);
          uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48);
          uint64_t v20 = v14;
          if (v19(v16, 1, v17)) {
            goto LABEL_9;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              long long v102 = *v16;
              *__dst = *v16;
              id v103 = v102;
              goto LABEL_56;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v101 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v101 - 8) + 16))(__dst, v16, v101);
LABEL_56:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dst, v16, *(void *)(v18 + 64));
              break;
          }
          goto LABEL_57;
        case 3u:
          uint64_t v128 = v8;
          uint64_t v22 = *a2;
          *(void *)a1 = *a2;
          uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dsta = (void **)&a1[v23];
          id v24 = (void **)((char *)a2 + v23);
          uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v26 = *(void *)(v25 - 8);
          uint64_t v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
          uint64_t v28 = v22;
          if (v27(v24, 1, v25))
          {
            uint64_t v29 = sub_10003B754(&qword_10078C890);
            memcpy(__dsta, v24, *(void *)(*(void *)(v29 - 8) + 64));
            uint64_t v8 = v128;
          }
          else
          {
            uint64_t v48 = v25;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v49 = *v24;
                uint64_t v50 = __dsta;
                *__dsta = *v24;
                id v51 = v49;
                goto LABEL_65;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v107 = type metadata accessor for Date();
                uint64_t v50 = __dsta;
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(__dsta, v24, v107);
LABEL_65:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                uint64_t v50 = __dsta;
                memcpy(__dsta, v24, *(void *)(v26 + 64));
                break;
            }
            uint64_t v8 = v128;
            (*(void (**)(void **, void, uint64_t, uint64_t))(v26 + 56))(v50, 0, 1, v48);
          }
          goto LABEL_67;
        case 4u:
          uint64_t v127 = v8;
          uint64_t v30 = *a2;
          *(void *)a1 = *a2;
          uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (void **)&a1[v31];
          uint64_t v16 = (void **)((char *)a2 + v31);
          uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v18 = *(void *)(v17 - 8);
          uint64_t v32 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48);
          uint64_t v33 = v30;
          if (v32(v16, 1, v17))
          {
LABEL_9:
            uint64_t v21 = sub_10003B754(&qword_10078C890);
            memcpy(__dst, v16, *(void *)(*(void *)(v21 - 8) + 64));
            uint64_t v8 = v127;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v105 = *v16;
                *__dst = *v16;
                id v106 = v105;
                goto LABEL_62;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v104 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(__dst, v16, v104);
LABEL_62:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(__dst, v16, *(void *)(v18 + 64));
                break;
            }
LABEL_57:
            (*(void (**)(void **, void, uint64_t, uint64_t))(v18 + 56))(__dst, 0, 1, v17);
            uint64_t v8 = v127;
          }
LABEL_67:
          swift_storeEnumTagMultiPayload();
LABEL_68:
          a1[*(int *)(v7 + 48)] = *((unsigned char *)a2 + *(int *)(v7 + 48));
          (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
          break;
        case 5u:
          *(void *)a1 = *a2;
          a1[8] = *((unsigned char *)a2 + 8);
          *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
          uint64_t v34 = a2[2];
          *((void *)a1 + 2) = v34;
          uint64_t v35 = v34;
          goto LABEL_67;
        case 6u:
          long long v43 = *a2;
          *(void *)a1 = *a2;
          long long v44 = v43;
          goto LABEL_67;
        case 7u:
          uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v37 = *(void *)(v36 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v37 + 48))(a2, 1, v36))
          {
            uint64_t v38 = sub_10003B754(&qword_10078C518);
            memcpy(a1, a2, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
            *(void *)a1 = *a2;
            uint64_t v52 = *(int *)(v36 + 20);
            __dstb = (char *)a2 + v52;
            char v129 = &a1[v52];
            uint64_t v53 = type metadata accessor for REMHashtagLabelSpecifier();
            id v115 = *(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16);
            swift_bridgeObjectRetain();
            v115(v129, __dstb, v53);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(a1, 0, 1, v36);
          }
          uint64_t v54 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v55 = &a1[v54];
          uint64_t v56 = (char **)((char *)a2 + v54);
          uint64_t v57 = v56[1];
          if (v57)
          {
            *(void *)uint64_t v55 = *v56;
            *((void *)v55 + 1) = v57;
            uint64_t v58 = (void *)v56[2];
            *((void *)v55 + 2) = v58;
            swift_bridgeObjectRetain();
            id v59 = v58;
          }
          else
          {
            *(_OWORD *)uint64_t v55 = *(_OWORD *)v56;
            *((void *)v55 + 2) = v56[2];
          }
          goto LABEL_67;
        case 8u:
          uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v46 = *(void *)(v45 - 8);
          if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v46 + 48))(a2, 1, v45))
          {
            uint64_t v47 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(a1, a2, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            uint64_t v60 = type metadata accessor for Date();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
            a1[*(int *)(v45 + 20)] = *((unsigned char *)a2 + *(int *)(v45 + 20));
            (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(a1, 0, 1, v45);
          }
          uint64_t v61 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void *)&a1[*(int *)(v61 + 20)] = *(char **)((char *)a2 + *(int *)(v61 + 20));
          goto LABEL_67;
        case 9u:
          *a1 = *(unsigned char *)a2;
          uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v40 = &a1[v39];
          long long v41 = (char *)a2 + v39;
          uint64_t v42 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v41, v42);
          goto LABEL_67;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_68;
      }
    }
    a1[*(int *)(a3 + 20)] = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void sub_100533518(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100787160);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_25;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_6;
          default:
            goto LABEL_26;
        }
        goto LABEL_26;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_25:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_6:
            uint64_t v3 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
            break;
          default:
            break;
        }
LABEL_26:
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v15 = a1 + *(int *)(v14 + 20);
        if (*(void *)(v15 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v15 + 16), *(void *)(v15 + 24), *(void *)(v15 + 32), *(void *)(v15 + 40), *(void *)(v15 + 48), *(void *)(v15 + 56), *(unsigned char *)(v15 + 64));
          int v16 = *(unsigned __int8 *)(v15 + 120);
          if (v16 != 255) {
            sub_10003B9C0(*(void **)(v15 + 72), *(void *)(v15 + 80), *(void *)(v15 + 88), *(void *)(v15 + 96), *(void *)(v15 + 104), *(void *)(v15 + 112), v16 & 1);
          }
        }
        id v7 = *(id *)(a1 + *(int *)(v14 + 44));
        goto LABEL_30;
      case 2u:

        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 3u:

        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(a1, 1, v5))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 4u:

        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_13;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_20;
            default:
              return;
          }
        }
        return;
      case 5u:
        goto LABEL_18;
      case 6u:
LABEL_13:
        id v7 = *(id *)a1;
        goto LABEL_30;
      case 7u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(a1, 1, v8))
        {
          swift_bridgeObjectRelease();
          uint64_t v9 = a1 + *(int *)(v8 + 20);
          uint64_t v10 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
        }
        a1 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(a1 + 8)) {
          return;
        }
        swift_bridgeObjectRelease();
LABEL_18:
        id v7 = *(id *)(a1 + 16);
LABEL_30:

        break;
      case 8u:
        uint64_t v11 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11)) {
          return;
        }
LABEL_20:
        uint64_t v12 = type metadata accessor for Date();
LABEL_22:
        uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
        v13(a1, v12);
        break;
      case 9u:
        a1 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v12 = type metadata accessor for AnyTip();
        goto LABEL_22;
      default:
        return;
    }
  }
}

void **sub_100533B04(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787160);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10003B754(&qword_100792060);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v135 = v7;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v61 = *a2;
            *a1 = *a2;
            id v62 = v61;
            goto LABEL_33;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v60 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v60 - 8) + 16))(a1, a2, v60);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        int v63 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v64 = v63[5];
        long long v65 = (char *)a1 + v64;
        uint64_t v66 = (char *)a2 + v64;
        uint64_t v67 = *(uint64_t *)((char *)a2 + v64 + 8);
        if (v67)
        {
          uint64_t v133 = a3;
          *(void *)long long v65 = *(void *)v66;
          *((void *)v65 + 1) = v67;
          long long v68 = (void *)*((void *)v66 + 2);
          uint64_t v69 = *((void *)v66 + 3);
          uint64_t v71 = *((void *)v66 + 4);
          uint64_t v70 = *((void *)v66 + 5);
          uint64_t v72 = *((void *)v66 + 7);
          unsigned __int8 v123 = v63;
          uint64_t v127 = *((void *)v66 + 6);
          unsigned __int8 v118 = v66[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v68, v69, v71, v70, v127, v72, v118);
          *((void *)v65 + 2) = v68;
          *((void *)v65 + 3) = v69;
          *((void *)v65 + 4) = v71;
          *((void *)v65 + 5) = v70;
          *((void *)v65 + 6) = v127;
          *((void *)v65 + 7) = v72;
          char v65[64] = v118;
          *(_DWORD *)(v65 + 65) = *(_DWORD *)(v66 + 65);
          int v73 = v66[120];
          if (v73 == 255)
          {
            long long v74 = *(_OWORD *)(v66 + 88);
            *(_OWORD *)(v65 + 72) = *(_OWORD *)(v66 + 72);
            *(_OWORD *)(v65 + 88) = v74;
            *(_OWORD *)(v65 + 104) = *(_OWORD *)(v66 + 104);
            v65[120] = v66[120];
          }
          else
          {
            char v128 = v73 & 1;
            char v79 = (void *)*((void *)v66 + 9);
            uint64_t v78 = *((void *)v66 + 10);
            uint64_t v80 = *((void *)v66 + 11);
            uint64_t v81 = *((void *)v66 + 12);
            uint64_t v82 = *((void *)v66 + 13);
            uint64_t v119 = *((void *)v66 + 14);
            sub_10003BED8(v79, v78, v80, v81, v82, v119, v73 & 1);
            *((void *)v65 + 9) = v79;
            *((void *)v65 + 10) = v78;
            *((void *)v65 + 11) = v80;
            *((void *)v65 + 12) = v81;
            *((void *)v65 + 13) = v82;
            *((void *)v65 + 14) = v119;
            v65[120] = v128;
          }
          a3 = v133;
          uint64_t v7 = v135;
          v65[121] = v66[121];
          int v63 = v123;
        }
        else
        {
          long long v75 = *((_OWORD *)v66 + 5);
          *((_OWORD *)v65 + 4) = *((_OWORD *)v66 + 4);
          *((_OWORD *)v65 + 5) = v75;
          *((_OWORD *)v65 + 6) = *((_OWORD *)v66 + 6);
          *(_OWORD *)(v65 + 106) = *(_OWORD *)(v66 + 106);
          long long v76 = *((_OWORD *)v66 + 1);
          *(_OWORD *)long long v65 = *(_OWORD *)v66;
          *((_OWORD *)v65 + 1) = v76;
          long long v77 = *((_OWORD *)v66 + 3);
          *((_OWORD *)v65 + 2) = *((_OWORD *)v66 + 2);
          *((_OWORD *)v65 + 3) = v77;
        }
        *((unsigned char *)a1 + v63[6]) = *((unsigned char *)a2 + v63[6]);
        *((unsigned char *)a1 + v63[7]) = *((unsigned char *)a2 + v63[7]);
        *((unsigned char *)a1 + v63[8]) = *((unsigned char *)a2 + v63[8]);
        *((unsigned char *)a1 + v63[9]) = *((unsigned char *)a2 + v63[9]);
        *((unsigned char *)a1 + v63[10]) = *((unsigned char *)a2 + v63[10]);
        uint64_t v83 = v63[11];
        uint64_t v84 = *(void **)((char *)a2 + v83);
        *(void **)((char *)a1 + v83) = v84;
        id v85 = v84;
        goto LABEL_66;
      case 1u:
        uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v136 = v7;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v87 = *a2;
            *a1 = *a2;
            id v88 = v87;
            goto LABEL_44;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v86 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v86 - 8) + 16))(a1, a2, v86);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
        uint64_t v89 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v90 = v89[5];
        uint64_t v91 = (char *)a1 + v90;
        uint64_t v92 = (char *)a2 + v90;
        uint64_t v93 = *(uint64_t *)((char *)a2 + v90 + 8);
        if (v93)
        {
          uint64_t v134 = a3;
          *(void *)uint64_t v91 = *(void *)v92;
          *((void *)v91 + 1) = v93;
          uint64_t v94 = (void *)*((void *)v92 + 2);
          uint64_t v95 = *((void *)v92 + 3);
          uint64_t v96 = *((void *)v92 + 4);
          uint64_t v97 = *((void *)v92 + 5);
          uint64_t v120 = *((void *)v92 + 6);
          uint64_t v129 = *((void *)v92 + 7);
          unsigned __int8 v124 = v92[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v94, v95, v96, v97, v120, v129, v124);
          *((void *)v91 + 2) = v94;
          *((void *)v91 + 3) = v95;
          *((void *)v91 + 4) = v96;
          *((void *)v91 + 5) = v97;
          *((void *)v91 + 6) = v120;
          *((void *)v91 + 7) = v129;
          v91[64] = v124;
          *(_DWORD *)(v91 + 65) = *(_DWORD *)(v92 + 65);
          int v98 = v92[120];
          if (v98 == 255)
          {
            long long v99 = *(_OWORD *)(v92 + 88);
            *(_OWORD *)(v91 + 72) = *(_OWORD *)(v92 + 72);
            *(_OWORD *)(v91 + 88) = v99;
            *(_OWORD *)(v91 + 104) = *(_OWORD *)(v92 + 104);
            v91[120] = v92[120];
          }
          else
          {
            char v130 = v98 & 1;
            uint64_t v103 = *((void *)v92 + 10);
            uint64_t v104 = *((void *)v92 + 11);
            uint64_t v105 = *((void *)v92 + 12);
            uint64_t v106 = *((void *)v92 + 13);
            uint64_t v121 = *((void *)v92 + 14);
            uint64_t v125 = (void *)*((void *)v92 + 9);
            sub_10003BED8(v125, v103, v104, v105, v106, v121, v98 & 1);
            *((void *)v91 + 9) = v125;
            *((void *)v91 + 10) = v103;
            *((void *)v91 + 11) = v104;
            *((void *)v91 + 12) = v105;
            *((void *)v91 + 13) = v106;
            *((void *)v91 + 14) = v121;
            v91[120] = v130;
          }
          a3 = v134;
          uint64_t v7 = v136;
          v91[121] = v92[121];
        }
        else
        {
          long long v100 = *((_OWORD *)v92 + 5);
          *((_OWORD *)v91 + 4) = *((_OWORD *)v92 + 4);
          *((_OWORD *)v91 + 5) = v100;
          *((_OWORD *)v91 + 6) = *((_OWORD *)v92 + 6);
          *(_OWORD *)(v91 + 106) = *(_OWORD *)(v92 + 106);
          long long v101 = *((_OWORD *)v92 + 1);
          *(_OWORD *)uint64_t v91 = *(_OWORD *)v92;
          *((_OWORD *)v91 + 1) = v101;
          long long v102 = *((_OWORD *)v92 + 3);
          *((_OWORD *)v91 + 2) = *((_OWORD *)v92 + 2);
          *((_OWORD *)v91 + 3) = v102;
        }
        *((unsigned char *)a1 + v89[6]) = *((unsigned char *)a2 + v89[6]);
        *((unsigned char *)a1 + v89[7]) = *((unsigned char *)a2 + v89[7]);
        *((unsigned char *)a1 + v89[8]) = *((unsigned char *)a2 + v89[8]);
        *((unsigned char *)a1 + v89[9]) = *((unsigned char *)a2 + v89[9]);
        *((unsigned char *)a1 + v89[10]) = *((unsigned char *)a2 + v89[10]);
        uint64_t v107 = v89[11];
        uint64_t v108 = *(void **)((char *)a2 + v107);
        *(void **)((char *)a1 + v107) = v108;
        id v109 = v108;
        goto LABEL_66;
      case 2u:
        uint64_t v137 = v7;
        uint64_t v131 = a3;
        uint64_t v12 = *a2;
        *a1 = *a2;
        uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v14 = (void **)((char *)a1 + v13);
        uint64_t v15 = (void **)((char *)a2 + v13);
        uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v18 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
        id v19 = v12;
        if (v18(v15, 1, v16)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v111 = *v15;
            *uint64_t v14 = *v15;
            id v112 = v111;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v110 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v110 - 8) + 16))(v14, v15, v110);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(v17 + 64));
            break;
        }
        goto LABEL_56;
      case 3u:
        uint64_t v137 = v7;
        uint64_t v131 = a3;
        uint64_t v20 = *a2;
        *a1 = *a2;
        uint64_t v21 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v14 = (void **)((char *)a1 + v21);
        uint64_t v15 = (void **)((char *)a2 + v21);
        uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v23 = *(void *)(v22 - 8);
        id v24 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v23 + 48);
        id v25 = v20;
        if (v24(v15, 1, v22)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v45 = *v15;
            *uint64_t v14 = *v15;
            id v46 = v45;
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v116 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v116 - 8) + 16))(v14, v15, v116);
LABEL_64:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(v23 + 64));
            break;
        }
        a3 = v131;
        uint64_t v7 = v137;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v23 + 56))(v14, 0, 1, v22);
        goto LABEL_66;
      case 4u:
        uint64_t v137 = v7;
        uint64_t v131 = a3;
        uint64_t v26 = *a2;
        *a1 = *a2;
        uint64_t v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v14 = (void **)((char *)a1 + v27);
        uint64_t v15 = (void **)((char *)a2 + v27);
        uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v17 = *(void *)(v16 - 8);
        uint64_t v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
        id v29 = v26;
        if (v28(v15, 1, v16))
        {
LABEL_11:
          uint64_t v30 = sub_10003B754(&qword_10078C890);
          memcpy(v14, v15, *(void *)(*(void *)(v30 - 8) + 64));
          a3 = v131;
          uint64_t v7 = v137;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v114 = *v15;
              *uint64_t v14 = *v15;
              id v115 = v114;
              goto LABEL_61;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v113 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v14, v15, v113);
LABEL_61:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v14, v15, *(void *)(v17 + 64));
              break;
          }
LABEL_56:
          uint64_t v7 = v137;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
          a3 = v131;
        }
LABEL_66:
        swift_storeEnumTagMultiPayload();
LABEL_67:
        *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
        uint64_t v31 = a2[2];
        a1[2] = v31;
        id v32 = v31;
        goto LABEL_66;
      case 6u:
        uint64_t v40 = *a2;
        *a1 = *a2;
        id v41 = v40;
        goto LABEL_66;
      case 7u:
        uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v34 + 48))(a2, 1, v33))
        {
          uint64_t v35 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v47 = *(int *)(v33 + 20);
          char v122 = (char *)a2 + v47;
          char v126 = (char *)a1 + v47;
          uint64_t v132 = a3;
          uint64_t v48 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v49 = v7;
          uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v51 = v48;
          a3 = v132;
          v50(v126, v122, v51);
          uint64_t v7 = v49;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v34 + 56))(a1, 0, 1, v33);
        }
        uint64_t v52 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v53 = (void **)((char *)a1 + v52);
        uint64_t v54 = (void **)((char *)a2 + v52);
        uint64_t v55 = v54[1];
        if (v55)
        {
          void *v53 = *v54;
          v53[1] = v55;
          uint64_t v56 = (void *)v54[2];
          v53[2] = v56;
          swift_bridgeObjectRetain();
          id v57 = v56;
        }
        else
        {
          *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
          v53[2] = v54[2];
        }
        goto LABEL_66;
      case 8u:
        uint64_t v42 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v43 = *(void *)(v42 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48))(a2, 1, v42))
        {
          uint64_t v44 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          uint64_t v58 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v58 - 8) + 16))(a1, a2, v58);
          *((unsigned char *)a1 + *(int *)(v42 + 20)) = *((unsigned char *)a2 + *(int *)(v42 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(a1, 0, 1, v42);
        }
        uint64_t v59 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v59 + 20)) = *(void **)((char *)a2 + *(int *)(v59 + 20));
        goto LABEL_66;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v36 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        goto LABEL_66;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_67;
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void **sub_1005351D0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787160);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v252 = v7;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v116 = *a2;
              *a1 = *a2;
              id v117 = v116;
              goto LABEL_62;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v115 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v115 - 8) + 16))(a1, a2, v115);
LABEL_62:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
              break;
          }
          unsigned __int8 v118 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v119 = v118[5];
          uint64_t v120 = (char *)a1 + v119;
          uint64_t v121 = (char *)a2 + v119;
          if (!*(void **)((char *)a2 + v119 + 8)) {
            goto LABEL_66;
          }
          v237 = v118;
          uint64_t v264 = a3;
          *(void *)uint64_t v120 = *(void *)v121;
          *((void *)v120 + 1) = *((void *)v121 + 1);
          char v122 = (void *)*((void *)v121 + 2);
          uint64_t v123 = *((void *)v121 + 3);
          uint64_t v125 = *((void *)v121 + 4);
          uint64_t v124 = *((void *)v121 + 5);
          uint64_t v126 = *((void *)v121 + 6);
          uint64_t v232 = *((void *)v121 + 7);
          unsigned __int8 __dste = v121[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v122, v123, v125, v124, v126, v232, __dste);
          *((void *)v120 + 2) = v122;
          *((void *)v120 + 3) = v123;
          *((void *)v120 + 4) = v125;
          *((void *)v120 + 5) = v124;
          *((void *)v120 + 6) = v126;
          *((void *)v120 + 7) = v232;
          v120[64] = __dste;
          v120[65] = v121[65];
          v120[66] = v121[66];
          v120[67] = v121[67];
          v120[68] = v121[68];
          int v127 = v121[120];
          if (v127 == 255)
          {
            long long v128 = *(_OWORD *)(v121 + 72);
            long long v129 = *(_OWORD *)(v121 + 88);
            long long v130 = *(_OWORD *)(v121 + 104);
            v120[120] = v121[120];
            *(_OWORD *)(v120 + 88) = v129;
            *(_OWORD *)(v120 + 104) = v130;
            *(_OWORD *)(v120 + 72) = v128;
          }
          else
          {
            char __dstf = v127 & 1;
            uint64_t v137 = (void *)*((void *)v121 + 9);
            uint64_t v138 = *((void *)v121 + 10);
            uint64_t v139 = *((void *)v121 + 11);
            uint64_t v140 = *((void *)v121 + 12);
            uint64_t v141 = *((void *)v121 + 13);
            uint64_t v233 = *((void *)v121 + 14);
            sub_10003BED8(v137, v138, v139, v140, v141, v233, v127 & 1);
            *((void *)v120 + 9) = v137;
            *((void *)v120 + 10) = v138;
            *((void *)v120 + 11) = v139;
            *((void *)v120 + 12) = v140;
            *((void *)v120 + 13) = v141;
            *((void *)v120 + 14) = v233;
            v120[120] = __dstf;
          }
          a3 = v264;
          uint64_t v7 = v252;
          v120[121] = v121[121];
          unsigned __int8 v118 = v237;
          goto LABEL_69;
        case 1u:
          uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v252 = v7;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v146 = *a2;
              *a1 = *a2;
              id v147 = v146;
              goto LABEL_73;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v145 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v145 - 8) + 16))(a1, a2, v145);
LABEL_73:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
              break;
          }
          unsigned __int8 v118 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v148 = v118[5];
          uint64_t v120 = (char *)a1 + v148;
          uint64_t v121 = (char *)a2 + v148;
          if (*(void **)((char *)a2 + v148 + 8))
          {
            v238 = v118;
            uint64_t v265 = a3;
            *(void *)uint64_t v120 = *(void *)v121;
            *((void *)v120 + 1) = *((void *)v121 + 1);
            uint64_t v149 = (void *)*((void *)v121 + 2);
            uint64_t v150 = *((void *)v121 + 3);
            uint64_t v152 = *((void *)v121 + 4);
            uint64_t v151 = *((void *)v121 + 5);
            uint64_t v153 = *((void *)v121 + 6);
            uint64_t v234 = *((void *)v121 + 7);
            unsigned __int8 __dstg = v121[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v149, v150, v152, v151, v153, v234, __dstg);
            *((void *)v120 + 2) = v149;
            *((void *)v120 + 3) = v150;
            *((void *)v120 + 4) = v152;
            *((void *)v120 + 5) = v151;
            *((void *)v120 + 6) = v153;
            *((void *)v120 + 7) = v234;
            v120[64] = __dstg;
            v120[65] = v121[65];
            v120[66] = v121[66];
            v120[67] = v121[67];
            v120[68] = v121[68];
            int v154 = v121[120];
            if (v154 == 255)
            {
              long long v155 = *(_OWORD *)(v121 + 72);
              long long v156 = *(_OWORD *)(v121 + 88);
              long long v157 = *(_OWORD *)(v121 + 104);
              v120[120] = v121[120];
              *(_OWORD *)(v120 + 88) = v156;
              *(_OWORD *)(v120 + 104) = v157;
              *(_OWORD *)(v120 + 72) = v155;
            }
            else
            {
              char __dsth = v154 & 1;
              uint64_t v158 = (void *)*((void *)v121 + 9);
              uint64_t v159 = *((void *)v121 + 10);
              uint64_t v160 = *((void *)v121 + 11);
              uint64_t v161 = *((void *)v121 + 12);
              uint64_t v162 = *((void *)v121 + 13);
              uint64_t v235 = *((void *)v121 + 14);
              sub_10003BED8(v158, v159, v160, v161, v162, v235, v154 & 1);
              *((void *)v120 + 9) = v158;
              *((void *)v120 + 10) = v159;
              *((void *)v120 + 11) = v160;
              *((void *)v120 + 12) = v161;
              *((void *)v120 + 13) = v162;
              *((void *)v120 + 14) = v235;
              v120[120] = __dsth;
            }
            a3 = v265;
            uint64_t v7 = v252;
            v120[121] = v121[121];
            unsigned __int8 v118 = v238;
          }
          else
          {
LABEL_66:
            long long v131 = *(_OWORD *)v121;
            long long v132 = *((_OWORD *)v121 + 1);
            long long v133 = *((_OWORD *)v121 + 3);
            *((_OWORD *)v120 + 2) = *((_OWORD *)v121 + 2);
            *((_OWORD *)v120 + 3) = v133;
            *(_OWORD *)uint64_t v120 = v131;
            *((_OWORD *)v120 + 1) = v132;
            long long v134 = *((_OWORD *)v121 + 4);
            long long v135 = *((_OWORD *)v121 + 5);
            long long v136 = *((_OWORD *)v121 + 6);
            *(_OWORD *)(v120 + 106) = *(_OWORD *)(v121 + 106);
            *((_OWORD *)v120 + 5) = v135;
            *((_OWORD *)v120 + 6) = v136;
            *((_OWORD *)v120 + 4) = v134;
            uint64_t v7 = v252;
          }
LABEL_69:
          *((unsigned char *)a1 + v118[6]) = *((unsigned char *)a2 + v118[6]);
          *((unsigned char *)a1 + v118[7]) = *((unsigned char *)a2 + v118[7]);
          *((unsigned char *)a1 + v118[8]) = *((unsigned char *)a2 + v118[8]);
          *((unsigned char *)a1 + v118[9]) = *((unsigned char *)a2 + v118[9]);
          *((unsigned char *)a1 + v118[10]) = *((unsigned char *)a2 + v118[10]);
          uint64_t v142 = v118[11];
          uint64_t v143 = *(void **)((char *)a2 + v142);
          *(void **)((char *)a1 + v142) = v143;
          id v144 = v143;
          goto LABEL_116;
        case 2u:
          uint64_t v258 = a3;
          uint64_t v17 = *a2;
          *a1 = *a2;
          uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (void **)((char *)a1 + v18);
          id v19 = (void **)((char *)a2 + v18);
          uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v21 = *(void *)(v20 - 8);
          uint64_t v22 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v21 + 48);
          id v23 = v17;
          if (v22(v19, 1, v20)) {
            goto LABEL_15;
          }
          uint64_t v86 = v20;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v213 = *v19;
              id v212 = __dst;
              *__dst = *v19;
              id v214 = v213;
              goto LABEL_104;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v211 = type metadata accessor for Date();
              id v212 = __dst;
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v211 - 8) + 16))(__dst, v19, v211);
LABEL_104:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              id v212 = __dst;
              memcpy(__dst, v19, *(void *)(v21 + 64));
              break;
          }
          goto LABEL_115;
        case 3u:
          uint64_t v258 = a3;
          id v24 = *a2;
          *a1 = *a2;
          uint64_t v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (void **)((char *)a1 + v25);
          id v19 = (void **)((char *)a2 + v25);
          uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v21 = *(void *)(v26 - 8);
          uint64_t v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v21 + 48);
          id v28 = v24;
          if (v27(v19, 1, v26)) {
            goto LABEL_15;
          }
          uint64_t v86 = v26;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v216 = *v19;
              id v212 = __dst;
              *__dst = *v19;
              id v217 = v216;
              goto LABEL_109;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v215 = type metadata accessor for Date();
              id v212 = __dst;
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v215 - 8) + 16))(__dst, v19, v215);
LABEL_109:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              id v212 = __dst;
              memcpy(__dst, v19, *(void *)(v21 + 64));
              break;
          }
          goto LABEL_115;
        case 4u:
          uint64_t v258 = a3;
          uint64_t v30 = *a2;
          *a1 = *a2;
          uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (void **)((char *)a1 + v31);
          id v19 = (void **)((char *)a2 + v31);
          uint64_t v32 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v21 = *(void *)(v32 - 8);
          uint64_t v33 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v21 + 48);
          id v34 = v30;
          if (v33(v19, 1, v32))
          {
LABEL_15:
            uint64_t v29 = sub_10003B754(&qword_10078C890);
            memcpy(__dst, v19, *(void *)(*(void *)(v29 - 8) + 64));
            a3 = v258;
          }
          else
          {
            uint64_t v86 = v32;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v219 = *v19;
                id v212 = __dst;
                *__dst = *v19;
                id v220 = v219;
                goto LABEL_114;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v218 = type metadata accessor for Date();
                id v212 = __dst;
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v218 - 8) + 16))(__dst, v19, v218);
LABEL_114:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                id v212 = __dst;
                memcpy(__dst, v19, *(void *)(v21 + 64));
                break;
            }
LABEL_115:
            a3 = v258;
            (*(void (**)(void **, void, uint64_t, uint64_t))(v21 + 56))(v212, 0, 1, v86);
          }
LABEL_116:
          swift_storeEnumTagMultiPayload();
LABEL_117:
          *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
          break;
        case 5u:
          *a1 = *a2;
          *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
          *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
          *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
          uint64_t v35 = a2[2];
          a1[2] = v35;
          id v36 = v35;
          goto LABEL_116;
        case 6u:
          uint64_t v44 = *a2;
          *a1 = *a2;
          id v45 = v44;
          goto LABEL_116;
        case 7u:
          uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v38 = *(void *)(v37 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
          {
            uint64_t v39 = sub_10003B754(&qword_10078C518);
            memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            uint64_t v87 = *(int *)(v37 + 20);
            v236 = (char *)a2 + v87;
            __dstc = (char *)a1 + v87;
            uint64_t v262 = a3;
            uint64_t v88 = type metadata accessor for REMHashtagLabelSpecifier();
            v231 = *(void (**)(char *, char *, uint64_t))(*(void *)(v88 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v89 = v88;
            a3 = v262;
            v231(__dstc, v236, v89);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
          }
          uint64_t v90 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v91 = (void **)((char *)a1 + v90);
          uint64_t v92 = (void **)((char *)a2 + v90);
          if (v92[1])
          {
            void *v91 = *v92;
            v91[1] = v92[1];
            uint64_t v93 = (void *)v92[2];
            v91[2] = v93;
            swift_bridgeObjectRetain();
            id v94 = v93;
          }
          else
          {
            long long v95 = *(_OWORD *)v92;
            v91[2] = v92[2];
            *(_OWORD *)uint64_t v91 = v95;
          }
          goto LABEL_116;
        case 8u:
          uint64_t v46 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v47 = *(void *)(v46 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48))(a2, 1, v46))
          {
            uint64_t v48 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(a1, a2, *(void *)(*(void *)(v48 - 8) + 64));
          }
          else
          {
            uint64_t v101 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v101 - 8) + 16))(a1, a2, v101);
            *((unsigned char *)a1 + *(int *)(v46 + 20)) = *((unsigned char *)a2 + *(int *)(v46 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v47 + 56))(a1, 0, 1, v46);
          }
          uint64_t v102 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)a1 + *(int *)(v102 + 20)) = *(void **)((char *)a2 + *(int *)(v102 + 20));
          goto LABEL_116;
        case 9u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v40 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          id v41 = (char *)a1 + v40;
          uint64_t v42 = (char *)a2 + v40;
          uint64_t v43 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16))(v41, v42, v43);
          goto LABEL_116;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_117;
      }
      goto LABEL_138;
    }
LABEL_7:
    uint64_t v13 = sub_10003B754(&qword_100792060);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_138;
  }
  if (v10)
  {
    sub_10003B6F8((uint64_t)a1, &qword_100787160);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10053B6D4((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v164 = *a2;
            *a1 = *a2;
            id v165 = v164;
            goto LABEL_83;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v163 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v163 - 8) + 16))(a1, a2, v163);
LABEL_83:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        id v166 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v167 = v166[5];
        uint64_t v168 = (char *)a1 + v167;
        uint64_t v169 = (char *)a2 + v167;
        if (!*(void **)((char *)a2 + v167 + 8)) {
          goto LABEL_87;
        }
        __dsta = v166;
        uint64_t v266 = a3;
        *(void *)uint64_t v168 = *(void *)v169;
        *((void *)v168 + 1) = *((void *)v169 + 1);
        uint64_t v170 = (void *)*((void *)v169 + 2);
        uint64_t v171 = *((void *)v169 + 3);
        uint64_t v173 = *((void *)v169 + 4);
        uint64_t v172 = *((void *)v169 + 5);
        uint64_t v174 = *((void *)v169 + 7);
        uint64_t v254 = *((void *)v169 + 6);
        unsigned __int8 v239 = v169[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v170, v171, v173, v172, v254, v174, v239);
        *((void *)v168 + 2) = v170;
        *((void *)v168 + 3) = v171;
        *((void *)v168 + 4) = v173;
        *((void *)v168 + 5) = v172;
        *((void *)v168 + 6) = v254;
        *((void *)v168 + 7) = v174;
        v168[64] = v239;
        v168[65] = v169[65];
        v168[66] = v169[66];
        v168[67] = v169[67];
        v168[68] = v169[68];
        int v175 = v169[120];
        if (v175 == 255)
        {
          long long v176 = *(_OWORD *)(v169 + 72);
          long long v177 = *(_OWORD *)(v169 + 88);
          long long v178 = *(_OWORD *)(v169 + 104);
          v168[120] = v169[120];
          *(_OWORD *)(v168 + 88) = v177;
          *(_OWORD *)(v168 + 104) = v178;
          *(_OWORD *)(v168 + 72) = v176;
        }
        else
        {
          char v255 = v175 & 1;
          uint64_t v185 = (void *)*((void *)v169 + 9);
          uint64_t v186 = *((void *)v169 + 10);
          uint64_t v187 = *((void *)v169 + 11);
          uint64_t v188 = *((void *)v169 + 12);
          uint64_t v189 = *((void *)v169 + 13);
          uint64_t v240 = *((void *)v169 + 14);
          sub_10003BED8(v185, v186, v187, v188, v189, v240, v175 & 1);
          *((void *)v168 + 9) = v185;
          *((void *)v168 + 10) = v186;
          *((void *)v168 + 11) = v187;
          *((void *)v168 + 12) = v188;
          *((void *)v168 + 13) = v189;
          *((void *)v168 + 14) = v240;
          v168[120] = v255;
        }
        a3 = v266;
        v168[121] = v169[121];
        id v166 = __dsta;
        goto LABEL_90;
      case 1u:
        uint64_t v49 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v194 = *a2;
            *a1 = *a2;
            id v195 = v194;
            goto LABEL_94;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v193 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v193 - 8) + 16))(a1, a2, v193);
LABEL_94:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
            break;
        }
        id v166 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v196 = v166[5];
        uint64_t v168 = (char *)a1 + v196;
        uint64_t v169 = (char *)a2 + v196;
        if (*(void **)((char *)a2 + v196 + 8))
        {
          __dstb = v166;
          uint64_t v267 = a3;
          *(void *)uint64_t v168 = *(void *)v169;
          *((void *)v168 + 1) = *((void *)v169 + 1);
          uint64_t v197 = (void *)*((void *)v169 + 2);
          uint64_t v198 = *((void *)v169 + 3);
          uint64_t v199 = *((void *)v169 + 4);
          uint64_t v200 = *((void *)v169 + 5);
          uint64_t v201 = *((void *)v169 + 7);
          uint64_t v241 = *((void *)v169 + 6);
          unsigned __int8 v256 = v169[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v197, v198, v199, v200, v241, v201, v256);
          *((void *)v168 + 2) = v197;
          *((void *)v168 + 3) = v198;
          *((void *)v168 + 4) = v199;
          *((void *)v168 + 5) = v200;
          *((void *)v168 + 6) = v241;
          *((void *)v168 + 7) = v201;
          v168[64] = v256;
          v168[65] = v169[65];
          v168[66] = v169[66];
          v168[67] = v169[67];
          v168[68] = v169[68];
          int v202 = v169[120];
          if (v202 == 255)
          {
            long long v203 = *(_OWORD *)(v169 + 72);
            long long v204 = *(_OWORD *)(v169 + 88);
            long long v205 = *(_OWORD *)(v169 + 104);
            v168[120] = v169[120];
            *(_OWORD *)(v168 + 88) = v204;
            *(_OWORD *)(v168 + 104) = v205;
            *(_OWORD *)(v168 + 72) = v203;
          }
          else
          {
            char v257 = v202 & 1;
            uint64_t v206 = (void *)*((void *)v169 + 9);
            uint64_t v207 = *((void *)v169 + 10);
            uint64_t v208 = *((void *)v169 + 11);
            uint64_t v209 = *((void *)v169 + 12);
            uint64_t v210 = *((void *)v169 + 13);
            uint64_t v242 = *((void *)v169 + 14);
            sub_10003BED8(v206, v207, v208, v209, v210, v242, v202 & 1);
            *((void *)v168 + 9) = v206;
            *((void *)v168 + 10) = v207;
            *((void *)v168 + 11) = v208;
            *((void *)v168 + 12) = v209;
            *((void *)v168 + 13) = v210;
            *((void *)v168 + 14) = v242;
            v168[120] = v257;
          }
          a3 = v267;
          v168[121] = v169[121];
          id v166 = __dstb;
        }
        else
        {
LABEL_87:
          long long v179 = *(_OWORD *)v169;
          long long v180 = *((_OWORD *)v169 + 1);
          long long v181 = *((_OWORD *)v169 + 3);
          *((_OWORD *)v168 + 2) = *((_OWORD *)v169 + 2);
          *((_OWORD *)v168 + 3) = v181;
          *(_OWORD *)uint64_t v168 = v179;
          *((_OWORD *)v168 + 1) = v180;
          long long v182 = *((_OWORD *)v169 + 4);
          long long v183 = *((_OWORD *)v169 + 5);
          long long v184 = *((_OWORD *)v169 + 6);
          *(_OWORD *)(v168 + 106) = *(_OWORD *)(v169 + 106);
          *((_OWORD *)v168 + 5) = v183;
          *((_OWORD *)v168 + 6) = v184;
          *((_OWORD *)v168 + 4) = v182;
        }
LABEL_90:
        *((unsigned char *)a1 + v166[6]) = *((unsigned char *)a2 + v166[6]);
        *((unsigned char *)a1 + v166[7]) = *((unsigned char *)a2 + v166[7]);
        *((unsigned char *)a1 + v166[8]) = *((unsigned char *)a2 + v166[8]);
        *((unsigned char *)a1 + v166[9]) = *((unsigned char *)a2 + v166[9]);
        *((unsigned char *)a1 + v166[10]) = *((unsigned char *)a2 + v166[10]);
        uint64_t v190 = v166[11];
        uint64_t v191 = *(void **)((char *)a2 + v190);
        *(void **)((char *)a1 + v190) = v191;
        id v192 = v191;
        goto LABEL_136;
      case 2u:
        uint64_t v259 = a3;
        uint64_t v50 = *a2;
        *a1 = *a2;
        uint64_t v51 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v52 = (void **)((char *)a1 + v51);
        uint64_t v53 = (void **)((char *)a2 + v51);
        uint64_t v54 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v55 = *(void *)(v54 - 8);
        uint64_t v56 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v55 + 48);
        id v57 = v50;
        if (v56(v53, 1, v54))
        {
          uint64_t v58 = sub_10003B754(&qword_10078C890);
          memcpy(v52, v53, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              long long v222 = *v53;
              *uint64_t v52 = *v53;
              id v223 = v222;
              goto LABEL_121;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v221 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v221 - 8) + 16))(v52, v53, v221);
LABEL_121:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v52, v53, *(void *)(v55 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        a3 = v259;
        goto LABEL_136;
      case 3u:
        uint64_t v260 = a3;
        uint64_t v59 = *a2;
        *a1 = *a2;
        uint64_t v60 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v61 = (void **)((char *)a1 + v60);
        id v62 = (void **)((char *)a2 + v60);
        uint64_t v63 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v64 = *(void *)(v63 - 8);
        long long v65 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48);
        id v66 = v59;
        if (v65(v62, 1, v63))
        {
          uint64_t v67 = sub_10003B754(&qword_10078C890);
          memcpy(v61, v62, *(void *)(*(void *)(v67 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v225 = *v62;
              void *v61 = *v62;
              id v226 = v225;
              goto LABEL_127;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v224 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v224 - 8) + 16))(v61, v62, v224);
LABEL_127:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v61, v62, *(void *)(v64 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v64 + 56))(v61, 0, 1, v63);
        }
        a3 = v260;
        goto LABEL_136;
      case 4u:
        uint64_t v261 = a3;
        long long v68 = *a2;
        *a1 = *a2;
        uint64_t v69 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v70 = (void **)((char *)a1 + v69);
        uint64_t v71 = (void **)((char *)a2 + v69);
        uint64_t v72 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v73 = *(void *)(v72 - 8);
        long long v74 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v73 + 48);
        id v75 = v68;
        if (v74(v71, 1, v72))
        {
          uint64_t v76 = sub_10003B754(&qword_10078C890);
          memcpy(v70, v71, *(void *)(*(void *)(v76 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v228 = *v71;
              void *v70 = *v71;
              id v229 = v228;
              goto LABEL_133;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v227 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v227 - 8) + 16))(v70, v71, v227);
LABEL_133:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v70, v71, *(void *)(v73 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v73 + 56))(v70, 0, 1, v72);
        }
        a3 = v261;
        goto LABEL_136;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        long long v77 = a2[2];
        a1[2] = v77;
        id v78 = v77;
        goto LABEL_136;
      case 6u:
        uint64_t v96 = *a2;
        *a1 = *a2;
        id v97 = v96;
        goto LABEL_136;
      case 7u:
        uint64_t v79 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v80 = *(void *)(v79 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v80 + 48))(a2, 1, v79))
        {
          uint64_t v81 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v81 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v103 = *(int *)(v79 + 20);
          v253 = (char *)a1 + v103;
          uint64_t v263 = a3;
          uint64_t v104 = (char *)a2 + v103;
          uint64_t v105 = type metadata accessor for REMHashtagLabelSpecifier();
          char __dstd = *(void (**)(char *, char *, uint64_t))(*(void *)(v105 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v106 = v104;
          a3 = v263;
          __dstd(v253, v106, v105);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v80 + 56))(a1, 0, 1, v79);
        }
        uint64_t v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v108 = (void **)((char *)a1 + v107);
        id v109 = (void **)((char *)a2 + v107);
        if (v109[1])
        {
          void *v108 = *v109;
          v108[1] = v109[1];
          uint64_t v110 = (void *)v109[2];
          v108[2] = v110;
          swift_bridgeObjectRetain();
          id v111 = v110;
        }
        else
        {
          long long v112 = *(_OWORD *)v109;
          v108[2] = v109[2];
          *(_OWORD *)uint64_t v108 = v112;
        }
        goto LABEL_136;
      case 8u:
        uint64_t v98 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v99 = *(void *)(v98 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v99 + 48))(a2, 1, v98))
        {
          uint64_t v100 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v100 - 8) + 64));
        }
        else
        {
          uint64_t v113 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(a1, a2, v113);
          *((unsigned char *)a1 + *(int *)(v98 + 20)) = *((unsigned char *)a2 + *(int *)(v98 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v99 + 56))(a1, 0, 1, v98);
        }
        uint64_t v114 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v114 + 20)) = *(void **)((char *)a2 + *(int *)(v114 + 20));
        goto LABEL_136;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v82 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v83 = (char *)a1 + v82;
        uint64_t v84 = (char *)a2 + v82;
        uint64_t v85 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v85 - 8) + 16))(v83, v84, v85);
LABEL_136:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
LABEL_138:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100537F78(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787160);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_10003B754(&qword_100792060);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v40 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v40 - 8) + 32))(a1, a2, v40);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        goto LABEL_28;
      case 1u:
        uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v49 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 32))(a1, a2, v49);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
            break;
        }
LABEL_28:
        id v41 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v42 = v41[5];
        uint64_t v43 = (_OWORD *)((char *)a1 + v42);
        uint64_t v44 = (_OWORD *)((char *)a2 + v42);
        long long v45 = v44[3];
        v43[2] = v44[2];
        v43[3] = v45;
        long long v46 = v44[1];
        *uint64_t v43 = *v44;
        v43[1] = v46;
        *(_OWORD *)((char *)v43 + 106) = *(_OWORD *)((char *)v44 + 106);
        long long v47 = v44[6];
        long long v48 = v44[4];
        v43[5] = v44[5];
        v43[6] = v47;
        v43[4] = v48;
        *((unsigned char *)a1 + v41[6]) = *((unsigned char *)a2 + v41[6]);
        *((unsigned char *)a1 + v41[7]) = *((unsigned char *)a2 + v41[7]);
        *((unsigned char *)a1 + v41[8]) = *((unsigned char *)a2 + v41[8]);
        *((unsigned char *)a1 + v41[9]) = *((unsigned char *)a2 + v41[9]);
        *((unsigned char *)a1 + v41[10]) = *((unsigned char *)a2 + v41[10]);
        *(void *)((char *)a1 + v41[11]) = *(void *)((char *)a2 + v41[11]);
        goto LABEL_40;
      case 2u:
        *a1 = *a2;
        uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (char *)a1 + v12;
        uint64_t v14 = (char *)a2 + v12;
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
          goto LABEL_9;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v50 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v13, v14, v50);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_39;
      case 3u:
        *a1 = *a2;
        uint64_t v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (char *)a1 + v17;
        uint64_t v14 = (char *)a2 + v17;
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
          goto LABEL_9;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v51 - 8) + 32))(v13, v14, v51);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_39;
      case 4u:
        *a1 = *a2;
        uint64_t v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (char *)a1 + v19;
        uint64_t v14 = (char *)a2 + v19;
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
        {
LABEL_9:
          uint64_t v18 = sub_10003B754(&qword_10078C890);
          memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v30 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v13, v14, v30);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v13, v14, *(void *)(v16 + 64));
              break;
          }
LABEL_39:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
LABEL_40:
        swift_storeEnumTagMultiPayload();
LABEL_41:
        *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
        break;
      case 7u:
        uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v31 = *(int *)(v20 + 20);
          uint64_t v32 = (char *)a1 + v31;
          uint64_t v33 = (char *)a2 + v31;
          uint64_t v34 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        id v36 = (char *)a1 + v35;
        uint64_t v37 = (char *)a2 + v35;
        *(_OWORD *)id v36 = *(_OWORD *)v37;
        *((void *)v36 + 2) = *((void *)v37 + 2);
        goto LABEL_40;
      case 8u:
        uint64_t v23 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v24 = *(void *)(v23 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v24 + 48))(a2, 1, v23))
        {
          uint64_t v25 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          uint64_t v38 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v38 - 8) + 32))(a1, a2, v38);
          *((unsigned char *)a1 + *(int *)(v23 + 20)) = *((unsigned char *)a2 + *(int *)(v23 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v24 + 56))(a1, 0, 1, v23);
        }
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v39 + 20)) = *(void *)((char *)a2 + *(int *)(v39 + 20));
        goto LABEL_40;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v26 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v27 = (char *)a1 + v26;
        id v28 = (char *)a2 + v26;
        uint64_t v29 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
        goto LABEL_40;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_41;
    }
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100539148(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787160);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v63 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v63 - 8) + 32))(a1, a2, v63);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
              break;
          }
          goto LABEL_46;
        case 1u:
          uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v72 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v72 - 8) + 32))(a1, a2, v72);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
              break;
          }
LABEL_46:
          uint64_t v64 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v65 = v64[5];
          id v66 = (_OWORD *)((char *)a1 + v65);
          uint64_t v67 = (_OWORD *)((char *)a2 + v65);
          long long v68 = v67[3];
          v66[2] = v67[2];
          long long v66[3] = v68;
          long long v69 = v67[1];
          *id v66 = *v67;
          v66[1] = v69;
          *(_OWORD *)((char *)v66 + 106) = *(_OWORD *)((char *)v67 + 106);
          long long v70 = v67[6];
          long long v71 = v67[4];
          v66[5] = v67[5];
          v66[6] = v70;
          v66[4] = v71;
          *((unsigned char *)a1 + v64[6]) = *((unsigned char *)a2 + v64[6]);
          *((unsigned char *)a1 + v64[7]) = *((unsigned char *)a2 + v64[7]);
          *((unsigned char *)a1 + v64[8]) = *((unsigned char *)a2 + v64[8]);
          *((unsigned char *)a1 + v64[9]) = *((unsigned char *)a2 + v64[9]);
          *((unsigned char *)a1 + v64[10]) = *((unsigned char *)a2 + v64[10]);
          *(void *)((char *)a1 + v64[11]) = *(void *)((char *)a2 + v64[11]);
          goto LABEL_72;
        case 2u:
          *a1 = *a2;
          uint64_t v17 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v18 = (char *)a1 + v17;
          uint64_t v19 = (char *)a2 + v17;
          uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
            goto LABEL_15;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v92 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v92 - 8) + 32))(v18, v19, v92);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v18, v19, *(void *)(v21 + 64));
              break;
          }
          goto LABEL_71;
        case 3u:
          *a1 = *a2;
          uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v18 = (char *)a1 + v22;
          uint64_t v19 = (char *)a2 + v22;
          uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20)) {
            goto LABEL_15;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v93 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v93 - 8) + 32))(v18, v19, v93);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v18, v19, *(void *)(v21 + 64));
              break;
          }
          goto LABEL_71;
        case 4u:
          *a1 = *a2;
          uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          uint64_t v18 = (char *)a1 + v24;
          uint64_t v19 = (char *)a2 + v24;
          uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
          {
LABEL_15:
            uint64_t v23 = sub_10003B754(&qword_10078C890);
            memcpy(v18, v19, *(void *)(*(void *)(v23 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v94 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 32))(v18, v19, v94);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v18, v19, *(void *)(v21 + 64));
                break;
            }
LABEL_71:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
          }
LABEL_72:
          swift_storeEnumTagMultiPayload();
LABEL_73:
          *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
          break;
        case 7u:
          uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v26 = *(void *)(v25 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v26 + 48))(a2, 1, v25))
          {
            uint64_t v27 = sub_10003B754(&qword_10078C518);
            memcpy(a1, a2, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            *a1 = *a2;
            uint64_t v54 = *(int *)(v25 + 20);
            uint64_t v55 = (char *)a1 + v54;
            uint64_t v56 = (char *)a2 + v54;
            uint64_t v57 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 32))(v55, v56, v57);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(a1, 0, 1, v25);
          }
          uint64_t v58 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v59 = (char *)a1 + v58;
          uint64_t v60 = (char *)a2 + v58;
          *(_OWORD *)uint64_t v59 = *(_OWORD *)v60;
          *((void *)v59 + 2) = *((void *)v60 + 2);
          goto LABEL_72;
        case 8u:
          uint64_t v28 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v29 = *(void *)(v28 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
          {
            uint64_t v30 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            uint64_t v61 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v61 - 8) + 32))(a1, a2, v61);
            *((unsigned char *)a1 + *(int *)(v28 + 20)) = *((unsigned char *)a2 + *(int *)(v28 + 20));
            (*(void (**)(void *, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
          }
          uint64_t v62 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void *)((char *)a1 + *(int *)(v62 + 20)) = *(void *)((char *)a2 + *(int *)(v62 + 20));
          goto LABEL_72;
        case 9u:
          *(unsigned char *)a1 = *(unsigned char *)a2;
          uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v32 = (char *)a1 + v31;
          uint64_t v33 = (char *)a2 + v31;
          uint64_t v34 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v32, v33, v34);
          goto LABEL_72;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          goto LABEL_73;
      }
      goto LABEL_85;
    }
LABEL_7:
    uint64_t v13 = sub_10003B754(&qword_100792060);
    memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    goto LABEL_85;
  }
  if (v10)
  {
    sub_10003B6F8((uint64_t)a1, &qword_100787160);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_10053B6D4((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v82 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v82 - 8) + 32))(a1, a2, v82);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
            break;
        }
        goto LABEL_59;
      case 1u:
        uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v91 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v91 - 8) + 32))(a1, a2, v91);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v35 - 8) + 64));
            break;
        }
LABEL_59:
        uint64_t v83 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v84 = v83[5];
        uint64_t v85 = (_OWORD *)((char *)a1 + v84);
        uint64_t v86 = (_OWORD *)((char *)a2 + v84);
        long long v87 = v86[3];
        v85[2] = v86[2];
        v85[3] = v87;
        long long v88 = v86[1];
        *uint64_t v85 = *v86;
        v85[1] = v88;
        *(_OWORD *)((char *)v85 + 106) = *(_OWORD *)((char *)v86 + 106);
        long long v89 = v86[6];
        long long v90 = v86[4];
        v85[5] = v86[5];
        v85[6] = v89;
        v85[4] = v90;
        *((unsigned char *)a1 + v83[6]) = *((unsigned char *)a2 + v83[6]);
        *((unsigned char *)a1 + v83[7]) = *((unsigned char *)a2 + v83[7]);
        *((unsigned char *)a1 + v83[8]) = *((unsigned char *)a2 + v83[8]);
        *((unsigned char *)a1 + v83[9]) = *((unsigned char *)a2 + v83[9]);
        *((unsigned char *)a1 + v83[10]) = *((unsigned char *)a2 + v83[10]);
        *(void *)((char *)a1 + v83[11]) = *(void *)((char *)a2 + v83[11]);
        goto LABEL_83;
      case 2u:
        *a1 = *a2;
        uint64_t v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v37 = (char *)a1 + v36;
        uint64_t v38 = (char *)a2 + v36;
        uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
          goto LABEL_28;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v95 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 32))(v37, v38, v95);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v37, v38, *(void *)(v40 + 64));
            break;
        }
        goto LABEL_82;
      case 3u:
        *a1 = *a2;
        uint64_t v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v37 = (char *)a1 + v41;
        uint64_t v38 = (char *)a2 + v41;
        uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39)) {
          goto LABEL_28;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v96 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v96 - 8) + 32))(v37, v38, v96);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v37, v38, *(void *)(v40 + 64));
            break;
        }
        goto LABEL_82;
      case 4u:
        *a1 = *a2;
        uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v37 = (char *)a1 + v43;
        uint64_t v38 = (char *)a2 + v43;
        uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
LABEL_28:
          uint64_t v42 = sub_10003B754(&qword_10078C890);
          memcpy(v37, v38, *(void *)(*(void *)(v42 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v97 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 32))(v37, v38, v97);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v37, v38, *(void *)(v40 + 64));
              break;
          }
LABEL_82:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
LABEL_83:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v45 = *(void *)(v44 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v45 + 48))(a2, 1, v44))
        {
          uint64_t v46 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v73 = *(int *)(v44 + 20);
          long long v74 = (char *)a1 + v73;
          id v75 = (char *)a2 + v73;
          uint64_t v76 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v45 + 56))(a1, 0, 1, v44);
        }
        uint64_t v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        id v78 = (char *)a1 + v77;
        uint64_t v79 = (char *)a2 + v77;
        *(_OWORD *)id v78 = *(_OWORD *)v79;
        *((void *)v78 + 2) = *((void *)v79 + 2);
        goto LABEL_83;
      case 8u:
        uint64_t v47 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v48 = *(void *)(v47 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v48 + 48))(a2, 1, v47))
        {
          uint64_t v49 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v80 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v80 - 8) + 32))(a1, a2, v80);
          *((unsigned char *)a1 + *(int *)(v47 + 20)) = *((unsigned char *)a2 + *(int *)(v47 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(a1, 0, 1, v47);
        }
        uint64_t v81 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v81 + 20)) = *(void *)((char *)a2 + *(int *)(v81 + 20));
        goto LABEL_83;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v50 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v51 = (char *)a1 + v50;
        uint64_t v52 = (char *)a2 + v50;
        uint64_t v53 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 32))(v51, v52, v53);
        goto LABEL_83;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + *(int *)(v6 + 48)) = *((unsigned char *)a2 + *(int *)(v6 + 48));
LABEL_85:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_10053B408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10053B41C);
}

uint64_t sub_10053B41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100792060);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10053B4F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10053B504);
}

uint64_t sub_10053B504(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_10003B754(&qword_100792060);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_10053B5C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10053B5E4(a1, a2, a3, (uint64_t (*)(uint64_t))sub_10053B678);
}

uint64_t sub_10053B5E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_10053B678()
{
  if (!qword_1007A44F8)
  {
    sub_100039710(&qword_100787160);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007A44F8);
    }
  }
}

uint64_t sub_10053B6D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10053B734(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v69 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  uint64_t v3 = __chkstk_darwin(v69);
  uint64_t v79 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  id v78 = (char *)&v69 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v75 = (uint64_t)&v69 - v8;
  __chkstk_darwin(v7);
  uint64_t v76 = (uint64_t)&v69 - v9;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v70 = (uint64_t)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_10003B754(&qword_100799D98);
  __chkstk_darwin(v74);
  uint64_t v14 = (char *)&v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_100792060);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v72 = (uint64_t)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v71 = (uint64_t)&v69 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v69 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)&v69 - v23;
  uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v26 = __chkstk_darwin(v25 - 8);
  uint64_t v28 = (char *)&v69 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v30 = (char *)&v69 - v29;
  uint64_t v31 = sub_10003B754((uint64_t *)&unk_10078E360);
  uint64_t v32 = __chkstk_darwin(v31 - 8);
  uint64_t v73 = (uint64_t)&v69 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v69 - v35;
  __chkstk_darwin(v34);
  uint64_t v38 = (char *)&v69 - v37;
  uint64_t v77 = a1;
  sub_10003B694(a1, (uint64_t)v24, &qword_100792060);
  uint64_t v39 = sub_10003B754(&qword_100787160);
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48);
  uint64_t v80 = v40 + 48;
  uint64_t v81 = v41;
  if (v41(v24, 1, v39) == 1)
  {
    sub_10003B6F8((uint64_t)v24, &qword_100792060);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v42(v38, 1, 1, v10);
  }
  else
  {
    sub_10053C30C((uint64_t)v24, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_10053B6D4((uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
    v42(v38, 0, 1, v10);
  }
  sub_10003B694(v82, (uint64_t)v22, &qword_100792060);
  if (v81(v22, 1, v39) == 1)
  {
    sub_10003B6F8((uint64_t)v22, &qword_100792060);
    uint64_t v43 = 1;
  }
  else
  {
    sub_10053C30C((uint64_t)v22, (uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_10053B6D4((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v43 = 0;
  }
  v42(v36, v43, 1, v10);
  uint64_t v44 = (uint64_t)&v14[*(int *)(v74 + 48)];
  sub_10003B694((uint64_t)v38, (uint64_t)v14, (uint64_t *)&unk_10078E360);
  sub_10003B694((uint64_t)v36, v44, (uint64_t *)&unk_10078E360);
  uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v45((uint64_t)v14, 1, v10) == 1)
  {
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_10078E360);
    sub_10003B6F8((uint64_t)v38, (uint64_t *)&unk_10078E360);
    int v46 = v45(v44, 1, v10);
    uint64_t v47 = (uint64_t)v78;
    uint64_t v48 = v76;
    if (v46 == 1)
    {
      sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10078E360);
      uint64_t v49 = v77;
      sub_10053C374(v77, v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      uint64_t v50 = v75;
      sub_10053C374(v82, v75, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
      goto LABEL_14;
    }
LABEL_12:
    sub_10003B6F8((uint64_t)v14, &qword_100799D98);
    uint64_t v49 = v77;
    sub_10053C374(v77, v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    uint64_t v50 = v75;
    sub_10053C374(v82, v75, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    goto LABEL_24;
  }
  uint64_t v51 = v73;
  sub_10003B694((uint64_t)v14, v73, (uint64_t *)&unk_10078E360);
  if (v45(v44, 1, v10) == 1)
  {
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_10078E360);
    sub_10003B6F8((uint64_t)v38, (uint64_t *)&unk_10078E360);
    sub_10053B6D4(v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v47 = (uint64_t)v78;
    uint64_t v48 = v76;
    goto LABEL_12;
  }
  uint64_t v52 = v51;
  uint64_t v53 = v70;
  sub_10053C30C(v44, v70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  char v54 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
  sub_10053B6D4(v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_10078E360);
  sub_10003B6F8((uint64_t)v38, (uint64_t *)&unk_10078E360);
  sub_10053B6D4(v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10078E360);
  uint64_t v48 = v76;
  uint64_t v49 = v77;
  sub_10053C374(v77, v76, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  uint64_t v50 = v75;
  sub_10053C374(v82, v75, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  uint64_t v47 = (uint64_t)v78;
  if ((v54 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_14:
  uint64_t v55 = v71;
  sub_10003B694(v48, v71, &qword_100792060);
  if (v81((char *)v55, 1, v39) == 1)
  {
    sub_10003B6F8(v55, &qword_100792060);
    int v56 = 3;
  }
  else
  {
    int v56 = *(unsigned __int8 *)(v55 + *(int *)(v39 + 48));
    sub_10053B6D4(v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  uint64_t v57 = v72;
  sub_10003B694(v50, v72, &qword_100792060);
  if (v81((char *)v57, 1, v39) == 1)
  {
    sub_10003B6F8(v57, &qword_100792060);
    if (v56 == 3)
    {
      int v58 = 3;
      goto LABEL_21;
    }
    goto LABEL_24;
  }
  int v58 = *(unsigned __int8 *)(v57 + *(int *)(v39 + 48));
  sub_10053B6D4(v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (v56 == 3)
  {
LABEL_21:
    uint64_t v59 = (uint64_t)v79;
    sub_10053B6D4(v50, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10053B6D4(v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    if (v58 == 3) {
      goto LABEL_41;
    }
    goto LABEL_25;
  }
  if (v58 == 3)
  {
LABEL_24:
    sub_10053B6D4(v50, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10053B6D4(v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    uint64_t v59 = (uint64_t)v79;
LABEL_25:
    sub_10053C374(v49, v47, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10053C374(v82, v59, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    goto LABEL_26;
  }
  uint64_t v62 = 0x656C746974;
  if (v56)
  {
    if (v56 == 1)
    {
      unint64_t v63 = 0xE500000000000000;
      uint64_t v64 = 0x7365746F6ELL;
    }
    else
    {
      unint64_t v63 = 0xE800000000000000;
      uint64_t v64 = 0x7367617468736168;
    }
  }
  else
  {
    unint64_t v63 = 0xE500000000000000;
    uint64_t v64 = 0x656C746974;
  }
  uint64_t v59 = (uint64_t)v79;
  if (v58)
  {
    if (v58 == 1)
    {
      unint64_t v65 = 0xE500000000000000;
      uint64_t v62 = 0x7365746F6ELL;
    }
    else
    {
      unint64_t v65 = 0xE800000000000000;
      uint64_t v62 = 0x7367617468736168;
    }
  }
  else
  {
    unint64_t v65 = 0xE500000000000000;
  }
  if (v64 == v62 && v63 == v65)
  {
    swift_bridgeObjectRelease_n();
    sub_10053B6D4(v50, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10053B6D4(v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
LABEL_41:
    sub_10053C374(v49, v47, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    sub_10053C374(v82, v59, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
LABEL_42:
    uint64_t v66 = v69;
    char v67 = *(unsigned char *)(v47 + *(int *)(v69 + 20));
    sub_10053B6D4(v47, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    LOBYTE(v66) = *(unsigned char *)(v59 + *(int *)(v66 + 20));
    sub_10053B6D4(v59, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
    char v60 = v67 ^ v66 ^ 1;
    return v60 & 1;
  }
  char v68 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10053B6D4(v50, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10053B6D4(v48, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10053C374(v49, v47, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10053C374(v82, v59, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  if (v68) {
    goto LABEL_42;
  }
LABEL_26:
  sub_10053B6D4(v59, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  sub_10053B6D4(v47, type metadata accessor for TTRReminderListEditingPresenter.EditingState);
  char v60 = 0;
  return v60 & 1;
}

uint64_t sub_10053C2A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRReminderListEditingPresenter.EditingState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053C30C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10053C374(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10053C3E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  sub_10053C374(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t result = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  *(void *)(a1 + *(int *)(result + 20)) = 0;
  return result;
}

uint64_t sub_10053C468()
{
  swift_release();
  sub_1000AAEE4(*(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));
  sub_1000AAEBC(*(id *)(v0 + 48), *(unsigned char *)(v0 + 56));

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_10053C4B8(uint64_t a1)
{
  return sub_10052A068(a1, *(void *)(v1 + 16));
}

uint64_t sub_10053C4D0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10053C508(uint64_t (*a1)(uint64_t *))
{
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = 0;
  return a1(&v3);
}

uint64_t sub_10053C54C()
{
  swift_release();
  sub_1000AAEE4(*(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_10053C590(uint64_t a1)
{
  return sub_100525B68(a1, *(void *)(v1 + 16));
}

id sub_10053C5A0(id result, void *a2, char a3)
{
  if (a3 && a3 != 2)
  {
    if (a3 != 1) {
      return result;
    }
    id v5 = result;
    id v4 = a2;
    uint64_t result = v5;
  }
  return result;
}

uint64_t sub_10053C5F4()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 528))(ObjectType, v1);
}

unint64_t sub_10053C640()
{
  unint64_t result = qword_10078AC90;
  if (!qword_10078AC90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078AC90);
  }
  return result;
}

uint64_t sub_10053C680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10053C7A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_10052ACE8(a1, a2, v6);
}

void *sub_10053C828(uint64_t a1, uint64_t (*a2)(uint64_t, void *))
{
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = 0;
  id v4 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v5 = *(void **)(a1 + 8 * v3 + 32);
    id v6 = v5;
    uint64_t v7 = a2(v3, v5);
    uint64_t v9 = v8;
    uint64_t v11 = v10;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v4 = sub_100571BF8(0, v4[2] + 1, 1, v4);
    }
    unint64_t v13 = v4[2];
    unint64_t v12 = v4[3];
    if (v13 >= v12 >> 1) {
      id v4 = sub_100571BF8((void *)(v12 > 1), v13 + 1, 1, v4);
    }
    ++v3;
    v4[2] = v13 + 1;
    uint64_t v14 = &v4[3 * v13];
    v14[4] = v7;
    v14[5] = v9;
    v14[6] = v11;
  }
  while (v16 != v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_10053C968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v47 = a2;
  uint64_t v48 = a3;
  id v49 = (id)type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v49);
  uint64_t v7 = (void **)((char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v11 - 8);
  uint64_t v50 = (uint64_t)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Logger();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856B8 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100018BF8(v13, (uint64_t)qword_1007A4218);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  long long v46 = xmmword_10066C6F0;
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 1835365481;
  *(void *)(inited + 40) = 0xE400000000000000;
  sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v19 = TTRTreeStorageItem.treeItemDescription.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v19;
  *(void *)(inited + 56) = v20;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v21 = *(void *)(v3 + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 96))(ObjectType, v21);
  if (result)
  {
    uint64_t v24 = result;
    if (!swift_unknownObjectWeakLoadStrong()) {
      return swift_unknownObjectRelease();
    }
    uint64_t v25 = *(void *)(v24 + 64);
    uint64_t v26 = swift_getObjectType();
    uint64_t v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32))(a1, v26, v25);
    char v29 = v28;
    LODWORD(v25) = ~v28;
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectRelease();
    if (!v25) {
      return result;
    }
    sub_10053C374(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = (uint64_t)v10;
      uint64_t v31 = v50;
      sub_10053C30C(v30, v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_10053C374(v31, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      if (swift_getEnumCaseMultiPayload() == 9)
      {
        uint64_t v45 = *v7;
        static TTRLocalizableStrings.UndoAction.addSectionWithNameFormat.getter();
        sub_10003B754((uint64_t *)&unk_100788EE0);
        uint64_t v32 = swift_allocObject();
        *(_OWORD *)(v32 + 16) = v46;
        *(void *)(v32 + 56) = &type metadata for String;
        *(void *)(v32 + 64) = sub_1000965C8();
        uint64_t v33 = v47;
        uint64_t v34 = v27;
        uint64_t v35 = v48;
        *(void *)(v32 + 32) = v47;
        *(void *)(v32 + 40) = v35;
        swift_bridgeObjectRetain();
        static String.localizedStringWithFormat(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v49 = self;
        *(void *)&long long v46 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v4;
        *(void *)(v36 + 24) = v33;
        *(void *)(v36 + 32) = v35;
        *(void *)(v36 + 40) = v34;
        *(unsigned char *)(v36 + 48) = v29;
        uint64_t v37 = v45;
        *(void *)(v36 + 56) = v45;
        uint64_t v38 = swift_allocObject();
        *(void *)(v38 + 16) = sub_10053F3E4;
        *(void *)(v38 + 24) = v36;
        aBlock[4] = sub_1000499FC;
        aBlock[5] = v38;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100021888;
        aBlock[3] = &unk_10074FAB0;
        uint64_t v39 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1000DFA7C(v34, v29);
        id v40 = v37;
        swift_retain();
        swift_release();
        uint64_t v41 = (void *)v46;
        [v49 withActionName:(void)v46 block:v39];
        _Block_release(v39);

        sub_100095434(v34, v29);
        sub_10053B6D4(v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        uint64_t result = swift_release();
        if ((v40 & 1) == 0) {
          return result;
        }
        __break(1u);
        return swift_unknownObjectRelease();
      }
      sub_10053B6D4(v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_100095434(v27, v29);
      uint64_t v42 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
      uint64_t v43 = (uint64_t)v7;
    }
    else
    {
      sub_100095434(v27, v29);
      uint64_t v42 = &type metadata accessor for TTRRemindersListViewModel.Item;
      uint64_t v43 = (uint64_t)v10;
    }
    return sub_10053B6D4(v43, (uint64_t (*)(void))v42);
  }
  return result;
}

uint64_t sub_10053D024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v53)(void **__return_ptr, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  void v66[2];
  uint64_t v67;
  uint64_t v68;
  long long v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;

  char v67 = a3;
  uint64_t v70 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v66 - v10;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v85 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v73 = a2;
  if (v13)
  {
    uint64_t v72 = v9;
    char v68 = v8;
    uint64_t v14 = *(void *)(a2 + 32);
    uint64_t v15 = *(void *)(a2 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 464);
    uint64_t v80 = v15 + 464;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    id v78 = *(void *)(v5 + 72);
    uint64_t v75 = v15 + 248;
    v66[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = (char *)_swiftEmptyArrayStorage;
    *(void *)&long long v19 = 136315138;
    uint64_t v69 = v19;
    v66[1] = &type metadata for Any[8];
    uint64_t v76 = v15;
    uint64_t v77 = ObjectType;
    uint64_t v71 = v14;
    while (1)
    {
      sub_10053C374(v17, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = v79(v11, ObjectType, v15);
      swift_release();
      if (v21)
      {
        uint64_t v81 = (void *)_typeName(_:qualified:)();
        uint64_t v82 = v22;
        v23._countAndFlagsBits = 0x746964652DLL;
        v23._object = (void *)0xE500000000000000;
        String.append(_:)(v23);
        uint64_t v24 = sub_1003C2C40((uint64_t)v11, v81, v82);
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        if (v24)
        {
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_1005704D8(0, *((void *)v18 + 2) + 1, 1, v18);
          }
          unint64_t v28 = *((void *)v18 + 2);
          unint64_t v27 = *((void *)v18 + 3);
          if (v28 >= v27 >> 1) {
            uint64_t v18 = sub_1005704D8((char *)(v27 > 1), v28 + 1, 1, v18);
          }
          *((void *)v18 + 2) = v28 + 1;
          uint64_t v20 = &v18[16 * v28];
          *((void *)v20 + 4) = v24;
          *((void *)v20 + 5) = v26;
          swift_unknownObjectRelease();
          uint64_t v15 = v76;
        }
        else
        {
          if (qword_1007856B8 != -1) {
            swift_once();
          }
          uint64_t v31 = type metadata accessor for Logger();
          sub_100018BF8(v31, (uint64_t)qword_1007A4218);
          uint64_t v32 = v72;
          sub_10053C374((uint64_t)v11, v72, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v33 = Logger.logObject.getter();
          os_log_type_t v34 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v33, v34))
          {
            uint64_t v35 = swift_slowAlloc();
            uint64_t v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v35 = v69;
            sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v36 = TTRTreeStorageItem.treeItemDescription.getter();
            *(void *)(v35 + 4) = sub_1000385A8(v36, v37, (uint64_t *)&v81);
            swift_bridgeObjectRelease();
            sub_10053B6D4(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v33, v34, "Skip edit; failed to create editing session {item: %s}",
              (uint8_t *)v35,
              0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v15 = v76;
            swift_slowDealloc();
          }
          else
          {

            sub_10053B6D4(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
        }
      }
      else
      {
        char v29 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 248))(v11, ObjectType, v15);
        if (!v29)
        {
          uint64_t v74 = v18;
          if (qword_1007856B8 != -1) {
            swift_once();
          }
          uint64_t v38 = type metadata accessor for Logger();
          sub_100018BF8(v38, (uint64_t)qword_1007A4218);
          uint64_t v39 = v68;
          sub_10053C374((uint64_t)v11, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          id v40 = Logger.logObject.getter();
          os_log_type_t v41 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v40, v41))
          {
            uint64_t v42 = swift_slowAlloc();
            uint64_t v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v42 = v69;
            sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v43 = TTRTreeStorageItem.treeItemDescription.getter();
            *(void *)(v42 + 4) = sub_1000385A8(v43, v44, (uint64_t *)&v81);
            swift_bridgeObjectRelease();
            sub_10053B6D4(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "Skip edit; failed to get REMReminder {item: %s}",
              (uint8_t *)v42,
              0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v15 = v76;
            swift_slowDealloc();
          }
          else
          {

            sub_10053B6D4(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10053B6D4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v18 = v74;
          goto LABEL_5;
        }
        id v30 = v29;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      sub_10053B6D4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
      uint64_t ObjectType = v77;
      v17 += v78;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        unint64_t v12 = v85;
        goto LABEL_29;
      }
    }
  }
  uint64_t v18 = (char *)_swiftEmptyArrayStorage;
LABEL_29:
  uint64_t v45 = *((void *)v18 + 2);
  if (!(v12 >> 62))
  {
    uint64_t v46 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v47 = v45 + v46;
    if (!__OFADD__(v45, v46)) {
      goto LABEL_31;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    int v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  unint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v47 = v45 + v65;
  if (__OFADD__(v45, v65)) {
    goto LABEL_46;
  }
LABEL_31:
  if (v47 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v80 = v47;
  uint64_t v48 = *((void *)v18 + 2);
  uint64_t v49 = v67;
  if (v48)
  {
    uint64_t v50 = (uint64_t *)(v18 + 40);
    do
    {
      uint64_t v51 = *v50;
      uint64_t v52 = swift_getObjectType();
      uint64_t v53 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v51 + 72);
      swift_unknownObjectRetain();
      v53(&v81, v52, v51);
      char v54 = v83;
      uint64_t v55 = v84;
      sub_100038D28(&v81, v83);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v55 + 120))(v49, 0, v54, v55);
      sub_100038CD8((uint64_t)&v81);
      int v56 = *(void *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor();
      uint64_t v57 = *(void *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
      if ((v57 & ~v56) == 0) {
        uint64_t v57 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 104))(v57 | v56, v52, v51);
      (*(void (**)(void, uint64_t, uint64_t))(v51 + 112))(0, v52, v51);
      swift_unknownObjectRelease();
      v50 += 2;
      --v48;
    }
    while (v48);
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = v85;
  if (v85 >> 62) {
    goto LABEL_47;
  }
  int v58 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_39:
  uint64_t v59 = v67;
  if (v58)
  {
    char v60 = *(void *)(v73 + 56);
    uint64_t v61 = swift_getObjectType();
    (*(void (**)(void **__return_ptr, unint64_t, uint64_t, uint64_t))(v60 + 48))(&v81, v12, v61, v60);
    swift_bridgeObjectRelease();
    uint64_t v62 = v83;
    unint64_t v63 = v84;
    sub_100038D28(&v81, v83);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v63 + 120))(v59, 0, v62, v63);
    sub_100038CD8((uint64_t)&v81);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v80;
}

uint64_t sub_10053D9D4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10053DA14()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 56);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v2 + 232))(*(void *)(v1 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem), ObjectType, v2);
}

uint64_t sub_10053DA74()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10053DA84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v53)(void **__return_ptr, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v65;
  void v66[2];
  uint64_t v67;
  uint64_t v68;
  long long v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t (*v79)(char *, uint64_t, uint64_t);
  uint64_t v80;
  void *v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;

  char v67 = a3;
  uint64_t v70 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v70 - 8);
  uint64_t v6 = __chkstk_darwin(v70);
  uint64_t v7 = __chkstk_darwin(v6);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v66 - v10;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v85 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  uint64_t v73 = a2;
  if (v13)
  {
    uint64_t v72 = v9;
    char v68 = v8;
    uint64_t v14 = *(void *)(a2 + 32);
    uint64_t v15 = *(void *)(a2 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 464);
    uint64_t v80 = v15 + 464;
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    id v78 = *(void *)(v5 + 72);
    uint64_t v75 = v15 + 248;
    v66[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v18 = (char *)_swiftEmptyArrayStorage;
    *(void *)&long long v19 = 136315138;
    uint64_t v69 = v19;
    v66[1] = &type metadata for Any[8];
    uint64_t v76 = v15;
    uint64_t v77 = ObjectType;
    uint64_t v71 = v14;
    while (1)
    {
      sub_10053C374(v17, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = v79(v11, ObjectType, v15);
      swift_release();
      if (v21)
      {
        uint64_t v81 = (void *)_typeName(_:qualified:)();
        uint64_t v82 = v22;
        v23._countAndFlagsBits = 0x746964652DLL;
        v23._object = (void *)0xE500000000000000;
        String.append(_:)(v23);
        uint64_t v24 = sub_1003C2C40((uint64_t)v11, v81, v82);
        uint64_t v26 = v25;
        swift_bridgeObjectRelease();
        if (v24)
        {
          swift_unknownObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_1005704D8(0, *((void *)v18 + 2) + 1, 1, v18);
          }
          unint64_t v28 = *((void *)v18 + 2);
          unint64_t v27 = *((void *)v18 + 3);
          if (v28 >= v27 >> 1) {
            uint64_t v18 = sub_1005704D8((char *)(v27 > 1), v28 + 1, 1, v18);
          }
          *((void *)v18 + 2) = v28 + 1;
          uint64_t v20 = &v18[16 * v28];
          *((void *)v20 + 4) = v24;
          *((void *)v20 + 5) = v26;
          swift_unknownObjectRelease();
          uint64_t v15 = v76;
        }
        else
        {
          if (qword_1007856B8 != -1) {
            swift_once();
          }
          uint64_t v31 = type metadata accessor for Logger();
          sub_100018BF8(v31, (uint64_t)qword_1007A4218);
          uint64_t v32 = v72;
          sub_10053C374((uint64_t)v11, v72, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v33 = Logger.logObject.getter();
          os_log_type_t v34 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v33, v34))
          {
            uint64_t v35 = swift_slowAlloc();
            uint64_t v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v35 = v69;
            sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v36 = TTRTreeStorageItem.treeItemDescription.getter();
            *(void *)(v35 + 4) = sub_1000385A8(v36, v37, (uint64_t *)&v81);
            swift_bridgeObjectRelease();
            sub_10053B6D4(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v33, v34, "Skip edit; failed to create editing session {item: %s}",
              (uint8_t *)v35,
              0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v15 = v76;
            swift_slowDealloc();
          }
          else
          {

            sub_10053B6D4(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
        }
      }
      else
      {
        char v29 = (void *)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 248))(v11, ObjectType, v15);
        if (!v29)
        {
          uint64_t v74 = v18;
          if (qword_1007856B8 != -1) {
            swift_once();
          }
          uint64_t v38 = type metadata accessor for Logger();
          sub_100018BF8(v38, (uint64_t)qword_1007A4218);
          uint64_t v39 = v68;
          sub_10053C374((uint64_t)v11, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          id v40 = Logger.logObject.getter();
          os_log_type_t v41 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v40, v41))
          {
            uint64_t v42 = swift_slowAlloc();
            uint64_t v81 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v42 = v69;
            sub_10053C680((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v43 = TTRTreeStorageItem.treeItemDescription.getter();
            *(void *)(v42 + 4) = sub_1000385A8(v43, v44, (uint64_t *)&v81);
            swift_bridgeObjectRelease();
            sub_10053B6D4(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            _os_log_impl((void *)&_mh_execute_header, v40, v41, "Skip edit; failed to get REMReminder {item: %s}",
              (uint8_t *)v42,
              0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v15 = v76;
            swift_slowDealloc();
          }
          else
          {

            sub_10053B6D4(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          sub_10053B6D4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v18 = v74;
          goto LABEL_5;
        }
        id v30 = v29;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      sub_10053B6D4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_5:
      uint64_t ObjectType = v77;
      v17 += v78;
      if (!--v13)
      {
        swift_bridgeObjectRelease();
        unint64_t v12 = v85;
        goto LABEL_29;
      }
    }
  }
  uint64_t v18 = (char *)_swiftEmptyArrayStorage;
LABEL_29:
  uint64_t v45 = *((void *)v18 + 2);
  if (!(v12 >> 62))
  {
    uint64_t v46 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v47 = v45 + v46;
    if (!__OFADD__(v45, v46)) {
      goto LABEL_31;
    }
LABEL_46:
    __break(1u);
LABEL_47:
    swift_bridgeObjectRetain();
    int v58 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  unint64_t v65 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v47 = v45 + v65;
  if (__OFADD__(v45, v65)) {
    goto LABEL_46;
  }
LABEL_31:
  if (v47 < 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v80 = v47;
  uint64_t v48 = *((void *)v18 + 2);
  uint64_t v49 = v67;
  if (v48)
  {
    uint64_t v50 = (uint64_t *)(v18 + 40);
    do
    {
      uint64_t v51 = *v50;
      uint64_t v52 = swift_getObjectType();
      uint64_t v53 = *(void (**)(void **__return_ptr, uint64_t, uint64_t))(v51 + 72);
      swift_unknownObjectRetain();
      v53(&v81, v52, v51);
      char v54 = v83;
      uint64_t v55 = v84;
      sub_100038D28(&v81, v83);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 160))(v49, v54, v55);
      sub_100038CD8((uint64_t)&v81);
      int v56 = *(void *)TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor();
      uint64_t v57 = *(void *)TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
      if ((v57 & ~v56) == 0) {
        uint64_t v57 = 0;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 104))(v57 | v56, v52, v51);
      (*(void (**)(void, uint64_t, uint64_t))(v51 + 112))(0, v52, v51);
      swift_unknownObjectRelease();
      v50 += 2;
      --v48;
    }
    while (v48);
  }
  swift_bridgeObjectRelease();
  unint64_t v12 = v85;
  if (v85 >> 62) {
    goto LABEL_47;
  }
  int v58 = *(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_39:
  uint64_t v59 = v67;
  if (v58)
  {
    char v60 = *(void *)(v73 + 56);
    uint64_t v61 = swift_getObjectType();
    (*(void (**)(void **__return_ptr, unint64_t, uint64_t, uint64_t))(v60 + 48))(&v81, v12, v61, v60);
    swift_bridgeObjectRelease();
    uint64_t v62 = v83;
    unint64_t v63 = v84;
    sub_100038D28(&v81, v83);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v63 + 160))(v59, v62, v63);
    sub_100038CD8((uint64_t)&v81);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v80;
}

void *sub_10053E42C(uint64_t a1, uint64_t a2, void *a3, unsigned int a4, int a5)
{
  uint64_t v6 = v5;
  LODWORD(v121) = a5;
  unsigned int v120 = a4;
  uint64_t v122 = a2;
  uint64_t v123 = *v5;
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v113 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v112 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_10003B754(&qword_1007A1528);
  uint64_t v15 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v17 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v117 = (char *)&v98 - v19;
  uint64_t v119 = (void (**)(void, void, void))type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v118 = (uint64_t)*(v119 - 1);
  __chkstk_darwin(v119);
  uint64_t v116 = (char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v115 = (char *)&v98 - v22;
  uint64_t v23 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a1;
  uint64_t v28 = *(void *)(a1 + 16);
  char v29 = _swiftEmptyArrayStorage;
  if (v28)
  {
    id v109 = v24;
    uint64_t v110 = v28;
    uint64_t v104 = v14;
    uint64_t v106 = v15;
    uint64_t v103 = v12;
    uint64_t v107 = v17;
    uint64_t v105 = v11;
    uint64_t v30 = v6[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v32 = (void *)(*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v30 + 352))(v122, a3, ObjectType, v30);
    unint64_t v35 = (unint64_t)v33;
    uint64_t v114 = v33;
    switch((char)v34)
    {
      case 1:
        uint64_t v99 = ObjectType;
        uint64_t v108 = v34;
        uint64_t v36 = v6;
        uint64_t v102 = a3;
        unint64_t v37 = v32;
        LODWORD(v101) = 0;
        unint64_t v38 = v33;
        goto LABEL_6;
      case 2:
        uint64_t v99 = ObjectType;
        uint64_t v108 = v34;
        uint64_t v36 = v6;
        uint64_t v102 = a3;
        unint64_t v37 = v32;
        id v39 = v33;
        LODWORD(v101) = 1;
        unint64_t v38 = v35;
LABEL_6:
        id v40 = v37;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = v27;
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = v36;
        *(void *)(v42 + 24) = sub_10053F150;
        *(void *)(v42 + 32) = v41;
        *(void *)(v42 + 40) = v37;
        *(void *)(v42 + 48) = v38;
        *(unsigned char *)(v42 + 56) = v101;
        uint64_t v43 = v102;
        *(void *)(v42 + 64) = v102;
        *(unsigned char *)(v42 + 72) = 3;
        sub_10053C374(v122, (uint64_t)v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_storeEnumTagMultiPayload();
        uint64_t v122 = v30 + 408;
        unint64_t v44 = *(uint64_t (**)(char *, uint64_t, void, uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v30 + 408);
        id v45 = v43;
        id v109 = v37;
        sub_1000652AC(v37, v114, v108);
        id v100 = v45;
        swift_bridgeObjectRetain();
        uint64_t v98 = v36;
        swift_retain();
        uint64_t v101 = v41;
        swift_retain();
        uint64_t v46 = v110;
        uint64_t v110 = v42;
        uint64_t v47 = v99;
        uint64_t v48 = v44(v26, v46, v120 & 1, v121 & 1, sub_10053F1B0, v42, v99, v30);
        sub_10053B6D4((uint64_t)v26, type metadata accessor for TTRRemindersListReminderCreationLocation);
        uint64_t v49 = v115;
        (*(void (**)(uint64_t, uint64_t))(v30 + 600))(v47, v30);
        uint64_t v50 = v118;
        uint64_t v51 = v116;
        uint64_t v52 = v119;
        (*(void (**)(char *, void, void))(v118 + 104))(v116, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v119);
        LOBYTE(v45) = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
        uint64_t v53 = *(void (**)(void, void))(v50 + 8);
        v53(v51, v52);
        v53(v49, v52);
        if (v45)
        {
          (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v30 + 632))(v126, v47, v30);
          sub_100028C3C((uint64_t)v126, (uint64_t)v127, &qword_100792800);
          if (*(void *)&v127[0])
          {
            v128[0] = v127[0];
            v128[1] = v127[1];
            v128[2] = v127[2];
            v128[3] = v127[3];
            uint64_t v54 = v98[6];
            uint64_t v55 = v98[7];
            uint64_t v56 = *(void *)(v48 + 16);
            uint64_t v57 = _swiftEmptyArrayStorage;
            if (v56)
            {
              uint64_t v121 = v98[7];
              uint64_t v122 = v54;
              uint64_t v124 = _swiftEmptyArrayStorage;
              specialized ContiguousArray.reserveCapacity(_:)();
              unint64_t v58 = (*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
              uint64_t v116 = (char *)v48;
              uint64_t v59 = v48 + v58;
              uint64_t v60 = *(void *)(v106 + 72);
              uint64_t v61 = (uint64_t)v107;
              uint64_t v62 = (uint64_t)v117;
              uint64_t v63 = v111;
              do
              {
                sub_10003B694(v59, v62, &qword_1007A1528);
                uint64_t v64 = *(int *)(v63 + 48);
                sub_10053C374(v62, v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                unint64_t v65 = *(void **)(v62 + v64);
                *(void *)(v61 + v64) = v65;
                id v66 = v65;
                sub_10053B6D4(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_10003B6F8(v62, &qword_1007A1528);
                specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
                specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
                specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
                specialized ContiguousArray._endMutation()();
                v59 += v60;
                --v56;
              }
              while (v56);
              uint64_t v57 = v124;
              uint64_t v48 = (uint64_t)v116;
              char v67 = v102;
              uint64_t v55 = v121;
            }
            else
            {
              char v67 = v102;
            }
            uint64_t v68 = swift_getObjectType();
            (*(void (**)(void *, void *, uint64_t, _OWORD *, uint64_t, uint64_t))(v55 + 440))(v57, v67, 3, v128, v68, v55);
            swift_bridgeObjectRelease();
            sub_1001D96B8((uint64_t)v126);
          }
        }
        uint64_t v69 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
        int64_t v70 = *(void *)(v48 + 16);
        if (v70)
        {
          uint64_t v116 = (char *)v48;
          uint64_t v122 = type metadata accessor for REMAnalyticsManager();
          LODWORD(v121) = enum case for REMUserOperation.createReminder(_:);
          unsigned int v120 = enum case for REMAnalyticsEvent.userOperation(_:);
          uint64_t v119 = (void (**)(void, void, void))(v112 + 104);
          uint64_t v118 = v112 + 8;
          id v71 = v69;
          int64_t v72 = v70;
          uint64_t v73 = v103;
          uint64_t v74 = v104;
          do
          {
            static REMAnalyticsManager.shared.getter();
            uint64_t v75 = sub_10003B754(&qword_100791F78);
            uint64_t v76 = (uint64_t *)&v74[*(int *)(v75 + 48)];
            uint64_t v77 = &v74[*(int *)(v75 + 80)];
            uint64_t v78 = type metadata accessor for REMUserOperation();
            (*(void (**)(char *, void, uint64_t))(*(void *)(v78 - 8) + 104))(v74, v121, v78);
            *uint64_t v76 = TTRUserDefaults.activitySessionId.getter();
            v76[1] = v79;
            TTRUserDefaults.activitySessionBeginTime.getter();
            uint64_t v124 = (void *)_typeName(_:qualified:)();
            uint64_t v125 = v80;
            v81._countAndFlagsBits = 0x746954687469772DLL;
            v81._object = (void *)0xEA0000000000656CLL;
            String.append(_:)(v81);
            uint64_t v82 = v125;
            *(void *)uint64_t v77 = v124;
            *((void *)v77 + 1) = v82;
            (*v119)(v74, v120, v73);
            REMAnalyticsManager.post(event:)();
            swift_release();
            (*(void (**)(char *, uint64_t))v118)(v74, v73);
            --v72;
          }
          while (v72);
          uint64_t v124 = _swiftEmptyArrayStorage;
          sub_1004D3504(0, v70, 0);
          uint64_t v83 = (uint64_t)&v116[(*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80)];
          uint64_t v123 = *(void *)(v106 + 72);
          char v29 = v124;
          uint64_t v84 = v113;
          uint64_t v85 = (uint64_t)v105;
          uint64_t v86 = (uint64_t)v107;
          uint64_t v87 = (uint64_t)v117;
          do
          {
            sub_10003B694(v83, v87, &qword_1007A1528);
            sub_10053C374(v87, v86, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_10053C30C(v86, v85, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_10003B6F8(v87, &qword_1007A1528);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1004D3504(0, v29[2] + 1, 1);
              uint64_t v87 = (uint64_t)v117;
              char v29 = v124;
            }
            unint64_t v89 = v29[2];
            unint64_t v88 = v29[3];
            if (v89 >= v88 >> 1)
            {
              sub_1004D3504(v88 > 1, v89 + 1, 1);
              uint64_t v87 = (uint64_t)v117;
              char v29 = v124;
            }
            void v29[2] = v89 + 1;
            sub_10053C30C(v85, (uint64_t)v29+ ((*(unsigned __int8 *)(v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80))+ *(void *)(v84 + 72) * v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            v83 += v123;
            --v70;
          }
          while (v70);
          long long v90 = v109;
          uint64_t v91 = v114;
          char v92 = v108;
          sub_100065320(v109, v114, v108);
          swift_release();
          sub_100065320(v90, v91, v92);
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v93 = v69;
          uint64_t v94 = v109;
          uint64_t v95 = v114;
          char v96 = v108;
          sub_100065320(v109, v114, v108);
          swift_release();
          sub_100065320(v94, v95, v96);
          swift_release();
          swift_bridgeObjectRelease();

          char v29 = _swiftEmptyArrayStorage;
        }
        break;
      default:
        sub_100065320(v32, v33, v34);
        break;
    }
  }
  return v29;
}

uint64_t sub_10053F118()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

void *sub_10053F150(uint64_t a1)
{
  return sub_10052A144(a1, *(void *)(v1 + 16));
}

uint64_t sub_10053F158()
{
  swift_release();
  swift_release();
  sub_1000AAEE4(*(void **)(v0 + 40), *(void **)(v0 + 48), *(unsigned char *)(v0 + 56));
  sub_1000AAEBC(*(id *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return _swift_deallocObject(v0, 73, 7);
}

uint64_t sub_10053F1B0(uint64_t a1)
{
  return sub_10052A390(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72));
}

uint64_t sub_10053F1EC(uint64_t a1, void *a2)
{
  return sub_10052A328(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10053F1F4()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 72);
  *(void *)(v0 + 72) = _swiftEmptyDictionarySingleton;
  uint64_t v2 = sub_10052314C(v1, (uint64_t (*)(uint64_t))&TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor);
  if (v2[2] && swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, void *, uint64_t, uint64_t))(v3 + 16))(v0, &off_10074F848, v2, ObjectType, v3);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = sub_10052314C(v1, (uint64_t (*)(uint64_t))&TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor);
  if (v5[2]) {
    TTRInCellEditingPresenterManagingHelper.updateReminderEditingComponentsFor(_:)((Swift::OpaquePointer)v5);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_10053F320(uint64_t a1)
{
  return sub_10053F32C(*(void *)(v1 + 16), a1);
}

uint64_t sub_10053F32C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100792060);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053F394()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

void sub_10053F3E4()
{
  sub_100523A38(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_10053F3F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

ValueMetadata *type metadata accessor for TTRReminderListNewReminderInDefaultSectionOption()
{
  return &type metadata for TTRReminderListNewReminderInDefaultSectionOption;
}

unint64_t sub_10053F41C()
{
  unint64_t result = qword_1007A4570;
  if (!qword_1007A4570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A4570);
  }
  return result;
}

unint64_t sub_10053F474()
{
  unint64_t result = qword_1007A4578;
  if (!qword_1007A4578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A4578);
  }
  return result;
}

unint64_t sub_10053F4CC()
{
  unint64_t result = qword_1007A4580;
  if (!qword_1007A4580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A4580);
  }
  return result;
}

unint64_t sub_10053F524()
{
  unint64_t result = qword_1007A4588;
  if (!qword_1007A4588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A4588);
  }
  return result;
}

id TTRIWelcomeAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWelcomeAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIWelcomeAssembly()
{
  return self;
}

id TTRIWelcomeAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWelcomeAssembly();
  return [super dealloc];
}

id sub_10053F64C(uint64_t a1, char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = &a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_upgradeHelpURLString];
  *(void *)uint64_t v5 = 0xD000000000000025;
  *((void *)v5 + 1) = 0x80000001006BE380;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_spinner] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_originalBottomConstraints] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_newBottomConstraints] = 0;
  uint64_t v6 = &a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_presenter];
  *(void *)uint64_t v6 = a1;
  *((void *)v6 + 1) = &off_100739CC0;
  *(_OWORD *)&a2[OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel] = xmmword_10066EDA0;
  unint64_t v7 = *(void *)(*(void *)(a1 + 48) + 32) - 1;
  swift_unknownObjectRetain();
  if (v7 > 1
    && (id v8 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor(),
        int v9 = TTRUserDefaults.lastSeenWelcomeScreenVersion.getter(),
        v8,
        v9))
  {
    v10._countAndFlagsBits = 0xD000000000000018;
    v10._object = (void *)0x80000001006BE3B0;
    v11._countAndFlagsBits = 0x2070552079617453;
    v11._object = (void *)0xEF65746144206F74;
    TTRLocalizedString(_:comment:)(v11, v10);
    v12._countAndFlagsBits = 0xD000000000000017;
    v13._countAndFlagsBits = 0xD000000000000020;
    v14._countAndFlagsBits = 0xD000000000000049;
    v12._object = (void *)0x80000001006BE3D0;
    v14._object = (void *)0x80000001006BE3F0;
    v13._object = (void *)0x80000001006BE440;
    object = TTRLocalizedString(_:value:comment:)(v12, v14, v13)._object;
    uint64_t v16 = (void *)static TTRIAsset.Image.UpgradeWarmingSheet.upgradeHeader.getter();
  }
  else
  {
    v17._countAndFlagsBits = 0xD000000000000016;
    v18._countAndFlagsBits = 0xD00000000000001CLL;
    v17._object = (void *)0x80000001006BE470;
    v19._object = (void *)0x80000001006BE490;
    v18._object = (void *)0x80000001006BE4B0;
    v19._countAndFlagsBits = 0xD000000000000014;
    TTRLocalizedString(_:value:comment:)(v17, v19, v18);
    uint64_t v16 = 0;
    object = 0;
  }
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (object)
  {
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v21 = 0;
  }
  v24.receiver = a2;
  v24.super_class = ObjectType;
  id v22 = [super initWithTitle:v20 detailText:v21 icon:v16 contentLayout:2];

  swift_release();
  return v22;
}

void *sub_10053F8BC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  a7[3] = 0;
  swift_unknownObjectWeakInit();
  a7[4] = a1;
  a7[5] = a2;
  a7[6] = &off_100738AD8;
  a7[7] = a3;
  sub_10053FD5C(a4, (uint64_t)&v18);
  if (v19)
  {
    sub_10053FDC4(a4);
    sub_100038ED8(&v18, (uint64_t)&v20);
  }
  else
  {
    sub_100416F34(a1);
    swift_retain();
    id v14 = a3;
    sub_10053FDC4((uint64_t)&v18);
    NSString v21 = &type metadata for TTRWelcomeInteractor.DefaultDeviceListRequestFactory;
    id v22 = &off_100738FA0;
    swift_release();

    sub_1000C279C(a1);
    sub_10053FDC4(a4);
  }
  sub_100038ED8(&v20, (uint64_t)(a7 + 8));
  a7[13] = a5;
  uint64_t v15 = (char *)a7 + OBJC_IVAR____TtC9Reminders20TTRWelcomeInteractor_getUpgradeInfoTimeout;
  uint64_t v16 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a6, v16);
  return a7;
}

id sub_10053FA0C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100416F34(a3);
  uint64_t v8 = *(void *)TTRCloudKitMigrationManager.shared.unsafeMutableAddressor();
  int v9 = self;
  swift_retain();
  id v10 = [v9 sharedInstance];
  uint64_t v28 = 0;
  long long v26 = 0u;
  long long v27 = 0u;
  id v11 = [objc_allocWithZone((Class)REMStore) init];
  OS_dispatch_queue.SchedulerTimeType.Stride.init(integerLiteral:)();
  type metadata accessor for TTRWelcomeInteractor();
  Swift::String v12 = (void *)swift_allocObject();
  Swift::String v13 = sub_10053F8BC(a3, v8, v10, (uint64_t)&v26, (uint64_t)v11, (uint64_t)v7, v12);
  uint64_t v14 = type metadata accessor for TTRIWelcomeRouter();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v15 + 32) = 0;
  swift_unknownObjectWeakInit();
  *((void *)&v27 + 1) = v14;
  uint64_t v28 = &off_100740868;
  *(void *)&long long v26 = v15;
  type metadata accessor for TTRIWelcomePresenter();
  uint64_t v16 = swift_allocObject();
  uint64_t v17 = sub_100038E88((uint64_t)&v26, v14);
  __chkstk_darwin(v17);
  uint64_t v19 = (uint64_t *)((char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = *v19;
  *(void *)(v16 + 88) = v14;
  *(void *)(v16 + 96) = &off_100740868;
  *(void *)(v16 + 64) = v21;
  *(void *)(v16 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v16 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v16 + 104) = 1;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(_OWORD *)(v16 + 144) = 0u;
  *(void *)(v16 + 160) = 0;
  *(void *)(v16 + 48) = v13;
  *(void *)(v16 + 56) = &off_100738C08;
  swift_retain();
  swift_retain();
  sub_100038CD8((uint64_t)&v26);
  id v22 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIWelcomeViewController());
  uint64_t v23 = swift_retain();
  id v24 = sub_10053F64C(v23, v22);
  v13[3] = &off_100739CB8;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(void *)(v16 + 24) = &off_10074BE60;
  swift_unknownObjectWeakAssign();
  *(void *)(v16 + 40) = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  *(void *)(v15 + 32) = a2;
  swift_unknownObjectWeakAssign();
  swift_release();
  return v24;
}

uint64_t sub_10053FD5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A45B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053FDC4(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007A45B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_10053FE24(uint64_t *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  int v102 = a6;
  uint64_t v105 = a4;
  char v96 = a3;
  uint64_t v94 = (void **)a2;
  uint64_t v103 = a1;
  uint64_t v6 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  id v93 = (char *)&v88 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v104 = (char *)&v88 - v9;
  uint64_t v98 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v98);
  uint64_t v108 = (uint64_t)&v88 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v91);
  char v92 = (char *)&v88 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v89 = *(void *)(v107 - 8);
  uint64_t v12 = __chkstk_darwin(v107);
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v106 = (char *)&v88 - v15;
  uint64_t v16 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v16 - 8);
  long long v90 = (void **)((char *)&v88 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  id v22 = (char *)&v88 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  id v24 = (char *)&v88 - v23;
  v113[0] = _swiftEmptyArrayStorage;
  sub_1000A13DC();
  sub_10003B754(&qword_100789188);
  sub_1000A1434();
  uint64_t v25 = v24;
  long long v26 = v96;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v27 = [v26 customContext];
  if (v27)
  {
    uint64_t v28 = v27;
    char v29 = (void *)REMSmartListCustomContext.filter.getter();

    if (v29)
    {
      REMCustomSmartListFilterDescriptor.excludedSuggestedAttributes.getter();

      (*(void (**)(char *, uint64_t))(v19 + 8))(v25, v18);
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v25, v22, v18);
    }
  }
  id v30 = [v26 accountID];
  unint64_t v88 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  uint64_t v31 = v94;
  uint64_t v32 = v90;
  sub_10035A878((uint64_t)v94, (uint64_t)v90, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  uint64_t v99 = v25;
  uint64_t v100 = v19;
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
  uint64_t v101 = v18;
  v33(v22, v25, v18);
  id v97 = v30;
  sub_100055D48(v32, (uint64_t)v22, v30, (uint64_t)v113);
  unint64_t v110 = sub_100106818();
  *(void *)&long long v111 = &protocol witness table for REMSmartList;
  v109[0] = v26;
  id v34 = v26;
  static REMRemindersListDataView.SortingStyle.fallbackForCustomSmartList.getter();
  unint64_t v35 = v106;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
  uint64_t v36 = v89;
  uint64_t v37 = v107;
  uint64_t v95 = *(void (**)(char *, uint64_t))(v89 + 8);
  char v96 = (void *)(v89 + 8);
  v95(v14, v107);
  sub_10050BC9C((uint64_t)v109);
  unint64_t v38 = *v31;
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v14, v35, v37);
  id v39 = v38;
  id v40 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  unint64_t v110 = type metadata accessor for TTRUserDefaults();
  *(void *)&long long v111 = &protocol witness table for TTRUserDefaults;
  v109[0] = v40;
  type metadata accessor for TTRShowCustomSmartListWithSectionsDataModelSource();
  swift_allocObject();
  id v41 = v34;
  id v42 = v40;
  uint64_t v43 = TTRShowCustomSmartListWithSectionsDataModelSource.init(store:smartList:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)();
  id v44 = v113[0];
  uint64_t v45 = (uint64_t)v92;
  unsigned char *v92 = 1;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTRShowCustomSmartListViewModelSource();
  uint64_t v46 = swift_allocObject();
  swift_retain();
  uint64_t v47 = sub_100540A00(v43, (uint64_t)v44, v45, v46);
  sub_10035A878((uint64_t)v31, (uint64_t)v32, v88);
  sub_100057134((uint64_t)v113, (uint64_t)v109);
  swift_retain();
  uint64_t v94 = (void **)v47;
  sub_100056B24((uint64_t)v32, (uint64_t)v109, v47, (uint64_t)&off_1007512D8, v108);
  uint64_t v48 = (uint64_t)v104;
  sub_100056CAC((uint64_t)v104);
  char v92 = (unsigned char *)type metadata accessor for TTRIShowCustomSmartListPresenter();
  uint64_t v49 = swift_allocObject();
  uint64_t v50 = (uint64_t *)(v49 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource);
  *uint64_t v50 = v43;
  v50[1] = (uint64_t)&protocol witness table for TTRShowCustomSmartListWithSectionsDataModelSource;
  uint64_t v51 = (uint64_t)v93;
  sub_10035A878(v48, (uint64_t)v93, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain();
  uint64_t v52 = v105;
  swift_unknownObjectRetain();
  uint64_t v53 = sub_1003585DC(v51, v52, v49);
  sub_1002F21D4(v48, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v54 = *(void *)(v53 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 104);
  swift_retain();
  if (v56(ObjectType, v54))
  {
    uint64_t v58 = v57;
    uint64_t v59 = swift_getObjectType();
    LOBYTE(v58) = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v59, v58);
    swift_release();
    swift_unknownObjectRelease();
    char v60 = v58 & 1;
  }
  else
  {
    swift_release();
    char v60 = 0;
  }
  uint64_t v61 = sub_1001D0C84(v60, v53);
  id v93 = v62;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v91 = swift_getObjectType();
  *(void *)(v53 + 24) = *(void *)(v66 + 8);
  uint64_t v105 = v64;
  swift_unknownObjectWeakAssign();
  uint64_t v67 = *(void *)(v53 + 144);
  uint64_t v68 = swift_getObjectType();
  uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 104);
  swift_retain_n();
  uint64_t v104 = v61;
  if (v69(v68, v67))
  {
    uint64_t v71 = v70;
    uint64_t v72 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v71 + 16))(v72, v71);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v73 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  id v74 = v104;
  uint64_t v75 = (void *)sub_10035A06C(v53);
  swift_release();

  uint64_t v76 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v66 + 32);
  id v93 = v75;
  v76(v75, &off_1007464D0, v91, v66);
  uint64_t v77 = (char *)v113[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v77 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v78 = (char *)v113[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v78 + 1) = &protocol witness table for TTRShowCustomSmartListWithSectionsDataModelSource;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v79 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v43 + 408);
  uint64_t v80 = swift_retain();
  v79(v80, &off_100750838);
  swift_retain();
  uint64_t v81 = swift_retain();
  sub_1005B1F9C(v81, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v82 = v108;
  *(void *)(*(void *)(v108 + *(int *)(v98 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v114, (uint64_t)v109);
  long long v111 = v115;
  long long v112 = v116;
  *(void *)(v115 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v109);
  sub_100038DC0((uint64_t)&v117, (uint64_t)v109);
  uint64_t v83 = *((void *)&v118 + 1);
  long long v111 = v118;
  uint64_t v84 = swift_getObjectType();
  uint64_t v85 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v83 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v85(v53, &off_10073CA90, v84, v83);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v109);
  (*(void (**)(void))(*(void *)v43 + 456))(v102 & 1);
  uint64_t v86 = v103;
  v103[3] = (uint64_t)v92;
  v86[4] = (uint64_t)&off_10074CD30;
  *uint64_t v86 = v53;

  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v82, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  v95(v106, v107);
  sub_100057B44(v113);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
  return v93;
}

id TTRIShowCustomSmartListAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowCustomSmartListAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowCustomSmartListAssembly()
{
  return self;
}

id TTRIShowCustomSmartListAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowCustomSmartListAssembly();
  return [super dealloc];
}

uint64_t sub_100540A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a4
            + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList) = 0;
  uint64_t v11 = a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount;
  *(void *)uint64_t v11 = 0;
  *(void *)(v11 + 8) = 0;
  *(unsigned char *)(v11 + 16) = 1;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) = 1;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance) = 0;
  sub_10035A878(a3, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  uint64_t v12 = sub_100359DC4(a1, a2, (uint64_t)v10, a4);
  sub_1002F21D4(a3, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  return v12;
}

uint64_t sub_100540CF0(char a1)
{
  uint64_t v2 = a1 & 1;
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(v2, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100540D94()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16);
  swift_unknownObjectRetain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100540E10(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 24);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100540EA0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 40);
  swift_unknownObjectRetain();
  v7(a1, a2, ObjectType, v5);

  return swift_unknownObjectRelease();
}

uint64_t sub_100540F38(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100540FC8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 56);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100541054(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 64);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_1005410E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 72);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_10054116C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 80);
  swift_unknownObjectRetain();
  v9(a1, a2, a3, ObjectType, v7);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541214(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 88);
  swift_unknownObjectRetain();
  LOBYTE(a2) = v7(a1, a2, ObjectType, v5);
  swift_unknownObjectRelease();
  return a2 & 1;
}

uint64_t sub_1005412A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 96);
  swift_unknownObjectRetain();
  v11(a1, a2, a3, a4, ObjectType, v9);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 104);
  swift_unknownObjectRetain();
  v13(a1, a2, a3, a4, a5, a6, ObjectType, v11);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541418()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 112);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541498(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 120);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 128);
  swift_unknownObjectRetain();
  v11(a1, a2, a3, a4, ObjectType, v9);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005415D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 136);
  swift_unknownObjectRetain();
  v13(a1, a2, a3, a4, a5, a6, ObjectType, v11);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541698(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 144);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541728(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 152);
  swift_unknownObjectRetain();
  v11(a1, a2, a3, a4, ObjectType, v9);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005417D8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 160);
  swift_unknownObjectRetain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100541854(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 168);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1005418E0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 176);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 192);
  swift_unknownObjectRetain();
  v9(a1, a2, a3, ObjectType, v7);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 200);
  swift_unknownObjectRetain();
  v11(a1, a2, a3, a4, ObjectType, v9);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541AC8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 208);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541B58()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 216);
  swift_unknownObjectRetain();
  char v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4 & 1;
}

uint64_t sub_100541BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 224);
  swift_unknownObjectRetain();
  LOBYTE(a2) = v7(a1, a2, ObjectType, v5);
  swift_unknownObjectRelease();
  return a2 & 1;
}

uint64_t sub_100541C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 232);
  swift_unknownObjectRetain();
  v10(a1, a2, a3, a4, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 240);
  swift_unknownObjectRetain();
  v10(a1, a2, a3, a4, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541DE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 248);
  swift_unknownObjectRetain();
  v10(a1, a2, a3, a4, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 256);
  swift_unknownObjectRetain();
  v10(a1, a2, a3, a4, ObjectType, v8);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541F68()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 264);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100541FE8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 272);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542068(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 280);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_1005420F4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 288);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542174(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 296);
  swift_unknownObjectRetain();
  v9(a1, a2, a3, ObjectType, v7);

  return swift_unknownObjectRelease();
}

uint64_t sub_10054221C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 304);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005422AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 312);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542344()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 320);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005423C4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 328);
  swift_unknownObjectRetain();
  v7(a1, a2, ObjectType, v5);

  return swift_unknownObjectRelease();
}

uint64_t sub_10054246C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 336);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100542504(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 344);
  swift_unknownObjectRetain();
  uint64_t v8 = v7(a1, a2, ObjectType, v5);
  swift_unknownObjectRelease();
  return v8;
}

uint64_t sub_1005425A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v7)(void *__return_ptr, uint64_t, uint64_t, uint64_t);
  void v9[11];

  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v5 + 352);
  swift_unknownObjectRetain();
  v7(v9, a1, ObjectType, v5);
  swift_unknownObjectRelease();
  return sub_1001D903C((uint64_t)v9, a2);
}

uint64_t sub_100542648(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v9 + 360);
  swift_unknownObjectRetain();
  v11(a1, a2, a3 & 0x101FF, a4, ObjectType, v9);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542700()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 368);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542780()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 376);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542800()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 408);
  swift_unknownObjectRetain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_10054287C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 416);
  swift_unknownObjectRetain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100542900(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 424);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542998(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 432);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542A28()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 448);
  swift_unknownObjectRetain();
  uint64_t v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100542AA4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 456);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100542B2C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 464);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542BC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 472);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100542C48(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 480);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100542CD0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 488);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100542D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 496);
  swift_unknownObjectRetain();
  LOBYTE(a3) = v9(a1, a2, a3, ObjectType, v7);
  swift_unknownObjectRelease();
  return a3 & 1;
}

uint64_t sub_100542DF8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 512);
  swift_unknownObjectRetain();
  LOBYTE(a2) = v7(a1, a2, ObjectType, v5);
  swift_unknownObjectRelease();
  return a2 & 1;
}

uint64_t sub_100542E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v10 = *(void *)(v5 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t))(v10 + 520);
  swift_unknownObjectRetain();
  v12(a1, a2, a3, a4, a5, ObjectType, v10);

  return swift_unknownObjectRelease();
}

uint64_t sub_100542F44(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 528);
  swift_unknownObjectRetain();
  LOBYTE(a2) = v7(a1, a2, ObjectType, v5);
  swift_unknownObjectRelease();
  return a2 & 1;
}

uint64_t sub_100542FD4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 536);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543068(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 544);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_1005430F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 552);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100543178(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 560);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100543200(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 568);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_10054328C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 576);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543318(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 584);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005433A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 592);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_10054342C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 600);
  swift_unknownObjectRetain();
  char v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4 & 1;
}

uint64_t sub_1005434A4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 608);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100543534(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 616);
  swift_unknownObjectRetain();
  LODWORD(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 0xFFFFFF01;
}

uint64_t sub_1005435BC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 624);
  swift_unknownObjectRetain();
  LOBYTE(a2) = v7(a1, a2, ObjectType, v5);
  swift_unknownObjectRelease();
  return a2 & 1;
}

uint64_t sub_10054364C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 632);
  swift_unknownObjectRetain();
  v11(a1, a2, a3, a4, ObjectType, v9);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005436F8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 640);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100543780(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 648);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100543808(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 656);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100543890(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 664);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100543918(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 672);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_1005439A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 680);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543A2C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 688);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543AA8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 696);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543B24()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 704);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543BA0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 712);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543C2C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 720);
  swift_unknownObjectRetain();
  char v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4 & 1;
}

uint64_t sub_100543CA4()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 728);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5, double a6)
{
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double, double))(v13 + 736);
  swift_unknownObjectRetain();
  uint64_t v16 = v15(a1, a2, a3, a4, ObjectType, v13, a5, a6);
  swift_unknownObjectRelease();
  return v16;
}

uint64_t sub_100543E00(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 744);
  swift_unknownObjectRetain();
  v7(a1, a2, ObjectType, v5);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543E94(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 752);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_100543F1C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 760);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100543FA8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 768);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100544034(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 776);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005440C0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 784);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_10054414C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 792);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005441C8()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 800);
  swift_unknownObjectRetain();
  char v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4 & 1;
}

uint64_t sub_100544240(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 808);
  swift_unknownObjectRetain();
  v7(a1, a2, ObjectType, v5);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005442D4(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 816);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100544360(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 824);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005443EC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 832);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_100544468()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 848);
  swift_unknownObjectRetain();
  char v4 = v3(ObjectType, v1);
  swift_unknownObjectRelease();
  return v4 & 1;
}

uint64_t sub_1005444E0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 856);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);

  return swift_unknownObjectRelease();
}

uint64_t sub_10054455C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 864);
  swift_unknownObjectRetain();
  v9(a1, a2, a3, ObjectType, v7);

  return swift_unknownObjectRelease();
}

uint64_t sub_100544600(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 872);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_10054468C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 880);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100544714(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 888);
  swift_unknownObjectRetain();
  v9(a1, a2, a3, ObjectType, v7);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005447B8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 896);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100544840(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 904);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_1005448CC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 912);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_100544960(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 920);
  swift_unknownObjectRetain();
  uint64_t v6 = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1005449F0(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 928);
  swift_unknownObjectRetain();
  LOBYTE(a1) = v5(a1, ObjectType, v3);
  swift_unknownObjectRelease();
  return a1 & 1;
}

uint64_t sub_100544A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 936);
  swift_unknownObjectRetain();
  LOBYTE(a3) = v9(a1, a2, a3, ObjectType, v7);
  swift_unknownObjectRelease();
  return a3 & 1;
}

uint64_t sub_100544B18()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A45F0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A45F0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_100544BE0(void *a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = v5;
  _OWORD v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[9] = 0;
  v6[4] = a2;
  v6[5] = a1;
  v6[6] = a3;
  type metadata accessor for TTRAccountEditor();
  sub_100544E70();
  id v12 = a1;
  id v13 = a2;
  id v14 = a3;
  id v15 = a5;
  TTRUndoableEditing.init(changeItem:undoManager:)();
  void v6[7] = a4;
  v6[8] = v18;
  uint64_t v16 = NSUndoManager.observeChanges<A>(target:handler:)();

  v6[9] = v16;
  swift_release();
  return v6;
}

uint64_t sub_100544D28()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10006C6A8();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100544D94()
{
  if (*(void *)(v0 + 72))
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
    swift_retain();
    static NSUndoManager.removeObserver(with:)();
    swift_release();
    sub_1000499D4(v0 + 16);

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for TTRIGroupMembershipInteractor()
{
  return self;
}

unint64_t sub_100544E70()
{
  unint64_t result = qword_1007A46D8;
  if (!qword_1007A46D8)
  {
    type metadata accessor for TTRAccountEditor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A46D8);
  }
  return result;
}

uint64_t sub_100544EC8()
{
  swift_retain();
  uint64_t v1 = swift_bridgeObjectRetain();
  sub_1005456E0(v1, v0);
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  swift_release();
  char v4 = *(void **)(v0 + 40);
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v6 = v3 + 40;
    do
    {
      v6 += 16;
      TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  sub_10003B754((uint64_t *)&unk_1007A46E0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v4 mergeableOrderingNodesByOrderingMergeableOrderingNodes:isa];

  unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_6;
    }
LABEL_19:
    id v13 = _swiftEmptyArrayStorage;
LABEL_20:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v13;
  }
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v10 = result;
  if (!result) {
    goto LABEL_19;
  }
LABEL_6:
  if (v10 >= 1)
  {
    uint64_t v12 = 0;
    id v13 = _swiftEmptyArrayStorage;
    do
    {
      if ((v9 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_unknownObjectRetain();
      }
      swift_getObjectType();
      uint64_t v15 = sub_10054517C();
      char v17 = v16;
      int v18 = ~v16;
      swift_unknownObjectRelease();
      if (v18)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v13 = sub_100570624(0, v13[2] + 1, 1, v13);
        }
        unint64_t v20 = v13[2];
        unint64_t v19 = v13[3];
        if (v20 >= v19 >> 1) {
          id v13 = sub_100570624((void *)(v19 > 1), v20 + 1, 1, v13);
        }
        v13[2] = v20 + 1;
        id v14 = &v13[2 * v20];
        v14[4] = v15;
        *((unsigned char *)v14 + 40) = v17 & 1;
      }
      ++v12;
    }
    while (v10 != v12);
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_10054517C()
{
  self;
  uint64_t v0 = swift_dynamicCastObjCClass();
  if (v0)
  {
    uint64_t v1 = v0;
  }
  else
  {
    self;
    uint64_t v1 = swift_dynamicCastObjCClass();
    if (!v1) {
      return v1;
    }
  }
  swift_unknownObjectRetain();
  return v1;
}

uint64_t sub_100545204()
{
  TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter();
  TTRAccountEditor.move(list:to:positionWithinGroup:)();
  swift_unknownObjectRelease();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_10006C6A8();
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1005452A8(uint64_t a1, char a2, unint64_t a3)
{
  uint64_t v5 = a2 & 1;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100544EC8();
  uint64_t v11 = sub_1003DBA1C(a1, v5, v10);
  char v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) == 0)
  {
    if (v11 == a3) {
      return;
    }
    uint64_t v14 = sub_100544EC8();
    if ((a3 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(v14 + 16) > a3)
    {
      unint64_t v9 = (char *)*(id *)(v14 + 16 * a3 + 32);
      swift_bridgeObjectRelease();
      TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter();
      uint64_t v26 = TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter();
      sub_10003B754((uint64_t *)&unk_1007A46E0);
      TTRRelativeInsertionPosition.init(sibling:isAfter:)();
      uint64_t v15 = v27;
      unsigned __int8 v16 = v28;
      TTRAccountEditor.move(list:to:positionWithinGroup:)();
      swift_unknownObjectRelease();
      sub_1005458F8(v15, v16);
      if (qword_1007856C0 == -1)
      {
LABEL_6:
        sub_100018BF8(v6, (uint64_t)qword_1007A45F0);
        swift_retain_n();
        char v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v17, v18))
        {
          unint64_t v19 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)unint64_t v19 = 136315138;
          uint64_t v25 = v19 + 4;
          sub_100544EC8();
          uint64_t v20 = Array.description.getter();
          uint64_t v21 = v9;
          unint64_t v23 = v22;
          swift_bridgeObjectRelease();
          uint64_t v26 = sub_1000385A8(v20, v23, &v27);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          unint64_t v9 = v21;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Member lists after move {membersList: %s}", v19, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          if (swift_unknownObjectWeakLoadStrong())
          {
            sub_10006C6A8();

            swift_unknownObjectRelease();
          }
          else
          {
          }
          swift_unknownObjectRelease();
        }
        else
        {
        }
        return;
      }
LABEL_18:
      swift_once();
      goto LABEL_6;
    }
    __break(1u);
    goto LABEL_18;
  }
  if (qword_1007856C0 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_100018BF8(v6, (uint64_t)qword_1007A45F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v24, v6);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_1003AA010((uint64_t)"Tried to move list that is not part of the current group", 56, 2);
  __break(1u);
}

void sub_1005456E0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  unint64_t v4 = 0;
  uint64_t v5 = a1 + 40;
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v7 = -(uint64_t)v2;
  uint64_t v8 = &selRef_setAxis_;
  uint64_t v22 = a1 + 40;
  unint64_t v23 = *(void *)(a1 + 16);
  uint64_t v25 = -(uint64_t)v2;
  do
  {
    uint64_t v24 = v6;
    if (v4 <= v2) {
      unint64_t v9 = v2;
    }
    else {
      unint64_t v9 = v4;
    }
    uint64_t v27 = -(uint64_t)v9;
    for (unint64_t i = (unsigned char *)(v5 + 16 * v4++); ; i += 16)
    {
      if (v27 + v4 == 1)
      {
        __break(1u);
        return;
      }
      char v12 = (void *)*((void *)i - 1);
      char v13 = *i;
      id v11 = v12;
      char v26 = v13;
      uint64_t v14 = (void *)TTRListOrCustomSmartListChangeItem.parentListID.getter();
      id v15 = [*(id *)(a2 + 32) v8[30]];
      unsigned __int8 v16 = v15;
      if (!v14) {
        break;
      }
      if (v15)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v17 = v14;
        char v18 = static NSObject.== infix(_:_:)();

        uint64_t v7 = v25;
        uint64_t v8 = &selRef_setAxis_;

        if (v18) {
          goto LABEL_16;
        }
      }
      else
      {

        id v11 = v14;
      }
LABEL_8:

      ++v4;
      if (v7 + v4 == 1) {
        return;
      }
    }
    if (v15)
    {

      id v11 = v16;
      goto LABEL_8;
    }
LABEL_16:
    uint64_t v6 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1004D37E8(0, v24[2] + 1, 1);
      uint64_t v6 = v24;
    }
    unint64_t v20 = v6[2];
    unint64_t v19 = v6[3];
    if (v20 >= v19 >> 1)
    {
      sub_1004D37E8(v19 > 1, v20 + 1, 1);
      uint64_t v6 = v24;
    }
    v6[2] = v20 + 1;
    uint64_t v21 = &v6[2 * v20];
    v21[4] = v12;
    *((unsigned char *)v21 + 40) = v26;
    uint64_t v5 = v22;
    unint64_t v2 = v23;
  }
  while (v7 + v4);
}

uint64_t sub_1005458F8(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_unknownObjectRelease();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersListEditableSectionNameLayoutStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005459D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListEditableSectionNameLayoutStyle()
{
  return &type metadata for TTRIRemindersListEditableSectionNameLayoutStyle;
}

void *sub_100545A10()
{
  id v1 = v0;
  return v0;
}

unint64_t sub_100545A44()
{
  unint64_t result = qword_1007A4700;
  if (!qword_1007A4700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A4700);
  }
  return result;
}

void *sub_100545A98()
{
  id v1 = v0;
  return v0;
}

uint64_t type metadata accessor for TTRIWelcomeNavigationRouter()
{
  return self;
}

uint64_t sub_100545AEC(uint64_t a1, char a2)
{
  uint64_t v3 = sub_100546034(a1, a2);
  swift_beginAccess();
  sub_10003B754((uint64_t *)&unk_10078EED0);
  Set.removeAll(where:)();
  swift_endAccess();
  swift_beginAccess();
  Set.removeAll(where:)();
  swift_endAccess();
  uint64_t v5 = *(void *)(v2 + 48);
  swift_bridgeObjectRetain();
  sub_1005B4594(v3);
  swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v2 + 32))
  {
    __chkstk_darwin(result);
    swift_retain();
    TTRObservableViewModelCollection.updateAndPublishAll(using:)();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100545C58(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100546034(a1, a2);
  swift_beginAccess();
  sub_10003B754((uint64_t *)&unk_10078EED0);
  Set.removeAll(where:)();
  swift_endAccess();
  swift_beginAccess();
  Set.removeAll(where:)();
  swift_endAccess();
  uint64_t v10 = *(void *)(v3 + 48);
  uint64_t v18 = v10;
  if (*(void *)(v10 + 16) && (uint64_t v11 = *(void *)(v9 + 16)) != 0)
  {
    uint64_t v12 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
    unint64_t v13 = v9 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    do
    {
      sub_10012F180((uint64_t)v8);
      sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_10078E360);
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v15 = v18;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = v10;
  }
  *(void *)(v3 + 48) = v15;
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v3 + 32))
  {
    __chkstk_darwin(result);
    *(&v17 - 2) = v3;
    *(&v17 - 1) = 7;
    swift_retain();
    TTRObservableViewModelCollection.updateAndPublishAll(using:)();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100545EE8@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(unsigned __int8 *)(result + 16);
    swift_beginAccess();
    uint64_t v5 = *(void *)(v3 + 48);
    swift_beginAccess();
    uint64_t v6 = *(void *)(v3 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = 0;
  return result;
}

uint64_t sub_100545FB0()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = *(void *)(result + 32);
    swift_retain();
    uint64_t result = swift_release();
    if (v1)
    {
      TTRObservableViewModelCollection.prune(keeping:)();
      return swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100546034(uint64_t a1, char a2)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10078ADC0);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v25 = *(void *)(v8 + 72);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10066C6F0;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  uint64_t v27 = v12;
  if (a2)
  {
    uint64_t v13 = v4;
    uint64_t v14 = TTRRemindersBoardMainDiffableDataSource.childrenExcludingCollapsed(of:)();
    int64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      char v26 = _swiftEmptyArrayStorage;
      sub_1004D3A98(0, v15, 0);
      uint64_t v16 = v13;
      uint64_t v17 = *(unsigned __int8 *)(v13 + 80);
      uint64_t v24 = v14;
      uint64_t v18 = v14 + ((v17 + 32) & ~v17);
      uint64_t v19 = *(void *)(v16 + 72);
      unint64_t v20 = v26;
      do
      {
        sub_10005FCB8(v18, (uint64_t)v6);
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_10005FD1C((uint64_t)v6);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D3A98(0, v20[2] + 1, 1);
          unint64_t v20 = v26;
        }
        unint64_t v22 = v20[2];
        unint64_t v21 = v20[3];
        if (v22 >= v21 >> 1)
        {
          sub_1004D3A98(v21 > 1, v22 + 1, 1);
          unint64_t v20 = v26;
        }
        _OWORD v20[2] = v22 + 1;
        sub_1000FF4BC((uint64_t)v10, (uint64_t)v20 + v11 + v22 * v25);
        v18 += v19;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v20 = _swiftEmptyArrayStorage;
    }
    sub_10056A048((uint64_t)v20);
    return v27;
  }
  return v12;
}

BOOL sub_1005462F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a2 + 24)
     + direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees;
  swift_beginAccess();
  uint64_t v8 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
  {
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
    BOOL v10 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  }
  else
  {
    sub_1000145EC(v7, (uint64_t)v15);
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    sub_100038D28(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(a1, v11, v12);
    sub_100038CD8((uint64_t)v15);
    uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
    BOOL v10 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13) == 1;
  }
  sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  return v10;
}

uint64_t sub_1005464D8@<X0>(uint64_t a1@<X1>, unsigned int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(unsigned __int8 *)(a1 + 16);
  swift_beginAccess();
  uint64_t v7 = *(void *)(a1 + 48);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a1 + 56);
  *(void *)a3 = (v6 & 0xFFFFFFFFFFFFFEFFLL | ((unint64_t)(a2 & 1) << 8)) ^ 0x100;
  *(void *)(a3 + 8) = v7;
  *(void *)(a3 + 16) = ~(a2 >> 1) & 1;
  *(void *)(a3 + 24) = v8;
  *(unsigned char *)(a3 + 32) = (a2 & 4) == 0;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_100546588()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersBoardSelectionController()
{
  return self;
}

uint64_t sub_100546604()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100546614()
{
  sub_10019B470();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100546688()
{
  return type metadata accessor for TTRIShowSearchResultPresenter();
}

uint64_t type metadata accessor for TTRIShowSearchResultPresenter()
{
  uint64_t result = qword_1007A48A8;
  if (!qword_1007A48A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005466DC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100546728(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 232);
  uint64_t v6 = *(void *)(v5 + 96);
  swift_beginAccess();
  if (*(void *)(v6 + 40))
  {
    uint64_t v7 = *(void *)(v6 + 48);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 24);
    swift_unknownObjectRetain();
    v9(ObjectType, v7);
    swift_unknownObjectRelease();
  }
  sub_100527398(v5);
  v10._object = (void *)0x80000001006ABF60;
  v10._countAndFlagsBits = 0xD000000000000013;
  TTRDeferredAction.drain(reason:)(v10);
  uint64_t v11 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource + 8);
  uint64_t v12 = swift_getObjectType();
  uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 24);
  swift_bridgeObjectRetain();
  return v13(a1, a2, v12, v11);
}

uint64_t sub_10054684C()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v1 = TTRUserDefaults.showingLargeAttachments(forType:)();

  return v1 & 1;
}

void sub_10054688C()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

uint64_t sub_1005468EC()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityListPayload.State();
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v9[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8))
  {
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
    unint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  }
  else
  {
    uint64_t v4 = 0;
    unint64_t v5 = 0xE000000000000000;
  }
  *uint64_t v3 = v4;
  v3[1] = v5;
  swift_storeEnumTagMultiPayload();
  v9[3] = type metadata accessor for TTRUserActivityListPayload();
  void v9[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
  uint64_t v6 = sub_1000394A8(v9);
  sub_100547CF8((uint64_t)v3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityListPayload.State);
  swift_bridgeObjectRetain();
  NSUserActivity.setPayload(_:)();
  return sub_100038CD8((uint64_t)v9);
}

uint64_t sub_1005469F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  __chkstk_darwin(v2);
  uint64_t v4 = (uint64_t *)((char *)&v16[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D0F54();
  uint64_t v8 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
  unint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  if (v10)
  {
    uint64_t v11 = *v9;
    unint64_t v12 = v10;
  }
  else
  {
    uint64_t v11 = 0;
    unint64_t v12 = 0xE000000000000000;
  }
  *uint64_t v4 = v11;
  v4[1] = v12;
  swift_storeEnumTagMultiPayload();
  sub_100547CF8((uint64_t)v4, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  uint64_t v16[3] = v5;
  v16[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  uint64_t v13 = sub_1000394A8(v16);
  sub_100547C30((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  swift_bridgeObjectRetain();
  NSUserActivity.setPayload(_:)();
  sub_100547C98((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_100038CD8((uint64_t)v16);
  return v8;
}

uint64_t sub_100546B98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v30 = a1;
  uint64_t v3 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v3 - 8);
  char v29 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v5 - 8);
  unsigned __int8 v28 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (void *)((char *)v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8))
  {
    uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
    unint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm + 8);
  }
  else
  {
    uint64_t v10 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v12._object = (void *)0x80000001006BE750;
  v13._object = (void *)0x80000001006BE770;
  v12._countAndFlagsBits = 0x1000000000000014;
  v13._countAndFlagsBits = 0xD000000000000018;
  TTRLocalizedString(_:comment:)(v12, v13);
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10066C6F0;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_1000965C8();
  *(void *)(v14 + 32) = v10;
  *(void *)(v14 + 40) = v11;
  swift_bridgeObjectRetain();
  uint64_t v15 = String.init(format:_:)();
  v27[2] = v16;
  uint64_t v27[3] = v15;
  swift_bridgeObjectRelease();
  *uint64_t v9 = v10;
  v9[1] = v11;
  uint64_t v17 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
  type metadata accessor for TTRListColors();
  v27[1] = static TTRListColors.searchResult.getter();
  uint64_t v18 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8);
  if (v20(ObjectType, v18)) {
    swift_unknownObjectRelease();
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v18 + 24))(ObjectType, v18)) {
    swift_unknownObjectRelease();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v18 + 56))(v31, ObjectType, v18);
  sub_10003B6F8((uint64_t)v31, &qword_100791FA0);
  if (v20(ObjectType, v18))
  {
    uint64_t v22 = v21;
    uint64_t v23 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
    swift_unknownObjectRelease();
  }
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v28, 1, 1, v24);
  uint64_t v25 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v29, 1, 1, v25);
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

uint64_t sub_100547020()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100547034()
{
  return type metadata accessor for TTRShowSearchResultViewModelSource();
}

uint64_t type metadata accessor for TTRShowSearchResultViewModelSource()
{
  uint64_t result = qword_1007A5250;
  if (!qword_1007A5250) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100547088()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005470D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v101 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v101);
  uint64_t v100 = (uint64_t *)((char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v6 - 8);
  uint64_t v99 = (uint64_t)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v98 = (char *)&v76 - v9;
  uint64_t v107 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist();
  uint64_t v10 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  id v97 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v95 = *(void *)(v12 - 8);
  uint64_t v96 = v12;
  __chkstk_darwin(v12);
  uint64_t v106 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v14 - 8);
  uint64_t v81 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v16 - 8);
  uint64_t v80 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_10003B754(&qword_10078B5D0);
  __chkstk_darwin(v94);
  id v93 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  char v92 = (unint64_t *)((char *)&v76 - v20);
  __chkstk_darwin(v21);
  uint64_t v105 = (uint64_t *)((char *)&v76 - v22);
  uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v77 = *(void *)(v23 - 8);
  uint64_t v78 = v23;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = REMRemindersListDataView.ListsModel.completedRemindersCount.getter();
  uint64_t v27 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_completedRemindersCount;
  *(void *)uint64_t v27 = v26;
  *(unsigned char *)(v27 + 8) = v28 & 1;
  uint64_t v79 = v25;
  sub_100546B98((uint64_t)v25);
  uint64_t v29 = REMRemindersListDataView.ListsModel.groups.getter();
  *(void *)&v108[0] = _swiftEmptyArrayStorage;
  sub_1004D3A20(0, 0, 0);
  uint64_t v30 = *(void *)&v108[0];
  uint64_t v31 = *(void *)(v29 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v91 = v31;
  uint64_t v82 = a2;
  uint64_t v83 = v3;
  if (v31)
  {
    unint64_t v33 = 0;
    uint64_t v87 = v10 + 32;
    uint64_t v88 = v10 + 16;
    uint64_t v85 = v121;
    uint64_t v86 = v120;
    uint64_t v84 = v10 + 8;
    uint64_t v89 = v29;
    uint64_t v90 = v10;
    while (v33 < *(void *)(v29 + 16))
    {
      unint64_t v34 = v29
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(void *)(v10 + 72) * v33;
      unint64_t v35 = v33;
      uint64_t v37 = v93;
      uint64_t v36 = v94;
      unint64_t v38 = &v93[*(int *)(v94 + 48)];
      *(void *)&long long v103 = *(void *)(v10 + 16);
      uint64_t v39 = v107;
      ((void (*)(char *, unint64_t, uint64_t))v103)(v38, v34, v107);
      id v40 = v92;
      id v41 = (char *)v92 + *(int *)(v36 + 48);
      unint64_t v104 = v35;
      unint64_t *v92 = v35;
      id v42 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v42(v41, v38, v39);
      uint64_t v43 = (uint64_t)v40;
      id v44 = v105;
      sub_100028C3C(v43, (uint64_t)v105, &qword_10078B5D0);
      uint64_t v45 = *(int *)(v36 + 48);
      uint64_t v46 = &v37[v45];
      uint64_t v47 = (char *)v44 + v45;
      uint64_t v48 = *v44;
      ((void (*)(char *, char *, uint64_t))v103)(&v37[v45], v47, v39);
      uint64_t v49 = v97;
      v42(v97, v46, v39);
      uint64_t v50 = (void *)REMRemindersListDataView.ListsModel.Sublist.listColor.getter();
      type metadata accessor for TTRListColors();
      static TTRListColors.color(for:)();
      long long v102 = v122[1];
      long long v103 = v122[0];
      uint64_t v52 = v123;
      uint64_t v51 = v124;
      char v53 = v125;

      uint64_t v54 = REMRemindersListDataView.ListsModel.Sublist.listName.getter();
      uint64_t v56 = v55;
      if (v48) {
        char v57 = 3;
      }
      else {
        char v57 = 2;
      }
      sub_1000D5984((uint64_t)v122, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
      uint64_t *v100 = REMRemindersListDataView.ListsModel.Sublist.listID.getter();
      swift_storeEnumTagMultiPayload();
      v111[0] = v54;
      v111[1] = v56;
      long long v112 = v103;
      long long v113 = v102;
      uint64_t v114 = v52;
      uint64_t v115 = v51;
      char v116 = v53;
      uint64_t v58 = v90;
      __int16 v117 = 0;
      char v118 = 0;
      char v119 = v57;
      uint64_t v59 = v86;
      *uint64_t v86 = v109;
      *((unsigned char *)v59 + 2) = v110;
      char v60 = v85;
      *uint64_t v85 = 0u;
      v60[1] = 0u;
      long long v60[2] = 0u;
      v121[24] = 255;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v111);
      sub_100028C3C((uint64_t)v111, (uint64_t)v126, (uint64_t *)&unk_10079CA00);
      uint64_t v61 = (uint64_t)v98;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
      uint64_t v62 = v99;
      sub_100547C30(v61, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v63 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter();
      sub_1000D5984((uint64_t)v122, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
      sub_100547C98(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v10 = v58;
      uint64_t v64 = v106;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v107);
      sub_100547CF8(v62, v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v65 = v96;
      *(void *)(v64 + *(int *)(v96 + 20)) = v63;
      *(unsigned char *)(v64 + *(int *)(v65 + 24)) = 0;
      sub_10003B6F8((uint64_t)v105, &qword_10078B5D0);
      uint64_t v30 = *(void *)&v108[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3A20(0, *(void *)(v30 + 16) + 1, 1);
        uint64_t v30 = *(void *)&v108[0];
      }
      unint64_t v67 = *(void *)(v30 + 16);
      unint64_t v66 = *(void *)(v30 + 24);
      unint64_t v68 = v104;
      if (v67 >= v66 >> 1)
      {
        sub_1004D3A20(v66 > 1, v67 + 1, 1);
        uint64_t v30 = *(void *)&v108[0];
      }
      unint64_t v33 = v68 + 1;
      *(void *)(v30 + 16) = v67 + 1;
      uint64_t result = sub_100547CF8(v106, v30+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(void *)(v95 + 72) * v67, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      uint64_t v29 = v89;
      if (v91 == v33) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    uint64_t v70 = (uint64_t)v79;
    uint64_t v69 = v80;
    sub_100547C30((uint64_t)v79, v80, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v69, 0, 1, v78);
    uint64_t v71 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v72 = swift_allocObject();
    uint64_t v73 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v74 = (uint64_t)v81;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v81, 1, 1, v73);
    *((void *)&v112 + 1) = v71;
    *(void *)&long long v113 = &off_10074D320;
    v111[0] = v72;
    sub_1000145EC((uint64_t)v111, (uint64_t)v108);
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v30;
    sub_100038ED8(v108, v75 + 24);
    *(void *)(v75 + 64) = v83;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10059DBB0(1, v69, (uint64_t (*)(uint64_t))sub_100051174, v75, v82, 0, v74);
    swift_release();
    sub_100038CD8((uint64_t)v111);
    swift_release();
    sub_10003B6F8(v74, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v69, &qword_100786EF0);
    sub_100547C98(v70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    return swift_release();
  }
  return result;
}

uint64_t sub_100547A48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
  *uint64_t v12 = a1;
  v12[1] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100546B98((uint64_t)v11);
  sub_100547C30((uint64_t)v11, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  sub_1005885DC((uint64_t)v7);
  sub_10003B6F8((uint64_t)v7, &qword_100786EF0);
  return sub_100547C98((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

uint64_t sub_100547BE8()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100547C30(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100547C98(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100547CF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100547D60()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A5800);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A5800);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100547EBC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4 = v3;
  if (*(void *)&v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController])
  {
    if (qword_1007856C8 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100018BF8(v8, (uint64_t)qword_1007A5800);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Search result view controller already exists in TTRISearchControllerResultViewController, will update the existing one instead", v11, 2u);
      swift_slowDealloc();
    }

    return (id)sub_1005487FC(a1, a2, a3);
  }
  uint64_t v59 = &v3[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController];
  if (qword_1007856C8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100018BF8(v13, (uint64_t)qword_1007A5800);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  unsigned __int8 v60 = a3;
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    v62[0] = v17;
    uint64_t v18 = 1702195828;
    if ((a3 & 1) == 0) {
      uint64_t v18 = 0x65736C6166;
    }
    unint64_t v19 = 0xE400000000000000;
    if ((a3 & 1) == 0) {
      unint64_t v19 = 0xE500000000000000;
    }
    if (a3 == 2) {
      uint64_t v20 = 7104878;
    }
    else {
      uint64_t v20 = v18;
    }
    if (a3 == 2) {
      unint64_t v21 = 0xE300000000000000;
    }
    else {
      unint64_t v21 = v19;
    }
    v61[0] = sub_1000385A8(v20, v21, v62);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Creating search result view controller in TTRISearchControllerResultViewController {didFinalizeSearchQuery: %s}", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v22 = &v4[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter];
  sub_100038D28(&v4[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter], *(void *)&v4[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter + 24]);
  uint64_t v23 = (char *)sub_10040A724(v62, a1, a2);
  uint64_t v25 = v24;
  [v4 addChildViewController:v23];
  id result = [v23 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v26 = result;
  id result = [v4 view];
  if (!result)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v27 = result;
  uint64_t v58 = v25;
  [result addSubview:v26];

  [v23 didMoveToParentViewController:v4];
  [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10066C4F0;
  id result = [v4 view];
  if (!result)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v29 = result;
  id v30 = [result topAnchor];

  id v31 = [v26 topAnchor];
  id v32 = [v30 constraintEqualToAnchor:v31];

  *(void *)(v28 + 32) = v32;
  id result = [v4 view];
  if (!result)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unint64_t v33 = result;
  id v34 = [result bottomAnchor];

  id v35 = [v26 bottomAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  *(void *)(v28 + 40) = v36;
  id result = [v4 view];
  if (!result)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v37 = result;
  char v57 = v22;
  id v38 = [result leftAnchor];

  id v39 = [v26 leftAnchor];
  id v40 = [v38 constraintEqualToAnchor:v39];

  *(void *)(v28 + 48) = v40;
  id result = [v4 view];
  if (!result)
  {
LABEL_39:
    __break(1u);
    return result;
  }
  id v41 = result;
  id v42 = self;
  id v43 = [v41 rightAnchor];

  id v44 = [v26 rightAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  *(void *)(v28 + 56) = v45;
  v61[0] = v28;
  specialized Array._endMutation()();
  sub_1001088A8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v42 activateConstraints:isa];

  uint64_t v47 = *(void **)&v23[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  uint64_t v48 = *(void *)&v23[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v48 + 40);
  uint64_t v51 = v4;
  id v52 = v47;
  v50(v4, ObjectType, v48);

  if (v60 != 2) {
    *(unsigned char *)(*sub_100038D28(v62, v62[3])
  }
             + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = v60 & 1;
  char v53 = *(void **)v59;
  *(void *)uint64_t v59 = v23;
  *((void *)v59 + 1) = v58;
  uint64_t v54 = v23;

  sub_1000145EC((uint64_t)v62, (uint64_t)v61);
  uint64_t v55 = (uint64_t)&v51[OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface];
  swift_beginAccess();
  sub_100548ED0((uint64_t)v61, v55);
  swift_endAccess();
  sub_100038D28(v57, *((void *)v57 + 3));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();

  if (Strong) {
    swift_unknownObjectRelease();
  }
  return (id)sub_100038CD8((uint64_t)v62);
}

id sub_1005485E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewController)
    || (uint64_t v3 = v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface,
        swift_beginAccess(),
        sub_100548E08(v3, (uint64_t)&v13),
        uint64_t v4 = *((void *)&v14 + 1),
        id result = (id)sub_100548E70((uint64_t)&v13),
        v4))
  {
    if (qword_1007856C8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100018BF8(v6, (uint64_t)qword_1007A5800);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Disposing search result view controller in TTRISearchControllerResultViewController", v9, 2u);
      swift_slowDealloc();
    }

    if (!*(void *)v2) {
      goto LABEL_12;
    }
    [*(id *)v2 willMoveToParentViewController:0];
    if (!*(void *)v2) {
      goto LABEL_12;
    }
    id result = [*(id *)v2 view];
    if (!result)
    {
      __break(1u);
      return result;
    }
    os_log_type_t v10 = result;
    [result removeFromSuperview];

    if (*(void *)v2)
    {
      [*(id *)v2 removeFromParentViewController];
      id v11 = *(id *)v2;
    }
    else
    {
LABEL_12:
      id v11 = 0;
    }
    *(void *)uint64_t v2 = 0;
    *(void *)(v2 + 8) = 0;

    uint64_t v15 = 0;
    long long v13 = 0u;
    long long v14 = 0u;
    uint64_t v12 = v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface;
    swift_beginAccess();
    sub_100548ED0((uint64_t)&v13, v12);
    swift_endAccess();
    sub_100038D28((void *)(v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter), *(void *)(v1 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter + 24));
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result) {
      return (id)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1005487FC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = v4 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface;
  swift_beginAccess();
  sub_100548E08(v8, (uint64_t)&v27);
  if (!v28) {
    return sub_100548E70((uint64_t)&v27);
  }
  sub_100038ED8(&v27, (uint64_t)v29);
  if (qword_1007856C8 != -1) {
    swift_once();
  }
  int v9 = a3;
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_1007A5800);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    long long v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)long long v13 = 136315138;
    *(void *)&long long v27 = v14;
    uint64_t v15 = 1702195828;
    if ((v9 & 1) == 0) {
      uint64_t v15 = 0x65736C6166;
    }
    unint64_t v16 = 0xE400000000000000;
    if ((v9 & 1) == 0) {
      unint64_t v16 = 0xE500000000000000;
    }
    if (v9 == 2) {
      uint64_t v17 = 7104878;
    }
    else {
      uint64_t v17 = v15;
    }
    if (v9 == 2) {
      unint64_t v18 = 0xE300000000000000;
    }
    else {
      unint64_t v18 = v16;
    }
    sub_1000385A8(v17, v18, (uint64_t *)&v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Updating search result view controller in TTRISearchControllerResultViewController {didFinalizeSearchQuery: %s}", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v19 = *(void *)(*sub_100038D28(v29, v30)
                  + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 16))(ObjectType, v19);
  if (!v22)
  {
    if (!a2)
    {
LABEL_36:
      int v25 = 0;
      if (v9 != 2) {
        goto LABEL_31;
      }
LABEL_24:
      if (!v25) {
        return sub_100038CD8((uint64_t)v29);
      }
LABEL_32:
      sub_100038D28((void *)(v4 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter), *(void *)(v4 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultViewPresenter + 24));
      if (swift_unknownObjectWeakLoadStrong()) {
        swift_unknownObjectRelease();
      }
      return sub_100038CD8((uint64_t)v29);
    }
LABEL_30:
    sub_100038D28(v29, v30);
    sub_100546728(a1, a2);
    int v25 = 1;
    if (v9 != 2) {
      goto LABEL_31;
    }
    goto LABEL_24;
  }
  if (!a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (v21 == a1 && v22 == a2)
  {
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  int v25 = 0;
  if ((v24 & 1) == 0) {
    goto LABEL_30;
  }
  if (v9 == 2) {
    goto LABEL_24;
  }
LABEL_31:
  *(unsigned char *)(*sub_100038D28(v29, v30) + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = v9 & 1;
  if (v25) {
    goto LABEL_32;
  }
  return sub_100038CD8((uint64_t)v29);
}

id sub_100548B84()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRISearchResultContainerViewController();
  return [super dealloc];
}

void sub_100548C74()
{
  id v1 = [v0 presentingViewController];
  if (v1)
  {
    objc_super v2 = v1;
    id v3 = [v1 navigationItem];

    id v8 = [v3 searchController];
    if (v8)
    {
      id v4 = [v8 searchBar];
      unsigned int v5 = [v4 isFirstResponder];

      if (v5)
      {
        uint64_t v6 = (uint64_t)v0 + OBJC_IVAR____TtC9Reminders39TTRISearchResultContainerViewController_resultModuleInterface;
        swift_beginAccess();
        sub_100548E08(v6, (uint64_t)v11);
        if (v12)
        {
          sub_1000145EC((uint64_t)v11, (uint64_t)v10);
          sub_100548E70((uint64_t)v11);
          *(unsigned char *)(*sub_100038D28(v10, v10[3])
                   + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = 1;
          sub_100038CD8((uint64_t)v10);
        }
        else
        {
          sub_100548E70((uint64_t)v11);
        }
        id v7 = [v8 searchBar];
        [v7 resignFirstResponder];
      }
      else
      {
      }
    }
  }
}

uint64_t sub_100548E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A5858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100548E70(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007A5858);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100548ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A5858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100548F38()
{
  sub_1000499D4(v0 + 16);
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 48);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIDebugMenuEventHandler()
{
  return self;
}

uint64_t initializeWithCopy for TTRIBoardColumnSelectionRequest(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnSelectionRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnSelectionRequest(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnSelectionRequest()
{
  return &type metadata for TTRIBoardColumnSelectionRequest;
}

uint64_t sub_1005490F4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_10054918C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_100549260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_1005492C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_100549330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_100549398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_100549400(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_100549590(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1005497D0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          unint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TTRIBoardColumnSelectionRequest.Skippable()
{
  return sub_10003BC54();
}

char *sub_100549810(uint64_t *a1, void **a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v106 = a1;
  uint64_t v107 = a5;
  LODWORD(v100) = a4;
  uint64_t v98 = a3;
  uint64_t v6 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v101 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v102 = (char *)v90 - v9;
  uint64_t v105 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v105);
  uint64_t v111 = (uint64_t)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRListType.SortingCapability();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v99 = (uint64_t)v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v110 = (uint64_t)v90 - v14;
  uint64_t v15 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  __chkstk_darwin(v15);
  uint64_t v95 = (char *)v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  *(void *)&long long v96 = *(void *)(v109 - 8);
  uint64_t v17 = __chkstk_darwin(v109);
  uint64_t v19 = (char *)v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v108 = (char *)v90 - v20;
  uint64_t v104 = type metadata accessor for REMSmartList.NonCustom();
  uint64_t v21 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v23 = (char *)v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v90 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (void **)((char *)v90 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002F216C((uint64_t)a2, (uint64_t)v29, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v115[0] = _swiftEmptyArrayStorage;
  sub_1000A13DC();
  sub_10003B754(&qword_100789188);
  sub_1000A1434();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v97 = (char *)v29;
  uint64_t v30 = v29;
  uint64_t v31 = v104;
  sub_100055D48(v30, (uint64_t)v26, (void *)1, (uint64_t)v115);
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, enum case for REMSmartList.NonCustom.tagged(_:), v31);
  id v32 = (void *)REMStore.fetchOrCreateNonCustomSmartList(withType:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v31);
  if (v32)
  {
    *(void *)&v114[0] = sub_100106818();
    *((void *)&v114[0] + 1) = &protocol witness table for REMSmartList;
    unint64_t v33 = v32;
  }
  else
  {
    unint64_t v33 = 0;
    v114[0] = 0u;
    long long v113 = 0u;
  }
  v90[1] = v32 != 0;
  long long v112 = v32;
  id v91 = v33;
  static REMRemindersListDataView.SortingStyle.fallbackForTaggedSmartList.getter();
  id v34 = v108;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
  uint64_t v35 = v96;
  uint64_t v36 = v109;
  long long v103 = *(void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v104 = v96 + 8;
  v103(v19, v109);
  sub_10003B6F8((uint64_t)&v112, &qword_100787480);
  char v92 = a2;
  uint64_t v37 = *a2;
  (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v95, v98, v94);
  id v38 = *(void (**)(char *, char *, uint64_t))(v35 + 16);
  v38(v19, v34, v36);
  type metadata accessor for TTRShowTaggedDataModelSource();
  swift_allocObject();
  id v39 = v37;
  uint64_t v40 = TTRShowTaggedDataModelSource.init(store:initialHashtagLabels:countCompleted:sortingStyle:canChangeSortingStyle:)();
  v38(v19, v34, v36);
  uint64_t v41 = v110;
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)();
  id v42 = v115[0];
  uint64_t v43 = v99;
  sub_1002F216C(v41, v99, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  type metadata accessor for TTRShowTaggedViewModelSource();
  id v44 = (void *)swift_allocObject();
  id v45 = v91;
  swift_retain();
  id v46 = v42;
  uint64_t v47 = sub_10054A4BC(v32, v40, v46, v43, 0, (v100 & 1) == 0, v44);
  id v100 = v45;

  swift_release();
  uint64_t v48 = (uint64_t)v97;
  sub_1002F216C((uint64_t)v92, (uint64_t)v97, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100057134((uint64_t)v115, (uint64_t)&v112);
  swift_retain();
  uint64_t v99 = v47;
  sub_100056B24(v48, (uint64_t)&v112, v47, (uint64_t)&off_1007512D8, v111);
  uint64_t v49 = v102;
  sub_100056CAC((uint64_t)v102);
  uint64_t v98 = type metadata accessor for TTRIShowTaggedPresenter();
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = (uint64_t *)(v50 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource);
  *uint64_t v51 = v40;
  v51[1] = (uint64_t)&protocol witness table for TTRShowTaggedDataModelSource;
  long long v96 = v49[4];
  *(_OWORD *)(v50 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule) = v96;
  uint64_t v52 = (uint64_t)v101;
  sub_1002F216C((uint64_t)v49, (uint64_t)v101, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  id v97 = (char *)v40;
  swift_retain();
  uint64_t v53 = v107;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v54 = sub_1003585DC(v52, v53, v50);
  sub_1002F21D4((uint64_t)v49, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v55 = *(void *)(v54 + 144);
  uint64_t ObjectType = swift_getObjectType();
  char v57 = *(uint64_t (**)(uint64_t, uint64_t))(v55 + 104);
  swift_retain();
  if (v57(ObjectType, v55))
  {
    uint64_t v59 = v58;
    uint64_t v60 = swift_getObjectType();
    LOBYTE(v59) = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 16))(v60, v59);
    swift_release();
    swift_unknownObjectRelease();
    char v61 = v59 & 1;
  }
  else
  {
    swift_release();
    char v61 = 0;
  }
  uint64_t v62 = sub_1001D0C84(v61, v54);
  uint64_t v101 = v63;
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  *(void *)&long long v96 = swift_getObjectType();
  *(void *)(v54 + 24) = *(void *)(v67 + 8);
  uint64_t v107 = v65;
  swift_unknownObjectWeakAssign();
  uint64_t v68 = *(void *)(v54 + 144);
  uint64_t v69 = swift_getObjectType();
  uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v68 + 104);
  swift_retain_n();
  uint64_t v71 = v62;
  if (v70(v69, v68))
  {
    uint64_t v73 = v72;
    uint64_t v74 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v73 + 16))(v74, v73);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v75 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  long long v102 = v71;
  uint64_t v76 = (void *)sub_10035A06C(v54);
  swift_release();

  uint64_t v77 = *(void (**)(void *, _UNKNOWN **, void, uint64_t))(v67 + 32);
  uint64_t v101 = v76;
  v77(v76, &off_1007464D0, v96, v67);
  uint64_t v78 = (char *)v115[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v78 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v79 = (char *)v115[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v79 + 1) = &protocol witness table for TTRShowTaggedDataModelSource;
  uint64_t v80 = (uint64_t)v97;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v81 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v80 + 416);
  uint64_t v82 = swift_retain();
  v81(v82, &off_10073A650);
  swift_retain();
  uint64_t v83 = swift_retain();
  sub_1005B1F9C(v83, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v84 = v111;
  *(void *)(*(void *)(v111 + *(int *)(v105 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v116, (uint64_t)&v112);
  *(_OWORD *)((char *)v114 + 8) = v117;
  *(_OWORD *)((char *)&v114[1] + 8) = v118;
  *(void *)(v117 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)&v112);
  sub_100038DC0((uint64_t)v119, (uint64_t)&v112);
  uint64_t v85 = v120;
  *((void *)&v114[0] + 1) = v119[4];
  *(void *)&v114[1] = v120;
  uint64_t v86 = swift_getObjectType();
  uint64_t v87 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v85 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v87(v54, &off_10073CA90, v86, v85);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)&v112);
  uint64_t v88 = v106;
  v106[3] = v98;
  v88[4] = (uint64_t)&off_100742E70;
  *uint64_t v88 = v54;

  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v84, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_1002F21D4(v110, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  v103(v108, v109);
  sub_100057B44(v115);
  return v101;
}

id TTRIShowTaggedAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTaggedAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowTaggedAssembly()
{
  return self;
}

id TTRIShowTaggedAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTaggedAssembly();
  return [super dealloc];
}

uint64_t sub_10054A4BC(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5, int a6, void *a7)
{
  int v43 = a6;
  uint64_t v12 = *a7;
  id v44 = a3;
  uint64_t v45 = v12;
  uint64_t v46 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v13 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v15 = &v42[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v42[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = &v42[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)((char *)a7
            + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  uint64_t v22 = OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList;
  *(void *)((char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList) = 0;
  uint64_t v23 = (char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_completedRemindersCount;
  *(void *)uint64_t v23 = 0;
  v23[8] = 1;
  *((unsigned char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  uint64_t v24 = *(void **)((char *)a7 + v22);
  *(void *)((char *)a7 + v22) = a1;
  swift_retain();
  id v25 = a1;

  uint64_t v26 = (void *)((char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource);
  *uint64_t v26 = a2;
  v26[1] = (uint64_t)&protocol witness table for TTRShowTaggedDataModelSource;
  *((unsigned char *)a7
  + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasDefaultNewReminderButtonWhenSelectingAllTags) = a5;
  *((unsigned char *)a7 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_canShowHashtagLabelSelector) = v43;
  swift_retain();
  swift_release();
  sub_1002F216C(a4, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain();
  uint64_t v27 = sub_100359DC4(a2, (uint64_t)v44, (uint64_t)v21, (uint64_t)a7);
  swift_retain();
  sub_1000FFF48((uint64_t)v18);
  uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v18, 0, 1, v28);
  sub_1005885DC((uint64_t)v18);
  sub_10003B6F8((uint64_t)v18, &qword_100786EF0);
  uint64_t v29 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v30 = v29;
  static REMAnalyticsManager.shared.getter();
  uint64_t v31 = sub_10003B754(&qword_10078D258);
  id v32 = (uint64_t *)&v15[*(int *)(v31 + 48)];
  unint64_t v33 = (uint64_t *)&v15[*(int *)(v31 + 80)];
  uint64_t v34 = enum case for REMRemindersOpenUserOperation.SmartListType.tagged(_:);
  uint64_t v35 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v15, v34, v35);
  uint64_t v36 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  uint64_t v37 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 104))(v15, v36, v37);
  *id v32 = TTRUserDefaults.activitySessionId.getter();
  v32[1] = v38;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *unint64_t v33 = _typeName(_:qualified:)();
  v33[1] = v39;
  uint64_t v40 = v46;
  (*(void (**)(unsigned char *, void, uint64_t))(v13 + 104))(v15, enum case for REMAnalyticsEvent.openListUserOperation(_:), v46);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1002F21D4(a4, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v40);
  return v27;
}

ValueMetadata *type metadata accessor for TTRILearnMoreAssembly()
{
  return &type metadata for TTRILearnMoreAssembly;
}

void sub_10054A924(char a1, void *a2, uint64_t *a3)
{
  uint64_t v5 = *a3;
  v17[3] = v5;
  v17[4] = &off_100736F40;
  v17[0] = a3;
  type metadata accessor for TTRILearnMorePresenter();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v7 = sub_100038E88((uint64_t)v17, v5);
  __chkstk_darwin(v7);
  uint64_t v9 = (void *)((char *)&v17[-1] - v8);
  (*(void (**)(char *))(v10 + 16))((char *)&v17[-1] - v8);
  uint64_t v11 = *v9;
  v6[9] = v5;
  v6[10] = &off_100736F40;
  v6[6] = v11;
  _OWORD v6[3] = 0;
  swift_unknownObjectWeakInit();
  v6[5] = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100038CD8((uint64_t)v17);
  if (a1) {
    type metadata accessor for TTRILearnMoreTagsViewController();
  }
  else {
    type metadata accessor for TTRILearnMoreCSLViewController();
  }
  v17[0] = v6;
  v17[1] = &off_10073AE00;
  static TTRTypedController<>.instantiateFromStoryboard(with:)();
  uint64_t v12 = v16;
  v6[5] = 0;
  swift_unknownObjectWeakAssign();
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10066D470;
  *(void *)(v13 + 32) = v12;
  v17[0] = v13;
  specialized Array._endMutation()();
  sub_10000A440();
  id v14 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a2 setViewControllers:isa animated:1];
  swift_release();
}

void *sub_10054AB90(int a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v53 = a7;
  uint64_t v58 = a5;
  __int16 v9 = a3;
  LODWORD(v61) = a3 & 0x10000;
  uint64_t v12 = type metadata accessor for Calendar();
  uint64_t v54 = *(void *)(v12 - 8);
  uint64_t v55 = v12;
  __chkstk_darwin(v12);
  id v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v15 - 8);
  uint64_t v56 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_100791D08);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for DateComponents();
  uint64_t v52 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a4 + 16) && (unint64_t v23 = sub_10035C3B4(a1), (v24 & 1) != 0)) {
    uint64_t v57 = *(void *)(*(void *)(a4 + 56) + 8 * v23);
  }
  else {
    uint64_t v57 = 0;
  }
  int v60 = a1;
  uint64_t v59 = a6;
  if (!v61) {
    goto LABEL_6;
  }
  if (a2)
  {
    id v27 = a2;
LABEL_9:
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    goto LABEL_15;
  }
  TTRRemindersListPostponeType.dateChangeType.getter();
  uint64_t v28 = type metadata accessor for TTRDateChangeType();
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48))(v19, 1, v28) != 1)
  {
    if (swift_getEnumCaseMultiPayload() > 1)
    {
LABEL_6:
      uint64_t v25 = 0;
      uint64_t v26 = 0;
      a2 = 0;
      goto LABEL_15;
    }
    uint64_t v29 = v52;
    (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v22, v19, v20);
    a2 = (void *)TTRIDateIconGenerator.generateDueDateMenuIcon(for:)();
    id v30 = [self currentCalendar];
    static Calendar._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v31 = (uint64_t)v56;
    Calendar.date(from:)();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v55);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v22, v20);
    uint64_t v32 = type metadata accessor for Date();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32) == 1)
    {
      sub_1001089E0(v31);
      goto LABEL_9;
    }
    uint64_t v34 = Date.rem_localizedAccessibilityDueDateIconString.getter();
    uint64_t v35 = v31;
    uint64_t v25 = v34;
    uint64_t v26 = v36;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
  }
LABEL_15:
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  char v37 = v60;
  TTRRemindersListPostponeType.localizedDescription.getter();
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 16) = v9 & 1;
  *(unsigned char *)(v38 + 17) = HIBYTE(v9) & 1;
  *(unsigned char *)(v38 + 18) = BYTE2(v61);
  uint64_t v39 = v58;
  uint64_t v40 = v59;
  *(void *)(v38 + 24) = a4;
  *(void *)(v38 + 32) = v39;
  *(void *)(v38 + 40) = v40;
  *(unsigned char *)(v38 + 48) = v37;
  id v61 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v41 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (v26)
  {
    sub_10003B754((uint64_t *)&unk_100791C60);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_10066C680;
    *(void *)(v42 + 32) = TTRRemindersListPostponeType.localizedDescription.getter();
    *(void *)(v42 + 40) = v43;
    *(void *)(v42 + 48) = v25;
    *(void *)(v42 + 56) = v26;
    uint64_t v62 = v42;
    TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    sub_10003B754(&qword_10078E670);
    sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v44 = v41;
    NSString v45 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v44 setAccessibilityLabel:v45];

    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = xmmword_10066C6F0;
    id v47 = v44;
    *(void *)(v46 + 32) = TTRRemindersListPostponeType.localizedDescription.getter();
    *(void *)(v46 + 40) = v48;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v47 setAccessibilityUserInputLabels:isa];
  }
  return v41;
}

uint64_t sub_10054B1D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(a3 + 32);
  uint64_t v7 = swift_allocObject();
  long long v8 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v7 + 48) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v7 + 64) = v8;
  long long v9 = *(_OWORD *)(a3 + 80);
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a3 + 64);
  *(_OWORD *)(v7 + 96) = v9;
  long long v10 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v7 + 16) = *(_OWORD *)a3;
  *(_OWORD *)(v7 + 32) = v10;
  *(void *)(v7 + 112) = a1;
  *(void *)(v7 + 120) = a2;
  sub_10054E014(a3);
  swift_retain();
  v6(sub_10054E108, v7);

  return swift_release();
}

uint64_t sub_10054B284(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v19 = a3;
  uint64_t v5 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchPredicate();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  *uint64_t v12 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v10 + 104))(v12, enum case for DispatchPredicate.onQueue(_:), v9);
  char v13 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v10 + 8))(v12, v9);
  if ((v13 & 1) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v20 = *(void *)(a2 + 24);
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_10035ED0C(v14);
  sub_10006A2C4((uint64_t)&v20);
  uint64_t v15 = REMHashtagLabelCollection.init(labels:)();
  __chkstk_darwin(v15);
  *(&v19 - 2) = (void (*)(uint64_t))v8;
  *(&v19 - 1) = (void (*)(uint64_t))a2;
  unint64_t v16 = (unint64_t)sub_1005884D8((void (*)(uint64_t *__return_ptr, void *))sub_10054E114, (uint64_t)(&v19 - 4), a1);
  if (v16 >> 62)
  {
LABEL_6:
    sub_1000368FC(0, &qword_10079AF80);
    uint64_t v17 = _bridgeCocoaArray<A>(_:)();
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_1000368FC(0, &qword_10079AF80);
  uint64_t v17 = v16;
LABEL_4:
  swift_bridgeObjectRelease();
  v19(v17);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_10054B564@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v6 = *a1;
  uint64_t v5 = (void *)a1[1];
  v7._countAndFlagsBits = *a1;
  v7._object = v5;
  Swift::String_optional v8 = REMHashtagLabelCollection.label(matchingHashtagName:)(v7);
  if (v8.value._object)
  {
    uint64_t v9 = *(void *)(a2 + 24);
    if (*(void *)(v9 + 16)
      && (unint64_t v10 = sub_100009B88(v8.value._countAndFlagsBits, (uint64_t)v8.value._object), (v11 & 1) != 0))
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
    }
    else
    {
      uint64_t v12 = 0;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = 0;
  }
  static String.hashtagTokenDefaultPrefix.getter();
  swift_bridgeObjectRetain();
  v13._countAndFlagsBits = v6;
  v13._object = v5;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  if (v12)
  {
    if (*(void *)(a2 + 8) == v12) {
      uint64_t v12 = 1;
    }
    else {
      uint64_t v12 = 2;
    }
  }
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v14 = swift_allocObject();
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v14 + 48) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v14 + 64) = v15;
  long long v16 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v14 + 80) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v14 + 96) = v16;
  long long v17 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v14 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(v14 + 32) = v17;
  *(void *)(v14 + 112) = v6;
  *(void *)(v14 + 120) = v5;
  *(void *)(v14 + 128) = v12;
  sub_10054E014(a2);
  swift_bridgeObjectRetain();
  uint64_t result = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  *a3 = result;
  return result;
}

uint64_t sub_10054B6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_10003B754(&qword_100797A28);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10066C6F0;
  *(void *)(v9 + 32) = *(void *)(a3 + 8);
  uint64_t v10 = TTRParticipantAvatarRenderConfiguration.init(width:height:scales:rightToLeft:)();
  double v12 = v11;
  double v14 = v13;
  uint64_t v15 = v10;
  char v17 = v16;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, void, uint64_t (*)(uint64_t), uint64_t, double, double))(a3 + 32);
  uint64_t v19 = *(void *)a3;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a4;
  *(unsigned char *)(v20 + 24) = a5;
  long long v21 = *(_OWORD *)(a3 + 16);
  *(_OWORD *)(v20 + 32) = *(_OWORD *)a3;
  *(_OWORD *)(v20 + 48) = v21;
  long long v22 = *(_OWORD *)(a3 + 48);
  *(_OWORD *)(v20 + 64) = *(_OWORD *)(a3 + 32);
  *(_OWORD *)(v20 + 80) = v22;
  *(void *)(v20 + 96) = a1;
  *(void *)(v20 + 104) = a2;
  swift_bridgeObjectRetain();
  sub_10054F544(a3);
  swift_retain();
  v18(v19, v15, v17 & 1, sub_10054F694, v20, v12, v14);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_10054B84C(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void (*a5)(void *))
{
  uint64_t v5 = a5;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_10054F544((uint64_t)a4);
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v10 = (long long *)(a1 + 32);
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    do
    {
      long long v19 = v10[5];
      long long v31 = v10[4];
      long long v32 = v19;
      long long v33 = v10[6];
      long long v20 = v10[1];
      long long v27 = *v10;
      long long v28 = v20;
      long long v21 = v10[3];
      long long v29 = v10[2];
      long long v30 = v21;
      if (*(void *)(a2 + 16))
      {
        long long v22 = (void *)v27;
        sub_1001E2748((uint64_t)&v27);
        id v23 = v22;
        sub_10035C4E8(v22);
      }
      else
      {
        sub_1001E2748((uint64_t)&v27);
      }
      TTRAssigneeCandidateData.displayDescription.getter();
      double v11 = (void *)*((void *)&v33 + 1);
      double v12 = (_OWORD *)swift_allocObject();
      long long v13 = a4[1];
      v12[1] = *a4;
      v12[2] = v13;
      long long v14 = a4[3];
      v12[3] = a4[2];
      v12[4] = v14;
      long long v15 = v32;
      v12[9] = v31;
      v12[10] = v15;
      v12[11] = v33;
      long long v16 = v28;
      v12[5] = v27;
      v12[6] = v16;
      long long v17 = v30;
      v12[7] = v29;
      v12[8] = v17;
      sub_10054F544((uint64_t)a4);
      id v18 = v11;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v10 += 7;
      --v6;
    }
    while (v6);
    sub_10054F744((uint64_t)a4);
    swift_bridgeObjectRelease();
    uint64_t v5 = a5;
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    char v24 = (void *)_bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    char v24 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v5(v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10054BB20(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = a3[11];
  uint64_t v4 = a3[13];
  uint64_t v5 = a3[12] & 1;
  uint64_t v6 = *(uint64_t (**)(uint64_t *))(a2 + 48);
  uint64_t v8 = *a3;
  long long v9 = *(_OWORD *)(a3 + 1);
  long long v10 = *(_OWORD *)(a3 + 3);
  long long v11 = *(_OWORD *)(a3 + 5);
  long long v12 = *(_OWORD *)(a3 + 7);
  long long v13 = *(_OWORD *)(a3 + 9);
  uint64_t v14 = v3;
  uint64_t v15 = v5;
  uint64_t v16 = v4;
  return v6(&v8);
}

uint64_t sub_10054BB9C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v6 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      uint64_t v8 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8 >= a2) {
        goto LABEL_4;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v8 < v4) {
    goto LABEL_35;
  }
LABEL_4:
  uint64_t v8 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v7 = v6 >> 62;
  if (!(v6 >> 62))
  {
    uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = v9 - v8;
    if (!__OFSUB__(v9, v8)) {
      goto LABEL_7;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v28 + v32;
    if (!__OFADD__(v28, v32)) {
      goto LABEL_9;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8)) {
    goto LABEL_39;
  }
LABEL_7:
  uint64_t v32 = v10;
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_40;
  }
  uint64_t v11 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v10;
  if (__OFADD__(v11, v10)) {
    goto LABEL_42;
  }
LABEL_9:
  unint64_t v13 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v13;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    uint64_t v31 = v5;
    uint64_t v8 = v4;
    uint64_t v4 = v9;
    uint64_t v9 = v7;
    uint64_t v7 = v6;
    if (!(v13 >> 62))
    {
LABEL_14:
      swift_bridgeObjectRetain();
      *uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v15 = *v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v6 = v7;
      uint64_t v7 = v9;
      uint64_t v9 = v4;
      uint64_t v4 = v8;
      uint64_t v5 = v31;
      goto LABEL_15;
    }
LABEL_43:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v16 = v15 + 32;
  uint64_t v17 = v15 + 32 + 8 * v5;
  sub_10003B754(&qword_10078E370);
  swift_arrayDestroy();
  uint64_t v18 = v32;
  if (!v32) {
    goto LABEL_25;
  }
  if (!((unint64_t)*v3 >> 62))
  {
    uint64_t v19 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v20 = v19 - v4;
    if (!__OFSUB__(v19, v4)) {
      goto LABEL_18;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v18 = v32;
  uint64_t v20 = v29 - v4;
  if (__OFSUB__(v29, v4)) {
    goto LABEL_46;
  }
LABEL_18:
  if (v20 < 0)
  {
LABEL_51:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  long long v21 = (char *)(v17 + 8 * v9);
  long long v22 = (char *)(v16 + 8 * v4);
  if (v21 != v22 || v21 >= &v22[8 * v20])
  {
    memmove(v21, v22, 8 * v20);
    uint64_t v18 = v32;
  }
  if ((unint64_t)*v3 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v24 = v30 + v32;
    if (!__OFADD__(v30, v32)) {
      goto LABEL_24;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v23 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v24 = v23 + v18;
  if (__OFADD__(v23, v18)) {
    goto LABEL_49;
  }
LABEL_24:
  *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v24;
LABEL_25:
  if (v9 >= 1)
  {
    if (v7)
    {
      unint64_t v25 = swift_bridgeObjectRetain();
      uint64_t v26 = sub_10035E1C8(v25);
      swift_bridgeObjectRelease();
      sub_10054D058((uint64_t)(v26 + 4), v26[2], v9, v17, &qword_10078E370);
      swift_release();
      goto LABEL_30;
    }
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) == v9)
    {
      swift_arrayInitWithCopy();
      goto LABEL_30;
    }
    goto LABEL_50;
  }
LABEL_30:
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10054BFC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10054BFF0(a1, a2, a3, &qword_100788D80);
}

uint64_t sub_10054BFD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10054C868(a1, a2, a3, &qword_10078E370);
}

uint64_t sub_10054BFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_10054CB6C(a1, a2, a3, a4, a5, a6, &qword_10078E370);
}

uint64_t sub_10054BFF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = a4;
    uint64_t v9 = a3;
    uint64_t v6 = a2;
    uint64_t v8 = a1;
    if (!(*v5 >> 62))
    {
      if (*(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v6) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v6 - v8;
  if (__OFSUB__(v6, v8))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v4;
    if (!__OFADD__(v25, v4)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v29 = v7;
  if (*v5 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v4;
  if (__OFADD__(v11, v4)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v5 = v13;
  uint64_t v28 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v5 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v16 = (void *)(v15 + 32 + 8 * v8);
  sub_1000368FC(0, v29);
  swift_arrayDestroy();
  if (v4)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v6;
      if (!__OFSUB__(v26, v6))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v6);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v4;
          if (!__OFADD__(v21, v4))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v4;
        if (!__OFADD__(v27, v4)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v6;
      if (!__OFSUB__(v17, v6)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v16 = v28;

  return specialized Array._endMutation()();
}

char *sub_10054C2F8(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_100570A70(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[16 * a1 + 32];
  sub_10003B754(&qword_1007A59B8);
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v18 = *((void *)v6 + 2);
  BOOL v19 = __OFSUB__(v18, a2);
  uint64_t v20 = v18 - a2;
  if (v19) {
    goto LABEL_26;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    uint64_t result = v16 + 16;
    uint64_t v21 = &v6[16 * a2 + 32];
    if (v16 + 16 != v21 || result >= &v21[16 * v20]) {
      uint64_t result = (char *)memmove(result, v21, 16 * v20);
    }
    uint64_t v22 = *((void *)v6 + 2);
    BOOL v19 = __OFADD__(v22, v10);
    uint64_t v23 = v22 + v10;
    if (!v19)
    {
      *((void *)v6 + 2) = v23;
LABEL_20:
      *(void *)uint64_t v16 = a3;
      *((void *)v16 + 1) = a4;
      *uint64_t v4 = v6;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10054C484(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v8 = a3;
    uint64_t v4 = a2;
    uint64_t v5 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v27 < v4) {
    goto LABEL_35;
  }
LABEL_4:
  uint64_t v6 = v4 - v5;
  if (__OFSUB__(v4, v5))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v7 = v8 >> 62;
  if (!(v8 >> 62))
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v10 = v9 - v6;
    if (!__OFSUB__(v9, v6)) {
      goto LABEL_7;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    swift_bridgeObjectRetain();
    uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v28 + v33;
    if (!__OFADD__(v28, v33)) {
      goto LABEL_9;
    }
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
LABEL_37:
  swift_bridgeObjectRetain();
  uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v10 = v9 - v6;
  if (__OFSUB__(v9, v6)) {
    goto LABEL_39;
  }
LABEL_7:
  uint64_t v33 = v10;
  if (*v3 >> 62) {
    goto LABEL_40;
  }
  uint64_t v11 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v10;
  if (__OFADD__(v11, v10)) {
    goto LABEL_42;
  }
LABEL_9:
  unint64_t v13 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v13;
  unint64_t v31 = v7;
  unint64_t v32 = v8;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_14:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_15;
    }
LABEL_43:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v16 = v15 + 32 + 8 * v5;
  sub_10003B754((uint64_t *)&unk_100788D30);
  swift_arrayDestroy();
  uint64_t v17 = v33;
  if (!v33) {
    goto LABEL_25;
  }
  if (!(v13 >> 62))
  {
    uint64_t v18 = *(void *)(v15 + 16);
    uint64_t v19 = v18 - v4;
    if (!__OFSUB__(v18, v4)) {
      goto LABEL_18;
    }
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v17 = v33;
  uint64_t v19 = v29 - v4;
  if (__OFSUB__(v29, v4)) {
    goto LABEL_46;
  }
LABEL_18:
  if (v19 < 0)
  {
LABEL_51:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v20 = (char *)(v16 + 8 * v9);
  uint64_t v21 = (char *)(v15 + 32 + 8 * v4);
  if (v20 != v21 || v20 >= &v21[8 * v19])
  {
    memmove(v20, v21, 8 * v19);
    uint64_t v17 = v33;
  }
  if (v13 >> 62)
  {
LABEL_47:
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v23 = v30 + v33;
    if (!__OFADD__(v30, v33)) {
      goto LABEL_24;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
    goto LABEL_51;
  }
  uint64_t v22 = *(void *)(v15 + 16);
  uint64_t v23 = v22 + v17;
  if (__OFADD__(v22, v17)) {
    goto LABEL_49;
  }
LABEL_24:
  *(void *)(v15 + 16) = v23;
LABEL_25:
  if (v9 >= 1)
  {
    if (v31)
    {
      unint64_t v24 = swift_bridgeObjectRetain();
      uint64_t v25 = sub_10035E1C8(v24);
      swift_bridgeObjectRelease();
      sub_10054D058((uint64_t)(v25 + 4), v25[2], v9, v16, (uint64_t *)&unk_100788D30);
      swift_release();
      goto LABEL_30;
    }
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) == v9)
    {
      swift_arrayInitWithCopy();
      goto LABEL_30;
    }
    goto LABEL_50;
  }
LABEL_30:
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10054C85C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10054C868(a1, a2, a3, (uint64_t *)&unk_100788D30);
}

uint64_t sub_10054C868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a4;
    uint64_t v8 = a3;
    uint64_t v5 = a2;
    uint64_t v7 = a1;
    if (!(*v4 >> 62))
    {
      if (*(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v24 < v5) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v10 = v5 - v7;
  if (__OFSUB__(v5, v7))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v9 = 1 - v10;
  if (__OFSUB__(1, v10))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v12 = v25 + v9;
    if (!__OFADD__(v25, v9)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v4 >> 62) {
    goto LABEL_32;
  }
  uint64_t v11 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v12 = v11 + v9;
  if (__OFADD__(v11, v9)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v13 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v13;
  uint64_t v28 = v8;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v13 & 0x8000000000000000) != 0
    || (v13 & 0x4000000000000000) != 0
    || (uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8, v12 > *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v13 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v13 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v4 = v13;
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v16 = (void *)(v15 + 32 + 8 * v7);
  sub_10003B754(v6);
  swift_arrayDestroy();
  if (v9)
  {
    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v26 - v5;
      if (!__OFSUB__(v26, v5))
      {
LABEL_17:
        if (v18 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v19 = (char *)(v16 + 1);
        uint64_t v20 = (char *)(v15 + 32 + 8 * v5);
        if (v16 + 1 != (void *)v20 || v19 >= &v20[8 * v18]) {
          memmove(v19, v20, 8 * v18);
        }
        if (!(v13 >> 62))
        {
          uint64_t v21 = *(void *)(v15 + 16);
          uint64_t v22 = v21 + v9;
          if (!__OFADD__(v21, v9))
          {
LABEL_23:
            *(void *)(v15 + 16) = v22;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v22 = v27 + v9;
        if (!__OFADD__(v27, v9)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v17 = *(void *)(v15 + 16);
      uint64_t v18 = v17 - v5;
      if (!__OFSUB__(v17, v5)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:
  *uint64_t v16 = v28;

  return specialized Array._endMutation()();
}

uint64_t sub_10054CB60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_10054CB6C(a1, a2, a3, a4, a5, a6, (uint64_t *)&unk_100788D30);
}

uint64_t sub_10054CB6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t *a7)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v13 = a7;
    unint64_t v8 = a6;
    uint64_t v12 = a5;
    uint64_t v10 = a2;
    uint64_t v11 = a1;
    uint64_t v9 = *v7;
    if (!((unint64_t)*v7 >> 62))
    {
      if (*(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v30 < v10) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v34 = v13;
  uint64_t v14 = v10 - v11;
  if (__OFSUB__(v10, v11))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v9 = (v8 >> 1) - v12;
  if (__OFSUB__(v8 >> 1, v12))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v15 = v9 - v14;
  if (__OFSUB__(v9, v14))
  {
LABEL_35:
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v17 = v31 + v35;
    if (!__OFADD__(v31, v35)) {
      goto LABEL_9;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v35 = v9 - v14;
  if ((unint64_t)*v7 >> 62) {
    goto LABEL_36;
  }
  uint64_t v16 = *(void *)((*v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v17 = v16 + v15;
  if (__OFADD__(v16, v15)) {
    goto LABEL_38;
  }
LABEL_9:
  unint64_t v18 = *v7;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v7 = v18;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v18 & 0x8000000000000000) != 0
    || (v18 & 0x4000000000000000) != 0
    || (uint64_t v20 = v18 & 0xFFFFFFFFFFFFFF8, v17 > *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v18 >> 62))
    {
LABEL_14:
      swift_bridgeObjectRetain();
      unint64_t v18 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v7 = v18;
      uint64_t v20 = v18 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_15;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
LABEL_15:
  uint64_t v21 = v20 + 32 + 8 * v11;
  sub_10003B754(v34);
  swift_arrayDestroy();
  uint64_t v22 = v35;
  if (v35)
  {
    if (v18 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v22 = v35;
      uint64_t v24 = v32 - v10;
      if (!__OFSUB__(v32, v10))
      {
LABEL_18:
        if (v24 < 0)
        {
LABEL_46:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v25 = (char *)(v21 + 8 * v9);
        uint64_t v26 = (char *)(v20 + 32 + 8 * v10);
        if (v25 != v26 || v25 >= &v26[8 * v24])
        {
          memmove(v25, v26, 8 * v24);
          uint64_t v22 = v35;
        }
        if (!(v18 >> 62))
        {
          uint64_t v27 = *(void *)(v20 + 16);
          uint64_t v28 = v27 + v22;
          if (!__OFADD__(v27, v22))
          {
LABEL_24:
            *(void *)(v20 + 16) = v28;
            goto LABEL_25;
          }
          goto LABEL_45;
        }
LABEL_43:
        swift_bridgeObjectRetain();
        uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v28 = v33 + v35;
        if (!__OFADD__(v33, v35)) {
          goto LABEL_24;
        }
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
    }
    else
    {
      uint64_t v23 = *(void *)(v20 + 16);
      uint64_t v24 = v23 - v10;
      if (!__OFSUB__(v23, v10)) {
        goto LABEL_18;
      }
    }
    __break(1u);
    goto LABEL_43;
  }
LABEL_25:
  if (v9 >= 1) {
    swift_arrayInitWithCopy();
  }
  swift_unknownObjectRelease();

  return specialized Array._endMutation()();
}

char *sub_10054CEC4(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  unint64_t v8 = *(void **)v6;
  int64_t v9 = *(void *)(*(void *)v6 + 16);
  if (v9 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v11 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v12 = 1 - v11;
  if (__OFSUB__(1, v11))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v13 = v9 + v12;
  if (__OFADD__(v9, v12))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v13 > v8[3] >> 1)
  {
    if (v9 <= v13) {
      int64_t v17 = v9 + v12;
    }
    else {
      int64_t v17 = v9;
    }
    unint64_t v8 = sub_100571098(isUniquelyReferenced_nonNull_native, v17, 1, v8);
  }
  unint64_t v18 = &v8[4 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v12) {
    goto LABEL_20;
  }
  uint64_t v20 = v8[2];
  BOOL v21 = __OFSUB__(v20, a2);
  uint64_t v22 = v20 - a2;
  if (v21) {
    goto LABEL_26;
  }
  if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t result = (char *)(v18 + 4);
    uint64_t v23 = &v8[4 * a2 + 4];
    if (v18 + 4 != v23 || result >= (char *)&v23[4 * v22]) {
      uint64_t result = (char *)memmove(result, v23, 32 * v22);
    }
    uint64_t v24 = v8[2];
    BOOL v21 = __OFADD__(v24, v12);
    uint64_t v25 = v24 + v12;
    if (!v21)
    {
      id v8[2] = v25;
LABEL_20:
      *unint64_t v18 = a3;
      v18[1] = a4;
      v18[2] = a5;
      v18[3] = a6;
      *(void *)uint64_t v6 = v8;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10054D058(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  if (a2 == a3)
  {
    if (result)
    {
      sub_10003B754(a5);
      return swift_arrayInitWithCopy();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10054D0C0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v7)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v14 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v15 = *v14++;
      sub_10054AB90(v15, 0, a2 & 0x10101, a3, a4, a5, a6);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v7;
    }
    while (v7);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_10054D1DC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  int64_t v7 = *((void *)*v4 + 2);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = 1 - v9;
  if (__OFSUB__(1, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v11 = v7 + v10;
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > *((void *)v6 + 3) >> 1)
  {
    if (v7 <= v11) {
      int64_t v15 = v7 + v10;
    }
    else {
      int64_t v15 = v7;
    }
    uint64_t v6 = sub_10056FEF4(isUniquelyReferenced_nonNull_native, v15, 1, v6);
  }
  uint64_t v16 = &v6[16 * a1 + 32];
  sub_10003B754(&qword_1007A59C0);
  swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v17 = *((void *)v6 + 2);
  BOOL v18 = __OFSUB__(v17, a2);
  uint64_t v19 = v17 - a2;
  if (v18) {
    goto LABEL_28;
  }
  if (v19 < 0)
  {
LABEL_30:
    uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t v20 = v16 + 16;
  BOOL v21 = &v6[16 * a2 + 32];
  if (v16 + 16 != v21 || v20 >= &v21[16 * v19]) {
    memmove(v20, v21, 16 * v19);
  }
  uint64_t v22 = *((void *)v6 + 2);
  BOOL v18 = __OFADD__(v22, v10);
  uint64_t v23 = v22 + v10;
  if (v18)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  *((void *)v6 + 2) = v23;
LABEL_20:
  *(void *)uint64_t v16 = a3;
  *((void *)v16 + 1) = a4;
  *uint64_t v4 = v6;
  swift_retain();

  return swift_bridgeObjectRetain();
}

Class sub_10054D384(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TTRIDateIconGenerator();
  uint64_t v8 = swift_allocObject();
  NSString v9 = String._bridgeToObjectiveC()();
  uint64_t v10 = self;
  image = (objc_class *)[v10 _systemImageNamed:v9];

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v10 _systemImageNamed:v11];

  int v13 = a1 & 0x10001;
  if ((a1 & 0x100) != 0)
  {
    int64_t v15 = sub_10054AB90(0, 0, v13 | 0x100u, a2, a3, a4, v8);
    int v14 = 256;
  }
  else
  {
    int v14 = 0;
    int64_t v15 = 0;
  }
  int v16 = v13 | v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  UIMenuElementSize v17 = (UIMenuElementSize)sub_10054D0C0((uint64_t)&off_100734E68, v16, a2, a3, a4, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  BOOL v18 = sub_10054AB90(5, v12, v16, a2, a3, a4, v8);
  swift_bridgeObjectRetain();
  id v19 = v18;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_bridgeObjectRelease();

  if ((unint64_t)v17 >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    UIMenuElementSize preferredElementSize = v17;
  }
  swift_bridgeObjectRelease();
  sub_1000368FC(0, &qword_1007894E0);
  object = (void *)0xE000000000000000;
  v22._uint64_t countAndFlagsBits = 0;
  v22._object = (void *)0xE000000000000000;
  v38.value.super.Class isa = 0;
  v38.is_nil = 0;
  v23.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v22, (Swift::String_optional)0, v38, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
  if (a1)
  {
    v25._object = (void *)0x80000001006BE970;
    v26._uint64_t countAndFlagsBits = 0x6574614420657544;
    v26._object = (void *)0xE800000000000000;
    v25._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
    Swift::String v27 = TTRLocalizedString(_:comment:)(v26, v25);
    uint64_t countAndFlagsBits = v27._countAndFlagsBits;
    object = v27._object;
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
  }
  sub_10003B754(&qword_10079AF70);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_10066C680;
  *(void *)(v28 + 32) = v15;
  *(UIMenu *)(v28 + 40) = v23;
  specialized Array._endMutation()();
  id v29 = v15;
  uint64_t v30 = v23.super.super.isa;
  sub_10003B754(&qword_10079AF78);
  sub_1000368FC(0, &qword_10079AF80);
  sub_100037EA0((unint64_t *)&qword_10079AF88, &qword_10079AF78);
  UIMenuElementSize v31 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  v32._uint64_t countAndFlagsBits = countAndFlagsBits;
  v32._object = object;
  v39.value.super.Class isa = image;
  v39.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v39, 0, 0xFFFFFFFFFFFFFFFFLL, v31, (Swift::OpaquePointer)v12).super.super.isa;
  swift_release();

  return isa;
}

uint64_t sub_10054D7D8(uint64_t a1)
{
  UIMenuElementSize v67 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  objc_super v2 = (_OWORD *)swift_allocObject();
  long long v3 = *(_OWORD *)(a1 + 48);
  v2[3] = *(_OWORD *)(a1 + 32);
  v2[4] = v3;
  long long v4 = *(_OWORD *)(a1 + 80);
  v2[5] = *(_OWORD *)(a1 + 64);
  v2[6] = v4;
  long long v5 = *(_OWORD *)(a1 + 16);
  v2[1] = *(_OWORD *)a1;
  v2[2] = v5;
  aBlock[4] = sub_10054E00C;
  aBlock[5] = v2;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A6610;
  aBlock[3] = &unk_10074FDB8;
  uint64_t v6 = _Block_copy(aBlock);
  int64_t v7 = self;
  sub_10054E014(a1);
  id v8 = [v7 elementWithProvider:v6];
  _Block_release(v6);
  swift_release();
  sub_1000368FC(0, &qword_1007894E0);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10066D470;
  *(void *)(v9 + 32) = v8;
  aBlock[0] = v9;
  specialized Array._endMutation()();
  UIMenuElementSize preferredElementSize = aBlock[0];
  id v11 = v8;
  v12._uint64_t countAndFlagsBits = 0;
  v12._object = (void *)0xE000000000000000;
  v70.value.super.Class isa = 0;
  v70.is_nil = 0;
  UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v12, (Swift::String_optional)0, v70, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v64);
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
LABEL_48:
  }
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  uint64_t result = specialized Array._endMutation()();
  int64_t v14 = 0;
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & *(void *)(v15 + 64);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  do
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v14 << 6);
    }
    else
    {
      int64_t v23 = v14 + 1;
      if (__OFADD__(v14, 1))
      {
        __break(1u);
        goto LABEL_48;
      }
      if (v23 >= v20) {
        goto LABEL_30;
      }
      unint64_t v24 = *(void *)(v16 + 8 * v23);
      ++v14;
      if (!v24)
      {
        int64_t v14 = v23 + 1;
        if (v23 + 1 >= v20) {
          goto LABEL_30;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v14);
        if (!v24)
        {
          int64_t v14 = v23 + 2;
          if (v23 + 2 >= v20) {
            goto LABEL_30;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v14);
          if (!v24)
          {
            int64_t v14 = v23 + 3;
            if (v23 + 3 >= v20) {
              goto LABEL_30;
            }
            unint64_t v24 = *(void *)(v16 + 8 * v14);
            if (!v24)
            {
              int64_t v14 = v23 + 4;
              if (v23 + 4 >= v20) {
                goto LABEL_30;
              }
              unint64_t v24 = *(void *)(v16 + 8 * v14);
              if (!v24)
              {
                int64_t v25 = v23 + 5;
                if (v25 >= v20) {
                  goto LABEL_30;
                }
                unint64_t v24 = *(void *)(v16 + 8 * v25);
                if (!v24)
                {
                  while (1)
                  {
                    int64_t v14 = v25 + 1;
                    if (__OFADD__(v25, 1)) {
                      goto LABEL_51;
                    }
                    if (v14 >= v20) {
                      goto LABEL_30;
                    }
                    unint64_t v24 = *(void *)(v16 + 8 * v14);
                    ++v25;
                    if (v24) {
                      goto LABEL_26;
                    }
                  }
                }
                int64_t v14 = v25;
              }
            }
          }
        }
      }
LABEL_26:
      unint64_t v19 = (v24 - 1) & v24;
      unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
    }
  }
  while (*(uint64_t *)(*(void *)(v15 + 56) + 8 * v22) < 1);
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  v26._object = (void *)0x80000001006BE910;
  v27._uint64_t countAndFlagsBits = 0x6154207261656C43;
  v27._object = (void *)0xEA00000000007367;
  v26._uint64_t countAndFlagsBits = 0xD000000000000028;
  TTRLocalizedString(_:comment:)(v27, v26);
  uint64_t v28 = (_OWORD *)swift_allocObject();
  long long v29 = *(_OWORD *)(a1 + 48);
  v28[3] = *(_OWORD *)(a1 + 32);
  v28[4] = v29;
  long long v30 = *(_OWORD *)(a1 + 80);
  uint64_t v28[5] = *(_OWORD *)(a1 + 64);
  v28[6] = v30;
  long long v31 = *(_OWORD *)(a1 + 16);
  v28[1] = *(_OWORD *)a1;
  v28[2] = v31;
  sub_10054E014(a1);
  v65._rawValue = 0;
  id v32 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();

LABEL_30:
  sub_10054E0AC((unsigned char *)(a1 + 16), &v68);
  sub_10054E0AC(&v68, &v69);
  if (v69 != 2)
  {
    if (v69 == 3)
    {
      sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      v33._object = (void *)0x80000001006BE910;
      v34._uint64_t countAndFlagsBits = 0x6D6F74737543;
      v34._object = (void *)0xE600000000000000;
      v33._uint64_t countAndFlagsBits = 0xD000000000000028;
      TTRLocalizedString(_:comment:)(v34, v33);
      NSString v35 = String._bridgeToObjectiveC()();
      id v36 = [self _systemImageNamed:v35];

      char v37 = (_OWORD *)swift_allocObject();
      long long v38 = *(_OWORD *)(a1 + 48);
      v37[3] = *(_OWORD *)(a1 + 32);
      v37[4] = v38;
      long long v39 = *(_OWORD *)(a1 + 80);
      v37[5] = *(_OWORD *)(a1 + 64);
      v37[6] = v39;
      long long v40 = *(_OWORD *)(a1 + 16);
      v37[1] = *(_OWORD *)a1;
      v37[2] = v40;
      sub_10054E014(a1);
      uint64_t v41 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      uint64_t v42 = swift_allocObject();
      *(_OWORD *)(v42 + 16) = xmmword_10066D470;
      *(void *)(v42 + 32) = v41;
      aBlock[0] = v42;
      specialized Array._endMutation()();
      UIMenuElementSize v43 = aBlock[0];
      id v44 = v41;
      v45._uint64_t countAndFlagsBits = 0;
      v45._object = (void *)0xE000000000000000;
      v71.value.super.Class isa = 0;
      v71.is_nil = 0;
      UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v45, (Swift::String_optional)0, v71, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v43, 0);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      if (*(void *)(a1 + 8) == 1 && (v69 & 1) != 0)
      {
        unint64_t v46 = 0x80000001006BE910;
        unint64_t v47 = 0x6761542074696445;
        unint64_t v48 = 0xAC000000A680E273;
      }
      else
      {
        unint64_t v46 = 0x80000001006BE910;
        unint64_t v47 = 0xE267615420646441;
        unint64_t v48 = 0xAA0000000000A680;
      }
      unint64_t v49 = 0xD000000000000028;
      TTRLocalizedString(_:comment:)(*(Swift::String *)&v47, *(Swift::String *)(&v46 - 1));
      sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      uint64_t v50 = (_OWORD *)swift_allocObject();
      long long v51 = *(_OWORD *)(a1 + 48);
      v50[3] = *(_OWORD *)(a1 + 32);
      v50[4] = v51;
      long long v52 = *(_OWORD *)(a1 + 80);
      v50[5] = *(_OWORD *)(a1 + 64);
      v50[6] = v52;
      long long v53 = *(_OWORD *)(a1 + 16);
      v50[1] = *(_OWORD *)a1;
      v50[2] = v53;
      sub_10054E014(a1);
      v65._rawValue = 0;
      uint64_t v54 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      id v44 = v54;
      if ((unint64_t)v67 >> 62)
      {
        id v62 = v54;
        swift_bridgeObjectRetain();
        uint64_t v63 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (v63 < 0)
        {
          __break(1u);
LABEL_51:
          __break(1u);
          return result;
        }
      }
      else
      {
        id v55 = v54;
      }
      sub_10054BFF0(0, 0, (uint64_t)v44, &qword_10079AF80);
    }
  }
  if (*(unsigned char *)a1)
  {
    v58._uint64_t countAndFlagsBits = 0xD000000000000029;
    v58._object = (void *)0x80000001006BE940;
    v59._uint64_t countAndFlagsBits = 1936154964;
    v59._object = (void *)0xE400000000000000;
    Swift::String v60 = TTRLocalizedString(_:comment:)(v59, v58);
    object = v60._object;
    uint64_t countAndFlagsBits = v60._countAndFlagsBits;
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  v72.value.super.Class isa = 0;
  v72.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(*(Swift::String *)&countAndFlagsBits, (Swift::String_optional)0, v72, 0, 0xFFFFFFFFFFFFFFFFLL, v67, v65).super.super.isa;

  return (uint64_t)isa;
}

uint64_t sub_10054E00C(uint64_t a1, uint64_t a2)
{
  return sub_10054B1D0(a1, a2, v2 + 16);
}

uint64_t sub_10054E014(uint64_t a1)
{
  return a1;
}

uint64_t sub_10054E084()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

unsigned char *sub_10054E0AC(unsigned char *a1, unsigned char *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_10054E0C4()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_10054E0EC()
{
  return sub_10054E150((void (*)(void))&_swift_release, 128);
}

uint64_t sub_10054E108(uint64_t a1)
{
  return sub_10054B284(a1, v1 + 16, *(void (**)(uint64_t))(v1 + 112));
}

uint64_t sub_10054E114@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10054B564(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_10054E134()
{
  return sub_10054E150((void (*)(void))&_swift_bridgeObjectRelease, 136);
}

uint64_t sub_10054E150(void (*a1)(void), uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  a1(*(void *)(v2 + 120));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_10054E1CC()
{
  return (*(uint64_t (**)(void, void, void))(v0 + 80))(*(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128));
}

uint64_t sub_10054E1FC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 49, 7);
}

uint64_t sub_10054E23C(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 32))(*(unsigned __int8 *)(v1 + 48), a1);
}

Class sub_10054E270(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(v2 + 16);
  UIMenuElementSize v32 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  if (*(unsigned char *)(a1 + 18))
  {
    swift_bridgeObjectRetain();
    if (v3) {
      sub_10035C4E8(0);
    }
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    static TTRLocalizableStrings.Assignments.assigneePickerNoneOption.getter();
    long long v4 = (_OWORD *)swift_allocObject();
    long long v5 = *(_OWORD *)(a1 + 16);
    v4[1] = *(_OWORD *)a1;
    v4[2] = v5;
    long long v6 = *(_OWORD *)(a1 + 48);
    v4[3] = *(_OWORD *)(a1 + 32);
    v4[4] = v6;
    sub_10054F544(a1);
    v29._rawValue = 0;
    id v7 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = swift_allocObject();
  long long v9 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v8 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v8 + 32) = v9;
  long long v10 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v8 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v8 + 64) = v10;
  *(void *)(v8 + 80) = v2;
  *(unsigned char *)(v8 + 88) = v3 > 1;
  aBlock[4] = sub_10054F534;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A6610;
  aBlock[3] = &unk_10074FEF8;
  id v11 = _Block_copy(aBlock);
  Swift::String v12 = self;
  sub_10054F544(a1);
  id v13 = [v12 elementWithProvider:v11];
  _Block_release(v11);
  swift_release();
  sub_1000368FC(0, &qword_1007894E0);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10066D470;
  *(void *)(v14 + 32) = v13;
  aBlock[0] = v14;
  specialized Array._endMutation()();
  UIMenuElementSize preferredElementSize = aBlock[0];
  id v16 = v13;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v33.value.super.Class isa = 0;
  v33.is_nil = 0;
  uint64_t v18 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v33, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v29).super.super.isa;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  if (*(unsigned char *)(a1 + 17))
  {
    v21._object = (void *)0x80000001006BE9A0;
    v22._uint64_t countAndFlagsBits = 0x6E6769737341;
    v22._object = (void *)0xE600000000000000;
    v21._uint64_t countAndFlagsBits = 0xD000000000000020;
    Swift::String v23 = TTRLocalizedString(_:comment:)(v22, v21);
    uint64_t countAndFlagsBits = v23._countAndFlagsBits;
    object = v23._object;
  }
  else
  {
    uint64_t countAndFlagsBits = 0;
    object = (void *)0xE000000000000000;
  }
  NSString v24 = String._bridgeToObjectiveC()();
  int64_t v25 = (objc_class *)[self _systemImageNamed:v24];

  v26._uint64_t countAndFlagsBits = countAndFlagsBits;
  v26._object = object;
  v34.value.super.Class isa = v25;
  v34.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v26, (Swift::String_optional)0, v34, 0, 0xFFFFFFFFFFFFFFFFLL, v32, v30).super.super.isa;

  return isa;
}

uint64_t sub_10054E684(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_10056F4F4(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10054E86C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_100570D1C(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_23;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_29;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    unint64_t v16 = (char *)&v4[14 * a2 + 4];
    size_t v17 = 112 * v15;
    if (112 * a1 < 112 * a2 || (&v4[14 * a1 + 4] < (void *)&v16[v17] ? (BOOL v18 = a1 == a2) : (BOOL v18 = 0), !v18)) {
      uint64_t result = (uint64_t)memmove(&v4[14 * a1 + 4], v16, v17);
    }
    uint64_t v19 = v4[2];
    BOOL v14 = __OFADD__(v19, v8);
    uint64_t v20 = v19 - v7;
    if (!v14)
    {
      v4[2] = v20;
LABEL_23:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_30;
  }
LABEL_31:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10054E9F8(uint64_t a1, int64_t a2, uint64_t a3)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  int64_t v5 = *(void **)v3;
  int64_t v6 = *(void *)(*(void *)v3 + 16);
  if (v6 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = v9 - v8;
  if (__OFSUB__(v9, v8))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v11 = v6 + v10;
  if (__OFADD__(v6, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v11 > v5[3] >> 1)
  {
    if (v6 <= v11) {
      int64_t v13 = v6 + v10;
    }
    else {
      int64_t v13 = v6;
    }
    int64_t v5 = sub_100570500(isUniquelyReferenced_nonNull_native, v13, 1, v5);
  }
  uint64_t v14 = (uint64_t)&v5[6 * a1 + 4];
  uint64_t result = (char *)swift_arrayDestroy();
  if (!v10) {
    goto LABEL_20;
  }
  uint64_t v16 = v5[2];
  BOOL v17 = __OFSUB__(v16, a2);
  uint64_t v18 = v16 - a2;
  if (v17) {
    goto LABEL_28;
  }
  if (v18 < 0)
  {
LABEL_30:
    uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v14 + 48 * v9);
  uint64_t v19 = (char *)&v5[6 * a2 + 4];
  size_t v20 = 48 * v18;
  if (result != v19 || result >= &v19[v20]) {
    uint64_t result = (char *)memmove(result, v19, v20);
  }
  uint64_t v21 = v5[2];
  BOOL v17 = __OFADD__(v21, v10);
  uint64_t v22 = v21 + v10;
  if (v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v5[2] = v22;
LABEL_20:
  if (v9) {
    uint64_t result = (char *)swift_arrayInitWithCopy();
  }
  *(void *)uint64_t v3 = v5;
  return result;
}

uint64_t sub_10054EB9C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      *uint64_t v3 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  int64_t v13 = (char *)(v11 + 32 + 8 * v4);
  sub_10003B754(&qword_10078E370);
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_10054EEAC(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!(*v3 >> 62))
    {
      if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v18 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v8 = v19 + v5;
    if (!__OFADD__(v19, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v9 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
      swift_bridgeObjectRelease();
      *uint64_t v3 = v9;
      uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  sub_10003B754((uint64_t *)&unk_100788D30);
  swift_arrayDestroy();
  if (v5)
  {
    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v13 = v20 - v2;
      if (!__OFSUB__(v20, v2))
      {
LABEL_17:
        if (v13 < 0)
        {
LABEL_42:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v14 = (const void *)(v11 + 32 + 8 * v2);
        if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v14 + 8 * v13) {
          memmove((void *)(v11 + 32 + 8 * v4), v14, 8 * v13);
        }
        if (!(v9 >> 62))
        {
          uint64_t v15 = *(void *)(v11 + 16);
          uint64_t v16 = v15 + v5;
          if (!__OFADD__(v15, v5))
          {
LABEL_23:
            *(void *)(v11 + 16) = v16;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v16 = v21 + v5;
        if (!__OFADD__(v21, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 16);
      uint64_t v13 = v12 - v2;
      if (!__OFSUB__(v12, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return specialized Array._endMutation()();
}

uint64_t sub_10054F190(uint64_t a1, uint64_t a2)
{
  return sub_10054F1B8(a1, a2, &qword_1007A59C8);
}

uint64_t sub_10054F1A4(uint64_t a1, uint64_t a2)
{
  return sub_10054F1B8(a1, a2, (unint64_t *)&qword_100788600);
}

uint64_t sub_10054F1B8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v3 = a2;
    uint64_t v5 = a1;
    unint64_t v7 = *v4;
    if (!(*v4 >> 62))
    {
      if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= a2) {
        goto LABEL_4;
      }
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v15 < v3) {
    goto LABEL_15;
  }
LABEL_4:
  uint64_t v8 = v3 - v5;
  if (__OFSUB__(v3, v5))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v9 = v5 - v3;
  if (__OFSUB__(0, v8))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v11 = v16 + v27;
    if (!__OFADD__(v16, v27)) {
      goto LABEL_8;
    }
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  unint64_t v7 = *v4;
  uint64_t v27 = v5 - v3;
  uint64_t v28 = v5;
  if (*v4 >> 62) {
    goto LABEL_18;
  }
  uint64_t v10 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v11 = v10 - v8;
  if (__OFADD__(v10, v9)) {
    goto LABEL_20;
  }
LABEL_8:
  unint64_t v7 = *v4;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v4 = v7;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v7 & 0x8000000000000000) == 0 && (v7 & 0x4000000000000000) == 0)
    {
      uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
      if (v11 <= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
        uint64_t v14 = v6;
        goto LABEL_24;
      }
    }
  }
LABEL_21:
  uint64_t v14 = v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  unint64_t v7 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
  swift_bridgeObjectRelease();
  *uint64_t v4 = v7;
  uint64_t v13 = v7 & 0xFFFFFFFFFFFFFF8;
LABEL_24:
  uint64_t v17 = (char *)(v13 + 32 + 8 * v28);
  sub_1000368FC(0, v14);
  swift_arrayDestroy();
  uint64_t v18 = v27;
  if (v27)
  {
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v18 = v27;
      uint64_t v20 = v25 - v3;
      if (!__OFSUB__(v25, v3))
      {
LABEL_27:
        if (v20 < 0)
        {
LABEL_43:
          uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
          __break(1u);
          return result;
        }
        uint64_t v21 = (char *)(v13 + 32 + 8 * v3);
        if (v28 != v3 || v17 >= &v21[8 * v20])
        {
          memmove(v17, v21, 8 * v20);
          uint64_t v18 = v27;
        }
        if (!(v7 >> 62))
        {
          uint64_t v22 = *(void *)(v13 + 16);
          uint64_t v23 = v22 + v18;
          if (!__OFADD__(v22, v18))
          {
LABEL_33:
            *(void *)(v13 + 16) = v23;
            goto LABEL_34;
          }
          goto LABEL_42;
        }
LABEL_40:
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v23 = v26 + v27;
        if (!__OFADD__(v26, v27)) {
          goto LABEL_33;
        }
LABEL_42:
        __break(1u);
        goto LABEL_43;
      }
    }
    else
    {
      uint64_t v19 = *(void *)(v13 + 16);
      uint64_t v20 = v19 - v3;
      if (!__OFSUB__(v19, v3)) {
        goto LABEL_27;
      }
    }
    __break(1u);
    goto LABEL_40;
  }
LABEL_34:

  return specialized Array._endMutation()();
}

uint64_t sub_10054F4DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_10054F534(uint64_t a1, uint64_t a2)
{
  return sub_10054B6F4(a1, a2, v2 + 16, *(void *)(v2 + 80), *(unsigned char *)(v2 + 88));
}

uint64_t sub_10054F544(uint64_t a1)
{
  return a1;
}

uint64_t sub_10054F59C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_10054F5EC()
{
  uint64_t v1 = *(uint64_t (**)(_OWORD *))(v0 + 64);
  memset(v3, 0, sizeof(v3));
  return v1(v3);
}

uint64_t sub_10054F634()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_10054F694(uint64_t a1)
{
  return sub_10054B84C(a1, *(void *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), (_OWORD *)(v1 + 32), *(void (**)(void *))(v1 + 96));
}

uint64_t sub_10054F6A8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 192, 7);
}

uint64_t sub_10054F738(uint64_t a1)
{
  return sub_10054BB20(a1, v1 + 16, (uint64_t *)(v1 + 80));
}

uint64_t sub_10054F744(uint64_t a1)
{
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10054F84CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 < 2) {
    return 0;
  }
  unsigned int v8 = (v7 + 2147483646) & 0x7FFFFFFF;
  uint64_t result = v8 - 1;
  if (v8 <= 1) {
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x10054F934);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_10054F95C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

unsigned char *sub_10054F978(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption()
{
  return &type metadata for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration.CustomTagsOption;
}

ValueMetadata *type metadata accessor for TTRIRemindersListContextualMenuAssembly()
{
  return &type metadata for TTRIRemindersListContextualMenuAssembly;
}

uint64_t destroy for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v3 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_retain();
  swift_release();
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v4;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration()
{
  return &type metadata for TTRIRemindersListContextualMenuAssembly.HashtagsContextMenuConfiguration;
}

id sub_10054FCBC(char a1)
{
  v1[qword_1007A5A00] = 0;
  if ((a1 & 1) == 0)
  {
    uint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_100390D80;
    *(void *)(v5 + 24) = v4;
    void v9[4] = sub_1000218B0;
    uint64_t v9[5] = v5;
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 1107296256;
    v9[2] = sub_100021888;
    v9[3] = &unk_1007501E8;
    uint64_t v6 = _Block_copy(v9);
    uint64_t v7 = v1;
    swift_retain();
    swift_release();
    [v3 performWithoutAnimation:v6];
    _Block_release(v6);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return result;
    }
    __break(1u);
    goto LABEL_8;
  }
  id result = *(id *)&v1[qword_1007A59E8];
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }

  return [result performBatchUpdates:0 completion:0];
}

id sub_10054FE78()
{
  v0[qword_1007A5A00] = 1;
  return [v0 setNeedsLayout];
}

void sub_10054FE98(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void **)(v2 + qword_1007A59F0);
  if (v4)
  {
    id v6 = v4;
    sub_10011F99C(a1, a2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10054FF10(uint64_t a1)
{
  return sub_10054FFC0(a1, sub_10011FB80);
}

void sub_10054FF28(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void **)(v3 + qword_1007A59F0);
  if (v5)
  {
    id v8 = v5;
    sub_10011FDC8(a1, a2, a3);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10054FFA8(uint64_t a1)
{
  return sub_10054FFC0(a1, sub_100120448);
}

uint64_t sub_10054FFC0(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *(void **)(v2 + qword_1007A59F0);
  if (v3)
  {
    uint64_t v5 = result;
    id v6 = v3;
    uint64_t v7 = a2(v5);

    return v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100550028()
{
  unsigned int v1 = *(void **)(v0 + qword_1007A59F0);
  if (v1)
  {
    id v2 = v1;
    sub_100120E84(0);
  }
  else
  {
    __break(1u);
  }
}

void sub_100550074(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)(v2 + qword_1007A59F0);
  if (v3)
  {
    id v6 = v3;
    sub_100121024(a1, a2 & 1);
  }
  else
  {
    __break(1u);
  }
}

SEL *sub_1005500EC()
{
  return sub_100550110((SEL *)&selRef_allowsMultipleSelection);
}

SEL *sub_1005500F8()
{
  return sub_100550110((SEL *)&selRef_allowsMultipleSelectionDuringEditing);
}

SEL *sub_100550104()
{
  return sub_100550110((SEL *)&selRef_isEditing);
}

SEL *sub_100550110(SEL *result)
{
  if (*(void *)(v1 + qword_1007A59E8)) {
    return (SEL *)[*(id *)(v1 + qword_1007A59E8) *result];
  }
  __break(1u);
  return result;
}

void sub_100550144(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1007A59E8);
  *(void *)(v1 + qword_1007A59E8) = a1;
}

void sub_100550158(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1007A59F0);
  *(void *)(v1 + qword_1007A59F0) = a1;
}

uint64_t sub_10055016C()
{
  return *(unsigned __int8 *)(v0 + qword_1007A5A00);
}

uint64_t sub_10055017C(uint64_t result)
{
  *(unsigned char *)(v1 + qword_1007A5A00) = result;
  return result;
}

id sub_10055018C()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))();
  uint64_t v2 = *(void **)((char *)v0 + qword_1007A59E8);
  *(void *)((char *)v0 + qword_1007A59E8) = v1;
  id v3 = v1;

  [v3 setAutoresizingMask:18];
  [v3 setPreservesSuperviewLayoutMargins:1];
  [v0 addSubview:v3];
  return v3;
}

id sub_100550240(void *a1)
{
  uint64_t v2 = *(void **)(v1 + qword_1007A59E8);
  *(void *)(v1 + qword_1007A59E8) = a1;
  id v3 = a1;

  return [v3 setPreservesSuperviewLayoutMargins:1];
}

void sub_1005502A0(void *a1)
{
  type metadata accessor for TTRITreeViewTableAdapter();
  id v3 = v1;
  id v4 = sub_10011A61C(v3, a1);
  uint64_t v5 = *(void **)&v3[qword_1007A59F0];
  *(void *)&v3[qword_1007A59F0] = v4;

  type metadata accessor for TTRITreeTableView();
  uint64_t v6 = swift_dynamicCastClass();
  if (v6)
  {
    uint64_t v7 = &off_10073B0A0;
    if (!*(void *)&v3[qword_1007A59F0]) {
      uint64_t v7 = 0;
    }
    *(void *)(v6 + OBJC_IVAR____TtC9Reminders17TTRITreeTableView_contextMenuDelegate + 8) = v7;
    swift_unknownObjectWeakAssign();
  }
  else
  {
    if (qword_1007856D0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100018BF8(v8, (uint64_t)qword_1007A59D0);
    oslog = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v9, "UITableView contained in TTRITreeView is not a subclass of TTRITreeTableView", v10, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_100550478(uint64_t a1)
{
  [v1 bounds];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  id v11 = objc_allocWithZone((Class)type metadata accessor for TTRITreeTableView());

  return [v11 initWithFrame:a1 style:v4, v6, v8, v10];
}

uint64_t sub_100550500()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A59D0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A59D0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  double v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005505C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[qword_1007A59F0];
  if (v2)
  {
    id v3 = v2;
    sub_10011A950();
  }
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for TTRITreeView();
  return [super dealloc];
}

id sub_100550670(void *a1)
{
  id v1 = a1;
  return sub_1005505C8();
}

uint64_t sub_100550698(uint64_t a1)
{
  return swift_release();
}

void sub_1005506F4(void *a1)
{
  *(void *)&v1[qword_1007A59E8] = 0;
  *(void *)&v1[qword_1007A59F0] = 0;
  *(void *)&v1[qword_1007A59F8] = 0;
  v1[qword_1007A5A00] = 0;
  v13.receiver = v1;
  v13.super_class = (Class)type metadata accessor for TTRITreeView();
  [super initWithCoder:a1];
  if (!v3) {
    goto LABEL_14;
  }
  double v4 = (char *)v3;
  id v5 = [v4 subviews];
  sub_1001141B8();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_11;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_7;
  }
  if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v7 = *(id *)(v6 + 32);
LABEL_7:
    double v8 = v7;
    swift_bridgeObjectRelease();
    self;
    double v9 = (void *)swift_dynamicCastObjCClass();
    if (v9)
    {
      double v10 = *(void **)&v4[qword_1007A59E8];
      *(void *)&v4[qword_1007A59E8] = v9;
      id v11 = v9;

      [v11 setPreservesSuperviewLayoutMargins:1];
LABEL_13:
      sub_1005502A0(v11);

LABEL_14:
      return;
    }

LABEL_12:
    id v11 = sub_10055018C();
    goto LABEL_13;
  }
  __break(1u);
}

void sub_1005508F8(uint64_t a1, uint64_t a2, void *a3)
{
}

void sub_100550920()
{
}

void sub_100550964()
{
}

uint64_t sub_100550994()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005509CC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005509DC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A5A88);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A5A88);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100550AA4()
{
  return swift_retain();
}

uint64_t sub_100550AE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertTitle.getter();
  uint64_t v4 = v3;
  uint64_t result = static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertMessage.getter();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = result;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = 0;
  return result;
}

unint64_t sub_100550B2C()
{
  uint64_t v0 = (unsigned __int8 *)TTRReminderCellStyle.template.unsafeMutableAddressor();
  uint64_t v1 = &_mh_execute_header;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_100550B98()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue);
}

void sub_100550BA8(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) != (a1 & 1))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) = a1 & 1;
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
    if (v2)
    {
      uint64_t v3 = type metadata accessor for TTRTemplateEditor();
      __chkstk_darwin(v3);
      id v4 = v2;
      static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)();
    }
  }
}

_UNKNOWN **sub_100550C80()
{
  return &off_100735360;
}

uint64_t sub_100550C8C()
{
  uint64_t result = 64;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount + 16) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount) <= 0) {
      return 64;
    }
    else {
      return 65;
    }
  }
  return result;
}

uint64_t sub_100550CB4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  uint64_t v4 = (uint64_t)v3;
  if (!v3) {
    uint64_t v4 = sub_10058BAD0(a1, a2);
  }
  id v5 = v3;
  return v4;
}

void *sub_100550CFC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  id v2 = v1;
  return v1;
}

uint64_t sub_100550D38(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(v4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance))
  {
    __chkstk_darwin(a1);
    swift_retain();
    char v7 = sub_1002AE304(a1, a4 & 1, (uint64_t (*)(uint64_t))sub_1005557AC);
    swift_release();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_100550DF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005556AC(a3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a3) = sub_10045B98C((uint64_t)v6);
  sub_100555714((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return a3 & 1;
}

void *sub_100550ECC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  id v2 = v1;
  return v1;
}

id sub_100550F08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  uint64_t v4 = sub_1005993E8;
  if (v3)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    uint64_t v4 = sub_100513BCC;
    char v6 = 1;
    uint64_t v7 = 2;
  }
  else
  {
    uint64_t v7 = 0;
    char v6 = 0;
    uint64_t v5 = 0;
  }
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v7;
  *(unsigned char *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  id v8 = v3;

  return v8;
}

void sub_100550FA8(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v4);
  char v6 = (void **)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  double v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v13 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (v13)
  {
    id v14 = v13;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.parent(of:)();
    swift_release();
    swift_release();
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v9, 1, v15) == 1)
    {

      sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100555644((uint64_t)v9, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1005556AC((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v16 = *v6;
          sub_10003B754((uint64_t *)&unk_1007894B0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10066D470;
          uint64_t v18 = *(void **)(a2 + 16);
          *(void *)(inited + 32) = [v18 objectID];
          unint64_t v25 = inited;
          specialized Array._endMutation()();
          sub_100028180(v25);
          swift_bridgeObjectRelease();
          type metadata accessor for TTRTemplateEditor();
          v24[1] = v14;
          id v19 = v14;
          id v20 = [v18 saveRequest];
          unint64_t v25 = a2;
          type metadata accessor for TTRReminderEditor();
          sub_1000D69E0();
          TTRUndoableEditing.undoManager.getter();
          TTROneshotEditing.init(item:saveRequest:undoManager:)();
          id v21 = v16;
          TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();

          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v22 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v23 = (uint64_t)v12;
        }
        else
        {
          sub_100555714((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

          uint64_t v22 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
          uint64_t v23 = (uint64_t)v6;
        }
      }
      else
      {

        uint64_t v22 = &type metadata accessor for TTRRemindersListViewModel.Item;
        uint64_t v23 = (uint64_t)v9;
      }
      sub_100555714(v23, (uint64_t (*)(void))v22);
    }
  }
}

void *sub_100551384()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (void **)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  id v14 = (char *)&v26 - v13;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  sub_100555644((uint64_t)v7, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v15 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  if (v15)
  {
    sub_1005556AC((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        id v19 = v15;
        sub_100555714((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100555714((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return v15;
      case 2u:
        sub_100555644((uint64_t)v11, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        id v20 = *v4;
        id v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
        swift_beginAccess();
        uint64_t v22 = *v21;
        id v23 = v15;
        id v24 = v20;
        swift_bridgeObjectRetain();
        uint64_t v17 = sub_100598448(v24, v22);

        swift_bridgeObjectRelease();
        sub_100555714((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100555714((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        if (!v17) {

        }
        return v17;
      case 5u:
        sub_100555714((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        unint64_t v25 = v11[2];
        goto LABEL_16;
      case 6u:
        sub_100555714((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        unint64_t v25 = *v11;
LABEL_16:

        return 0;
      case 0xAu:
      case 0xBu:
        uint64_t v16 = (uint64_t)v14;
        goto LABEL_8;
      default:
        sub_100555714((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v16 = (uint64_t)v11;
LABEL_8:
        sub_100555714(v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        break;
    }
    return 0;
  }
  sub_100555714((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return 0;
}

uint64_t sub_1005517F4(uint64_t a1)
{
  return sub_100551DDC(a1, (void (*)(uint64_t))sub_1004E73A4);
}

uint64_t sub_10055180C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = &off_100750210;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1005518A4(void *a1)
{
  LOBYTE(a1) = sub_1004E78F8(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1005518E4(void *a1)
{
  void (*v12)(long long *__return_ptr, uint64_t, uint64_t);
  id v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  char v18;
  uint64_t v19;
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v34;
  unsigned char v35[40];
  long long v36;
  uint64_t v37;
  long long v38;
  uint64_t v39;
  uint64_t v40;
  void v41[3];
  uint64_t v42;
  uint64_t v43;

  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3))
  {
    uint64_t v6 = v5;
    uint64_t v7 = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 56))(a1, v7, v6);
    swift_unknownObjectRelease();
    if ((v6 & 1) == 0)
    {
LABEL_19:
      uint64_t v18 = 0;
      return v18 & 1;
    }
  }
  uint64_t v8 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  if (!v9)
  {
LABEL_7:
    if (qword_1007856D8 != -1) {
      swift_once();
    }
    id v19 = type metadata accessor for Logger();
    sub_100018BF8(v19, (uint64_t)qword_1007A5A88);
    sub_1000145EC((uint64_t)a1, (uint64_t)v41);
    swift_retain_n();
    id v20 = Logger.logObject.getter();
    id v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = 7104878;
      id v23 = swift_slowAlloc();
      long long v40 = swift_slowAlloc();
      *(_DWORD *)id v23 = 136315394;
      id v24 = *(void **)(v1 + v8);
      if (v24)
      {
        unint64_t v25 = [v24 description];
        uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v28 = v27;
      }
      else
      {
        uint64_t v28 = 0xE300000000000000;
        uint64_t v26 = 7104878;
      }
      *(void *)&long long v38 = sub_1000385A8(v26, v28, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      Swift::OpaquePointer v29 = v42;
      Swift::OpaquePointer v30 = v43;
      sub_100038D28(v41, v42);
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v30 + 176))(&v38, v29, v30);
      sub_10003B694((uint64_t)&v38, (uint64_t)&v36, &qword_100787480);
      if (v37)
      {
        sub_100038ED8(&v36, (uint64_t)v35);
        sub_1000145EC((uint64_t)v35, (uint64_t)&v34);
        sub_10003B754(&qword_1007A3548);
        uint64_t v22 = String.init<A>(describing:)();
        UIMenuElementSize v32 = v31;
        sub_100038CD8((uint64_t)v35);
        sub_10003B6F8((uint64_t)&v38, &qword_100787480);
      }
      else
      {
        sub_10003B6F8((uint64_t)&v38, &qword_100787480);
        UIMenuElementSize v32 = 0xE300000000000000;
      }
      *(void *)&long long v38 = sub_1000385A8(v22, v32, &v40);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100038CD8((uint64_t)v41);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "matchesListPredicate returns false because one of the lists is nil {viewModelSourceList: %s, reminderList: %s}", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      sub_100038CD8((uint64_t)v41);
    }

    goto LABEL_19;
  }
  uint64_t v10 = a1[3];
  uint64_t v11 = a1[4];
  sub_100038D28(a1, v10);
  uint64_t v12 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 176);
  uint64_t v13 = v9;
  v12(&v38, v10, v11);
  if (!v39)
  {

    sub_10003B6F8((uint64_t)&v38, &qword_100787480);
    goto LABEL_7;
  }
  sub_100038ED8(&v38, (uint64_t)v41);
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  id v14 = [v13 objectID];
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  sub_100038D28(v41, v42);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);
  uint64_t v18 = static NSObject.== infix(_:_:)();

  sub_100038CD8((uint64_t)v41);
  return v18 & 1;
}

uint64_t sub_100551D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10055180C();
  sub_1004E7B18(a1, a2, a3);

  return swift_release();
}

uint64_t sub_100551DC4(uint64_t a1)
{
  return sub_100551DDC(a1, (void (*)(uint64_t))sub_1004E7CE4);
}

uint64_t sub_100551DDC(uint64_t a1, void (*a2)(uint64_t))
{
  sub_10055180C();
  a2(a1);

  return swift_release();
}

uint64_t sub_100551E38(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v50 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (id *)((char *)v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = sub_10003B754(&qword_100792830);
  uint64_t v11 = *(void **)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v57 = (uint64_t)v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10055180C();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v56 = v11;
    uint64_t v14 = *(void *)(v13 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 8))(v13, ObjectType, v14);
    swift_unknownObjectRelease();
    swift_retain();
    uint64_t v17 = sub_100478634(a1, 0, v16, v13);
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    swift_release();
    swift_release_n();
    if (v17)
    {
      v47[1] = v21;
      uint64_t v48 = v17;
      uint64_t v22 = _swiftEmptyArrayStorage;
      unint64_t v58 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v23 = *(void *)(a1 + 16);
      uint64_t v49 = v19;
      if (v23)
      {
        uint64_t v24 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
        uint64_t v25 = *(void *)(v5 + 72);
        swift_bridgeObjectRetain();
        do
        {
          sub_1005556AC(v24, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v26 = TTRRemindersListViewModel.Item.reminderObjectID.getter();
          sub_100555714((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          if (v26)
          {
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
          v24 += v25;
          --v23;
        }
        while (v23);
        swift_bridgeObjectRelease();
        uint64_t v22 = (void *)v58;
        uint64_t v19 = v49;
      }
      uint64_t v32 = sub_100028180((unint64_t)v22);
      swift_bridgeObjectRelease();
      uint64_t v33 = v51;
      uint64_t v55 = *(void *)(v19 + 16);
      if (v55)
      {
        unint64_t v54 = (*((unsigned __int8 *)v56 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v56 + 80);
        uint64_t v53 = v19 + v54;
        uint64_t v34 = v56[9];
        swift_bridgeObjectRetain();
        uint64_t v35 = 0;
        id v36 = _swiftEmptyArrayStorage;
        uint64_t v52 = v34;
        do
        {
          uint64_t v56 = v36;
          uint64_t v37 = v53 + v34 * v35;
          uint64_t v38 = *(int *)(v33 + 48);
          unint64_t v39 = *(void *)(v37 + v38);
          unint64_t v58 = v39;
          uint64_t v40 = *(void *)(v39 + 16);
          if (v40)
          {
            uint64_t v41 = v50;
            uint64_t v42 = v39 + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80));
            swift_bridgeObjectRetain_n();
            uint64_t v43 = *(void *)(v41 + 72);
            do
            {
              sub_1005556AC(v42, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              sub_10055248C(v10, v32, v2, &v58);
              sub_100555714((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              v42 += v43;
              --v40;
            }
            while (v40);
            swift_bridgeObjectRelease();
            unint64_t v39 = v58;
            uint64_t v33 = v51;
            uint64_t v38 = *(int *)(v51 + 48);
          }
          else
          {
            swift_bridgeObjectRetain();
          }
          uint64_t v44 = v57;
          sub_1005556AC(v37, v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          *(void *)(v44 + v38) = v39;
          swift_bridgeObjectRetain();
          id v36 = v56;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v36 = (void *)sub_1005709CC(0, v36[2] + 1, 1, (unint64_t)v36);
          }
          unint64_t v46 = v36[2];
          unint64_t v45 = v36[3];
          if (v46 >= v45 >> 1) {
            id v36 = (void *)sub_1005709CC(v45 > 1, v46 + 1, 1, (unint64_t)v36);
          }
          ++v35;
          v36[2] = v46 + 1;
          uint64_t v34 = v52;
          sub_100028C3C(v57, (uint64_t)v36 + v54 + v46 * v52, &qword_100792830);
          swift_bridgeObjectRelease();
        }
        while (v35 != v55);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      return v48;
    }
    else
    {
      return 0;
    }
  }
  else
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100018BF8(v27, (uint64_t)qword_1007A1D48);
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v28, v29))
    {
      Swift::OpaquePointer v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::OpaquePointer v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v30, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
}

void sub_10055248C(id *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v48 = a4;
  uint64_t v7 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = *a1;
  LOBYTE(a2) = sub_100457094(v14, a2);

  if (a2)
  {
    uint64_t v15 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
    swift_beginAccess();
    uint64_t v16 = *v15;
    id v17 = v14;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100598448(v17, v16);

    swift_bridgeObjectRelease();
    if (v18)
    {
      id v19 = [v18 subtaskContext];
      if (!v19)
      {

        return;
      }
      id v44 = v19;
      id v45 = v18;
      uint64_t v50 = 0;
      id v20 = [v19 fetchObjectIDsOfUnsupportedSubtasksWithError:&v50];
      uint64_t v21 = v50;
      if (!v20)
      {
        uint64_t v34 = v50;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_1007856D8 == -1) {
          goto LABEL_20;
        }
        goto LABEL_27;
      }
      uint64_t v22 = v20;
      sub_1000368FC(0, qword_10078E3D0);
      unint64_t v23 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v24 = v21;

      if (v23 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        if (v25) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v25 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (v25)
        {
LABEL_7:
          if (v25 >= 1)
          {
            uint64_t v26 = 0;
            uint64_t v47 = (uint64_t)a1 + *(int *)(v10 + 20);
            unint64_t v46 = v23 & 0xC000000000000001;
            unint64_t v27 = v23;
            do
            {
              if (v46) {
                specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v28 = *(id *)(v23 + 8 * v26 + 32);
              }
              sub_10003B694(v47, (uint64_t)v9, &qword_10078C890);
              TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)();
              os_log_type_t v29 = v48;
              unint64_t v30 = *v48;
              char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
              *os_log_type_t v29 = v30;
              if ((isUniquelyReferenced_nonNull_native & 1) == 0)
              {
                unint64_t v30 = sub_1005709E0(0, *(void *)(v30 + 16) + 1, 1, v30);
                unint64_t *v48 = v30;
              }
              unint64_t v33 = *(void *)(v30 + 16);
              unint64_t v32 = *(void *)(v30 + 24);
              if (v33 >= v32 >> 1)
              {
                unint64_t v30 = sub_1005709E0(v32 > 1, v33 + 1, 1, v30);
                unint64_t *v48 = v30;
              }
              ++v26;
              *(void *)(v30 + 16) = v33 + 1;
              sub_100555644((uint64_t)v13, v30+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
              unint64_t v23 = v27;
            }
            while (v25 != v26);
            goto LABEL_24;
          }
          __break(1u);
LABEL_27:
          swift_once();
LABEL_20:
          uint64_t v35 = type metadata accessor for Logger();
          sub_100018BF8(v35, (uint64_t)qword_1007A5A88);
          swift_errorRetain();
          swift_errorRetain();
          id v36 = v45;
          uint64_t v37 = Logger.logObject.getter();
          os_log_type_t v38 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = swift_slowAlloc();
            uint64_t v40 = (void *)swift_slowAlloc();
            uint64_t v48 = (unint64_t *)swift_slowAlloc();
            uint64_t v50 = v48;
            *(_DWORD *)uint64_t v39 = 138412546;
            id v41 = [v36 objectID];
            uint64_t v49 = (uint64_t)v41;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *uint64_t v40 = v41;

            *(_WORD *)(v39 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v42 = Error.rem_errorDescription.getter();
            uint64_t v49 = sub_1000385A8(v42, v43, (uint64_t *)&v50);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v37, v38, "Failed to fetch objectIDs of completed subtasks of reminder {reminder.objectID: %@, error: %s}", (uint8_t *)v39, 0x16u);
            sub_10003B754(&qword_10078AC60);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
          return;
        }
      }
LABEL_24:

      swift_bridgeObjectRelease_n();
    }
  }
}

void *sub_100552ACC(unint64_t a1)
{
  uint64_t v2 = sub_10055180C();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v3 = *(void *)(v2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v2, ObjectType, v3);
    swift_unknownObjectRelease();
    swift_retain();
    uint64_t v6 = sub_10047BB6C(a1, 0, v5, v2);
    swift_release();
    swift_release_n();
  }
  else
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_1007A1D48);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v10, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
  return v6;
}

uint64_t sub_100552C5C()
{
  return 0;
}

uint64_t sub_100552C68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v44 - v14);
  uint64_t v16 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTRTemplatePublicLinkData();
  __chkstk_darwin(v19);
  unint64_t v23 = (char *)v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (v24)
  {
    uint64_t v46 = v21;
    uint64_t v47 = v20;
    uint64_t v49 = v9;
    uint64_t v25 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 1, 1, v25);
    id v26 = v24;
    TTRTemplatePublicLinkData.init(template:now:)();
    type metadata accessor for TTRListColors();
    v51[3] = sub_1000368FC(0, (unint64_t *)&qword_10078D3B8);
    v51[4] = &protocol witness table for REMTemplate;
    v51[0] = v26;
    id v27 = v26;
    static TTRListColors.color(for:)();
    sub_10003B6F8((uint64_t)v51, &qword_100787480);
    id v28 = [v27 accountCapabilities];
    LODWORD(v26) = [v28 supportsSections];

    os_log_type_t v29 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
    int v45 = (int)v26;
    if (v29 && (id v30 = [v29 objectID]) != 0)
    {
      *uint64_t v15 = v30;
      uint64_t v31 = type metadata accessor for TTRListType();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v15, 0, 1, v31);
    }
    else
    {
      uint64_t v35 = type metadata accessor for TTRListType();
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v15, 1, 1, v35);
    }
    uint64_t v50 = a1;
    sub_10003B694((uint64_t)v15, (uint64_t)v12, (uint64_t *)&unk_100791C20);
    id v36 = [v27 name];
    uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v44[1] = v38;
    void v44[2] = v37;

    v44[0] = TTRListColors.Color.nativeColor.getter();
    uint64_t v48 = v12;
    id v39 = [v27 objectID:v44[0]];
    id v40 = [v39 stringRepresentation];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v41 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v49, 1, 1, v41);
    sub_1005556AC((uint64_t)v23, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v6, 0, 1, v47);
    uint64_t v42 = v50;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
    sub_100513A88((uint64_t)v52, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);

    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_100791C20);
    sub_100555714((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
    uint64_t v43 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
  }
  else
  {
    uint64_t v32 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    unint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    return v33(a1, 1, 1, v32);
  }
}

uint64_t sub_1005532C8()
{
  swift_release();

  return swift_release();
}

uint64_t sub_100553328()
{
  uint64_t v0 = sub_100588C8C();

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005533CC()
{
  return type metadata accessor for TTRShowTemplateViewModelSource();
}

uint64_t type metadata accessor for TTRShowTemplateViewModelSource()
{
  uint64_t result = qword_1007A5AF8;
  if (!qword_1007A5AF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100553420()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10055347C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100786EF0);
  double v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 objectID:v5];
  uint64_t v9 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template;
  uint64_t v10 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (!v10)
  {
    if (v8) {
      goto LABEL_6;
    }
LABEL_11:
    char v14 = 1;
    goto LABEL_12;
  }
  id v11 = [v10 objectID];
  id v12 = v11;
  if (!v8)
  {
    if (v11)
    {
      char v14 = 0;
      goto LABEL_9;
    }
    goto LABEL_11;
  }
  if (v11)
  {
    sub_1000368FC(0, qword_10078E3D0);
    id v13 = v8;
    char v14 = static NSObject.== infix(_:_:)();

LABEL_9:
    id v8 = v12;
    goto LABEL_10;
  }
LABEL_6:
  char v14 = 0;
LABEL_10:

LABEL_12:
  unsigned __int8 v15 = [a1 showingLargeAttachments];
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_showLargeAttachmentsValue) = v15;
  uint64_t v16 = *(void **)(v2 + v9);
  *(void *)(v2 + v9) = a1;

  id v17 = a1;
  sub_100552C68((uint64_t)v7);
  sub_1005885DC((uint64_t)v7);
  if ((v14 & 1) == 0)
  {
    uint64_t v18 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v19 = *(void *)(v18 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 88))(1, ObjectType, v19);
      swift_unknownObjectRelease();
    }
  }
  return sub_10003B6F8((uint64_t)v7, &qword_100786EF0);
}

uint64_t sub_100553654(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v84 = a4;
  uint64_t v90 = a3;
  uint64_t v87 = a2;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v10 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  id v12 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v76);
  uint64_t v77 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v14 - 8);
  uint64_t v81 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v16 - 8);
  uint64_t v80 = (uint64_t)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v74 = *(void *)(v18 - 8);
  uint64_t v75 = v18;
  __chkstk_darwin(v18);
  uint64_t v73 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v88 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v21 = (char *)&v72 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v26 = __chkstk_darwin(v25);
  id v28 = (char *)&v72 - v27;
  uint64_t v29 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template;
  id v30 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  uint64_t v31 = &selRef_setAxis_;
  uint64_t v82 = v12;
  uint64_t v83 = v9;
  uint64_t v79 = v10;
  id v89 = a1;
  if (v30)
  {
    id v32 = [v30 sortingStyle:v26];
    uint64_t v31 = &selRef_setAxis_;
    unint64_t v33 = v32;
    if (!a1)
    {
      int v34 = 1;
      if (v32)
      {
        int v85 = 0;
        goto LABEL_23;
      }
LABEL_17:
      int v85 = 1;
      uint64_t v42 = v86;
      uint64_t v41 = v87;
      if (!v87) {
        goto LABEL_27;
      }
      goto LABEL_24;
    }
  }
  else
  {
    if (!a1)
    {
      int v34 = 1;
      goto LABEL_17;
    }
    unint64_t v33 = 0;
  }
  id v35 = [a1 v31[315]];
  id v36 = v35;
  if (v33)
  {
    if (v35)
    {
      UIImage_optional v72 = v21;
      uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v39 = v38;
      if (v37 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v39 == v40) {
        int v85 = 1;
      }
      else {
        int v85 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = v72;
      goto LABEL_22;
    }
  }
  else
  {
    if (!v35)
    {
      int v85 = 1;
      goto LABEL_22;
    }
  }
  int v85 = 0;
LABEL_22:
  unint64_t v33 = *(void **)(v5 + v29);
  id v43 = v89;
  *(void *)(v5 + v29) = v89;
  id v44 = v43;
  int v34 = 0;
LABEL_23:
  uint64_t v42 = v86;
  uint64_t v41 = v87;

  if (!v41) {
    goto LABEL_27;
  }
LABEL_24:
  int v45 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
  *(void *)(v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation) = v41;
  id v46 = v41;

  uint64_t v47 = v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v48 = *(void *)(v47 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v48 + 120))(ObjectType, v48);
    swift_unknownObjectRelease();
  }

LABEL_27:
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  sub_10003B694((uint64_t)v28, (uint64_t)v24, &qword_100786F00);
  uint64_t v50 = v88;
  int v51 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v88 + 48))(v24, 1, v42);
  if (v51 == 1)
  {
    uint64_t v52 = 0;
    uint64_t v53 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v21, v24, v42);
    uint64_t v52 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v53 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v42);
  }
  int v54 = v85;
  sub_10003B6F8((uint64_t)v28, &qword_100786F00);
  uint64_t v55 = v5 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
  *(void *)uint64_t v55 = v52;
  *(void *)(v55 + 8) = v53;
  *(unsigned char *)(v55 + 16) = v51 == 1;
  if ((v34 | v54))
  {
    uint64_t v56 = v80;
    sub_100552C68(v80);
    *uint64_t v77 = 2;
    swift_storeEnumTagMultiPayload();
    sub_100105478(v93);
    sub_100028C3C((uint64_t)v93, (uint64_t)v94, (uint64_t *)&unk_10079CA00);
    uint64_t v57 = (uint64_t)v81;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v58 = (uint64_t)v82;
    sub_1005556AC(v57, (uint64_t)v82, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v59 = REMRemindersListDataView.FlatModel.reminders.getter();
    uint64_t v60 = v78;
    *(void *)(v58 + *(int *)(v78 + 20)) = v59;
    *(unsigned char *)(v58 + *(int *)(v60 + 24)) = 0;
    sub_10003B754(&qword_10078D1E8);
    unint64_t v61 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    uint64_t v62 = swift_allocObject();
    *(_OWORD *)(v62 + 16) = xmmword_10066C6F0;
    sub_1005556AC(v58, v62 + v61, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    uint64_t v63 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v64 = swift_allocObject();
    uint64_t v65 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v66 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v83, 1, 1, v65);
    v92[3] = v63;
    v92[4] = &off_10074D320;
    v92[0] = v64;
    sub_1000145EC((uint64_t)v92, (uint64_t)v91);
    uint64_t v67 = swift_allocObject();
    *(void *)(v67 + 16) = v62;
    sub_100038ED8(v91, v67 + 24);
    *(void *)(v67 + 64) = v5;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10059DBB0(1, v56, (uint64_t (*)(uint64_t))sub_100051174, v67, v84, 0, v66);
    swift_release();
    sub_100038CD8((uint64_t)v92);
    swift_bridgeObjectRelease();
    sub_10003B6F8(v66, (uint64_t *)&unk_100788DC0);
    sub_100555714(v58, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_100555714(v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10003B6F8(v56, &qword_100786EF0);
    return swift_release();
  }
  else
  {
    id v69 = v89;
    id v70 = [v69 sortingStyle];
    uint64_t v71 = (uint64_t)v73;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_10059388C(v71, 1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v74 + 8))(v71, v75);
  }
}

uint64_t sub_100553F20(id a1, void *a2, char *a3, uint64_t a4)
{
  uint64_t v87 = a4;
  uint64_t v95 = a3;
  id v91 = a2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v81 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v81 - v13;
  uint64_t v84 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v81 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v92 = *(void *)(v16 - 8);
  uint64_t v93 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v81 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v81 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v81 - v23;
  uint64_t v96 = type metadata accessor for REMRemindersListDataView.SectionsModel();
  uint64_t v94 = *(void *)(v96 - 8);
  __chkstk_darwin(v96);
  uint64_t v82 = (char *)&v81 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v81 - v28;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template;
  uint64_t v97 = v4;
  uint64_t v31 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  uint64_t v88 = v8;
  uint64_t v86 = v14;
  int v85 = v11;
  id v90 = a1;
  if (!v31)
  {
    if (!a1)
    {
      char v34 = 1;
      int v89 = 1;
      uint64_t v41 = v91;
      goto LABEL_23;
    }
    unint64_t v33 = 0;
LABEL_7:
    id v35 = [a1 sortingStyle];
    id v36 = v35;
    if (v33)
    {
      if (v35)
      {
        uint64_t v37 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v39 = v38;
        if (v37 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v39 == v40) {
          int v89 = 1;
        }
        else {
          int v89 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v90;
        goto LABEL_21;
      }
    }
    else
    {
      if (!v35)
      {
        int v89 = 1;
        goto LABEL_21;
      }
    }
    int v89 = 0;
LABEL_21:
    unint64_t v33 = *(void **)(v97 + v30);
    *(void *)(v97 + v30) = a1;
    id v42 = a1;
    char v34 = 0;
    goto LABEL_22;
  }
  [v31 sortingStyle:v27];
  unint64_t v33 = v32;
  if (a1) {
    goto LABEL_7;
  }
  char v34 = 1;
  if (!v32)
  {
    int v89 = 1;
    uint64_t v41 = v91;
    goto LABEL_23;
  }
  int v89 = 0;
LABEL_22:
  uint64_t v41 = v91;

LABEL_23:
  if (v41)
  {
    uint64_t v43 = v97;
    id v44 = *(void **)(v97 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation);
    *(void *)(v97 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation) = v41;
    id v45 = v41;

    uint64_t v46 = v43 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v47 = *(void *)(v46 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v47 + 120))(ObjectType, v47);
      swift_unknownObjectRelease();
    }
  }
  REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter();
  REMRemindersListDataView.SectionsModel.remindersCount.getter();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v94 + 8);
  v49(v29, v96);
  sub_10003B694((uint64_t)v24, (uint64_t)v21, &qword_100786F00);
  uint64_t v51 = v92;
  uint64_t v50 = v93;
  int v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v92 + 48))(v21, 1, v93);
  if (v52 == 1)
  {
    uint64_t v53 = 0;
    uint64_t v54 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v18, v21, v50);
    uint64_t v55 = v51;
    uint64_t v53 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v54 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v18, v50);
  }
  uint64_t v56 = v97;
  uint64_t result = sub_10003B6F8((uint64_t)v24, &qword_100786F00);
  uint64_t v58 = v56 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_remindersCount;
  *(void *)uint64_t v58 = v53;
  *(void *)(v58 + 8) = v54;
  *(unsigned char *)(v58 + 16) = v52 == 1;
  if ((v34 & 1) == 0)
  {
    id v59 = v90;
    uint64_t v60 = v59;
    if ((v89 & 1) == 0)
    {
      id v69 = [v59 sortingStyle];
      uint64_t v70 = (uint64_t)v81;
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_10059388C(v70, 1);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v83 + 8))(v70, v84);
    }
    uint64_t v61 = (uint64_t)v86;
    sub_100552C68((uint64_t)v86);
    uint64_t v62 = v82;
    uint64_t v63 = v95;
    REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter();
    uint64_t v64 = REMRemindersListDataView.SectionsModel.sections.getter();
    uint64_t v65 = ((uint64_t (*)(char *, uint64_t))v49)(v62, v96);
    __chkstk_darwin(v65);
    *(&v81 - 2) = (char *)v60;
    *(&v81 - 1) = v63;
    uint64_t v66 = sub_1000D60EC(v64, (void (*)(void, char *))sub_1005553A0, (uint64_t)(&v81 - 4));
    swift_bridgeObjectRelease();
    uint64_t v67 = (uint64_t)v85;
    sub_10003B694(v61, (uint64_t)v85, &qword_100786EF0);
    uint64_t v68 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 48))(v67, 1, v68) == 1)
    {
      sub_10003B6F8(v67, &qword_100786EF0);
    }
    else
    {
      int v71 = *(unsigned __int8 *)(v67 + *(int *)(v68 + 64));
      sub_100555714(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if (v71 == 1)
      {
        REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter();
        uint64_t v72 = REMRemindersListDataView.SectionsModel.sections.getter();
        v49(v62, v96);
        uint64_t v73 = sub_1000368FC(0, &qword_10078B5F8);
        type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
        uint64_t v74 = swift_allocObject();
        uint64_t v75 = swift_retain();
        *(void *)(v56 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance) = sub_1000D59C8(v75, v72, v73, 0, 1, &_swiftEmptySetSingleton, v74);
LABEL_38:
        swift_release();
        uint64_t v76 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
        uint64_t v77 = swift_allocObject();
        uint64_t v78 = type metadata accessor for TTRRemindersListViewModel.Item();
        uint64_t v79 = (uint64_t)v88;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v88, 1, 1, v78);
        v99[3] = v76;
        v99[4] = &off_10074D320;
        v99[0] = v77;
        sub_1000145EC((uint64_t)v99, (uint64_t)v98);
        uint64_t v80 = swift_allocObject();
        *(void *)(v80 + 16) = v66;
        sub_100038ED8(v98, v80 + 24);
        *(void *)(v80 + 64) = v56;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        sub_10059DBB0(1, v61, (uint64_t (*)(uint64_t))sub_100250D74, v80, v87, 0, v79);
        swift_release();
        sub_100038CD8((uint64_t)v99);
        swift_bridgeObjectRelease();

        sub_10003B6F8(v79, (uint64_t *)&unk_100788DC0);
        sub_10003B6F8(v61, &qword_100786EF0);
        return swift_release();
      }
    }
    *(void *)(v56 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance) = 0;
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_1005548D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v48 = a5;
  uint64_t v49 = a2;
  uint64_t v39 = a1;
  uint64_t v38 = type metadata accessor for REMRemindersListDataView.SectionsModel();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v40);
  id v45 = (uint64_t *)((char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v13 - 8);
  uint64_t v47 = (uint64_t)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v41 = (char *)&v33 - v16;
  type metadata accessor for TTRListColors();
  v70[3] = sub_1000368FC(0, (unint64_t *)&qword_10078D3B8);
  v70[4] = &protocol witness table for REMTemplate;
  v70[0] = a3;
  id v17 = a3;
  static TTRListColors.color(for:)();
  uint64_t v19 = v68[0];
  uint64_t v18 = v68[1];
  uint64_t v42 = v68[2];
  uint64_t v43 = v68[3];
  uint64_t v44 = v68[4];
  uint64_t v46 = v68[5];
  int v20 = v69;
  sub_10003B6F8((uint64_t)v70, &qword_100787480);
  REMRemindersListDataView.SectionLite.type.getter();
  int v21 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v21 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v22 = *v12;
    uint64_t v23 = v12[1];
    unint64_t v24 = v12[2];
    swift_bridgeObjectRelease();
    if (v39) {
      char v25 = 3;
    }
    else {
      char v25 = 2;
    }
    *id v45 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = v23;
    unint64_t v53 = v24;
    long long v54 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    int v57 = 192;
    char v58 = v25;
    __int16 v59 = v50;
    char v60 = v51;
    uint64_t v61 = v19;
    uint64_t v62 = v18;
    uint64_t v63 = v42;
    uint64_t v64 = v43;
    uint64_t v65 = v44;
    uint64_t v66 = v46;
    __int16 v67 = v20;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v52);
    sub_100028C3C((uint64_t)&v52, (uint64_t)v70, (uint64_t *)&unk_10079CA00);
    uint64_t v26 = (uint64_t)v41;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    sub_100513A88((uint64_t)v68, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    goto LABEL_8;
  }
  uint64_t v34 = v19;
  uint64_t v35 = v18;
  LODWORD(v39) = v20;
  double v27 = v45;
  uint64_t v26 = (uint64_t)v41;
  if (v21 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter();
    REMRemindersListDataView.SectionsModel.sections.getter();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v7, v38);
    swift_bridgeObjectRelease();
    sub_100513A88((uint64_t)v68, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    *double v27 = [v17 objectID];
    swift_storeEnumTagMultiPayload();
    uint64_t v52 = 0;
    unint64_t v53 = 0xE000000000000000;
    long long v54 = 0u;
    long long v55 = 0u;
    long long v56 = 0u;
    int v57 = 192;
    char v58 = 3;
    __int16 v59 = v50;
    char v60 = v51;
    uint64_t v61 = v34;
    uint64_t v62 = v35;
    uint64_t v63 = v42;
    uint64_t v64 = v43;
    uint64_t v65 = v44;
    uint64_t v66 = v46;
    __int16 v67 = v39;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v52);
    sub_100028C3C((uint64_t)&v52, (uint64_t)v70, (uint64_t *)&unk_10079CA00);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
LABEL_8:
    uint64_t v28 = v47;
    sub_1005556AC(v26, v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v29 = REMRemindersListDataView.SectionLite.reminders.getter();
    sub_100513A88((uint64_t)v68, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    sub_100555714(v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v30 = v28;
    uint64_t v31 = v48;
    sub_100555644(v30, v48, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(void *)(v31 + *(int *)(result + 20)) = v29;
    *(unsigned char *)(v31 + *(int *)(result + 24)) = 0;
    return result;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

double sub_100554EAC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_template);
  if (v2
    && (uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_listRepresentation)) != 0)
  {
    *(void *)(a1 + 24) = &type metadata for DragAndDropREMTemplateTarget;
    *(void *)(a1 + 32) = &off_1007503A8;
    *(void *)a1 = v2;
    *(void *)(a1 + 8) = v3;
    id v7 = v3;
    id v4 = v2;
    id v5 = v7;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

uint64_t sub_100554F34()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  id v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1005556AC(v11, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    char v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v4, v1);
    v13(v7, v1);
  }
  return v12 & 1;
}

void *sub_10055513C()
{
  return sub_100555470();
}

uint64_t sub_100555148(uint64_t a1, void *a2)
{
  return sub_1005553A8(a2);
}

uint64_t sub_100555150(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance)) {
    return 0;
  }
  swift_retain();
  id v4 = (void *)sub_100421E44((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  uint64_t v5 = sub_100230EF8(v4, a2);
  swift_release_n();
  return v5;
}

void *sub_1005551E4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  id v3 = v1;
  id v4 = v2;
  return v1;
}

void *sub_10055521C(void *a1)
{
  id v4 = *(void **)v1;
  id v3 = *(void **)(v1 + 8);
  id v5 = a1;
  id v6 = v4;
  id v7 = v3;
  return a1;
}

BOOL sub_100555264()
{
  return (static TTRListEditor.actualOperation(forChangingParentListOf:to:)() & 0xFE) == 4;
}

BOOL sub_1005552B0(uint64_t a1, void *a2)
{
  id v4 = *(void **)(v2 + 8);
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  id v5 = [a2 list];
  id v6 = [v5 objectID];

  id v7 = [v4 objectID];
  char v8 = static NSObject.== infix(_:_:)();

  if ((v8 & 1) == 0) {
    return 0;
  }
  type metadata accessor for TTRListEditor();
  return (static TTRListEditor.actualOperation(forChangingParentListOf:to:)() & 0xFE) == 4;
}

uint64_t sub_1005553A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1005548D0(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1005553A8(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders30TTRShowTemplateViewModelSource_sectionsContextInstance);
  if (!v2) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t ObjectType = swift_getObjectType();
    id v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v7(ObjectType, v5);
    swift_unknownObjectRelease();
    id v8 = a1;
    uint64_t Strong = TTRSection.init(with:store:)();
    swift_release();
  }
  return Strong;
}

void *sub_100555470()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  id v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  id v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_100555714((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      id v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_100555644((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      id v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_100555714((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_100555644(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005556AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100555714(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100555774()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005557AC()
{
  return sub_100550DF4(v0[2], v0[3], v0[4]);
}

void sub_1005557B8()
{
  TTRTemplateEditor.edit(showingLargeAttachments:)(*(unsigned char *)(v0 + 16));
}

uint64_t assignWithCopy for DragAndDropREMTemplateTarget(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

ValueMetadata *type metadata accessor for DragAndDropREMTemplateTarget()
{
  return &type metadata for DragAndDropREMTemplateTarget;
}

uint64_t type metadata accessor for TTRStoreReviewController()
{
  return self;
}

void *sub_100555874(void *a1, void *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    id v7 = (void *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    id v7 = a1;
    uint64_t v8 = a3[5];
    id v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for REMHashtagLabelSpecifier();
    id v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[7];
    *((unsigned char *)v7 + a3[6]) = *((unsigned char *)a2 + a3[6]);
    *((unsigned char *)v7 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[8];
    uint64_t v15 = (char *)v7 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *(_OWORD *)uint64_t v15 = *(_OWORD *)v16;
    unsigned char v15[16] = v16[16];
  }
  return v7;
}

uint64_t sub_100555998(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for REMHashtagLabelSpecifier();
  id v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_100555A10(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  uint64_t v12 = a3[8];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  return a1;
}

void *sub_100555AE8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  uint64_t v10 = a3[8];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  char v13 = v12[16];
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  unsigned char v11[16] = v13;
  return a1;
}

void *sub_100555BB8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  return a1;
}

void *sub_100555C74(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  id v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *((unsigned char *)a1 + a3[6]) = *((unsigned char *)a2 + a3[6]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  uint64_t v11 = a3[8];
  uint64_t v12 = (char *)a1 + v11;
  char v13 = (char *)a2 + v11;
  *(_OWORD *)uint64_t v12 = *(_OWORD *)v13;
  v12[16] = v13[16];
  return a1;
}

uint64_t sub_100555D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100555D4C);
}

uint64_t sub_100555D4C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for REMHashtagLabelSpecifier();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100555DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100555E10);
}

void *sub_100555E10(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for REMHashtagLabelSpecifier();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel()
{
  uint64_t result = qword_1007A6178;
  if (!qword_1007A6178) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100555F04()
{
  uint64_t result = type metadata accessor for REMHashtagLabelSpecifier();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100555FBC()
{
  id v1 = objc_allocWithZone(v0);
  return TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)();
}

id sub_10055606C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIRemindersListEditableSectionNameTextView();
  return [super dealloc];
}

uint64_t type metadata accessor for TTRIRemindersListEditableSectionNameTextView()
{
  return self;
}

uint64_t type metadata accessor for TTRIRemindersBoardRootViewDragInteractionHandler()
{
  return self;
}

void *sub_1005562A0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v52 = (uint64_t)v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v54 = (uint64_t)v46 - v8;
  uint64_t v51 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v9 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v53 = (uint64_t)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v11 - 8);
  char v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v14 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v56 = (uint64_t)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v72 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)(a1 + 16);
  if (!v17) {
    return result;
  }
  v46[1] = v2;
  uint64_t v63 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  uint64_t v18 = *(void *)(v63 - 8);
  uint64_t v19 = a1;
  uint64_t v20 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v50 = a2 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_coordinatorID;
  uint64_t v64 = *(void *)(v18 + 72);
  __int16 v59 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  long long v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  uint64_t v49 = (void (**)(uint64_t, void, uint64_t, int *))(v9 + 56);
  uint64_t v48 = (unsigned int (**)(uint64_t, uint64_t, int *))(v9 + 48);
  v46[0] = v19;
  swift_bridgeObjectRetain();
  unint64_t v47 = 0x80000001006A4710;
  uint64_t v58 = a2 + 16;
  while (1)
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (!result) {
      goto LABEL_6;
    }
    int v21 = result;
    uint64_t v22 = *(void **)((char *)result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_mainDataSource);
    if (!v22) {
      goto LABEL_28;
    }
    uint64_t v23 = *(int *)(v63 + 24);
    uint64_t v24 = (uint64_t)v22 + direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees;
    swift_beginAccess();
    uint64_t v25 = type metadata accessor for TTRRemindersBoardPresentationTrees();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25)) {
      break;
    }
    (*v59)(v13, 1, 1, v62);
LABEL_4:
    sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DC0);
LABEL_5:
    swift_unknownObjectRelease();
LABEL_6:
    v20 += v64;
    if (!--v17)
    {
      swift_bridgeObjectRelease();
      return (void *)v72;
    }
  }
  uint64_t v26 = v20 + v23;
  sub_1000145EC(v24, (uint64_t)v69);
  uint64_t v28 = v70;
  uint64_t v27 = v71;
  sub_100038D28(v69, v70);
  uint64_t v61 = v17;
  char v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
  id v29 = v22;
  uint64_t v57 = v26;
  v60(v26, v28, v27);
  uint64_t v17 = v61;
  sub_100038CD8((uint64_t)v69);

  if ((*v55)(v13, 1, v62) == 1) {
    goto LABEL_4;
  }
  uint64_t v30 = v56;
  sub_100556CC4((uint64_t)v13, v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v31 = *(void *)((char *)v21 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v31 + 8) + 472))(v30, ObjectType);
  unint64_t v34 = v33;
  if (!(v33 >> 62))
  {
    uint64_t result = *(void **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_13;
    }
    goto LABEL_23;
  }
  uint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  if (!result)
  {
LABEL_23:
    swift_bridgeObjectRelease();
    sub_100556C64(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_5;
  }
LABEL_13:
  if ((v34 & 0xC000000000000001) != 0)
  {
    uint64_t v35 = (void (*)(uint64_t, uint64_t, uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
  if (*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v35 = (void (*)(uint64_t, uint64_t, uint64_t))*(id *)(v34 + 32);
LABEL_16:
    char v60 = v35;
    swift_bridgeObjectRelease();
    sub_100556C64(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_unknownObjectRelease();
    uint64_t v36 = type metadata accessor for UUID();
    uint64_t v37 = v53;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 16))(v53, v50, v36);
    uint64_t v38 = (int *)v51;
    sub_1000342A8(v20, v37 + *(int *)(v51 + 20), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v39 = v20 + *(int *)(v63 + 20);
    uint64_t v40 = v37 + v38[6];
    uint64_t v41 = type metadata accessor for IndexPath();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 16))(v40, v39, v41);
    sub_1000342A8(v57, v37 + v38[7], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(unsigned char *)(v37 + v38[8]) = 0;
    uint64_t v42 = v54;
    sub_1000342A8(v37, v54, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    (*v49)(v42, 0, 1, v38);
    uint64_t v43 = v42;
    uint64_t v44 = v52;
    sub_100556BFC(v43, v52);
    if ((*v48)(v44, 1, v38) == 1)
    {
      sub_10003B6F8(v44, (uint64_t *)&unk_10079CFC0);
      long long v67 = 0u;
      long long v68 = 0u;
    }
    else
    {
      *((void *)&v68 + 1) = v38;
      id v45 = sub_1000394A8((uint64_t *)&v67);
      sub_100556CC4(v44, (uint64_t)v45, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    }
    unint64_t v65 = 0xD000000000000022;
    unint64_t v66 = v47;
    AnyHashable.init<A>(_:)();
    UIDragItem.setLocalObject(_:forKey:)();
    sub_100055AE8((uint64_t)v69);
    sub_10003B6F8((uint64_t)&v67, &qword_100788D60);
    sub_10003B6F8(v54, (uint64_t *)&unk_10079CFC0);
    sub_100556C64(v53, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_6;
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100556B1C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v1 = Strong;
  if (*(unsigned char *)(Strong
                + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) != 1
    || (*(unsigned char *)(Strong
                 + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_shouldHandleNextRootViewDragInteraction) = 0,
        !swift_unknownObjectWeakLoadStrong()))
  {
    swift_unknownObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  sub_100447890();
  uint64_t v3 = v2;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  uint64_t v4 = sub_1005562A0(v3, v1);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease_n();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_100556BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100556C64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100556CC4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100556D2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A6220);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A6220);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100556DF4()
{
  if (qword_100785788 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1007BBDB0;
  uint64_t v31 = qword_1007BBDB0;
  sub_10003B754(&qword_1007907A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  sub_10055B8C0();
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(unsigned char *)(inited + 72) = 1;
  LOBYTE(v27) = 0;
  __int16 v30 = 256;
  sub_1002F0F24();
  uint64_t v2 = Array<A>.index<A>(forInsertingAt:where:)();
  char v4 = v3;
  sub_10003B694((uint64_t)&v27, (uint64_t)v26, &qword_100799C48);
  if (v4)
  {
    sub_10003B694((uint64_t)v26, (uint64_t)&v15, &qword_100799C48);
    if (v21)
    {
      if (v21 == 1)
      {
        sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v22);
LABEL_13:
        sub_10003B6F8((uint64_t)&v22, &qword_100799C50);
        uint64_t v2 = *(void *)(v0 + 16);
        goto LABEL_14;
      }
      if (v20 || v18 | v19 | v15 | v17 | v16)
      {
        uint64_t v24 = 0;
        long long v22 = 0u;
        long long v23 = 0u;
        char v25 = -1;
        goto LABEL_13;
      }
      uint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
      char v25 = -1;
    }
    else
    {
      sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v22);
    }
    sub_10003B6F8((uint64_t)&v22, &qword_100799C50);
    uint64_t v2 = 0;
  }
LABEL_14:
  sub_10003B6F8((uint64_t)v26, &qword_100799C48);
  sub_10054E9F8(v2, v2, inited);
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)&v27, &qword_100799C48);
  LOBYTE(v27) = 1;
  AnyHashable.init<A>(_:)();
  char v25 = 1;
  uint64_t v27 = 1;
  long long v28 = 0u;
  long long v29 = 0u;
  __int16 v30 = 512;
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066C6F0;
  sub_1001DC898((uint64_t)&v22, v5 + 32);
  uint64_t v6 = v31;
  uint64_t v7 = Array<A>.index<A>(forInsertingAt:where:)();
  char v9 = v8;
  sub_10003B694((uint64_t)&v27, (uint64_t)v26, &qword_100799C48);
  if (v9)
  {
    sub_10003B694((uint64_t)v26, (uint64_t)&v15, &qword_100799C48);
    if (v21)
    {
      if (v21 == 1)
      {
        sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v11);
LABEL_24:
        sub_10003B6F8((uint64_t)&v11, &qword_100799C50);
        uint64_t v7 = *(void *)(v6 + 16);
        goto LABEL_25;
      }
      if (v20 || v18 | v19 | v15 | v17 | v16)
      {
        uint64_t v13 = 0;
        long long v11 = 0u;
        long long v12 = 0u;
        char v14 = -1;
        goto LABEL_24;
      }
      uint64_t v13 = 0;
      long long v11 = 0u;
      long long v12 = 0u;
      char v14 = -1;
    }
    else
    {
      sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v11);
    }
    sub_10003B6F8((uint64_t)&v11, &qword_100799C50);
    uint64_t v7 = 0;
  }
LABEL_25:
  sub_10003B6F8((uint64_t)v26, &qword_100799C48);
  sub_10054E9F8(v7, v7, v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_10003B6F8((uint64_t)&v27, &qword_100799C48);
  sub_1002F103C((uint64_t)&v22);
  return v31;
}

uint64_t sub_100557210()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  char v3 = &v17[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = &v17[-v5];
  AnyHashable.base.getter();
  if (!swift_dynamicCast()) {
    return 0;
  }
  if (v17[15])
  {
    uint64_t v7 = *(void *)(v0 + 144);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v7 + 136))(ObjectType, v7);
    sub_10003B694((uint64_t)v6, (uint64_t)v3, &qword_100786EF0);
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v3, 1, v9) == 1)
    {
      sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
LABEL_8:
      sub_10003B6F8((uint64_t)v6, &qword_100786EF0);
      return 0;
    }
    int v13 = v3[*(int *)(v9 + 84)];
    sub_1002F7C20((uint64_t)v3);
    if (v13 != 1) {
      goto LABEL_8;
    }
    NSString v14 = String._bridgeToObjectiveC()();
    id v15 = [self _systemImageNamed:v14];

    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    static TTRLocalizableStrings.RemindersList.deleteListActionText.getter();
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v12 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_10003B6F8((uint64_t)v6, &qword_100786EF0);
    swift_release();
  }
  else
  {
    NSString v10 = String._bridgeToObjectiveC()();
    id v11 = [self _systemImageNamed:v10];

    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    static TTRLocalizableStrings.AccountsList.showListInfoText.getter();
    swift_allocObject();
    swift_weakInit();
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  return v12;
}

uint64_t sub_1005575A8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 16))(ObjectType, v2);
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      uint64_t v6 = *(void *)(v1 + 80);
      uint64_t v7 = swift_getObjectType();
      char v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 248);
      swift_unknownObjectRetain();
      uint64_t v9 = (void *)v8(v5, v7, v6);
      swift_unknownObjectRelease();
      swift_unknownObjectRetain();
      swift_retain();
      sub_10055B1D0(v9, v1);
      swift_unknownObjectRelease();
      swift_release();
      NSString v10 = (uint64_t *)TTRITipKitSignalContext.RemindersList.MoreMenu.list.unsafeMutableAddressor();
      uint64_t v11 = *v10;
      uint64_t v12 = (void *)v10[1];
      swift_bridgeObjectRetain();
      v13.value._uint64_t countAndFlagsBits = v11;
      v13.value._object = v12;
      TTRITipKitSignal.donate(signalContext:)(v13);
      swift_release();

      return swift_bridgeObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_100557704()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100558CFC();
    return swift_release();
  }
  return result;
}

double sub_10055775C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [v6 groceryContext];

    if (v8)
    {
      if ([v8 shouldCategorizeGroceryItems])
      {
        *(void *)(a1 + 24) = type metadata accessor for TTRIShowRemindersInListPresenter();
        *(void *)(a1 + 32) = &off_1007503F8;
        swift_retain();

        *(void *)a1 = v2;
        return result;
      }
    }
  }
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

void sub_10055782C()
{
  v35[1] = *v0;
  uint64_t v1 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v37 = *(void *)(v1 - 8);
  uint64_t v38 = v1;
  __chkstk_darwin(v1);
  uint64_t v36 = (char *)v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856E0 != -1) {
    swift_once();
  }
  uint64_t v7 = sub_100018BF8(v3, (uint64_t)qword_1007A6220);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497473696CLL;
  *(void *)(inited + 40) = 0xE600000000000000;
  uint64_t v39 = v0;
  uint64_t v9 = *(void *)((char *)v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = (void *)v40(ObjectType, v9);
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = [v11 objectID];
  }
  else
  {
    id v13 = 0;
  }
  id v41 = v13;
  sub_10003B754(&qword_10078A9C0);
  uint64_t v14 = String.init<A>(describing:)();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v15;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v16 = (void *)v40(ObjectType, v9);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v16 groceryContext];
    uint64_t v19 = v39;
    if (v18)
    {
      char v20 = v18;
      if ([v18 shouldCategorizeGroceryItems])
      {
        char v21 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
        type metadata accessor for REMAnalyticsManager();
        id v22 = v21;
        static REMAnalyticsManager.shared.getter();
        uint64_t v23 = sub_10003B754(&qword_100791F78);
        uint64_t v24 = v36;
        char v25 = (uint64_t *)&v36[*(int *)(v23 + 48)];
        uint64_t v26 = (uint64_t *)&v36[*(int *)(v23 + 80)];
        uint64_t v27 = enum case for REMUserOperation.openGroceryList(_:);
        uint64_t v28 = type metadata accessor for REMUserOperation();
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v24, v27, v28);
        *char v25 = TTRUserDefaults.activitySessionId.getter();
        v25[1] = v29;
        TTRUserDefaults.activitySessionBeginTime.getter();
        *uint64_t v26 = _typeName(_:qualified:)();
        v26[1] = v30;
        uint64_t v32 = v37;
        uint64_t v31 = v38;
        (*(void (**)(char *, void, uint64_t))(v37 + 104))(v24, enum case for REMAnalyticsEvent.userOperation(_:), v38);
        REMAnalyticsManager.post(event:)();

        swift_release();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v24, v31);
      }
      else
      {
      }
    }
    uint64_t v33 = v19[10];
    uint64_t v34 = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v33 + 496))(v17, v34, v33);
  }
}

void sub_100557CA4(char a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t)v2;
  uint64_t v95 = *v2;
  uint64_t v6 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v97 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v96 = (char *)v92 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for REMUserOperation();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v99 = (char *)v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10079E2C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v98 = (uint64_t)v92 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)v92 - v12;
  __chkstk_darwin(v14);
  uint64_t v102 = (uint64_t)v92 - v15;
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(uint64_t *)((char *)v2 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(ObjectType, v20);
  if (!v22) {
    return;
  }
  long long v103 = v22;
  if ([v22 canBeShared])
  {
    uint64_t v94 = v6;
    if (qword_1007856E0 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100018BF8(v16, (uint64_t)qword_1007A6220);
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v23, v16);
    sub_10003B754((uint64_t *)&unk_100788E30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = 0x44497463656A626FLL;
    *(void *)(inited + 40) = 0xE800000000000000;
    id v25 = [v103 objectID];
    *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
    *(void *)(inited + 48) = v25;
    sub_10003D820(inited);
    sub_10001A078();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    uint64_t v26 = *(void (**)(void, void, void, void))(v100 + 56);
    v26(v102, 1, 1, v101);
    id v27 = [v103 account];
    char v28 = REMAccount.listSharingUIType.getter();

    if (v28)
    {
      if (v28 == 1)
      {
        sub_10055AF68(v103, v3);
        unsigned int v29 = [v103 isShared];
        uint64_t v30 = v102;
        sub_10003B6F8(v102, &qword_10079E2C0);
        uint64_t v31 = enum case for REMSharedListUserOperationDetail.calDAVShare(_:);
        uint64_t v32 = type metadata accessor for REMSharedListUserOperationDetail();
        uint64_t v33 = *(void *)(v32 - 8);
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 104))(v13, v31, v32);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v13, 0, 1, v32);
        uint64_t v34 = v100;
        uint64_t v35 = (unsigned int *)&enum case for REMUserOperation.manageSharedList(_:);
        if (!v29) {
          uint64_t v35 = (unsigned int *)&enum case for REMUserOperation.startSharedList(_:);
        }
        uint64_t v36 = v101;
        (*(void (**)(char *, void, uint64_t))(v100 + 104))(v13, *v35, v101);
        v26(v13, 0, 1, v36);
        sub_10055B7D0((uint64_t)v13, v30);
        goto LABEL_34;
      }
      uint64_t v42 = v103;
      uint64_t v43 = Logger.logObject.getter();
      os_log_type_t v44 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v43, v44))
      {
        uint64_t v45 = swift_slowAlloc();
        uint64_t v46 = (void *)swift_slowAlloc();
        v92[1] = v46;
        uint64_t v93 = swift_slowAlloc();
        uint64_t v112 = v93;
        *(_DWORD *)uint64_t v45 = 138412802;
        id v47 = [v42 objectID];
        id aBlock = (uint64_t)v47;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v46 = v47;
        *(_WORD *)(v45 + 12) = 2080;
        id aBlock = 0;
        unint64_t v105 = 0xE000000000000000;
        id v48 = [v42 account];
        id v49 = [v48 type];

        id v111 = v49;
        type metadata accessor for REMAccountType(0);
        _print_unlocked<A, B>(_:_:)();
        id aBlock = sub_1000385A8(aBlock, v105, &v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v45 + 22) = 2080;
        id aBlock = 0;
        unint64_t v105 = 0xE000000000000000;
        unsigned int v50 = [v42 canBeShared];
        BOOL v51 = v50 == 0;
        if (v50) {
          uint64_t v52 = 1702195828;
        }
        else {
          uint64_t v52 = 0x65736C6166;
        }
        if (v51) {
          unint64_t v53 = 0xE500000000000000;
        }
        else {
          unint64_t v53 = 0xE400000000000000;
        }
        unint64_t v54 = v53;
        String.append(_:)(*(Swift::String *)&v52);
        swift_bridgeObjectRelease();
        id aBlock = sub_1000385A8(aBlock, v105, &v112);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v43, v44, "Trying to share a list that doesn't support sharing. Probably list.canBeShared is wrong. {listID: %@, accountType: %s, canBeShared: %s}", (uint8_t *)v45, 0x20u);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      goto LABEL_29;
    }
    if (a1)
    {
      sub_1000C43A4(v103, a2);
      uint64_t v30 = v102;
      sub_10003B6F8(v102, &qword_10079E2C0);
      uint64_t v38 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
      uint64_t v39 = type metadata accessor for REMSharedListUserOperationDetail();
      uint64_t v40 = *(void *)(v39 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 104))(v30, v38, v39);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v30, 0, 1, v39);
      id v41 = (unsigned int *)&enum case for REMUserOperation.startSharedList(_:);
    }
    else
    {
      long long v55 = (objc_class *)type metadata accessor for TTRIListSharingController();
      uint64_t v56 = (char *)objc_allocWithZone(v55);
      *(void *)&v56[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate + 8] = 0;
      swift_unknownObjectWeakInit();
      uint64_t v57 = v103;
      *(void *)&v56[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list] = v103;
      v110.receiver = v56;
      v110.super_class = v55;
      id v58 = v57;
      id v59 = [super init];
      char v60 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController);
      *(void *)(v3 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController) = v59;
      uint64_t v61 = (char *)v59;

      *(void *)&v61[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate + 8] = &off_100750410;
      swift_unknownObjectWeakAssign();
      id v62 = sub_1005E081C();
      if (!v62)
      {

LABEL_29:
        uint64_t v36 = v101;
        uint64_t v34 = v100;
        uint64_t v30 = v102;
LABEL_34:
        uint64_t v75 = v98;
        sub_10003B694(v30, v98, &qword_10079E2C0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v75, 1, v36) == 1)
        {
          sub_10003B6F8(v30, &qword_10079E2C0);

          uint64_t v76 = v75;
        }
        else
        {
          uint64_t v77 = v99;
          (*(void (**)(char *, uint64_t, uint64_t))(v34 + 32))(v99, v75, v36);
          type metadata accessor for REMAnalyticsManager();
          uint64_t v78 = v34;
          uint64_t v101 = static REMAnalyticsManager.shared.getter();
          uint64_t v79 = sub_10003B754(&qword_100791F78);
          uint64_t v80 = v96;
          uint64_t v81 = (uint64_t *)&v96[*(int *)(v79 + 48)];
          uint64_t v82 = (uint64_t *)&v96[*(int *)(v79 + 80)];
          (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v96, v77, v36);
          uint64_t v83 = (id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
          id v84 = *v83;
          uint64_t v85 = TTRUserDefaults.activitySessionId.getter();
          uint64_t v87 = v86;

          uint64_t *v81 = v85;
          v81[1] = v87;
          id v88 = *v83;
          TTRUserDefaults.activitySessionBeginTime.getter();

          uint64_t *v82 = _typeName(_:qualified:)();
          v82[1] = v89;
          uint64_t v90 = v97;
          uint64_t v91 = v94;
          (*(void (**)(char *, void, uint64_t))(v97 + 104))(v80, enum case for REMAnalyticsEvent.userOperation(_:), v94);
          REMAnalyticsManager.post(event:)();

          swift_release();
          (*(void (**)(char *, uint64_t))(v90 + 8))(v80, v91);
          (*(void (**)(char *, uint64_t))(v78 + 8))(v99, v36);
          uint64_t v76 = v102;
        }
        sub_10003B6F8(v76, &qword_10079E2C0);
        return;
      }
      uint64_t v63 = v62;
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      uint64_t v30 = v102;
      if (Strong)
      {
        unint64_t v65 = Strong;
        id v66 = [Strong presentedViewController];
        if (v66)
        {
          long long v67 = v66;
          uint64_t v68 = swift_allocObject();
          *(void *)(v68 + 16) = v65;
          *(void *)(v68 + 24) = v63;
          *(unsigned char *)(v68 + 32) = 1;
          uint64_t v108 = sub_1001DC43C;
          uint64_t v109 = v68;
          id aBlock = (uint64_t)_NSConcreteStackBlock;
          unint64_t v105 = 1107296256;
          uint64_t v106 = sub_10000AD88;
          uint64_t v107 = &unk_100750518;
          unsigned __int8 v69 = _Block_copy(&aBlock);
          id v70 = v65;
          id v71 = v63;
          swift_release();
          [v67 dismissViewControllerAnimated:1 completion:v69];

          _Block_release(v69);
        }
        else
        {
          [v65 presentViewController:v63 animated:1 completion:0];
        }
      }
      else
      {
      }
      sub_10003B6F8(v30, &qword_10079E2C0);
      uint64_t v72 = enum case for REMSharedListUserOperationDetail.cloudKitShare(_:);
      uint64_t v73 = type metadata accessor for REMSharedListUserOperationDetail();
      uint64_t v74 = *(void *)(v73 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 104))(v30, v72, v73);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v30, 0, 1, v73);
      id v41 = (unsigned int *)&enum case for REMUserOperation.manageSharedList(_:);
    }
    uint64_t v34 = v100;
    uint64_t v36 = v101;
    (*(void (**)(uint64_t, void, uint64_t))(v100 + 104))(v30, *v41, v101);
    v26(v30, 0, 1, v36);
    goto LABEL_34;
  }
  uint64_t v37 = v103;
}

id sub_100558AD0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  id v5 = [v3 account];

  return v5;
}

uint64_t sub_100558B4C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = *(void *)(v0 + 160);
    uint64_t ObjectType = swift_getObjectType();
    _OWORD v6[3] = type metadata accessor for TTRIShowRemindersInListPresenter();
    v6[4] = &off_10073CC68;
    v6[0] = v0;
    uint64_t v4 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded);
    id v5 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v2 + 16);
    swift_retain();
    v5(v6, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    uint64_t result = sub_100038CD8((uint64_t)v6);
  }
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded) = 0;
  return result;
}

uint64_t sub_100558C28@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    sub_10055B6CC();
  }
  else
  {
    swift_unknownObjectWeakInit();
    v5[1] = &off_1007503E8;
    swift_unknownObjectWeakAssign();
    sub_10055B720((uint64_t)v5, (uint64_t)v6);
    sub_10055B77C();
  }
  AnyTip.init<A>(_:)();
  uint64_t v3 = type metadata accessor for AnyTip();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(a2, 0, 1, v3);
}

void sub_100558CFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 16))(ObjectType, v6);
  if (!v8) {
    return;
  }
  id v9 = (id)v8;
  if (qword_1007856E0 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_100018BF8(v2, (uint64_t)qword_1007A6220);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v10, v2);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  long long v48 = xmmword_10066C6F0;
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v12 = [v9 objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v12;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id aBlock = 0;
  id v13 = [v9 fetchRemindersWithError:&aBlock];
  uint64_t v14 = aBlock;
  if (!v13)
  {
    char v28 = aBlock;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_11:
    static TTRLocalizableStrings.RemindersList.deleteList.getter();
    unsigned int v29 = self;
    char v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = v1;
    void v19[3] = v9;
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_10055B918;
    *(void *)(v23 + 24) = v19;
    unint64_t v53 = sub_1000499FC;
    uint64_t v54 = v23;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v50 = 1107296256;
    BOOL v51 = sub_100021888;
    uint64_t v52 = &unk_100750608;
    uint64_t v30 = _Block_copy(&aBlock);
    id v9 = v9;
    swift_retain();
    swift_retain();
    swift_release();
    [v29 withActionName:v21 block:v30];

    _Block_release(v30);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = v13;
  sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v17 = v14;

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_11;
  }
  uint64_t v19 = v9;
  id v20 = [v19 displayName];
  char v21 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v23 = v22;

  if ((char *)[v19 sharingStatus] - 1 >= (char *)3)
  {
LABEL_13:
    unint64_t v27 = 0xD000000000000036;
    unint64_t v25 = 0x80000001006B2B70;
    unint64_t v26 = 0x80000001006B2B90;
    uint64_t v24 = 0x1000000000000015;
    goto LABEL_14;
  }
  uint64_t v24 = 0x100000000000001CLL;
  unint64_t v25 = 0x80000001006B2BD0;
  unint64_t v26 = 0x80000001006B2BF0;
  unint64_t v27 = 0xD000000000000032;
LABEL_14:
  TTRLocalizedString(_:comment:)(*(Swift::String *)&v24, *(Swift::String *)&v27);
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v48;
  *(void *)(v32 + 56) = &type metadata for String;
  *(void *)(v32 + 64) = sub_1000965C8();
  *(void *)(v32 + 32) = v21;
  *(void *)(v32 + 40) = v23;
  String.init(format:_:)();
  swift_bridgeObjectRelease();

  uint64_t v33 = v19;
  sub_1002BEE24(v9, 0);

  NSString v34 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v35 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v36 = [self alertControllerWithTitle:v34 message:v35 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  NSString v37 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v38 = self;
  id v39 = [v38 actionWithTitle:v37 style:1 handler:0];

  static TTRLocalizableStrings.Common.deleteButton.getter();
  uint64_t v40 = swift_allocObject();
  swift_weakInit();
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v40;
  *(void *)(v41 + 24) = v33;
  uint64_t v42 = v33;
  swift_retain();
  NSString v43 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unint64_t v53 = sub_10055B980;
  uint64_t v54 = v41;
  id aBlock = _NSConcreteStackBlock;
  uint64_t v50 = 1107296256;
  BOOL v51 = sub_1001077FC;
  uint64_t v52 = &unk_100750658;
  os_log_type_t v44 = _Block_copy(&aBlock);
  swift_release();
  id v45 = [v38 actionWithTitle:v43 style:2 handler:v44];
  _Block_release(v44);
  swift_release();

  [v36 addAction:v39];
  [v36 addAction:v45];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v47 = Strong;
    [Strong presentViewController:v36 animated:1 completion:0];

    id v36 = v39;
    id v39 = v45;
    id v45 = v42;
    uint64_t v42 = v47;
  }
}

uint64_t sub_10055950C(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    static TTRLocalizableStrings.RemindersList.deleteList.getter();
    uint64_t v6 = self;
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v5;
    *(void *)(v8 + 24) = a3;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = sub_10055B98C;
    *(void *)(v9 + 24) = v8;
    aBlock[4] = sub_1000499FC;
    aBlock[5] = v9;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    aBlock[3] = &unk_1007506D0;
    uint64_t v10 = _Block_copy(aBlock);
    swift_retain();
    id v11 = a3;
    swift_retain();
    swift_release();
    [v6 withActionName:v7 block:v10];

    swift_release();
    _Block_release(v10);
    LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v5) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1005596DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)REMList.accountCapabilities.getter();
  unsigned __int8 v5 = [v4 supportsDeletionByTTL];

  *(unsigned char *)(a1
           + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded) = v5;
  uint64_t v6 = *(void *)(a1 + 80);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 560))(a2, ObjectType, v6);
}

void sub_100559760()
{
  swift_unknownObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController);
}

uint64_t sub_1005597A0()
{
  uint64_t v0 = sub_10019B470();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100559824()
{
  return type metadata accessor for TTRIShowRemindersInListPresenter();
}

uint64_t type metadata accessor for TTRIShowRemindersInListPresenter()
{
  uint64_t result = qword_1007A6278;
  if (!qword_1007A6278) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100559878()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005598D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v3 = (void *)(v2
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderTitle);
  swift_beginAccess();
  *uint64_t v3 = 0;
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)(v2
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_suggestedSectionCanonicalNameByReminderID);
  swift_beginAccess();
  *uint64_t v4 = 0;
  swift_bridgeObjectRelease();
  unsigned __int8 v5 = (void *)(v2
                + OBJC_IVAR____TtC9Reminders35TTRRemindersListPresenterCapability_reminderIDsPreviouslyShownWithSuggestedSection);
  swift_beginAccess();
  *unsigned __int8 v5 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v6 + 112))(ObjectType, v6))
  {
    uint64_t v9 = v8;
    uint64_t v10 = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v9 + 16))(&_swiftEmptySetSingleton, v10, v9);
    swift_unknownObjectRelease();
  }
  uint64_t v11 = *(void *)(v2 + 64);
  uint64_t v12 = swift_getObjectType();
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 96))(v12, v11);
  if (v13)
  {
    uint64_t v14 = v13;
    swift_beginAccess();
    *(void *)(v14 + 40) = &_swiftEmptySetSingleton;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = *(void *)(v1 + 24);
    uint64_t v17 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v16 + 288))(v17, v16);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100559AA0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

uint64_t sub_100559AE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v8)
    {
      sub_100038D28((void *)(v8 + 48), *(void *)(v8 + 72));
      swift_retain();
      sub_10034CB38(a3, a4);
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100559BB0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
  if (!v3) {
    return 0;
  }
  uint64_t v4 = v3;
  id v5 = [v3 groceryContext];
  if (v5)
  {
    uint64_t v6 = v5;
    if ([v5 shouldCategorizeGroceryItems]) {
      id v7 = [self isInternalInstall];
    }
    else {
      id v7 = 0;
    }
  }
  else
  {
    id v7 = 0;
  }

  return v7;
}

void sub_100559C78()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
  if (v7)
  {
    id v14 = v7;
    id v8 = [v7 groceryContext];
    if (v8)
    {
      id v13 = v8;
      if ([v8 shouldCategorizeGroceryItems])
      {
        static TaskPriority.userInitiated.getter();
        uint64_t v9 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 0, 1, v9);
        uint64_t v10 = (void *)swift_allocObject();
        void v10[2] = 0;
        v10[3] = 0;
        v10[4] = v1;
        void v10[5] = v14;
        swift_retain();
        id v11 = v14;
        sub_10055AC94((uint64_t)v4, (uint64_t)&unk_1007A6C30, (uint64_t)v10);

        swift_release();
        sub_10003B6F8((uint64_t)v4, &qword_10079AF90);
        return;
      }

      id v12 = v13;
    }
    else
    {
      id v12 = v14;
    }
  }
}

uint64_t sub_100559E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  sub_10003B754(&qword_10079AF90);
  v5[14] = swift_task_alloc();
  sub_10003B754((uint64_t *)&unk_100788DF0);
  v5[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for URL();
  v5[16] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[17] = v7;
  v5[18] = *(void *)(v7 + 64);
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for CharacterSet();
  v5[21] = v8;
  v5[22] = *(void *)(v8 - 8);
  v5[23] = swift_task_alloc();
  return _swift_task_switch(sub_100559FEC, 0, 0);
}

uint64_t sub_100559FEC()
{
  uint64_t v1 = *(void *)(v0[12] + 80);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 640) + **(int **)(v1 + 640));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[24] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10055A0F4;
  uint64_t v4 = v0[13];
  return v6(v4, ObjectType, v1);
}

uint64_t sub_10055A0F4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_10055A900;
  }
  else {
    uint64_t v4 = sub_10055A208;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10055A208()
{
  unint64_t v65 = v0;
  v0[5] = 0xD000000000000030;
  uint64_t v1 = v0[25];
  uint64_t v3 = v0[22];
  uint64_t v2 = v0[23];
  uint64_t v4 = v0[21];
  v0[6] = 0x80000001006BEC30;
  static CharacterSet.alphanumerics.getter();
  sub_100022F44();
  uint64_t v5 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
  unint64_t v7 = v6;
  char v60 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v60(v2, v4);
  swift_bridgeObjectRelease();
  if (v7) {
    uint64_t v8 = v5;
  }
  else {
    uint64_t v8 = 0;
  }
  unint64_t v9 = 0xE000000000000000;
  if (v7) {
    unint64_t v9 = v7;
  }
  v61._uint64_t countAndFlagsBits = v8;
  v61._object = (void *)v9;
  uint64_t v10 = v1 + 64;
  uint64_t v11 = -1;
  uint64_t v12 = -1 << *(unsigned char *)(v1 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1 << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v1 + 64);
  int64_t v14 = (unint64_t)(63 - v12) >> 6;
  swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v16 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_10;
    }
    int64_t v28 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v28 >= v14) {
      goto LABEL_30;
    }
    unint64_t v29 = *(void *)(v10 + 8 * v28);
    ++v15;
    if (!v29)
    {
      int64_t v15 = v28 + 1;
      if (v28 + 1 >= v14) {
        goto LABEL_30;
      }
      unint64_t v29 = *(void *)(v10 + 8 * v15);
      if (!v29)
      {
        int64_t v15 = v28 + 2;
        if (v28 + 2 >= v14) {
          goto LABEL_30;
        }
        unint64_t v29 = *(void *)(v10 + 8 * v15);
        if (!v29)
        {
          int64_t v15 = v28 + 3;
          if (v28 + 3 >= v14) {
            goto LABEL_30;
          }
          unint64_t v29 = *(void *)(v10 + 8 * v15);
          if (!v29)
          {
            int64_t v15 = v28 + 4;
            if (v28 + 4 >= v14) {
              goto LABEL_30;
            }
            unint64_t v29 = *(void *)(v10 + 8 * v15);
            if (!v29) {
              break;
            }
          }
        }
      }
    }
LABEL_29:
    unint64_t v13 = (v29 - 1) & v29;
    unint64_t v17 = __clz(__rbit64(v29)) + (v15 << 6);
LABEL_10:
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (uint64_t *)(*(void *)(v1 + 48) + v18);
    id v20 = (void *)v19[1];
    char v21 = (uint64_t *)(*(void *)(v1 + 56) + v18);
    uint64_t v23 = *v21;
    uint64_t v22 = (void *)v21[1];
    uint64_t v63 = *v19;
    unint64_t v64 = (unint64_t)v20;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    v24._uint64_t countAndFlagsBits = 15917;
    v24._object = (void *)0xE200000000000000;
    String.append(_:)(v24);
    v25._uint64_t countAndFlagsBits = v23;
    v25._object = v22;
    String.append(_:)(v25);
    v26._uint64_t countAndFlagsBits = 10;
    v26._object = (void *)0xE100000000000000;
    String.append(_:)(v26);
    v27._uint64_t countAndFlagsBits = v63;
    v27._object = v20;
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  int64_t v30 = v28 + 5;
  if (v30 < v14)
  {
    unint64_t v29 = *(void *)(v10 + 8 * v30);
    if (!v29)
    {
      while (1)
      {
        int64_t v15 = v30 + 1;
        if (__OFADD__(v30, 1)) {
          break;
        }
        if (v15 >= v14) {
          goto LABEL_30;
        }
        unint64_t v29 = *(void *)(v10 + 8 * v15);
        ++v30;
        if (v29) {
          goto LABEL_29;
        }
      }
LABEL_46:
      __break(1u);
LABEL_47:
      swift_once();
      goto LABEL_37;
    }
    int64_t v15 = v30;
    goto LABEL_29;
  }
LABEL_30:
  uint64_t v31 = v0[23];
  uint64_t v32 = v0[21];
  uint64_t v34 = v0[16];
  uint64_t v33 = v0[17];
  uint64_t v35 = v0[15];
  swift_release();
  swift_bridgeObjectRelease();
  v0[7] = 0xD00000000000001ALL;
  v0[8] = 0x80000001006BEC70;
  static CharacterSet.alphanumerics.getter();
  uint64_t v36 = StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
  uint64_t v38 = v37;
  v60(v31, v32);
  swift_bridgeObjectRelease();
  if (v38) {
    uint64_t v39 = v36;
  }
  else {
    uint64_t v39 = 0;
  }
  if (!v38) {
    uint64_t v38 = (void *)0xE000000000000000;
  }
  uint64_t v63 = 0;
  unint64_t v64 = 0xE000000000000000;
  _StringGuts.grow(_:)(179);
  v40._uint64_t countAndFlagsBits = 0xD0000000000000A8;
  v40._object = (void *)0x80000001006BEC90;
  String.append(_:)(v40);
  v41._uint64_t countAndFlagsBits = v39;
  v41._object = v38;
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  v42._uint64_t countAndFlagsBits = 0x3D656C74695426;
  v42._object = (void *)0xE700000000000000;
  String.append(_:)(v42);
  String.append(_:)(v61);
  swift_bridgeObjectRelease();
  uint64_t v10 = 0;
  int64_t v14 = 0xE000000000000000;
  URL.init(string:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v35, 1, v34) != 1)
  {
    uint64_t v48 = v0[19];
    uint64_t v47 = v0[20];
    uint64_t v49 = v0[17];
    uint64_t v50 = v0[15];
    uint64_t v51 = v0[16];
    uint64_t v52 = v0[14];
    uint64_t v62 = v52;
    swift_bridgeObjectRelease();
    unint64_t v53 = *(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 32);
    v53(v47, v50, v51);
    uint64_t v54 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v52, 1, 1, v54);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v49 + 16))(v48, v47, v51);
    type metadata accessor for MainActor();
    uint64_t v55 = static MainActor.shared.getter();
    unint64_t v56 = (*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = v55;
    *(void *)(v57 + 24) = &protocol witness table for MainActor;
    v53(v57 + v56, v48, v51);
    sub_10019B448(v62, (uint64_t)&unk_1007A6C40, v57);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v47, v51);
    goto LABEL_42;
  }
  sub_10003B6F8(v0[15], (uint64_t *)&unk_100788DF0);
  if (qword_1007856E0 != -1) {
    goto LABEL_47;
  }
LABEL_37:
  uint64_t v43 = type metadata accessor for Logger();
  sub_100018BF8(v43, (uint64_t)qword_1007A6220);
  swift_bridgeObjectRetain();
  os_log_type_t v44 = Logger.logObject.getter();
  os_log_type_t v45 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v44, v45))
  {
    uint64_t v46 = (uint8_t *)swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v46 = 136315138;
    swift_bridgeObjectRetain();
    v0[11] = sub_1000385A8(v10, v14, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to file radar with grocery local corrections due to invalid radar URL {radarURL: %s}", v46, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

LABEL_42:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v58 = (uint64_t (*)(void))v0[1];
  return v58();
}

uint64_t sub_10055A900()
{
  uint64_t v10 = v0;
  if (qword_1007856E0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_1007A6220);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 80) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to file radar with grocery local corrections due to error upon fetching grocery local corrections {error: %s}", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_10055AB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10055ABF0, v6, v5);
}

uint64_t sub_10055ABF0()
{
  swift_release();
  id v1 = [self defaultWorkspace];
  if (v1)
  {
    LSApplicationWorkspace.open(universalLink:)();
  }
  **(unsigned char **)(v0 + 16) = v1 == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10055AC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v8, &qword_10079AF90);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10003B6F8((uint64_t)v8, &qword_10079AF90);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    long long v16[2] = v11;
    uint64_t v16[3] = v13;
  }
  return swift_task_create();
}

void sub_10055AE88()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
  if (v3)
  {
    uint64_t v4 = *(void *)(v0 + 80);
    id v8 = (id)v3;
    uint64_t v5 = swift_getObjectType();
    (*(void (**)(id, uint64_t, uint64_t))(v4 + 648))(v8, v5, v4);
    uint64_t v6 = *(void *)(v0 + 144);
    uint64_t v7 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v6 + 696))(v7, v6);
  }
}

void sub_10055AF68(void *a1, uint64_t a2)
{
  id v4 = [a1 store];
  id v5 = [a1 objectID];
  v18[0] = 0;
  id v6 = [v4 fetchListWithObjectID:v5 error:v18];

  if (v6)
  {
    id v7 = v18[0];
    id v8 = sub_100412D84(v6, a2, [v6 isOwnedByMe] ^ 1u);
    swift_unknownObjectRelease();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = Strong;
      id v11 = [Strong presentedViewController];
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = v10;
        *(void *)(v13 + 24) = v8;
        *(unsigned char *)(v13 + 32) = 1;
        v18[4] = sub_10020A430;
        uint64_t v18[5] = (id)v13;
        v18[0] = _NSConcreteStackBlock;
        v18[1] = (id)1107296256;
        v18[2] = sub_10000AD88;
        v18[3] = &unk_100750568;
        uint64_t v14 = _Block_copy(v18);
        id v15 = v10;
        id v16 = v8;
        swift_release();
        [v12 dismissViewControllerAnimated:1 completion:v14];

        _Block_release(v14);
      }
      else
      {
        [v10 presentViewController:v8 animated:1 completion:0];
      }
    }
    else
    {
    }
  }
  else
  {
    id v17 = v18[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
}

void sub_10055B1D0(void *a1, uint64_t a2)
{
  id v4 = [a1 saveRequest];
  id v5 = [v4 store];

  id v6 = sub_1004188E4(v5, a1, 1, a2, (uint64_t)&off_100750438);
  uint64_t v8 = v7;

  id v9 = v6;
  swift_retain();
  id v12 = sub_100411798(v9, v8, 0, 0, 0);

  swift_release_n();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = Strong;
    [Strong presentViewController:v12 animated:1 completion:0];
  }
}

uint64_t sub_10055B2EC(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  static TTRLocalizableStrings.UndoAction.changeList.getter();
  uint64_t v10 = self;
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(void *)(v12 + 24) = a3;
  *(unsigned char *)(v12 + 32) = a4;
  *(void *)(v12 + 40) = a1;
  *(void *)(v12 + 48) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10017EE18;
  *(void *)(v13 + 24) = v12;
  v17[4] = sub_1000218B0;
  void v17[5] = v13;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  v17[2] = sub_100021888;
  v17[3] = &unk_1007504C8;
  uint64_t v14 = _Block_copy(v17);
  swift_retain();
  id v15 = a3;
  swift_unknownObjectRetain();
  swift_retain();
  swift_release();
  [v10 withActionName:v11 block:v14];

  _Block_release(v14);
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v11) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10055B4B4()
{
  swift_release();

  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10055B4FC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10055B50C()
{
  v0._uint64_t countAndFlagsBits = 0x1000000000000034;
  v1._object = (void *)0x80000001006B9EB0;
  v0._object = (void *)0x80000001006BEB90;
  v1._uint64_t countAndFlagsBits = 0x1000000000000015;
  TTRLocalizedString(_:comment:)(v1, v0);
  v2._object = (void *)0x80000001006B9ED0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000037;
  v3._uint64_t countAndFlagsBits = 0xD000000000000037;
  v3._object = (void *)0x80000001006B9ED0;
  TTRLocalizedString(_:comment:)(v2, v3);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v11 = [self alertControllerWithTitle:v4 message:v5 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertOKButton.getter();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [self actionWithTitle:v6 style:0 handler:0];

  [v11 addAction:v7];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = Strong;
    [Strong presentViewController:v11 animated:1 completion:0];

    uint64_t v10 = v9;
  }
  else
  {
    uint64_t v10 = v11;
  }
}

unint64_t sub_10055B6CC()
{
  unint64_t result = qword_1007A6C10;
  if (!qword_1007A6C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A6C10);
  }
  return result;
}

uint64_t sub_10055B720(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_10055B77C()
{
  unint64_t result = qword_1007A6C18;
  if (!qword_1007A6C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A6C18);
  }
  return result;
}

uint64_t sub_10055B7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10079E2C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10055B838()
{
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10055B878()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10055B8B0()
{
  return sub_100557704();
}

uint64_t sub_10055B8B8()
{
  return sub_1005575A8();
}

unint64_t sub_10055B8C0()
{
  unint64_t result = qword_1007A6C20;
  if (!qword_1007A6C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1007A6C20);
  }
  return result;
}

uint64_t sub_10055B918()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 80);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 560))(v1, ObjectType, v2);
}

uint64_t sub_10055B96C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10055B980(uint64_t a1)
{
  return sub_10055950C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10055B98C()
{
  return sub_1005596DC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10055B994()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10055B9A4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10055B9EC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10000C2D4;
  return sub_100559E58(a1, v4, v5, v7, v6);
}

uint64_t sub_10055BAAC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10055BAE4()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10055BBB0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10003D2E4;
  return sub_10055AB58(a1, v5, v6, v7);
}

unsigned char *storeEnumTagSinglePayload for TTRIShowRemindersInListPresenter.ActionMenuCustomItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10055BD68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersInListPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowRemindersInListPresenter.ActionMenuCustomItem;
}

unint64_t sub_10055BDA4()
{
  unint64_t result = qword_1007A6C48;
  if (!qword_1007A6C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A6C48);
  }
  return result;
}

uint64_t sub_10055BE24()
{
  return swift_retain();
}

id sub_10055BE68()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v4, (uint64_t)v3, &qword_100786EF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 0;
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_1005605A0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_10055BFA0()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue);
}

void sub_10055BFB0(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) != (a1 & 1))
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) = a1 & 1;
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
    if (v2)
    {
      id v4 = v2;
      id v3 = [v4 customContext];

      if (v3)
      {
        type metadata accessor for TTRSmartListEditor();
        __chkstk_darwin(v4);
        static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)();
      }
      else
      {
      }
    }
  }
}

uint64_t sub_10055C0CC()
{
  int v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders);
  if (v1 != 2) {
    return v1 & 1 | 0x40u;
  }
  uint64_t result = 64;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount + 16) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount) <= 0) {
      return 64;
    }
    else {
      return 65;
    }
  }
  return result;
}

uint64_t sub_10055C114@<X0>(void *a1@<X8>)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v3 && (id v4 = [v3 customContext]) != 0)
  {
    uint64_t v5 = v4;
    id v6 = (char *)a1 + *(int *)(sub_10003B754(&qword_10078B610) + 48);
    id v7 = [v5 account];
    id v8 = [v7 objectID];

    *a1 = v8;
    uint64_t v9 = REMSmartListCustomContext.filter.getter();
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      REMCustomSmartListFilterDescriptor.lists.getter();
    }
    else
    {

      uint64_t v16 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v6, 1, 1, v16);
    }
    uint64_t v17 = type metadata accessor for TTRAutoCompleteReminderListScope();
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v14 = a1;
    uint64_t v15 = 0;
    uint64_t v13 = v17;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TTRAutoCompleteReminderListScope();
    uint64_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1;
    uint64_t v15 = 1;
  }

  return v12(v14, v15, 1, v13);
}

void *sub_10055C2C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  id v2 = v1;
  return v1;
}

uint64_t sub_10055C2FC@<X0>(uint64_t a1@<X8>)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  id v4 = sub_1005993E8;
  if (v3)
  {
    id v5 = v3;
    id v6 = sub_10055C3AC();
    uint64_t v8 = v7;
    char v10 = v9;
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    id v4 = sub_100513BCC;
  }
  else
  {
    id v6 = 0;
    uint64_t v8 = 0;
    char v10 = 0;
    uint64_t result = 0;
  }
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v8;
  *(unsigned char *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = result;
  return result;
}

id sub_10055C3AC()
{
  uint64_t v1 = sub_10003B754(&qword_100789F80);
  __chkstk_darwin(v1 - 8);
  id v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (!v8) {
    return 0;
  }
  id v9 = v8;
  id v10 = [v9 customContext];
  if (v10)
  {
    uint64_t v11 = (void *)REMSmartListCustomContext.filter.getter();

    if (v11)
    {
      REMCustomSmartListFilterDescriptor.lists.getter();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v7, v3, v4);
        id v13 = [self daemonUserDefaults];
        id v14 = [v13 preferredDefaultListID];

        id v10 = (id)REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)();
        (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);

        return v10;
      }

      sub_10003B6F8((uint64_t)v3, &qword_100789F80);
    }
    else
    {
    }
    return 0;
  }

  return v10;
}

uint64_t sub_10055C64C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  if (*(void *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance))
  {
    __chkstk_darwin(a1);
    swift_retain();
    char v7 = sub_1002AE304(a1, a4 & 1, (uint64_t (*)(uint64_t))sub_100560668);
    swift_release();
  }
  else
  {
    char v7 = 0;
  }
  return v7 & 1;
}

uint64_t sub_10055C708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100560600(a3, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  swift_storeEnumTagMultiPayload();
  LOBYTE(a3) = sub_10045B98C((uint64_t)v6);
  sub_1005605A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return a3 & 1;
}

uint64_t sub_10055C7E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10055C92C();
  sub_100560600(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1005605A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = &off_10073C570;
    id v10 = sub_1000394A8((uint64_t *)a2);
    uint64_t result = sub_100560600(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(uint64_t *)((char *)v10 + *(int *)(v9 + 20)) = v7;
    *((unsigned char *)v10 + *(int *)(v9 + 24)) = 0;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return swift_release();
  }
  return result;
}

uint64_t sub_10055C92C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    id v3 = (void *)REMSmartListTypeCustom;
    type metadata accessor for TTRAttributeMatchingDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(unsigned char *)(v2 + 40) = 1;
    *(void *)(v2 + 24) = &off_100750800;
    *(void *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    id v4 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10055C9E4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(ObjectType, v7))
  {
    uint64_t v10 = v9;
    uint64_t v11 = swift_getObjectType();
    LOBYTE(v10) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 56))(a1, v11, v10);
    swift_unknownObjectRelease();
    if ((v10 & 1) == 0) {
      goto LABEL_7;
    }
  }
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (!v12) {
    goto LABEL_7;
  }
  uint64_t v13 = (uint64_t)[v12 customContext];
  if (v13)
  {
    id v14 = (void *)REMSmartListCustomContext.filter.getter();

    if (v14)
    {
      sub_10003B754(&qword_10078B620);
      uint64_t v13 = swift_allocObject();
      *(_OWORD *)(v13 + 16) = xmmword_10066C6F0;
      sub_1000145EC(a1, v13 + 32);
      static Set<>.typesSupportedByCustomSmartList.getter();
      v18[3] = &type metadata for TTRReminderIDsWithMatchingHashtagsProvider;
      v18[4] = sub_1000D6930();
      v18[0] = v13;
      uint64_t v15 = REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)();
      swift_bridgeObjectRelease();
      sub_100038CD8((uint64_t)v18);
      v17[2] = v15;
      sub_1000145EC(a1, (uint64_t)v18);
      v17[1] = v15;
      sub_10003B754(&qword_10078B630);
      sub_1000D6984();
      Sequence<>.postFetchPredicateTypes.getter();
      REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(reminder:forEvaluatingAgainst:)();
      LOBYTE(v13) = Sequence<>.evaluate(with:)();

      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      swift_bridgeObjectRelease();
      return v13 & 1;
    }
LABEL_7:
    LOBYTE(v13) = 0;
  }
  return v13 & 1;
}

uint64_t sub_10055CC58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_10055C92C();
  sub_10016B49C(a1, a2, a3);

  return swift_release();
}

uint64_t sub_10055CCB4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_10055C92C();
  sub_10016B62C(a1, a2);

  return swift_release();
}

void sub_10055CD08(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v5);
  uint64_t v7 = (void **)((char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v18)
  {
    unint64_t v35 = a2;
    id v36 = v18;
    id v19 = [v36 customContext];
    if (v19 && (id v20 = v19, v34 = v13, v21 = (void *)REMSmartListCustomContext.filter.getter(), v20, v21))
    {
      Date.init()();
      TTRReminderEditor.edit(toMatch:now:)();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
      swift_retain();
      swift_retain();
      TTRMutableTreeStorage.parent(of:)();
      swift_release();
      swift_release();
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.Item();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v10, 1, v22) == 1)
      {

        sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v24 = (uint64_t)v34;
          sub_10010570C((uint64_t)v10, (uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_100560600(v24, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            Swift::String v25 = *v7;
            sub_10003B754((uint64_t *)&unk_1007894B0);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10066D470;
            unint64_t v27 = v35;
            int64_t v28 = *(void **)(v35 + 16);
            *(void *)(inited + 32) = [v28 objectID];
            unint64_t v38 = inited;
            specialized Array._endMutation()();
            sub_100028180(v38);
            swift_bridgeObjectRelease();
            type metadata accessor for TTRSmartListEditor();
            id v37 = v36;
            id v29 = v36;
            id v30 = [v28 saveRequest];
            unint64_t v38 = v27;
            type metadata accessor for TTRReminderEditor();
            sub_1000D69E0();
            TTRUndoableEditing.undoManager.getter();
            TTROneshotEditing.init(item:saveRequest:undoManager:)();
            id v31 = v25;
            TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();

            swift_bridgeObjectRelease();
            swift_release();

            uint64_t v32 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
            uint64_t v33 = v24;
          }
          else
          {
            sub_1005605A0(v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

            uint64_t v32 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
            uint64_t v33 = (uint64_t)v7;
          }
        }
        else
        {

          uint64_t v32 = &type metadata accessor for TTRRemindersListViewModel.Item;
          uint64_t v33 = (uint64_t)v10;
        }
        sub_1005605A0(v33, (uint64_t (*)(void))v32);
      }
    }
    else
    {
      id v23 = v36;
    }
  }
}

void sub_10055D220(void *a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  double v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v8)
  {
    id v9 = [v8 customContext:v5];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = (void *)REMSmartListCustomContext.filter.getter();

      if (v11)
      {
        type metadata accessor for TTRReminderEditor();
        sub_1000D69E0();
        id v12 = a1;
        TTRUndoableEditing.init(changeItem:undoManager:)();
        Date.init()();
        TTRReminderEditor.edit(toMatch:now:)();

        swift_release();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
      }
    }
  }
}

void *sub_10055D37C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v1)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    id v2 = v1;
    uint64_t v1 = (void *)static NSUserActivity.forStoringCustomSmartListPayload(for:)();
  }
  return v1;
}

uint64_t sub_10055D3E4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v1)
  {
    v4[3] = type metadata accessor for TTRUserActivityListPayload();
    v4[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
    *sub_1000394A8(v4) = (uint64_t)v1;
    type metadata accessor for TTRUserActivityListPayload.State();
    swift_storeEnumTagMultiPayload();
    id v2 = v1;
    NSUserActivity.setPayload(_:)();

    return sub_100038CD8((uint64_t)v4);
  }
  return result;
}

void *sub_10055D484()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v10)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    id v11 = v10;
    uint64_t v10 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
    uint64_t v12 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_100588C58(ObjectType, v13);
      swift_unknownObjectRelease();
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 1, v15) != 1)
      {
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_1005605A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ItemID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
        goto LABEL_7;
      }
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    }
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
LABEL_7:
    uint64_t v18 = (uint64_t)v3 + *(int *)(sub_10003B754(&qword_10078B618) + 48);
    *uint64_t v3 = [v11 objectID];
    sub_10003B694((uint64_t)v9, v18, (uint64_t *)&unk_10078E360);
    type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
    swift_storeEnumTagMultiPayload();
    _OWORD v22[3] = v1;
    v22[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
    id v19 = sub_1000394A8(v22);
    sub_100560600((uint64_t)v3, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    NSUserActivity.setPayload(_:)();

    sub_1005605A0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
    sub_100038CD8((uint64_t)v22);
  }
  return v10;
}

void *sub_10055D7E0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v1)
  {
    id v2 = [v1 accountCapabilities];
    [v2 supportsSections];
  }
  return v1;
}

uint64_t sub_10055D868()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_100018C30(v0, qword_1007A6C50);
  *(unsigned char *)sub_100018BF8(v0, (uint64_t)qword_1007A6C50) = 0;

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10055D8C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v14)
  {
    uint64_t v55 = v9;
    unint64_t v56 = v6;
    uint64_t v57 = a1;
    type metadata accessor for TTRListColors();
    v58[3] = sub_1000368FC(0, (unint64_t *)&qword_10078D250);
    v58[4] = &protocol witness table for REMSmartList;
    v58[0] = v14;
    id v15 = v14;
    static TTRListColors.color(for:)();
    sub_10003B6F8((uint64_t)v58, &qword_100787480);
    id v16 = [v15 accountCapabilities];
    unsigned int v52 = [v16 supportsSections];

    *uint64_t v12 = [v15 objectID];
    uint64_t v17 = type metadata accessor for TTRListType();
    swift_storeEnumTagMultiPayload();
    uint64_t v18 = *(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    uint64_t v54 = v12;
    v18(v12, 0, 1, v17);
    id v53 = v15;
    v58[0] = v15;
    uint64_t v19 = protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartList();
    uint64_t v50 = v20;
    uint64_t v51 = v19;
    uint64_t v49 = TTRListColors.Color.nativeColor.getter();
    uint64_t v21 = 0;
    uint64_t v22 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount);
    int v47 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount + 16);
    if ((v47 & 1) == 0) {
      uint64_t v21 = v22[1];
    }
    uint64_t v48 = v21;
    uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    Swift::String v25 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    if (v25(ObjectType, v23)) {
      swift_unknownObjectRelease();
    }
    Swift::String v26 = *(void **)(v2 + v13);
    if (v26)
    {
      id v27 = v26;
      id v28 = [v27 accountCapabilities];
      unsigned int v46 = [v28 supportsSections];
    }
    else
    {
      unsigned int v46 = 0;
    }
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 24))(ObjectType, v23)) {
      swift_unknownObjectRelease();
    }
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 64))(ObjectType, v23)) {
      swift_unknownObjectRelease();
    }
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v23 + 56))(v58, ObjectType, v23);
    sub_10003B6F8((uint64_t)v58, &qword_100791FA0);
    if (v25(ObjectType, v23))
    {
      uint64_t v33 = v32;
      uint64_t v34 = swift_getObjectType();
      int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v34, v33);
      swift_unknownObjectRelease();
    }
    else
    {
      int v35 = 0;
    }
    char v36 = *((unsigned char *)v22 + 16);
    int v45 = v35;
    if (v36) {
      uint64_t v44 = 0;
    }
    else {
      uint64_t v44 = *v22;
    }
    id v37 = v53;
    id v38 = [v53 objectID];
    id v39 = [v38 stringRepresentation];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v55, 1, 1, v40);
    uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v56, 1, 1, v41);
    [v37 isOriginOfExistingTemplate];
    uint64_t v42 = v57;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();

    sub_100513A88((uint64_t)v59, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    uint64_t v43 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
  }
  else
  {
    uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    id v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56);
    return v30(a1, 1, 1, v29);
  }
}

uint64_t sub_10055DF74()
{
  swift_release();

  return swift_release();
}

uint64_t sub_10055DFC4()
{
  uint64_t v0 = sub_100588C8C();
  swift_release();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10055E058()
{
  return type metadata accessor for TTRShowCustomSmartListViewModelSource();
}

uint64_t type metadata accessor for TTRShowCustomSmartListViewModelSource()
{
  uint64_t result = qword_1007A6CC0;
  if (!qword_1007A6CC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10055E0AC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10055E110(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  double v10 = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a1 objectID];
  uint64_t v14 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  id v15 = *(void **)((char *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  if (v15)
  {
    unsigned int v46 = v12;
    uint64_t v16 = v5;
    id v17 = [v15 objectID];
    id v18 = v17;
    if (v13)
    {
      if (v17)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v19 = v13;
        uint64_t v47 = v4;
        uint64_t v48 = v6;
        id v20 = v19;
        char v21 = static NSObject.== infix(_:_:)();

        uint64_t v4 = v47;
        uint64_t v6 = v48;
        id v13 = v18;
      }
      else
      {
        char v21 = 0;
      }
      goto LABEL_10;
    }
    if (v17)
    {
      char v21 = 0;
      id v13 = v17;
LABEL_10:
      uint64_t v5 = v16;
      uint64_t v12 = v46;

      goto LABEL_13;
    }
    char v21 = 1;
    uint64_t v5 = v16;
    uint64_t v12 = v46;
  }
  else if (v13)
  {
    char v21 = 0;
  }
  else
  {
    char v21 = 1;
  }
LABEL_13:
  unsigned __int8 v22 = [a1 showingLargeAttachments];
  *((unsigned char *)v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_showLargeAttachmentsValue) = v22;
  uint64_t v23 = *(void **)((char *)v2 + v14);
  *(void *)((char *)v2 + v14) = a1;

  id v24 = a1;
  sub_10055D8C8((uint64_t)v12);
  sub_1005885DC((uint64_t)v12);
  if ((v21 & 1) == 0)
  {
    uint64_t v47 = v4;
    uint64_t v48 = v6;
    unsigned int v46 = (char *)v5;
    Swift::String v25 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v26 = *((void *)v25 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 88))(1, ObjectType, v26);
      swift_unknownObjectRelease();
    }
    id v28 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    type metadata accessor for REMAnalyticsManager();
    id v29 = v28;
    static REMAnalyticsManager.shared.getter();
    uint64_t v30 = sub_10003B754(&qword_10078D258);
    id v31 = (uint64_t *)&v8[*(int *)(v30 + 48)];
    uint64_t v32 = (uint64_t *)&v8[*(int *)(v30 + 80)];
    uint64_t v33 = enum case for REMRemindersOpenUserOperation.customSmartList(_:);
    uint64_t v34 = type metadata accessor for REMRemindersOpenUserOperation();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v8, v33, v34);
    uint64_t *v31 = TTRUserDefaults.activitySessionId.getter();
    v31[1] = v35;
    TTRUserDefaults.activitySessionBeginTime.getter();
    *uint64_t v32 = _typeName(_:qualified:)();
    v32[1] = v36;
    uint64_t v37 = v48;
    id v38 = v46;
    (*(void (**)(char *, void, char *))(v48 + 104))(v8, enum case for REMAnalyticsEvent.openListUserOperation(_:), v46);
    REMAnalyticsManager.post(event:)();

    swift_release();
    (*(void (**)(char *, char *))(v37 + 8))(v8, v38);
  }
  id v39 = (char *)v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v40 = *((void *)v39 + 1);
    uint64_t v41 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v40 + 120))(v41, v40);
    swift_unknownObjectRelease();
  }
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v42 = *((void *)v39 + 1);
    uint64_t v43 = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v42 + 96))(a1, 1, v43, v42);
    swift_unknownObjectRelease();
  }
  return sub_10003B6F8((uint64_t)v12, &qword_100786EF0);
}

uint64_t sub_10055E574(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v90 = a2;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v79 = v10;
  uint64_t v80 = v11;
  __chkstk_darwin(v10);
  uint64_t v83 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v77);
  uint64_t v78 = (uint64_t)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v14 - 8);
  uint64_t v82 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v16 - 8);
  uint64_t v81 = (uint64_t)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v75 = *(void *)(v18 - 8);
  uint64_t v76 = v18;
  __chkstk_darwin(v18);
  uint64_t v74 = (char *)&v74 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v20 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  unsigned __int8 v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v23 - 8);
  Swift::String v25 = (char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v27 = __chkstk_darwin(v26);
  id v29 = (char *)&v74 - v28;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  id v31 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  uint64_t v32 = &selRef_setAxis_;
  uint64_t v84 = a3;
  uint64_t v85 = v9;
  id v87 = a1;
  if (!v31)
  {
    if (!a1)
    {
      int v35 = 1;
      int v88 = 1;
      uint64_t v36 = v89;
      goto LABEL_26;
    }
    uint64_t v86 = v20;
    id v34 = 0;
LABEL_7:
    id v37 = [a1 v32[315]];
    id v38 = v37;
    if (v34)
    {
      if (v37)
      {
        uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v41 = v40;
        if (v39 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v41 == v42) {
          int v88 = 1;
        }
        else {
          int v88 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v87;
        goto LABEL_21;
      }
    }
    else
    {
      if (!v37)
      {
        int v88 = 1;
        goto LABEL_21;
      }
    }
    int v88 = 0;
LABEL_21:
    uint64_t v43 = *(void **)(v4 + v30);
    *(void *)(v4 + v30) = a1;
    id v34 = a1;

    uint64_t v44 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v45 = *(void *)(v44 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v45 + 120))(ObjectType, v45);
      swift_unknownObjectRelease();
    }
    int v35 = 0;
    uint64_t v36 = v89;
    goto LABEL_24;
  }
  uint64_t v86 = v20;
  id v33 = [v31 sortingStyle:v27];
  uint64_t v32 = &selRef_setAxis_;
  id v34 = v33;
  if (a1) {
    goto LABEL_7;
  }
  int v35 = 1;
  uint64_t v36 = v89;
  if (v33)
  {
    int v88 = 0;
LABEL_24:

    goto LABEL_25;
  }
  int v88 = 1;
LABEL_25:
  uint64_t v20 = v86;
LABEL_26:
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  sub_10003B694((uint64_t)v29, (uint64_t)v25, &qword_100786F00);
  int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v25, 1, v36);
  if (v47 == 1)
  {
    uint64_t v48 = 0;
    uint64_t v49 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v25, v36);
    uint64_t v50 = v20;
    uint64_t v48 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v49 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v36);
  }
  sub_10003B6F8((uint64_t)v29, &qword_100786F00);
  uint64_t v51 = v4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount;
  *(void *)uint64_t v51 = v48;
  *(void *)(v51 + 8) = v49;
  *(unsigned char *)(v51 + 16) = v47 == 1;
  *(unsigned char *)(v4 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter();
  uint64_t v52 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t v53 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v52 + 32))(v53, v52))
  {
    uint64_t v55 = v54;
    uint64_t v56 = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v55 + 16))(0, v56, v55);
    swift_unknownObjectRelease();
  }
  if ((v35 | v88))
  {
    uint64_t v57 = v81;
    sub_10055D8C8(v81);
    if (qword_1007856E8 != -1) {
      swift_once();
    }
    uint64_t v58 = sub_100018BF8(v77, (uint64_t)qword_1007A6C50);
    sub_100560600(v58, v78, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_100105478(v93);
    sub_100050E5C((uint64_t)v93, (uint64_t)v94);
    uint64_t v59 = (uint64_t)v82;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v60 = v83;
    sub_100560600(v59, v83, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v61 = REMRemindersListDataView.FlatModel.reminders.getter();
    uint64_t v62 = v79;
    *(void *)(v60 + *(int *)(v79 + 20)) = v61;
    *(unsigned char *)(v60 + *(int *)(v62 + 24)) = 0;
    sub_10003B754(&qword_10078D1E8);
    unint64_t v63 = (*(unsigned __int8 *)(v80 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
    uint64_t v64 = swift_allocObject();
    *(_OWORD *)(v64 + 16) = xmmword_10066C6F0;
    sub_100560600(v60, v64 + v63, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    uint64_t v65 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v68 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v67 - 8) + 56))(v85, 1, 1, v67);
    v92[3] = v65;
    v92[4] = &off_10074D320;
    v92[0] = v66;
    sub_1000145EC((uint64_t)v92, (uint64_t)v91);
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v64;
    sub_100038ED8(v91, v69 + 24);
    *(void *)(v69 + 64) = v4;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10059DBB0(1, v57, (uint64_t (*)(uint64_t))sub_100051174, v69, v84, 0, v68);
    swift_release();
    sub_100038CD8((uint64_t)v92);
    swift_bridgeObjectRelease();
    sub_10003B6F8(v68, (uint64_t *)&unk_100788DC0);
    sub_1005605A0(v60, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_1005605A0(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_10003B6F8(v57, &qword_100786EF0);
    return swift_release();
  }
  else
  {
    id v71 = v87;
    id v72 = [v71 sortingStyle];
    uint64_t v73 = (uint64_t)v74;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_10059388C(v73, 1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v75 + 8))(v73, v76);
  }
}

uint64_t sub_10055EEF0(id a1, uint64_t a2, uint64_t a3)
{
  uint64_t v88 = a2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v81 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v85 = (uint64_t)&v76 - v12;
  uint64_t v80 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v79 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v78 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v76 - v23;
  uint64_t v25 = OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList;
  uint64_t v26 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
  double v27 = &selRef_setAxis_;
  uint64_t v82 = a3;
  uint64_t v83 = v8;
  id v87 = a1;
  if (!v26)
  {
    if (!a1)
    {
      uint64_t v30 = v3;
      LOBYTE(Strong) = 1;
      int v84 = 1;
      goto LABEL_25;
    }
    uint64_t v86 = v14;
    id v29 = 0;
LABEL_7:
    id v32 = [a1 v27[315]];
    id v33 = v32;
    if (v29)
    {
      if (v32)
      {
        uint64_t v77 = v15;
        uint64_t v34 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v36 = v35;
        if (v34 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v36 == v37) {
          int v84 = 1;
        }
        else {
          int v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        a1 = v87;
        uint64_t v15 = v77;
        goto LABEL_21;
      }
    }
    else
    {
      if (!v32)
      {
        int v84 = 1;
LABEL_21:
        id v38 = *(void **)(v3 + v25);
        *(void *)(v3 + v25) = a1;
        id v29 = a1;

        uint64_t v39 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        uint64_t v30 = v3;
        if (Strong)
        {
          uint64_t v40 = *(void *)(v39 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v40 + 120))(ObjectType, v40);
          swift_unknownObjectRelease();
          LOBYTE(Strong) = 0;
        }
        goto LABEL_23;
      }
    }
    int v84 = 0;
    goto LABEL_21;
  }
  uint64_t v86 = v14;
  id v28 = [v26 sortingStyle:v22];
  double v27 = &selRef_setAxis_;
  id v29 = v28;
  if (a1) {
    goto LABEL_7;
  }
  uint64_t v30 = v3;
  LOBYTE(Strong) = 1;
  if (v28)
  {
    int v84 = 0;
LABEL_23:

    goto LABEL_24;
  }
  int v84 = 1;
LABEL_24:
  uint64_t v14 = v86;
LABEL_25:
  REMRemindersListDataView.SectionsModel.remindersCount.getter();
  sub_10003B694((uint64_t)v24, (uint64_t)v20, &qword_100786F00);
  int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14);
  if (v42 == 1)
  {
    uint64_t v43 = 0;
    uint64_t v44 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v20, v14);
    uint64_t v45 = v14;
    uint64_t v43 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v44 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v45);
  }
  sub_10003B6F8((uint64_t)v24, &qword_100786F00);
  uint64_t v46 = v30 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_remindersCount;
  *(void *)uint64_t v46 = v43;
  *(void *)(v46 + 8) = v44;
  *(unsigned char *)(v46 + 16) = v42 == 1;
  *(unsigned char *)(v30 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_hasIncompleteOrCompletedReminders) = REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter();
  uint64_t v47 = *(void *)(v30 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t v48 = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v47 + 32))(v48, v47);
  if (result)
  {
    uint64_t v51 = v50;
    uint64_t v52 = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v51 + 16))(0, v52, v51);
    uint64_t result = swift_unknownObjectRelease();
  }
  if ((Strong & 1) == 0)
  {
    id v53 = v87;
    uint64_t v54 = v53;
    if ((v84 & 1) == 0)
    {
      id v63 = [v53 sortingStyle];
      uint64_t v64 = (uint64_t)v78;
      REMSortingStyle.dataViewSortingStyle.getter();

      sub_10059388C(v64, 1);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v79 + 8))(v64, v80);
    }
    uint64_t v55 = v85;
    sub_10055D8C8(v85);
    uint64_t v56 = v88;
    uint64_t v57 = REMRemindersListDataView.SectionsModel.sections.getter();
    __chkstk_darwin(v57);
    *(&v76 - 2) = (uint64_t)v54;
    *(&v76 - 1) = v56;
    uint64_t v59 = sub_1000D60EC(v58, (void (*)(void, char *))sub_1005602FC, (uint64_t)(&v76 - 4));
    swift_bridgeObjectRelease();
    uint64_t v60 = v55;
    uint64_t v61 = v81;
    sub_10003B694(v60, v81, &qword_100786EF0);
    uint64_t v62 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v61, 1, v62) == 1)
    {
      sub_10003B6F8(v61, &qword_100786EF0);
    }
    else
    {
      int v65 = *(unsigned __int8 *)(v61 + *(int *)(v62 + 64));
      sub_1005605A0(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if (v65 == 1)
      {
        uint64_t v66 = REMRemindersListDataView.SectionsModel.sections.getter();
        uint64_t v67 = sub_1000368FC(0, &qword_10078B5F0);
        type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
        uint64_t v68 = swift_allocObject();
        uint64_t v69 = swift_retain();
        *(void *)(v30 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance) = sub_1000D59C8(v69, v66, v67, 0, 1, &_swiftEmptySetSingleton, v68);
LABEL_38:
        swift_release();
        uint64_t v70 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
        uint64_t v71 = swift_allocObject();
        uint64_t v72 = type metadata accessor for TTRRemindersListViewModel.Item();
        uint64_t v73 = (uint64_t)v83;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v83, 1, 1, v72);
        v90[3] = v70;
        v90[4] = &off_10074D320;
        v90[0] = v71;
        sub_1000145EC((uint64_t)v90, (uint64_t)v89);
        uint64_t v74 = swift_allocObject();
        *(void *)(v74 + 16) = v59;
        sub_100038ED8(v89, v74 + 24);
        *(void *)(v74 + 64) = v30;
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v75 = v85;
        sub_10059DBB0(1, v85, (uint64_t (*)(uint64_t))sub_100250D74, v74, v82, 0, v73);
        swift_release();
        sub_100038CD8((uint64_t)v90);
        swift_bridgeObjectRelease();

        sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
        sub_10003B6F8(v75, &qword_100786EF0);
        return swift_release();
      }
    }
    *(void *)(v30 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance) = 0;
    goto LABEL_38;
  }
  return result;
}

uint64_t sub_10055F7DC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v44 = a4;
  uint64_t v45 = a1;
  uint64_t v51 = a5;
  uint64_t v47 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v47);
  uint64_t v48 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)&v36[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v12 - 8);
  uint64_t v49 = &v36[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v36[-v15];
  type metadata accessor for TTRListColors();
  uint64_t v17 = sub_1000368FC(0, (unint64_t *)&qword_10078D250);
  uint64_t v76 = v17;
  uint64_t v77 = &protocol witness table for REMSmartList;
  v75[0] = a3;
  *(void *)&long long v46 = a3;
  static TTRListColors.color(for:)();
  uint64_t v42 = v68[1];
  uint64_t v43 = v68[0];
  uint64_t v40 = v68[3];
  uint64_t v41 = v68[2];
  uint64_t v38 = v68[5];
  uint64_t v39 = v68[4];
  int v37 = v69;
  sub_10003B6F8((uint64_t)v75, &qword_100787480);
  uint64_t v50 = a2;
  REMRemindersListDataView.SectionLite.type.getter();
  int v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v9 + 88))(v11, v8);
  if (v18 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v9 + 96))(v11, v8);
    uint64_t v19 = *v11;
    uint64_t v20 = v11[1];
    unint64_t v21 = v11[2];
    swift_bridgeObjectRelease();
    if (v45) {
      char v22 = 3;
    }
    else {
      char v22 = 2;
    }
    void *v48 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = v20;
    unint64_t v55 = v21;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    int v59 = 192;
    char v60 = v22;
    __int16 v61 = v70;
    char v62 = BYTE2(v70);
    *(void *)&long long v63 = v43;
    *((void *)&v63 + 1) = v42;
    *(void *)&long long v64 = v41;
    *((void *)&v64 + 1) = v40;
    uint64_t v65 = v39;
    uint64_t v66 = v38;
    __int16 v67 = v37;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v54);
    sub_100050E5C((uint64_t)&v54, (uint64_t)v75);
    sub_100513A88((uint64_t)v68, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    id v23 = [(id)v46 objectID];
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v24 = (uint64_t)v16;
    goto LABEL_8;
  }
  uint64_t v25 = (void *)v46;
  uint64_t v26 = v48;
  uint64_t v45 = v16;
  if (v18 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    REMRemindersListDataView.SectionsModel.sections.getter();
    swift_bridgeObjectRelease();
    uint64_t v76 = v17;
    uint64_t v77 = &protocol witness table for REMSmartList;
    v75[0] = v25;
    id v27 = v25;
    static TTRListColors.color(for:)();
    long long v46 = v70;
    long long v44 = v71;
    uint64_t v28 = v72;
    uint64_t v29 = v73;
    unsigned __int8 v30 = v74;
    sub_10003B6F8((uint64_t)v75, &qword_100787480);
    *uint64_t v26 = [v27 objectID];
    swift_storeEnumTagMultiPayload();
    uint64_t v54 = 0;
    unint64_t v55 = 0xE000000000000000;
    long long v56 = 0u;
    long long v57 = 0u;
    long long v58 = 0u;
    int v59 = 192;
    char v60 = 3;
    __int16 v61 = v52;
    char v62 = v53;
    long long v63 = v46;
    long long v64 = v44;
    uint64_t v65 = v28;
    uint64_t v66 = v29;
    __int16 v67 = v30;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v54);
    sub_100050E5C((uint64_t)&v54, (uint64_t)v75);
    uint64_t v24 = (uint64_t)v45;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
LABEL_8:
    id v31 = v49;
    sub_100560600(v24, (uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v32 = REMRemindersListDataView.SectionLite.reminders.getter();
    sub_100513A88((uint64_t)v68, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    sub_1005605A0(v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v33 = (uint64_t)v31;
    uint64_t v34 = v51;
    sub_10010570C(v33, v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(void *)(v34 + *(int *)(result + 20)) = v32;
    *(unsigned char *)(v34 + *(int *)(result + 24)) = 0;
    return result;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10055FD68()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_100560600(v11, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    char v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v4, v1);
    v13(v7, v1);
  }
  return v12 & 1;
}

uint64_t sub_10055FF70@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v5);
  uint64_t v7 = (void **)((char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100560600(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v10 = *v7;
      id v11 = [v10 entityName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      sub_1000368FC(0, &qword_10078B5F0);
      id v15 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v18 = v17;

      if (v12 == v16 && v14 == v18)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        if ((v20 & 1) == 0) {
          goto LABEL_3;
        }
      }
      goto LABEL_15;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 9u:
      sub_1005605A0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      goto LABEL_3;
    case 7u:
      goto LABEL_3;
    case 8u:
      sub_1005605A0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      goto LABEL_15;
    default:
      if (*(unsigned char *)v7) {
        goto LABEL_3;
      }
LABEL_15:
      unint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_smartList);
      if (v21
        && (id v22 = [v21 customContext]) != 0
        && (id v23 = v22, v24 = REMSmartListCustomContext.filter.getter(), v23, v24))
      {
        *a2 = v24;
        uint64_t v25 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
        swift_storeEnumTagMultiPayload();
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a2, 0, 1, v25);
      }
      else
      {
LABEL_3:
        uint64_t v8 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
        return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a2, 1, 1, v8);
      }
  }
}

void *sub_100560254()
{
  return sub_100560304();
}

uint64_t sub_10056025C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance)) {
    return 0;
  }
  swift_retain();
  uint64_t v4 = (void *)sub_100421E44((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  uint64_t v5 = sub_100230EF8(v4, a2);
  swift_release_n();
  return v5;
}

uint64_t sub_1005602EC(uint64_t a1, void *a2)
{
  return sub_1005604D4(a2);
}

uint64_t sub_1005602FC@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10055F7DC(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), a3);
}

void *sub_100560304()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1005605A0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_10010570C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1005605A0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_1005604D4(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders37TTRShowCustomSmartListViewModelSource_sectionsContextInstance);
  if (!v2) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v7(ObjectType, v5);
    swift_unknownObjectRelease();
    id v8 = a1;
    uint64_t Strong = TTRSection.init(with:store:)();
    swift_release();
  }
  return Strong;
}

uint64_t sub_1005605A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100560600(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100560668()
{
  return sub_10055C708(v0[2], v0[3], v0[4]);
}

uint64_t sub_100560674()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005606AC()
{
  TTRSmartListEditor.edit(showingLargeAttachments:)(*(unsigned char *)(v0 + 16));
}

uint64_t sub_1005606DC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A7250);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A7250);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1005607A4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void **)(v2 + 24);
  *(void *)(v2 + 24) = a1;
  id v9 = a1;
  if (!a1)
  {
    if (!v4)
    {
LABEL_7:
      id v5 = v4;
      goto LABEL_8;
    }
LABEL_6:
    v8._object = (void *)0x80000001006BEE90;
    v8._uint64_t countAndFlagsBits = 0xD000000000000025;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v8);
    goto LABEL_7;
  }
  if (!v4) {
    goto LABEL_6;
  }
  sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
  id v5 = v4;
  id v6 = v9;
  char v7 = static NSObject.== infix(_:_:)();

  if ((v7 & 1) == 0) {
    goto LABEL_6;
  }
LABEL_8:
}

uint64_t sub_100560884()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A7340);
  swift_allocObject();
  *(void *)(v0 + 16) = CurrentValueSubject.init(_:)();
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for TTRDeferredAction();
  swift_allocObject();
  uint64_t v2 = TTRDeferredAction.init(queue:)();
  *(void *)(v1 + 40) = v2;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_WORD *)(v1 + 80) = 2;
  swift_beginAccess();
  *(void *)(v2 + 24) = &off_100750998;
  swift_unknownObjectWeakAssign();
  return v1;
}

BOOL sub_100560980(uint64_t a1, uint64_t a2)
{
  return ((*(void *)a1 != *(void *)a2) | ((*(unsigned char *)(a1 + 8) ^ *(unsigned char *)(a2 + 8)) | (*(unsigned char *)(a2 + 9) ^ *(unsigned char *)(a1 + 9))) & 1) == 0;
}

void sub_1005609BC()
{
  uint64_t v1 = v0;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v3 = Strong, v4 = [Strong viewIfLoaded], v3, v4)
    && (id v9 = (id)UIView.firstResponderDescendant.getter(), v4, v9))
  {
    id v5 = [v9 undoManager];
    if (v5)
    {
      id v6 = v5;
LABEL_8:
      id v7 = *(id *)(v1 + 64);
      if (v7 && v5 == v7) {
        goto LABEL_14;
      }
      goto LABEL_13;
    }
  }
  else
  {
    id v9 = 0;
  }
  id v6 = *(void **)(v1 + 24);
  id v5 = v6;
  if (v6) {
    goto LABEL_8;
  }
  id v7 = *(id *)(v1 + 64);
  if (!v7) {
    goto LABEL_15;
  }
  id v6 = 0;
LABEL_13:
  *(void *)(v1 + 64) = v6;
  id v8 = v6;

  sub_100560AB8();
  id v7 = v8;
LABEL_14:

LABEL_15:
}

void sub_100560AB8()
{
  if (qword_1007856F0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_1007A7250);
  swift_retain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    uint64_t v17 = v5;
    sub_10003B754(&qword_1007A7350);
    uint64_t v6 = Optional.descriptionOrNil.getter();
    sub_1000385A8(v6, v7, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "TTRIShowRemindersUndoManagerObserver: start observing undo manager: %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v8 = *(void **)(v0 + 64);
    if (!v8) {
      goto LABEL_8;
    }
    goto LABEL_7;
  }

  swift_release_n();
  id v8 = *(void **)(v0 + 64);
  if (v8)
  {
LABEL_7:
    sub_10003B754(&qword_1007A7348);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100671360;
    *(void *)(inited + 32) = NSUndoManagerDidCloseUndoGroupNotification;
    *(void *)(inited + 40) = NSUndoManagerDidUndoChangeNotification;
    *(void *)(inited + 48) = NSUndoManagerDidRedoChangeNotification;
    uint64_t v10 = (void *)TTRUndoManagerDidRemoveAllActionsNotification;
    *(void *)(inited + 56) = TTRUndoManagerDidRemoveAllActionsNotification;
    uint64_t v11 = v8;
    swift_retain();
    id v12 = v11;
    uint64_t v13 = NSUndoManagerDidCloseUndoGroupNotification;
    uint64_t v14 = NSUndoManagerDidUndoChangeNotification;
    id v15 = NSUndoManagerDidRedoChangeNotification;
    id v16 = v10;
    id v8 = sub_1005615F8(inited, v12);

    swift_release();
    swift_setDeallocating();
    type metadata accessor for Name(0);
    swift_arrayDestroy();
  }
LABEL_8:
  *(void *)(v0 + 56) = v8;
  swift_bridgeObjectRelease();
  sub_100561030();
}

uint64_t sub_100560D74()
{
  uint64_t v0 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  _OWORD v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  swift_release();
  sub_10019B448((uint64_t)v2, (uint64_t)&unk_1007A7360, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_100560EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100560F88, v6, v5);
}

uint64_t sub_100560F88()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_100561030();
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_100561030()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 64);
  if (v2)
  {
    unsigned int v3 = [*(id *)(v0 + 64) canUndo];
    unsigned int v4 = [v2 canRedo];
    if (v4) {
      __int16 v5 = 256;
    }
    else {
      __int16 v5 = 0;
    }
    __int16 v6 = v5 | v3;
    __int16 v7 = *(_WORD *)(v1 + 80);
    if (v7 != 2)
    {
      int v8 = (v7 & 1) == 0;
      BOOL v9 = (v7 & 0x100) == 0;
      if (v2 == *(void **)(v1 + 72) && v3 != v8 && ((v4 ^ v9) & 1) != 0) {
        return;
      }
    }
  }
  else
  {
    if (*(unsigned char *)(v0 + 80) == 2) {
      return;
    }
    __int16 v6 = 2;
  }
  if (qword_1007856F0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_1007A7250);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRIShowRemindersUndoManagerObserver: undo manager state changed", v13, 2u);
    swift_slowDealloc();
  }

  *(void *)(v1 + 72) = v2;
  *(_WORD *)(v1 + 80) = v6;
  id v14 = *(id *)(v1 + 64);
  CurrentValueSubject.send(_:)();
}

uint64_t sub_1005611D0()
{
  swift_release();

  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIShowRemindersUndoManagerObserver()
{
  return self;
}

uint64_t getEnumTagSinglePayload for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState()
{
  return &type metadata for TTRIShowRemindersUndoManagerObserver.UndoManagerAndState;
}

uint64_t sub_100561304(void *a1)
{
  uint64_t v2 = v1;
  swift_unknownObjectWeakAssign();
  *(void *)(v2 + 48) = 0;
  swift_release();
  id v4 = [a1 viewIfLoaded];
  if (v4 && (v5 = v4, id v6 = [v4 window], v5, v6))
  {
    id v7 = [self defaultCenter];
    void v17[3] = sub_1000368FC(0, &qword_1007A7368);
    v17[0] = v6;
    int v8 = self;
    id v9 = v6;
    id v10 = [v8 mainQueue];
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v11 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();

    swift_release_n();
    sub_10003D3BC((uint64_t)v17);
  }
  else
  {
    if (qword_1007856F0 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_1007A7250);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "TTRIShowRemindersUndoManagerObserver#startObserving: missing window", v15, 2u);
      swift_slowDealloc();
    }

    uint64_t v11 = 0;
  }
  *(void *)(v2 + 48) = v11;
  return swift_release();
}

uint64_t sub_10056155C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v1._object = (void *)0x80000001006BEE90;
    v1._uint64_t countAndFlagsBits = 0xD000000000000025;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v1);
    return swift_release();
  }
  return result;
}

void sub_1005615D0(void *a1)
{
}

void *sub_1005615F8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    id v6 = (void **)(a1 + 32);
    id v7 = self;
    do
    {
      int v8 = *v6++;
      id v9 = v8;
      id v10 = [v7 defaultCenter];
      v12[3] = sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
      v12[0] = a2;
      swift_allocObject();
      swift_weakInit();
      id v11 = a2;
      swift_retain();
      NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();
      swift_release_n();

      sub_10003D3BC((uint64_t)v12);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      --v3;
    }
    while (v3);
    return v13;
  }
  return result;
}

uint64_t sub_100561784()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005617BC()
{
  return sub_100560D74();
}

uint64_t sub_1005617C4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100561804(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10000C2D4;
  return sub_100560EF0(a1, v4, v5, v6);
}

uint64_t sub_1005618B8()
{
  return sub_10056155C();
}

char *sub_1005618C0(char *a1, char **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        long long v128 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            long long v56 = *a2;
            *(void *)a1 = *a2;
            long long v57 = v56;
            goto LABEL_33;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v55 - 8) + 16))(a1, a2, v55);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        long long v58 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v59 = v58[5];
        char v60 = &a1[v59];
        __int16 v61 = (char *)a2 + v59;
        uint64_t v62 = *(uint64_t *)((char *)a2 + v59 + 8);
        if (v62)
        {
          *(void *)char v60 = *(void *)v61;
          *((void *)v60 + 1) = v62;
          long long v63 = (void *)*((void *)v61 + 2);
          uint64_t v64 = *((void *)v61 + 3);
          uint64_t v65 = *((void *)v61 + 4);
          uint64_t v66 = *((void *)v61 + 5);
          uint64_t v67 = *((void *)v61 + 6);
          uint64_t v124 = *((void *)v61 + 7);
          unsigned __int8 v119 = v61[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v63, v64, v65, v66, v67, v124, v119);
          *((void *)v60 + 2) = v63;
          *((void *)v60 + 3) = v64;
          *((void *)v60 + 4) = v65;
          *((void *)v60 + 5) = v66;
          *((void *)v60 + 6) = v67;
          *((void *)v60 + 7) = v124;
          v60[64] = v119;
          *(_DWORD *)(v60 + 65) = *(_DWORD *)(v61 + 65);
          int v68 = v61[120];
          if (v68 == 255)
          {
            long long v69 = *(_OWORD *)(v61 + 88);
            *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
            *(_OWORD *)(v60 + 88) = v69;
            *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
            v60[120] = v61[120];
          }
          else
          {
            char v125 = v68 & 1;
            uint64_t v73 = *((void *)v61 + 10);
            uint64_t v120 = (void *)*((void *)v61 + 9);
            uint64_t v74 = *((void *)v61 + 11);
            uint64_t v75 = *((void *)v61 + 12);
            uint64_t v76 = *((void *)v61 + 13);
            uint64_t v77 = *((void *)v61 + 14);
            sub_10003BED8(v120, v73, v74, v75, v76, v77, v68 & 1);
            *((void *)v60 + 9) = v120;
            *((void *)v60 + 10) = v73;
            *((void *)v60 + 11) = v74;
            *((void *)v60 + 12) = v75;
            *((void *)v60 + 13) = v76;
            *((void *)v60 + 14) = v77;
            v60[120] = v125;
          }
          uint64_t v6 = v128;
          v60[121] = v61[121];
        }
        else
        {
          long long v70 = *((_OWORD *)v61 + 5);
          *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
          *((_OWORD *)v60 + 5) = v70;
          *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
          *(_OWORD *)(v60 + 106) = *(_OWORD *)(v61 + 106);
          long long v71 = *((_OWORD *)v61 + 1);
          *(_OWORD *)char v60 = *(_OWORD *)v61;
          *((_OWORD *)v60 + 1) = v71;
          long long v72 = *((_OWORD *)v61 + 3);
          *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
          *((_OWORD *)v60 + 3) = v72;
        }
        a1[v58[6]] = *((unsigned char *)a2 + v58[6]);
        a1[v58[7]] = *((unsigned char *)a2 + v58[7]);
        a1[v58[8]] = *((unsigned char *)a2 + v58[8]);
        a1[v58[9]] = *((unsigned char *)a2 + v58[9]);
        a1[v58[10]] = *((unsigned char *)a2 + v58[10]);
        uint64_t v78 = v58[11];
        uint64_t v79 = *(char **)((char *)a2 + v78);
        *(void *)&a1[v78] = v79;
        id v80 = v79;
        goto LABEL_66;
      case 1u:
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        long long v129 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v82 = *a2;
            *(void *)a1 = *a2;
            uint64_t v83 = v82;
            goto LABEL_44;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v81 = type metadata accessor for Date();
            (*(void (**)(char *, char **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        int v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v85 = v84[5];
        uint64_t v86 = &a1[v85];
        id v87 = (char *)a2 + v85;
        uint64_t v88 = *(uint64_t *)((char *)a2 + v85 + 8);
        if (v88)
        {
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = v88;
          uint64_t v89 = (void *)*((void *)v87 + 2);
          uint64_t v90 = *((void *)v87 + 3);
          uint64_t v91 = *((void *)v87 + 4);
          uint64_t v92 = *((void *)v87 + 5);
          uint64_t v93 = *((void *)v87 + 6);
          uint64_t v121 = *((void *)v87 + 7);
          unsigned __int8 v126 = v87[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v89, v90, v91, v92, v93, v121, v126);
          *((void *)v86 + 2) = v89;
          *((void *)v86 + 3) = v90;
          *((void *)v86 + 4) = v91;
          *((void *)v86 + 5) = v92;
          *((void *)v86 + 6) = v93;
          *((void *)v86 + 7) = v121;
          v86[64] = v126;
          *(_DWORD *)(v86 + 65) = *(_DWORD *)(v87 + 65);
          int v94 = v87[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v87 + 88);
            *(_OWORD *)(v86 + 72) = *(_OWORD *)(v87 + 72);
            *(_OWORD *)(v86 + 88) = v95;
            *(_OWORD *)(v86 + 104) = *(_OWORD *)(v87 + 104);
            v86[120] = v87[120];
          }
          else
          {
            char v127 = v94 & 1;
            uint64_t v99 = *((void *)v87 + 10);
            uint64_t v122 = (void *)*((void *)v87 + 9);
            uint64_t v100 = *((void *)v87 + 11);
            uint64_t v101 = *((void *)v87 + 12);
            uint64_t v102 = *((void *)v87 + 13);
            uint64_t v103 = *((void *)v87 + 14);
            sub_10003BED8(v122, v99, v100, v101, v102, v103, v94 & 1);
            *((void *)v86 + 9) = v122;
            *((void *)v86 + 10) = v99;
            *((void *)v86 + 11) = v100;
            *((void *)v86 + 12) = v101;
            *((void *)v86 + 13) = v102;
            *((void *)v86 + 14) = v103;
            v86[120] = v127;
          }
          uint64_t v6 = v129;
          v86[121] = v87[121];
        }
        else
        {
          long long v96 = *((_OWORD *)v87 + 5);
          *((_OWORD *)v86 + 4) = *((_OWORD *)v87 + 4);
          *((_OWORD *)v86 + 5) = v96;
          *((_OWORD *)v86 + 6) = *((_OWORD *)v87 + 6);
          *(_OWORD *)(v86 + 106) = *(_OWORD *)(v87 + 106);
          long long v97 = *((_OWORD *)v87 + 1);
          *(_OWORD *)uint64_t v86 = *(_OWORD *)v87;
          *((_OWORD *)v86 + 1) = v97;
          long long v98 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v98;
        }
        a1[v84[6]] = *((unsigned char *)a2 + v84[6]);
        a1[v84[7]] = *((unsigned char *)a2 + v84[7]);
        a1[v84[8]] = *((unsigned char *)a2 + v84[8]);
        a1[v84[9]] = *((unsigned char *)a2 + v84[9]);
        a1[v84[10]] = *((unsigned char *)a2 + v84[10]);
        uint64_t v104 = v84[11];
        unint64_t v105 = *(char **)((char *)a2 + v104);
        *(void *)&a1[v104] = v105;
        id v106 = v105;
        goto LABEL_66;
      case 2u:
        id v11 = *a2;
        *(void *)a1 = *a2;
        uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)&a1[v12];
        os_log_type_t v14 = (void **)((char *)a2 + v12);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        uint64_t v18 = v11;
        if (v17(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v108 = *v14;
            void *v13 = *v14;
            id v109 = v108;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v107 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(v13, v14, v107);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 3u:
        uint64_t v19 = *a2;
        *(void *)a1 = *a2;
        uint64_t v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)&a1[v20];
        os_log_type_t v14 = (void **)((char *)a2 + v20);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        unint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v22 = v19;
        if (v21(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v42 = *v14;
            void *v13 = *v14;
            id v43 = v42;
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v113 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v13, v14, v113);
LABEL_64:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 4u:
        id v23 = *a2;
        *(void *)a1 = *a2;
        uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)&a1[v24];
        os_log_type_t v14 = (void **)((char *)a2 + v24);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        uint64_t v26 = v23;
        if (v25(v14, 1, v15))
        {
LABEL_11:
          uint64_t v27 = sub_10003B754(&qword_10078C890);
          memcpy(v13, v14, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v111 = *v14;
              void *v13 = *v14;
              id v112 = v111;
              goto LABEL_61;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v110 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v110 - 8) + 16))(v13, v14, v110);
LABEL_61:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v13, v14, *(void *)(v16 + 64));
              break;
          }
LABEL_65:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
LABEL_66:
        swift_storeEnumTagMultiPayload();
LABEL_67:
        uint64_t v114 = v6[6];
        a1[v6[5]] = *((unsigned char *)a2 + v6[5]);
        uint64_t v115 = &a1[v114];
        uint64_t v116 = (char **)((char *)a2 + v114);
        uint64_t v117 = v116[1];
        *(void *)uint64_t v115 = *v116;
        *((void *)v115 + 1) = v117;
        *(void *)&a1[v6[7]] = *(char **)((char *)a2 + v6[7]);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 5u:
        *(void *)a1 = *a2;
        a1[8] = *((unsigned char *)a2 + 8);
        *(_WORD *)(a1 + 9) = *(_WORD *)((char *)a2 + 9);
        uint64_t v28 = a2[2];
        *((void *)a1 + 2) = v28;
        uint64_t v29 = v28;
        goto LABEL_66;
      case 6u:
        int v37 = *a2;
        *(void *)a1 = *a2;
        uint64_t v38 = v37;
        goto LABEL_66;
      case 7u:
        uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v31 + 48))(a2, 1, v30))
        {
          uint64_t v32 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *(void *)a1 = *a2;
          uint64_t v44 = *(int *)(v30 + 20);
          long long v130 = &a1[v44];
          uint64_t v123 = (char *)a2 + v44;
          uint64_t v45 = type metadata accessor for REMHashtagLabelSpecifier();
          long long v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v130, v123, v45);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
        }
        uint64_t v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v48 = &a1[v47];
        uint64_t v49 = (char **)((char *)a2 + v47);
        uint64_t v50 = v49[1];
        if (v50)
        {
          *(void *)uint64_t v48 = *v49;
          *((void *)v48 + 1) = v50;
          uint64_t v51 = (void *)v49[2];
          *((void *)v48 + 2) = v51;
          swift_bridgeObjectRetain();
          id v52 = v51;
        }
        else
        {
          *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
          *((void *)v48 + 2) = v49[2];
        }
        goto LABEL_66;
      case 8u:
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v40 + 48))(a2, 1, v39))
        {
          uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          a1[*(int *)(v39 + 20)] = *((unsigned char *)a2 + *(int *)(v39 + 20));
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
        uint64_t v54 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)&a1[*(int *)(v54 + 20)] = *(char **)((char *)a2 + *(int *)(v54 + 20));
        goto LABEL_66;
      case 9u:
        *a1 = *(unsigned char *)a2;
        uint64_t v33 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v34 = &a1[v33];
        uint64_t v35 = (char *)a2 + v33;
        uint64_t v36 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_66;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_67;
    }
  }
  return a1;
}

uint64_t sub_100562EF0(uint64_t a1)
{
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v2 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
          break;
        default:
          break;
      }
LABEL_24:
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v16 = a1 + *(int *)(v15 + 20);
      if (*(void *)(v16 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v16 + 16), *(void *)(v16 + 24), *(void *)(v16 + 32), *(void *)(v16 + 40), *(void *)(v16 + 48), *(void *)(v16 + 56), *(unsigned char *)(v16 + 64));
        int v17 = *(unsigned __int8 *)(v16 + 120);
        if (v17 != 255) {
          sub_10003B9C0(*(void **)(v16 + 72), *(void *)(v16 + 80), *(void *)(v16 + 88), *(void *)(v16 + 96), *(void *)(v16 + 104), *(void *)(v16 + 112), v17 & 1);
        }
      }
      id v8 = *(id *)(a1 + *(int *)(v15 + 44));
      goto LABEL_28;
    case 2u:

      uint64_t v3 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_32;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      uint64_t v3 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_32;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      uint64_t v3 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_32:
            id v8 = *v3;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            uint64_t v7 = type metadata accessor for Date();
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      id v8 = *(id *)(a1 + 16);
      goto LABEL_28;
    case 6u:
      id v8 = *(id *)a1;
      goto LABEL_28;
    case 7u:
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(a1, 1, v9))
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = a1 + *(int *)(v9 + 20);
        uint64_t v11 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
      }
      uint64_t v12 = a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v12 + 8)) {
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      id v8 = *(id *)(v12 + 16);
LABEL_28:

LABEL_29:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 8u:
      uint64_t v13 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1, 1, v13))
      {
        uint64_t v14 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a1, v14);
      }
      goto LABEL_29;
    case 9u:
      uint64_t v3 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
      uint64_t v7 = type metadata accessor for AnyTip();
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(void *)(v7 - 8) + 8))(v3, v7);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_1005634D0(void **a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      long long v118 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v54 = *a2;
          *a1 = *a2;
          id v55 = v54;
          goto LABEL_31;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
LABEL_31:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      long long v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v57 = v56[5];
      long long v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = *(uint64_t *)((char *)a2 + v57 + 8);
      if (!v60) {
        goto LABEL_35;
      }
      *(void *)long long v58 = *(void *)v59;
      *((void *)v58 + 1) = v60;
      __int16 v61 = (void *)*((void *)v59 + 2);
      uint64_t v62 = *((void *)v59 + 3);
      uint64_t v63 = *((void *)v59 + 4);
      uint64_t v64 = *((void *)v59 + 5);
      uint64_t v65 = *((void *)v59 + 6);
      uint64_t v115 = *((void *)v59 + 7);
      unsigned __int8 v110 = v59[64];
      swift_bridgeObjectRetain();
      sub_100050F84(v61, v62, v63, v64, v65, v115, v110);
      *((void *)v58 + 2) = v61;
      *((void *)v58 + 3) = v62;
      *((void *)v58 + 4) = v63;
      *((void *)v58 + 5) = v64;
      *((void *)v58 + 6) = v65;
      *((void *)v58 + 7) = v115;
      v58[64] = v110;
      *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
      int v66 = v59[120];
      if (v66 == 255)
      {
        long long v67 = *(_OWORD *)(v59 + 88);
        *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
        *(_OWORD *)(v58 + 88) = v67;
        *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
        v58[120] = v59[120];
      }
      else
      {
        char v116 = v66 & 1;
        uint64_t v71 = *((void *)v59 + 10);
        id v111 = (void *)*((void *)v59 + 9);
        uint64_t v72 = *((void *)v59 + 11);
        uint64_t v73 = *((void *)v59 + 12);
        uint64_t v74 = *((void *)v59 + 13);
        uint64_t v75 = *((void *)v59 + 14);
        sub_10003BED8(v111, v71, v72, v73, v74, v75, v66 & 1);
        *((void *)v58 + 9) = v111;
        *((void *)v58 + 10) = v71;
        *((void *)v58 + 11) = v72;
        *((void *)v58 + 12) = v73;
        *((void *)v58 + 13) = v74;
        *((void *)v58 + 14) = v75;
        v58[120] = v116;
      }
      a3 = v118;
      v58[121] = v59[121];
      goto LABEL_38;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      unsigned __int8 v119 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v80 = *a2;
          *a1 = *a2;
          id v81 = v80;
          goto LABEL_42;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v79 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v79 - 8) + 16))(a1, a2, v79);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      long long v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v82 = v56[5];
      long long v58 = (char *)a1 + v82;
      uint64_t v59 = (char *)a2 + v82;
      uint64_t v83 = *(uint64_t *)((char *)a2 + v82 + 8);
      if (v83)
      {
        uint64_t v117 = a2;
        *(void *)long long v58 = *(void *)v59;
        *((void *)v58 + 1) = v83;
        int v84 = (void *)*((void *)v59 + 2);
        uint64_t v85 = *((void *)v59 + 3);
        uint64_t v86 = *((void *)v59 + 4);
        uint64_t v87 = *((void *)v59 + 5);
        uint64_t v89 = *((void *)v59 + 6);
        uint64_t v88 = *((void *)v59 + 7);
        unsigned __int8 v112 = v59[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v84, v85, v86, v87, v89, v88, v112);
        *((void *)v58 + 2) = v84;
        *((void *)v58 + 3) = v85;
        *((void *)v58 + 4) = v86;
        *((void *)v58 + 5) = v87;
        *((void *)v58 + 6) = v89;
        *((void *)v58 + 7) = v88;
        v58[64] = v112;
        *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
        int v90 = v59[120];
        if (v90 == 255)
        {
          long long v91 = *(_OWORD *)(v59 + 88);
          *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
          *(_OWORD *)(v58 + 88) = v91;
          *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
          v58[120] = v59[120];
        }
        else
        {
          char v113 = v90 & 1;
          uint64_t v93 = (void *)*((void *)v59 + 9);
          uint64_t v92 = *((void *)v59 + 10);
          uint64_t v94 = *((void *)v59 + 11);
          uint64_t v95 = *((void *)v59 + 12);
          uint64_t v96 = *((void *)v59 + 13);
          uint64_t v97 = *((void *)v59 + 14);
          sub_10003BED8(v93, v92, v94, v95, v96, v97, v90 & 1);
          *((void *)v58 + 9) = v93;
          *((void *)v58 + 10) = v92;
          *((void *)v58 + 11) = v94;
          *((void *)v58 + 12) = v95;
          *((void *)v58 + 13) = v96;
          *((void *)v58 + 14) = v97;
          v58[120] = v113;
        }
        a3 = v119;
        v58[121] = v59[121];
        a2 = v117;
      }
      else
      {
LABEL_35:
        long long v68 = *((_OWORD *)v59 + 5);
        *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
        *((_OWORD *)v58 + 5) = v68;
        *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
        *(_OWORD *)(v58 + 106) = *(_OWORD *)(v59 + 106);
        long long v69 = *((_OWORD *)v59 + 1);
        *(_OWORD *)long long v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v69;
        long long v70 = *((_OWORD *)v59 + 3);
        *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
        *((_OWORD *)v58 + 3) = v70;
      }
LABEL_38:
      *((unsigned char *)a1 + v56[6]) = *((unsigned char *)a2 + v56[6]);
      *((unsigned char *)a1 + v56[7]) = *((unsigned char *)a2 + v56[7]);
      *((unsigned char *)a1 + v56[8]) = *((unsigned char *)a2 + v56[8]);
      *((unsigned char *)a1 + v56[9]) = *((unsigned char *)a2 + v56[9]);
      *((unsigned char *)a1 + v56[10]) = *((unsigned char *)a2 + v56[10]);
      uint64_t v76 = v56[11];
      uint64_t v77 = *(void **)((char *)a2 + v76);
      *(void **)((char *)a1 + v76) = v77;
      id v78 = v77;
      goto LABEL_63;
    case 2u:
      uint64_t v9 = *a2;
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v10);
      uint64_t v12 = (void **)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v16 = v9;
      if (v15(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v99 = *v12;
          *uint64_t v11 = *v12;
          id v100 = v99;
          goto LABEL_52;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v98 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v98 - 8) + 16))(v11, v12, v98);
LABEL_52:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 3u:
      int v17 = *a2;
      *a1 = *a2;
      uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v18);
      uint64_t v12 = (void **)((char *)a2 + v18);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v20 = v17;
      if (v19(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v40 = *v12;
          *uint64_t v11 = *v12;
          id v41 = v40;
          goto LABEL_61;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v104 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(v11, v12, v104);
LABEL_61:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 4u:
      unint64_t v21 = *a2;
      *a1 = *a2;
      uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v22);
      uint64_t v12 = (void **)((char *)a2 + v22);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      id v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v24 = v21;
      if (v23(v12, 1, v13))
      {
LABEL_9:
        uint64_t v25 = sub_10003B754(&qword_10078C890);
        memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v102 = *v12;
            *uint64_t v11 = *v12;
            id v103 = v102;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v101 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v101 - 8) + 16))(v11, v12, v101);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
LABEL_62:
        (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
LABEL_63:
      swift_storeEnumTagMultiPayload();
LABEL_64:
      uint64_t v105 = a3[6];
      *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
      id v106 = (void **)((char *)a1 + v105);
      uint64_t v107 = (void **)((char *)a2 + v105);
      uint64_t v108 = v107[1];
      *id v106 = *v107;
      v106[1] = v108;
      *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      uint64_t v26 = a2[2];
      a1[2] = v26;
      id v27 = v26;
      goto LABEL_63;
    case 6u:
      uint64_t v35 = *a2;
      *a1 = *a2;
      id v36 = v35;
      goto LABEL_63;
    case 7u:
      uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
      {
        uint64_t v30 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v42 = *(int *)(v28 + 20);
        uint64_t v120 = (char *)a1 + v42;
        uint64_t v114 = (char *)a2 + v42;
        uint64_t v43 = type metadata accessor for REMHashtagLabelSpecifier();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v120, v114, v43);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
      }
      uint64_t v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      long long v46 = (void **)((char *)a1 + v45);
      uint64_t v47 = (void **)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      if (v48)
      {
        void *v46 = *v47;
        v46[1] = v48;
        uint64_t v49 = (void *)v47[2];
        void v46[2] = v49;
        swift_bridgeObjectRetain();
        id v50 = v49;
      }
      else
      {
        *(_OWORD *)long long v46 = *(_OWORD *)v47;
        void v46[2] = v47[2];
      }
      goto LABEL_63;
    case 8u:
      uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
      {
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
      }
      uint64_t v52 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void **)((char *)a1 + *(int *)(v52 + 20)) = *(void **)((char *)a2 + *(int *)(v52 + 20));
      goto LABEL_63;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      goto LABEL_63;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_64;
  }
}

void **sub_100564AB0(void **a1, void **a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)a1);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        long long v134 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v52 = *a2;
            *a1 = *a2;
            id v53 = v52;
            goto LABEL_31;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        uint64_t v54 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v55 = v54[5];
        long long v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        if (*(void **)((char *)a2 + v55 + 8))
        {
          *(void *)long long v56 = *(void *)v57;
          *((void *)v56 + 1) = *((void *)v57 + 1);
          long long v58 = (void *)*((void *)v57 + 2);
          uint64_t v59 = *((void *)v57 + 3);
          uint64_t v60 = *((void *)v57 + 4);
          uint64_t v61 = *((void *)v57 + 5);
          uint64_t v62 = *((void *)v57 + 6);
          uint64_t v131 = *((void *)v57 + 7);
          unsigned __int8 v126 = v57[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v58, v59, v60, v61, v62, v131, v126);
          *((void *)v56 + 2) = v58;
          *((void *)v56 + 3) = v59;
          *((void *)v56 + 4) = v60;
          *((void *)v56 + 5) = v61;
          *((void *)v56 + 6) = v62;
          *((void *)v56 + 7) = v131;
          v56[64] = v126;
          v56[65] = v57[65];
          v56[66] = v57[66];
          v56[67] = v57[67];
          v56[68] = v57[68];
          int v63 = v57[120];
          if (v63 == 255)
          {
            long long v64 = *(_OWORD *)(v57 + 72);
            long long v65 = *(_OWORD *)(v57 + 88);
            long long v66 = *(_OWORD *)(v57 + 104);
            v56[120] = v57[120];
            *(_OWORD *)(v56 + 88) = v65;
            *(_OWORD *)(v56 + 104) = v66;
            *(_OWORD *)(v56 + 72) = v64;
          }
          else
          {
            char v132 = v63 & 1;
            uint64_t v73 = *((void *)v57 + 10);
            char v127 = (void *)*((void *)v57 + 9);
            uint64_t v74 = *((void *)v57 + 11);
            uint64_t v75 = *((void *)v57 + 12);
            uint64_t v76 = *((void *)v57 + 13);
            uint64_t v77 = *((void *)v57 + 14);
            sub_10003BED8(v127, v73, v74, v75, v76, v77, v63 & 1);
            *((void *)v56 + 9) = v127;
            *((void *)v56 + 10) = v73;
            *((void *)v56 + 11) = v74;
            *((void *)v56 + 12) = v75;
            *((void *)v56 + 13) = v76;
            *((void *)v56 + 14) = v77;
            v56[120] = v132;
          }
          a3 = v134;
          v56[121] = v57[121];
        }
        else
        {
          long long v67 = *(_OWORD *)v57;
          long long v68 = *((_OWORD *)v57 + 1);
          long long v69 = *((_OWORD *)v57 + 3);
          *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
          *((_OWORD *)v56 + 3) = v69;
          *(_OWORD *)long long v56 = v67;
          *((_OWORD *)v56 + 1) = v68;
          long long v70 = *((_OWORD *)v57 + 4);
          long long v71 = *((_OWORD *)v57 + 5);
          long long v72 = *((_OWORD *)v57 + 6);
          *(_OWORD *)(v56 + 106) = *(_OWORD *)(v57 + 106);
          *((_OWORD *)v56 + 5) = v71;
          *((_OWORD *)v56 + 6) = v72;
          *((_OWORD *)v56 + 4) = v70;
        }
        *((unsigned char *)a1 + v54[6]) = *((unsigned char *)a2 + v54[6]);
        *((unsigned char *)a1 + v54[7]) = *((unsigned char *)a2 + v54[7]);
        *((unsigned char *)a1 + v54[8]) = *((unsigned char *)a2 + v54[8]);
        *((unsigned char *)a1 + v54[9]) = *((unsigned char *)a2 + v54[9]);
        *((unsigned char *)a1 + v54[10]) = *((unsigned char *)a2 + v54[10]);
        uint64_t v78 = v54[11];
        uint64_t v79 = *(void **)((char *)a2 + v78);
        *(void **)((char *)a1 + v78) = v79;
        id v80 = v79;
        goto LABEL_65;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        long long v135 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v82 = *a2;
            *a1 = *a2;
            id v83 = v82;
            goto LABEL_42;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v81 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        int v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v85 = v84[5];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        if (*(void **)((char *)a2 + v85 + 8))
        {
          long long v133 = v84;
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = *((void *)v87 + 1);
          uint64_t v88 = (void *)*((void *)v87 + 2);
          uint64_t v89 = *((void *)v87 + 3);
          uint64_t v90 = *((void *)v87 + 4);
          uint64_t v91 = *((void *)v87 + 5);
          uint64_t v92 = *((void *)v87 + 6);
          uint64_t v128 = *((void *)v87 + 7);
          unsigned __int8 v93 = v87[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v88, v89, v90, v91, v92, v128, v93);
          *((void *)v86 + 2) = v88;
          *((void *)v86 + 3) = v89;
          *((void *)v86 + 4) = v90;
          *((void *)v86 + 5) = v91;
          *((void *)v86 + 6) = v92;
          *((void *)v86 + 7) = v128;
          v86[64] = v93;
          v86[65] = v87[65];
          v86[66] = v87[66];
          v86[67] = v87[67];
          v86[68] = v87[68];
          int v94 = v87[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v87 + 72);
            long long v96 = *(_OWORD *)(v87 + 88);
            long long v97 = *(_OWORD *)(v87 + 104);
            v86[120] = v87[120];
            *(_OWORD *)(v86 + 88) = v96;
            *(_OWORD *)(v86 + 104) = v97;
            *(_OWORD *)(v86 + 72) = v95;
          }
          else
          {
            char v129 = v94 & 1;
            uint64_t v105 = (void *)*((void *)v87 + 9);
            uint64_t v104 = *((void *)v87 + 10);
            uint64_t v106 = *((void *)v87 + 11);
            uint64_t v107 = *((void *)v87 + 12);
            uint64_t v108 = *((void *)v87 + 13);
            uint64_t v109 = *((void *)v87 + 14);
            sub_10003BED8(v105, v104, v106, v107, v108, v109, v94 & 1);
            *((void *)v86 + 9) = v105;
            *((void *)v86 + 10) = v104;
            *((void *)v86 + 11) = v106;
            *((void *)v86 + 12) = v107;
            *((void *)v86 + 13) = v108;
            *((void *)v86 + 14) = v109;
            v86[120] = v129;
          }
          a3 = v135;
          v86[121] = v87[121];
          int v84 = v133;
        }
        else
        {
          long long v98 = *(_OWORD *)v87;
          long long v99 = *((_OWORD *)v87 + 1);
          long long v100 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v100;
          *(_OWORD *)uint64_t v86 = v98;
          *((_OWORD *)v86 + 1) = v99;
          long long v101 = *((_OWORD *)v87 + 4);
          long long v102 = *((_OWORD *)v87 + 5);
          long long v103 = *((_OWORD *)v87 + 6);
          *(_OWORD *)(v86 + 106) = *(_OWORD *)(v87 + 106);
          *((_OWORD *)v86 + 5) = v102;
          *((_OWORD *)v86 + 6) = v103;
          *((_OWORD *)v86 + 4) = v101;
        }
        *((unsigned char *)a1 + v84[6]) = *((unsigned char *)a2 + v84[6]);
        *((unsigned char *)a1 + v84[7]) = *((unsigned char *)a2 + v84[7]);
        *((unsigned char *)a1 + v84[8]) = *((unsigned char *)a2 + v84[8]);
        *((unsigned char *)a1 + v84[9]) = *((unsigned char *)a2 + v84[9]);
        *((unsigned char *)a1 + v84[10]) = *((unsigned char *)a2 + v84[10]);
        uint64_t v110 = v84[11];
        id v111 = *(void **)((char *)a2 + v110);
        *(void **)((char *)a1 + v110) = v111;
        id v112 = v111;
        goto LABEL_65;
      case 2u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v10);
        uint64_t v12 = (void **)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v16 = v9;
        if (v15(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v114 = *v12;
            *uint64_t v11 = *v12;
            id v115 = v114;
            goto LABEL_53;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v113 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v11, v12, v113);
LABEL_53:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 3u:
        int v17 = *a2;
        *a1 = *a2;
        uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v18);
        uint64_t v12 = (void **)((char *)a2 + v18);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v20 = v17;
        if (v19(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v117 = *v12;
            *uint64_t v11 = *v12;
            id v118 = v117;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v116 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v116 - 8) + 16))(v11, v12, v116);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 4u:
        unint64_t v21 = *a2;
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v22);
        uint64_t v12 = (void **)((char *)a2 + v22);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        id v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v24 = v21;
        if (v23(v12, 1, v13))
        {
LABEL_10:
          uint64_t v25 = sub_10003B754(&qword_10078C890);
          memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v120 = *v12;
              *uint64_t v11 = *v12;
              id v121 = v120;
              goto LABEL_63;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v119 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v119 - 8) + 16))(v11, v12, v119);
LABEL_63:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(void *)(v14 + 64));
              break;
          }
LABEL_64:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_65:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        uint64_t v26 = a2[2];
        a1[2] = v26;
        id v27 = v26;
        goto LABEL_65;
      case 6u:
        uint64_t v35 = *a2;
        *a1 = *a2;
        id v36 = v35;
        goto LABEL_65;
      case 7u:
        uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v29 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
        {
          uint64_t v30 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v40 = *(int *)(v28 + 20);
          long long v136 = (char *)a1 + v40;
          long long v130 = (char *)a2 + v40;
          uint64_t v41 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v136, v130, v41);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
        }
        uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v44 = (void **)((char *)a1 + v43);
        uint64_t v45 = (void **)((char *)a2 + v43);
        if (v45[1])
        {
          void *v44 = *v45;
          v44[1] = v45[1];
          long long v46 = (void *)v45[2];
          void v44[2] = v46;
          swift_bridgeObjectRetain();
          id v47 = v46;
        }
        else
        {
          long long v48 = *(_OWORD *)v45;
          void v44[2] = v45[2];
          *(_OWORD *)uint64_t v44 = v48;
        }
        goto LABEL_65;
      case 8u:
        uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
        {
          uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
        }
        uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v50 + 20)) = *(void **)((char *)a2 + *(int *)(v50 + 20));
        goto LABEL_65;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_65;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v122 = a3[6];
  uint64_t v123 = (void **)((char *)a1 + v122);
  uint64_t v124 = (void **)((char *)a2 + v122);
  *uint64_t v123 = *v124;
  v123[1] = v124[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)a1 + a3[7]) = *(void **)((char *)a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_100566100(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v36 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_25;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
LABEL_25:
      uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v38 = v37[5];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (_OWORD *)((char *)a2 + v38);
      long long v41 = v40[3];
      v39[2] = v40[2];
      v39[3] = v41;
      long long v42 = v40[1];
      _OWORD *v39 = *v40;
      v39[1] = v42;
      *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
      long long v43 = v40[6];
      long long v44 = v40[4];
      v39[5] = v40[5];
      v39[6] = v43;
      v39[4] = v44;
      *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
      *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
      *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
      *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
      *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
      *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
      goto LABEL_38;
    case 2u:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v46 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v14;
      uint64_t v11 = (char *)a2 + v14;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 4u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v16;
      uint64_t v11 = (char *)a2 + v16;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        uint64_t v15 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v48 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
LABEL_37:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_38:
      swift_storeEnumTagMultiPayload();
LABEL_39:
      uint64_t v49 = a3[6];
      *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
      *(_OWORD *)((char *)a1 + v49) = *(_OWORD *)((char *)a2 + v49);
      *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
      return a1;
    case 7u:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v27 = *(int *)(v17 + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      goto LABEL_38;
    case 8u:
      uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
      {
        uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v34 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
      }
      uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
      goto LABEL_38;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      id v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_38;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_39;
  }
}

void *sub_1005671FC(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)a1);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_26;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v45 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
LABEL_26:
        uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v38 = v37[5];
        uint64_t v39 = (_OWORD *)((char *)a1 + v38);
        uint64_t v40 = (_OWORD *)((char *)a2 + v38);
        long long v41 = v40[3];
        v39[2] = v40[2];
        v39[3] = v41;
        long long v42 = v40[1];
        _OWORD *v39 = *v40;
        v39[1] = v42;
        *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
        long long v43 = v40[6];
        long long v44 = v40[4];
        v39[5] = v40[5];
        v39[6] = v43;
        v39[4] = v44;
        *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
        *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
        *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
        *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
        *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
        *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v46 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 3u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v14;
        uint64_t v11 = (char *)a2 + v14;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 4u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v16;
        uint64_t v11 = (char *)a2 + v16;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_8:
          uint64_t v15 = sub_10003B754(&qword_10078C890);
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v48 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(v13 + 64));
              break;
          }
LABEL_38:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v27 = *(int *)(v17 + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((void *)v32 + 2) = *((void *)v33 + 2);
        goto LABEL_39;
      case 8u:
        uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v34 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
        goto LABEL_39;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_39;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v49 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  uint64_t v50 = (void *)((char *)a1 + v49);
  uint64_t v51 = (void *)((char *)a2 + v49);
  uint64_t v53 = *v51;
  uint64_t v52 = v51[1];
  *uint64_t v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100568320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100568334);
}

uint64_t sub_100568334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1005683F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100568408);
}

uint64_t sub_100568408(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TTRIReminderCellAutoCompleteViewModel()
{
  uint64_t result = qword_1007A73C8;
  if (!qword_1007A73C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100568510()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1005685BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v5 = v2;
  static TTRTypedController.currentArgument.getter();
  char v6 = v13;
  uint64_t v7 = v14;
  *(objc_super *)&v5[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_presenter] = v12[1];
  v5[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_style] = v6;
  *(void *)&v5[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_localUndoManager] = v7;
  swift_unknownObjectRetain();
  id v8 = v7;

  v12[0].receiver = v5;
  v12[0].super_class = ObjectType;
  id v9 = [(objc_super *)v12 initWithCoder:a1];

  id v10 = v9;
  swift_unknownObjectRelease();
  if (v10) {

  }
  return v10;
}

void sub_100568724()
{
  unint64_t v1 = v0;
  v35.receiver = v0;
  v35.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v2 = [v0 tableView];
  if (!v2)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v3 = v2;
  UITableView.fixUpBackgroundColorLoadedFromNibIfNeeded_workaroundRdar108920406()();

  if (v1[OBJC_IVAR____TtC9Reminders29TTRIGroupDetailViewController_style])
  {
    v4._uint64_t countAndFlagsBits = 0xD000000000000036;
    v4._object = (void *)0x80000001006BEFF0;
    v5._uint64_t countAndFlagsBits = 0x6E492070756F7247;
    v5._object = (void *)0xEA00000000006F66;
    TTRLocalizedString(_:comment:)(v5, v4);
    unint64_t v6 = 0xD000000000000041;
    unint64_t v7 = 0x80000001006BF030;
    uint64_t v8 = 1701736260;
    unint64_t v9 = 0xE400000000000000;
  }
  else
  {
    v10._uint64_t countAndFlagsBits = 0xD000000000000035;
    v10._object = (void *)0x80000001006BF0A0;
    v11._uint64_t countAndFlagsBits = 0x756F72472077654ELL;
    v11._object = (void *)0xE900000000000070;
    TTRLocalizedString(_:comment:)(v11, v10);
    unint64_t v6 = 0xD00000000000003ALL;
    unint64_t v7 = 0x80000001006BF0E0;
    uint64_t v8 = 0x657461657243;
    unint64_t v9 = 0xE600000000000000;
  }
  TTRLocalizedString(_:comment:)(*(Swift::String *)&v8, *(Swift::String *)&v6);
  id v12 = [v1 navigationItem];
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v12 setTitle:v13];

  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_18;
  }
  uint64_t v15 = (void *)Strong;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setTitle:v16];

  uint64_t v17 = swift_unknownObjectWeakLoadStrong();
  if (!v17)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v18 = (void *)v17;
  uint64_t v19 = self;
  id v20 = [v19 labelColor];
  [v18 setTextColor:v20];

  uint64_t v21 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v21)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  uint64_t v22 = v21;
  id v23 = [v21 textLabel];

  if (v23)
  {
    id v24 = [v19 labelColor];
    [v23 setTextColor:v24];
  }
  uint64_t v25 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v25) {
    goto LABEL_21;
  }
  uint64_t v26 = v25;
  id v27 = [v25 textLabel];

  if (v27)
  {
    v28._object = (void *)0x80000001006BF080;
    v29._uint64_t countAndFlagsBits = 0x6564756C636E49;
    v29._object = (void *)0xE700000000000000;
    v28._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
    TTRLocalizedString(_:comment:)(v29, v28);
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setText:v30];
  }
  uint64_t v31 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v31) {
    goto LABEL_22;
  }
  uint64_t v32 = v31;
  id v33 = [v31 detailTextLabel];

  if (v33)
  {
    id v34 = [v19 tableCellGrayTextColor];
    [v33 setTextColor:v34];
  }
}

void sub_100568B34()
{
  sub_1000D929C();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v1 = (void *)Strong;
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];

  uint64_t v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v3)
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    return;
  }
  Swift::String v4 = v3;
  id v5 = [v3 detailTextLabel];

  if (v5)
  {
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    [v5 setText:v6];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v7) {
    goto LABEL_16;
  }
  uint64_t v8 = v7;
  id v9 = [v7 text];

  if (v9)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::tuple_name_String_isValid_Bool v14 = String.validatedListName()();
    Swift::Bool isValid = v14.isValid;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Bool isValid = 0;
  }
  Swift::String v11 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v11) {
    goto LABEL_17;
  }
  id v12 = v11;
  [v11 setEnabled:isValid];
}

void sub_100568D80(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  [v1 becomeFirstResponder];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_10;
  }
  Swift::String v4 = Strong;
  id v5 = [Strong text];

  if (!v5) {
    goto LABEL_6;
  }
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = v7;

  swift_bridgeObjectRelease();
  uint64_t v9 = HIBYTE(v8) & 0xF;
  if ((v8 & 0x2000000000000000) == 0) {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
  }
  if (!v9)
  {
LABEL_6:
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      Swift::String v11 = (void *)v10;
      sub_100144D48();
      UITextInput<>.ttrBeginEditing()();

      return;
    }
LABEL_10:
    __break(1u);
  }
}

void sub_1005692D0()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = Strong;
    id v2 = [Strong text];

    if (v2)
    {
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0xE000000000000000;
    }
    sub_1000D9370(v3, v5);
    swift_bridgeObjectRelease();
    sub_1000D9720();
  }
  else
  {
    __break(1u);
  }
}

void sub_100569390()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  unint64_t v1 = Strong;
  id v2 = [Strong text];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    Swift::tuple_name_String_isValid_Bool v7 = String.validatedListName()();
    Swift::Bool isValid = v7.isValid;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    Swift::Bool isValid = 0;
  }
  uint64_t v4 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v4) {
    goto LABEL_10;
  }
  id v5 = v4;
  [v4 setEnabled:isValid];
}

uint64_t sub_100569490(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_unknownObjectRetain();
  id v6 = a1;
  _bridgeAnyObjectToAny(_:)();
  uint64_t v7 = swift_unknownObjectRelease();
  a4(v7);

  return sub_100038CD8((uint64_t)&v9);
}

uint64_t type metadata accessor for TTRIGroupDetailViewController()
{
  return self;
}

void *sub_100569608()
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v1 = result;
    id v2 = [result text];

    if (v2)
    {
      uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v5 = v4;
    }
    else
    {
      uint64_t v3 = 0;
      uint64_t v5 = 0xE000000000000000;
    }
    sub_1000D9370(v3, v5);
    return (void *)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIGroupDetailViewController.Argument()
{
  return &type metadata for TTRIGroupDetailViewController.Argument;
}

uint64_t sub_1005696C8(unint64_t a1)
{
  return sub_10056A280(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_100579CD8);
}

uint64_t sub_1005696E0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_10056F528(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v9 = &v3[2 * v8 + 32];
  if (a1 + 32 < (unint64_t)&v9[2 * v2] && (unint64_t)v9 < a1 + 32 + 2 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 2 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *unint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100569828(uint64_t a1)
{
  return sub_10056A090(a1, &qword_10078D1E8, type metadata accessor for TTRRemindersListTreeViewModel.Section, type metadata accessor for TTRRemindersListTreeViewModel.Section, type metadata accessor for TTRRemindersListTreeViewModel.Section);
}

uint64_t sub_100569870(uint64_t a1)
{
  return sub_10056A090(a1, &qword_1007A7770, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
}

uint64_t sub_1005698B8(unint64_t a1)
{
  return sub_100569D94(a1, &qword_10078E370, &qword_1007A7600, &qword_1007A75F8, (uint64_t *)sub_1005AF6F4);
}

uint64_t sub_1005698E8(uint64_t a1)
{
  return sub_10056A484(a1, &qword_1007A7698, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
}

uint64_t sub_100569930(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_100570754(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100569A90(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_10057180C(isUniquelyReferenced_nonNull_native, v15, 1, v3, &qword_100792888);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[4 * v9 + 4];
  if (a1 + 32 < v10 + 32 * v8 && v10 < a1 + 32 + 32 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100569BF8(unint64_t a1)
{
  return sub_10056A280(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_100579F28);
}

uint64_t sub_100569C10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *((void *)*v1 + 2);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *((void *)v3 + 3) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_100022F98(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *((void *)v3 + 2);
  if ((*((void *)v3 + 3) >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[16 * v8 + 32];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = *((void *)v3 + 2);
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    *((void *)v3 + 2) = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100569D64(unint64_t a1)
{
  return sub_100569D94(a1, (uint64_t *)&unk_100788D30, &qword_1007A7580, &qword_1007A7578, (uint64_t *)sub_1005AF6F4);
}

uint64_t sub_100569D94(unint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v5 >> 62))
  {
    uint64_t v12 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v13 = v12 + v11;
    if (!__OFADD__(v12, v11)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v13 = v23 + v11;
  if (__OFADD__(v23, v11)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v14 = *v5;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *int64_t v5 = v14;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v14 & 0x8000000000000000) == 0 && (v14 & 0x4000000000000000) == 0)
    {
      uint64_t v16 = v14 & 0xFFFFFFFFFFFFFF8;
      if (v13 <= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  uint64_t v24 = v11;
  uint64_t v11 = (uint64_t)a2;
  a2 = (uint64_t *)a3;
  a3 = (unint64_t *)a4;
  a4 = a5;
  if (v14 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *int64_t v5 = v17;
    uint64_t v16 = v17 & 0xFFFFFFFFFFFFFF8;
    a5 = a4;
    a4 = (uint64_t *)a3;
    a3 = (unint64_t *)a2;
    a2 = (uint64_t *)v11;
    uint64_t v11 = v24;
LABEL_11:
    uint64_t result = sub_10057A178(v16 + 8 * *(void *)(v16 + 16) + 32, (*(void *)(v16 + 24) >> 1) - *(void *)(v16 + 16), a1, a2, a3, a4, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))a5);
    if (v19 >= v11) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v19 >= 1)
  {
    uint64_t v20 = *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v21 = __OFADD__(v20, v19);
    uint64_t v22 = v20 + v19;
    if (v21)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v5 & 0xFFFFFFFFFFFFFF8) + 0x10) = v22;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_100569FB8(unint64_t a1)
{
  return sub_10003C31C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057A398);
}

uint64_t sub_100569FD0(unint64_t a1)
{
  return sub_10003C31C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057A5B8);
}

uint64_t sub_100569FE8(uint64_t a1)
{
  return sub_10056A484(a1, &qword_1007A1408, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.SectionLite, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.SectionLite, (uint64_t (*)(void))&type metadata accessor for REMRemindersListDataView.SectionLite);
}

uint64_t sub_10056A030(unint64_t a1)
{
  return sub_10056A280(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057A7D8);
}

uint64_t sub_10056A048(uint64_t a1)
{
  return sub_10056A090(a1, &qword_10078ADC0, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_10056A090(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  unint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
    goto LABEL_21;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    unint64_t v16 = *(void *)(a1 + 16);
    if (v16) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v8 <= v9) {
    int64_t v31 = v8 + v6;
  }
  else {
    int64_t v31 = v8;
  }
  unint64_t v7 = sub_10056F778(isUniquelyReferenced_nonNull_native, v31, 1, v7, a2, a3, a4);
  unint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v17 = *(void *)(v7 + 16);
  uint64_t v18 = (*(void *)(v7 + 24) >> 1) - v17;
  uint64_t v19 = *(void *)(a5(0) - 8);
  uint64_t v20 = *(void *)(v19 + 72);
  if (v18 < (uint64_t)v16)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v22 = v7 + v21 + v20 * v17;
  unint64_t v23 = a1 + v21;
  uint64_t v24 = v20 * v16;
  unint64_t v25 = v22 + v24;
  unint64_t v26 = v23 + v24;
  if (v23 < v25 && v22 < v26) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v16 < v6)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v28 = *(void *)(v7 + 16);
  BOOL v29 = __OFADD__(v28, v16);
  uint64_t v30 = v28 + v16;
  if (!v29)
  {
    *(void *)(v7 + 16) = v30;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *int64_t v5 = v7;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10056A268(unint64_t a1)
{
  return sub_10056A280(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057A9F8);
}

uint64_t sub_10056A280(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
    swift_bridgeObjectRelease();
    *uint64_t v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return specialized Array._endMutation()();
}

uint64_t sub_10056A454(unint64_t a1)
{
  return sub_10003C31C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057AC18);
}

uint64_t sub_10056A46C(unint64_t a1)
{
  return sub_10003C31C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10057AE28);
}

uint64_t sub_10056A484(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = *v5;
  int64_t v8 = *(void *)(*v5 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v9 <= *(void *)(v7 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v8 <= v9) {
    int64_t v30 = v8 + v6;
  }
  else {
    int64_t v30 = v8;
  }
  unint64_t v7 = sub_10056F778(isUniquelyReferenced_nonNull_native, v30, 1, v7, a2, a3, a4);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v6) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v16 = *(void *)(v7 + 16);
  uint64_t v17 = (*(void *)(v7 + 24) >> 1) - v16;
  uint64_t v18 = *(void *)(a5(0) - 8);
  uint64_t v19 = *(void *)(v18 + 72);
  if (v17 < v6)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v21 = v7 + v20 + v19 * v16;
  unint64_t v22 = a1 + v20;
  uint64_t v23 = v19 * v6;
  unint64_t v24 = v21 + v23;
  unint64_t v25 = v22 + v23;
  if (v22 < v24 && v21 < v25) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v6)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v5 = v7;
    return result;
  }
  uint64_t v27 = *(void *)(v7 + 16);
  BOOL v28 = __OFADD__(v27, v6);
  uint64_t v29 = v27 + v6;
  if (!v28)
  {
    *(void *)(v7 + 16) = v29;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t AnyListEntityQuery.init(queryType:)(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AppIntentsDependencyKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  int64_t v8 = (char *)&v10 - v7;
  sub_10003B754(&qword_1007857F0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, enum case for AppIntentsDependencyKey.remStore(_:), v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_10057C20C(&qword_1007857F8, (void (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return a1;
}

uint64_t AnyListEntityQuery.init()()
{
  uint64_t v0 = type metadata accessor for AppIntentsDependencyKey();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - v5;
  sub_10003B754(&qword_1007857F0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v6, enum case for AppIntentsDependencyKey.remStore(_:), v0);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v6, v0);
  sub_10057C20C(&qword_1007857F8, (void (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v6, v0);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  AppDependency.__allocating_init(key:manager:)();
  return 0;
}

uint64_t AnyListEntityQuery.entities(for:)(uint64_t a1, char a2, uint64_t a3)
{
  *(unsigned char *)(v3 + 480) = a2;
  *(void *)(v3 + 88) = a1;
  *(void *)(v3 + 96) = a3;
  *(void *)(v3 + 104) = sub_10003B754(&qword_1007A7498);
  *(void *)(v3 + 112) = swift_task_alloc();
  *(void *)(v3 + 120) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  *(void *)(v3 + 128) = v4;
  *(void *)(v3 + 136) = *(void *)(v4 - 8);
  *(void *)(v3 + 144) = swift_task_alloc();
  *(void *)(v3 + 152) = swift_task_alloc();
  sub_10003B754(&qword_10079EE88);
  *(void *)(v3 + 160) = swift_task_alloc();
  sub_10003B754(&qword_10079EE80);
  *(void *)(v3 + 168) = swift_task_alloc();
  *(void *)(v3 + 176) = *(void *)(type metadata accessor for AnyListEntity() - 8);
  *(void *)(v3 + 184) = swift_task_alloc();
  *(void *)(v3 + 192) = swift_task_alloc();
  *(void *)(v3 + 200) = swift_task_alloc();
  *(void *)(v3 + 208) = swift_task_alloc();
  *(void *)(v3 + 216) = swift_task_alloc();
  *(void *)(v3 + 224) = swift_task_alloc();
  *(void *)(v3 + 232) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for SmartListType();
  *(void *)(v3 + 240) = v5;
  *(void *)(v3 + 248) = *(void *)(v5 - 8);
  *(void *)(v3 + 256) = swift_task_alloc();
  *(void *)(v3 + 264) = swift_task_alloc();
  *(void *)(v3 + 272) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AnyListEntityID();
  *(void *)(v3 + 280) = v6;
  *(void *)(v3 + 288) = *(void *)(v6 - 8);
  *(void *)(v3 + 296) = swift_task_alloc();
  *(void *)(v3 + 304) = swift_task_alloc();
  *(void *)(v3 + 312) = swift_task_alloc();
  *(void *)(v3 + 320) = swift_task_alloc();
  *(void *)(v3 + 328) = swift_task_alloc();
  *(void *)(v3 + 336) = swift_task_alloc();
  *(void *)(v3 + 344) = swift_task_alloc();
  *(void *)(v3 + 352) = swift_task_alloc();
  *(void *)(v3 + 360) = swift_task_alloc();
  *(void *)(v3 + 368) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for REMAccountsListDataView.Model();
  *(void *)(v3 + 376) = v7;
  *(void *)(v3 + 384) = *(void *)(v7 - 8);
  *(void *)(v3 + 392) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for REMAccountsListDataView.Result();
  *(void *)(v3 + 400) = v8;
  *(void *)(v3 + 408) = *(void *)(v8 - 8);
  *(void *)(v3 + 416) = swift_task_alloc();
  uint64_t Style = type metadata accessor for REMAccountsListDataView.CachablePropertyFetchStyle();
  *(void *)(v3 + 424) = Style;
  *(void *)(v3 + 432) = *(void *)(Style - 8);
  *(void *)(v3 + 440) = swift_task_alloc();
  *(void *)(v3 + 448) = swift_task_alloc();
  uint64_t Options = type metadata accessor for REMAccountsListDataView.FetchOptions();
  *(void *)(v3 + 456) = Options;
  *(void *)(v3 + 464) = *(void *)(Options - 8);
  *(void *)(v3 + 472) = swift_task_alloc();
  return _swift_task_switch(sub_10056AEC0, 0, 0);
}

uint64_t sub_10056AEC0()
{
  uint64_t v231 = v0;
  uint64_t v1 = *(void *)(v0 + 440);
  uint64_t v2 = *(void *)(v0 + 424);
  uint64_t v3 = enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 432) + 104);
  v4(*(void *)(v0 + 448), enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:), v2);
  v4(v1, v3, v2);
  REMAccountsListDataView.FetchOptions.init(fetchAccounts:fetchReminderCounts:fetchHashtagLabels:fetchSmartListHashtagLabels:fetchUserDefinedVisibilityOfPredefinedSmartLists:fetchOrderedPinnedLists:)();
  type metadata accessor for REMAccountsListDataView();
  AppDependency.wrappedValue.getter();
  uint64_t v5 = *(void **)(v0 + 16);
  static REMAccountsListDataView.fetchModel(store:diffingAgainst:options:)();
  uint64_t v7 = *(void *)(v0 + 384);
  uint64_t v6 = *(void *)(v0 + 392);
  uint64_t v8 = *(void *)(v0 + 376);
  uint64_t v9 = *(void *)(v0 + 88);

  REMAccountsListDataView.Result.model.getter();
  uint64_t v10 = REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  unint64_t v11 = *(void *)(v9 + 16);
  unint64_t v193 = v11;
  if (v11)
  {
    uint64_t v12 = *(void *)(v0 + 288);
    uint64_t v13 = *(void *)(v0 + 248);
    uint64_t v194 = v10;
    uint64_t v195 = *(void *)(v0 + 176);
    uint64_t v14 = *(void *)(v0 + 136);
    int v198 = *(unsigned __int8 *)(v0 + 480);
    unint64_t v210 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    uint64_t v15 = *(void *)(v0 + 88) + v210;
    uint64_t v209 = (void (**)(void, void, void))(v14 + 32);
    uint64_t v221 = *(void *)(v12 + 72);
    long long v205 = (void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
    uint64_t v207 = (void (**)(uint64_t, uint64_t))(v14 + 8);
    uint64_t v196 = (void (**)(uint64_t, uint64_t))(v13 + 8);
    uint64_t v197 = (void (**)(uint64_t, void, uint64_t))(v13 + 32);
    swift_bridgeObjectRetain();
    uint64_t v16 = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t v17 = _swiftEmptyDictionarySingleton;
    unint64_t v18 = v11;
    uint64_t v19 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v23 = *(void *)(v0 + 360);
      uint64_t v24 = *(void *)(v0 + 368);
      sub_10057D644(v15, v24, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      sub_10057D644(v24, v23, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v227 = v17;
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload == 1)
        {
          uint64_t v26 = *(void *)(v0 + 368);
          uint64_t v27 = *(void *)(v0 + 336);
          (*v209)(*(void *)(v0 + 152), *(void *)(v0 + 360), *(void *)(v0 + 128));
          sub_10057D644(v26, v27, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = (void *)sub_10056F778(0, v19[2] + 1, 1, (unint64_t)v19, &qword_1007A7798, (uint64_t (*)(void))type metadata accessor for AnyListEntityID, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          }
          unint64_t v28 = v18;
          unint64_t v30 = v19[2];
          unint64_t v29 = v19[3];
          uint64_t v31 = v16;
          if (v30 >= v29 >> 1) {
            uint64_t v19 = (void *)sub_10056F778(v29 > 1, v30 + 1, 1, (unint64_t)v19, &qword_1007A7798, (uint64_t (*)(void))type metadata accessor for AnyListEntityID, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          }
          uint64_t v32 = v15;
          uint64_t v33 = *(void *)(v0 + 336);
          void v19[2] = v30 + 1;
          sub_10057D6AC(v33, (uint64_t)v19 + v210 + v30 * v221, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          id v34 = [self cdEntityName];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v35 = objc_allocWithZone((Class)REMObjectID);
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          NSString v37 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v35 initWithUUID:isa entityName:v37];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          uint64_t v38 = *(void *)(v0 + 152);
          uint64_t v39 = *(void *)(v0 + 128);
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          (*v207)(v38, v39);
          uint64_t v22 = v32;
          uint64_t v16 = v31;
          unint64_t v18 = v28;
        }
        else
        {
          uint64_t v52 = *(void *)(v0 + 368);
          uint64_t v53 = *(void *)(v0 + 328);
          (*v209)(*(void *)(v0 + 144), *(void *)(v0 + 360), *(void *)(v0 + 128));
          sub_10057D644(v52, v53, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v16 = sub_10056F778(0, *(void *)(v16 + 16) + 1, 1, v16, &qword_1007A7798, (uint64_t (*)(void))type metadata accessor for AnyListEntityID, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          }
          uint64_t v54 = v19;
          unint64_t v56 = *(void *)(v16 + 16);
          unint64_t v55 = *(void *)(v16 + 24);
          unint64_t v57 = v18;
          if (v56 >= v55 >> 1) {
            uint64_t v16 = sub_10056F778(v55 > 1, v56 + 1, 1, v16, &qword_1007A7798, (uint64_t (*)(void))type metadata accessor for AnyListEntityID, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          }
          uint64_t v58 = v15;
          uint64_t v59 = *(void *)(v0 + 328);
          *(void *)(v16 + 16) = v56 + 1;
          sub_10057D6AC(v59, v16 + v210 + v56 * v221, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          id v60 = [self cdEntityName];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v61 = objc_allocWithZone((Class)REMObjectID);
          Class v62 = UUID._bridgeToObjectiveC()().super.isa;
          NSString v63 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v61 initWithUUID:v62 entityName:v63];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          uint64_t v20 = *(void *)(v0 + 144);
          uint64_t v21 = *(void *)(v0 + 128);
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          (*v207)(v20, v21);
          uint64_t v22 = v58;
          unint64_t v18 = v57;
          uint64_t v19 = v54;
        }
        uint64_t v17 = v227;
        goto LABEL_5;
      }
      uint64_t v219 = v16;
      uint64_t v40 = *(void *)(v0 + 264);
      uint64_t v41 = *(void *)(v0 + 272);
      uint64_t v42 = *(void *)(v0 + 240);
      (*v197)(v41, *(void *)(v0 + 360), v42);
      long long v43 = *v205;
      (*v205)(v40, v41, v42);
      id v212 = v19;
      unint64_t v203 = v18;
      uint64_t v204 = v15;
      if (!v198) {
        goto LABEL_27;
      }
      uint64_t v44 = SmartListType.remSmartListType.getter();
      uint64_t v45 = (void *)v44;
      if (!*(void *)(v194 + 16)) {
        break;
      }
      uint64_t v46 = sub_10035C1CC(v44);
      if ((v47 & 1) == 0) {
        break;
      }
      uint64_t v48 = *(void *)(v0 + 264);
      uint64_t v49 = *(void *)(v0 + 240);
      uint64_t v50 = *(void *)(*(void *)(v194 + 56) + 8 * v46);

      uint64_t v51 = *v196;
      (*v196)(v48, v49);
      if (v50 != 2)
      {
        id v214 = v51;
        goto LABEL_28;
      }
      v51(*(void *)(v0 + 272), *(void *)(v0 + 240));
      uint64_t v16 = v219;
      uint64_t v22 = v204;
LABEL_5:
      sub_10057C0B0(*(void *)(v0 + 368), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      uint64_t v15 = v22 + v221;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_43;
      }
    }

LABEL_27:
    id v214 = *v196;
    (*v196)(*(void *)(v0 + 264), *(void *)(v0 + 240));
LABEL_28:
    uint64_t v64 = *(void *)(v0 + 344);
    uint64_t v65 = *(void *)(v0 + 272);
    uint64_t v66 = *(void *)(v0 + 256);
    uint64_t v67 = *(void *)(v0 + 240);
    uint64_t v199 = *(void *)(v0 + 232);
    uint64_t v200 = *(void *)(v0 + 224);
    uint64_t v201 = *(void *)(v0 + 352);
    uint64_t v68 = *(void *)(v0 + 160);
    uint64_t v69 = *(void *)(v0 + 168);
    sub_10057D644(*(void *)(v0 + 368), v201, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    v43(v66, v65, v67);
    v43(v64, v66, v67);
    swift_storeEnumTagMultiPayload();
    uint64_t v70 = SmartListType.title.getter();
    uint64_t v72 = v71;
    uint64_t v73 = type metadata accessor for ListBadgeEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56))(v69, 1, 1, v73);
    uint64_t v74 = type metadata accessor for ColorEntity();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v68, 1, 1, v74);
    uint64_t v16 = v199;
    AnyListEntity.init(id:name:listBadge:color:supportsListAppearance:)(v64, v70, v72, v69, v68, 2, v199);
    v214(v66, v67);
    sub_10057D6AC(v199, v200, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v228[0] = v17;
    unint64_t v77 = sub_10035C870(v201);
    uint64_t v78 = v17[2];
    BOOL v79 = (v76 & 1) == 0;
    uint64_t v80 = v78 + v79;
    if (__OFADD__(v78, v79)) {
      goto LABEL_105;
    }
    char v81 = v76;
    if (v17[3] < v80)
    {
      uint64_t v82 = *(void *)(v0 + 352);
      sub_100577EE0(v80, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = (void *)v228[0];
      unint64_t v83 = sub_10035C870(v82);
      uint64_t v16 = v219;
      uint64_t v19 = v212;
      unint64_t v18 = v203;
      uint64_t v22 = v204;
      if ((v81 & 1) != (v84 & 1))
      {
LABEL_100:
        return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      }
      unint64_t v77 = v83;
      if ((v81 & 1) == 0) {
        goto LABEL_38;
      }
LABEL_35:
      sub_100579C74(*(void *)(v0 + 224), v17[7] + *(void *)(v195 + 72) * v77);
LABEL_40:
      uint64_t v90 = *(void *)(v0 + 352);
      uint64_t v91 = *(void *)(v0 + 272);
      uint64_t v92 = *(void *)(v0 + 240);
      swift_bridgeObjectRelease();
      sub_10057C0B0(v90, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      v214(v91, v92);
      goto LABEL_5;
    }
    uint64_t v16 = v219;
    uint64_t v19 = v212;
    unint64_t v18 = v203;
    uint64_t v22 = v204;
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v76) {
        goto LABEL_35;
      }
    }
    else
    {
      sub_100364790();
      uint64_t v17 = (void *)v228[0];
      if (v81) {
        goto LABEL_35;
      }
    }
LABEL_38:
    uint64_t v85 = *(void *)(v0 + 352);
    uint64_t v86 = *(void *)(v0 + 224);
    v17[(v77 >> 6) + 8] |= 1 << v77;
    sub_10057D644(v85, v17[6] + v77 * v221, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    sub_10057D6AC(v86, v17[7] + *(void *)(v195 + 72) * v77, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    uint64_t v87 = v17[2];
    BOOL v88 = __OFADD__(v87, 1);
    uint64_t v89 = v87 + 1;
    if (v88) {
      goto LABEL_109;
    }
    v17[2] = v89;
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = _swiftEmptyDictionarySingleton;
  uint64_t v16 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v19 = _swiftEmptyArrayStorage;
LABEL_43:
  AppDependency.wrappedValue.getter();
  unsigned __int8 v93 = *(void **)(v0 + 24);
  sub_1000368FC(0, qword_10078E3D0);
  swift_bridgeObjectRetain();
  Class v94 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = 0;
  id v95 = [v93 fetchListsWithObjectIDs:v94 error:v0 + 32];

  long long v96 = *(void **)(v0 + 32);
  if (!v95)
  {
    uint64_t v119 = *(void *)(v0 + 464);
    uint64_t v220 = *(void *)(v0 + 456);
    uint64_t v223 = *(void *)(v0 + 472);
    uint64_t v120 = *(void *)(v0 + 408);
    uint64_t v216 = *(void *)(v0 + 416);
    uint64_t v121 = *(void *)(v0 + 400);
    id v122 = v96;
LABEL_97:
    id v147 = v122;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v216, v121);
    (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v223, v220);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v148 = *(uint64_t (**)(void))(v0 + 8);
    return v148();
  }
  LODWORD(v199) = *(unsigned __int8 *)(v0 + 480);
  unint64_t v77 = sub_1000368FC(0, &qword_100791CF0);
  sub_1000511DC();
  unint64_t v202 = v77;
  uint64_t v97 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v98 = v96;

  uint64_t v99 = v19[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v219 = v16;
  uint64_t v222 = v99;
  uint64_t v213 = v19;
  if (!v99) {
    goto LABEL_71;
  }
  unint64_t v100 = 0;
  uint64_t v215 = *(void *)(v0 + 288);
  uint64_t v206 = *(void *)(v0 + 104);
  unint64_t v101 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
  unint64_t v203 = v97 & 0xC000000000000001;
  uint64_t v227 = (void *)v97;
  while (1)
  {
    if (v100 >= v19[2])
    {
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      goto LABEL_106;
    }
    sub_10057D644((uint64_t)v19+ ((*(unsigned __int8 *)(v215 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v215 + 80))+ *(void *)(v215 + 72) * v100, *(void *)(v0 + 320), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      break;
    }
    if (v100 == *(void *)(v101 + 16)) {
      goto LABEL_70;
    }
LABEL_52:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
    {
      id v102 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v100 >= *(void *)(v101 + 16)) {
        goto LABEL_104;
      }
      id v102 = (id)_swiftEmptyArrayStorage[v100 + 4];
    }
    long long v103 = v102;
    uint64_t v104 = *(void *)(v0 + 312);
    uint64_t v105 = *(void *)(v0 + 120);
    uint64_t v106 = *(int *)(v206 + 48);
    unint64_t v77 = (unint64_t)type metadata accessor for AnyListEntityID;
    sub_10057D6AC(*(void *)(v0 + 320), v105, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    *(void *)(v105 + v106) = v103;
    sub_10057D6AC(v105, v104, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    if (v203)
    {
      uint64_t v107 = __CocoaDictionary.lookup(_:)();
      if (v107)
      {
        unint64_t v77 = v0 + 48;
        *(void *)(v0 + 48) = v107;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v108 = *(id *)(v0 + 40);
        swift_unknownObjectRelease();
        if (v108)
        {
LABEL_62:
          if (v199 == 1 && ![v108 isPinned])
          {
            sub_10057C0B0(*(void *)(v0 + 312), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          }
          else
          {
            unint64_t v77 = *(void *)(v0 + 344);
            uint64_t v112 = *(void *)(v0 + 312);
            uint64_t v114 = *(void *)(v0 + 208);
            uint64_t v113 = *(void *)(v0 + 216);
            sub_10057D644(v112, v77, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
            unint64_t v229 = v202;
            v230 = &protocol witness table for REMList;
            v228[0] = v108;
            id v115 = v108;
            sub_100431E64(v228, v113);
            sub_10057D6AC(v113, v114, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
            char v116 = swift_isUniquelyReferenced_nonNull_native();
            v228[0] = v17;
            uint64_t v117 = v114;
            uint64_t v16 = v219;
            sub_1000BC6C0(v117, v77, v116);
            uint64_t v17 = (void *)v228[0];
            swift_bridgeObjectRelease();
            sub_10057C0B0(v77, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);

            uint64_t v19 = v213;
            sub_10057C0B0(v112, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          }
          goto LABEL_48;
        }
      }
    }
    else if (v227[2])
    {
      id v109 = v103;
      unint64_t v110 = sub_10035C188((uint64_t)v109);
      if (v111)
      {
        id v108 = *(id *)(v227[7] + 8 * v110);

        if (v108) {
          goto LABEL_62;
        }
      }
      else
      {
      }
    }
    sub_10057C0B0(*(void *)(v0 + 312), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);

LABEL_48:
    ++v100;
    unint64_t v101 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
    if (v222 == v100) {
      goto LABEL_71;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v118 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v100 != v118) {
    goto LABEL_52;
  }
LABEL_70:
  sub_10057C0B0(*(void *)(v0 + 320), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
LABEL_71:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  AppDependency.wrappedValue.getter();
  uint64_t v123 = *(void **)(v0 + 56);
  *(void *)(v0 + 64) = 0;
  id v124 = [v123 fetchCustomSmartListsWithError:v0 + 64];

  char v125 = *(void **)(v0 + 64);
  uint64_t v227 = v17;
  if (!v124)
  {
    uint64_t v119 = *(void *)(v0 + 464);
    uint64_t v220 = *(void *)(v0 + 456);
    uint64_t v223 = *(void *)(v0 + 472);
    uint64_t v120 = *(void *)(v0 + 408);
    uint64_t v216 = *(void *)(v0 + 416);
    uint64_t v121 = *(void *)(v0 + 400);
    id v122 = v125;
    goto LABEL_97;
  }
  unint64_t v203 = sub_1000368FC(0, (unint64_t *)&qword_10078D250);
  unint64_t v77 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v126 = v125;

  if (v77 >> 62) {
    goto LABEL_111;
  }
  uint64_t v127 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  while (v127)
  {
    uint64_t v128 = 0;
    unint64_t v224 = v77 & 0xC000000000000001;
    Swift::Int v129 = (Swift::Int)_swiftEmptyDictionarySingleton;
    unint64_t v217 = v77;
    uint64_t v211 = v127;
    while (1)
    {
      id v131 = v224 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v77 + 8 * v128 + 32);
      id v132 = v131;
      uint64_t v133 = v128 + 1;
      if (__OFADD__(v128, 1)) {
        break;
      }
      unint64_t v77 = (unint64_t)[v131 objectID];
      if ((v129 & 0xC000000000000001) != 0)
      {
        if (v129 < 0) {
          uint64_t v134 = v129;
        }
        else {
          uint64_t v134 = v129 & 0xFFFFFFFFFFFFFF8;
        }
        uint64_t v135 = __CocoaDictionary.count.getter();
        if (__OFADD__(v135, 1)) {
          goto LABEL_108;
        }
        Swift::Int v129 = sub_100571D3C(v134, v135 + 1, &qword_10079C3D0, (unint64_t *)&qword_10078D250);
      }
      uint64_t v16 = swift_isUniquelyReferenced_nonNull_native();
      v228[0] = v129;
      unint64_t v137 = sub_10035C188(v77);
      uint64_t v138 = *(void *)(v129 + 16);
      BOOL v139 = (v136 & 1) == 0;
      uint64_t v140 = v138 + v139;
      if (__OFADD__(v138, v139)) {
        goto LABEL_107;
      }
      char v141 = v136;
      if (*(void *)(v129 + 24) >= v140)
      {
        if ((v16 & 1) == 0)
        {
          sub_100364AA8();
          Swift::Int v129 = v228[0];
        }
      }
      else
      {
        sub_1005786B0(v140, v16, &qword_10079C3D0);
        Swift::Int v129 = v228[0];
        unint64_t v142 = sub_10035C188(v77);
        if ((v141 & 1) != (v143 & 1)) {
          goto LABEL_100;
        }
        unint64_t v137 = v142;
      }
      uint64_t v16 = v219;
      if (v141)
      {
        uint64_t v130 = *(void *)(v129 + 56);

        *(void *)(v130 + 8 * v137) = v132;
      }
      else
      {
        *(void *)(v129 + 8 * (v137 >> 6) + 64) |= 1 << v137;
        *(void *)(*(void *)(v129 + 48) + 8 * v137) = v77;
        *(void *)(*(void *)(v129 + 56) + 8 * v137) = v132;
        uint64_t v144 = *(void *)(v129 + 16);
        BOOL v88 = __OFADD__(v144, 1);
        uint64_t v145 = v144 + 1;
        if (v88) {
          goto LABEL_110;
        }
        *(void *)(v129 + 16) = v145;
        id v146 = (id)v77;
      }
      swift_bridgeObjectRelease();

      ++v128;
      unint64_t v77 = v217;
      if (v133 == v211) {
        goto LABEL_113;
      }
    }
LABEL_106:
    __break(1u);
LABEL_107:
    __break(1u);
LABEL_108:
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
LABEL_111:
    swift_bridgeObjectRetain_n();
    uint64_t v127 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  Swift::Int v129 = (Swift::Int)_swiftEmptyDictionarySingleton;
LABEL_113:
  swift_bridgeObjectRelease_n();
  uint64_t v150 = *(void *)(v16 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v225 = v150;
  if (!v150) {
    goto LABEL_139;
  }
  unint64_t v151 = 0;
  uint64_t v218 = *(void *)(v0 + 288);
  unint64_t v152 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
  uint64_t v208 = *(void *)(v0 + 104);
  while (2)
  {
    if (v151 >= *(void *)(v16 + 16))
    {
      __break(1u);
LABEL_155:
      __break(1u);
    }
    sub_10057D644(v16+ ((*(unsigned __int8 *)(v218 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v218 + 80))+ *(void *)(v218 + 72) * v151, *(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62))
    {
      if (v151 == *(void *)(v152 + 16)) {
        goto LABEL_138;
      }
LABEL_121:
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
      {
        id v153 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v151 >= *(void *)(v152 + 16)) {
          goto LABEL_155;
        }
        id v153 = (id)_swiftEmptyArrayStorage[v151 + 4];
      }
      int v154 = v153;
      uint64_t v155 = *(void *)(v0 + 296);
      uint64_t v156 = *(void *)(v0 + 112);
      uint64_t v157 = *(int *)(v208 + 48);
      sub_10057D6AC(*(void *)(v0 + 304), v156, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      *(void *)(v156 + v157) = v154;
      sub_10057D6AC(v156, v155, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      if ((v129 & 0xC000000000000001) != 0)
      {
        uint64_t v158 = __CocoaDictionary.lookup(_:)();
        if (!v158) {
          goto LABEL_116;
        }
        *(void *)(v0 + 80) = v158;
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v159 = *(id *)(v0 + 72);
        swift_unknownObjectRelease();
        if (!v159) {
          goto LABEL_116;
        }
LABEL_131:
        if (v199 == 1 && ![v159 isPinned])
        {
          sub_10057C0B0(*(void *)(v0 + 296), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
        }
        else
        {
          uint64_t v163 = *(void *)(v0 + 344);
          uint64_t v164 = *(void *)(v0 + 296);
          uint64_t v166 = *(void *)(v0 + 208);
          uint64_t v165 = *(void *)(v0 + 216);
          sub_10057D644(v164, v163, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          unint64_t v229 = v203;
          v230 = &protocol witness table for REMSmartList;
          v228[0] = v159;
          id v167 = v159;
          sub_100431E64(v228, v165);
          sub_10057D6AC(v165, v166, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          char v168 = swift_isUniquelyReferenced_nonNull_native();
          v228[0] = v227;
          uint64_t v169 = v166;
          uint64_t v16 = v219;
          sub_1000BC6C0(v169, v163, v168);
          uint64_t v227 = (void *)v228[0];
          swift_bridgeObjectRelease();
          sub_10057C0B0(v163, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);

          sub_10057C0B0(v164, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
        }
      }
      else
      {
        if (*(void *)(v129 + 16))
        {
          id v160 = v154;
          unint64_t v161 = sub_10035C188((uint64_t)v160);
          if ((v162 & 1) == 0)
          {

            goto LABEL_116;
          }
          id v159 = *(id *)(*(void *)(v129 + 56) + 8 * v161);

          if (v159) {
            goto LABEL_131;
          }
        }
LABEL_116:
        sub_10057C0B0(*(void *)(v0 + 296), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      }
      ++v151;
      unint64_t v152 = (unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8;
      if (v225 == v151) {
        goto LABEL_139;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v170 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v151 != v170) {
    goto LABEL_121;
  }
LABEL_138:
  sub_10057C0B0(*(void *)(v0 + 304), (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
LABEL_139:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v171 = v193;
  if (v193)
  {
    uint64_t v172 = *(void *)(v0 + 288);
    uint64_t v226 = *(void *)(v0 + 176);
    uint64_t v173 = *(void *)(v0 + 88)
         + ((*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80));
    uint64_t v174 = *(void *)(v172 + 72);
    swift_bridgeObjectRetain();
    int v175 = _swiftEmptyArrayStorage;
    do
    {
      if (v227[2])
      {
        unint64_t v177 = sub_10035C870(v173);
        if (v178)
        {
          uint64_t v179 = *(void *)(v0 + 192);
          uint64_t v180 = *(void *)(v0 + 200);
          uint64_t v181 = *(void *)(v0 + 184);
          uint64_t v182 = *(void *)(v226 + 72);
          sub_10057D644(v227[7] + v182 * v177, v179, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          sub_10057D6AC(v179, v180, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          sub_10057D6AC(v180, v181, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v175 = (void *)sub_10056F778(0, v175[2] + 1, 1, (unint64_t)v175, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          }
          unint64_t v184 = v175[2];
          unint64_t v183 = v175[3];
          if (v184 >= v183 >> 1) {
            int v175 = (void *)sub_10056F778(v183 > 1, v184 + 1, 1, (unint64_t)v175, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          }
          uint64_t v176 = *(void *)(v0 + 184);
          v175[2] = v184 + 1;
          sub_10057D6AC(v176, (uint64_t)v175+ ((*(unsigned __int8 *)(v226 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v226 + 80))+ v184 * v182, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
        }
      }
      v173 += v174;
      --v171;
    }
    while (v171);
    uint64_t v185 = v175;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v185 = _swiftEmptyArrayStorage;
  }
  uint64_t v186 = *(void *)(v0 + 464);
  uint64_t v187 = *(void *)(v0 + 472);
  uint64_t v188 = *(void *)(v0 + 456);
  uint64_t v189 = *(void *)(v0 + 408);
  uint64_t v190 = *(void *)(v0 + 416);
  uint64_t v191 = *(void *)(v0 + 400);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v190, v191);
  (*(void (**)(uint64_t, uint64_t))(v186 + 8))(v187, v188);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v192 = *(uint64_t (**)(void *))(v0 + 8);
  return v192(v185);
}

uint64_t AnyListEntityQuery.suggestedEntities()(char a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  *(unsigned char *)(v2 + 488) = a1;
  uint64_t v3 = type metadata accessor for REMAccountsListDataView.Model.GroupChild();
  *(void *)(v2 + 32) = v3;
  *(void *)(v2 + 40) = *(void *)(v3 - 8);
  *(void *)(v2 + 48) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for REMAccountsListDataView.Model.Group();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = *(void *)(v4 - 8);
  *(void *)(v2 + 72) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for REMAccountsListDataView.Model.AccountChild();
  *(void *)(v2 + 80) = v5;
  *(void *)(v2 + 88) = *(void *)(v5 - 8);
  *(void *)(v2 + 96) = swift_task_alloc();
  *(void *)(v2 + 104) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for AnyListEntityLazyImage.Parameters();
  *(void *)(v2 + 112) = v6;
  *(void *)(v2 + 120) = *(void *)(v6 - 8);
  *(void *)(v2 + 128) = swift_task_alloc();
  sub_10003B754(&qword_10079EE88);
  *(void *)(v2 + 136) = swift_task_alloc();
  sub_10003B754(&qword_10079EE80);
  *(void *)(v2 + 144) = swift_task_alloc();
  *(void *)(v2 + 152) = type metadata accessor for AnyListEntityID();
  *(void *)(v2 + 160) = swift_task_alloc();
  *(void *)(v2 + 168) = swift_task_alloc();
  sub_10003B754(&qword_1007A74A8);
  *(void *)(v2 + 176) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SmartListType();
  *(void *)(v2 + 184) = v7;
  *(void *)(v2 + 192) = *(void *)(v7 - 8);
  *(void *)(v2 + 200) = swift_task_alloc();
  *(void *)(v2 + 208) = swift_task_alloc();
  *(void *)(v2 + 216) = swift_task_alloc();
  sub_10003B754(&qword_1007857D0);
  *(void *)(v2 + 224) = swift_task_alloc();
  uint64_t v8 = type metadata accessor for AnyListEntity();
  *(void *)(v2 + 232) = v8;
  *(void *)(v2 + 240) = *(void *)(v8 - 8);
  *(void *)(v2 + 248) = swift_task_alloc();
  *(void *)(v2 + 256) = swift_task_alloc();
  *(void *)(v2 + 264) = swift_task_alloc();
  *(void *)(v2 + 272) = swift_task_alloc();
  *(void *)(v2 + 280) = swift_task_alloc();
  *(void *)(v2 + 288) = swift_task_alloc();
  *(void *)(v2 + 296) = swift_task_alloc();
  *(void *)(v2 + 304) = swift_task_alloc();
  *(void *)(v2 + 312) = swift_task_alloc();
  *(void *)(v2 + 320) = swift_task_alloc();
  *(void *)(v2 + 328) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for REMAccountsListDataView.Model.PinnedList();
  *(void *)(v2 + 336) = v9;
  *(void *)(v2 + 344) = *(void *)(v9 - 8);
  *(void *)(v2 + 352) = swift_task_alloc();
  *(void *)(v2 + 360) = swift_task_alloc();
  *(void *)(v2 + 368) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for REMAccountsListDataView.Model();
  *(void *)(v2 + 376) = v10;
  *(void *)(v2 + 384) = *(void *)(v10 - 8);
  *(void *)(v2 + 392) = swift_task_alloc();
  *(void *)(v2 + 400) = swift_task_alloc();
  uint64_t v11 = type metadata accessor for REMAccountsListDataView.Result();
  *(void *)(v2 + 408) = v11;
  *(void *)(v2 + 416) = *(void *)(v11 - 8);
  *(void *)(v2 + 424) = swift_task_alloc();
  uint64_t Style = type metadata accessor for REMAccountsListDataView.CachablePropertyFetchStyle();
  *(void *)(v2 + 432) = Style;
  *(void *)(v2 + 440) = *(void *)(Style - 8);
  *(void *)(v2 + 448) = swift_task_alloc();
  *(void *)(v2 + 456) = swift_task_alloc();
  uint64_t Options = type metadata accessor for REMAccountsListDataView.FetchOptions();
  *(void *)(v2 + 464) = Options;
  *(void *)(v2 + 472) = *(void *)(Options - 8);
  *(void *)(v2 + 480) = swift_task_alloc();
  return _swift_task_switch(sub_10056D294, 0, 0);
}

uint64_t sub_10056D294()
{
  uint64_t v235 = v0;
  uint64_t v1 = *(void *)(v0 + 448);
  uint64_t v2 = *(void *)(v0 + 432);
  int v201 = *(unsigned __int8 *)(v0 + 488);
  uint64_t v3 = enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:);
  uint64_t v4 = *(void (**)(void, void, uint64_t))(*(void *)(v0 + 440) + 104);
  v4(*(void *)(v0 + 456), enum case for REMAccountsListDataView.CachablePropertyFetchStyle.doNotFetch(_:), v2);
  v4(v1, v3, v2);
  REMAccountsListDataView.FetchOptions.init(fetchAccounts:fetchReminderCounts:fetchHashtagLabels:fetchSmartListHashtagLabels:fetchUserDefinedVisibilityOfPredefinedSmartLists:fetchOrderedPinnedLists:)();
  type metadata accessor for REMAccountsListDataView();
  AppDependency.wrappedValue.getter();
  uint64_t v5 = *(void **)(v0 + 16);
  static REMAccountsListDataView.fetchModel(store:diffingAgainst:options:)();
  uint64_t v6 = *(void *)(v0 + 400);
  uint64_t v7 = *(void *)(v0 + 376);
  uint64_t v8 = *(void *)(v0 + 384);
  unsigned __int8 v9 = *(unsigned char *)(v0 + 488);

  REMAccountsListDataView.Result.model.getter();
  uint64_t v10 = REMAccountsListDataView.Model.orderedPinnedLists.getter();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v11(v6, v7);
  REMAccountsListDataView.Result.model.getter();
  uint64_t v12 = REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter();
  uint64_t v182 = v11;
  v11(v6, v7);
  swift_retain();
  uint64_t v13 = sub_10057BD14(v10, v9, v12);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = *((void *)v13 + 2);
  if (v14)
  {
    uint64_t v15 = *(void *)(v0 + 344);
    uint64_t v16 = *(void *)(v0 + 240);
    uint64_t v218 = *(int **)(v0 + 232);
    uint64_t v17 = *(void *)(v0 + 192);
    unint64_t v18 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 16);
    v15 += 16;
    unint64_t v224 = v18;
    uint64_t v19 = &v13[(*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64)];
    uint64_t v222 = (uint64_t (**)(uint64_t, uint64_t))(v15 + 72);
    int v220 = enum case for REMAccountsListDataView.Model.PinnedList.predefinedSmartList(_:);
    int v194 = enum case for REMAccountsListDataView.Model.PinnedList.list(_:);
    int v186 = enum case for REMAccountsListDataView.Model.PinnedList.customSmartList(_:);
    unint64_t v210 = (void (**)(uint64_t, uint64_t))(v15 - 8);
    uint64_t v211 = (void (**)(id *, void))(v15 + 80);
    id v192 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    uint64_t v188 = (void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32);
    unsigned int v185 = enum case for SmartListType.today(_:);
    unint64_t v184 = (void (**)(uint64_t, void, uint64_t))(v17 + 104);
    uint64_t v199 = (void (**)(uint64_t, void, uint64_t))(v17 + 16);
    unsigned int v187 = enum case for AnyListEntityLazyImage.Parameters.list(_:);
    uint64_t v190 = (void (**)(unsigned char *, void, uint64_t))(*(void *)(v0 + 120) + 104);
    unsigned int v183 = enum case for AnyListEntityLazyImage.Parameters.smartList(_:);
    uint64_t v197 = (void (**)(uint64_t, uint64_t))(v17 + 8);
    uint64_t v216 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56);
    uint64_t v189 = v16;
    id v214 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
    uint64_t v212 = *(void *)(v15 + 56);
    swift_bridgeObjectRetain();
    uint64_t v20 = _swiftEmptyArrayStorage;
    int v21 = v201;
    do
    {
      uint64_t v23 = *(char **)(v0 + 360);
      uint64_t v24 = *(char **)(v0 + 368);
      uint64_t v25 = *(void *)(v0 + 352);
      uint64_t v26 = *(void *)(v0 + 336);
      v230 = v19;
      v224((uint64_t)v24, v19, v26);
      v224((uint64_t)v23, v24, v26);
      v224(v25, v23, v26);
      int v27 = (*v222)(v25, v26);
      if (v27 == v220)
      {
        unint64_t v28 = *(id **)(v0 + 352);
        uint64_t v30 = *(void *)(v0 + 176);
        uint64_t v29 = *(void *)(v0 + 184);
        (*v211)(v28, *(void *)(v0 + 336));
        id v31 = *v28;
        SmartListType.init(remSmartListType:)();
        int v32 = (*v192)(v30, 1, v29);
        uint64_t v33 = *(void *)(v0 + 216);
        uint64_t v35 = *(void *)(v0 + 176);
        uint64_t v34 = *(void *)(v0 + 184);
        uint64_t v227 = v20;
        uint64_t v206 = v31;
        uint64_t v208 = v14;
        if (v32 == 1)
        {
          (*v184)(v33, v185, v34);
          sub_10003B6F8(v35, &qword_1007A74A8);
        }
        else
        {
          (*v188)(v33, v35, v34);
        }
        uint64_t v43 = *(void *)(v0 + 320);
        uint64_t v44 = *(void *)(v0 + 208);
        uint64_t v45 = *(void *)(v0 + 184);
        uint64_t v46 = *(void *)(v0 + 168);
        uint64_t v203 = *(void *)(v0 + 160);
        uint64_t v47 = *(void *)(v0 + 144);
        uint64_t v48 = *(void *)(v0 + 136);
        uint64_t v49 = (void (*)(unsigned char *, uint64_t, uint64_t))*v199;
        (*v199)(v44, *(void *)(v0 + 216), v45);
        uint64_t v195 = v49;
        v49((unsigned char *)v46, v44, v45);
        swift_storeEnumTagMultiPayload();
        uint64_t v50 = SmartListType.title.getter();
        uint64_t v52 = v51;
        uint64_t v53 = type metadata accessor for ListBadgeEntity();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v47, 1, 1, v53);
        uint64_t v54 = type metadata accessor for ColorEntity();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v48, 1, 1, v54);
        sub_10057D644(v46, v43, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
        unint64_t v55 = (uint64_t *)(v43 + v218[5]);
        uint64_t *v55 = v50;
        v55[1] = v52;
        sub_10003B694(v47, v43 + v218[6], &qword_10079EE80);
        sub_10003B694(v48, v43 + v218[7], &qword_10079EE88);
        *(unsigned char *)(v43 + v218[8]) = 2;
        sub_10057D644(v46, v203, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          uint64_t v204 = *(void *)(v0 + 320);
          uint64_t v58 = *(void *)(v0 + 160);
          uint64_t v57 = *(void *)(v0 + 168);
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v59 = *(void *)(v0 + 136);
            uint64_t v60 = *(void *)(v0 + 144);
            id v61 = *(unsigned char **)(v0 + 128);
            uint64_t v62 = *(void *)(v0 + 112);
            NSString v63 = (int *)sub_10003B754(&qword_10079EE90);
            uint64_t v64 = (uint64_t)&v61[v63[12]];
            uint64_t v65 = (uint64_t)&v61[v63[16]];
            uint64_t v66 = v63[20];
            unsigned char *v61 = 1;
            sub_10003B694(v60, v64, &qword_10079EE80);
            sub_10003B694(v59, v65, &qword_10079EE88);
            v61[v66] = 2;
            (*v190)(v61, v187, v62);
            type metadata accessor for AnyListEntityLazyImage();
            swift_allocObject();
            uint64_t v67 = AnyListEntityLazyImage.init(for:)();
            uint64_t v68 = v59;
          }
          else
          {
            uint64_t v80 = *(void *)(v0 + 136);
            uint64_t v60 = *(void *)(v0 + 144);
            char v81 = *(unsigned char **)(v0 + 128);
            uint64_t v82 = *(void *)(v0 + 112);
            unint64_t v83 = (int *)sub_10003B754(&qword_10079EE90);
            uint64_t v84 = (uint64_t)&v81[v83[12]];
            uint64_t v85 = (uint64_t)&v81[v83[16]];
            uint64_t v86 = v83[20];
            unsigned char *v81 = 0;
            sub_10003B694(v60, v84, &qword_10079EE80);
            sub_10003B694(v80, v85, &qword_10079EE88);
            v81[v86] = 2;
            (*v190)(v81, v187, v82);
            type metadata accessor for AnyListEntityLazyImage();
            swift_allocObject();
            uint64_t v67 = AnyListEntityLazyImage.init(for:)();
            uint64_t v68 = v80;
          }
          sub_10003B6F8(v68, &qword_10079EE88);
          sub_10003B6F8(v60, &qword_10079EE80);
          sub_10057C0B0(v57, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          *(void *)(v204 + v218[9]) = v67;
          sub_10057C0B0(v58, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
        }
        else
        {
          uint64_t v71 = *(void *)(v0 + 320);
          uint64_t v72 = *(void *)(v0 + 200);
          uint64_t v73 = *(void *)(v0 + 184);
          uint64_t v74 = *(void *)(v0 + 168);
          uint64_t v76 = *(void *)(v0 + 136);
          uint64_t v75 = *(void *)(v0 + 144);
          unint64_t v77 = *(unsigned char **)(v0 + 128);
          uint64_t v78 = *(void *)(v0 + 112);
          (*v188)(v72, *(void *)(v0 + 160), v73);
          v195(v77, v72, v73);
          (*v190)(v77, v183, v78);
          type metadata accessor for AnyListEntityLazyImage();
          swift_allocObject();
          uint64_t v79 = AnyListEntityLazyImage.init(for:)();
          sub_10003B6F8(v76, &qword_10079EE88);
          sub_10003B6F8(v75, &qword_10079EE80);
          sub_10057C0B0(v74, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
          (*v197)(v72, v73);
          *(void *)(v71 + v218[9]) = v79;
        }
        uint64_t v87 = *(void *)(v0 + 360);
        uint64_t v88 = *(void *)(v0 + 336);
        uint64_t v89 = *(void *)(v0 + 216);
        uint64_t v90 = *(void *)(v0 + 184);
        uint64_t v91 = *v197;
        (*v197)(*(void *)(v0 + 208), v90);

        uint64_t v70 = *v210;
        (*v210)(v87, v88);
        v91(v89, v90);
        uint64_t v20 = v227;
        int v21 = v201;
        uint64_t v14 = v208;
      }
      else
      {
        if (v27 == v194)
        {
          uint64_t v36 = *(uint64_t **)(v0 + 352);
          uint64_t v37 = *(void *)(v0 + 360);
          uint64_t v38 = *(void *)(v0 + 336);
          uint64_t v39 = *(void *)(v0 + 320);
          (*v211)((id *)v36, v38);
          uint64_t v40 = *v36;
          uint64_t v41 = type metadata accessor for REMList_Codable();
          uint64_t v42 = &protocol witness table for REMList;
        }
        else
        {
          if (v27 != v186)
          {
LABEL_93:
            return _diagnoseUnexpectedEnumCase<A>(type:)();
          }
          uint64_t v69 = *(uint64_t **)(v0 + 352);
          uint64_t v37 = *(void *)(v0 + 360);
          uint64_t v38 = *(void *)(v0 + 336);
          uint64_t v39 = *(void *)(v0 + 320);
          (*v211)((id *)v69, v38);
          uint64_t v40 = *v69;
          uint64_t v41 = type metadata accessor for REMSmartList_Codable();
          uint64_t v42 = &protocol witness table for REMSmartList;
        }
        uint64_t v233 = v41;
        uint64_t v234 = v42;
        v232[0] = v40;
        sub_100431E64(v232, v39);
        uint64_t v70 = *v210;
        (*v210)(v37, v38);
      }
      uint64_t v92 = *(void *)(v0 + 368);
      uint64_t v93 = *(void *)(v0 + 336);
      uint64_t v95 = *(void *)(v0 + 224);
      uint64_t v94 = *(void *)(v0 + 232);
      sub_10057D6AC(*(void *)(v0 + 320), v95, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
      (*v216)(v95, 0, 1, v94);
      v70(v92, v93);
      if ((*v214)(v95, 1, v94) == 1)
      {
        sub_10003B6F8(*(void *)(v0 + 224), &qword_1007857D0);
        uint64_t v22 = v230;
      }
      else
      {
        uint64_t v96 = *(void *)(v0 + 328);
        uint64_t v97 = *(void *)(v0 + 312);
        sub_10057D6AC(*(void *)(v0 + 224), v96, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
        sub_10057D6AC(v96, v97, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
        uint64_t v22 = v230;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v20 = (void *)sub_10056F778(0, v20[2] + 1, 1, (unint64_t)v20, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
        }
        unint64_t v99 = v20[2];
        unint64_t v98 = v20[3];
        if (v99 >= v98 >> 1) {
          uint64_t v20 = (void *)sub_10056F778(v98 > 1, v99 + 1, 1, (unint64_t)v20, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
        }
        uint64_t v100 = *(void *)(v0 + 312);
        _OWORD v20[2] = v99 + 1;
        sub_10057D6AC(v100, (uint64_t)v20+ ((*(unsigned __int8 *)(v189 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v189 + 80))+ *(void *)(v189 + 72) * v99, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
      }
      uint64_t v19 = &v22[v212];
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage;
    int v21 = v201;
  }
  uint64_t v231 = v20;
  v228 = v20;
  if (v21 == 1) {
    goto LABEL_97;
  }
  uint64_t v101 = *(void *)(v0 + 392);
  uint64_t v102 = *(void *)(v0 + 376);
  REMAccountsListDataView.Result.model.getter();
  uint64_t v103 = REMAccountsListDataView.Model.accounts.getter();
  v182(v101, v102);
  uint64_t v104 = *(void *)(v103 + 16);
  if (!v104)
  {
    swift_bridgeObjectRelease();
    id v109 = _swiftEmptyArrayStorage;
    uint64_t v125 = _swiftEmptyArrayStorage[2];
    if (!v125) {
      goto LABEL_92;
    }
LABEL_53:
    unint64_t v126 = 0;
    uint64_t v223 = *(void *)(v0 + 240);
    uint64_t v127 = *(void *)(v0 + 88);
    uint64_t v128 = *(void *)(v0 + 64);
    uint64_t v129 = *(void *)(v0 + 40);
    uint64_t v213 = (char *)v109
         + ((*(unsigned __int8 *)(v127 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v127 + 80));
    int v209 = enum case for REMAccountsListDataView.Model.AccountChild.list(_:);
    int v202 = enum case for REMAccountsListDataView.Model.AccountChild.customSmartList(_:);
    int v200 = enum case for REMAccountsListDataView.Model.AccountChild.group(_:);
    uint64_t v207 = (void (**)(void **, void))(v127 + 96);
    int v198 = (void (**)(uint64_t, void **, uint64_t))(v128 + 32);
    unint64_t v229 = (uint64_t (**)(uint64_t, uint64_t))(v129 + 88);
    int v226 = enum case for REMAccountsListDataView.Model.GroupChild.list(_:);
    int v217 = enum case for REMAccountsListDataView.Model.GroupChild.customSmartList(_:);
    uint64_t v193 = v129;
    uint64_t v225 = (void (**)(void **, void))(v129 + 96);
    uint64_t v196 = (void (**)(void, void))(v128 + 8);
    uint64_t v215 = v127;
    long long v205 = (void (**)(uint64_t, uint64_t))(v127 + 8);
    uint64_t v191 = v125;
    while (1)
    {
      if (v126 >= v109[2]) {
        goto LABEL_105;
      }
      uint64_t v134 = *(void *)(v0 + 96);
      uint64_t v133 = *(char **)(v0 + 104);
      uint64_t v135 = *(void *)(v0 + 80);
      char v136 = *(void (**)(uint64_t, char *, uint64_t))(v215 + 16);
      v136((uint64_t)v133, &v213[*(void *)(v215 + 72) * v126], v135);
      v136(v134, v133, v135);
      int v137 = (*(uint64_t (**)(uint64_t, uint64_t))(v215 + 88))(v134, v135);
      if (v137 == v209)
      {
        uint64_t v138 = *(void ***)(v0 + 96);
        (*v207)(v138, *(void *)(v0 + 80));
        BOOL v139 = *v138;
        if (([v139 isPinned] & 1) == 0)
        {
          uint64_t v141 = *(void *)(v0 + 296);
          uint64_t v140 = *(void *)(v0 + 304);
          uint64_t v233 = type metadata accessor for REMList_Codable();
          uint64_t v234 = &protocol witness table for REMList;
          v232[0] = v139;
          id v142 = v139;
          sub_100431E64(v232, v140);
          sub_10057D644(v140, v141, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          uint64_t v130 = (void *)sub_10056F778(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          unint64_t v144 = v130[2];
          unint64_t v143 = v130[3];
          unint64_t v145 = v144 + 1;
          if (v144 >= v143 >> 1) {
            uint64_t v130 = (void *)sub_10056F778(v143 > 1, v144 + 1, 1, (unint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          }
          uint64_t v146 = *(void *)(v0 + 296);
          uint64_t v147 = *(void *)(v0 + 304);
LABEL_67:
          v130[2] = v145;
          sub_10057D6AC(v146, (uint64_t)v130+ ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80))+ *(void *)(v223 + 72) * v144, (uint64_t (*)(void))type metadata accessor for AnyListEntity);

          sub_10057C0B0(v147, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          goto LABEL_55;
        }
      }
      else
      {
        if (v137 != v202)
        {
          if (v137 != v200) {
            goto LABEL_93;
          }
          unint64_t v152 = *(void ***)(v0 + 96);
          uint64_t v153 = *(void *)(v0 + 72);
          uint64_t v154 = *(void *)(v0 + 56);
          (*v207)(v152, *(void *)(v0 + 80));
          (*v198)(v153, v152, v154);
          uint64_t v155 = REMAccountsListDataView.Model.Group.lists.getter();
          uint64_t v156 = *(void *)(v155 + 16);
          if (!v156)
          {
            swift_bridgeObjectRelease();
            uint64_t v130 = _swiftEmptyArrayStorage;
LABEL_90:
            (*v196)(*(void *)(v0 + 72), *(void *)(v0 + 56));
            goto LABEL_55;
          }
          unint64_t v157 = v155 + ((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80));
          uint64_t v158 = *(void *)(v193 + 72);
          id v159 = *(void (**)(void, void, void))(v193 + 16);
          uint64_t v130 = _swiftEmptyArrayStorage;
          uint64_t v219 = v159;
          uint64_t v221 = v158;
          while (2)
          {
            uint64_t v160 = *(void *)(v0 + 48);
            uint64_t v161 = *(void *)(v0 + 32);
            v159(v160, v157, v161);
            int v162 = (*v229)(v160, v161);
            if (v162 == v226)
            {
              uint64_t v163 = *(void ***)(v0 + 48);
              (*v225)(v163, *(void *)(v0 + 32));
              uint64_t v164 = *v163;
              if (([v164 isPinned] & 1) == 0)
              {
                uint64_t v166 = *(void *)(v0 + 264);
                uint64_t v165 = *(void *)(v0 + 272);
                uint64_t v233 = type metadata accessor for REMList_Codable();
                uint64_t v234 = &protocol witness table for REMList;
                v232[0] = v164;
                id v167 = v164;
                sub_100431E64(v232, v165);
                sub_10057D644(v165, v166, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v130 = (void *)sub_10056F778(0, v130[2] + 1, 1, (unint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
                }
                unint64_t v169 = v130[2];
                unint64_t v168 = v130[3];
                unint64_t v170 = v169 + 1;
                if (v169 >= v168 >> 1) {
                  uint64_t v130 = (void *)sub_10056F778(v168 > 1, v169 + 1, 1, (unint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
                }
                uint64_t v171 = *(void *)(v0 + 264);
                uint64_t v172 = *(void *)(v0 + 272);
                goto LABEL_87;
              }
LABEL_71:
            }
            else
            {
              if (v162 != v217) {
                goto LABEL_93;
              }
              uint64_t v173 = *(void ***)(v0 + 48);
              (*v225)(v173, *(void *)(v0 + 32));
              uint64_t v164 = *v173;
              if ([v164 isPinned]) {
                goto LABEL_71;
              }
              uint64_t v175 = *(void *)(v0 + 248);
              uint64_t v174 = *(void *)(v0 + 256);
              uint64_t v233 = type metadata accessor for REMSmartList_Codable();
              uint64_t v234 = &protocol witness table for REMSmartList;
              v232[0] = v164;
              id v167 = v164;
              sub_100431E64(v232, v174);
              sub_10057D644(v174, v175, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v130 = (void *)sub_10056F778(0, v130[2] + 1, 1, (unint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
              }
              unint64_t v169 = v130[2];
              unint64_t v176 = v130[3];
              unint64_t v170 = v169 + 1;
              if (v169 >= v176 >> 1) {
                uint64_t v130 = (void *)sub_10056F778(v176 > 1, v169 + 1, 1, (unint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
              }
              uint64_t v171 = *(void *)(v0 + 248);
              uint64_t v172 = *(void *)(v0 + 256);
LABEL_87:
              v130[2] = v170;
              sub_10057D6AC(v171, (uint64_t)v130+ ((*(unsigned __int8 *)(v223 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v223 + 80))+ *(void *)(v223 + 72) * v169, (uint64_t (*)(void))type metadata accessor for AnyListEntity);

              sub_10057C0B0(v172, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
              id v159 = v219;
              uint64_t v158 = v221;
            }
            v157 += v158;
            if (!--v156)
            {
              swift_bridgeObjectRelease();
              uint64_t v125 = v191;
              goto LABEL_90;
            }
            continue;
          }
        }
        uint64_t v148 = *(void ***)(v0 + 96);
        (*v207)(v148, *(void *)(v0 + 80));
        BOOL v139 = *v148;
        if (([v139 isPinned] & 1) == 0)
        {
          uint64_t v150 = *(void *)(v0 + 280);
          uint64_t v149 = *(void *)(v0 + 288);
          uint64_t v233 = type metadata accessor for REMSmartList_Codable();
          uint64_t v234 = &protocol witness table for REMSmartList;
          v232[0] = v139;
          id v142 = v139;
          sub_100431E64(v232, v149);
          sub_10057D644(v149, v150, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          uint64_t v130 = (void *)sub_10056F778(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          unint64_t v144 = v130[2];
          unint64_t v151 = v130[3];
          unint64_t v145 = v144 + 1;
          if (v144 >= v151 >> 1) {
            uint64_t v130 = (void *)sub_10056F778(v151 > 1, v144 + 1, 1, (unint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
          }
          uint64_t v146 = *(void *)(v0 + 280);
          uint64_t v147 = *(void *)(v0 + 288);
          goto LABEL_67;
        }
      }

      uint64_t v130 = _swiftEmptyArrayStorage;
LABEL_55:
      ++v126;
      uint64_t v131 = *(void *)(v0 + 104);
      uint64_t v132 = *(void *)(v0 + 80);
      sub_10056A484((uint64_t)v130, &qword_1007A7790, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
      (*v205)(v131, v132);
      if (v126 == v125)
      {
        swift_bridgeObjectRelease();
        v228 = v231;
        goto LABEL_97;
      }
    }
  }
  uint64_t v105 = *(void *)(v0 + 88);
  uint64_t v106 = *(void *)(type metadata accessor for REMAccountsListDataView.Model.Account() - 8);
  unint64_t v107 = v103 + ((*(unsigned __int8 *)(v106 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80));
  uint64_t v108 = *(void *)(v106 + 72);
  swift_bridgeObjectRetain();
  id v109 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v110 = REMAccountsListDataView.Model.Account.children.getter();
    uint64_t v111 = *(void *)(v110 + 16);
    int64_t v112 = v109[2];
    int64_t v113 = v112 + v111;
    if (__OFADD__(v112, v111)) {
      goto LABEL_102;
    }
    uint64_t v114 = v110;
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v113 <= v109[3] >> 1)
    {
      if (*(void *)(v114 + 16)) {
        goto LABEL_43;
      }
    }
    else
    {
      if (v112 <= v113) {
        int64_t v116 = v112 + v111;
      }
      else {
        int64_t v116 = v112;
      }
      id v109 = (void *)sub_10056F778(isUniquelyReferenced_nonNull_native, v116, 1, (unint64_t)v109, &qword_1007A7788, (uint64_t (*)(void))&type metadata accessor for REMAccountsListDataView.Model.AccountChild, (uint64_t (*)(void))&type metadata accessor for REMAccountsListDataView.Model.AccountChild);
      if (*(void *)(v114 + 16))
      {
LABEL_43:
        uint64_t v117 = v109[2];
        if ((v109[3] >> 1) - v117 < v111) {
          goto LABEL_103;
        }
        unint64_t v118 = (*(unsigned __int8 *)(v105 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v105 + 80);
        uint64_t v119 = *(void *)(v105 + 72);
        uint64_t v120 = (char *)v109 + v118 + v119 * v117;
        if (v114 + v118 < (unint64_t)&v120[v119 * v111] && (unint64_t)v120 < v114 + v118 + v119 * v111) {
          return _fatalErrorMessage(_:_:file:line:flags:)();
        }
        swift_arrayInitWithCopy();
        if (v111)
        {
          uint64_t v122 = v109[2];
          BOOL v123 = __OFADD__(v122, v111);
          uint64_t v124 = v122 + v111;
          if (v123) {
            goto LABEL_104;
          }
          v109[2] = v124;
        }
        goto LABEL_33;
      }
    }
    if (v111)
    {
      __break(1u);
LABEL_102:
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
      return _fatalErrorMessage(_:_:file:line:flags:)();
    }
LABEL_33:
    swift_bridgeObjectRelease();
    v107 += v108;
    --v104;
  }
  while (v104);
  swift_bridgeObjectRelease_n();
  uint64_t v125 = v109[2];
  if (v125) {
    goto LABEL_53;
  }
LABEL_92:
  swift_bridgeObjectRelease();
LABEL_97:
  uint64_t v178 = *(void *)(v0 + 472);
  uint64_t v179 = *(void *)(v0 + 480);
  uint64_t v180 = *(void *)(v0 + 464);
  (*(void (**)(void, void))(*(void *)(v0 + 416) + 8))(*(void *)(v0 + 424), *(void *)(v0 + 408));
  (*(void (**)(uint64_t, uint64_t))(v178 + 8))(v179, v180);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v181 = *(uint64_t (**)(void *))(v0 + 8);
  return v181(v228);
}

uint64_t sub_10056EE64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AppIntentsDependencyKey();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v10 - v7;
  sub_10003B754(&qword_1007857F0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v8, enum case for AppIntentsDependencyKey.remStore(_:), v2);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_10057C20C(&qword_1007857F8, (void (*)(uint64_t))&type metadata accessor for AppIntentsDependencyKey);
  AnyHashable.init<A>(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  type metadata accessor for AppDependencyManager();
  static AppDependencyManager.shared.getter();
  uint64_t result = AppDependency.__allocating_init(key:manager:)();
  *(unsigned char *)a1 = 0;
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10056F014(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 8);
  char v5 = *(unsigned char *)v1;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_100529B4C;
  return AnyListEntityQuery.entities(for:)(a1, v5, v4);
}

uint64_t sub_10056F0C0(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v3 = *(void *)(v1 + 8);
  char v4 = *(unsigned char *)v1;
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v5;
  *char v5 = v2;
  v5[1] = sub_10056F160;
  return AnyListEntityQuery.suggestedEntities()(v4, v3);
}

uint64_t sub_10056F160(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_10056F270(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100430534();
  *uint64_t v5 = v2;
  v5[1] = sub_10000C2D4;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_10056F324(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000C2D4;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

char *sub_10056F3E0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7548);
      uint64_t v10 = (char *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 3);
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 32]) {
          memmove(v12, a4 + 32, 3 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v12 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057B048(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10056F4F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, (uint64_t *)&unk_10078E960, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

char *sub_10056F528(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007874A8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      int64_t v12 = v11 - 32;
      if (v11 < 32) {
        int64_t v12 = v11 - 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 32]) {
          memmove(v13, a4 + 32, 2 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10057B228(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10056F634(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7550);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10057B134(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10056F744(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7558, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
}

uint64_t sub_10056F778(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10003B754(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size_0(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10057D4E8(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_10056F9F8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A13C0, &qword_1007A09D8);
}

uint64_t sub_10056FA0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_10078D1E8, type metadata accessor for TTRRemindersListTreeViewModel.Section, type metadata accessor for TTRRemindersListTreeViewModel.Section);
}

uint64_t sub_10056FA40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7590, &qword_100787558);
}

uint64_t sub_10056FA54(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_10003B754(a5);
  uint64_t v13 = *(void *)(sub_10003B754(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size_0(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  long long v16[2] = v11;
  uint64_t v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_10003B754(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10057D190(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

char *sub_10056FCC0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7598);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10057B40C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10056FDD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A75A0, qword_10078A138);
}

char *sub_10056FDE4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A75A8);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10057B40C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10056FEF4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A75F0, &qword_1007A59C0);
}

char *sub_10056FF08(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7588, &qword_1007A7510);
}

uint64_t sub_10056FF1C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, (uint64_t *)&unk_100798530, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

char *sub_10056FF50(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A75E8, &qword_1007A7510);
}

char *sub_10056FF64(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10003B754(a5);
      uint64_t v13 = (char *)swift_allocObject();
      int64_t v14 = j__malloc_size_0(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 32;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v16 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[16 * v11 + 32]) {
          memmove(v16, a4 + 32, 16 * v11);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_10057BA10(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_100570080(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A75E0, &qword_1007A7510);
}

uint64_t sub_100570094(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7620, &qword_10078F640);
}

uint64_t sub_1005700A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7770, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
}

void *sub_1005700DC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A2488);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057B4F8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100570204(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A1510, type metadata accessor for TTRRemindersListUncommittedReminder, type metadata accessor for TTRRemindersListUncommittedReminder);
}

uint64_t sub_100570238(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7768, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
}

uint64_t sub_10057026C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7760, &qword_10079C900);
}

uint64_t sub_100570280(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A13B8, &qword_1007A09C0);
}

uint64_t sub_100570294(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7640, type metadata accessor for TTRIRemindersBoardDragItemInfo, type metadata accessor for TTRIRemindersBoardDragItemInfo);
}

uint64_t sub_1005702C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7698, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
}

void *sub_1005702FC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100570338(a1, a2, a3, a4, &qword_1007A1438, &qword_10078FAD8);
}

char *sub_100570310(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_10078FAA8, &qword_1007A7510);
}

void *sub_100570324(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100570338(a1, a2, a3, a4, &qword_1007A7518, &qword_10078C4E8);
}

void *sub_100570338(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_10003B754(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size_0(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057B608(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_100570468(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7508, &qword_1007A7510);
}

char *sub_10057047C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7748, &qword_1007A7750);
}

uint64_t sub_100570490(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7690, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
}

void *sub_1005704C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100570638(a1, a2, a3, a4, &qword_1007A76B8);
}

char *sub_1005704D8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A74F8, &qword_1007A7500);
}

uint64_t sub_1005704EC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7618, (uint64_t *)&unk_10079C9D0);
}

void *sub_100570500(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007907A0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057C9D4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100570624(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100570638(a1, a2, a3, a4, &qword_1007A13E0);
}

void *sub_100570638(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10003B754(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size_0(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10057D3F8(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_100570754(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A1488);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057C5F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100570874(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A7758, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ImageAttachment);
}

void *sub_1005708A8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7740);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10057B714(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005709B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7658, &qword_10079C910);
}

uint64_t sub_1005709CC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7660, &qword_100792830);
}

uint64_t sub_1005709E0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A13C8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
}

uint64_t sub_100570A14(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_10078ADC0, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

uint64_t sub_100570A48(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7650, &qword_100792820);
}

uint64_t sub_100570A5C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7648, &qword_1007A0A40);
}

char *sub_100570A70(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7570, &qword_1007A59B8);
}

uint64_t sub_100570A84(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_10078EA10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
}

void *sub_100570AB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_10079B2A0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057C6EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100570BDC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A75B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057B808(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100570D08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A14E8, &qword_100788F18);
}

void *sub_100570D1C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A1468);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4]) {
          memmove(v12, a4 + 4, 112 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057C7E4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100570E44(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A76D8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057C8DC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100570F6C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A76D0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4]) {
          memmove(v12, a4 + 4, 112 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057B918(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100571098(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A1548);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10057CACC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1005711A8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100571700(a1, a2, a3, a4, &qword_1007A76B0);
}

void *sub_1005711B4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100571AB4(a1, a2, a3, a4, &qword_1007A7688, (void (*)(void, int64_t, void *, void *))sub_10057CBC0);
}

char *sub_1005711D4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7668, &qword_1007A7670);
}

void *sub_1005711E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_100795D00);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057B314(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10057130C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7520, &qword_1007A7528);
}

void *sub_100571320(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7728);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 112);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[14 * v8 + 4]) {
          memmove(v12, a4 + 4, 112 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057CCB8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_10057144C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7730, &qword_1007A7738);
}

uint64_t sub_100571460(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A7530, &qword_100792038);
}

char *sub_100571474(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_10056FF64(a1, a2, a3, a4, &qword_1007A7538, &qword_1007A7540);
}

uint64_t sub_100571488(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_1007A76F8, (uint64_t (*)(void))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment, (uint64_t (*)(void))&type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment);
}

void *sub_1005714BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754((uint64_t *)&unk_1007938C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10057CDB0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1005715CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A75C0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057CEA8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1005716F4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100571700(a1, a2, a3, a4, &qword_1007A76E0);
}

void *sub_100571700(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_10003B754(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size_0(v11);
      v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057CFB8(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_1005717F8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_10057180C(a1, a2, a3, a4, &qword_1007A76C0);
}

void *sub_10057180C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_10003B754(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size_0(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 1;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 5);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[4 * v9 + 4]) {
          memmove(v14, a4 + 4, 32 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10057D0A0(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_100571928(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056F778(a1, a2, a3, a4, &qword_10079EB60, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

void *sub_10057195C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7608);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size_0(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_10057BB18(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100571A6C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_1007A14A0, (uint64_t *)&unk_10079C9C0);
}

uint64_t sub_100571A80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_10056FA54(a1, a2, a3, a4, &qword_10079C3E0, &qword_10079C1E8);
}

void *sub_100571A94(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100571AB4(a1, a2, a3, a4, &qword_1007A7610, (void (*)(void, int64_t, void *, void *))sub_10057D2E8);
}

void *sub_100571AB4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      sub_10003B754(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = j__malloc_size_0(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4]) {
          memmove(v15, a4 + 4, 24 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v15 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    a6(0, v11, v15, a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_100571BE4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_100570638(a1, a2, a3, a4, &qword_10079E310);
}

void *sub_100571BF8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_10003B754(&qword_1007A7630);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size_0(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10057BC04(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

Swift::Int sub_100571D20(uint64_t a1, uint64_t a2)
{
  return sub_100571D3C(a1, a2, &qword_10079C3C0, (unint64_t *)&unk_1007A1A90);
}

Swift::Int sub_100571D3C(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_10003B754(a3);
    uint64_t v6 = static _DictionaryStorage.convert(_:capacity:)();
    uint64_t v22 = v6;
    __CocoaDictionary.makeIterator()();
    uint64_t v7 = __CocoaDictionary.Iterator.next()();
    if (v7)
    {
      uint64_t v8 = v7;
      sub_1000368FC(0, qword_10078E3D0);
      do
      {
        swift_dynamicCast();
        sub_1000368FC(0, a4);
        swift_dynamicCast();
        uint64_t v6 = v22;
        unint64_t v16 = *(void *)(v22 + 16);
        if (*(void *)(v22 + 24) <= v16)
        {
          sub_1005786B0(v16 + 1, 1, a3);
          uint64_t v6 = v22;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
        uint64_t v10 = v6 + 64;
        uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*(void *)(v6 + 64 + 8 * (v12 >> 6))) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*(void *)(v6 + 64 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v17 = 0;
          unint64_t v18 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v18 && (v17 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v19 = v13 == v18;
            if (v13 == v18) {
              unint64_t v13 = 0;
            }
            v17 |= v19;
            uint64_t v20 = *(void *)(v10 + 8 * v13);
          }
          while (v20 == -1);
          unint64_t v14 = __clz(__rbit64(~v20)) + (v13 << 6);
        }
        *(void *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        uint64_t v15 = 8 * v14;
        *(void *)(*(void *)(v6 + 48) + v15) = v21;
        *(void *)(*(void *)(v6 + 56) + v15) = v8;
        ++*(void *)(v6 + 16);
        uint64_t v8 = __CocoaDictionary.Iterator.next()();
      }
      while (v8);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v6;
}

uint64_t sub_100571F90(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C348);
  char v33 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v20 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v21 = v20 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1)) {
          goto LABEL_40;
        }
        if (v8 >= v13)
        {
LABEL_31:
          if ((v33 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v3 = v2;
            goto LABEL_38;
          }
          uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
          if (v32 >= 64) {
            bzero((void *)(v5 + 64), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *uint64_t v9 = -1 << v32;
          }
          uint64_t v3 = v2;
          *(void *)(v5 + 16) = 0;
          break;
        }
        unint64_t v23 = v9[v8];
        if (!v23)
        {
          int64_t v24 = v8 + 1;
          if (v8 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v23 = v9[v24];
          if (!v23)
          {
            while (1)
            {
              int64_t v8 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                break;
              }
              if (v8 >= v13) {
                goto LABEL_31;
              }
              unint64_t v23 = v9[v8];
              ++v24;
              if (v23) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_20:
        unint64_t v12 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v8 << 6);
      }
      uint64_t v25 = 8 * v21;
      uint64_t v26 = *(void *)(*(void *)(v5 + 48) + v25);
      uint64_t v27 = *(void *)(*(void *)(v5 + 56) + v25);
      if ((v33 & 1) == 0) {
        swift_retain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v26 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v17 == v29;
          if (v17 == v29) {
            unint64_t v17 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v17);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v26;
      *(void *)(*(void *)(v7 + 56) + v19) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10057225C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10003B754(&qword_10079C350);
  int v40 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v37 = v2;
    uint64_t v38 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v16 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        if (__OFADD__(v18++, 1)) {
          goto LABEL_39;
        }
        if (v18 >= v15)
        {
LABEL_32:
          swift_release();
          uint64_t v3 = v37;
          if (v40)
          {
            uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
            if (v35 >= 64) {
              bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *uint64_t v38 = -1 << v35;
            }
            *(void *)(v8 + 16) = 0;
          }
          break;
        }
        unint64_t v23 = v38[v18];
        if (!v23)
        {
          int64_t v24 = v18 + 1;
          if (v18 + 1 >= v15) {
            goto LABEL_32;
          }
          unint64_t v23 = v38[v24];
          if (!v23)
          {
            while (1)
            {
              int64_t v18 = v24 + 1;
              if (__OFADD__(v24, 1)) {
                break;
              }
              if (v18 >= v15) {
                goto LABEL_32;
              }
              unint64_t v23 = v38[v18];
              ++v24;
              if (v23) {
                goto LABEL_19;
              }
            }
LABEL_38:
            __break(1u);
LABEL_39:
            __break(1u);
            return result;
          }
          ++v18;
        }
LABEL_19:
        unint64_t v14 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void *)(v8 + 48) + v25 * v21;
      if (v40)
      {
        sub_10057D6AC(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v21);
      }
      else
      {
        sub_10057D644(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v21);
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      TTRRemindersListViewModel.ItemID.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v16 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_10057D6AC((uint64_t)v7, *(void *)(v10 + 48) + v25 * v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      *(void *)(*(void *)(v10 + 56) + 8 * v19) = v27;
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_100572604(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C358);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v19 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1)) {
          goto LABEL_40;
        }
        uint64_t result = v5 + 64;
        if (v8 >= v12)
        {
LABEL_31:
          if ((v34 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v3 = v2;
            goto LABEL_38;
          }
          uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
          if (v32 >= 64) {
            bzero(v33, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *BOOL v33 = -1 << v32;
          }
          uint64_t v3 = v2;
          *(void *)(v5 + 16) = 0;
          break;
        }
        unint64_t v22 = v33[v8];
        if (!v22)
        {
          int64_t v23 = v8 + 1;
          if (v8 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v22 = v33[v23];
          if (!v22)
          {
            while (1)
            {
              int64_t v8 = v23 + 1;
              if (__OFADD__(v23, 1)) {
                break;
              }
              if (v8 >= v12) {
                goto LABEL_31;
              }
              unint64_t v22 = v33[v8];
              ++v23;
              if (v22) {
                goto LABEL_20;
              }
            }
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_20:
        unint64_t v11 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
      uint64_t v25 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v20);
      uint64_t v27 = *v25;
      uint64_t v26 = v25[1];
      if ((v34 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v24 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v16 == v29;
          if (v16 == v29) {
            unint64_t v16 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v13 + 8 * v16);
        }
        while (v31 == -1);
        unint64_t v17 = __clz(__rbit64(~v31)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v7 + 48) + 8 * v17) = v24;
      int64_t v18 = (void *)(*(void *)(v7 + 56) + 16 * v17);
      *int64_t v18 = v27;
      v18[1] = v26;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005728DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_100788DD0);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        if (__OFADD__(v8++, 1)) {
          goto LABEL_38;
        }
        if (v8 >= v13)
        {
LABEL_29:
          if ((v31 & 1) == 0)
          {
            uint64_t result = swift_release();
            uint64_t v3 = v2;
            goto LABEL_36;
          }
          uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
          if (v30 >= 64) {
            bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
          }
          else {
            *uint64_t v9 = -1 << v30;
          }
          uint64_t v3 = v2;
          *(void *)(v5 + 16) = 0;
          break;
        }
        unint64_t v19 = v9[v8];
        if (!v19)
        {
          int64_t v20 = v8 + 1;
          if (v8 + 1 >= v13) {
            goto LABEL_29;
          }
          unint64_t v19 = v9[v20];
          if (!v19)
          {
            while (1)
            {
              int64_t v8 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                break;
              }
              if (v8 >= v13) {
                goto LABEL_29;
              }
              unint64_t v19 = v9[v8];
              ++v20;
              if (v19) {
                goto LABEL_19;
              }
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v8;
        }
LABEL_19:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      Swift::UInt v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v17);
      uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v21);
      uint64_t result = Hasher._finalize()();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(unsigned char *)(*(void *)(v7 + 48) + v15) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_36:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100572B8C(uint64_t a1, char a2)
{
  return sub_1005786B0(a1, a2, &qword_10079C3C0);
}

uint64_t sub_100572B98(uint64_t a1, char a2)
{
  return sub_100575884(a1, a2, &qword_10078E380);
}

uint64_t sub_100572BA4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_10003B754(&qword_10079C2F8);
  int v45 = a2;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int v40 = v2;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v44 + 72);
    uint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v45)
    {
      sub_10057D6AC(v29, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_10057D6AC(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
    }
    else
    {
      sub_10057D644(v29, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_10057D644(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
    }
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ItemID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_10057D6AC((uint64_t)v10, *(void *)(v13 + 48) + v28 * v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t result = sub_10057D6AC((uint64_t)v7, *(void *)(v13 + 56) + v30 * v21, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_100573050(uint64_t a1, char a2)
{
  return sub_100577C0C(a1, a2, &qword_10079C3B8);
}

uint64_t sub_10057305C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_100792538);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  BOOL v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    if ((v38 & 1) == 0)
    {
      id v34 = v30;
      swift_bridgeObjectRetain();
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    unint64_t v19 = (void *)(*(void *)(v7 + 56) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100573344(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C3A0);
  char v36 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10057365C(uint64_t a1, char a2)
{
  uint64_t v4 = *v2;
  sub_10003B754(&qword_10079C378);
  char v46 = a2;
  uint64_t v5 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v47 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
    uint64_t v39 = v47;
    int v40 = v42;
LABEL_42:
    *int v40 = v39;
    return result;
  }
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v44 = (void *)(v4 + 64);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v43 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = v5 + 64;
  uint64_t result = swift_retain();
  uint64_t v11 = v47;
  int64_t v12 = 0;
  uint64_t v45 = v4;
  while (1)
  {
    if (v8)
    {
      unint64_t v18 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v48 = v12;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    if (v20 >= v43)
    {
      swift_release();
      int v40 = v42;
      int64_t v21 = v44;
      if (v46)
      {
LABEL_37:
        uint64_t v41 = 1 << *(unsigned char *)(v4 + 32);
        if (v41 >= 64) {
          bzero(v21, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
        }
        else {
          void *v21 = -1 << v41;
        }
        *(void *)(v4 + 16) = 0;
      }
LABEL_41:
      uint64_t result = swift_release();
      uint64_t v39 = v47;
      goto LABEL_42;
    }
    int64_t v21 = v44;
    unint64_t v22 = v44[v20];
    int64_t v23 = v12 + 1;
    if (!v22)
    {
      int64_t v23 = v12 + 2;
      if (v12 + 2 >= v43) {
        goto LABEL_34;
      }
      unint64_t v22 = v44[v23];
      if (!v22) {
        break;
      }
    }
LABEL_30:
    unint64_t v8 = (v22 - 1) & v22;
    int64_t v48 = v23;
    unint64_t v19 = __clz(__rbit64(v22)) + (v23 << 6);
LABEL_31:
    uint64_t v29 = *(void **)(*(void *)(v4 + 48) + 8 * v19);
    uint64_t v30 = *(void *)(v4 + 56) + 112 * v19;
    uint64_t v31 = *(void *)v30;
    unint64_t v32 = *(void *)(v30 + 8);
    uint64_t v33 = *(void *)(v30 + 16);
    int64_t v34 = *(void **)(v30 + 24);
    char v55 = *(unsigned char *)(v30 + 32);
    uint64_t v36 = *(void *)(v30 + 40);
    unint64_t v35 = *(void *)(v30 + 48);
    uint64_t v37 = *(void **)(v30 + 64);
    uint64_t v54 = *(void *)(v30 + 56);
    char v53 = *(unsigned char *)(v30 + 72);
    uint64_t v52 = *(void *)(v30 + 80);
    char v51 = *(unsigned char *)(v30 + 88);
    uint64_t v50 = *(void *)(v30 + 96);
    char v49 = *(unsigned char *)(v30 + 104);
    if ((v46 & 1) == 0)
    {
      id v38 = v29;
      sub_10026D4C8(v31, v32, v33, v34);
      sub_10026D4C8(v36, v35, v54, v37);
      uint64_t v11 = v47;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v11 + 40));
    uint64_t v11 = v47;
    uint64_t v13 = -1 << *(unsigned char *)(v47 + 32);
    unint64_t v14 = result & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v9 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v9 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v13) >> 6;
      do
      {
        if (++v15 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_43;
        }
        BOOL v27 = v15 == v26;
        if (v15 == v26) {
          unint64_t v15 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v15);
      }
      while (v28 == -1);
      unint64_t v16 = __clz(__rbit64(~v28)) + (v15 << 6);
    }
    *(void *)(v9 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(void *)(*(void *)(v47 + 48) + 8 * v16) = v29;
    uint64_t v17 = *(void *)(v47 + 56) + 112 * v16;
    *(void *)uint64_t v17 = v31;
    *(void *)(v17 + 8) = v32;
    *(void *)(v17 + 16) = v33;
    *(void *)(v17 + 24) = v34;
    *(unsigned char *)(v17 + 32) = v55;
    *(void *)(v17 + 40) = v36;
    *(void *)(v17 + 48) = v35;
    *(void *)(v17 + 56) = v54;
    *(void *)(v17 + 64) = v37;
    *(unsigned char *)(v17 + 72) = v53;
    *(void *)(v17 + 80) = v52;
    *(unsigned char *)(v17 + 88) = v51;
    *(void *)(v17 + 96) = v50;
    *(unsigned char *)(v17 + 104) = v49;
    ++*(void *)(v47 + 16);
    uint64_t v4 = v45;
    int64_t v12 = v48;
  }
  uint64_t v24 = v12 + 3;
  if (v12 + 3 >= v43)
  {
LABEL_34:
    swift_release();
    int v40 = v42;
    if (v46) {
      goto LABEL_37;
    }
    goto LABEL_41;
  }
  unint64_t v22 = v44[v24];
  if (v22)
  {
    int64_t v23 = v12 + 3;
    goto LABEL_30;
  }
  while (1)
  {
    int64_t v23 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v23 >= v43) {
      goto LABEL_34;
    }
    unint64_t v22 = v44[v23];
    ++v24;
    if (v22) {
      goto LABEL_30;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_100573A38(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = type metadata accessor for REMRemindersListDataView.SectionLite();
  uint64_t v5 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  int64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_10003B754(&qword_10079C300);
  int v47 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v45 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v46 = v5;
  unint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v20 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v43) {
      break;
    }
    int64_t v23 = v44;
    unint64_t v24 = v44[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v24 = v44[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v47 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v44[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v43) {
              goto LABEL_34;
            }
            unint64_t v24 = v44[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    uint64_t v26 = *(void *)(v7 + 56);
    uint64_t v27 = v7;
    uint64_t v28 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v21);
    uint64_t v29 = *v28;
    uint64_t v30 = v28[1];
    uint64_t v31 = *(void *)(v46 + 72);
    uint64_t v32 = v26 + v31 * v21;
    if (v47)
    {
      (*v14)(v48, v32, v49);
    }
    else
    {
      (*v45)(v48, v32, v49);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v34) & ~*(void *)(v15 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v15 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v18 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v9 + 48) + 16 * v18);
    *unint64_t v19 = v29;
    v19[1] = v30;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v31 * v18, v48, v49);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v27;
  }
  swift_release();
  uint64_t v3 = v42;
  int64_t v23 = v44;
  if ((v47 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v23, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_100573E20(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v46 = type metadata accessor for REMRemindersListDataView.SectionLite();
  uint64_t v5 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v45 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  sub_10003B754(&qword_10079C2F0);
  int v44 = a2;
  uint64_t v8 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v42 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  uint64_t v40 = v2;
  int64_t v41 = (unint64_t)(v10 + 63) >> 6;
  int64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  unint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v15 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v41) {
      break;
    }
    int64_t v22 = v42;
    unint64_t v23 = v42[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v23 = v42[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v44 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v42[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v41) {
              goto LABEL_34;
            }
            unint64_t v23 = v42[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v7 + 56);
    uint64_t v26 = v7;
    uint64_t v27 = *(void **)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t v28 = v5;
    uint64_t v29 = *(void *)(v5 + 72);
    uint64_t v30 = v25 + v29 * v20;
    if (v44)
    {
      (*v14)(v45, v30, v46);
    }
    else
    {
      (*v43)(v45, v30, v46);
      id v31 = v27;
    }
    Hasher.init(_seed:)();
    TTRSectionID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v32 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v33 = result & ~v32;
    unint64_t v34 = v33 >> 6;
    if (((-1 << v33) & ~*(void *)(v15 + 8 * (v33 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v33) & ~*(void *)(v15 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v35 = 0;
      unint64_t v36 = (unint64_t)(63 - v32) >> 6;
      do
      {
        if (++v34 == v36 && (v35 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v37 = v34 == v36;
        if (v34 == v36) {
          unint64_t v34 = 0;
        }
        v35 |= v37;
        uint64_t v38 = *(void *)(v15 + 8 * v34);
      }
      while (v38 == -1);
      unint64_t v18 = __clz(__rbit64(~v38)) + (v34 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v27;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v14)(*(void *)(v9 + 56) + v29 * v18, v45, v46);
    ++*(void *)(v9 + 16);
    uint64_t v5 = v28;
    uint64_t v7 = v26;
  }
  swift_release();
  uint64_t v3 = v40;
  int64_t v22 = v42;
  if ((v44 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v39 = 1 << *(unsigned char *)(v7 + 32);
  if (v39 >= 64) {
    bzero(v22, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v39;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

uint64_t sub_100574200(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C320);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v32 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v31 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v31) {
          goto LABEL_33;
        }
        unint64_t v21 = v32[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v21 = v32[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v31)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v32 = -1 << v30;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v32[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v31) {
                  goto LABEL_33;
                }
                unint64_t v21 = v32[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = 8 * v19;
      uint64_t v28 = *(void *)(*(void *)(v5 + 48) + v27);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + v27);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v28 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v7 + 48) + v17) = v28;
      *(void *)(*(void *)(v7 + 56) + v17) = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005744D8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v39 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10003B754(&qword_10079C328);
  int v40 = a2;
  uint64_t v9 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  unint64_t v36 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    int64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v39 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v40)
    {
      sub_10057D6AC(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_10057D644(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_10057D6AC((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1005748B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C330);
  char v34 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v33 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v32) {
          goto LABEL_33;
        }
        unint64_t v21 = v33[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v21 = v33[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v32)
            {
LABEL_33:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v33 = -1 << v31;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v33[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v21 = v33[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      if ((v34 & 1) == 0)
      {
        swift_retain();
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v27 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      int64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *int64_t v17 = v30;
      v17[1] = v29;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100574BA8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v5 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v44 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10003B754(&qword_10079C318);
  int v45 = a2;
  uint64_t v11 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  int64_t v41 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v42 = v5 + 16;
  uint64_t v43 = v5;
  int64_t v17 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v40) {
      break;
    }
    BOOL v25 = v41;
    unint64_t v26 = v41[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v26 = v41[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v41[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v40) {
              goto LABEL_34;
            }
            unint64_t v26 = v41[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v44 + 72);
    uint64_t v29 = *(void *)(v10 + 48) + v28 * v23;
    if (v45)
    {
      sub_10057D6AC(v29, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v30 = *(void *)(v43 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 32))(v46, *(void *)(v10 + 56) + v30 * v23, v47);
    }
    else
    {
      sub_10057D644(v29, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v30 = *(void *)(v43 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v46, *(void *)(v10 + 56) + v30 * v23, v47);
    }
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_10057D6AC((uint64_t)v9, *(void *)(v12 + 48) + v28 * v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t result = (*v17)(*(void *)(v12 + 56) + v30 * v21, v46, v47);
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  BOOL v25 = v41;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v10 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v38;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_100575058(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v43 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_10003B754(&qword_10079C310);
  int v45 = a2;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int64_t v40 = v2;
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v22 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    BOOL v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v45 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v44 + 72);
    uint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v45)
    {
      sub_10057D6AC(v29, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_10057D6AC(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    }
    else
    {
      sub_10057D644(v29, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      uint64_t v30 = *(void *)(v43 + 72);
      sub_10057D644(*(void *)(v11 + 56) + v30 * v23, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    }
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v31 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    sub_10057D6AC((uint64_t)v10, *(void *)(v13 + 48) + v28 * v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t result = sub_10057D6AC((uint64_t)v7, *(void *)(v13 + 56) + v30 * v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  BOOL v25 = v42;
  if ((v45 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_100575504(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C338);
  char v43 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v41 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    unint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v24 = v41[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v24 = v41[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(v5 + 56) + 56 * v21;
    uint64_t v35 = *(void *)(v33 + 16);
    uint64_t v34 = *(void *)(v33 + 24);
    long long v44 = *(_OWORD *)v33;
    long long v45 = *(_OWORD *)(v33 + 32);
    uint64_t v36 = *(void *)(v33 + 48);
    if ((v43 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v37 = *((id *)&v45 + 1);
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v32;
    v18[1] = v31;
    uint64_t v19 = *(void *)(v7 + 56) + 56 * v17;
    *(_OWORD *)uint64_t v19 = v44;
    *(void *)(v19 + 16) = v35;
    *(void *)(v19 + 24) = v34;
    *(_OWORD *)(v19 + 32) = v45;
    *(void *)(v19 + 48) = v36;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100575878(uint64_t a1, char a2)
{
  return sub_100575884(a1, a2, &qword_10078E2D0);
}

uint64_t sub_100575884(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10003B754(a3);
  char v35 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v34 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v34[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v34[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v34 = -1 << v32;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v22 = v34[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v34[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v6 + 48) + 8 * v20);
      uint64_t v29 = *(void *)(v6 + 56) + 16 * v20;
      uint64_t v30 = *(void *)v29;
      char v31 = *(unsigned char *)(v29 + 8);
      if ((v35 & 1) == 0) {
        swift_retain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v28 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v8 + 48) + 8 * v17) = v28;
      uint64_t v18 = *(void *)(v8 + 56) + 16 * v17;
      *(void *)uint64_t v18 = v30;
      *(unsigned char *)(v18 + 8) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100575B6C(uint64_t a1, char a2)
{
  return sub_1005763AC(a1, a2, &qword_10079C398);
}

uint64_t sub_100575B78(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
  uint64_t v49 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_10003B754(&qword_10079C3D8);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  uint64_t v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  long long v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    BOOL v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10057D6AC(v32 + v33 * v24, v54, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_10057D644(v34 + v33 * v24, v54, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    }
    sub_10057C20C(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_10057D6AC(v54, *(void *)(v13 + 56) + v33 * v22, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  BOOL v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_100576090(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C3E8);
  char v38 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005763A0(uint64_t a1, char a2)
{
  return sub_1005763AC(a1, a2, &qword_10079AB70);
}

uint64_t sub_1005763AC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10003B754(a3);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v34 = v3;
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v12) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v35 + 8 * v22);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v15);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v34;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v15 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v15);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v6 + 48) + 8 * v21);
    char v31 = *(unsigned char *)(*(void *)(v6 + 56) + v21);
    if ((a2 & 1) == 0) {
      id v32 = v30;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v18 == v27;
        if (v18 == v27) {
          unint64_t v18 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v18);
      }
      while (v29 == -1);
      unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(void *)(*(void *)(v8 + 48) + 8 * v19) = v30;
    *(unsigned char *)(*(void *)(v8 + 56) + v19) = v31;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v34;
  unint64_t v23 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100576670(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v40 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10003B754(&qword_10079C380);
  char v9 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v8 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 64);
    unint64_t v39 = (void *)(v8 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v9)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v39, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v39 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v40 + 72);
      uint64_t v26 = *(void *)(v8 + 48) + v25 * v21;
      uint64_t v27 = 32 * v21;
      if (v9)
      {
        sub_10057D6AC(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_1000960E8(*(void *)(v8 + 56) + v27, (uint64_t)v41);
      }
      else
      {
        sub_10057D644(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_1000FF6B4(*(void *)(v8 + 56) + v27, (uint64_t)v41);
      }
      Hasher.init(_seed:)();
      TTRRemindersListViewModel.ItemID.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v28 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v29) & ~*(void *)(v16 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v16 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v19 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      sub_10057D6AC((uint64_t)v7, *(void *)(v11 + 48) + v25 * v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t result = sub_1000960E8((uint64_t)v41, *(void *)(v11 + 56) + 32 * v19);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_100576A44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_10003B754(&qword_10079C388);
  char v9 = a2;
  uint64_t v10 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v11 = v10;
  if (*(void *)(v8 + 16))
  {
    uint64_t v35 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v13 = *(void *)(v8 + 64);
    uint64_t v37 = (void *)(v8 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v36 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_34;
        }
        unint64_t v23 = v37[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v23 = v37[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v35;
              if (v9)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v37 = -1 << v34;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v23 = v37[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 48) + v25 * v21;
      if (v9)
      {
        sub_10057D6AC(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        long long v39 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v21);
      }
      else
      {
        sub_10057D644(v26, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        long long v39 = *(_OWORD *)(*(void *)(v8 + 56) + 16 * v21);
        swift_unknownObjectRetain();
      }
      Hasher.init(_seed:)();
      TTRRemindersListViewModel.ItemID.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v16 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v28) & ~*(void *)(v16 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v16 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v19 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = sub_10057D6AC((uint64_t)v7, *(void *)(v11 + 48) + v25 * v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      *(_OWORD *)(*(void *)(v11 + 56) + 16 * v19) = v39;
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

unint64_t sub_100576E10(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C3B0);
  uint64_t v6 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_20;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v19 = 1 << *(unsigned char *)(v5 + 32);
                if (v19 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v19;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_19:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      unint64_t result = sub_100579188(*(unsigned char *)(*(void *)(v5 + 48) + v15), *(void *)(*(void *)(v5 + 56) + 8 * v15), v6);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_100576FD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C3A8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_43;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
      return result;
    }
    if (v18 >= v36) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v37 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v36) {
        goto LABEL_36;
      }
      unint64_t v20 = *(void *)(v37 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v36)
        {
LABEL_36:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_43;
          }
          goto LABEL_39;
        }
        unint64_t v20 = *(void *)(v37 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_45;
            }
            if (v13 >= v36) {
              goto LABEL_36;
            }
            unint64_t v20 = *(void *)(v37 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    uint64_t v22 = 8 * v17;
    unint64_t v23 = *(void **)(*(void *)(v5 + 48) + v22);
    uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
    if ((a2 & 1) == 0) {
      id v25 = v23;
    }
    Hasher.init(_seed:)();
    if (v23)
    {
      Hasher._combine(_:)(1u);
      id v26 = v23;
      NSObject.hash(into:)();
    }
    else
    {
      Hasher._combine(_:)(0);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_44;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v14 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(*(void *)(v7 + 48) + v15) = v23;
    *(void *)(*(void *)(v7 + 56) + v15) = v24;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_39:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v19, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_43:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005772E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C2E8);
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    BOOL v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v32;
      id v34 = v31;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005775BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C308);
  char v42 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    unint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    BOOL v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    Hasher.init(_seed:)();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    uint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *uint64_t v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  unint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1005778E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C340);
  char v37 = a2;
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v36 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v35) {
          goto LABEL_39;
        }
        unint64_t v18 = v36[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v35) {
            goto LABEL_39;
          }
          unint64_t v18 = v36[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v35)
            {
LABEL_39:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_46;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
              if (v34 >= 64) {
                bzero(v36, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v36 = -1 << v34;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              goto LABEL_45;
            }
            unint64_t v18 = v36[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_48;
                }
                if (v8 >= v35) {
                  goto LABEL_39;
                }
                unint64_t v18 = v36[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      Swift::UInt v21 = *(void *)v20;
      int v22 = *(unsigned __int8 *)(v20 + 8);
      int64_t v23 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
      if ((v37 & 1) == 0) {
        id v24 = v23;
      }
      Hasher.init(_seed:)();
      if (!v22) {
        break;
      }
      if (v22 == 1)
      {
        Swift::UInt v25 = 4;
LABEL_28:
        Hasher._combine(_:)(v25);
        Swift::UInt v26 = v21;
        goto LABEL_30;
      }
      Swift::UInt v26 = qword_10067D420[v21];
LABEL_30:
      Hasher._combine(_:)(v26);
      uint64_t result = Hasher._finalize()();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v12 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v21;
      *(unsigned char *)(v14 + 8) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
    Swift::UInt v25 = 2;
    goto LABEL_28;
  }
LABEL_45:
  uint64_t result = swift_release();
LABEL_46:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_100577C00(uint64_t a1, char a2)
{
  return sub_100577C0C(a1, a2, &qword_10079C2E0);
}

uint64_t sub_100577C0C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10003B754(a3);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v36 = v3;
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    id v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    BOOL v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      swift_bridgeObjectRetain();
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  id v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100577EE0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v64 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  NSString v63 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for SmartListType();
  uint64_t v7 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v57 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AnyListEntity();
  uint64_t v67 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for AnyListEntityID();
  uint64_t v68 = *(void *)(v12 - 8);
  uint64_t v69 = v12;
  __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v54 - v15;
  uint64_t v17 = *v2;
  sub_10003B754(&qword_10079C3C8);
  int v70 = a2;
  uint64_t v18 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v19 = v18;
  if (!*(void *)(v17 + 16)) {
    goto LABEL_47;
  }
  uint64_t v54 = v2;
  uint64_t v20 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v21 = *(void *)(v17 + 64);
  uint64_t v60 = (void *)(v17 + 64);
  if (v20 < 64) {
    uint64_t v22 = ~(-1 << v20);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v21;
  int64_t v59 = (unint64_t)(v20 + 63) >> 6;
  id v61 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v62 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  unint64_t v56 = (void (**)(char *, uint64_t, uint64_t))(v7 + 32);
  char v55 = (void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v24 = v18 + 64;
  uint64_t result = swift_retain();
  int64_t v26 = 0;
  uint64_t v65 = v11;
  while (1)
  {
    if (v23)
    {
      unint64_t v28 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v29 = v28 | (v26 << 6);
      goto LABEL_22;
    }
    int64_t v30 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v30 >= v59) {
      break;
    }
    uint64_t v31 = v60;
    unint64_t v32 = v60[v30];
    ++v26;
    if (!v32)
    {
      int64_t v26 = v30 + 1;
      if (v30 + 1 >= v59) {
        goto LABEL_40;
      }
      unint64_t v32 = v60[v26];
      if (!v32)
      {
        int64_t v33 = v30 + 2;
        if (v33 >= v59)
        {
LABEL_40:
          swift_release();
          uint64_t v3 = v54;
          if ((v70 & 1) == 0) {
            goto LABEL_47;
          }
          goto LABEL_43;
        }
        unint64_t v32 = v60[v33];
        if (!v32)
        {
          while (1)
          {
            int64_t v26 = v33 + 1;
            if (__OFADD__(v33, 1)) {
              goto LABEL_49;
            }
            if (v26 >= v59) {
              goto LABEL_40;
            }
            unint64_t v32 = v60[v26];
            ++v33;
            if (v32) {
              goto LABEL_21;
            }
          }
        }
        int64_t v26 = v33;
      }
    }
LABEL_21:
    unint64_t v23 = (v32 - 1) & v32;
    unint64_t v29 = __clz(__rbit64(v32)) + (v26 << 6);
LABEL_22:
    uint64_t v34 = *(void *)(v68 + 72);
    uint64_t v35 = *(void *)(v17 + 48) + v34 * v29;
    int64_t v71 = v26;
    if (v70)
    {
      sub_10057D6AC(v35, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      uint64_t v36 = *(void *)(v67 + 72);
      sub_10057D6AC(*(void *)(v17 + 56) + v36 * v29, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    }
    else
    {
      sub_10057D644(v35, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      uint64_t v36 = *(void *)(v67 + 72);
      sub_10057D644(*(void *)(v17 + 56) + v36 * v29, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    }
    uint64_t v37 = (uint64_t)v66;
    Hasher.init(_seed:)();
    uint64_t v38 = (uint64_t)v16;
    sub_10057D644((uint64_t)v16, v37, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      uint64_t v40 = v17;
      uint64_t v41 = v63;
      uint64_t v42 = v64;
      if (EnumCaseMultiPayload == 1)
      {
        (*v62)(v63, v37, v64);
        Swift::UInt v43 = 1;
      }
      else
      {
        (*v62)(v63, v37, v64);
        Swift::UInt v43 = 2;
      }
      Hasher._combine(_:)(v43);
      sub_10057C20C(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
      dispatch thunk of Hashable.hash(into:)();
      (*v61)(v41, v42);
      uint64_t v17 = v40;
    }
    else
    {
      long long v44 = v57;
      uint64_t v45 = v58;
      (*v56)(v57, v37, v58);
      Hasher._combine(_:)(0);
      sub_10057C20C(&qword_100793B98, (void (*)(uint64_t))&type metadata accessor for SmartListType);
      dispatch thunk of Hashable.hash(into:)();
      (*v55)(v44, v45);
    }
    uint64_t result = Hasher._finalize()();
    uint64_t v46 = -1 << *(unsigned char *)(v19 + 32);
    unint64_t v47 = result & ~v46;
    unint64_t v48 = v47 >> 6;
    unint64_t v11 = v65;
    uint64_t v16 = (char *)v38;
    if (((-1 << v47) & ~*(void *)(v24 + 8 * (v47 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v47) & ~*(void *)(v24 + 8 * (v47 >> 6)))) | v47 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v49 = 0;
      unint64_t v50 = (unint64_t)(63 - v46) >> 6;
      do
      {
        if (++v48 == v50 && (v49 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        BOOL v51 = v48 == v50;
        if (v48 == v50) {
          unint64_t v48 = 0;
        }
        v49 |= v51;
        uint64_t v52 = *(void *)(v24 + 8 * v48);
      }
      while (v52 == -1);
      unint64_t v27 = __clz(__rbit64(~v52)) + (v48 << 6);
    }
    *(void *)(v24 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    sub_10057D6AC(v38, *(void *)(v19 + 48) + v34 * v27, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    uint64_t result = sub_10057D6AC((uint64_t)v11, *(void *)(v19 + 56) + v36 * v27, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    ++*(void *)(v19 + 16);
    int64_t v26 = v71;
  }
  swift_release();
  uint64_t v3 = v54;
  uint64_t v31 = v60;
  if ((v70 & 1) == 0) {
    goto LABEL_47;
  }
LABEL_43:
  uint64_t v53 = 1 << *(unsigned char *)(v17 + 32);
  if (v53 >= 64) {
    bzero(v31, ((unint64_t)(v53 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v31 = -1 << v53;
  }
  *(void *)(v17 + 16) = 0;
LABEL_47:
  uint64_t result = swift_release();
  *uint64_t v3 = v19;
  return result;
}

uint64_t sub_1005786B0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10003B754(a3);
  uint64_t v7 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    uint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    unint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    int64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  uint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_100578980(uint64_t a1, char a2)
{
  return sub_100578998(a1, a2, &qword_1007A7778);
}

uint64_t sub_10057898C(uint64_t a1, char a2)
{
  return sub_100578998(a1, a2, &qword_1007A7780);
}

uint64_t sub_100578998(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_10003B754(a3);
  uint64_t result = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    int64_t v33 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v32 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v9 << 6);
      }
      else
      {
        int64_t v21 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v21 >= v32) {
          goto LABEL_33;
        }
        unint64_t v22 = v33[v21];
        ++v9;
        if (!v22)
        {
          int64_t v9 = v21 + 1;
          if (v21 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v22 = v33[v9];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v32)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v6 + 32);
              if (v31 >= 64) {
                bzero(v33, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *int64_t v33 = -1 << v31;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v22 = v33[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v9 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v32) {
                  goto LABEL_33;
                }
                unint64_t v22 = v33[v9];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v9 << 6);
      }
      uint64_t v28 = 8 * v20;
      Swift::UInt v29 = *(void *)(*(void *)(v6 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v6 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v29);
      uint64_t result = Hasher._finalize()();
      uint64_t v14 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v8 + 48) + v18) = v29;
      *(void *)(*(void *)(v8 + 56) + v18) = v30;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

unint64_t sub_100578C70(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C370);
  uint64_t v6 = (void *)static _DictionaryStorage.resize(original:capacity:move:)();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return result;
        }
        if (v17 >= v11) {
          goto LABEL_20;
        }
        unint64_t v18 = v8[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v11) {
            goto LABEL_20;
          }
          unint64_t v18 = v8[v13];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v11)
            {
LABEL_20:
              swift_release();
              if (a2)
              {
                uint64_t v20 = 1 << *(unsigned char *)(v5 + 32);
                if (v20 > 63) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v20 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v20;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v18 = v8[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_27;
                }
                if (v13 >= v11) {
                  goto LABEL_20;
                }
                unint64_t v18 = v8[v13];
                ++v19;
                if (v18) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v13 = v19;
          }
        }
LABEL_19:
        unint64_t v10 = (v18 - 1) & v18;
        unint64_t v15 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 32 * v15;
      unint64_t result = sub_100579300(*(void *)v16, *(unsigned char *)(v16 + 8), v6, *(double *)(v16 + 16), *(double *)(v16 + 24), *(double *)(*(void *)(v5 + 56) + 16 * v15), *(double *)(*(void *)(v5 + 56) + 16 * v15 + 8));
    }
  }
  unint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_100578E4C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_10003B754(&qword_10079C368);
  char v35 = a2;
  uint64_t v6 = static _DictionaryStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    int64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_100038E1C(v22, v36);
    }
    else
    {
      sub_100038DC0((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v24 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_100038E1C(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

unint64_t sub_100579188(char a1, uint64_t a2, void *a3)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  *(unsigned char *)(a3[6] + result) = a1;
  *(void *)(a3[7] + 8 * result) = a2;
  ++a3[2];
  return result;
}

unint64_t sub_100579300(Swift::UInt64 a1, char a2, void *a3, double a4, double a5, double a6, double a7)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v14 = a1;
    }
    else {
      Swift::UInt64 v14 = 0;
    }
    Hasher._combine(_:)(v14);
  }
  sub_10064D048(a4, a5);
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
  uint64_t v16 = a3[6] + 32 * result;
  *(void *)uint64_t v16 = a1;
  *(unsigned char *)(v16 + 8) = a2 & 1;
  *(double *)(v16 + 16) = a4;
  *(double *)(v16 + 24) = a5;
  int64_t v17 = (double *)(a3[7] + 16 * result);
  *int64_t v17 = a6;
  v17[1] = a7;
  ++a3[2];
  return result;
}

uint64_t sub_100579414(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100579594(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

unint64_t sub_100579444(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

unint64_t sub_100579488(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

unint64_t sub_1005794D8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = (void *)(a5[7] + 16 * result);
  *uint64_t v5 = a3;
  v5[1] = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_100579520(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_100579568(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100579594(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
}

uint64_t sub_100579594(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v11 = a4[6];
  uint64_t v12 = a5(0);
  uint64_t result = sub_10057D6AC(a2, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v14 = a4[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a4[2] = v16;
  }
  return result;
}

uint64_t sub_100579640(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100579ACC(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
}

uint64_t sub_100579694(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  sub_10057D6AC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

unint64_t sub_100579784(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  uint64_t v6 = a5[7] + 56 * result;
  long long v7 = *(_OWORD *)(a4 + 16);
  *(_OWORD *)uint64_t v6 = *(_OWORD *)a4;
  *(_OWORD *)(v6 + 16) = v7;
  *(_OWORD *)(v6 + 32) = *(_OWORD *)(a4 + 32);
  *(void *)(v6 + 48) = *(void *)(a4 + 48);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

unint64_t sub_1005797E8(unint64_t result, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  *(void *)(a5[6] + 8 * result) = a2;
  uint64_t v5 = a5[7] + 16 * result;
  *(void *)uint64_t v5 = a3;
  *(unsigned char *)(v5 + 8) = a4 & 1;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_100579838(unint64_t result, uint64_t a2, char a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  *(unsigned char *)(a4[7] + result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_10057987C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
  uint64_t result = sub_10057D6AC(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_10057996C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  sub_10057D6AC(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t result = sub_1000960E8(a3, a4[7] + 32 * a1);
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_100579A28(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  *uint64_t v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}