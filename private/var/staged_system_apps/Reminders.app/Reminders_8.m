uint64_t sub_100579A78(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_100579ACC(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for AnyListEntityID, (uint64_t (*)(void))type metadata accessor for AnyListEntityID, (uint64_t (*)(void))type metadata accessor for AnyListEntity, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
}

uint64_t sub_100579ACC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t (*a5)(void), uint64_t (*a6)(void), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v15 = a4[6];
  uint64_t v16 = a5(0);
  sub_10057D6AC(a2, v15 + *(void *)(*(void *)(v16 - 8) + 72) * a1, a6);
  uint64_t v17 = a4[7];
  uint64_t v18 = a7(0);
  uint64_t result = sub_10057D6AC(a3, v17 + *(void *)(*(void *)(v18 - 8) + 72) * a1, a8);
  uint64_t v20 = a4[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    a4[2] = v22;
  }
  return result;
}

unint64_t sub_100579BB4(unint64_t result, uint64_t a2, char a3, void *a4, double a5, double a6, double a7, double a8)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = a4[6] + 32 * result;
  *(void *)uint64_t v8 = a2;
  *(unsigned char *)(v8 + 8) = a3 & 1;
  *(double *)(v8 + 16) = a5;
  *(double *)(v8 + 24) = a6;
  v9 = (double *)(a4[7] + 16 * result);
  double *v9 = a7;
  v9[1] = a8;
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_100579C0C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_100038E1C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_100579C74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AnyListEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100579CD8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A7568, &qword_1007A7560);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A7560);
          uint64_t v12 = sub_10003C778(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, &qword_100788D80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100579EF8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10057A178(a1, a2, a3, &qword_10078E370, &qword_1007A7600, &qword_1007A75F8, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1005AF6F4);
}

uint64_t sub_100579F28(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A75D8, &qword_1007A75D0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A75D0);
          uint64_t v12 = sub_10003C778(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, &qword_10079AF80);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057A148(unint64_t a1, uint64_t a2, unint64_t a3)
{
  return sub_10057A178(a1, a2, a3, (uint64_t *)&unk_100788D30, &qword_1007A7580, &qword_1007A7578, (uint64_t (*)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))sub_1005AF6F4);
}

uint64_t sub_10057A178(unint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4, unint64_t *a5, uint64_t *a6, uint64_t (*a7)(unsigned char *, uint64_t, unint64_t, uint64_t, uint64_t))
{
  unint64_t v14 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v15) {
      return a3;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v15) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v16 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v18 <= a2)
    {
      if (v15 >= 1)
      {
        uint64_t v19 = sub_10003C868(a5, a6);
        swift_bridgeObjectRetain();
        for (uint64_t i = 0; i != v15; ++i)
        {
          uint64_t v21 = sub_10003B754(a6);
          uint64_t v22 = (void (*)(unsigned char *, void))a7(v26, i, a3, v21, v19);
          uint64_t v24 = *v23;
          swift_retain();
          v22(v26, 0);
          *(void *)(a1 + 8 * i) = v24;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v17 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v16 + 32 >= a1 + 8 * v17 || v16 + 32 + 8 * v17 <= a1)
  {
    sub_10003B754(a4);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057A398(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A76A8, &qword_1007A76A0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A76A0);
          uint64_t v12 = sub_10003C778(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, (unint64_t *)&unk_10079CA10);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057A5B8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A7680, &qword_1007A7678);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A7678);
          uint64_t v12 = sub_10003C778(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, &qword_10078A128);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057A7D8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A7718, &qword_1007A7710);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A7710);
          uint64_t v12 = sub_10003C778(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, (unint64_t *)&unk_10078E660);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057A9F8(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A7720, &qword_10078FAE0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_10078FAE0);
          uint64_t v12 = sub_1005AF75C(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057AC18(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A7708, &qword_1007A7700);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A7700);
          uint64_t v12 = sub_1005AF7C4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for TTRITableSection();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057AE28(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_10003C868(&qword_1007A76F0, &qword_1007A76E8);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_10003B754(&qword_1007A76E8);
          uint64_t v12 = sub_10003C778(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1000368FC(0, &qword_100794B18);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10057B048(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = (char *)(a4 + 3 * a1 + 32);
    size_t v6 = 3 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B134(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10057B228(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 2 * a1 + 32);
    size_t v6 = 2 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B314(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10057B40C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B4F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10003B754(&qword_1007A7628);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B608(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      sub_10003B754(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B714(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B808(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_10003B754(&qword_1007A75B8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057B918(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057BA10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_10003B754(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10057BB18(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057BC04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10003B754(&qword_1007A7638);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10057BD14(uint64_t a1, unsigned __int8 a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for REMAccountsListDataView.Model.PinnedList();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v48 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (id *)((char *)&v35 - v11);
  v14.n128_f64[0] = __chkstk_darwin(v13);
  v49 = (char *)&v35 - v15;
  uint64_t result = (char *)_swiftEmptyArrayStorage;
  v50 = (char *)_swiftEmptyArrayStorage;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17)
  {
    uint64_t v35 = v3;
    uint64_t v19 = *(void (**)(id *, char *, uint64_t))(v8 + 16);
    uint64_t v18 = v8 + 16;
    unint64_t v20 = (*(unsigned __int8 *)(v18 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 64);
    uint64_t v45 = *(void *)(v18 + 56);
    v46 = v19;
    unint64_t v40 = v20;
    uint64_t v21 = a1 + v20;
    v44 = (uint64_t (**)(id *, uint64_t))(v18 + 72);
    int v43 = enum case for REMAccountsListDataView.Model.PinnedList.predefinedSmartList(_:);
    int v37 = enum case for REMAccountsListDataView.Model.PinnedList.customSmartList(_:);
    uint64_t v41 = v18;
    v42 = (void (**)(id *, uint64_t))(v18 + 80);
    v36 = (void (**)(char *, uint64_t))(v18 - 8);
    v47 = (void (**)(char *, char *, uint64_t))(v18 + 16);
    int v38 = a2;
    int v39 = enum case for REMAccountsListDataView.Model.PinnedList.list(_:);
    while (1)
    {
      uint64_t v22 = v49;
      v23 = v46;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v46)(v49, v21, v7, v14);
      v23(v12, v22, v7);
      int v24 = (*v44)(v12, v7);
      if (v24 != v43) {
        break;
      }
      (*v42)(v12, v7);
      id v25 = *v12;
      if (!v38 || !*(void *)(a3 + 16)) {
        goto LABEL_12;
      }
      id v25 = v25;
      uint64_t v26 = sub_10035C1CC(v25);
      if ((v27 & 1) == 0)
      {

LABEL_12:
LABEL_13:
        uint64_t v30 = a3;
        v31 = *v47;
        (*v47)(v48, v49, v7);
        v32 = v50;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D3D0C(0, *((void *)v32 + 2) + 1, 1);
          v32 = v50;
        }
        unint64_t v34 = *((void *)v32 + 2);
        unint64_t v33 = *((void *)v32 + 3);
        if (v34 >= v33 >> 1)
        {
          sub_1004D3D0C(v33 > 1, v34 + 1, 1);
          v32 = v50;
        }
        *((void *)v32 + 2) = v34 + 1;
        uint64_t v29 = v45;
        v31(&v32[v40 + v34 * v45], v48, v7);
        v50 = v32;
        a3 = v30;
        goto LABEL_18;
      }
      uint64_t v28 = *(void *)(*(void *)(a3 + 56) + 8 * v26);

      if (v28 != 2) {
        goto LABEL_13;
      }
      (*v36)(v49, v7);
      uint64_t v29 = v45;
LABEL_18:
      v21 += v29;
      if (!--v17) {
        return v50;
      }
    }
    if (v24 != v39 && v24 != v37)
    {
      uint64_t result = (char *)_diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    (*v42)(v12, v7);
    id v25 = *v12;
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_10057C0B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_10057C114()
{
  unint64_t result = qword_1007A74B0;
  if (!qword_1007A74B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A74B0);
  }
  return result;
}

unint64_t sub_10057C170()
{
  unint64_t result = qword_1007A74B8[0];
  if (!qword_1007A74B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1007A74B8);
  }
  return result;
}

uint64_t sub_10057C1C4()
{
  return sub_10057C20C(&qword_1007857E8, (void (*)(uint64_t))type metadata accessor for AnyListEntity);
}

uint64_t sub_10057C20C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10057C258()
{
  unint64_t result = qword_1007A74D0;
  if (!qword_1007A74D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A74D0);
  }
  return result;
}

uint64_t sub_10057C2AC()
{
  return sub_10057C20C(&qword_100794A48, (void (*)(uint64_t))type metadata accessor for AnyListEntity);
}

unint64_t sub_10057C2F8()
{
  unint64_t result = qword_1007A74D8;
  if (!qword_1007A74D8)
  {
    sub_100039710(qword_1007A74E0);
    sub_10057C20C(&qword_100794A48, (void (*)(uint64_t))type metadata accessor for AnyListEntity);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A74D8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AnyListEntityQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  return a1;
}

uint64_t destroy for AnyListEntityQuery()
{
  return swift_release();
}

uint64_t assignWithCopy for AnyListEntityQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for AnyListEntityQuery(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardDragItemSources(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardDragItemSources(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyListEntityQuery()
{
  return &type metadata for AnyListEntityQuery;
}

unsigned char *storeEnumTagSinglePayload for AnyListEntityQuery.QueryType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057C5BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyListEntityQuery.QueryType()
{
  return &type metadata for AnyListEntityQuery.QueryType;
}

uint64_t sub_10057C5F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057C6EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057C7E4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057C8DC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057C9D4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057CACC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057CBC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057CCB8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 112 * a1 + 32;
    unint64_t v6 = a3 + 112 * v4;
    if (v5 >= v6 || v5 + 112 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057CDB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057CEA8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      sub_10003B754(&qword_1007A75C8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_10057CFB8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057D0A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057D190(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_10003B754(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057D2E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_10003B754(&qword_10079CD18);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057D3F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057D4E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10057D644(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10057D6AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10057D718()
{
  if ((static IndexPath.== infix(_:_:)() & 1) == 0 || (static IndexPath.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static IndexPath.== infix(_:_:)();
}

uint64_t sub_10057D794(uint64_t a1, uint64_t a2, uint64_t a3, double a4, double a5, double a6, double a7)
{
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_systemPreviewSetOnDragItem) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted) = 0;
  *(unsigned char *)(v7
           + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_dropInterceptingView) = 0;
  *(unsigned char *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) = 0;
  uint64_t v15 = v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore;
  *(_OWORD *)uint64_t v15 = 0u;
  *(_OWORD *)(v15 + 16) = 0u;
  *(unsigned char *)(v15 + 32) = 1;
  uint64_t v16 = v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem;
  uint64_t v17 = sub_10003B754(&qword_100798528);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo;
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 1;
  *(_OWORD *)(v18 + 24) = 0u;
  *(_OWORD *)(v18 + 40) = 0u;
  *(unsigned char *)(v18 + 56) = 1;
  *(void *)(v18 + 64) = 0;
  sub_1000FF4BC(a1, v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnID);
  uint64_t v19 = (void *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column);
  *uint64_t v19 = a2;
  v19[1] = a3;
  unint64_t v20 = (double *)(v7 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter);
  *unint64_t v20 = a4;
  v20[1] = a5;
  uint64_t v21 = (double *)(v7
                 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell);
  *uint64_t v21 = a6;
  v21[1] = a7;
  return v7;
}

uint64_t sub_10057D910()
{
  sub_1000FF460(v0 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnID);
  swift_unknownObjectRelease();

  sub_10057E5CC(v0 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem);

  return swift_deallocClassInstance();
}

uint64_t sub_10057D9B8()
{
  return type metadata accessor for TTRIRemindersBoardColumnReorderingContext(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingContext(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007A77C8);
}

void sub_10057D9E0()
{
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  if (v0 <= 0x3F)
  {
    sub_10057DAF4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10057DAF4()
{
  if (!qword_1007A77D8)
  {
    sub_100039710(&qword_100798528);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007A77D8);
    }
  }
}

void destroy for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1)
{
}

uint64_t initializeWithCopy for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  int v3 = *(void **)(a2 + 64);
  *(void *)(a1 + 64) = v3;
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, long long *a2)
{
  long long v3 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v3;
  long long v4 = *(long long *)((char *)a2 + 24);
  long long v5 = *(long long *)((char *)a2 + 40);
  *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
  *(_OWORD *)(a1 + 40) = v5;
  *(_OWORD *)(a1 + 24) = v4;
  unint64_t v6 = *(void **)(a1 + 64);
  uint64_t v7 = (void *)*((void *)a2 + 8);
  *(void *)(a1 + 64) = v7;
  id v8 = v7;

  return a1;
}

uint64_t assignWithTake for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  long long v3 = *(void **)(a1 + 64);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);

  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 72)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardColumnReorderingContext.DebugInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 72) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardColumnReorderingContext.DebugInfo()
{
  return &type metadata for TTRIRemindersBoardColumnReorderingContext.DebugInfo;
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersBoardColumnReorderingContext.ReorderingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057DE08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardColumnReorderingContext.ReorderingState()
{
  return &type metadata for TTRIRemindersBoardColumnReorderingContext.ReorderingState;
}

uint64_t *sub_10057DE40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    id v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 20)), (uint64_t *)((char *)a2 + *(int *)(a3 + 20)), v7);
    v8((uint64_t *)((char *)a1 + *(int *)(a3 + 24)), (uint64_t *)((char *)a2 + *(int *)(a3 + 24)), v7);
  }
  return a1;
}

uint64_t sub_10057DF44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v7)((void *)(v4 - 8), a1, v4);
  v7(a1 + *(int *)(a2 + 20), v4);
  uint64_t v5 = a1 + *(int *)(a2 + 24);

  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

uint64_t sub_10057E000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10057E0B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10057E168(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10057E21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  v7(a1 + *(int *)(a3 + 20), a2 + *(int *)(a3 + 20), v6);
  v7(a1 + *(int *)(a3 + 24), a2 + *(int *)(a3 + 24), v6);
  return a1;
}

uint64_t sub_10057E2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10057E2E4);
}

uint64_t sub_10057E2E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_10057E350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10057E364);
}

uint64_t sub_10057E364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A7910);
}

uint64_t sub_10057E3F4()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_10057E488()
{
  unint64_t result = qword_1007A7950;
  if (!qword_1007A7950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A7950);
  }
  return result;
}

uint64_t sub_10057E4DC()
{
  uint64_t result = 0x7472617453746F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x676E697466696CLL;
      break;
    case 2:
      uint64_t result = 0x696C6C65636E6163;
      break;
    case 3:
      uint64_t result = 0x69726564726F6572;
      break;
    case 4:
      uint64_t result = 0x646574697865;
      break;
    case 5:
      uint64_t result = 0x697474696D6D6F63;
      break;
    case 6:
      uint64_t result = 0x6465646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10057E5CC(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100798520);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10057E62C(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v2 = 9;
  int v3 = &byte_100735658;
  while (1)
  {
    uint64_t v5 = *v3++;
    unsigned __int8 v4 = v5;
    uint64_t v6 = qword_10067D688[v5];
    if (qword_10067D640[v5] == a1 && v6 == a2) {
      break;
    }
    if (!--v2) {
      return 9;
    }
  }
  return v4;
}

uint64_t sub_10057E68C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  uint64_t v3 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v3 - 8);
  v54 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v55 = *(void *)(v5 - 8);
  uint64_t v56 = v5;
  __chkstk_darwin(v5);
  v53 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_1007A7958);
  __chkstk_darwin(v7 - 8);
  uint64_t v57 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v9 - 8);
  v60 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v58 = v11;
  uint64_t v59 = v12;
  __chkstk_darwin(v11);
  __n128 v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2 + direct field offset for TTRRemindersBoardMainDiffableDataSource.lastAppliedPresentationTrees;
  swift_beginAccess();
  uint64_t v23 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  uint64_t v24 = *(void *)(v23 - 8);
  id v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
  uint64_t v26 = v24 + 48;
  if (v25(v22, 1, v23))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_4:
    uint64_t v30 = (uint64_t *)&unk_100788DC0;
    uint64_t v31 = (uint64_t)v17;
LABEL_5:
    sub_10003B6F8(v31, v30);
LABEL_6:
    uint64_t v32 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v62, 1, 1, v32);
  }
  uint64_t v48 = v26;
  v49 = v25;
  uint64_t v51 = v2;
  v52 = v21;
  v50 = v14;
  sub_1000145EC(v22, (uint64_t)v63);
  uint64_t v28 = v64;
  uint64_t v27 = v65;
  uint64_t v29 = v61;
  sub_100038D28(v63, v64);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40))(v29, v28, v27);
  sub_100038CD8((uint64_t)v63);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1) {
    goto LABEL_4;
  }
  uint64_t v34 = (uint64_t)v52;
  sub_1004E2A6C((uint64_t)v17, (uint64_t)v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v35 = (uint64_t)v60;
  TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v35, 1, v58) == 1)
  {
    sub_10057EE20(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v30 = (uint64_t *)&unk_10078E360;
    uint64_t v31 = v35;
    goto LABEL_5;
  }
  uint64_t v36 = v29;
  uint64_t v37 = (uint64_t)v50;
  sub_1004E2A6C(v35, (uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t v38 = v22;
  uint64_t v39 = v57;
  sub_10057EDB8(v38, v57);
  if (v49(v39, 1, v23) == 1)
  {
    sub_10003B6F8(v39, &qword_1007A7958);
    sub_10057EE20(v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10057EE20(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_6;
  }
  uint64_t v40 = *(void *)(v39 + 40);
  swift_unknownObjectRetain();
  sub_10057EE20(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTrees);
  swift_getObjectType();
  v63[0] = v40;
  uint64_t v41 = v54;
  TTRTreeContentsQueryable.indexPath(for:)();
  uint64_t v43 = v55;
  uint64_t v42 = v56;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v41, 1, v56) == 1)
  {
    swift_unknownObjectRelease();
    sub_10057EE20(v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10057EE20(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v30 = &qword_10078E8F0;
    uint64_t v31 = (uint64_t)v41;
    goto LABEL_5;
  }
  v44 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v45 = v53;
  v44(v53, v41, v42);
  sub_10057EE80();
  swift_unknownObjectRelease();
  sub_10057EE20(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v46 = v62;
  sub_1004E2A6C(v37, v62, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t v47 = type metadata accessor for TTRIRemindersBoardDragItemInfo(0);
  v44((char *)(v46 + *(int *)(v47 + 20)), v45, v42);
  sub_1000FF3FC(v36, v46 + *(int *)(v47 + 24));
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
}

uint64_t sub_10057EDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A7958);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10057EE20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10057EE80()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10057F07C();
  uint64_t result = dispatch thunk of Collection.isEmpty.getter();
  if (result)
  {
    __break(1u);
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  dispatch thunk of Collection.startIndex.getter();
  uint64_t result = dispatch thunk of Collection.endIndex.getter();
  if (v14 != v13[0])
  {
    uint64_t v6 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v8 = *v7;
    v6(v13, 0);
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v0, v1);
    dispatch thunk of Collection.startIndex.getter();
    dispatch thunk of Collection.index(after:)();
    dispatch thunk of Collection.endIndex.getter();
    uint64_t v9 = v14;
    uint64_t v10 = v12;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    uint64_t result = v11(v0, v1);
    if (v10 >= v9)
    {
      v13[0] = v14;
      v13[1] = v12;
      dispatch thunk of Collection.subscript.getter();
      v11((uint64_t)v4, v1);
      return v8;
    }
    goto LABEL_6;
  }
LABEL_7:
  __break(1u);
  return result;
}

unint64_t sub_10057F07C()
{
  unint64_t result = qword_1007A7960;
  if (!qword_1007A7960)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A7960);
  }
  return result;
}

uint64_t sub_10057F0D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void (**)(uint64_t (*)(uint64_t), uint64_t))(a3 + 72);
  if (v4)
  {
    uint64_t v8 = result;
    uint64_t v9 = swift_allocObject();
    long long v10 = *(_OWORD *)(a3 + 48);
    *(_OWORD *)(v9 + 48) = *(_OWORD *)(a3 + 32);
    *(_OWORD *)(v9 + 64) = v10;
    *(_OWORD *)(v9 + 80) = *(_OWORD *)(a3 + 64);
    uint64_t v11 = *(void *)(a3 + 80);
    long long v12 = *(_OWORD *)(a3 + 16);
    *(_OWORD *)(v9 + 16) = *(_OWORD *)a3;
    *(_OWORD *)(v9 + 32) = v12;
    *(void *)(v9 + 96) = v11;
    *(void *)(v9 + 104) = a4;
    *(void *)(v9 + 112) = v8;
    *(void *)(v9 + 120) = a2;
    sub_10044B190(a3);
    swift_bridgeObjectRetain();
    swift_retain();
    v4(sub_100581B78, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_10057F1C4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v10 = type metadata accessor for DispatchPredicate();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t *v13 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v11 + 104))(v13, enum case for DispatchPredicate.onQueue(_:), v10);
  char v14 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v11 + 8))(v13, v10);
  if ((v14 & 1) == 0)
  {
    __break(1u);
LABEL_8:
    sub_1000368FC(0, &qword_10079AF80);
    swift_bridgeObjectRetain();
    uint64_t v24 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  if (!*(void *)(a1 + 16)) {
    return result;
  }
  v26[1] = a5;
  uint64_t v27 = a4;
  uint64_t v16 = *(void *)(a2 + 8);
  uint64_t v17 = swift_bridgeObjectRetain();
  v26[0] = sub_1004E5F44(v17);
  swift_bridgeObjectRelease();
  uint64_t v28 = a3;
  sub_10003B754(&qword_1007A7968);
  sub_100581B88();
  uint64_t v18 = Sequence.compactMapToSet<A>(_:)();
  uint64_t v28 = v16;
  uint64_t v19 = Sequence.compactMapToSet<A>(_:)();
  uint64_t v20 = sub_1005803DC(v18, v26[0]);
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_100580DD4(v21, v20);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10044B190(a2);
  unint64_t v23 = (unint64_t)sub_100580AA4(v22, v19, v16, a2);
  sub_1001E25A0(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v23 >> 62) {
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_1000368FC(0, &qword_10079AF80);
  uint64_t v24 = v23;
LABEL_5:
  id v25 = v27;
  swift_bridgeObjectRelease();
  v25(v24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10057F500@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(a1 + 32);
  *a2 = v3;
  a2[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10057F520(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10003B754(&qword_1007A7988);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v31;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      if (v17 >= v30)
      {
LABEL_35:
        swift_release();
        return v10;
      }
      unint64_t v18 = v31[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v30) {
          goto LABEL_35;
        }
        unint64_t v18 = v31[v13];
        if (!v18)
        {
          uint64_t v19 = v17 + 2;
          if (v19 >= v30) {
            goto LABEL_35;
          }
          unint64_t v18 = v31[v19];
          if (!v18)
          {
            while (1)
            {
              uint64_t v13 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_39;
              }
              if (v13 >= v30) {
                goto LABEL_35;
              }
              unint64_t v18 = v31[v13];
              ++v19;
              if (v18) {
                goto LABEL_22;
              }
            }
          }
          uint64_t v13 = v19;
        }
      }
LABEL_22:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = *(void *)(v32 + 72);
    sub_100034310(*(void *)(a4 + 48) + v20 * v16, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ItemID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v14 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_100581C98((uint64_t)v9, *(void *)(v10 + 48) + v24 * v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_35;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10057F83C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10003B754(&qword_1007A7998);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v31;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v30)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v31[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v30) {
          goto LABEL_37;
        }
        unint64_t v18 = v31[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v30) {
            goto LABEL_37;
          }
          unint64_t v18 = v31[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v30) {
              goto LABEL_37;
            }
            unint64_t v18 = v31[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v30) {
                  goto LABEL_37;
                }
                unint64_t v18 = v31[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = *(void *)(v32 + 72);
    sub_100034310(*(void *)(a4 + 48) + v20 * v16, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v14 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v14 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t result = sub_100581C98((uint64_t)v9, *(void *)(v10 + 48) + v24 * v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10057FB7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v37 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_10003B754(&qword_1007A7980);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v10 = result;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v12 = 0;
  }
  else {
    unint64_t v12 = *v34;
  }
  uint64_t v13 = 0;
  uint64_t v14 = result + 56;
  uint64_t v35 = (uint64_t (**)(unint64_t, char *, uint64_t))(v37 + 32);
  uint64_t v36 = v37 + 16;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v13 << 6);
    }
    else
    {
      uint64_t v17 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_40;
      }
      if (v17 >= v33)
      {
LABEL_37:
        swift_release();
        return v10;
      }
      unint64_t v18 = v34[v17];
      ++v13;
      if (!v18)
      {
        uint64_t v13 = v17 + 1;
        if (v17 + 1 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v13];
        if (!v18)
        {
          uint64_t v13 = v17 + 2;
          if (v17 + 2 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v13];
          if (!v18)
          {
            uint64_t v19 = v17 + 3;
            if (v19 >= v33) {
              goto LABEL_37;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                uint64_t v13 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v13];
                ++v19;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v13 = v19;
          }
        }
      }
LABEL_24:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
    }
    uint64_t v20 = a4;
    uint64_t v21 = *(void *)(a4 + 48);
    uint64_t v22 = *(void *)(v37 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v9, v21 + v22 * v16, v7);
    sub_10051D050();
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v23 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v14 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v14 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = (*v35)(*(void *)(v10 + 48) + v26 * v22, v9, v7);
    ++*(void *)(v10 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v20;
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_10057FED8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10003B754(&qword_1007A7990);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v9 = (unsigned char *)result;
  unint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << v9[32];
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(unsigned char *)(*((void *)v9 + 6) + v22) = v18;
    ++*((void *)v9 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_100580144(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_10003B754(&qword_1007A7978);
  uint64_t result = static _SetStorage.allocate(capacity:)();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    unint64_t v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *unint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1005803DC(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_100580564((uint64_t)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_100580564((uint64_t)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_100580564(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  uint64_t v57 = (unint64_t *)result;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v58 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v59 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v61 = 0;
    uint64_t v10 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
          int64_t v62 = v6;
          unint64_t v12 = v11 | (v6 << 6);
        }
        else
        {
          int64_t v13 = v6 + 1;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_81;
          }
          if (v13 >= v59) {
            goto LABEL_79;
          }
          unint64_t v14 = *(void *)(v58 + 8 * v13);
          int64_t v15 = v6 + 1;
          if (!v14)
          {
            int64_t v15 = v6 + 2;
            if (v6 + 2 >= v59) {
              goto LABEL_79;
            }
            unint64_t v14 = *(void *)(v58 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v6 + 3;
              if (v6 + 3 >= v59) {
                goto LABEL_79;
              }
              unint64_t v14 = *(void *)(v58 + 8 * v15);
              if (!v14)
              {
                uint64_t v16 = v6 + 4;
                if (v6 + 4 >= v59) {
                  goto LABEL_79;
                }
                unint64_t v14 = *(void *)(v58 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      goto LABEL_83;
                    }
                    if (v15 >= v59) {
                      goto LABEL_79;
                    }
                    unint64_t v14 = *(void *)(v58 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v15 = v6 + 4;
              }
            }
          }
LABEL_22:
          unint64_t v9 = (v14 - 1) & v14;
          int64_t v62 = v15;
          unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        }
        uint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
        uint64_t v19 = *v17;
        uint64_t v18 = v17[1];
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v20 = Hasher._finalize()();
        uint64_t v21 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v22 = v20 & ~v21;
        unint64_t v23 = v22 >> 6;
        uint64_t v24 = 1 << v22;
        if (((1 << v22) & *(void *)(v10 + 8 * (v22 >> 6))) != 0) {
          break;
        }
LABEL_6:
        uint64_t result = swift_bridgeObjectRelease();
        int64_t v6 = v62;
        uint64_t v5 = a3;
        uint64_t v4 = a4;
      }
      uint64_t v25 = *(void *)(a3 + 48);
      BOOL v26 = (void *)(v25 + 16 * v22);
      BOOL v27 = *v26 == v19 && v26[1] == v18;
      if (!v27 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
      {
        uint64_t v28 = ~v21;
        for (unint64_t i = v22 + 1; ; unint64_t i = v30 + 1)
        {
          unint64_t v30 = i & v28;
          if (((*(void *)(v10 + (((i & v28) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v28)) & 1) == 0) {
            break;
          }
          uint64_t v31 = (void *)(v25 + 16 * v30);
          BOOL v32 = *v31 == v19 && v31[1] == v18;
          if (v32 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
          {
            uint64_t result = swift_bridgeObjectRelease();
            unint64_t v23 = v30 >> 6;
            uint64_t v24 = 1 << v30;
            goto LABEL_38;
          }
        }
        goto LABEL_6;
      }
      uint64_t result = swift_bridgeObjectRelease();
LABEL_38:
      int64_t v6 = v62;
      uint64_t v5 = a3;
      v57[v23] |= v24;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v4 = a4;
      if (v33) {
        goto LABEL_82;
      }
    }
  }
  int64_t v34 = 0;
  uint64_t v60 = a3 + 56;
  uint64_t v61 = 0;
  uint64_t v35 = 1 << *(unsigned char *)(a3 + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  unint64_t v37 = v36 & *(void *)(a3 + 56);
  int64_t v63 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v38 = a4 + 56;
  while (1)
  {
    if (v37)
    {
      unint64_t v39 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v40 = v39 | (v34 << 6);
      goto LABEL_63;
    }
    int64_t v41 = v34 + 1;
    if (__OFADD__(v34, 1))
    {
LABEL_81:
      __break(1u);
LABEL_82:
      __break(1u);
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
    if (v41 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v41);
    ++v34;
    if (!v42)
    {
      int64_t v34 = v41 + 1;
      if (v41 + 1 >= v63) {
        goto LABEL_79;
      }
      unint64_t v42 = *(void *)(v60 + 8 * v34);
      if (!v42)
      {
        int64_t v34 = v41 + 2;
        if (v41 + 2 >= v63) {
          goto LABEL_79;
        }
        unint64_t v42 = *(void *)(v60 + 8 * v34);
        if (!v42) {
          break;
        }
      }
    }
LABEL_62:
    unint64_t v37 = (v42 - 1) & v42;
    unint64_t v40 = __clz(__rbit64(v42)) + (v34 << 6);
LABEL_63:
    v44 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v40);
    uint64_t v46 = *v44;
    uint64_t v45 = v44[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v47 = Hasher._finalize()();
    uint64_t v48 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v49 = v47 & ~v48;
    if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
      goto LABEL_46;
    }
    uint64_t v50 = *(void *)(a4 + 48);
    uint64_t v51 = (void *)(v50 + 16 * v49);
    BOOL v52 = *v51 == v46 && v51[1] == v45;
    if (v52 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_76:
      uint64_t result = swift_bridgeObjectRelease();
      *(unint64_t *)((char *)v57 + ((v40 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v40;
      BOOL v33 = __OFADD__(v61++, 1);
      uint64_t v5 = a3;
      uint64_t v4 = a4;
      if (v33)
      {
        __break(1u);
LABEL_79:
        swift_retain();
        return sub_100580144(v57, a2, v61, v5);
      }
    }
    else
    {
      uint64_t v53 = ~v48;
      while (1)
      {
        unint64_t v49 = (v49 + 1) & v53;
        if (((*(void *)(v38 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          break;
        }
        v54 = (void *)(v50 + 16 * v49);
        BOOL v55 = *v54 == v46 && v54[1] == v45;
        if (v55 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_76;
        }
      }
LABEL_46:
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v5 = a3;
      uint64_t v4 = a4;
    }
  }
  int64_t v43 = v41 + 3;
  if (v43 >= v63) {
    goto LABEL_79;
  }
  unint64_t v42 = *(void *)(v60 + 8 * v43);
  if (v42)
  {
    int64_t v34 = v43;
    goto LABEL_62;
  }
  while (1)
  {
    int64_t v34 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v34 >= v63) {
      goto LABEL_79;
    }
    unint64_t v42 = *(void *)(v60 + 8 * v34);
    ++v43;
    if (v42) {
      goto LABEL_62;
    }
  }
LABEL_84:
  __break(1u);
  return result;
}

void *sub_100580AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v8 = 0;
    uint64_t v33 = v5;
    uint64_t v34 = a1 + 32;
    unint64_t v30 = (uint64_t *)(a3 + 64);
    uint64_t v9 = v5;
    uint64_t v32 = a3;
    while (1)
    {
      if (v8 == v5)
      {
        __break(1u);
        return result;
      }
      uint64_t v38 = v8;
      uint64_t v37 = v9 - 1;
      unint64_t v14 = (uint64_t *)(v34 + 16 * (v9 - 1));
      uint64_t v15 = *v14;
      uint64_t v16 = v14[1];
      swift_bridgeObjectRetain();
      if ((sub_1004578D8(v15, v16, a2) & 1) == 0 || (uint64_t v17 = *(void *)(v32 + 16)) == 0)
      {
LABEL_3:
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        uint64_t v10 = swift_allocObject();
        long long v11 = *(_OWORD *)(a4 + 48);
        *(_OWORD *)(v10 + 48) = *(_OWORD *)(a4 + 32);
        *(_OWORD *)(v10 + 64) = v11;
        *(_OWORD *)(v10 + 80) = *(_OWORD *)(a4 + 64);
        uint64_t v12 = *(void *)(a4 + 80);
        long long v13 = *(_OWORD *)(a4 + 16);
        *(_OWORD *)(v10 + 16) = *(_OWORD *)a4;
        *(_OWORD *)(v10 + 32) = v13;
        *(void *)(v10 + 96) = v12;
        *(void *)(v10 + 104) = v15;
        *(void *)(v10 + 112) = v16;
        swift_bridgeObjectRetain();
        sub_10044B190(a4);
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        goto LABEL_4;
      }
      uint64_t v18 = v30;
      while (1)
      {
        uint64_t v19 = *v18;
        if (!*v18) {
          goto LABEL_9;
        }
        Swift::Int v20 = (void *)*(v18 - 4);
        uint64_t v21 = *(v18 - 3);
        uint64_t v23 = *(v18 - 2);
        uint64_t v22 = *(v18 - 1);
        if (v22 == v15 && v19 == v16) {
          break;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)())
        {
          uint64_t v31 = v19;
          if (v23) {
            goto LABEL_19;
          }
LABEL_17:
          swift_bridgeObjectRetain();
          goto LABEL_19;
        }
LABEL_9:
        v18 += 5;
        if (!--v17) {
          goto LABEL_3;
        }
      }
      uint64_t v22 = v15;
      uint64_t v31 = v16;
      if (!v23) {
        goto LABEL_17;
      }
LABEL_19:
      sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      uint64_t v25 = swift_allocObject();
      long long v26 = *(_OWORD *)(a4 + 48);
      *(_OWORD *)(v25 + 48) = *(_OWORD *)(a4 + 32);
      *(_OWORD *)(v25 + 64) = v26;
      *(_OWORD *)(v25 + 80) = *(_OWORD *)(a4 + 64);
      uint64_t v27 = *(void *)(a4 + 80);
      long long v28 = *(_OWORD *)(a4 + 16);
      *(_OWORD *)(v25 + 16) = *(_OWORD *)a4;
      *(_OWORD *)(v25 + 32) = v28;
      *(void *)(v25 + 96) = v27;
      *(void *)(v25 + 104) = v20;
      *(void *)(v25 + 112) = v21;
      *(void *)(v25 + 120) = v23;
      *(void *)(v25 + 128) = v22;
      *(void *)(v25 + 136) = v31;
      id v29 = v20;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_10044B190(a4);
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t v5 = v33;
      uint64_t v9 = v37;
      uint64_t v8 = v38 + 1;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = (void *)specialized ContiguousArray._endMutation()();
      if (v38 + 1 == v33) {
        return _swiftEmptyArrayStorage;
      }
    }
  }
  return result;
}

uint64_t sub_100580DD4(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v24 = result + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v23 = _swiftEmptyArrayStorage;
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v25 = v6;
    while (1)
    {
      if (v4 == v25)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = (uint64_t *)(v24 + 16 * v4);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      ++v4;
      if (!*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
      Hasher.init(_seed:)();
      swift_bridgeObjectRetain();
      String.hash(into:)();
      Swift::Int v10 = Hasher._finalize()();
      uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v12 = v10 & ~v11;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)(a2 + 48);
      unint64_t v14 = (void *)(v13 + 16 * v12);
      BOOL v15 = *v14 == v9 && v14[1] == v8;
      if (!v15 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      if (v4 == v2) {
        return (uint64_t)v23;
      }
    }
    uint64_t v16 = ~v11;
    while (1)
    {
      unint64_t v12 = (v12 + 1) & v16;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        break;
      }
      uint64_t v17 = (void *)(v13 + 16 * v12);
      BOOL v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
LABEL_25:
    uint64_t v19 = v23;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_1004D35AC(0, v23[2] + 1, 1);
      uint64_t v19 = v23;
    }
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1)
    {
      uint64_t result = sub_1004D35AC(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v23;
    }
    v19[2] = v21 + 1;
    uint64_t v23 = v19;
    uint64_t v22 = &v19[2 * v21];
    v22[4] = v9;
    v22[5] = v8;
  }
  while (v4 != v2);
  return (uint64_t)v23;
}

Class sub_100580FE8(uint64_t a1)
{
  uint64_t v86 = *(void *)a1;
  uint64_t v1 = *(void *)(v86 + 16);
  if (v1)
  {
    unint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
    uint64_t v3 = _swiftEmptyArrayStorage;
    do
    {
      unint64_t v4 = (void *)*(v2 - 4);
      uint64_t v5 = *(v2 - 3);
      uint64_t v6 = *(v2 - 2);
      uint64_t v7 = *(v2 - 1);
      uint64_t v8 = *v2;
      swift_bridgeObjectRetain();
      id v9 = v4;
      swift_bridgeObjectRetain();
      if (static TTRSectionID.__derived_enum_equals(_:_:)())
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        aBlock[0] = v3;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D33CC(0, v3[2] + 1, 1);
          uint64_t v3 = (void *)aBlock[0];
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        unint64_t v12 = v3;
        if (v11 >= v10 >> 1)
        {
          sub_1004D33CC(v10 > 1, v11 + 1, 1);
          unint64_t v12 = (void *)aBlock[0];
        }
        v12[2] = v11 + 1;
        uint64_t v13 = &v12[5 * v11];
        void v13[4] = v4;
        v13[5] = v5;
        v13[6] = v6;
        v13[7] = v7;
        v13[8] = v8;
        uint64_t v3 = v12;
      }
      v2 += 5;
      --v1;
    }
    while (v1);
    sub_10006A2C4((uint64_t)&v86);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  aBlock[0] = _swiftEmptyArrayStorage;
  uint64_t v14 = v3[2];
  uint64_t v15 = a1;
  if (v14)
  {
    sub_10044B190(a1);
    swift_retain();
    uint64_t v16 = v3 + 8;
    v77 = v3;
    do
    {
      uint64_t v22 = (void *)*(v16 - 4);
      if (v22)
      {
        uint64_t v23 = *(v16 - 3);
        uint64_t v24 = *(v16 - 2);
        uint64_t v26 = *(v16 - 1);
        uint64_t v25 = *v16;
        sub_10044B290((uint64_t *)(a1 + 16), (uint64_t)v85);
        sub_10044B290(v85, (uint64_t)&v87);
        if (v88)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          id v27 = v22;
        }
        else
        {
          sub_1000368FC(0, (unint64_t *)&qword_100797210);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain_n();
          id v17 = v22;
          sub_10044B3A8((uint64_t)v85);
          static NSObject.== infix(_:_:)();
          sub_10044B3D8((uint64_t)v85);
        }
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        uint64_t v18 = swift_allocObject();
        long long v19 = *(_OWORD *)(a1 + 48);
        *(_OWORD *)(v18 + 48) = *(_OWORD *)(a1 + 32);
        *(_OWORD *)(v18 + 64) = v19;
        *(_OWORD *)(v18 + 80) = *(_OWORD *)(a1 + 64);
        uint64_t v20 = *(void *)(a1 + 80);
        long long v21 = *(_OWORD *)(a1 + 16);
        *(_OWORD *)(v18 + 16) = *(_OWORD *)a1;
        *(_OWORD *)(v18 + 32) = v21;
        *(void *)(v18 + 96) = v20;
        *(void *)(v18 + 104) = v22;
        *(void *)(v18 + 112) = v23;
        *(void *)(v18 + 120) = v24;
        *(void *)(v18 + 128) = v26;
        *(void *)(v18 + 136) = v25;
        sub_10044B190(a1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8)
                                                                                + 0x18) >> 1)
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v3 = v77;
      }
      v16 += 5;
      --v14;
    }
    while (v14);
    swift_release();
    long long v28 = v3;
    unint64_t v29 = aBlock[0];
    uint64_t v15 = a1;
  }
  else
  {
    sub_10044B190(a1);
    long long v28 = v3;
    unint64_t v29 = (unint64_t)_swiftEmptyArrayStorage;
  }
  sub_1001E25A0(v15);
  static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)();
  sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v30 = swift_allocObject();
  long long v31 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v30 + 48) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v30 + 64) = v31;
  *(_OWORD *)(v30 + 80) = *(_OWORD *)(v15 + 64);
  *(void *)(v30 + 96) = *(void *)(v15 + 80);
  long long v32 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v30 + 16) = *(_OWORD *)v15;
  *(_OWORD *)(v30 + 32) = v32;
  sub_10044B190(v15);
  uint64_t v33 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v34._object = (void *)0x80000001006BBFD0;
  v35._countAndFlagsBits = 1701736270;
  v35._object = (void *)0xE400000000000000;
  v34._countAndFlagsBits = 0xD000000000000045;
  TTRLocalizedString(_:comment:)(v35, v34);
  uint64_t v36 = swift_allocObject();
  long long v37 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v36 + 48) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v36 + 64) = v37;
  *(_OWORD *)(v36 + 80) = *(_OWORD *)(v15 + 64);
  *(void *)(v36 + 96) = *(void *)(v15 + 80);
  long long v38 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v36 + 16) = *(_OWORD *)v15;
  *(_OWORD *)(v36 + 32) = v38;
  sub_10044B190(v15);
  v75._rawValue = 0;
  unint64_t v39 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10044B290((uint64_t *)(v15 + 16), (uint64_t)v84);
  sub_10044B290(v84, (uint64_t)v89);
  [v39 setState:v89[8] > 1u];
  uint64_t v40 = swift_allocObject();
  long long v41 = *(_OWORD *)(v15 + 48);
  *(_OWORD *)(v40 + 48) = *(_OWORD *)(v15 + 32);
  *(_OWORD *)(v40 + 64) = v41;
  *(_OWORD *)(v40 + 80) = *(_OWORD *)(v15 + 64);
  uint64_t v42 = *(void *)(v15 + 80);
  long long v43 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)(v40 + 16) = *(_OWORD *)v15;
  *(_OWORD *)(v40 + 32) = v43;
  *(void *)(v40 + 96) = v42;
  *(void *)(v40 + 104) = v28;
  aBlock[4] = sub_100581AE0;
  aBlock[5] = v40;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1000A6610;
  aBlock[3] = &unk_100750D68;
  v44 = _Block_copy(aBlock);
  uint64_t v45 = self;
  sub_10044B190(v15);
  id v46 = [v45 elementWithProvider:v44];
  _Block_release(v44);
  swift_release();
  aBlock[0] = _swiftEmptyArrayStorage;
  char v47 = *(unsigned char *)(v15 + 26);
  if (v47)
  {
    sub_1000368FC(0, &qword_1007894E0);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_10066D470;
    *(void *)(v48 + 32) = v39;
    UIMenuElementSize v79 = v48;
    specialized Array._endMutation()();
    id v49 = v39;
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    v90.value.super.Class isa = 0;
    v90.is_nil = 0;
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v50, (Swift::String_optional)0, v90, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v79, 0);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (v29 >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    swift_bridgeObjectRetain();
    unint64_t v51 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    unint64_t v51 = v29;
  }
  swift_bridgeObjectRelease();
  sub_100569BF8(v51);
  if (v47)
  {
    sub_1000368FC(0, &qword_1007894E0);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v52 = swift_allocObject();
    *(_OWORD *)(v52 + 16) = xmmword_10066D470;
    *(void *)(v52 + 32) = v33;
    UIMenuElementSize v80 = v52;
    specialized Array._endMutation()();
    id v53 = v33;
    v54._countAndFlagsBits = 0;
    v54._object = (void *)0xE000000000000000;
    v91.value.super.Class isa = 0;
    v91.is_nil = 0;
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v54, (Swift::String_optional)0, v91, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v80, v75);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if (*(unsigned char *)(a1 + 25))
  {
    uint64_t v55 = static TTRLocalizableStrings.Sections.suggestedSectionHeaderText(listLayout:)();
    uint64_t v57 = v56;
    uint64_t v58 = static TTRLocalizableStrings.Sections.suggestedSectionHeaderDescriptionText(listLayout:)();
    uint64_t v60 = v59;
    sub_1000368FC(0, &qword_1007894E0);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_10066D470;
    *(void *)(v61 + 32) = v46;
    UIMenuElementSize v81 = v61;
    specialized Array._endMutation()();
    id v62 = v46;
    v63._countAndFlagsBits = v58;
    v63._object = v60;
    v92.value.super.Class isa = 0;
    v92.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v63, (Swift::String_optional)0, v92, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v81, v75).super.super.isa;
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_10066D470;
    *(void *)(v65 + 32) = isa;
    UIMenuElementSize v82 = v65;
    specialized Array._endMutation()();
    v66 = isa;
    v67._countAndFlagsBits = v55;
    v67._object = v57;
    v93.value.super.Class isa = 0;
    v93.is_nil = 0;
    UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v67, (Swift::String_optional)0, v93, 0, 0xFFFFFFFFFFFFFFFFLL, v82, v76);
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_1000368FC(0, &qword_1007894E0);
  v68 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
  unint64_t v69 = aBlock[0];
  id v70 = v68;
  UIMenuElementSize preferredElementSize = sub_10009079C(v69);
  v71._countAndFlagsBits = 0;
  v71._object = (void *)0xE000000000000000;
  v94.value.super.Class isa = (Class)v68;
  v94.is_nil = 0;
  Class v72 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v71, (Swift::String_optional)0, v94, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v75).super.super.isa;

  return v72;
}

uint64_t sub_100581A64()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E2634(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_100581AE0(uint64_t a1, uint64_t a2)
{
  return sub_10057F0D4(a1, a2, v2 + 16, *(void *)(v2 + 104));
}

uint64_t sub_100581AF4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E2634(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100581B78(uint64_t a1)
{
  return sub_10057F1C4(a1, v1 + 16, *(void *)(v1 + 104), *(void (**)(uint64_t))(v1 + 112), *(void *)(v1 + 120));
}

unint64_t sub_100581B88()
{
  unint64_t result = qword_1007A7970;
  if (!qword_1007A7970)
  {
    sub_100039710(&qword_1007A7968);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A7970);
  }
  return result;
}

uint64_t sub_100581BE4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001E2634(*(id *)(v0 + 32), *(unsigned char *)(v0 + 40));
  swift_release();
  if (*(void *)(v0 + 72)) {
    swift_release();
  }
  if (*(void *)(v0 + 88)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100581C60()
{
  uint64_t v1 = (uint64_t (*)(void, void))v0[9];
  if (v1) {
    return v1(v0[13], v0[14]);
  }
  return result;
}

uint64_t sub_100581C98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100581D00@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_10057F500(a1, a2);
}

uint64_t sub_100581D18()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    sub_10003B754(&qword_1007A7B28);
    NSKeyValueObservedChange.oldValue.getter();
    double v5 = *(double *)&v10[1];
    double v6 = *(double *)&v10[2];
    char v7 = v11;
    NSKeyValueObservedChange.newValue.getter();
    if (v7)
    {
      if (v14) {
        return swift_release();
      }
    }
    else if ((v14 & 1) == 0 && v5 == v12 && v6 == v13)
    {
      return swift_release();
    }
    if (*(unsigned char *)(v4 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_isActive) == 1)
    {
      uint64_t v9 = v4 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID;
      swift_beginAccess();
      sub_1000FF3FC(v9, (uint64_t)v2);
      PassthroughSubject.send(_:)();
      sub_1000FF460((uint64_t)v2);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100581E7C()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v5[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    if (*(unsigned char *)(result + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_isActive) == 1)
    {
      uint64_t v4 = result + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID;
      swift_beginAccess();
      sub_1000FF3FC(v4, (uint64_t)v2);
      PassthroughSubject.send(_:)();
      sub_1000FF460((uint64_t)v2);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100581F7C()
{
  sub_1000FF460(v0 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration));
  swift_release();
  sub_10003D3BC(v0 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_contentSizeObservation);
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_scrollOffsetObserver));

  return swift_deallocClassInstance();
}

uint64_t sub_100582020()
{
  return type metadata accessor for TTRIBoardColumnChromelessBarsStateContributor();
}

uint64_t type metadata accessor for TTRIBoardColumnChromelessBarsStateContributor()
{
  uint64_t result = qword_1007A79E0;
  if (!qword_1007A79E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100582074()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.ItemID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ScrollOffsetObserver()
{
  return self;
}

uint64_t sub_100582210()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A7B30);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A7B30);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1005822D8()
{
  return &_swiftEmptyArrayStorage;
}

void sub_1005822E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856F8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_1007A7B30);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowPublicTemplatePresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(ObjectType, v6);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
    type metadata accessor for MainActor();
    swift_retain();
    id v11 = v9;
    uint64_t v12 = static MainActor.shared.getter();
    double v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    void v13[4] = v1;
    v13[5] = v11;
    sub_1000286A4((uint64_t)v4, (uint64_t)&unk_1007A84D8, (uint64_t)v13);

    swift_release();
  }
  else
  {
    os_log_t v18 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v14, "TTRIShowPublicTemplatePresenter: failed to create list; missing listRepresentation",
        v15,
        2u);
      swift_slowDealloc();
    }
    os_log_t v16 = v18;
  }
}

uint64_t sub_100582570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[12] = a4;
  v5[13] = a5;
  v5[14] = type metadata accessor for MainActor();
  v5[15] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[16] = v7;
  v5[17] = v6;
  return _swift_task_switch(sub_10058260C, v7, v6);
}

uint64_t sub_10058260C()
{
  v0[18] = *(void *)(v0[12] + 88);
  v0[19] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[20] = v2;
  v0[21] = v1;
  return _swift_task_switch(sub_1005826A4, v2, v1);
}

uint64_t sub_1005826A4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[22] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[23] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10058278C;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    uint64_t v3 = v0[16];
    uint64_t v4 = v0[17];
    return _swift_task_switch(sub_100582930, v3, v4);
  }
}

uint64_t sub_10058278C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 176);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 168);
  uint64_t v4 = *(void *)(v1 + 160);
  return _swift_task_switch(sub_1005828CC, v4, v3);
}

uint64_t sub_1005828CC()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 136);
  return _swift_task_switch(sub_100582930, v1, v2);
}

uint64_t sub_100582930()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    swift_getObjectType();
    uint64_t v3 = swift_conformsToProtocol2();
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v5)
    {
      uint64_t v6 = v0[12];
      uint64_t ObjectType = swift_getObjectType();
      v0[5] = type metadata accessor for TTRIShowPublicTemplatePresenter();
      v0[6] = &off_10073CC68;
      v0[2] = v6;
      (*(void (**)(void *, uint64_t, uint64_t))(v4 + 16))(v0 + 2, ObjectType, v4);
      swift_retain();
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)(v0 + 2));
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v8 = v0[12];
  id v9 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 initWithDebugIdentifier:v10];
  v0[24] = v11;

  uint64_t v12 = *(void *)(v8 + 80);
  uint64_t v13 = swift_getObjectType();
  os_log_t v18 = (uint64_t (*)(uint64_t, id, uint64_t, uint64_t))(*(void *)(v12 + 624) + **(int **)(v12 + 624));
  id v14 = v11;
  uint64_t v15 = (void *)swift_task_alloc();
  v0[25] = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_100582B58;
  uint64_t v16 = v0[13];
  return v18(v16, v11, v13, v12);
}

uint64_t sub_100582B58(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 208) = a1;
  *(void *)(v3 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = *(void *)(v3 + 128);
    uint64_t v5 = *(void *)(v3 + 136);
    uint64_t v6 = sub_100582D9C;
  }
  else
  {

    uint64_t v4 = *(void *)(v3 + 128);
    uint64_t v5 = *(void *)(v3 + 136);
    uint64_t v6 = sub_100582C74;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100582C74()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 0;
    }
    uint64_t v4 = *(void **)(v0 + 208);
    uint64_t v5 = *(void **)(v0 + 192);
    if (v3)
    {
      sub_100038D28((void *)(v3 + 48), *(void *)(v3 + 72));
      swift_retain();
      id v6 = v4;
      sub_10034C41C(v6, v5, 1);

      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = *(void **)(v0 + 208);
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100582D9C()
{
  uint64_t v12 = v0;
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();

  if (qword_1007856F8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_1007A7B30);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v10 = *(void **)(v0 + 192);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    swift_getErrorValue();
    uint64_t v6 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 88) = sub_1000385A8(v6, v7, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRMShowPublicTemplatePresenter: failed to create list from template {error: %s}", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100582FE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007856F8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_1007A7B30);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v1;
  sub_1000286A4((uint64_t)v4, (uint64_t)&unk_1007A84C8, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_100583174(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[7] = a4;
  v4[8] = *a4;
  v4[9] = type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v6;
  v4[12] = v5;
  return _swift_task_switch(sub_100583238, v6, v5);
}

uint64_t sub_100583238()
{
  v0[13] = *(void *)(v0[7] + 88);
  v0[14] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[15] = v2;
  v0[16] = v1;
  return _swift_task_switch(sub_1005832D0, v2, v1);
}

uint64_t sub_1005832D0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[17] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[18] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1005833B8;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    uint64_t v3 = v0[11];
    uint64_t v4 = v0[12];
    return _swift_task_switch(sub_10058355C, v3, v4);
  }
}

uint64_t sub_1005833B8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 136);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 128);
  uint64_t v4 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_1005834F8, v4, v3);
}

uint64_t sub_1005834F8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_10058355C, v1, v2);
}

uint64_t sub_10058355C()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    swift_getObjectType();
    uint64_t v3 = swift_conformsToProtocol2();
    if (v3) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v5)
    {
      uint64_t v6 = v0[7];
      uint64_t v7 = v0[8];
      uint64_t ObjectType = swift_getObjectType();
      v0[5] = v7;
      v0[6] = &off_10073CC68;
      v0[2] = v6;
      (*(void (**)(void *, uint64_t, uint64_t))(v4 + 16))(v0 + 2, ObjectType, v4);
      swift_retain();
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)(v0 + 2));
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  id v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_100583670()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100583680()
{
  sub_10019B470();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1005836F4()
{
  return type metadata accessor for TTRIShowPublicTemplatePresenter();
}

uint64_t type metadata accessor for TTRIShowPublicTemplatePresenter()
{
  uint64_t result = qword_1007A7B78;
  if (!qword_1007A7B78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100583748()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10058378C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005837CC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000C2D4;
  return sub_100583174(a1, v4, v5, v6);
}

uint64_t sub_100583880()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005838C8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10003D2E4;
  return sub_100582570(a1, v4, v5, v7, v6);
}

void sub_100583988(uint64_t a1, uint64_t a2)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return;
  }
  uint64_t v4 = (void *)Strong;
  if (a2)
  {
    swift_bridgeObjectRetain();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  [v4 setText:v5];

  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (!v6) {
    goto LABEL_13;
  }
  id v9 = (id)v6;
  if (a2)
  {
    uint64_t v7 = String.count.getter();
    swift_bridgeObjectRelease();
    BOOL v8 = v7 < 1;
  }
  else
  {
    BOOL v8 = 1;
  }
  [v9 setHidden:v8];
}

void sub_100583A90(void *a1)
{
  if (!a1)
  {
    id v9 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController);
    if (v9)
    {
      sub_10042DBA4();
      id v10 = v9;
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      [v10 setContacts:isa];

      id Strong = (id)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong setHidden:1];
        goto LABEL_8;
      }
LABEL_14:
      __break(1u);
      return;
    }
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController);
  if (!v2)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066D470;
  *(void *)(v4 + 32) = a1;
  specialized Array._endMutation()();
  sub_10042DBA4();
  id Strong = a1;
  id v5 = v2;
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v5 setContacts:v6];

  uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  BOOL v8 = v7;
  [v7 setHidden:0];

LABEL_8:
}

void sub_100583C44()
{
  v26.receiver = v0;
  v26.super_class = (Class)swift_getObjectType();
  [super awakeFromNib];
  uint64_t v1 = OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController;
  if (*(void *)&v0[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController]) {
    goto LABEL_7;
  }
  id v2 = [objc_allocWithZone((Class)CNAvatarViewController) init];
  uint64_t v3 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v2;

  uint64_t v4 = *(void **)&v0[v1];
  if (!v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  [v4 setThreeDTouchEnabled:0];
  id v5 = *(void **)&v0[v1];
  if (!v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v6 = [v5 view];
  [v6 setAutoresizingMask:18];
  [v6 setTranslatesAutoresizingMaskIntoConstraints:1];
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  BOOL v8 = Strong;
  [Strong addSubview:v6];

  id v9 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v9)
  {
    id v10 = v9;
    [v9 bounds];
    double v12 = v11;
    double v14 = v13;
    double v16 = v15;
    double v18 = v17;

    [v6 setFrame:v12, v14, v16, v18];
LABEL_7:
    uint64_t v19 = swift_unknownObjectWeakLoadStrong();
    if (v19)
    {
      uint64_t v20 = (void *)v19;
      long long v21 = self;
      id v22 = [v21 labelColor];
      [v20 setTextColor:v22];

      uint64_t v23 = swift_unknownObjectWeakLoadStrong();
      if (v23)
      {
        uint64_t v24 = (void *)v23;
        id v25 = [v21 secondaryLabelColor];
        [v24 setTextColor:v25];

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
}

id sub_100583F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController] = 0;
  if (a3)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v10.receiver = v3;
  v10.super_class = ObjectType;
  id v8 = [super initWithStyle:a1 reuseIdentifier:v7];

  return v8;
}

id sub_1005840C4(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRIListSharingParticipantCell_avatarViewController] = 0;
  v6.receiver = v1;
  v6.super_class = ObjectType;
  id v4 = [super initWithCoder:a1];

  return v4;
}

uint64_t type metadata accessor for TTRIListSharingParticipantCell()
{
  return self;
}

id TTRIRootAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIRootAssembly();
  return [super init];
}

id TTRIRootAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIRootAssembly();
  return [super dealloc];
}

uint64_t sub_1005842CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100584304(void *a1@<X8>)
{
  sub_1003F80B8(*(void *)(v1 + 16), a1);
}

uint64_t sub_100584320()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_100584358()
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  if (!v1) {
    return (void *)v3;
  }
  return result;
}

uint64_t sub_100584390()
{
  sub_1000401DC(&qword_10079CA78, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item);

  return TTRTreeStorageItem.treeItemDescription.getter();
}

uint64_t initializeWithCopy for TTRIAccountsListsViewUpdates(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIAccountsListsViewUpdates(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t assignWithTake for TTRIAccountsListsViewUpdates(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIAccountsListsViewUpdates(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 50)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIAccountsListsViewUpdates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 50) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 50) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewUpdates()
{
  return &type metadata for TTRIAccountsListsViewUpdates;
}

unsigned char *storeEnumTagSinglePayload for TTRIAccountsListsViewUpdates.EditModeTransition(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005846C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unint64_t sub_1005846F4()
{
  unint64_t result = qword_1007A8578;
  if (!qword_1007A8578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A8578);
  }
  return result;
}

void *OpenNewReminderAppIntent.openAppWhenRun.unsafeMutableAddressor()
{
  return &static OpenNewReminderAppIntent.openAppWhenRun;
}

uint64_t sub_100584754()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = type metadata accessor for LocalizedStringResource();
  sub_100018C30(v6, static OpenNewReminderAppIntent.title);
  sub_100018BF8(v6, (uint64_t)static OpenNewReminderAppIntent.title);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t OpenNewReminderAppIntent.title.unsafeMutableAddressor()
{
  if (qword_100785700 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for LocalizedStringResource();

  return sub_100018BF8(v0, (uint64_t)static OpenNewReminderAppIntent.title);
}

uint64_t static OpenNewReminderAppIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_100785700 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for LocalizedStringResource();
  uint64_t v3 = sub_100018BF8(v2, (uint64_t)static OpenNewReminderAppIntent.title);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

uint64_t static OpenNewReminderAppIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10003B754(&qword_1007857D8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = type metadata accessor for LocalizedStringResource();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v6 + 104))(v8, enum case for LocalizedStringResource.BundleDescription.main(_:), v5);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v4, 1, 1, v11);
  IntentDescription.init(_:categoryName:searchKeywords:)();
  uint64_t v13 = type metadata accessor for IntentDescription();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, 0, 1, v13);
}

uint64_t OpenNewReminderAppIntent.perform()(uint64_t a1)
{
  v1[2] = a1;
  uint64_t v2 = type metadata accessor for REMNavigationSpecifier();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[6] = v3;
  v1[7] = *(void *)(v3 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for RemindersAppIntentCategory();
  v1[9] = v4;
  v1[10] = *(void *)(v4 - 8);
  v1[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100584EE4, v6, v5);
}

uint64_t sub_100584EE4()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v5 = v0[7];
  uint64_t v4 = v0[8];
  uint64_t v6 = v0[5];
  uint64_t v11 = v0[6];
  uint64_t v7 = v0[3];
  uint64_t v8 = v0[4];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for RemindersAppIntentCategory.publicAppIntent(_:), v2);
  sub_10026FE78();
  AppIntent.postAnalytics(category:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v6, enum case for REMNavigationSpecifier.newReminder(_:), v7);
  REMNavigationSpecifier.url.getter();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  URL.open()();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v11);
  static IntentResult.result<>()();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

unint64_t sub_100585068()
{
  unint64_t result = qword_1007A8588;
  if (!qword_1007A8588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A8588);
  }
  return result;
}

unint64_t sub_1005850C0()
{
  unint64_t result = qword_1007A8590;
  if (!qword_1007A8590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A8590);
  }
  return result;
}

uint64_t sub_100585114()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100585130()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100585190(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000C2D4;
  return OpenNewReminderAppIntent.perform()(a1);
}

uint64_t sub_100585228(uint64_t a1)
{
  unint64_t v2 = sub_10026FE78();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

ValueMetadata *type metadata accessor for OpenNewReminderAppIntent()
{
  return &type metadata for OpenNewReminderAppIntent;
}

uint64_t sub_100585274@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  sub_100038DC0(a1, (uint64_t)v8);
  if (!swift_dynamicCast()) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, 1, 1, a2);
  }
  AnyHashable.base.getter();

  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_100585378(uint64_t a1)
{
  swift_getObjectType();
  sub_100144CE0(a1, (uint64_t)v5);
  if (!v6)
  {
    sub_10003D3BC((uint64_t)v5);
    goto LABEL_5;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_5:
    char v2 = 0;
    return v2 & 1;
  }
  char v2 = static AnyHashable.== infix(_:_:)();

  return v2 & 1;
}

uint64_t type metadata accessor for TTRITreeViewContextMenuItemIdentifier()
{
  return self;
}

id sub_10058557C(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction] = 0;
  uint64_t v10 = OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier;
  id v11 = objc_allocWithZone((Class)NSUUID);
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_ovalLayer] = 0;

  v15.receiver = v12;
  v15.super_class = ObjectType;
  id v13 = [super initWithFrame:a1, a2, a3, a4];
  sub_10058567C();

  return v13;
}

void sub_10058567C()
{
  id v6 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"tapGestureAction:"];
  [v6 setDelegate:v0];
  [v0 addGestureRecognizer:v6];
  id v1 = [objc_allocWithZone((Class)PKScribbleInteraction) init];
  uint64_t v2 = OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction;
  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction];
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction] = v1;

  uint64_t v4 = *(void **)&v0[v2];
  if (!v4)
  {
    __break(1u);
    goto LABEL_8;
  }
  [v4 setDelegate:v0];
  int v5 = *(void **)&v0[v2];
  if (!v5)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  [v5 setElementSource:v0];
  if (!*(void *)&v0[v2])
  {
LABEL_9:
    __break(1u);
    return;
  }
  [v0 addInteraction:];
}

id sub_1005857AC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleInteraction] = 0;
  uint64_t v4 = OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier;
  id v5 = objc_allocWithZone((Class)NSUUID);
  id v6 = v1;
  *(void *)&v1[v4] = [v5 init];
  *(void *)&v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_ovalLayer] = 0;

  v11.receiver = v6;
  v11.super_class = ObjectType;
  id v7 = [super initWithCoder:a1];
  id v8 = v7;
  if (v7)
  {
    id v9 = v7;
    sub_10058567C();
  }
  return v8;
}

uint64_t type metadata accessor for TTRIRemindersListBackgroundView()
{
  return self;
}

uint64_t sub_100585CE8(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v9 = a3;
    swift_unknownObjectRetain();
    id v10 = a1;
    a5(0x756F72676B636162, 0xEE0077656956646ELL);

    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_100585DC8()
{
  id v1 = v0;
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  double v3 = 0.0;
  if (v2)
  {
    uint64_t v4 = (void *)v2;
    id v5 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier];
    sub_100586150();
    id v6 = v5;
    id v7 = v4;
    swift_unknownObjectRetain();
    char v8 = static NSObject.== infix(_:_:)();

    if (v8)
    {
      [v1 bounds];
      return v9;
    }
  }
  return v3;
}

void sub_100585EB0(uint64_t a1, uint64_t a2, void (**a3)(void, void))
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a3;
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (v6)
  {
    id v7 = (void *)v6;
    char v8 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders31TTRIRemindersListBackgroundView_scribbleElementIdentifier);
    sub_100586150();
    swift_unknownObjectRetain();
    _Block_copy(a3);
    id v9 = v8;
    id v10 = v7;
    char v11 = static NSObject.== infix(_:_:)();

    if ((v11 & 1) != 0 && swift_unknownObjectWeakLoadStrong())
    {
      sub_100393188();
      swift_unknownObjectRelease();
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = sub_10058613C;
      *(void *)(v12 + 24) = v5;
      swift_retain();
      id v13 = (void *)zalgo.getter();
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();

      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_10058613C;
      *(void *)(v14 + 24) = v5;
      swift_retain();
      id v15 = (id)zalgo.getter();
      dispatch thunk of Promise.error(on:closure:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    _Block_copy(a3);
  }
  a3[2](a3, 0);

  swift_release();
}

uint64_t sub_100586104()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10058613C()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

unint64_t sub_100586150()
{
  unint64_t result = qword_1007A8748;
  if (!qword_1007A8748)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007A8748);
  }
  return result;
}

uint64_t sub_100586190()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005861C8(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_1005861FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

char *sub_10058622C(uint64_t *a1, void **a2, void *a3, uint64_t a4)
{
  uint64_t v78 = a4;
  id v74 = a3;
  Swift::OpaquePointer v76 = a1;
  uint64_t v5 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  v77 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Class v72 = (char *)&v71 - v8;
  uint64_t v75 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v75);
  uint64_t v79 = (uint64_t)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v14);
  double v16 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (void **)((char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v73 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  sub_1000A165C((uint64_t)a2, (uint64_t)v19, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v83[0] = _swiftEmptyArrayStorage;
  sub_1000A13DC();
  sub_10003B754(&qword_100789188);
  sub_1000A1434();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  id v20 = v74;
  sub_100055D48(v19, (uint64_t)v16, [v74 remObjectID], (uint64_t)v83);
  long long v21 = *a2;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for REMRemindersListDataView.SortingStyle.default(_:), v10);
  type metadata accessor for TTRShowRecentlyDeletedDataModelSource();
  swift_allocObject();
  uint64_t v22 = TTRShowRecentlyDeletedDataModelSource.init(store:account:sortingStyle:)();
  id v23 = v83[0];
  type metadata accessor for TTRShowRecentlyDeletedViewModelSource();
  uint64_t v24 = (void *)swift_allocObject();
  id v25 = v21;
  id v26 = v20;
  id v27 = v23;
  long long v28 = (void *)sub_100586AC4(v22, v27, v24);

  sub_1000A165C((uint64_t)a2, (uint64_t)v19, v73);
  sub_100057134((uint64_t)v83, (uint64_t)v80);
  swift_retain();
  id v74 = v28;
  sub_100056B24((uint64_t)v19, (uint64_t)v80, (uint64_t)v28, (uint64_t)&off_1007512D8, v79);
  uint64_t v29 = (uint64_t)v72;
  sub_100056CAC((uint64_t)v72);
  v73 = (uint64_t (*)(void))type metadata accessor for TTRIShowRecentlyDeletedPresenter();
  uint64_t v30 = swift_allocObject();
  long long v31 = (uint64_t *)(v30 + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource);
  *long long v31 = v22;
  v31[1] = (uint64_t)&protocol witness table for TTRShowRecentlyDeletedDataModelSource;
  uint64_t v32 = v29;
  uint64_t v33 = (uint64_t)v77;
  sub_1000A165C(v29, (uint64_t)v77, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  swift_retain();
  uint64_t v34 = v78;
  swift_unknownObjectRetain();
  uint64_t v35 = sub_1003585DC(v33, v34, v30);
  sub_1000A16C4(v32, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v36 = *(void *)(v35 + 144);
  uint64_t ObjectType = swift_getObjectType();
  long long v38 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 104);
  swift_retain();
  if (v38(ObjectType, v36))
  {
    uint64_t v40 = v39;
    uint64_t v41 = swift_getObjectType();
    LOBYTE(v40) = (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 16))(v41, v40);
    swift_release();
    swift_unknownObjectRelease();
    char v42 = v40 & 1;
  }
  else
  {
    swift_release();
    char v42 = 0;
  }
  long long v43 = sub_1001D0C84(v42, v35);
  Class v72 = v44;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v71 = swift_getObjectType();
  *(void *)(v35 + 24) = *(void *)(v48 + 8);
  uint64_t v78 = v46;
  swift_unknownObjectWeakAssign();
  uint64_t v49 = *(void *)(v35 + 144);
  uint64_t v50 = swift_getObjectType();
  unint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 104);
  swift_retain_n();
  v77 = v43;
  if (v51(v50, v49))
  {
    uint64_t v53 = v52;
    uint64_t v54 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v53 + 16))(v54, v53);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v55 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  id v56 = v77;
  uint64_t v57 = (void *)sub_10035A06C(v35);
  swift_release();

  uint64_t v58 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v48 + 32);
  Class v72 = v57;
  v58(v57, &off_1007464D0, v71, v48);
  int64_t v59 = (char *)v83[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v59 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v60 = (char *)v83[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v60 + 1) = &protocol witness table for TTRShowRecentlyDeletedDataModelSource;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v61 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v22 + 368);
  uint64_t v62 = swift_retain();
  v61(v62, &off_1007518A8);
  swift_retain();
  uint64_t v63 = swift_retain();
  sub_1005B1F9C(v63, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v64 = v79;
  *(void *)(*(void *)(v79 + *(int *)(v75 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v84, (uint64_t)v80);
  long long v81 = v85;
  long long v82 = v86;
  *(void *)(v85 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v80);
  sub_100038DC0((uint64_t)&v87, (uint64_t)v80);
  uint64_t v65 = *((void *)&v88 + 1);
  long long v81 = v88;
  uint64_t v66 = swift_getObjectType();
  Swift::String v67 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v65 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v67(v35, &off_10073CA90, v66, v65);
  swift_unknownObjectRelease();
  uint64_t v68 = sub_100038CD8((uint64_t)v80);
  (*(void (**)(uint64_t))(*(void *)v22 + 400))(v68);
  unint64_t v69 = v76;
  v76[3] = (uint64_t)v73;
  v69[4] = (uint64_t)&off_1007510B0;
  *unint64_t v69 = v35;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1000A16C4(v64, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_100057B44(v83);
  return v72;
}

uint64_t sub_100586AC4(uint64_t a1, void *a2, void *a3)
{
  v31[1] = *a3;
  uint64_t v6 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)((char *)a3 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_listRepresentation) = 0;
  double v16 = (char *)a3 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_remindersCount;
  *(void *)double v16 = 0;
  *((void *)v16 + 1) = 0;
  v16[16] = 1;
  *(void *)((char *)a3
            + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  uint64_t v17 = (void *)((char *)a3
                 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource);
  *uint64_t v17 = a1;
  v17[1] = (uint64_t)&protocol witness table for TTRShowRecentlyDeletedDataModelSource;
  uint64_t v18 = enum case for REMRemindersListDataView.SortingStyle.default(_:);
  uint64_t v19 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(v15, v18, v19);
  swift_storeEnumTagMultiPayload();
  swift_retain_n();
  uint64_t v20 = sub_100359DC4(a1, (uint64_t)a2, (uint64_t)v15, (uint64_t)a3);
  swift_retain();
  sub_1005B86A0((uint64_t)v12);
  sub_1005885DC((uint64_t)v12);
  sub_1000A1724((uint64_t)v12);
  long long v21 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v22 = v21;
  static REMAnalyticsManager.shared.getter();
  uint64_t v23 = sub_10003B754(&qword_10078D258);
  uint64_t v24 = (uint64_t *)&v9[*(int *)(v23 + 48)];
  id v25 = (uint64_t *)&v9[*(int *)(v23 + 80)];
  uint64_t v26 = enum case for REMRemindersOpenUserOperation.recentlyDeleted(_:);
  uint64_t v27 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 104))(v9, v26, v27);
  *uint64_t v24 = TTRUserDefaults.activitySessionId.getter();
  v24[1] = v28;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *id v25 = _typeName(_:qualified:)();
  v25[1] = v29;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for REMAnalyticsEvent.openListUserOperation(_:), v6);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v20;
}

uint64_t sub_100586E4C(void *a1, char a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7)
{
  char v13 = a2 & 1;
  uint64_t v14 = sub_10003B754(&qword_100792528);
  __chkstk_darwin(v14 - 8);
  double v16 = &v30[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[3] = type metadata accessor for TTRIEditSectionsRouter();
  v31[4] = &off_1007544B0;
  v31[0] = a4;
  *(void *)(a7 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a7 + 40) = 0;
  swift_unknownObjectWeakInit();
  type metadata accessor for TTREditSectionsViewModel();
  *(void *)(a7 + 168) = TTREditSectionsViewModel.__allocating_init(shouldHideEmptySections:sections:shouldCategorizeGroceryItems:)();
  *(void *)(a7 + 192) = 0;
  *(void *)(a7 + 200) = 0;
  *(void *)(a7 + 184) = 0;
  *(unsigned char *)(a7 + 208) = 0;
  *(_OWORD *)(a7 + 216) = 0u;
  *(_OWORD *)(a7 + 232) = 0u;
  *(void *)(a7 + 248) = 0;
  uint64_t v17 = sub_10003B754(&qword_100792530);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_10020D99C((uint64_t)_swiftEmptyArrayStorage);
  TTREditSectionsViewModel.OptimisticApply.init(sectionOrdering:renamedSections:)();
  *(void *)(a7 + 128) = a1;
  *(unsigned char *)(a7 + 136) = v13;
  sub_1000145EC(a3, a7 + 88);
  sub_1000145EC((uint64_t)v31, a7 + 48);
  *(void *)(a7 + 144) = a5;
  *(void *)(a7 + 152) = a6;
  id v18 = a1;
  id v19 = a5;
  id v20 = a6;
  long long v21 = (void *)TTRListOrCustomSmartList.groceryContext.getter();
  if (!v21)
  {
    *(unsigned char *)(a7 + 177) = 0;
    goto LABEL_5;
  }
  id v22 = v21;
  unsigned __int8 v23 = [v21 shouldCategorizeGroceryItems];

  *(unsigned char *)(a7 + 177) = v23;
  if ((v23 & 1) == 0)
  {
LABEL_5:
    *(unsigned char *)(a7 + 176) = 0;
    goto LABEL_6;
  }
  id v24 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  id v25 = (void *)TTRListOrCustomSmartList.objectID.getter();
  char v26 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

  *(unsigned char *)(a7 + 176) = v26 & 1;
LABEL_6:
  type metadata accessor for TTRMainActorDeferredAction();
  swift_allocObject();
  uint64_t v27 = TTRMainActorDeferredAction.init()();
  *(void *)(a7 + 160) = v27;
  swift_beginAccess();
  *(void *)(v27 + 24) = &off_10073EC50;
  swift_unknownObjectWeakAssign();
  uint64_t v28 = sub_10020BFAC();

  sub_100038CD8((uint64_t)v31);
  sub_100038CD8(a3);
  *(void *)(a7 + 168) = v28;
  swift_release();
  return a7;
}

id sub_100587114(uint64_t a1, void *a2, char *a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource] = 0;
  *(void *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_lastConsumedViewModel] = 0;
  *(void *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___cancelButton] = 0;
  *(void *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___doneButton] = 0;
  uint64_t v14 = &a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter];
  *(void *)uint64_t v14 = a1;
  *((void *)v14 + 1) = &off_10073EC70;
  *(void *)&a3[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_localUndoManager] = a2;
  sub_100587804();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v6);
  swift_retain();
  id v15 = a2;
  UICollectionLayoutListConfiguration.init(appearance:)();
  double v16 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v21.receiver = a3;
  v21.super_class = ObjectType;
  [super initWithCollectionViewLayout:v16];

  swift_release();
  return v17;
}

id sub_10058735C(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  v50[0] = a6;
  v50[1] = a5;
  char v9 = a2 & 1;
  if (a2)
  {
    id v18 = a1;
    id v19 = a4;
    id v20 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    type metadata accessor for TTRUserDefaults();
    uint64_t v21 = type metadata accessor for TTRInteractorAsyncEditsCommitter();
    swift_initStackObject();
    uint64_t v53 = v21;
    uint64_t v54 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    type metadata accessor for TTREditSectionsSmartListEditor();
    swift_allocObject();
    id v22 = v20;
    uint64_t v23 = TTREditSectionsSmartListEditor.init(list:undoManager:committer:userDefaults:)();
    uint64_t v56 = v21;
    uint64_t v57 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v55[0] = swift_allocObject();
    v52[0] = v23;
    uint64_t v15 = sub_10003B754(&qword_1007A8758);
    swift_allocObject();
    id v24 = v19;
    a3;
    swift_retain();
  }
  else
  {
    uint64_t v56 = type metadata accessor for TTRInteractorAsyncEditsCommitter();
    uint64_t v57 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v55[0] = swift_initStackObject();
    id v10 = a1;
    id v11 = a4;
    uint64_t v12 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    uint64_t v53 = type metadata accessor for TTRUserDefaults();
    uint64_t v54 = &protocol witness table for TTRUserDefaults;
    type metadata accessor for TTREditSectionsListEditor();
    swift_allocObject();
    id v13 = v12;
    uint64_t v14 = TTREditSectionsListEditor.init(list:undoManager:committer:userDefaults:)();
    uint64_t v57 = &protocol witness table for TTRInteractorAsyncEditsCommitter;
    v55[0] = swift_allocObject();
    v52[0] = v14;
    uint64_t v15 = sub_10003B754(&qword_1007A8760);
    swift_allocObject();
    id v16 = v11;
    swift_retain();
    id v17 = a3;
  }
  uint64_t v25 = TTREditSectionsInteractor.init(editSectionsEditor:store:undoManager:committer:)();
  uint64_t v56 = v15;
  uint64_t v57 = &protocol witness table for TTREditSectionsInteractor<A>;
  swift_release();

  v55[0] = v25;
  uint64_t v26 = type metadata accessor for TTRIEditSectionsRouter();
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  sub_1000145EC((uint64_t)v55, (uint64_t)v52);
  v51[3] = v26;
  v51[4] = &off_1007544B0;
  v51[0] = v27;
  type metadata accessor for TTRIEditSectionsPresenter();
  uint64_t v28 = swift_allocObject();
  uint64_t v29 = sub_100038E88((uint64_t)v51, v26);
  double v30 = __chkstk_darwin(v29);
  uint64_t v32 = (void *)((char *)v50 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v33 + 16))(v32, v30);
  uint64_t v34 = *v32;
  id v35 = a1;
  id v36 = a4;
  id v37 = a3;
  swift_retain();
  uint64_t v38 = sub_100586E4C(a1, v9, (uint64_t)v52, v34, v37, v36, v28);
  sub_100038CD8((uint64_t)v51);
  uint64_t v39 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIEditSectionsViewController());
  id v40 = v36;
  uint64_t v41 = swift_retain();
  id v42 = sub_100587114(v41, v40, v39);
  uint64_t v43 = v56;
  v44 = v57;
  sub_100038E88((uint64_t)v55, v56);
  uint64_t v45 = (void (*)(uint64_t, _UNKNOWN **, uint64_t, void *))v44[2];
  uint64_t v46 = swift_retain();
  v45(v46, &off_10073EC60, v43, v44);
  *(void *)(v38 + 24) = &off_100742180;
  swift_unknownObjectWeakAssign();
  *(void *)(v38 + 40) = v50[0];
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v47 = v56;
  uint64_t v48 = (void (**)(uint64_t, void *))v57;
  sub_100038D28(v55, v56);
  v48[11](v47, v48);
  swift_release();
  sub_100038CD8((uint64_t)v55);
  return v42;
}

unint64_t sub_100587804()
{
  unint64_t result = qword_100797380;
  if (!qword_100797380)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100797380);
  }
  return result;
}

unint64_t *sub_100587844(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  id v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = sub_10003B754(&qword_1007A09D8);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  char v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  id v11 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v21 = (unint64_t *)&_swiftEmptyArrayStorage;
    sub_1004D337C(0, v10, 0);
    id v11 = v21;
    uint64_t v12 = *(void *)(type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = v11[2];
      unint64_t v14 = v11[3];
      if (v15 >= v14 >> 1)
      {
        sub_1004D337C(v14 > 1, v15 + 1, 1);
        id v11 = v21;
      }
      v11[2] = v15 + 1;
      sub_100028C3C((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, &qword_1007A09D8);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void (*sub_100587A38(void (*result)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t *__return_ptr, uint64_t *)
{
  void (*v7)(uint64_t *__return_ptr, uint64_t *);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;

  uint64_t v5 = a4 - a3;
  if (__OFSUB__(a4, a3)) {
    goto LABEL_19;
  }
  uint64_t v6 = v4;
  uint64_t v7 = result;
  unint64_t result = (void (*)(uint64_t *__return_ptr, uint64_t *))_swiftEmptyArrayStorage;
  if (v5)
  {
    unint64_t v14 = _swiftEmptyArrayStorage;
    unint64_t result = (void (*)(uint64_t *__return_ptr, uint64_t *))specialized ContiguousArray.reserveCapacity(_:)();
    if (v5 < 0)
    {
LABEL_20:
      __break(1u);
      return result;
    }
    if (a4 <= a3) {
      int64_t v10 = a3;
    }
    else {
      int64_t v10 = a4;
    }
    id v11 = a3;
    while (a4 != v11)
    {
      uint64_t v12 = v11;
      v7(&v13, &v12);
      if (v6) {
        return (void (*)(uint64_t *__return_ptr, uint64_t *))swift_release();
      }
      uint64_t v6 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      unint64_t result = (void (*)(uint64_t *__return_ptr, uint64_t *))specialized ContiguousArray._endMutation()();
      if (a4 < a3) {
        goto LABEL_17;
      }
      if (v10 == v11) {
        goto LABEL_18;
      }
      if (a4 == ++v11) {
        return (void (*)(uint64_t *__return_ptr, uint64_t *))v14;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  return result;
}

void *sub_100587B70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v18[0] = a1;
  v18[1] = a2;
  uint64_t v6 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  char v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  id v11 = _swiftEmptyArrayStorage;
  if (v10)
  {
    uint64_t v20 = _swiftEmptyArrayStorage;
    sub_1004D3570(0, v10, 0);
    id v11 = v20;
    uint64_t v12 = (void **)(a3 + 40);
    while (1)
    {
      uint64_t v13 = *v12;
      v19[0] = *(v12 - 1);
      v19[1] = v13;
      id v14 = v19[0];
      ((void (*)(id *))v18[0])(v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;

      uint64_t v20 = v11;
      unint64_t v16 = v11[2];
      unint64_t v15 = v11[3];
      if (v16 >= v15 >> 1)
      {
        sub_1004D3570(v15 > 1, v16 + 1, 1);
        id v11 = v20;
      }
      v12 += 2;
      v11[2] = v16 + 1;
      sub_1005B6A88((uint64_t)v9, (uint64_t)v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v16, type metadata accessor for TTRRemindersListUncommittedReminder);
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

void *sub_100587D28(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    unint64_t result = _swiftEmptyArrayStorage;
    if (!v6) {
      break;
    }
    uint64_t v13 = _swiftEmptyArrayStorage;
    unint64_t result = (void *)specialized ContiguousArray.reserveCapacity(_:)();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      int64_t v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return (void *)swift_release();
      }
      ++v8;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100587E98(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v20 = a1;
  uint64_t v21 = a2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.LinkAttachment();
  uint64_t v19 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    int64_t v10 = _swiftEmptyArrayStorage;
    if (!v9) {
      return (uint64_t)v10;
    }
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t result = sub_1004D38B8(0, v9 & ~(v9 >> 63), 0);
    if (v9 < 0) {
      break;
    }
    uint64_t v12 = 0;
    int64_t v10 = v23;
    unint64_t v18 = a3 & 0xC000000000000001;
    while (v9 != v12)
    {
      if (v18) {
        id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v13 = *(id *)(a3 + 8 * v12 + 32);
      }
      id v14 = v13;
      id v22 = v13;
      v20(&v22);
      if (v4)
      {
        swift_release();

        return (uint64_t)v10;
      }
      uint64_t v4 = 0;

      uint64_t v23 = v10;
      unint64_t v16 = v10[2];
      unint64_t v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_1004D38B8(v15 > 1, v16 + 1, 1);
        int64_t v10 = v23;
      }
      ++v12;
      v10[2] = v16 + 1;
      sub_1005B6A88((uint64_t)v8, (uint64_t)v10+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.LinkAttachment);
      if (v9 == v12) {
        return (uint64_t)v10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void *sub_1005880C4(void (*a1)(long long *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    id v22 = _swiftEmptyArrayStorage;
    sub_1004D3914(0, v5, 0);
    uint64_t v6 = _swiftEmptyArrayStorage;
    for (unint64_t i = (char *)(a3 + 32); ; ++i)
    {
      char v18 = *i;
      a1(&v19, &v18);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      long long v9 = v19;
      uint64_t v10 = v20;
      __int16 v11 = v21;
      id v22 = v6;
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        long long v16 = v19;
        sub_1004D3914(v12 > 1, v13 + 1, 1);
        long long v9 = v16;
        uint64_t v6 = v22;
      }
      v6[2] = v13 + 1;
      id v14 = &v6[4 * v13];
      *((_OWORD *)v14 + 2) = v9;
      v14[6] = v10;
      *((_WORD *)v14 + 28) = v11;
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

void *sub_1005881EC(void (*a1)(uint64_t *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v6)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    long long v9 = (char *)(a3 + 32);
    while (1)
    {
      char v10 = *v9++;
      char v11 = v10;
      a1(&v12, &v11);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v6) {
        return v13;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

void sub_1005882DC(void (*a1)(uint64_t *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  __int16 v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = a3;
  uint64_t v11 = a4 - a3;
  if (__OFSUB__(a4, a3)) {
    goto LABEL_21;
  }
  if (v11)
  {
    uint64_t v25 = _swiftEmptyArrayStorage;
    sub_1004D3698(0, v11 & ~(v11 >> 63), 0);
    if (v11 < 0)
    {
LABEL_22:
      __break(1u);
      return;
    }
    uint64_t v12 = v25;
    uint64_t v13 = v23;
    if (a4 <= v23) {
      uint64_t v14 = v23;
    }
    else {
      uint64_t v14 = a4;
    }
    uint64_t v18 = v14;
    uint64_t v19 = v8 + 32;
    while (a4 != v13)
    {
      uint64_t v24 = v13;
      v21(&v24);
      if (v5)
      {
        swift_release();
        return;
      }
      uint64_t v5 = 0;
      uint64_t v25 = v12;
      unint64_t v16 = v12[2];
      unint64_t v15 = v12[3];
      if (v16 >= v15 >> 1)
      {
        sub_1004D3698(v15 > 1, v16 + 1, 1);
        uint64_t v12 = v25;
      }
      v12[2] = v16 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v16, v10, v20);
      if (a4 < v23) {
        goto LABEL_19;
      }
      if (v18 == v13) {
        goto LABEL_20;
      }
      if (a4 == ++v13) {
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
}

void *sub_1005884D8(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v8 = (uint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v9 = *v8;
      v10[0] = *(v8 - 1);
      v10[1] = v9;
      swift_bridgeObjectRetain();
      a1(&v11, v10);
      swift_bridgeObjectRelease();
      if (v3) {
        break;
      }
      v8 += 2;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if (!--v5) {
        return v12;
      }
    }
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_1005885DC(uint64_t a1)
{
  uint64_t v50 = sub_10003B754(&qword_1007A8D60);
  __chkstk_darwin(v50);
  uint64_t v51 = (uint64_t)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10079F410);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_100786EF0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v49 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v48 = (uint64_t)&v45 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v47 = (uint64_t)&v45 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v15 = (char *)&v45 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v45 - v16;
  uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v46 = (uint64_t)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v45 - v22;
  sub_10003B694(a1, (uint64_t)v17, &qword_100786EF0);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48);
  if (v24(v17, 1, v18) == 1) {
    return sub_10003B6F8((uint64_t)v17, &qword_100786EF0);
  }
  sub_1005B6A88((uint64_t)v17, (uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  uint64_t v26 = v52;
  uint64_t v27 = *(void *)(v52 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v27 + 72))(ObjectType, v27))
  {
    uint64_t v30 = v29;
    uint64_t v31 = swift_getObjectType();
    LOBYTE(v30) = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 16))(v31, v30);
    swift_unknownObjectRelease();
    char v32 = v30 & 1;
  }
  else
  {
    char v32 = 0;
  }
  v23[*(int *)(v18 + 32)] = v32;
  swift_retain();
  TTRRemindersListCurrentTipCapability.visibleTip.getter();
  swift_release();
  sub_10000A550((uint64_t)v5, (uint64_t)&v23[*(int *)(v18 + 40)], (uint64_t *)&unk_10079F410);
  sub_1005B2804((uint64_t)v23, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  uint64_t v45 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
  v45(v15, 0, 1, v18);
  uint64_t v33 = v26 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  uint64_t v34 = v51;
  uint64_t v35 = v51 + *(int *)(v50 + 48);
  sub_10003B694((uint64_t)v15, v51, &qword_100786EF0);
  sub_10003B694(v33, v35, &qword_100786EF0);
  if (v24((char *)v34, 1, v18) != 1)
  {
    uint64_t v36 = v47;
    sub_10003B694(v34, v47, &qword_100786EF0);
    if (v24((char *)v35, 1, v18) != 1)
    {
      uint64_t v37 = v46;
      sub_1005B6A88(v35, v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      char v38 = static TTRRemindersListViewModel.ListInfo.__derived_struct_equals(_:_:)();
      sub_1005B286C(v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_10003B6F8((uint64_t)v15, &qword_100786EF0);
      sub_1005B286C(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_10003B6F8(v34, &qword_100786EF0);
      if (v38) {
        return sub_1005B286C((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      }
LABEL_13:
      uint64_t v39 = v48;
      sub_1005B2804((uint64_t)v23, v48, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      v45((char *)v39, 0, 1, v18);
      uint64_t v40 = v39;
      uint64_t v41 = v49;
      sub_100028C3C(v40, v49, &qword_100786EF0);
      swift_beginAccess();
      sub_10000A550(v41, v33, &qword_100786EF0);
      swift_endAccess();
      uint64_t v42 = v52 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v43 = *(void *)(v42 + 8);
        uint64_t v44 = swift_getObjectType();
        (*(void (**)(char *, uint64_t, uint64_t))(v43 + 56))(v23, v44, v43);
        swift_unknownObjectRelease();
      }
      return sub_1005B286C((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    sub_10003B6F8((uint64_t)v15, &qword_100786EF0);
    sub_1005B286C(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_11:
    sub_10003B6F8(v34, &qword_1007A8D60);
    goto LABEL_13;
  }
  sub_10003B6F8((uint64_t)v15, &qword_100786EF0);
  if (v24((char *)v35, 1, v18) != 1) {
    goto LABEL_11;
  }
  sub_10003B6F8(v34, &qword_100786EF0);
  return sub_1005B286C((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

uint64_t sub_100588C58(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t (*)(uint64_t), void, uint64_t, uint64_t))(a2 + 112))(sub_100599458, 0, a1, a2);
}

uint64_t sub_100588C8C()
{
  swift_release();
  sub_1005B286C(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  sub_1000499D4(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate);
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo, &qword_100786EF0);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_100588D68()
{
  uint64_t v0 = (unsigned __int8 *)TTRReminderCellStyle.normal.unsafeMutableAddressor();
  uint64_t v1 = &_mh_execute_header;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_100588DD4()
{
  return *(void *)TTRRemindersListViewModel.AssignmentData.VisibleElements.avatar.unsafeMutableAddressor();
}

BOOL sub_100588DF0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
  if (v3) {
    swift_unknownObjectRelease();
  }
  return v3 != 0;
}

uint64_t sub_100588E54()
{
  return 0;
}

uint64_t sub_100588E64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  double v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (id *)((char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v20 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = *(void *)(a1 + 16);
  sub_1000909B8(v11, 0, v8);
  specialized Array._endMutation()();
  if (v11)
  {
    uint64_t v19 = v1;
    uint64_t v12 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v14 = *(void *)(v12 + 72);
    swift_bridgeObjectRetain();
    do
    {
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
      if (swift_getEnumCaseMultiPayload() <= 2)
      {
        sub_1005B6A88((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        id v15 = *v10;
        sub_1005B286C((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v2 = v19;
  }
  uint64_t v16 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v16 + 152))(v20, ObjectType, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1005890D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v86 = a2;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  UIMenuElementSize v80 = *(void **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (id *)((char *)&v79 - v21);
  uint64_t v85 = type metadata accessor for TTRRemindersListViewModel.Reminder();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v81 = (uint64_t)&v79 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v83 = (uint64_t)&v79 - v25;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v82 = a1;
  if ((EnumCaseMultiPayload - 1) < 2)
  {
    uint64_t v27 = (uint64_t)v80;
    sub_1005B6A88((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    sub_100599828(&v89);
    uint64_t v28 = a1;
    if (*((void *)&v90 + 1))
    {
      sub_1005B286C((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      long long v92 = v89;
      long long v93 = v90;
      long long v94 = v91;
      long long v89 = 0u;
      long long v90 = 0u;
      *(void *)&long long v91 = 0;
      uint64_t v29 = v81;
      sub_100599934((uint64_t)&v92, (uint64_t)&v89, v3, v28, v81);
      sub_1003CB334((uint64_t)&v92);
      uint64_t v30 = v83;
      sub_1005B6A88(v29, v83, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
    }
    else
    {
      sub_10003B6F8((uint64_t)&v89, &qword_1007A8E28);
      sub_1005B2804(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v10, 0, 1, v5);
      id v35 = *v22;
      sub_1005B286C((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v30 = v83;
      TTRRemindersListViewModel.Reminder.init(item:objectID:)();
    }
    sub_1005B2804(v28, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int v36 = swift_getEnumCaseMultiPayload();
    uint64_t v37 = sub_1005B286C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v36 == 4)
    {
      char v38 = (unsigned char *)TTRReminderCellStyle.placeholder.unsafeMutableAddressor();
      char v39 = v38[1];
      char v40 = v38[2];
      char v41 = v38[3];
      char v42 = v38[4];
      uint64_t v43 = (int *)v85;
      uint64_t v44 = (unsigned char *)(v30 + *(int *)(v85 + 24));
      unsigned char *v44 = *v38;
      v44[1] = v39;
      v44[2] = v40;
      v44[3] = v41;
      v44[4] = v42;
      uint64_t v37 = (*(uint64_t (**)(void))(*(void *)v3 + 568))();
      uint64_t v45 = 0;
      *(unsigned char *)(v30 + v43[39]) = v37;
      int v46 = 1;
      uint64_t v47 = v86;
    }
    else
    {
      uint64_t v45 = 0;
      int v46 = 1;
      uint64_t v47 = v86;
      uint64_t v43 = (int *)v85;
    }
    uint64_t v48 = v84;
    goto LABEL_22;
  }
  UIMenuElementSize v80 = v19;
  if (EnumCaseMultiPayload)
  {
LABEL_37:
    uint64_t v77 = 1;
    uint64_t v47 = v86;
    uint64_t v43 = (int *)v85;
    uint64_t v48 = v84;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v48 + 56))(v47, v77, 1, v43);
  }
  uint64_t v31 = v80;
  sub_1005B6A88((uint64_t)v16, (uint64_t)v80, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  uint64_t v32 = v82;
  sub_100599828(&v89);
  if (*((void *)&v90 + 1))
  {
    long long v92 = v89;
    long long v93 = v90;
    long long v94 = v91;
    long long v89 = 0u;
    long long v90 = 0u;
    *(void *)&long long v91 = 0;
    uint64_t v33 = v81;
    sub_100599934((uint64_t)&v92, (uint64_t)&v89, v3, v32, v81);
    sub_1003CB334((uint64_t)&v92);
    uint64_t v34 = v33;
    goto LABEL_14;
  }
  sub_10003B6F8((uint64_t)&v89, &qword_1007A8E28);
  uint64_t v49 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v51 = (void *)*v31;
  (*(void (**)(long long *__return_ptr, void, uint64_t, uint64_t))(v49 + 128))(&v89, *v31, ObjectType, v49);
  sub_100028C3C((uint64_t)&v89, (uint64_t)&v92, &qword_1007A8E30);
  uint64_t v52 = (void *)v92;
  if (!(void)v92)
  {
    sub_1005B286C((uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    goto LABEL_37;
  }
  uint64_t v54 = (void *)*((void *)&v92 + 1);
  uint64_t v53 = (void *)v93;
  char v55 = BYTE8(v93);
  long long v56 = v94;
  swift_beginAccess();
  id v57 = v51;
  id v58 = v52;
  sub_1005A2974((uint64_t)v58, v57);
  swift_endAccess();

  *(void *)&long long v96 = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
  *((void *)&v96 + 1) = &protocol witness table for REMReminder;
  v95[0] = v58;
  TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)();
  v95[0] = v54;
  v95[1] = v53;
  v95[2] = v55 & 1;
  long long v96 = v56;
  id v59 = v58;
  uint64_t v60 = v81;
  sub_100599934((uint64_t)v87, (uint64_t)v95, v3, v82, v81);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  sub_1003CB334((uint64_t)v87);
  uint64_t v34 = v60;
LABEL_14:
  sub_1005B6A88(v34, v83, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)();
  swift_release();
  if (v87[0] == 1)
  {
    uint64_t v45 = 0;
    int v46 = 1;
  }
  else
  {
    uint64_t v45 = v87[1];
    int v46 = v88 & 1;
    sub_10047284C(v87[0]);
  }
  uint64_t v47 = v86;
  uint64_t v43 = (int *)v85;
  uint64_t v48 = v84;
  swift_release();
  uint64_t v61 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v61, (uint64_t)v13, &qword_100786EF0);
  uint64_t v62 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 48))(v13, 1, v62) == 1)
  {
    sub_10003B6F8((uint64_t)v13, &qword_100786EF0);
    uint64_t v30 = v83;
LABEL_21:
    uint64_t v37 = sub_1005B286C((uint64_t)v80, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    goto LABEL_22;
  }
  int v63 = v13[*(int *)(v62 + 64)];
  uint64_t v64 = sub_1005B286C((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  uint64_t v30 = v83;
  if (!v63) {
    goto LABEL_21;
  }
  char v65 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 568))(v64);
  uint64_t v37 = sub_1005B286C((uint64_t)v80, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  *(unsigned char *)(v30 + v43[39]) = v65;
LABEL_22:
  uint64_t v66 = v30 + v43[22];
  if (*(unsigned char *)(v66 + 8) == 1)
  {
    uint64_t v67 = v45 & ~(v45 >> 63);
    if (v46) {
      uint64_t v67 = v45;
    }
    if (v45 < 1) {
      char v68 = 1;
    }
    else {
      char v68 = v46;
    }
    *(void *)uint64_t v66 = v67;
    *(unsigned char *)(v66 + 8) = v68;
  }
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 480))(v37);
  uint64_t v71 = v69;
  if (v72)
  {
    uint64_t v74 = v70;
    char v73 = ((uint64_t (*)(uint64_t))v69)(v82) & 1;
    uint64_t v69 = sub_1001DB094(v71, v74, 1);
  }
  else
  {
    char v73 = v69 & 1;
  }
  *(unsigned char *)(v30 + v43[23]) = v73;
  *(unsigned char *)(v30 + v43[17]) = (*(uint64_t (**)(uint64_t))(*(void *)v3 + 456))(v69) & 1;
  uint64_t v75 = (*(uint64_t (**)(void))(*(void *)v3 + 424))();
  if (v75)
  {
    uint64_t v76 = *(void *)(v75 + 48);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v76 = 0;
  }
  *(void *)(v30 + v43[42]) = v76;
  sub_1005B6A88(v30, v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
  uint64_t v77 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v48 + 56))(v47, v77, 1, v43);
}

uint64_t sub_100589BC4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_10003B754(&qword_1007A8E20);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_beginAccess();
  uint64_t v13 = v12[12];
  uint64_t v14 = *(void *)(v13 + 16);
  swift_retain();
  if (!v14)
  {
LABEL_6:
    swift_endAccess();
    swift_release();
    uint64_t v20 = _swiftEmptyArrayStorage;
    if (!_swiftEmptyArrayStorage[2]) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  id v15 = a1;
  unint64_t v16 = sub_10035C188((uint64_t)v15);
  if ((v17 & 1) == 0)
  {

    goto LABEL_6;
  }
  uint64_t v18 = *(void *)(*(void *)(v13 + 56) + 8 * v16);
  swift_endAccess();
  swift_bridgeObjectRetain();

  swift_retain();
  id v19 = v15;
  uint64_t v20 = (void *)sub_1000502F8(v18, v12, (uint64_t)v19);
  swift_bridgeObjectRelease();
  swift_release_n();

  if (!v20[2])
  {
LABEL_4:
    uint64_t v21 = 1;
    goto LABEL_8;
  }
LABEL_7:
  sub_1005B2804((uint64_t)v20 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  uint64_t v21 = 0;
LABEL_8:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v21, 1, v8);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10003B6F8((uint64_t)v7, &qword_1007A8E20);
    uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a2, 1, 1, v22);
  }
  else
  {
    sub_1005B6A88((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    sub_1005B6A88((uint64_t)v11, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.Item();
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a2, 0, 1, v24);
  }
}

void *sub_100589EF4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1005B286C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_1005B6A88((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_10058A0C4(uint64_t a1, int a2)
{
  int v53 = a2;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v46 - v8;
  __chkstk_darwin(v10);
  uint64_t v63 = (uint64_t)&v46 - v11;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v12);
  uint64_t v64 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unint64_t v16 = (char *)&v46 - v15;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v46 - v19;
  unint64_t v66 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v48 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  uint64_t v49 = v2;
  uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  uint64_t v22 = *(void *)(v21 + 24);
  uint64_t v52 = *(void *)(a1 + 16);
  if (!v52)
  {
    swift_unknownObjectRetain();
    char v42 = _swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  uint64_t v47 = *(void *)(v21 + 32);
  uint64_t v51 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  uint64_t v50 = *(void *)(v18 + 72);
  uint64_t v62 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
  uint64_t v23 = (uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v58 = v22;
  swift_unknownObjectRetain();
  uint64_t v46 = a1;
  swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v60 = v20;
  while (1)
  {
    uint64_t v59 = v24;
    sub_1005B2804(v51 + v50 * v24, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v25 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter();
    if (v25)
    {
      id v26 = v25;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (v53) {
      break;
    }
LABEL_4:
    uint64_t v24 = v59 + 1;
    sub_1005B286C((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v24 == v52)
    {
      swift_bridgeObjectRelease();
      char v42 = (void *)v66;
LABEL_26:
      uint64_t v43 = *(void *)(v49 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
      uint64_t ObjectType = swift_getObjectType();
      v45._rawValue = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 144))(v42, ObjectType, v43);
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_10003B754(&qword_1007A8E18);
      Dictionary.merge(takingValuesIn:)(v45);
      swift_endAccess();
      swift_unknownObjectRelease();
      return (uint64_t)v45._rawValue;
    }
  }
  uint64_t v27 = v63;
  uint64_t v61 = *v62;
  v61(v63, 1, 1, v12);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.descendants(of:)();
  swift_release();
  sub_10003B6F8(v27, (uint64_t *)&unk_100788DC0);
  swift_retain();
  swift_retain();
  dispatch thunk of _AnySequenceBox._makeIterator()();
  swift_release();
  dispatch thunk of _AnyIteratorBoxBase.next()();
  uint64_t v28 = *v23;
  for (int i = (*v23)(v9, 1, v12); ; int i = v28(v9, 1, v12))
  {
    if (i == 1)
    {
      swift_release_n();
      swift_release();
      swift_release();
      uint64_t v20 = v60;
      goto LABEL_4;
    }
    sub_1005B6A88((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    TTRMutableTreeStorage.parent(of:)();
    swift_release();
    if (v28(v6, 1, v12) == 1)
    {
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
      goto LABEL_12;
    }
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1005B286C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (EnumCaseMultiPayload == 2) {
      break;
    }
LABEL_12:
    sub_1005B286C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    dispatch thunk of _AnyIteratorBoxBase.next()();
  }
  sub_1005B286C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_release_n();
  swift_release();
  swift_release();
  uint64_t v31 = v58;
  uint64_t v32 = swift_getObjectType();
  uint64_t v65 = v31;
  uint64_t v20 = v60;
  uint64_t v33 = v63;
  sub_1005B2804((uint64_t)v60, v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  v61(v33, 0, 1, v12);
  uint64_t v34 = *(void *)(v47 + 8);
  id v35 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 24);
  uint64_t v56 = v32;
  uint64_t v57 = v34;
  uint64_t v36 = v35(v33, v32);
  uint64_t result = sub_10003B6F8(v33, (uint64_t *)&unk_100788DC0);
  if ((v36 & 0x8000000000000000) == 0)
  {
    if (v36)
    {
      uint64_t v38 = 0;
      uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 32);
      uint64_t v55 = v57 + 32;
      do
      {
        uint64_t v65 = v58;
        uint64_t v39 = v63;
        sub_1005B2804((uint64_t)v20, v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        v61(v39, 0, 1, v12);
        v54(v38, v39, v56, v57);
        sub_10003B6F8(v39, (uint64_t *)&unk_100788DC0);
        char v40 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter();
        if (v40)
        {
          id v41 = v40;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v66 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        ++v38;
        sub_1005B286C(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v20 = v60;
      }
      while (v36 != v38);
    }
    goto LABEL_4;
  }
  __break(1u);
  return result;
}

uint64_t sub_10058A804@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10058A814(a1, a2);
}

uint64_t sub_10058A80C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10058A814(a1, a2);
}

uint64_t sub_10058A814@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v78 = sub_10003B754(&qword_1007936A0);
  __chkstk_darwin(v78);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v6 - 8);
  uint64_t v69 = (uint64_t)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v80 = (uint64_t)&v61 - v12;
  __chkstk_darwin(v13);
  uint64_t v70 = (uint64_t)&v61 - v14;
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
  unint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v77 = (uint64_t)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v71 = (char *)&v61 - v19;
  __chkstk_darwin(v20);
  uint64_t v74 = (uint64_t)&v61 - v21;
  uint64_t v22 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v75 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v66 = (uint64_t)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  *(void **)((char *)&v61 - v28) = a1;
  uint64_t v79 = (uint64_t)&v61 - v28;
  swift_storeEnumTagMultiPayload();
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  unint64_t v63 = v16 + 56;
  v62(v24, 1, 1, v15);
  swift_retain();
  uint64_t v30 = a1;
  swift_retain();
  uint64_t v31 = (void *)TTRMutableTreeStorage.children(of:)();
  swift_release();
  sub_10003B6F8((uint64_t)v24, (uint64_t *)&unk_100788DC0);
  uint64_t v32 = v31[2];
  uint64_t v64 = v29;
  unint64_t v76 = v16;
  if (v32)
  {
    uint64_t v33 = v65;
    uint64_t v34 = v74;
    sub_1005B2804((uint64_t)v31 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80)), v74, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1005B286C(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      swift_retain();
      uint64_t v36 = sub_100475E28((uint64_t)v31, v29);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v31 = v36;
    }
  }
  else
  {
    uint64_t v33 = v65;
    swift_bridgeObjectRelease();
    uint64_t v31 = _swiftEmptyArrayStorage;
  }
  uint64_t v37 = (uint64_t)v71;
  uint64_t v38 = v31[2];
  if (!v38)
  {
    v62((char *)v33, 1, 1, v15);
    goto LABEL_23;
  }
  uint64_t v67 = v25;
  char v68 = v10;
  unint64_t v39 = (*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v61 = v31;
  uint64_t v40 = (uint64_t)v31 + v39;
  uint64_t v74 = (uint64_t)(v75 + 7);
  v75 += 6;
  uint64_t v72 = *(void *)(v76 + 72);
  uint64_t v73 = v15;
  unint64_t v76 = v74 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v41 = v70;
  while (1)
  {
    sub_1005B2804(v40, v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v44 = v77;
    sub_1005B2804(v37, v77, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v45 = v69;
      sub_1005B6A88(v44, v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1005B2804(v45, v41, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      sub_1005B286C(v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v74;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))v74)(v41, 0, 1, v25);
    }
    else
    {
      sub_1005B286C(v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v46 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v74;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v74)(v41, 1, 1, v25);
    }
    uint64_t v47 = v80;
    sub_1005B2804(v79, v80, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    v46(v47, 0, 1, v25);
    uint64_t v48 = (uint64_t)&v5[*(int *)(v78 + 48)];
    sub_10003B694(v41, (uint64_t)v5, &qword_10078C890);
    sub_10003B694(v47, v48, &qword_10078C890);
    uint64_t v49 = *v75;
    if ((*v75)(v5, 1, v25) == 1) {
      break;
    }
    uint64_t v50 = v80;
    uint64_t v51 = (uint64_t)v5;
    uint64_t v52 = v5;
    uint64_t v53 = (uint64_t)v68;
    sub_10003B694(v51, (uint64_t)v68, &qword_10078C890);
    if (v49((char *)v48, 1, v25) == 1)
    {
      sub_10003B6F8(v50, &qword_10078C890);
      uint64_t v54 = v52;
      uint64_t v41 = v70;
      sub_10003B6F8(v70, &qword_10078C890);
      sub_1005B286C(v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      uint64_t v43 = v73;
      uint64_t v5 = v54;
      uint64_t v37 = (uint64_t)v71;
      uint64_t v25 = v67;
      goto LABEL_8;
    }
    uint64_t v55 = (uint64_t)v52;
    uint64_t v56 = v66;
    sub_1005B6A88(v48, v66, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    char v57 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)();
    sub_1005B286C(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10003B6F8(v50, &qword_10078C890);
    uint64_t v41 = v70;
    sub_10003B6F8(v70, &qword_10078C890);
    sub_1005B286C(v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10003B6F8(v55, &qword_10078C890);
    uint64_t v43 = v73;
    uint64_t v5 = (char *)v55;
    uint64_t v37 = (uint64_t)v71;
    uint64_t v25 = v67;
    if (v57) {
      goto LABEL_21;
    }
LABEL_9:
    sub_1005B286C(v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    v40 += v72;
    if (!--v38)
    {
      uint64_t v58 = 1;
      uint64_t v59 = v65;
      goto LABEL_22;
    }
  }
  sub_10003B6F8(v80, &qword_10078C890);
  sub_10003B6F8(v41, &qword_10078C890);
  unsigned int v42 = v49((char *)v48, 1, v25);
  uint64_t v43 = v73;
  if (v42 != 1)
  {
LABEL_8:
    sub_10003B6F8((uint64_t)v5, &qword_1007936A0);
    goto LABEL_9;
  }
  sub_10003B6F8((uint64_t)v5, &qword_10078C890);
LABEL_21:
  uint64_t v59 = v65;
  sub_1005B6A88(v37, v65, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v58 = 0;
LABEL_22:
  v62((char *)v59, v58, 1, v43);
LABEL_23:
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1005B286C(v79, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
}

uint64_t sub_10058B0B0@<X0>(uint64_t a1@<X8>)
{
  id v2 = sub_10058BD70();
  if (v3 == -1) {
    goto LABEL_23;
  }
  uint64_t v4 = v2;
  char v5 = v3;
  if ((v3 & 1) == 0)
  {
    uint64_t v73 = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
    uint64_t v74 = &protocol witness table for REMReminder;
    *(void *)&long long v71 = v4;
    sub_100038ED8(&v71, (uint64_t)&v114);
    uint64_t v6 = v115;
    id v7 = v4;
    if (v6) {
      goto LABEL_4;
    }
LABEL_14:
    sub_100095434(v4, v5);
    sub_10003B6F8((uint64_t)&v114, &qword_1007874A0);
LABEL_23:
    sub_1005B6B58(&v71);
    goto LABEL_24;
  }
  uint64_t v115 = sub_1000368FC(0, &qword_100791DA8);
  v116 = (uint64_t (**)(uint64_t, void *))&protocol witness table for REMReminderChangeItem;
  *(void *)&long long v114 = v4;
  id v41 = v4;
  if (!v115) {
    goto LABEL_14;
  }
LABEL_4:
  sub_100038ED8(&v114, (uint64_t)v68);
  uint64_t v8 = v69;
  uint64_t v9 = v70;
  sub_100038D28(v68, v69);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v9 + 176))(&v114, v8, v9);
  if (!v115)
  {
    sub_100095434(v4, v5);
    sub_10003B6F8((uint64_t)&v114, &qword_100787480);
LABEL_22:
    sub_100038CD8((uint64_t)v68);
    goto LABEL_23;
  }
  sub_100038ED8(&v114, (uint64_t)v65);
  uint64_t v10 = v66;
  uint64_t v11 = v67;
  sub_100038D28(v65, v66);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v11 + 88))(&v114, v10, v11);
  uint64_t v12 = v115;
  if (!v115)
  {
    sub_100095434(v4, v5);
    unsigned int v42 = (uint64_t *)&unk_100791D90;
LABEL_18:
    sub_10003B6F8((uint64_t)&v114, v42);
LABEL_21:
    sub_100038CD8((uint64_t)v65);
    goto LABEL_22;
  }
  uint64_t v13 = v116;
  sub_100038D28(&v114, v115);
  unint64_t v14 = v13[1](v12, v13);
  sub_100038CD8((uint64_t)&v114);
  uint64_t v15 = v69;
  uint64_t v16 = v70;
  sub_100038D28(v68, v69);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v16 + 200))(&v114, v15, v16);
  uint64_t v17 = v115;
  if (!v115)
  {
    swift_bridgeObjectRelease();
    sub_100095434(v4, v5);
    unsigned int v42 = &qword_100787478;
    goto LABEL_18;
  }
  uint64_t v18 = v116;
  sub_100038D28(&v114, v115);
  uint64_t v19 = (void *)v18[1](v17, v18);
  sub_100038CD8((uint64_t)&v114);
  if (!v19)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    sub_100095434(v4, v5);
    goto LABEL_21;
  }
  uint64_t v20 = v66;
  uint64_t v21 = v67;
  sub_100038D28(v65, v66);
  uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 72))(v20, v21);
  if (!v22
    || (v23 = v22, id v24 = [v22 objectID], v23, !v24))
  {

    goto LABEL_20;
  }
  id v25 = v19;
  uint64_t v26 = sub_1005B21D8(v14, v25, (SEL *)&selRef_assigneeID);

  id v27 = v25;
  uint64_t v28 = sub_1005B21D8(v14, v27, (SEL *)&selRef_originatorID);
  swift_bridgeObjectRelease();

  if (v26)
  {
    unint64_t v63 = v27;
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    id v29 = v26;
    id v30 = [v29 objectID];
    static NSObject.== infix(_:_:)();

    id v31 = v29;
    TTRParticipantModel.init(sharee:)();
    id v32 = [v31 objectID];
    TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)();
    long long v52 = v92;
    uint64_t v53 = v93;
    uint64_t v54 = v94;
    uint64_t v55 = v95;
    uint64_t v56 = v96;
    uint64_t v57 = v97;
    uint64_t v58 = v98;
    uint64_t v59 = v99;
    uint64_t v60 = v100;
    uint64_t v61 = v101;
    uint64_t v62 = v102;
    char v51 = v103;
    uint64_t v33 = v104;
    if (v28)
    {
      uint64_t v50 = v104;
      id v34 = v28;
      id v35 = [v34 objectID];
      static NSObject.== infix(_:_:)();

      id v36 = v34;
      TTRParticipantModel.init(sharee:)();
      id v37 = [v36 objectID];
      TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)();
      long long v48 = v106;
      long long v49 = v105;
      long long v46 = v108;
      long long v47 = v107;
      long long v45 = v109;
      uint64_t v38 = v110;
      uint64_t v39 = v111;
      uint64_t v44 = v112;
      uint64_t v40 = v113;

      sub_100095434(v4, v5);
      long long v71 = v52;
      uint64_t v72 = v53;
      uint64_t v73 = v54;
      uint64_t v74 = v55;
      uint64_t v75 = v56;
      uint64_t v76 = v57;
      uint64_t v77 = v58;
      uint64_t v78 = v59;
      uint64_t v79 = v60;
      uint64_t v80 = v61;
      uint64_t v81 = v62;
      char v82 = v51;
      *(_DWORD *)uint64_t v83 = *(_DWORD *)v64;
      *(_DWORD *)&v83[3] = *(_DWORD *)&v64[3];
      uint64_t v84 = v50;
      long long v85 = v49;
      long long v86 = v48;
      long long v87 = v47;
      long long v88 = v46;
      long long v89 = v45;
      *(void *)&long long v90 = v38;
      *((void *)&v90 + 1) = v39;
      *(void *)&long long v91 = v44;
      *((void *)&v91 + 1) = v40;
    }
    else
    {
      sub_100095434(v4, v5);

      long long v71 = v52;
      uint64_t v72 = v53;
      uint64_t v73 = v54;
      uint64_t v74 = v55;
      uint64_t v75 = v56;
      uint64_t v76 = v57;
      uint64_t v77 = v58;
      uint64_t v78 = v59;
      uint64_t v79 = v60;
      uint64_t v80 = v61;
      uint64_t v81 = v62;
      char v82 = v51;
      uint64_t v84 = v33;
      long long v85 = 0u;
      long long v86 = 0u;
      long long v87 = 0u;
      long long v88 = 0u;
      long long v89 = 0u;
      long long v90 = 0u;
      long long v91 = 0u;
    }
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v71);
  }
  else
  {
    sub_100095434(v4, v5);

    sub_1005B6B58(&v71);
  }
  sub_100038CD8((uint64_t)v65);
  sub_100038CD8((uint64_t)v68);
LABEL_24:
  sub_100028C3C((uint64_t)&v71, (uint64_t)&v114, (uint64_t *)&unk_100791F10);
  return sub_100028C3C((uint64_t)&v114, a1, (uint64_t *)&unk_100791F10);
}

uint64_t sub_10058B798()
{
  void (**v9)(long long *__return_ptr, uint64_t, void *);
  uint64_t v10;
  uint64_t (**v11)(uint64_t, void *);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (**v16)(uint64_t, void *);
  void *v17;
  void *v18;
  id v19;
  id v20;
  id v21;
  uint64_t *v22;
  long long *v23;
  long long v25;
  uint64_t v26;
  void (**v27)(long long *__return_ptr, uint64_t, void *);
  long long v28;
  uint64_t v29;
  uint64_t (**v30)(uint64_t, void *);
  void v31[3];
  uint64_t v32;
  uint64_t v33;

  id v0 = sub_10058BD70();
  if (v1 == -1) {
    return 0;
  }
  id v2 = v0;
  char v3 = v1;
  if ((v1 & 1) == 0)
  {
    uint64_t v26 = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
    id v27 = (void (**)(long long *__return_ptr, uint64_t, void *))&protocol witness table for REMReminder;
    *(void *)&id v25 = v2;
    sub_100038ED8(&v25, (uint64_t)&v28);
    uint64_t v4 = v29;
    id v5 = v2;
    if (v4) {
      goto LABEL_4;
    }
LABEL_11:
    sub_100095434(v2, v3);
    sub_10003B6F8((uint64_t)&v28, &qword_1007874A0);
    return v4;
  }
  uint64_t v4 = sub_1000368FC(0, &qword_100791DA8);
  id v29 = v4;
  id v30 = (uint64_t (**)(uint64_t, void *))&protocol witness table for REMReminderChangeItem;
  *(void *)&uint64_t v28 = v2;
  uint64_t v21 = v2;
  if (!v4) {
    goto LABEL_11;
  }
LABEL_4:
  sub_100038ED8(&v28, (uint64_t)v31);
  uint64_t v6 = v32;
  uint64_t v7 = v33;
  sub_100038D28(v31, v32);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v7 + 176))(&v25, v6, v7);
  uint64_t v8 = v26;
  if (!v26)
  {
    sub_100095434(v2, v3);
    uint64_t v22 = &qword_100787480;
    uint64_t v23 = &v25;
LABEL_16:
    sub_10003B6F8((uint64_t)v23, v22);
LABEL_17:
    sub_100038CD8((uint64_t)v31);
    return 0;
  }
  uint64_t v9 = v27;
  sub_100038D28(&v25, v26);
  v9[11](&v28, v8, v9);
  uint64_t v10 = v29;
  if (!v29)
  {
    sub_100095434(v2, v3);
    sub_100038CD8((uint64_t)&v25);
    uint64_t v22 = (uint64_t *)&unk_100791D90;
LABEL_15:
    uint64_t v23 = &v28;
    goto LABEL_16;
  }
  uint64_t v11 = v30;
  sub_100038D28(&v28, v29);
  uint64_t v12 = v11[4](v10, v11);
  sub_100038CD8((uint64_t)&v28);
  sub_100038CD8((uint64_t)&v25);
  uint64_t v13 = v32;
  unint64_t v14 = v33;
  sub_100038D28(v31, v32);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 176))(&v28, v13, v14);
  uint64_t v15 = v29;
  if (!v29)
  {
    swift_bridgeObjectRelease();
    sub_100095434(v2, v3);
    uint64_t v22 = &qword_100787480;
    goto LABEL_15;
  }
  uint64_t v16 = v30;
  sub_100038D28(&v28, v29);
  uint64_t v17 = (void *)v16[9](v15, v16);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    sub_100095434(v2, v3);
    sub_100038CD8((uint64_t)&v28);
    goto LABEL_17;
  }
  uint64_t v18 = v17;
  uint64_t v19 = [v17 objectID];

  sub_100038CD8((uint64_t)&v28);
  if (!v19)
  {
    swift_bridgeObjectRelease();
    sub_100095434(v2, v3);
    goto LABEL_17;
  }
  uint64_t v20 = v19;
  uint64_t v4 = (uint64_t)sub_1005B19F0(v12);

  sub_100095434(v2, v3);
  swift_bridgeObjectRelease();

  sub_100038CD8((uint64_t)v31);
  return v4;
}

uint64_t sub_10058BAD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return a2();
  }
  uint64_t v5 = v2;
  uint64_t v7 = v4 - 1;
  uint64_t v8 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = a1 + v9 + *(void *)(v8 + 72) * v7;
  sub_10003B754((uint64_t *)&unk_10078E960);
  uint64_t v11 = swift_allocObject() + v9;
  sub_1005B2804(v10, v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_unknownObjectRetain();
  uint64_t v12 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter();
  if (v12)
  {
    id v13 = v12;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  uint64_t v14 = *(void *)(v5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 144))(_swiftEmptyArrayStorage, ObjectType, v14);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_10003B754(&qword_1007A8E18);
  Dictionary.merge(takingValuesIn:)((Swift::OpaquePointer)v16);
  swift_endAccess();
  swift_unknownObjectRelease();
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v17 = (void *)sub_1000FFC8C(v16);
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  if (!v17) {
    return a2();
  }

  id v20 = [v19 list];
  return (uint64_t)v20;
}

id sub_10058BD70()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)();
  swift_release();
  unint64_t v8 = v15[1];
  swift_release();
  if (v8 >= 2)
  {
    id v9 = *(id *)(v8 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
    sub_10047284C(v8);
  }
  else
  {
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    id v9 = 0;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        sub_1005B286C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        id v9 = 0;
        break;
      case 3u:
        return v9;
      default:
        sub_1005B6A88((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        uint64_t v10 = *v4;
        uint64_t v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
        swift_beginAccess();
        uint64_t v12 = *v11;
        id v13 = v10;
        swift_bridgeObjectRetain();
        id v9 = sub_100598448(v13, v12);

        swift_bridgeObjectRelease();
        sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        break;
    }
  }
  return v9;
}

void sub_10058BFE0(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = sub_1005993E8;
  *(void *)(a1 + 32) = 0;
}

uint64_t sub_10058C000@<X0>(uint64_t a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079C900);
  uint64_t v70 = *(void *)(v2 - 8);
  uint64_t v71 = v2;
  __chkstk_darwin(v2);
  uint64_t v67 = (uint64_t)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10003B754(&qword_10078FAA0);
  __chkstk_darwin(v65);
  uint64_t v64 = (char *)&v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v66 = (uint64_t)&v64 - v6;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v64 - v11;
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (void **)((char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v64 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v64 - v21;
  __chkstk_darwin(v23);
  uint64_t v74 = (uint64_t)&v64 - v24;
  uint64_t v25 = sub_10003B754(&qword_1007A0A08);
  __chkstk_darwin(v25 - 8);
  char v68 = (char *)&v64 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v28 = __chkstk_darwin(v27);
  uint64_t v69 = (char *)&v64 - v29;
  uint64_t v30 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v14 + 56);
  uint64_t v76 = v14 + 56;
  v75(v12, 1, 1, v13, v28);
  uint64_t ObjectType = v30;
  swift_retain();
  swift_retain();
  id v31 = (void *)TTRMutableTreeStorage.children(of:)();
  swift_release();
  sub_10003B6F8((uint64_t)v12, (uint64_t *)&unk_100788DC0);
  if (v31[2])
  {
    sub_1005B2804((uint64_t)v31 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), (uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1005B286C((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      uint64_t v33 = ObjectType;
      swift_retain();
      id v34 = sub_100475E28((uint64_t)v31, v33);
      swift_bridgeObjectRelease();
      swift_release();
      id v31 = v34;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    id v31 = _swiftEmptyArrayStorage;
  }
  uint64_t v35 = v31[2];
  id v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v75;
  if (v35)
  {
    sub_1005B2804((uint64_t)v31+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * (v35 - 1), (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v37 = 0;
  }
  else
  {
    uint64_t v37 = 1;
  }
  v36(v9, v37, 1, v13);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) == 1)
  {
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
    uint64_t v39 = (uint64_t)v69;
    uint64_t v38 = v70;
    uint64_t v40 = v71;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v69, 1, 1, v71);
    uint64_t v41 = v72;
    uint64_t v42 = (uint64_t)v68;
    goto LABEL_28;
  }
  uint64_t v43 = v74;
  sub_1005B6A88((uint64_t)v9, v74, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v44 = ObjectType;
  sub_1005B2804(v43, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  v36(v12, 0, 1, v13);
  swift_retain();
  uint64_t v45 = TTRMutableTreeStorage.numberOfChildren(of:)();
  swift_release();
  sub_10003B6F8((uint64_t)v12, (uint64_t *)&unk_100788DC0);
  if (v45 < 0)
  {
LABEL_34:
    __break(1u);
    JUMPOUT(0x10058CA08);
  }
  if (v45)
  {
    uint64_t v46 = v45;
    while (2)
    {
      if (v45 >= v46)
      {
        uint64_t v47 = v46--;
        sub_1005B2804(v74, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        ((void (*)(char *, void, uint64_t, uint64_t))v75)(v12, 0, 1, v13);
        swift_retain();
        TTRMutableTreeStorage.child(_:of:)();
        swift_release();
        sub_10003B6F8((uint64_t)v12, (uint64_t *)&unk_100788DC0);
        sub_1005B2804((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 7u:
          case 8u:
          case 9u:
            sub_1005B286C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            goto LABEL_26;
          case 4u:
            sub_1005B286C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            goto LABEL_14;
          case 5u:
            long long v52 = v16[2];
            goto LABEL_25;
          case 6u:
            long long v52 = *v16;
LABEL_25:

            goto LABEL_26;
          case 0xAu:
          case 0xBu:
LABEL_26:
            sub_1005B286C((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            goto LABEL_27;
          default:
            sub_1005B286C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            if (qword_100785708 != -1) {
              swift_once();
            }
            uint64_t v48 = type metadata accessor for Logger();
            sub_100018BF8(v48, (uint64_t)qword_1007A8768);
            long long v49 = Logger.logObject.getter();
            os_log_type_t v50 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v49, v50))
            {
              char v51 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)char v51 = 0;
              _os_log_impl((void *)&_mh_execute_header, v49, v50, "Unexpected item type: section", v51, 2u);
              swift_slowDealloc();
            }

            uint64_t v44 = ObjectType;
LABEL_14:
            sub_1005B286C((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            if (v46) {
              continue;
            }
            goto LABEL_32;
        }
      }
      break;
    }
    __break(1u);
    goto LABEL_34;
  }
LABEL_32:
  uint64_t v47 = 0;
LABEL_27:
  uint64_t v53 = *(void *)(v44 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = v74;
  sub_1005B2804(v74, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v55 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v75;
  ((void (*)(char *, void, uint64_t, uint64_t))v75)(v12, 0, 1, v13);
  uint64_t v56 = (uint64_t)v64;
  v55(v64, 1, 1, v13);
  sub_10000A550((uint64_t)v12, v56, (uint64_t *)&unk_100788DC0);
  *(void *)(v56 + *(int *)(v65 + 36)) = v47;
  uint64_t v57 = v56;
  uint64_t v58 = v66;
  sub_100028C3C(v57, v66, &qword_10078FAA0);
  uint64_t v39 = (uint64_t)v69;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 32))(v58, ObjectType, v53);
  sub_10003B6F8(v58, &qword_10078FAA0);
  sub_1005B286C(v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v38 = v70;
  uint64_t v40 = v71;
  uint64_t v42 = (uint64_t)v68;
  uint64_t v41 = v72;
LABEL_28:
  swift_release();
  sub_10003B694(v39, v42, &qword_1007A0A08);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v42, 1, v40) == 1)
  {
    uint64_t v59 = sub_10003B754(&qword_10079D590);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v41, 1, 1, v59);
  }
  else
  {
    uint64_t v60 = v67;
    sub_100028C3C(v42, v67, &qword_10079C900);
    uint64_t v61 = sub_10003B754(&qword_10079D590);
    uint64_t v62 = *(int *)(v61 + 48);
    sub_10003B694(v60, v41, (uint64_t *)&unk_100788DC0);
    *(void *)(v41 + v62) = *(void *)(v60 + *(int *)(v40 + 36));
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v41, 0, 1, v61);
    sub_10003B6F8(v60, &qword_10079C900);
  }
  return sub_10003B6F8(v39, &qword_1007A0A08);
}

uint64_t sub_10058CA38@<X0>(void (**a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v79 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v79);
  uint64_t v78 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v82 = (char *)&v70 - v6;
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v7 - 8);
  uint64_t v73 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v72 = (char *)&v70 - v10;
  uint64_t v11 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v83 = *(void **)(v11 - 8);
  uint64_t v84 = v11;
  __chkstk_darwin(v11);
  uint64_t v71 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v76);
  uint64_t v77 = (char *)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v80 = *(void *)(v17 - 8);
  uint64_t v81 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v17;
  __chkstk_darwin(v17);
  uint64_t v75 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v86 = (uint64_t)&v70 - v20;
  uint64_t v21 = sub_10003B754(&qword_1007A0A70);
  __chkstk_darwin(v21 - 8);
  uint64_t v74 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v70 - v24;
  uint64_t v26 = sub_10003B754(&qword_1007A8DA0);
  __chkstk_darwin(v26 - 8);
  double v28 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_10003B754(&qword_1007936B0);
  uint64_t v30 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v32 = (char *)&v70 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_10045EBE4(a1, (uint64_t)v28);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29) == 1)
  {
    uint64_t v33 = v83;
    uint64_t v34 = v84;
    sub_10003B6F8((uint64_t)v28, &qword_1007A8DA0);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100018BF8(v35, (uint64_t)qword_1007A8768);
    uint64_t v36 = (uint64_t)a1;
    uint64_t v37 = (uint64_t)v82;
    sub_1005B2804(v36, (uint64_t)v82, type metadata accessor for TTRRemindersListReminderCreationLocation);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = (uint8_t *)swift_slowAlloc();
      v88[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 136315138;
      sub_1005B2804(v37, v78, type metadata accessor for TTRRemindersListReminderCreationLocation);
      uint64_t v41 = String.init<A>(describing:)();
      uint64_t v87 = sub_1000385A8(v41, v42, v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C(v37, type metadata accessor for TTRRemindersListReminderCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Cannot resolve ReminderCreationLocation {location: %s}", v40, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1005B286C(v37, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }

    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v33[7])(v85, 1, 1, v34);
  }
  else
  {
    sub_100028C3C((uint64_t)v28, (uint64_t)v32, &qword_1007936B0);
    uint64_t v44 = v83;
    uint64_t v43 = v84;
    uint64_t v45 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v83[7];
    v45(v25, 1, 1, v84);
    char v82 = (char *)v2;
    swift_retain();
    sub_100461C08((uint64_t)v32, (uint64_t)v16);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, void (*)(uint64_t, uint64_t, uint64_t, uint64_t)))(v80 + 48))(v16, 1, v81) == 1)
    {
      sub_10003B6F8((uint64_t)v32, &qword_1007936B0);
      sub_10003B6F8((uint64_t)v16, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      uint64_t v70 = v32;
      sub_1005B6A88((uint64_t)v16, v86, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v47 = (uint64_t)v77;
      TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if ((EnumCaseMultiPayload - 1) >= 2)
      {
        if (!EnumCaseMultiPayload) {
          sub_1005B286C(v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        }
        uint64_t v60 = (uint64_t)v70;
        uint64_t v61 = (uint64_t)v75;
        if (qword_100785708 != -1) {
          swift_once();
        }
        uint64_t v62 = type metadata accessor for Logger();
        sub_100018BF8(v62, (uint64_t)qword_1007A8768);
        sub_1005B2804(v86, v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        unint64_t v63 = Logger.logObject.getter();
        os_log_type_t v64 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = (uint8_t *)swift_slowAlloc();
          v88[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v65 = 136315138;
          sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v66 = TTRTreeStorageItem.treeItemDescription.getter();
          uint64_t v87 = sub_1000385A8(v66, v67, v88);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1005B286C(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "Unexpected item type {item: %s}", v65, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v68 = (uint64_t)v70;
        }
        else
        {

          sub_1005B286C(v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v68 = v60;
        }
        sub_10003B6F8(v68, &qword_1007936B0);
        sub_1005B286C(v86, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        long long v49 = v44;
        sub_1005B286C(v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        swift_retain();
        os_log_type_t v50 = sub_100460D4C();
        swift_release();
        uint64_t v51 = v50[2];
        if (v51)
        {
          uint64_t v81 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v45;
          char v82 = v25;
          uint64_t v52 = v43;
          uint64_t v53 = (uint64_t)v50
              + ((*((unsigned __int8 *)v49 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v49 + 80));
          uint64_t v54 = v49[9];
          uint64_t v83 = v50;
          swift_bridgeObjectRetain();
          uint64_t v56 = (uint64_t)v72;
          uint64_t v55 = (uint64_t)v73;
          uint64_t v57 = (uint64_t)v71;
          while (1)
          {
            sub_1005B2804(v53, v57, type metadata accessor for TTRRemindersListUncommittedReminder);
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
            char v58 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
            sub_1005B286C(v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            sub_1005B286C(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            if (v58) {
              break;
            }
            sub_1005B286C(v57, type metadata accessor for TTRRemindersListUncommittedReminder);
            v53 += v54;
            if (!--v51)
            {
              swift_bridgeObjectRelease();
              uint64_t v25 = v82;
              uint64_t v59 = v74;
              v81(v74, 1, 1, v52);
              goto LABEL_27;
            }
          }
          swift_bridgeObjectRelease();
          uint64_t v59 = v74;
          sub_1005B6A88(v57, v74, type metadata accessor for TTRRemindersListUncommittedReminder);
          uint64_t v69 = 0;
          uint64_t v43 = v52;
          uint64_t v45 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v81;
          uint64_t v25 = v82;
        }
        else
        {
          uint64_t v69 = 1;
          uint64_t v59 = v74;
        }
        v45((char *)v59, v69, 1, v43);
LABEL_27:
        swift_bridgeObjectRelease();
        sub_10003B6F8((uint64_t)v25, &qword_1007A0A70);
        sub_10003B6F8((uint64_t)v70, &qword_1007936B0);
        sub_1005B286C(v86, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100028C3C(v59, (uint64_t)v25, &qword_1007A0A70);
      }
    }
    return sub_100028C3C((uint64_t)v25, v85, &qword_1007A0A70);
  }
}

uint64_t sub_10058D5C8@<X0>(void (**a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, int a2@<W1>, int a3@<W2>, uint64_t (*a4)(id)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v155 = a6;
  uint64_t v156 = a7;
  uint64_t v159 = a5;
  v160 = a4;
  int v153 = a3;
  int v154 = a2;
  uint64_t v165 = a8;
  uint64_t v164 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v162 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  uint64_t v147 = (uint64_t)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v149 = (uint64_t)&v137 - v12;
  __chkstk_darwin(v13);
  v142 = (char *)&v137 - v14;
  uint64_t v15 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v139 = (uint64_t)&v137 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v17 - 8);
  uint64_t v140 = (uint64_t)&v137 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v19 - 8);
  uint64_t v146 = (uint64_t)&v137 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v143 = (id *)((char *)&v137 - v22);
  uint64_t v157 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v157);
  v161 = (char *)&v137 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v158 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v137 - v25);
  uint64_t v26 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v26 - 8);
  double v28 = (char *)&v137 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v29 - 8);
  uint64_t v145 = (uint64_t)&v137 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v151 = *(void *)(v31 - 8);
  uint64_t v152 = v31;
  __chkstk_darwin(v31);
  v150 = (char *)&v137 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  v163 = (char *)&v137 - v34;
  uint64_t v35 = sub_10003B754(&qword_1007A8DA0);
  __chkstk_darwin(v35 - 8);
  uint64_t v144 = (uint64_t)&v137 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v37);
  os_log_type_t v39 = (char *)&v137 - v38;
  uint64_t v40 = sub_10003B754(&qword_1007936B0);
  uint64_t v41 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v148 = (uint64_t)&v137 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v141 = (uint64_t)&v137 - v44;
  __chkstk_darwin(v45);
  uint64_t v47 = (char *)&v137 - v46;
  uint64_t v48 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  uint64_t v49 = v8;
  swift_retain();
  uint64_t v50 = (uint64_t)a1;
  sub_10045EBE4(a1, (uint64_t)v39);
  swift_release();
  uint64_t v51 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v51(v39, 1, v40) == 1)
  {
    sub_10003B6F8((uint64_t)v39, &qword_1007A8DA0);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v52 = type metadata accessor for Logger();
    sub_100018BF8(v52, (uint64_t)qword_1007A8768);
    uint64_t v53 = (uint64_t)v161;
    sub_1005B2804(v50, (uint64_t)v161, type metadata accessor for TTRRemindersListReminderCreationLocation);
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      v166[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      sub_1005B2804(v53, (uint64_t)v158, type metadata accessor for TTRRemindersListReminderCreationLocation);
      uint64_t v57 = String.init<A>(describing:)();
      uint64_t v167 = sub_1000385A8(v57, v58, v166);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C(v53, type metadata accessor for TTRRemindersListReminderCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Cannot resolve ReminderCreationLocation {location: %s}", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1005B286C(v53, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }

    goto LABEL_32;
  }
  sub_100028C3C((uint64_t)v39, (uint64_t)v47, &qword_1007936B0);
  swift_retain();
  sub_100461FF0((uint64_t)v47, (uint64_t)v28);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v28, 1, v164) == 1)
  {
    sub_10003B6F8((uint64_t)v28, (uint64_t *)&unk_100788DC0);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v138 = v47;
    uint64_t v59 = v145;
    sub_1005B6A88((uint64_t)v28, v145, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v60 = *(void *)(v8 + v48);
    uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(void *)v8 + 920);
    swift_retain();
    char v62 = v61(v59, v60, &off_10074D330, 1);
    swift_release();
    if (v62)
    {
      unint64_t v63 = v158;
      sub_1005B2804(v59, (uint64_t)v158, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      swift_storeEnumTagMultiPayload();
      swift_retain();
      uint64_t v64 = v144;
      sub_10045EBE4(v63, v144);
      swift_release();
      sub_1005B286C((uint64_t)v63, type metadata accessor for TTRRemindersListReminderCreationLocation);
      uint64_t v65 = v59;
      if (v51((char *)v64, 1, v40) == 1)
      {
        sub_10003B6F8(v64, &qword_1007A8DA0);
        if (qword_100785708 != -1) {
          swift_once();
        }
        uint64_t v66 = type metadata accessor for Logger();
        sub_100018BF8(v66, (uint64_t)qword_1007A8768);
        unint64_t v67 = Logger.logObject.getter();
        os_log_type_t v68 = static os_log_type_t.fault.getter();
        BOOL v69 = os_log_type_enabled(v67, v68);
        uint64_t v70 = (uint64_t)v138;
        if (v69)
        {
          uint64_t v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v71 = 0;
          _os_log_impl((void *)&_mh_execute_header, v67, v68, "Cannot obtain tree location for placeholderReminder", v71, 2u);
          swift_slowDealloc();
        }

        sub_1005B286C(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v72 = v70;
      }
      else
      {
        uint64_t v110 = v64;
        uint64_t v111 = v141;
        sub_100028C3C(v110, v141, &qword_1007936B0);
        uint64_t v112 = v49;
        uint64_t v113 = v49 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
        swift_beginAccess();
        uint64_t v114 = v139;
        sub_10003B694(v113, v139, &qword_100786EF0);
        uint64_t v115 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v115 - 8) + 48))(v114, 1, v115) == 1)
        {
          sub_10003B6F8(v114, &qword_100786EF0);
          uint64_t v116 = type metadata accessor for TTRTemplatePublicLinkData();
          uint64_t v117 = v140;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56))(v140, 1, 1, v116);
          v118 = &selRef_newObjectID;
        }
        else
        {
          uint64_t v117 = v140;
          sub_10003B694(v114 + *(int *)(v115 + 100), v140, &qword_10079BAB0);
          sub_1005B286C(v114, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
          uint64_t v119 = type metadata accessor for TTRTemplatePublicLinkData();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v119 - 8) + 48))(v117, 1, v119) == 1)v118 = &selRef_newObjectID; {
          else
          }
            v118 = &selRef_newObjectIDForSavedReminder;
        }
        uint64_t v120 = (uint64_t)v138;
        uint64_t v121 = (uint64_t)v142;
        v122 = v143;
        sub_10003B6F8(v117, &qword_10079BAB0);
        id v123 = [self *v118];
        uint64_t v162 = v112;
        sub_100595AEC(v123, v111, (uint64_t)v122);

        sub_1005B2804((uint64_t)v122, v121, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        swift_storeEnumTagMultiPayload();
        id v124 = *v122;
        id v125 = *v122;
        v126 = (void *)v160(v124);

        uint64_t v73 = (uint64_t)v163;
        if (v126)
        {
          uint64_t v127 = v65;
          uint64_t v128 = v111;
          uint64_t v129 = v149;
          sub_1005B2804(v121, v149, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          type metadata accessor for TTRRemindersListEditingSessionState(0);
          swift_allocObject();
          uint64_t v130 = sub_1003C0D8C(v129, (uint64_t)v126);
          uint64_t v131 = v148;
          sub_10003B694(v128, v148, &qword_1007936B0);
          sub_1005B2804(v121, v129, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          id v132 = v126;
          swift_retain();
          sub_100459054(v131, v129, v130, v73);
          uint64_t v85 = (char *)[v132 remObjectID];

          swift_release();
          sub_1005B286C(v121, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1005B286C((uint64_t)v143, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_10003B6F8(v128, &qword_1007936B0);
          sub_1005B286C(v127, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          uint64_t v49 = v162;
          goto LABEL_22;
        }
        if (qword_100785708 != -1) {
          swift_once();
        }
        uint64_t v133 = type metadata accessor for Logger();
        sub_100018BF8(v133, (uint64_t)qword_1007A8768);
        v134 = Logger.logObject.getter();
        os_log_type_t v135 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v134, v135))
        {
          v136 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v136 = 0;
          _os_log_impl((void *)&_mh_execute_header, v134, v135, "cannot create placeholderReminder, createReminderChangeItem returns nil.", v136, 2u);
          swift_slowDealloc();
        }

        sub_1005B286C(v121, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B286C((uint64_t)v122, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        sub_10003B6F8(v111, &qword_1007936B0);
        sub_1005B286C(v65, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v72 = v120;
      }
LABEL_31:
      sub_10003B6F8(v72, &qword_1007936B0);
LABEL_32:
      uint64_t v103 = sub_10003B754(&qword_1007A1528);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v103 - 8) + 56))(v165, 1, 1, v103);
    }
    sub_1005B286C(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v47 = v138;
  }
  else
  {
    sub_1005B286C((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  uint64_t v73 = (uint64_t)v163;
  uint64_t v74 = (void *)v160(0);
  if (!v74)
  {
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v99 = type metadata accessor for Logger();
    sub_100018BF8(v99, (uint64_t)qword_1007A8768);
    uint64_t v100 = Logger.logObject.getter();
    os_log_type_t v101 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v100, v101))
    {
      uint64_t v102 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v102 = 0;
      _os_log_impl((void *)&_mh_execute_header, v100, v101, "cannot create uncommittedReminder, createReminderChangeItem returns nil.", v102, 2u);
      swift_slowDealloc();
    }

    uint64_t v72 = (uint64_t)v47;
    goto LABEL_31;
  }
  uint64_t v75 = v74;
  id v76 = [v74 objectID];
  uint64_t v77 = (uint64_t)v47;
  uint64_t v78 = v146;
  sub_100595AEC(v76, v77, v146);

  uint64_t v79 = v149;
  sub_1005B2804(v78, v149, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload();
  uint64_t v80 = v147;
  sub_1005B2804(v79, v147, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  type metadata accessor for TTRRemindersListEditingSessionState(0);
  swift_allocObject();
  uint64_t v81 = sub_1003C0D8C(v80, (uint64_t)v75);
  v138 = (char *)v77;
  uint64_t v82 = v77;
  uint64_t v83 = v148;
  sub_10003B694(v82, v148, &qword_1007936B0);
  sub_1005B2804(v79, v80, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  id v84 = v75;
  swift_retain();
  sub_100459054(v83, v80, v81, v73);
  uint64_t v85 = (char *)[v84 remObjectID];

  swift_release();
  sub_1005B286C(v79, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1005B286C(v78, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
LABEL_22:
  uint64_t v86 = (uint64_t)v150;
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v87 = type metadata accessor for Logger();
  sub_100018BF8(v87, (uint64_t)qword_1007A8768);
  sub_1005B2804(v73, v86, type metadata accessor for TTRRemindersListUncommittedReminder);
  long long v88 = Logger.logObject.getter();
  os_log_type_t v89 = static os_log_type_t.debug.getter();
  BOOL v90 = os_log_type_enabled(v88, v89);
  uint64_t v91 = (uint64_t)v138;
  if (v90)
  {
    uint64_t v92 = swift_slowAlloc();
    uint64_t v162 = v49;
    uint64_t v93 = v86;
    uint64_t v94 = (uint8_t *)v92;
    uint64_t v95 = swift_slowAlloc();
    v161 = v85;
    uint64_t v167 = v95;
    *(_DWORD *)uint64_t v94 = 136315138;
    uint64_t v96 = v152;
    sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v97 = TTRTreeStorageItem.treeItemDescription.getter();
    v166[3] = sub_1000385A8(v97, v98, &v167);
    uint64_t v73 = (uint64_t)v163;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005B286C(v93, type metadata accessor for TTRRemindersListUncommittedReminder);
    _os_log_impl((void *)&_mh_execute_header, v88, v89, "Inserting UncommittedReminder {item: %s}", v94, 0xCu);
    swift_arrayDestroy();
    uint64_t v85 = v161;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1005B286C(v86, type metadata accessor for TTRRemindersListUncommittedReminder);

    uint64_t v96 = v152;
  }
  sub_10003B754(&qword_1007A1510);
  unint64_t v105 = (*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
  uint64_t v106 = swift_allocObject();
  *(_OWORD *)(v106 + 16) = xmmword_10066C6F0;
  sub_1005B2804(v73, v106 + v105, type metadata accessor for TTRRemindersListUncommittedReminder);
  sub_10059A428(v106, v155, v156, v154, v153 & 1);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_10003B6F8(v91, &qword_1007936B0);
  uint64_t v107 = sub_10003B754(&qword_1007A1528);
  uint64_t v108 = *(int *)(v107 + 48);
  uint64_t v109 = v165;
  sub_1005B2804(v73 + *(int *)(v96 + 20), v165, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1005B286C(v73, type metadata accessor for TTRRemindersListUncommittedReminder);
  *(void *)(v109 + v108) = v85;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v109, 0, 1, v107);
}

void *sub_10058EABC(void (**a1)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a2, int a3, int a4, uint8_t *a5, NSObject *a6)
{
  uint64_t v111 = a6;
  uint64_t v110 = a5;
  int v109 = a4;
  int v108 = a3;
  uint64_t v112 = a2;
  uint64_t v116 = a1;
  uint64_t v103 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v103);
  uint64_t v102 = (uint64_t)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v114 = (uint64_t)&v99 - v9;
  uint64_t v119 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v100 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v11 = (char *)&v99 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v12 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v117 = (uint64_t)&v99 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v99 - v15;
  uint64_t v17 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v17 - 8);
  uint64_t v107 = (uint64_t)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v115 = (uint64_t)&v99 - v20;
  __chkstk_darwin(v21);
  uint64_t v113 = (uint64_t *)((char *)&v99 - v22);
  uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v23 - 8);
  uint64_t v99 = (uint64_t)&v99 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_10003B754(&qword_1007A8DA0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (char *)&v99 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_10003B754(&qword_1007936B0);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  uint64_t v106 = (uint64_t)&v99 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v104 = (uint64_t)&v99 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v99 - v34;
  swift_retain();
  sub_10045EBE4(v116, (uint64_t)v27);
  swift_release();
  uint64_t v36 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48);
  uint64_t v105 = v28;
  if (v36(v27, 1, v28) == 1)
  {
    sub_10003B6F8((uint64_t)v27, &qword_1007A8DA0);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_100018BF8(v37, (uint64_t)qword_1007A8768);
    uint64_t v38 = v114;
    sub_1005B2804((uint64_t)v116, v114, type metadata accessor for TTRRemindersListReminderCreationLocation);
    os_log_type_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      sub_1005B2804(v38, v102, type metadata accessor for TTRRemindersListReminderCreationLocation);
      uint64_t v42 = String.init<A>(describing:)();
      *(void *)&long long v122 = sub_1000385A8(v42, v43, &v123);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C(v38, type metadata accessor for TTRRemindersListReminderCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "Cannot resolve ReminderCreationLocation {location: %s}", v41, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1005B286C(v38, type metadata accessor for TTRRemindersListReminderCreationLocation);
    }

    return _swiftEmptyArrayStorage;
  }
  sub_100028C3C((uint64_t)v27, (uint64_t)v35, &qword_1007936B0);
  uint64_t v116 = v6;
  swift_retain();
  uint64_t v44 = (uint64_t)v113;
  sub_100461FF0((uint64_t)v35, (uint64_t)v113);
  swift_release();
  uint64_t v45 = (uint64_t)v35;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v44, 1, v118) == 1)
  {
    sub_10003B6F8(v44, (uint64_t *)&unk_100788DC0);
    uint64_t v46 = v110;
    uint64_t v47 = v112;
LABEL_15:
    sub_10059A814(0, v47);
    ((void (*)(long long *__return_ptr))v46)(&v120);
    swift_bridgeObjectRelease();
    if (v121)
    {
      sub_100038ED8(&v120, (uint64_t)&v122);
      sub_100038ED8(&v122, (uint64_t)&v123);
      goto LABEL_17;
    }
    sub_10003B6F8((uint64_t)&v120, &qword_100789660);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v84 = type metadata accessor for Logger();
    sub_100018BF8(v84, (uint64_t)qword_1007A8768);
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v85, v86))
    {
      uint64_t v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v87 = 0;
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "cannot create changeItemGroup, createRemindersListChangeItemGroup returns nil.", v87, 2u);
      swift_slowDealloc();
    }

LABEL_53:
    sub_10003B6F8(v45, &qword_1007936B0);
    return _swiftEmptyArrayStorage;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v47 = v112;
  if (EnumCaseMultiPayload != 1)
  {
    sub_1005B286C(v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v46 = v110;
    goto LABEL_15;
  }
  uint64_t v49 = v99;
  uint64_t v50 = sub_1005B6A88(v44, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (v47 < 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  __chkstk_darwin(v50);
  *(&v99 - 2) = (uint64_t)v116;
  *(&v99 - 1) = v49;
  sub_100587A38((void (*)(uint64_t *__return_ptr, uint64_t *))sub_1005B6B38, (uint64_t)(&v99 - 4), 0, v47);
  ((void (*)(long long *__return_ptr))v110)(&v120);
  swift_bridgeObjectRelease();
  if (!v121)
  {
    sub_10003B6F8((uint64_t)&v120, &qword_100789660);
    uint64_t v45 = (uint64_t)v35;
    if (qword_100785708 == -1)
    {
LABEL_50:
      uint64_t v94 = type metadata accessor for Logger();
      sub_100018BF8(v94, (uint64_t)qword_1007A8768);
      uint64_t v95 = Logger.logObject.getter();
      os_log_type_t v96 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v95, v96))
      {
        uint64_t v97 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v97 = 0;
        _os_log_impl((void *)&_mh_execute_header, v95, v96, "cannot create changeItemGroup, createRemindersListChangeItemGroup returns nil.", v97, 2u);
        swift_slowDealloc();
      }

      sub_1005B286C(v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      goto LABEL_53;
    }
LABEL_57:
    swift_once();
    goto LABEL_50;
  }
  sub_1005B286C(v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_100038ED8(&v120, (uint64_t)&v122);
  sub_100038ED8(&v122, (uint64_t)&v123);
  uint64_t v45 = (uint64_t)v35;
LABEL_17:
  uint64_t v101 = v45;
  uint64_t v51 = v104;
  sub_10003B694(v45, v104, &qword_1007936B0);
  uint64_t v52 = v51;
  uint64_t v53 = v107;
  sub_100028C3C(v52, v107, (uint64_t *)&unk_100788DC0);
  sub_100028C3C(v53, v115, (uint64_t *)&unk_100788DC0);
  uint64_t v54 = v106;
  sub_10003B694(v101, v106, &qword_1007936B0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v55 = *(void *)(v54 + *(int *)(sub_10003B754(&qword_1007A09C8) + 48));
  }
  else {
    uint64_t v55 = 0;
  }
  uint64_t v56 = v116;
  sub_10003B6F8(v54, (uint64_t *)&unk_100788DC0);
  uint64_t v57 = v124;
  uint64_t v58 = v125;
  sub_100038D28(&v123, v124);
  uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
  __chkstk_darwin(v59);
  uint64_t v60 = v101;
  *(&v99 - 4) = (uint64_t)v56;
  *(&v99 - 3) = v60;
  *(&v99 - 2) = v115;
  *(&v99 - 1) = v55;
  char v62 = sub_1005B2DE4(v61, (void (*)(unint64_t, id))sub_1005B6B24, (uint64_t)(&v99 - 6));
  uint64_t v114 = 0;
  swift_bridgeObjectRelease();
  int64_t v63 = v62[2];
  uint64_t v64 = _swiftEmptyArrayStorage;
  uint64_t v113 = v62;
  if (v63)
  {
    *(void *)&long long v122 = _swiftEmptyArrayStorage;
    sub_1004D3504(0, v63, 0);
    uint64_t v65 = (uint64_t)v62 + ((*(unsigned __int8 *)(v100 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v100 + 80));
    uint64_t v66 = *(void *)(v100 + 72);
    uint64_t v64 = (void *)v122;
    do
    {
      sub_1005B2804(v65, (uint64_t)v11, type metadata accessor for TTRRemindersListUncommittedReminder);
      sub_1005B2804((uint64_t)&v11[*(int *)(v119 + 20)], (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B286C((uint64_t)v11, type metadata accessor for TTRRemindersListUncommittedReminder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3504(0, v64[2] + 1, 1);
        uint64_t v64 = (void *)v122;
      }
      unint64_t v68 = v64[2];
      unint64_t v67 = v64[3];
      if (v68 >= v67 >> 1)
      {
        sub_1004D3504(v67 > 1, v68 + 1, 1);
        uint64_t v64 = (void *)v122;
      }
      v64[2] = v68 + 1;
      sub_1005B6A88((uint64_t)v16, (uint64_t)v64+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(void *)(v12 + 72) * v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v65 += v66;
      --v63;
    }
    while (v63);
  }
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v69 = type metadata accessor for Logger();
  sub_100018BF8(v69, (uint64_t)qword_1007A8768);
  swift_bridgeObjectRetain_n();
  uint64_t v70 = Logger.logObject.getter();
  int v71 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v70, (os_log_type_t)v71))
  {
    LODWORD(v119) = v71;
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    *(void *)&long long v122 = v112;
    *(_DWORD *)uint64_t v72 = 136315138;
    int64_t v73 = v64[2];
    if (v73)
    {
      uint64_t v110 = v72;
      uint64_t v111 = v70;
      *(void *)&long long v120 = _swiftEmptyArrayStorage;
      sub_1004D35AC(0, v73, 0);
      uint64_t v74 = (uint64_t)v64 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v75 = *(void *)(v12 + 72);
      do
      {
        uint64_t v76 = v117;
        sub_1005B2804(v74, v117, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v77 = TTRTreeStorageItem.treeItemDescription.getter();
        uint64_t v79 = v78;
        sub_1005B286C(v76, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v80 = v120;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D35AC(0, *(void *)(v80 + 16) + 1, 1);
          uint64_t v80 = v120;
        }
        unint64_t v82 = *(void *)(v80 + 16);
        unint64_t v81 = *(void *)(v80 + 24);
        if (v82 >= v81 >> 1)
        {
          sub_1004D35AC(v81 > 1, v82 + 1, 1);
          uint64_t v80 = v120;
        }
        *(void *)(v80 + 16) = v82 + 1;
        uint64_t v83 = v80 + 16 * v82;
        *(void *)(v83 + 32) = v77;
        *(void *)(v83 + 40) = v79;
        v74 += v75;
        --v73;
      }
      while (v73);
      uint64_t v70 = v111;
      uint64_t v72 = v110;
    }
    uint64_t v88 = Array.description.getter();
    unint64_t v90 = v89;
    swift_bridgeObjectRelease();
    *(void *)&long long v120 = sub_1000385A8(v88, v90, (uint64_t *)&v122);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v70, (os_log_type_t)v119, "Inserting UncommittedReminders {items: %s}", v72, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v108) {
    unsigned __int8 v91 = 0;
  }
  else {
    unsigned __int8 v91 = 2;
  }
  sub_10059A428((uint64_t)v113, 0, 0, v91, v109 & 1);
  uint64_t v92 = swift_bridgeObjectRelease();
  __chkstk_darwin(v92);
  *(&v99 - 2) = (uint64_t)&v123;
  uint64_t v93 = sub_1005B300C((uint64_t)v64, (uint64_t (*)(char *, void, char *))sub_1005B6B30, (uint64_t)(&v99 - 4));
  swift_bridgeObjectRelease();
  sub_10003B6F8(v115, (uint64_t *)&unk_100788DC0);
  sub_10003B6F8(v101, &qword_1007936B0);
  sub_100038CD8((uint64_t)&v123);
  return v93;
}

void *sub_10058FB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v29 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v36 = a1;
  uint64_t v37 = v2;
  uint64_t v18 = sub_100587B70((uint64_t)sub_1005B6AF8, (uint64_t)v35, a2);
  uint64_t v19 = sub_10003B754(&qword_10078ADB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  sub_10003B694((uint64_t)v17, (uint64_t)v14, &qword_10078ADA8);
  uint64_t v31 = v18;
  uint64_t v32 = v2;
  uint64_t v33 = 0;
  uint64_t v34 = 0;
  sub_10059B45C((uint64_t)v14, 1, (uint64_t (*)(void *))sub_1005B6B18, (uint64_t)v30, (uint64_t (*)(uint64_t))static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:), 0);
  sub_10003B6F8((uint64_t)v14, &qword_10078ADA8);
  sub_10003B6F8((uint64_t)v17, &qword_10078ADA8);
  int64_t v20 = v18[2];
  if (v20)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
    sub_1004D3504(0, v20, 0);
    uint64_t v21 = *(unsigned __int8 *)(v29 + 80);
    uint64_t v28 = v18;
    uint64_t v22 = (uint64_t)v18 + ((v21 + 32) & ~v21);
    uint64_t v23 = *(void *)(v29 + 72);
    uint64_t v24 = v38;
    do
    {
      sub_1005B2804(v22, (uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      sub_1005B2804((uint64_t)&v7[*(int *)(v5 + 20)], (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B286C((uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3504(0, v24[2] + 1, 1);
        uint64_t v24 = v38;
      }
      unint64_t v26 = v24[2];
      unint64_t v25 = v24[3];
      if (v26 >= v25 >> 1)
      {
        sub_1004D3504(v25 > 1, v26 + 1, 1);
        uint64_t v24 = v38;
      }
      v24[2] = v26 + 1;
      sub_1005B6A88((uint64_t)v11, (uint64_t)v24+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v22 += v23;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v24;
}

void sub_10058FF74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v2 - 8);
  uint64_t v100 = (uint64_t)&v95 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v101 = (uint64_t)&v95 - v5;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v95 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v95 - v13;
  __chkstk_darwin(v15);
  uint64_t v104 = (uint64_t)&v95 - v16;
  uint64_t v17 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v17 - 8);
  uint64_t v106 = (char *)&v95 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.Item();
  int64_t v20 = *(uint8_t **)(v19 - 8);
  uint64_t v107 = v19;
  int v108 = v20;
  __chkstk_darwin(v19);
  uint64_t v103 = (char *)&v95 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v98 = (uint64_t)&v95 - v23;
  __chkstk_darwin(v24);
  uint64_t v105 = (char *)&v95 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v95 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v95 - v30;
  __chkstk_darwin(v32);
  uint64_t v102 = (uint64_t)&v95 - v33;
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v95 - v35;
  __chkstk_darwin(v37);
  os_log_type_t v39 = (char *)&v95 - v38;
  uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v40);
  uint64_t v42 = (char *)&v95 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = a1;
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  int v109 = v42;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      if (qword_100785708 != -1) {
        swift_once();
      }
      uint64_t v49 = type metadata accessor for Logger();
      sub_100018BF8(v49, (uint64_t)qword_1007A8768);
      uint64_t v50 = v111;
      sub_1005B2804(v111, (uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v51 = Logger.logObject.getter();
      os_log_type_t v52 = static os_log_type_t.info.getter();
      if (!os_log_type_enabled(v51, v52)) {
        goto LABEL_36;
      }
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      v113[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v53 = 136315138;
      sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v54 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v112 = sub_1000385A8(v54, v55, v113);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C((uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "Discarding uncommittedReminder {item: %s}", v53, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_37;
    case 2u:
      uint64_t v95 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
      uint64_t v56 = *(void *)(v110 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
      sub_1005B2804(v111, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v57 = v107;
      uint64_t v58 = v108;
      os_log_type_t v96 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((void *)v108 + 7);
      uint64_t v97 = v108 + 56;
      v96(v14, 0, 1, v107);
      uint64_t v99 = v56;
      swift_retain();
      sub_10003B694((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_100788DC0);
      uint64_t v59 = (unsigned int (*)(char *, uint64_t, uint64_t))*((void *)v58 + 6);
      if (v59(v11, 1, v57) == 1) {
        goto LABEL_13;
      }
      sub_1005B6A88((uint64_t)v11, (uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B2804((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
        sub_1005B286C((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B286C((uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_18;
      }
      do
      {
        sub_1005B286C((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        TTRMutableTreeStorage.parent(of:)();
        swift_release();
        sub_1005B286C((uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
        sub_100028C3C((uint64_t)v8, (uint64_t)v14, (uint64_t *)&unk_100788DC0);
        sub_10003B694((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_100788DC0);
        if (v59(v11, 1, v57) == 1)
        {
LABEL_13:
          sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
          sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
LABEL_18:
          uint64_t v60 = 1;
          uint64_t v61 = v104;
          goto LABEL_19;
        }
        sub_1005B6A88((uint64_t)v11, (uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B2804((uint64_t)v31, (uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      while (swift_getEnumCaseMultiPayload() != 1);
      sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
      sub_1005B286C((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v61 = v104;
      sub_1005B6A88((uint64_t)v31, v104, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v60 = 0;
LABEL_19:
      v96((char *)v61, v60, 1, v57);
      swift_release();
      unsigned int v62 = v59((char *)v61, 1, v57);
      uint64_t v50 = v111;
      uint64_t v63 = (uint64_t)v105;
      if (v62 == 1)
      {
        sub_10003B6F8(v61, (uint64_t *)&unk_100788DC0);
        goto LABEL_32;
      }
      uint64_t v64 = v102;
      sub_1005B6A88(v61, v102, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B2804(v64, v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_1005B286C(v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B286C(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_32:
        uint64_t v36 = v103;
        if (qword_100785708 != -1) {
          swift_once();
        }
        uint64_t v77 = type metadata accessor for Logger();
        sub_100018BF8(v77, (uint64_t)qword_1007A8768);
        sub_1005B2804(v50, (uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v51 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v51, v78))
        {
          uint64_t v79 = (uint8_t *)swift_slowAlloc();
          v113[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v79 = 136315138;
          sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v80 = TTRTreeStorageItem.treeItemDescription.getter();
          uint64_t v112 = sub_1000385A8(v80, v81, v113);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          sub_1005B286C((uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          _os_log_impl((void *)&_mh_execute_header, v51, v78, "Discarding placeholderReminder {item: %s}", v79, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
LABEL_36:
          sub_1005B286C((uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        }
LABEL_37:

        sub_10003B754((uint64_t *)&unk_10078E960);
        unint64_t v82 = (v108[80] + 32) & ~(unint64_t)v108[80];
        uint64_t v83 = swift_allocObject();
        *(_OWORD *)(v83 + 16) = xmmword_10066C6F0;
        sub_1005B2804(v50, v83 + v82, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v84 = sub_10003B754(&qword_10078ADB0);
        uint64_t v85 = (uint64_t)v106;
        uint64_t v86 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 56))(v106, 1, 1, v84);
        __chkstk_darwin(v86);
        *(&v95 - 2) = v83;
        __chkstk_darwin(v87);
        *(&v95 - 2) = v83;
        sub_10059B45C(v85, 1, (uint64_t (*)(void *))sub_1005B867C, v88, (uint64_t (*)(uint64_t))sub_1005B868C, (uint64_t)(&v95 - 4));
        sub_10003B6F8(v85, &qword_10078ADA8);
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      uint64_t v65 = v63;
      uint64_t v66 = v100;
      sub_1005B6A88(v65, v100, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v67 = v101;
      sub_1005B6A88(v66, v101, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v68 = *(void *)(v110 + v95);
      uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, void))(*(void *)v110 + 920);
      swift_retain();
      LOBYTE(v66) = v69(v67, v68, &off_10074D330, 0);
      swift_release();
      if ((v66 & 1) == 0)
      {
        sub_1005B286C(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1005B286C(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_32;
      }
      if (qword_100785708 != -1) {
        swift_once();
      }
      uint64_t v70 = type metadata accessor for Logger();
      sub_100018BF8(v70, (uint64_t)qword_1007A8768);
      uint64_t v71 = v98;
      sub_1005B2804(v50, v98, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v72 = Logger.logObject.getter();
      os_log_type_t v73 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v72, v73))
      {
        uint64_t v74 = (uint8_t *)swift_slowAlloc();
        v113[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v74 = 136315138;
        int v108 = v74 + 4;
        sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v75 = TTRTreeStorageItem.treeItemDescription.getter();
        uint64_t v112 = sub_1000385A8(v75, v76, v113);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1005B286C(v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        _os_log_impl((void *)&_mh_execute_header, v72, v73, "Removing editingSessionState for placeholderReminder {item: %s}", v74, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1005B286C(v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }

      uint64_t v89 = v110 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v90 = *(void *)(v89 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v90 + 80))(v50, ObjectType, v90);
        swift_unknownObjectRelease();
      }
      uint64_t v92 = sub_10003B754(&qword_10078ADB0);
      uint64_t v93 = (uint64_t)v106;
      uint64_t v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v106, 1, 1, v92);
      __chkstk_darwin(v94);
      *(&v95 - 2) = v50;
      sub_10059AFE8(v93, 1, (uint64_t (*)(void *))sub_1005B6AF0, (uint64_t)(&v95 - 4), v110);
      sub_10003B6F8(v93, &qword_10078ADA8);
      sub_1005B286C(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1005B286C(v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_38:
      sub_1005B286C((uint64_t)v109, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      return;
    case 3u:
      goto LABEL_3;
    default:
      sub_1005B286C((uint64_t)v109, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
LABEL_3:
      if (qword_100785708 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      sub_100018BF8(v43, (uint64_t)qword_1007A8768);
      sub_1005B2804(v111, (uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v44 = Logger.logObject.getter();
      os_log_type_t v45 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        v113[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v46 = 136315138;
        sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v47 = TTRTreeStorageItem.treeItemDescription.getter();
        uint64_t v112 = sub_1000385A8(v47, v48, v113);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_1005B286C((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "Invalid item type {item: %s}", v46, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1005B286C((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }

      return;
  }
}

void *sub_100591380()
{
  uint64_t v1 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  uint64_t v31 = v0;
  swift_retain();
  uint64_t v8 = sub_100460D4C();
  swift_release();
  unint64_t v33 = (unint64_t)&_swiftEmptySetSingleton;
  uint64_t v9 = v8[2];
  uint64_t v10 = &OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem;
  uint64_t v29 = v2;
  if (v9)
  {
    uint64_t v11 = (uint64_t)v8 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v12 = *(void *)(v2 + 72);
    v28[1] = v8;
    swift_bridgeObjectRetain();
    do
    {
      sub_1005B2804(v11, (uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      uint64_t v13 = *(void *)&v7[*(int *)(v1 + 24)];
      if (v13 && *(unsigned char *)(v13 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
      {
        uint64_t v14 = *(void **)(v13 + *v10);
        swift_retain();
        uint64_t v15 = v10;
        id v16 = [v14 saveRequest];
        sub_1005A3384(&v32, (uint64_t)v16);
        swift_release();

        uint64_t v10 = v15;
      }
      sub_1005B286C((uint64_t)v7, type metadata accessor for TTRRemindersListUncommittedReminder);
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
    uint64_t v17 = (void *)v33;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v17 = &_swiftEmptySetSingleton;
  }
  swift_retain();
  uint64_t v18 = sub_100460D4C();
  swift_release();
  uint64_t v19 = sub_1005B3360((uint64_t)v18, (uint64_t)v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  int64_t v20 = sub_100461820((uint64_t)v19);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = _swiftEmptyArrayStorage;
  unint64_t v33 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v22 = v20[2];
  if (v22)
  {
    uint64_t v23 = (uint64_t)v20 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
    uint64_t v24 = *(void *)(v29 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1005B2804(v23, (uint64_t)v4, type metadata accessor for TTRRemindersListUncommittedReminder);
      uint64_t v25 = *(void *)&v4[*(int *)(v1 + 24)];
      if (v25)
      {
        id v26 = *(id *)(v25 + *v10);
        sub_1005B286C((uint64_t)v4, type metadata accessor for TTRRemindersListUncommittedReminder);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
        sub_1005B286C((uint64_t)v4, type metadata accessor for TTRRemindersListUncommittedReminder);
      }
      v23 += v24;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v21 = (void *)v33;
  }
  swift_bridgeObjectRelease();
  return v21;
}

void *sub_10059172C()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v4 = sub_100460D4C();
  swift_release();
  uint64_t v5 = _swiftEmptyArrayStorage;
  unint64_t v13 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = v4[2];
  if (v6)
  {
    uint64_t v7 = (uint64_t)v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v8 = *(void *)(v1 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1005B2804(v7, (uint64_t)v3, type metadata accessor for TTRRemindersListUncommittedReminder);
      uint64_t v9 = *(void *)&v3[*(int *)(v0 + 24)];
      if (!v9 || *(unsigned char *)(v9 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_saveState))
      {
        sub_1005B286C((uint64_t)v3, type metadata accessor for TTRRemindersListUncommittedReminder);
      }
      else
      {
        id v10 = *(id *)(v9 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        sub_1005B286C((uint64_t)v3, type metadata accessor for TTRRemindersListUncommittedReminder);
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    uint64_t v5 = (void *)v13;
  }
  swift_bridgeObjectRelease();
  return v5;
}

id sub_10059193C()
{
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)();
  swift_release();
  swift_release();
  if (v2 < 2) {
    return 0;
  }
  id v0 = *(id *)(v2 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
  sub_10047284C(v2);
  return v0;
}

uint64_t sub_1005919EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100018BF8(v7, (uint64_t)qword_1007A8768);
  sub_1005B2804(a2, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = a1;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v15 = a2;
    sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v12 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v17 = sub_1000385A8(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005B286C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Setting editingSessionState for editing item {item: %s}", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v16;
    swift_slowDealloc();
  }
  else
  {
    sub_1005B286C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  swift_retain();
  sub_10045CDD8(a1);
  return swift_release();
}

uint64_t sub_100591C9C()
{
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)();
  swift_release();
  swift_release();
  if (v1 == 1) {
    return 0;
  }
  else {
    return v1;
  }
}

uint64_t sub_100591D14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_1007A8768);
  sub_1005B2804(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v12[1] = a1;
    sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v9 = TTRTreeStorageItem.treeItemDescription.getter();
    v12[2] = sub_1000385A8(v9, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Removing editingSessionState {item: %s}", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.editAuxiliaryData(for:using:)();
  swift_release();
  return swift_release();
}

void sub_100591FE0(uint64_t a1, void *a2)
{
  uint64_t v79 = a1;
  uint64_t v4 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_1007927B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v77 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for TTRRemindersListViewModel.DisplayDate();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  os_log_type_t v78 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for TTRRemindersListViewModel.Reminder.Override();
  uint64_t v75 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v71 = (uint64_t *)((char *)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  uint64_t v73 = (uint64_t)&v70 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v70 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)((char *)&v70 - v16);
  uint64_t v18 = sub_10003B754((uint64_t *)&unk_10078EEE0);
  __chkstk_darwin(v18 - 8);
  int64_t v20 = (char *)&v70 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.Reminder();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v2;
  uint64_t v26 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v26 + 8))(ObjectType, v26)
    || (uint64_t v29 = v28,
        uint64_t v30 = swift_getObjectType(),
        LOBYTE(v29) = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 8))(v30, v29),
        swift_unknownObjectRelease(),
        (v29 & 1) == 0))
  {
    id v31 = a2;
    uint64_t v32 = (void *)REMReminder.accountCapabilities.getter();
    unsigned __int8 v33 = [v32 insertsCompletedRecurrentCloneAtTail];

    if ((v33 & 1) == 0)
    {
      uint64_t v34 = v25;
      sub_1005890D8(v79, (uint64_t)v20);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
      {
        sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10078EEE0);
        uint64_t v35 = _swiftEmptyArrayStorage;
        uint64_t v36 = (uint64_t)v77;
        uint64_t v37 = (uint64_t)v78;
      }
      else
      {
        sub_1005B6A88((uint64_t)v20, (uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        uint64_t v38 = &v24[*(int *)(v21 + 88)];
        uint64_t v36 = (uint64_t)v77;
        uint64_t v37 = (uint64_t)v78;
        if (v38[8] == 1)
        {
          sub_1005B286C((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
          uint64_t v35 = _swiftEmptyArrayStorage;
        }
        else
        {
          *uint64_t v17 = *(void *)v38;
          swift_storeEnumTagMultiPayload();
          uint64_t v35 = (void *)sub_1005700A8(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
          unint64_t v40 = v35[2];
          unint64_t v39 = v35[3];
          if (v40 >= v39 >> 1) {
            uint64_t v35 = (void *)sub_1005700A8(v39 > 1, v40 + 1, 1, (unint64_t)v35);
          }
          v35[2] = v40 + 1;
          sub_1005B6A88((uint64_t)v17, (uint64_t)v35+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
          sub_1005B286C((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder);
        }
      }
      if ([v31 isRecurrent])
      {
        *uint64_t v14 = 1;
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v35 = (void *)sub_1005700A8(0, v35[2] + 1, 1, (unint64_t)v35);
        }
        unint64_t v42 = v35[2];
        unint64_t v41 = v35[3];
        if (v42 >= v41 >> 1) {
          uint64_t v35 = (void *)sub_1005700A8(v41 > 1, v42 + 1, 1, (unint64_t)v35);
        }
        v35[2] = v42 + 1;
        unint64_t v43 = (*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        uint64_t v44 = *(void *)(v75 + 72);
        sub_1005B6A88((uint64_t)v14, (uint64_t)v35 + v43 + v44 * v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
        uint64_t v83 = sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
        uint64_t v84 = &protocol witness table for REMReminder;
        v81[4] = &protocol witness table for REMReminder;
        v82[0] = v31;
        v81[3] = v83;
        v81[0] = v31;
        os_log_type_t v45 = *(void (**)(void *))(*(void *)v34 + 248);
        id v46 = v31;
        v45(v81);
        sub_100038CD8((uint64_t)v81);
        static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)();
        sub_100038CD8((uint64_t)v82);
        uint64_t v47 = v74;
        uint64_t v48 = v76;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v36, 1, v76) == 1)
        {
          sub_10003B6F8(v36, &qword_1007927B0);
        }
        else
        {
          sub_1005B6A88(v36, v37, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
          uint64_t v49 = v47;
          uint64_t v50 = v73;
          sub_1005B2804(v37, v73, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v48);
          swift_storeEnumTagMultiPayload();
          unint64_t v52 = v35[2];
          unint64_t v51 = v35[3];
          if (v52 >= v51 >> 1) {
            uint64_t v35 = (void *)sub_1005700A8(v51 > 1, v52 + 1, 1, (unint64_t)v35);
          }
          v35[2] = v52 + 1;
          sub_1005B6A88(v73, (uint64_t)v35 + v43 + v52 * v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
          id v53 = [v46 recurrenceRules];
          uint64_t v79 = v43;
          if (v53)
          {
            uint64_t v54 = v53;
            sub_1000368FC(0, (unint64_t *)&unk_100791D80);
            static Array._unconditionallyBridgeFromObjectiveC(_:)();
          }
          uint64_t v55 = v37 + *(int *)(v76 + 20);
          uint64_t v56 = type metadata accessor for Date();
          uint64_t v57 = *(void *)(v56 - 8);
          uint64_t v58 = v37;
          uint64_t v59 = (uint64_t)v72;
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v72, v55, v56);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v59, 0, 1, v56);
          uint64_t v60 = static TTRRemindersListViewModel.Reminder.recurrenceDescription(from:displayDate:)();
          uint64_t v62 = v61;
          swift_bridgeObjectRelease();
          sub_10003B6F8(v59, &qword_100799F20);
          if (v62)
          {
            uint64_t v63 = v71;
            *uint64_t v71 = v60;
            v63[1] = v62;
            uint64_t v64 = (uint64_t)v63;
            swift_storeEnumTagMultiPayload();
            unint64_t v66 = v35[2];
            unint64_t v65 = v35[3];
            if (v66 >= v65 >> 1) {
              uint64_t v35 = (void *)sub_1005700A8(v65 > 1, v66 + 1, 1, (unint64_t)v35);
            }
            v35[2] = v66 + 1;
            sub_1005B6A88(v64, (uint64_t)v35 + v79 + v66 * v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
          }
          sub_1005B286C(v58, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.DisplayDate);
        }
      }
      id v67 = [v31 objectID];
      uint64_t v68 = (void *)(v34
                     + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
      swift_beginAccess();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v81[0] = *v68;
      void *v68 = 0x8000000000000000;
      sub_1000BB1A8((uint64_t)v35, v67, isUniquelyReferenced_nonNull_native);
      void *v68 = v81[0];

      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
}

void sub_100592990(uint64_t a1, void *a2)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  uint64_t v53 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v54 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v55 = (uint64_t)&v52 - v8;
  uint64_t v9 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v12);
  uint64_t v56 = (uint64_t)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v52 - v15;
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v17);
  uint64_t v57 = (uint64_t *)((char *)&v52 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = v2;
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20)
    || (uint64_t v23 = v22,
        uint64_t v24 = swift_getObjectType(),
        LOBYTE(v23) = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v24, v23),
        swift_unknownObjectRelease(),
        (v23 & 1) == 0))
  {
    id v25 = a2;
    id v26 = [v25 accountCapabilities];
    unsigned __int8 v27 = [v26 insertsCompletedRecurrentCloneAtTail];

    if ((v27 & 1) == 0)
    {
      sub_1005B2804(a1, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v50 = &type metadata accessor for TTRRemindersListViewModel.Item;
        unint64_t v51 = v16;
LABEL_20:
        sub_1005B286C((uint64_t)v51, (uint64_t (*)(void))v50);
        return;
      }
      uint64_t v28 = (uint64_t)v16;
      uint64_t v29 = v57;
      sub_1005B6A88(v28, (uint64_t)v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      id v30 = [v25 objectID];
      sub_10003B694((uint64_t)v29 + *(int *)(v17 + 20), (uint64_t)v11, &qword_10078C890);
      uint64_t v31 = v56;
      TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)();
      swift_storeEnumTagMultiPayload();
      uint64_t v32 = v55;
      sub_1005B2804(v31, v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B2804(a1, v32 + *(int *)(v5 + 20), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      unsigned __int8 v33 = (uint64_t *)(v19 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
      swift_beginAccess();
      uint64_t v34 = *v33;
      swift_bridgeObjectRetain();
      LOBYTE(v31) = sub_1000A27F0(v32, v34);
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0)
      {
        uint64_t v35 = v54;
        sub_1005B2804(v32, v54, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        swift_beginAccess();
        unint64_t v36 = *v33;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *unsigned __int8 v33 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v36 = sub_100570238(0, *(void *)(v36 + 16) + 1, 1, v36);
          *unsigned __int8 v33 = v36;
        }
        uint64_t v38 = v53;
        unint64_t v40 = *(void *)(v36 + 16);
        unint64_t v39 = *(void *)(v36 + 24);
        if (v40 >= v39 >> 1)
        {
          unint64_t v36 = sub_100570238(v39 > 1, v40 + 1, 1, v36);
          *unsigned __int8 v33 = v36;
        }
        *(void *)(v36 + 16) = v40 + 1;
        sub_1005B6A88(v35, v36+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v40, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        swift_endAccess();
      }
      id v41 = [v25 objectID];
      unint64_t v42 = (void *)*v57;
      unint64_t v43 = (uint64_t *)(v19
                      + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
      swift_beginAccess();
      uint64_t v44 = *v43;
      if (*(void *)(*v43 + 16))
      {
        id v45 = v42;
        swift_bridgeObjectRetain();
        unint64_t v46 = sub_10035C188((uint64_t)v45);
        if (v47)
        {
          uint64_t v48 = *(void *)(*(void *)(v44 + 56) + 8 * v46);
          swift_bridgeObjectRetain();

          swift_bridgeObjectRelease();
          swift_beginAccess();
          if (v48)
          {
            char v49 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v58 = *v43;
            *unint64_t v43 = 0x8000000000000000;
            sub_1000BB1A8(v48, v41, v49);
            *unint64_t v43 = v58;
LABEL_19:

            swift_bridgeObjectRelease();
            swift_endAccess();
            sub_1005B286C(v32, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
            sub_1005B286C(v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v50 = &type metadata accessor for TTRRemindersListViewModel.ReminderID;
            unint64_t v51 = v57;
            goto LABEL_20;
          }
LABEL_18:
          sub_10035EF34((uint64_t)v41);
          goto LABEL_19;
        }

        swift_bridgeObjectRelease();
      }
      swift_beginAccess();
      goto LABEL_18;
    }
  }
}

uint64_t sub_100592FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
  if (!v7(ObjectType, v5)
    || (uint64_t v9 = v8,
        uint64_t v10 = swift_getObjectType(),
        LOBYTE(v9) = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9),
        uint64_t result = swift_unknownObjectRelease(),
        (v9 & 1) == 0))
  {
    id v25 = v7;
    uint64_t v27 = a1;
    swift_bridgeObjectRetain();
    sub_10003B754(&qword_100791EC8);
    Set.removeAll(where:)();
    uint64_t v12 = *(void *)(a2 + 16);
    if (v12)
    {
      uint64_t v24 = ObjectType;
      swift_bridgeObjectRetain();
      uint64_t v13 = (void **)(a2 + 40);
      do
      {
        uint64_t v14 = *v13;
        id v15 = *(v13 - 1);
        id v16 = v14;
        uint64_t v17 = (void *)REMReminder.accountCapabilities.getter();
        unsigned __int8 v18 = [v17 insertsCompletedRecurrentCloneAtTail];

        if (v18)
        {
          id v19 = [v15 objectID];
          uint64_t v20 = (void *)sub_10012F440(v19);
        }
        else
        {
          sub_100027C64(v26, [v15 objectID]);

          sub_100027C64(v26, [v16 objectID]);
        }
        v13 += 2;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
      uint64_t ObjectType = v24;
    }
    if (v25(ObjectType, v5))
    {
      uint64_t v22 = v21;
      uint64_t v23 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 40))(v27, v23, v22);
      swift_bridgeObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100593260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10003B754(&qword_10079C900);
  __chkstk_darwin(v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v20[-v11];
  __chkstk_darwin(v13);
  id v15 = &v20[-v14];
  uint64_t v16 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 1, 1, v17);
  swift_retain();
  sub_1000DFC68(a2, (uint64_t)v9);
  *(void *)&v9[*(int *)(v7 + 36)] = a1;
  sub_100028C3C((uint64_t)v9, (uint64_t)v12, &qword_10079C900);
  swift_retain();
  sub_1005B3650(a3, v16);
  swift_release();
  sub_10003B754(&qword_10078C500);
  sub_100037EA0(&qword_10078C508, &qword_10079C900);
  static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)v12, &qword_10079C900);
  uint64_t v18 = *(void *)&v15[*(int *)(v7 + 36)];
  sub_10003B6F8((uint64_t)v15, &qword_10079C900);
  return v18;
}

uint64_t sub_100593460(uint64_t a1)
{
  uint64_t v3 = &qword_10079C900;
  uint64_t v4 = sub_10003B754(&qword_10079C900);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - v8;
  uint64_t v10 = sub_10003B754(&qword_10079C908);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v35 - v14;
  uint64_t v35 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  uint64_t v36 = v1;
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  uint64_t v17 = *(uint64_t (**)(uint64_t))(v16 + 104);
  uint64_t v18 = *(void *)(v16 + 112);
  swift_retain();
  uint64_t v38 = sub_100459EF4(v17, v18);
  swift_release();
  unint64_t v19 = *(void *)(a1 + 16);
  uint64_t v37 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v21 = 0;
  uint64_t v22 = &qword_10079C910;
  BOOL v23 = v19 == 0;
  if (v19) {
    goto LABEL_3;
  }
LABEL_2:
  uint64_t v24 = sub_10003B754(v22);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
  unint64_t v21 = v19;
  while (1)
  {
    sub_100028C3C((uint64_t)v12, (uint64_t)v15, &qword_10079C908);
    uint64_t v32 = sub_10003B754(v22);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v15, 1, v32) == 1)
    {
      swift_bridgeObjectRelease();
      *(void *)(v36 + v35) = v38;
      return swift_release();
    }
    uint64_t v33 = (uint64_t)&v15[*(int *)(v32 + 48)];
    uint64_t v34 = (uint64_t)&v15[*(int *)(v32 + 64)];
    sub_100028C3C(v33, (uint64_t)v9, v3);
    sub_100028C3C(v34, (uint64_t)v6, v3);
    sub_10045E0B4((uint64_t)v9, (uint64_t)v6);
    sub_10003B6F8((uint64_t)v6, v3);
    sub_10003B6F8((uint64_t)v9, v3);
    uint64_t result = sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    BOOL v23 = v21 >= v19;
    if (v21 == v19) {
      goto LABEL_2;
    }
LABEL_3:
    if (v23) {
      break;
    }
    uint64_t v25 = sub_10003B754(v22);
    id v26 = v9;
    uint64_t v27 = v6;
    unint64_t v28 = v19;
    uint64_t v29 = v3;
    id v30 = v22;
    uint64_t v31 = *(void *)(v25 - 8);
    sub_10003B694(v37+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(void *)(v31 + 72) * v21++, (uint64_t)v12, v30);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v12, 0, 1, v25);
    uint64_t v22 = v30;
    uint64_t v3 = v29;
    unint64_t v19 = v28;
    uint64_t v6 = v27;
    uint64_t v9 = v26;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005937DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3)) {
    return 1;
  }
  uint64_t v6 = v5;
  uint64_t v7 = swift_getObjectType();
  char v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, v6);
  swift_unknownObjectRelease();
  return v8 & 1;
}

uint64_t sub_10059387C()
{
  return 0;
}

void sub_10059388C(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1005B2804(v8, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 104))(a1, a2 & 1, ObjectType, v9);
  }
  else
  {
    uint64_t v11 = type metadata accessor for REMRemindersListDataView.SortingStyle();
    (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v7, v11);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100018BF8(v12, (uint64_t)qword_1007A8768);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Illegal attempt to change sorting style.", v15, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_100593A94(uint64_t a1)
{
  uint64_t v226 = 0;
  uint64_t v2 = sub_10003B754(&qword_10079D580);
  __chkstk_darwin(v2 - 8);
  v200 = (char *)&v193 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v236 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v236);
  uint64_t v237 = (uint64_t)&v193 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v5 - 8);
  v210 = (char *)&v193 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v227 = sub_10003B754(&qword_10078FAA0);
  v248 = *(char **)(v227 - 8);
  __chkstk_darwin(v227);
  v207 = (char *)&v193 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_1007A09B8);
  __chkstk_darwin(v8 - 8);
  v222 = (char *)&v193 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_10003B754(&qword_10079D588);
  uint64_t v10 = __chkstk_darwin(v206);
  uint64_t v195 = (uint64_t)&v193 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v205 = (uint64_t)&v193 - v12;
  uint64_t v221 = sub_10003B754(&qword_1007A09C0);
  __chkstk_darwin(v221);
  uint64_t v235 = (uint64_t)&v193 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_10078FA98);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v199 = (uint64_t)&v193 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v220 = (uint64_t)&v193 - v17;
  uint64_t v219 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  __chkstk_darwin(v219);
  uint64_t v234 = (uint64_t)&v193 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v19 - 8);
  uint64_t v218 = (uint64_t)&v193 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v21 - 8);
  uint64_t v217 = (uint64_t)&v193 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  v216 = (char *)&v193 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v233 = (uint64_t)&v193 - v26;
  uint64_t v232 = type metadata accessor for TTRRemindersListReminderCreationLocation(0);
  __chkstk_darwin(v232);
  v231 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v193 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_10003B754(&qword_1007A8DA0);
  __chkstk_darwin(v28 - 8);
  uint64_t v230 = (uint64_t)&v193 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v246 = sub_10003B754(&qword_1007936B0);
  uint64_t v243 = *(void *)(v246 - 8);
  uint64_t v30 = __chkstk_darwin(v246);
  uint64_t v215 = (uint64_t)&v193 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v242 = (uint64_t)&v193 - v33;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v193 - v34;
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v37 = __chkstk_darwin(v36 - 8);
  v214 = (char *)&v193 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v193 = (uint64_t)&v193 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  uint64_t v250 = (uint64_t)&v193 - v42;
  __chkstk_darwin(v41);
  uint64_t v258 = (uint64_t)&v193 - v43;
  uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = __chkstk_darwin(v44);
  uint64_t v245 = (uint64_t)&v193 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __chkstk_darwin(v46);
  uint64_t v229 = (uint64_t)&v193 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v244 = (char *)&v193 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v204 = (char *)&v193 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v211 = (uint64_t)&v193 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  uint64_t v58 = (char *)&v193 - v57;
  uint64_t v59 = __chkstk_darwin(v56);
  uint64_t v61 = (char *)&v193 - v60;
  __chkstk_darwin(v59);
  uint64_t v63 = (char *)&v193 - v62;
  uint64_t v64 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v65 = __chkstk_darwin(v64 - 8);
  uint64_t v194 = (uint64_t)&v193 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v65);
  uint64_t v241 = (uint64_t)&v193 - v68;
  uint64_t v69 = __chkstk_darwin(v67);
  uint64_t v203 = (uint64_t)&v193 - v70;
  uint64_t v71 = __chkstk_darwin(v69);
  uint64_t v202 = (uint64_t)&v193 - v72;
  uint64_t v73 = __chkstk_darwin(v71);
  uint64_t v247 = (uint64_t)&v193 - v74;
  uint64_t v75 = __chkstk_darwin(v73);
  uint64_t v201 = (uint64_t)&v193 - v76;
  uint64_t v77 = __chkstk_darwin(v75);
  uint64_t v213 = (uint64_t)&v193 - v78;
  uint64_t v79 = __chkstk_darwin(v77);
  uint64_t v212 = (uint64_t)&v193 - v80;
  uint64_t v81 = __chkstk_darwin(v79);
  uint64_t v240 = (uint64_t)&v193 - v82;
  __chkstk_darwin(v81);
  uint64_t v84 = (char *)&v193 - v83;
  uint64_t v254 = a1;
  v252 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56);
  uint64_t v253 = v45 + 56;
  v252((char *)&v193 - v83, 1, 1, v44);
  swift_retain();
  uint64_t v85 = TTRMutableTreeStorage.children(of:)();
  swift_release();
  v239 = v84;
  uint64_t v86 = (uint64_t)v84;
  uint64_t v87 = (void *)v85;
  sub_10003B6F8(v86, (uint64_t *)&unk_100788DC0);
  if (*(void *)(v85 + 16))
  {
    sub_1005B2804(v85 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80)), (uint64_t)v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1005B286C((uint64_t)v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      uint64_t v89 = v254;
      swift_retain();
      uint64_t v90 = v226;
      unsigned __int8 v91 = sub_100475E28(v85, v89);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v87 = v91;
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v87 = _swiftEmptyArrayStorage;
  }
  uint64_t v90 = v226;
LABEL_6:
  uint64_t v257 = v87[2];
  if (v257)
  {
    uint64_t v226 = v90;
    uint64_t v198 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
    v256 = (char *)v87 + ((*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80));
    uint64_t v208 = v251 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess();
    unint64_t v92 = 0;
    v255 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48);
    v223 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v248 + 56);
    v228 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v243 + 48);
    *(void *)&long long v93 = 136315138;
    long long v197 = v93;
    v196 = (char *)&type metadata for Any + 8;
    v225 = v35;
    uint64_t v249 = v45;
    v238 = v87;
    v209 = v58;
    do
    {
      if (v92 >= v87[2])
      {
        __break(1u);
        JUMPOUT(0x100595960);
      }
      sub_1005B2804((uint64_t)&v256[*(void *)(v45 + 72) * v92], (uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B2804((uint64_t)v61, (uint64_t)v58, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v112 = (uint64_t)v58;
        uint64_t v113 = &type metadata accessor for TTRRemindersListViewModel.Item;
LABEL_20:
        sub_1005B286C(v112, (uint64_t (*)(void))v113);
        sub_1005B286C((uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_9;
      }
      uint64_t v94 = v250;
      sub_1005B6A88((uint64_t)v58, v250, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v95 = v94;
      uint64_t v96 = v258;
      sub_1005B6A88(v95, v258, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      char v97 = (*(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, void))(*(void *)v251 + 920))(v96, v254, &off_10074D330, 0);
      sub_1005B2804((uint64_t)v61, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v252(v35, 0, 1, v44);
      swift_storeEnumTagMultiPayload();
      if ((v97 & 1) == 0)
      {
        uint64_t v114 = v241;
        sub_100461C08((uint64_t)v35, v241);
        sub_10003B6F8((uint64_t)v35, &qword_1007936B0);
        if ((*v255)(v114, 1, v44) == 1)
        {
          sub_1005B286C(v96, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1005B286C((uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10003B6F8(v114, (uint64_t *)&unk_100788DC0);
          uint64_t v45 = v249;
        }
        else
        {
          sub_1005B6A88(v114, v245, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
          int v115 = swift_getEnumCaseMultiPayload();
          uint64_t v45 = v249;
          switch(v115)
          {
            case 2:
              swift_retain();
              TTRMutableTreeStorage.auxiliaryData(for:)();
              swift_release();
              uint64_t v116 = v259;
              if (v259 == 1 || (sub_10047284C(v259), !v116))
              {
                swift_retain();
                uint64_t v117 = (uint64_t)v200;
                TTRMutableTreeStorage.delete(_:)();
                swift_release();
                uint64_t v118 = sub_10003B754(&qword_10079D590);
                if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v117, 1, v118) == 1)
                {
                  sub_10003B6F8(v117, &qword_10079D580);
                  uint64_t v119 = 1;
                  uint64_t v120 = v227;
                  uint64_t v121 = v199;
                }
                else
                {
                  uint64_t v150 = *(void *)(v117 + *(int *)(v118 + 48));
                  uint64_t v151 = v206;
                  uint64_t v152 = *(int *)(v206 + 48);
                  uint64_t v153 = v117;
                  uint64_t v154 = v195;
                  sub_100028C3C(v153, v195, (uint64_t *)&unk_100788DC0);
                  *(void *)(v154 + v152) = v150;
                  uint64_t v155 = *(int *)(v151 + 48);
                  uint64_t v45 = v249;
                  uint64_t v156 = *(void *)(v154 + v155);
                  uint64_t v157 = v194;
                  sub_100028C3C(v154, v194, (uint64_t *)&unk_100788DC0);
                  uint64_t v158 = (uint64_t)v207;
                  v252(v207, 1, 1, v44);
                  sub_1000DFC68(v157, v158);
                  uint64_t v120 = v227;
                  *(void *)(v158 + *(int *)(v227 + 36)) = v156;
                  uint64_t v121 = v199;
                  sub_100028C3C(v158, v199, &qword_10078FAA0);
                  uint64_t v159 = v157;
                  uint64_t v87 = v238;
                  sub_10003B6F8(v159, (uint64_t *)&unk_100788DC0);
                  uint64_t v119 = 0;
                }
                (*v223)(v121, v119, 1, v120);
                sub_10003B6F8(v121, &qword_10078FA98);
              }
              break;
            case 3:
              sub_1005B286C(v245, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v113 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
              uint64_t v112 = v258;
              goto LABEL_20;
            default:
              break;
          }
          sub_1005B286C(v245, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1005B286C(v258, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1005B286C((uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1005B286C(v237, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
        }
        goto LABEL_9;
      }
      uint64_t v98 = v240;
      sub_100461C08((uint64_t)v35, v240);
      sub_10003B6F8((uint64_t)v35, &qword_1007936B0);
      uint64_t v99 = (char *)*v255;
      unsigned int v100 = (*v255)(v98, 1, v44);
      sub_10003B6F8(v98, (uint64_t *)&unk_100788DC0);
      if (v100 == 1)
      {
        v248 = v99;
        uint64_t v101 = v231;
        sub_1005B2804(v258, (uint64_t)v231, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        swift_storeEnumTagMultiPayload();
        uint64_t v102 = v230;
        sub_10045EBE4(v101, v230);
        sub_1005B286C((uint64_t)v101, type metadata accessor for TTRRemindersListReminderCreationLocation);
        if ((*v228)(v102, 1, v246) != 1)
        {
          sub_100028C3C(v102, v242, &qword_1007936B0);
          uint64_t v122 = v218;
          sub_10003B694(v208, v218, &qword_100786EF0);
          uint64_t v123 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 48))(v122, 1, v123) == 1)
          {
            sub_10003B6F8(v122, &qword_100786EF0);
            uint64_t v124 = type metadata accessor for TTRTemplatePublicLinkData();
            uint64_t v125 = v217;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v217, 1, 1, v124);
            v126 = &selRef_newObjectID;
          }
          else
          {
            uint64_t v125 = v217;
            sub_10003B694(v122 + *(int *)(v123 + 100), v217, &qword_10079BAB0);
            sub_1005B286C(v122, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
            uint64_t v127 = type metadata accessor for TTRTemplatePublicLinkData();
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48))(v125, 1, v127) == 1)v126 = &selRef_newObjectID; {
            else
            }
              v126 = &selRef_newObjectIDForSavedReminder;
          }
          sub_10003B6F8(v125, &qword_10079BAB0);
          id v224 = [self *v126];
          uint64_t v128 = v215;
          sub_10003B694(v242, v215, &qword_1007936B0);
          uint64_t v129 = v128;
          uint64_t v130 = v213;
          sub_100028C3C(v129, v213, (uint64_t *)&unk_100788DC0);
          uint64_t v131 = v130;
          uint64_t v132 = v212;
          sub_100028C3C(v131, v212, (uint64_t *)&unk_100788DC0);
          uint64_t v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v248;
          if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v248)(v132, 1, v44) == 1)
          {
            uint64_t v134 = v132;
            goto LABEL_49;
          }
          uint64_t v135 = v132;
          uint64_t v136 = v211;
          sub_1005B6A88(v135, v211, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v137 = *(void *)(v251 + v198);
          uint64_t v138 = v136;
          uint64_t v139 = v247;
          sub_1005B2804(v138, v247, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          v252((char *)v139, 0, 1, v44);
          uint64_t v243 = v137;
          swift_retain();
          uint64_t v140 = v202;
          sub_10003B694(v139, v202, (uint64_t *)&unk_100788DC0);
          int v141 = v133(v140, 1, v44);
          uint64_t v142 = (uint64_t)v244;
          uint64_t v143 = (uint64_t)v204;
          if (v141 == 1)
          {
LABEL_42:
            sub_10003B6F8(v247, (uint64_t *)&unk_100788DC0);
            sub_10003B6F8(v140, (uint64_t *)&unk_100788DC0);
            uint64_t v148 = 1;
            uint64_t v149 = v201;
          }
          else
          {
            while (1)
            {
              sub_1005B6A88(v140, v143, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_1005B2804(v143, v142, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              if (swift_getEnumCaseMultiPayload() == 1) {
                break;
              }
              sub_1005B286C(v142, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              swift_retain();
              uint64_t v144 = v44;
              uint64_t v145 = (uint64_t)v239;
              TTRMutableTreeStorage.parent(of:)();
              uint64_t v142 = (uint64_t)v244;
              swift_release();
              sub_1005B286C(v143, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v146 = v247;
              sub_10003B6F8(v247, (uint64_t *)&unk_100788DC0);
              uint64_t v147 = v145;
              uint64_t v44 = v144;
              sub_100028C3C(v147, v146, (uint64_t *)&unk_100788DC0);
              uint64_t v133 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v248;
              sub_10003B694(v146, v140, (uint64_t *)&unk_100788DC0);
              if (v133(v140, 1, v144) == 1) {
                goto LABEL_42;
              }
            }
            sub_10003B6F8(v247, (uint64_t *)&unk_100788DC0);
            sub_1005B286C(v142, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v160 = v143;
            uint64_t v149 = v201;
            sub_1005B6A88(v160, v201, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v148 = 0;
          }
          v252((char *)v149, v148, 1, v44);
          swift_release();
          int v161 = v133(v149, 1, v44);
          uint64_t v35 = v225;
          if (v161 == 1)
          {
            sub_1005B286C(v211, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v134 = v149;
LABEL_49:
            sub_10003B6F8(v134, (uint64_t *)&unk_100788DC0);
            uint64_t v162 = (uint64_t)v216;
LABEL_50:
            uint64_t v163 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v163 - 8) + 56))(v210, 1, 1, v163);
            uint64_t v164 = v224;
            TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)();
            id v165 = v164;
          }
          else
          {
            int v187 = swift_getEnumCaseMultiPayload();
            uint64_t v162 = (uint64_t)v216;
            if (v187 != 1)
            {
              sub_1005B286C(v211, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_1005B286C(v149, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              goto LABEL_50;
            }
            uint64_t v188 = v193;
            sub_1005B6A88(v149, v193, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            v189 = *(void **)(v251 + v198);
            uint64_t v190 = v189[8];
            uint64_t v191 = v189[9];
            sub_100038D28(v189 + 5, v190);
            uint64_t v164 = v224;
            (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v191 + 8))(v224, v188, v190, v191);
            sub_1005B286C(v188, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
            sub_1005B286C(v211, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          uint64_t v166 = v233;
          sub_1005B6A88(v162, v233, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);

          uint64_t v167 = v229;
          sub_1005B2804(v166, v229, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          swift_storeEnumTagMultiPayload();
          uint64_t v168 = v219;
          uint64_t v169 = v234;
          uint64_t v170 = v234 + *(int *)(v219 + 20);
          sub_1005B2804(v167, v170, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10003B694(v242, v169, &qword_1007936B0);
          *(void *)(v169 + *(int *)(v168 + 24)) = 0;
          uint64_t v171 = v235;
          sub_1005B2804(v170, v235, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v172 = v221;
          sub_10003B694(v169, v171 + *(int *)(v221 + 56), &qword_1007936B0);
          uint64_t v173 = v171 + *(int *)(v172 + 52);
          *(void *)uint64_t v173 = 0;
          *(void *)(v173 + 8) = 0;
          *(unsigned char *)(v173 + 16) = 1;
          swift_retain();
          uint64_t v174 = (uint64_t)v222;
          TTRMutableTreeStorage.insertTemporaryItem(with:)();
          swift_release();
          uint64_t v175 = sub_10003B754(&qword_1007A0A00);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 48))(v174, 1, v175) == 1)
          {
            sub_10003B6F8(v174, &qword_1007A09B8);
            uint64_t v176 = 1;
            uint64_t v177 = v227;
            uint64_t v178 = v220;
          }
          else
          {
            uint64_t v179 = *(void *)(v174 + *(int *)(v175 + 48));
            uint64_t v180 = v206;
            uint64_t v181 = *(int *)(v206 + 48);
            uint64_t v182 = v174;
            uint64_t v183 = v205;
            sub_100028C3C(v182, v205, (uint64_t *)&unk_100788DC0);
            *(void *)(v183 + v181) = v179;
            uint64_t v184 = *(void *)(v183 + *(int *)(v180 + 48));
            uint64_t v185 = v203;
            sub_100028C3C(v183, v203, (uint64_t *)&unk_100788DC0);
            uint64_t v186 = (uint64_t)v207;
            v252(v207, 1, 1, v44);
            sub_1000DFC68(v185, v186);
            uint64_t v177 = v227;
            *(void *)(v186 + *(int *)(v227 + 36)) = v184;
            uint64_t v178 = v220;
            sub_100028C3C(v186, v220, &qword_10078FAA0);
            sub_10003B6F8(v185, (uint64_t *)&unk_100788DC0);
            uint64_t v176 = 0;
          }
          uint64_t v45 = v249;
          uint64_t v87 = v238;
          uint64_t v58 = v209;
          (*v223)(v178, v176, 1, v177);
          sub_10003B6F8(v235, &qword_1007A09C0);
          sub_10003B6F8(v178, &qword_10078FA98);
          sub_1005B286C(v234, type metadata accessor for TTRRemindersListUncommittedReminder);
          sub_1005B286C(v229, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_1005B286C(v233, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
          sub_10003B6F8(v242, &qword_1007936B0);
          sub_1005B286C(v258, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1005B286C((uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          goto LABEL_9;
        }
        sub_10003B6F8(v102, &qword_1007A8DA0);
        uint64_t v103 = (uint64_t)v214;
        if (qword_100785708 != -1) {
          swift_once();
        }
        uint64_t v104 = type metadata accessor for Logger();
        sub_100018BF8(v104, (uint64_t)qword_1007A8768);
        uint64_t v105 = v258;
        sub_1005B2804(v258, v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          uint64_t v259 = swift_slowAlloc();
          *(_DWORD *)uint64_t v108 = v197;
          uint64_t v109 = TTRRemindersListViewModel.SectionID.description.getter();
          *(void *)(v108 + 4) = sub_1000385A8(v109, v110, &v259);
          swift_bridgeObjectRelease();
          sub_1005B286C(v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Unable to resolve ReminderCreationLocation endOfSection for id %s", (uint8_t *)v108, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v111 = v258;
        }
        else
        {

          sub_1005B286C(v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          uint64_t v111 = v105;
        }
        sub_1005B286C(v111, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1005B286C((uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v35 = v225;
      }
      else
      {
        sub_1005B286C(v258, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1005B286C((uint64_t)v61, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      uint64_t v45 = v249;
      uint64_t v87 = v238;
LABEL_9:
      ++v92;
    }
    while (v92 != v257);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100595970(uint64_t result)
{
  uint64_t v2 = v1;
  char v3 = result;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) == 1
    && (swift_retain(), v4 = sub_100458B5C(), uint64_t result = swift_release(), (v4 & 1) != 0))
  {
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 552))(result);
    uint64_t v5 = result;
  }
  else
  {
    uint64_t v5 = 128;
  }
  unsigned int v6 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging);
  if (!(v6 >> 6))
  {
    BOOL v7 = (v6 & 1) == 0;
    if (v5 > 0x3Fu || ((v5 ^ v7) & 1) == 0) {
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  if (v6 >> 6 == 1)
  {
    if ((v5 & 0xC0) != 0x40 || ((v6 ^ v5) & 0x3F) != 0) {
      goto LABEL_15;
    }
LABEL_12:
    if ((v3 & 1) == 0) {
      return result;
    }
    goto LABEL_16;
  }
  if (v5 == 128) {
    goto LABEL_12;
  }
LABEL_15:
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging) = v5;
LABEL_16:
  uint64_t v8 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 64))(v5, ObjectType, v9);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100595AEC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  uint64_t v3 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v3 - 8);
  uint64_t v58 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v5 - 8);
  uint64_t v56 = (uint64_t)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_1007936B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v63 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v52 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v52 - v16;
  __chkstk_darwin(v18);
  uint64_t v57 = (uint64_t)&v52 - v19;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v52 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v52 - v24;
  uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v27 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v52 - v31;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v52 - v34;
  sub_10003B694(v62, (uint64_t)v9, &qword_1007936B0);
  sub_100028C3C((uint64_t)v9, (uint64_t)v22, (uint64_t *)&unk_100788DC0);
  sub_100028C3C((uint64_t)v22, (uint64_t)v25, (uint64_t *)&unk_100788DC0);
  uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
  if (v36((uint64_t)v25, 1, v26) == 1)
  {
    sub_10003B6F8((uint64_t)v25, (uint64_t *)&unk_100788DC0);
  }
  else
  {
    sub_1005B6A88((uint64_t)v25, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v52 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
    uint64_t v37 = *(void *)(v59 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
    uint64_t v54 = v35;
    sub_1005B2804((uint64_t)v35, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 56);
    uint64_t v55 = v27 + 56;
    uint64_t v53 = v38;
    v38((uint64_t)v17, 0, 1, v26);
    uint64_t v62 = v37;
    swift_retain();
    sub_10003B694((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100788DC0);
    if (v36((uint64_t)v14, 1, v26) == 1)
    {
LABEL_7:
      uint64_t v40 = v36;
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
      sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
      uint64_t v41 = 1;
      uint64_t v42 = v59;
      uint64_t v43 = v57;
    }
    else
    {
      uint64_t v39 = (uint64_t)v63;
      while (1)
      {
        sub_1005B6A88((uint64_t)v14, (uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B2804((uint64_t)v32, (uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (swift_getEnumCaseMultiPayload() == 1) {
          break;
        }
        sub_1005B286C((uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        TTRMutableTreeStorage.parent(of:)();
        swift_release();
        sub_1005B286C((uint64_t)v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
        sub_100028C3C(v39, (uint64_t)v17, (uint64_t *)&unk_100788DC0);
        sub_10003B694((uint64_t)v17, (uint64_t)v14, (uint64_t *)&unk_100788DC0);
        if (v36((uint64_t)v14, 1, v26) == 1) {
          goto LABEL_7;
        }
      }
      uint64_t v40 = v36;
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
      sub_1005B286C((uint64_t)v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v43 = v57;
      sub_1005B6A88((uint64_t)v32, v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v41 = 0;
      uint64_t v42 = v59;
    }
    uint64_t v44 = (uint64_t)v54;
    v53(v43, v41, 1, v26);
    swift_release();
    if (v40(v43, 1, v26) == 1)
    {
      sub_1005B286C(v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v43, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v45 = v56;
        sub_1005B6A88(v43, v56, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v46 = *(void **)(v42 + v52);
        uint64_t v47 = v46[8];
        uint64_t v48 = v46[9];
        sub_100038D28(v46 + 5, v47);
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v48 + 8))(v61, v45, v47, v48);
        sub_1005B286C(v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        return (id)sub_1005B286C(v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      sub_1005B286C(v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1005B286C(v43, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  uint64_t v50 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v58, 1, 1, v50);
  TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)();
  uint64_t v51 = v61;

  return v51;
}

char *sub_100596284(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  void (*v14)(void *__return_ptr, void);
  uint64_t v15;

  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return (char *)&_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v14 = a1;
  do
  {
    BYTE3(v15) = *(unsigned char *)(a3 + v7 + 32);
    a1(&v15, (char *)&v15 + 3);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    int v10 = (unsigned __int16)v15 | (BYTE2(v15) << 16);
    if ((v15 & 0xFF00) != 0x200)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_10056F3E0(0, *((void *)v8 + 2) + 1, 1, v8);
      }
      unint64_t v12 = *((void *)v8 + 2);
      unint64_t v11 = *((void *)v8 + 3);
      if (v12 >= v11 >> 1) {
        uint64_t v8 = sub_10056F3E0((char *)(v11 > 1), v12 + 1, 1, v8);
      }
      *((void *)v8 + 2) = v12 + 1;
      uint64_t v9 = &v8[3 * v12];
      v9[32] = v10;
      v9[33] = BYTE1(v10) & 1;
      v9[34] = BYTE2(v10) & 1;
      a1 = v14;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1005963F8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_1007A09E0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_1007A09D8);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v29 = (uint64_t)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v27 = (uint64_t)&v23 - v13;
  uint64_t v14 = *(void *)(a3 + 16);
  if (!v14) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v15 = *(void *)(type metadata accessor for TTRRemindersListTreeViewModel.Section(0) - 8);
  uint64_t v16 = a3 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  uint64_t v24 = v10;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v28 = *(void *)(v15 + 72);
  uint64_t v23 = a3;
  swift_bridgeObjectRetain();
  uint64_t v18 = &_swiftEmptyArrayStorage;
  uint64_t v25 = v9;
  uint64_t v26 = a1;
  do
  {
    a1(v16);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v18;
    }
    if ((*v17)(v8, 1, v9) == 1)
    {
      sub_10003B6F8((uint64_t)v8, &qword_1007A09E0);
    }
    else
    {
      uint64_t v19 = v27;
      sub_100028C3C((uint64_t)v8, v27, &qword_1007A09D8);
      sub_100028C3C(v19, v29, &qword_1007A09D8);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = (void *)sub_10056F9F8(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      if (v21 >= v20 >> 1) {
        uint64_t v18 = (void *)sub_10056F9F8(v20 > 1, v21 + 1, 1, (unint64_t)v18);
      }
      void v18[2] = v21 + 1;
      sub_100028C3C(v29, (uint64_t)v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, &qword_1007A09D8);
      uint64_t v9 = v25;
      a1 = v26;
    }
    v16 += v28;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

void *sub_10059670C(void (*a1)(uint64_t *__return_ptr, void *), uint64_t a2, unint64_t a3)
{
  unint64_t v14 = (unint64_t)_swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; uint64_t v5 = _CocoaArrayWrapper.endIndex.getter())
  {
    for (uint64_t i = 4; ; ++i)
    {
      id v7 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * i);
      uint64_t v8 = v7;
      uint64_t v9 = i - 3;
      if (__OFADD__(i - 4, 1)) {
        break;
      }
      v13[0] = i - 4;
      v13[1] = v7;
      a1(&v12, v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return (void *)swift_bridgeObjectRelease();
      }

      if (v12)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v9 == v5)
      {
        swift_bridgeObjectRelease();
        return (void *)v14;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_1005968AC(void (*a1)(id *), uint64_t a2, unint64_t a3)
{
  uint64_t v28 = a1;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v23 = *(void *)(v27 - 8);
  uint64_t v8 = __chkstk_darwin(v27);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v22 = (uint64_t)&v21 - v10;
  if (a3 >> 62) {
    goto LABEL_20;
  }
  uint64_t v11 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v11; uint64_t v11 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
    unint64_t v25 = a3 & 0xC000000000000001;
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v13 = 4;
    unint64_t v21 = a3;
    while (1)
    {
      id v14 = v25 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a3 + 8 * v13);
      uint64_t v15 = v14;
      uint64_t v16 = v13 - 3;
      if (__OFADD__(v13 - 4, 1)) {
        break;
      }
      id v29 = v14;
      v28(&v29);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v12;
      }

      if ((*v24)(v7, 1, v27) == 1)
      {
        sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        uint64_t v17 = v22;
        sub_1005B6A88((uint64_t)v7, v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B6A88(v17, v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v12 = (void *)sub_10056F4F4(0, v12[2] + 1, 1, (unint64_t)v12);
        }
        unint64_t v19 = v12[2];
        unint64_t v18 = v12[3];
        if (v19 >= v18 >> 1) {
          uint64_t v12 = (void *)sub_10056F4F4(v18 > 1, v19 + 1, 1, (unint64_t)v12);
        }
        v12[2] = v19 + 1;
        sub_1005B6A88(v26, (uint64_t)v12+ ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80))+ *(void *)(v23 + 72) * v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        a3 = v21;
      }
      ++v13;
      if (v16 == v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_100596C00(void (*a1)(uint64_t *__return_ptr, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v12 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v6 = *(void *)(a3 + 16);
  if (v6)
  {
    uint64_t v8 = *(void *)(type metadata accessor for REMRemindersListDataView.SortingStyle() - 8);
    uint64_t v9 = a3 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    swift_bridgeObjectRetain();
    do
    {
      a1(&v11, v9);
      if (v3)
      {
        swift_bridgeObjectRelease();
        return (void *)swift_bridgeObjectRelease();
      }
      if (v11)
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v9 += v10;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    return (void *)v12;
  }
  return result;
}

void *sub_100596D78(void (*a1)(void *__return_ptr, void), uint64_t a2, uint64_t a3)
{
  void (*v13)(void *__return_ptr, void);
  uint64_t v14;

  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v13 = a1;
  do
  {
    BYTE1(v14) = *(unsigned char *)(a3 + v7 + 32);
    a1(&v14, (char *)&v14 + 1);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    char v9 = v14;
    if (v14 != 12)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_1005711A8(0, v8[2] + 1, 1, v8);
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1) {
        uint64_t v8 = sub_1005711A8((void *)(v10 > 1), v11 + 1, 1, v8);
      }
      v8[2] = v11 + 1;
      *((unsigned char *)v8 + v11 + 32) = v9;
      a1 = v13;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_100596ECC(void (*a1)(_OWORD *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  uint64_t v8 = _swiftEmptyArrayStorage;
  do
  {
    char v17 = *(unsigned char *)(a3 + v7 + 32);
    a1(v15, &v17);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }
    if ((v16 & 1) == 0)
    {
      long long v13 = v15[1];
      long long v14 = v15[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v8 = sub_10057195C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1) {
        uint64_t v8 = sub_10057195C((void *)(v10 > 1), v11 + 1, 1, v8);
      }
      v8[2] = v11 + 1;
      char v9 = &v8[4 * v11];
      *((_OWORD *)v9 + 2) = v14;
      *((_OWORD *)v9 + 3) = v13;
    }
    ++v7;
  }
  while (v4 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_100597028(uint64_t a1, uint64_t a2)
{
  return sub_100597078(a1, a2, &qword_10078E370, &qword_10078E378, (void (*)(uint64_t *, uint64_t))sub_1005A2F30);
}

uint64_t sub_100597050(uint64_t a1, uint64_t a2)
{
  return sub_100597078(a1, a2, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(uint64_t *, uint64_t))sub_1005A4084);
}

uint64_t sub_100597078(uint64_t result, uint64_t a2, uint64_t *a3, unint64_t *a4, void (*a5)(uint64_t *, uint64_t))
{
  uint64_t v6 = result;
  uint64_t v26 = a2;
  if ((result & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10003B754(a3);
    sub_100037EA0(a4, a3);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v27;
    uint64_t v24 = v28;
    uint64_t v9 = v29;
    uint64_t v10 = v30;
    unint64_t v11 = v31;
  }
  else
  {
    uint64_t v10 = 0;
    uint64_t v12 = -1 << *(unsigned char *)(result + 32);
    uint64_t v24 = result + 56;
    uint64_t v9 = ~v12;
    uint64_t v13 = -v12;
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v11 = v14 & *(void *)(result + 56);
  }
  int64_t v15 = (unint64_t)(v9 + 64) >> 6;
  if (v6 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v11)
    {
      uint64_t v16 = (v11 - 1) & v11;
      unint64_t v17 = __clz(__rbit64(v11)) | (v10 << 6);
      uint64_t v18 = v10;
      goto LABEL_29;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v20 >= v15) {
      goto LABEL_32;
    }
    unint64_t v21 = *(void *)(v24 + 8 * v20);
    uint64_t v18 = v10 + 1;
    if (!v21)
    {
      uint64_t v18 = v10 + 2;
      if (v10 + 2 >= v15) {
        goto LABEL_32;
      }
      unint64_t v21 = *(void *)(v24 + 8 * v18);
      if (!v21)
      {
        uint64_t v18 = v10 + 3;
        if (v10 + 3 >= v15) {
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(v24 + 8 * v18);
        if (!v21)
        {
          uint64_t v18 = v10 + 4;
          if (v10 + 4 >= v15) {
            goto LABEL_32;
          }
          unint64_t v21 = *(void *)(v24 + 8 * v18);
          if (!v21)
          {
            uint64_t v18 = v10 + 5;
            if (v10 + 5 >= v15) {
              goto LABEL_32;
            }
            unint64_t v21 = *(void *)(v24 + 8 * v18);
            if (!v21)
            {
              uint64_t v22 = v10 + 6;
              while (v15 != v22)
              {
                unint64_t v21 = *(void *)(v24 + 8 * v22++);
                if (v21)
                {
                  uint64_t v18 = v22 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100051244();
              return v26;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v16 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v18 << 6);
LABEL_29:
    uint64_t v19 = *(void *)(*(void *)(v6 + 48) + 8 * v17);
    swift_retain();
    if (!v19) {
      goto LABEL_32;
    }
    while (1)
    {
      a5(&v25, v19);
      uint64_t result = swift_release();
      uint64_t v10 = v18;
      unint64_t v11 = v16;
      if ((v6 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        swift_unknownObjectRetain();
        sub_10003B754(a3);
        swift_dynamicCast();
        uint64_t v19 = v25;
        swift_unknownObjectRelease();
        uint64_t v18 = v10;
        uint64_t v16 = v11;
        if (v19) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100597328(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1005A4348(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1005974A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  unint64_t v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)v25 - v9;
  __chkstk_darwin(v11);
  Swift::Int v13 = (char *)v25 - v12;
  int64_t v14 = 0;
  v25[1] = a2;
  uint64_t v15 = a1 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(a1 + 64);
  int64_t v19 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_5;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v22 >= v19) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v15 + 8 * v22);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v19) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v15 + 8 * v14);
      if (!v23)
      {
        int64_t v14 = v22 + 2;
        if (v22 + 2 >= v19) {
          goto LABEL_23;
        }
        unint64_t v23 = *(void *)(v15 + 8 * v14);
        if (!v23)
        {
          int64_t v14 = v22 + 3;
          if (v22 + 3 >= v19) {
            goto LABEL_23;
          }
          unint64_t v23 = *(void *)(v15 + 8 * v14);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_5:
    sub_1005B2804(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1005B6A88((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1005A2CAC((uint64_t)v10, (uint64_t)v7);
    sub_1005B286C((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v19)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v23 = *(void *)(v15 + 8 * v24);
  if (v23)
  {
    int64_t v14 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v14 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v14 >= v19) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v15 + 8 * v14);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_100597728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t result = __chkstk_darwin(v9);
  int64_t v14 = (char *)&v26 - v13;
  int64_t v15 = 0;
  uint64_t v27 = a2;
  uint64_t v16 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(a1 + 56);
  int64_t v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_5;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v20) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v16 + 8 * v15);
      if (!v24)
      {
        int64_t v15 = v23 + 2;
        if (v23 + 2 >= v20) {
          goto LABEL_23;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v15);
        if (!v24)
        {
          int64_t v15 = v23 + 3;
          if (v23 + 3 >= v20) {
            goto LABEL_23;
          }
          unint64_t v24 = *(void *)(v16 + 8 * v15);
          if (!v24) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_5:
    sub_1005B2804(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v22, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1005B6A88((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1005A398C((uint64_t)v11, (uint64_t)v8);
    uint64_t result = sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  int64_t v25 = v23 + 4;
  if (v25 >= v20)
  {
LABEL_23:
    swift_release();
    return v27;
  }
  unint64_t v24 = *(void *)(v16 + 8 * v25);
  if (v24)
  {
    int64_t v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1005979A8(uint64_t a1)
{
  return sub_100597CC4(a1, &qword_10078E370, &qword_10078E378, (void (*)(void *, uint64_t))sub_1005A2F30);
}

void sub_1005979D0(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_1000368FC(0, qword_10078E3D0);
    sub_1000280B4((unint64_t *)&qword_100786F28, qword_10078E3D0);
    Set.Iterator.init(_cocoa:)();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      uint64_t v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    uint64_t v11 = (char *)v3 + 1;
    if (!v14)
    {
      uint64_t v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        uint64_t v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          uint64_t v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            uint64_t v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              int64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  uint64_t v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100051244();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_100027C64(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_1000368FC(0, qword_10078E3D0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        uint64_t v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_100597C9C(uint64_t a1)
{
  return sub_100597CC4(a1, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(void *, uint64_t))sub_1005A4084);
}

uint64_t sub_100597CC4(uint64_t result, uint64_t *a2, unint64_t *a3, void (*a4)(void *, uint64_t))
{
  uint64_t v5 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10003B754(a2);
    sub_100037EA0(a3, a2);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v5 = v24[1];
    uint64_t v23 = v24[2];
    uint64_t v8 = v24[3];
    uint64_t v9 = v24[4];
    unint64_t v10 = v24[5];
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = -1 << *(unsigned char *)(result + 32);
    uint64_t v23 = result + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(result + 56);
  }
  int64_t v14 = (unint64_t)(v8 + 64) >> 6;
  if (v5 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v10)
    {
      uint64_t v15 = (v10 - 1) & v10;
      unint64_t v16 = __clz(__rbit64(v10)) | (v9 << 6);
      uint64_t v17 = v9;
      goto LABEL_29;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v19 >= v14) {
      return sub_100051244();
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    uint64_t v17 = v9 + 1;
    if (!v20)
    {
      uint64_t v17 = v9 + 2;
      if (v9 + 2 >= v14) {
        return sub_100051244();
      }
      unint64_t v20 = *(void *)(v23 + 8 * v17);
      if (!v20)
      {
        uint64_t v17 = v9 + 3;
        if (v9 + 3 >= v14) {
          return sub_100051244();
        }
        unint64_t v20 = *(void *)(v23 + 8 * v17);
        if (!v20)
        {
          uint64_t v17 = v9 + 4;
          if (v9 + 4 >= v14) {
            return sub_100051244();
          }
          unint64_t v20 = *(void *)(v23 + 8 * v17);
          if (!v20)
          {
            uint64_t v17 = v9 + 5;
            if (v9 + 5 >= v14) {
              return sub_100051244();
            }
            unint64_t v20 = *(void *)(v23 + 8 * v17);
            if (!v20)
            {
              uint64_t v21 = v9 + 6;
              while (v14 != v21)
              {
                unint64_t v20 = *(void *)(v23 + 8 * v21++);
                if (v20)
                {
                  uint64_t v17 = v21 - 1;
                  goto LABEL_28;
                }
              }
              return sub_100051244();
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v15 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v17 << 6);
LABEL_29:
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    swift_retain();
    if (!v18) {
      return sub_100051244();
    }
    while (1)
    {
      a4(v24, v18);
      uint64_t result = swift_release();
      uint64_t v9 = v17;
      unint64_t v10 = v15;
      if ((v5 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        swift_unknownObjectRetain();
        sub_10003B754(a2);
        swift_dynamicCast();
        uint64_t v18 = v24[0];
        swift_unknownObjectRelease();
        uint64_t v17 = v9;
        uint64_t v15 = v10;
        if (v18) {
          continue;
        }
      }
      return sub_100051244();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100597F70(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v24 - v11;
  int64_t v13 = 0;
  uint64_t v14 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(a1 + 56);
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v22 = *(void *)(v14 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v22 = *(void *)(v14 + 8 * v13);
        if (!v22)
        {
          int64_t v13 = v21 + 3;
          if (v21 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v22 = *(void *)(v14 + 8 * v13);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v17 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    sub_1005B2804(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_1005B6A88((uint64_t)v12, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_1005A3E00((uint64_t)v9, (uint64_t)v6);
    uint64_t result = sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v18) {
    return swift_release();
  }
  unint64_t v22 = *(void *)(v14 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v18) {
      return swift_release();
    }
    unint64_t v22 = *(void *)(v14 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1005981DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - v7;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - v10;
  int64_t v12 = 0;
  uint64_t v13 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(a1 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v12 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v17) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v13 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v17) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v13 + 8 * v12);
      if (!v21)
      {
        int64_t v12 = v20 + 2;
        if (v20 + 2 >= v17) {
          goto LABEL_23;
        }
        unint64_t v21 = *(void *)(v13 + 8 * v12);
        if (!v21)
        {
          int64_t v12 = v20 + 3;
          if (v20 + 3 >= v17) {
            goto LABEL_23;
          }
          unint64_t v21 = *(void *)(v13 + 8 * v12);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v16 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_5:
    sub_1005B2804(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v19, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1005B6A88((uint64_t)v11, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1005A2CAC((uint64_t)v8, (uint64_t)v5);
    sub_1005B286C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v17)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v21 = *(void *)(v13 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v17) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v13 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

void *sub_100598448(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_10035C188((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = __CocoaDictionary.lookup(_:)();

  if (!v4) {
    return 0;
  }
  sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

double sub_100598520@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 1;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_10066C910;
  *(void *)(a1 + 32) = 0;
  *(void *)(a1 + 40) = 0;
  *(void *)(a1 + 24) = 0;
  return result;
}

uint64_t sub_100598540()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v8, (uint64_t)v3, &qword_100786EF0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
  }
  else
  {
    sub_1005B6A88((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    int v9 = v7[*(int *)(v4 + 64)];
    sub_1005B286C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v9) {
      return 1;
    }
  }
  return 2;
}

uint64_t sub_1005986F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TTRAutoCompleteReminderListScope();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_100598760(uint64_t a1, int a2, char a3, uint64_t a4)
{
  return sub_1005989F0(a1, a2, a3, a4, &qword_10078E370);
}

void sub_10059876C(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_1000368FC(0, qword_10078E3D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_1000368FC(0, qword_10078E3D0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = static NSObject.== infix(_:_:)();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = static NSObject.== infix(_:_:)();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  uint64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_1005989E4(uint64_t a1, int a2, char a3, uint64_t a4)
{
  return sub_1005989F0(a1, a2, a3, a4, (uint64_t *)&unk_100788D30);
}

uint64_t sub_1005989F0(uint64_t a1, int a2, char a3, uint64_t a4, uint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      swift_unknownObjectRetain();
      sub_10003B754(a5);
      swift_dynamicCast();
      uint64_t v8 = v16;
      swift_unknownObjectRelease();
      return v8;
    }
    goto LABEL_23;
  }
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
    {
LABEL_22:
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    if (*(_DWORD *)(a4 + 36) == a2)
    {
LABEL_14:
      uint64_t v8 = *(void *)(*(void *)(a4 + 48) + 8 * v7);
      swift_retain();
      return v8;
    }
    __break(1u);
  }
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  __CocoaSet.Index.element.getter();
  swift_unknownObjectRetain();
  sub_10003B754(a5);
  swift_dynamicCast();
  swift_unknownObjectRelease();
  Hasher.init(_seed:)();
  Swift::UInt v9 = *(void *)(v16 + 16);
  Hasher._combine(_:)(v9);
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v10 & ~v11;
  uint64_t v12 = a4 + 56;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_24:
    swift_release();
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v13 = *(void *)(a4 + 48);
  if (*(void *)(*(void *)(v13 + 8 * v7) + 16) == v9) {
    goto LABEL_13;
  }
  uint64_t v15 = ~v11;
  unint64_t v7 = (v7 + 1) & v15;
  if ((*(void *)(v12 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    while (*(void *)(*(void *)(v13 + 8 * v7) + 16) != v9)
    {
      unint64_t v7 = (v7 + 1) & v15;
      if (((*(void *)(v12 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
      {
        swift_release();
        __break(1u);
        goto LABEL_20;
      }
    }
LABEL_13:
    swift_release();
    goto LABEL_14;
  }
LABEL_25:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100598C34@<X0>(uint64_t result@<X0>, int a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  if (a3) {
    goto LABEL_12;
  }
  uint64_t v5 = result;
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v7 = *(void *)(a4 + 48);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  Swift::Int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  uint64_t v11 = v7 + *(void *)(v9 + 72) * v5;

  return v10(a5, v11, v8);
}

void sub_100598CFC(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_100598D10(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

void sub_100598D24(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_1000368FC(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_1000368FC(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

void sub_100598F94(uint64_t a1, int a2, char a3, uint64_t a4)
{
}

uint64_t sub_100598FA8()
{
  return Sequence.completeCompactMap<A>(_:)();
}

id sub_10059904C(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >> 6)
  {
    if (a3 >> 6 == 1)
    {
      id v6 = a2;
      TTRAccesibility.RemindersList.AutoCategorization.MultipleItemSingleSectionCategorizationFormat.unsafeMutableAddressor();
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_10066C680;
      *(void *)(v7 + 56) = &type metadata for Int;
      *(void *)(v7 + 64) = &protocol witness table for Int;
      *(void *)(v7 + 32) = a1;
      swift_bridgeObjectRetain();
      uint64_t v8 = TTRSection.displayName.getter();
      uint64_t v10 = v9;
      *(void *)(v7 + 96) = &type metadata for String;
      *(void *)(v7 + 104) = sub_1000965C8();
      *(void *)(v7 + 72) = v8;
      *(void *)(v7 + 80) = v10;
      id v11 = (id)static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1001086F0(a1, a2, a3);
    }
    else
    {
      TTRAccesibility.RemindersList.AutoCategorization.MultipleItemsMultipleSectionsCategorizationFormat.unsafeMutableAddressor();
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_10066C6F0;
      *(void *)(v20 + 56) = &type metadata for Int;
      *(void *)(v20 + 64) = &protocol witness table for Int;
      *(void *)(v20 + 32) = a1;
      swift_bridgeObjectRetain();
      id v11 = (id)static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    id v12 = a2;
    id v13 = a1;
    id v11 = [v13 titleAsString];
    if (v11)
    {
      uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v15;

      TTRAccesibility.RemindersList.AutoCategorization.SingleItemCategorizationFormat.unsafeMutableAddressor();
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_10066C680;
      *(void *)(v16 + 56) = &type metadata for String;
      unint64_t v17 = sub_1000965C8();
      *(void *)(v16 + 64) = v17;
      *(void *)(v16 + 32) = v14;
      *(void *)(v16 + 40) = v22;
      swift_bridgeObjectRetain();
      uint64_t v18 = TTRSection.displayName.getter();
      *(void *)(v16 + 96) = &type metadata for String;
      *(void *)(v16 + 104) = v17;
      *(void *)(v16 + 72) = v18;
      *(void *)(v16 + 80) = v19;
      id v11 = (id)static String.localizedStringWithFormat(_:_:)();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  return v11;
}

uint64_t sub_1005992E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A8768);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A8768);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1005993A8(uint64_t a1, uint64_t a2)
{
  return sub_1005B0FBC(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(unsigned char *)(a1 + 24), *(void **)a2, *(void **)(a2 + 8), *(void **)(a2 + 16), *(unsigned char *)(a2 + 24));
}

uint64_t sub_1005993CC(uint64_t a1, uint64_t a2)
{
  return sub_1005B1404(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)a2, *(void **)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1005993E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_100599458(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005B2804(a1, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v5 = 1;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
    case 4u:
    case 9u:
      uint64_t v5 = 0;
      goto LABEL_3;
    case 0xAu:
    case 0xBu:
      return v5;
    default:
LABEL_3:
      sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      break;
  }
  return v5;
}

uint64_t sub_100599578()
{
  uint64_t v0 = sub_10003B754(&qword_100786EF0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = &v16[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v1);
  uint64_t v5 = &v16[-v4];
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = result;
    uint64_t v12 = result + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess();
    sub_10003B694(v12, (uint64_t)v5, &qword_100786EF0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_10003B6F8((uint64_t)v5, &qword_100786EF0);
    }
    else
    {
      sub_1005B6A88((uint64_t)v5, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_1005B2804((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(v3, 0, 1, v6);
      sub_1005885DC((uint64_t)v3);
      sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
      uint64_t v13 = v11 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v14 = *(void *)(v13 + 8);
        uint64_t ObjectType = swift_getObjectType();
        LOBYTE(v14) = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 32))(ObjectType, v14);
        swift_unknownObjectRelease();
        if (v14) {
          sub_10059BA10(1);
        }
      }
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100599828@<X0>(_OWORD *a1@<X8>)
{
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.auxiliaryData(for:)();
  swift_release();
  uint64_t result = swift_release();
  if (v6 >= 2)
  {
    uint64_t v3 = *(void **)(v6 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
    sub_1000368FC(0, &qword_100791DA8);
    id v4 = *(id *)(v6 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_pendingMoveTargetList);
    id v5 = v3;
    sub_10047284C(v6);
    return TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)();
  }
  else
  {
    a1[1] = 0u;
    a1[2] = 0u;
    *a1 = 0u;
  }
  return result;
}

uint64_t sub_100599934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v99 = a2;
  uint64_t v100 = a4;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v8 - 8);
  uint64_t v97 = (uint64_t)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = type metadata accessor for TTRRemindersListViewModel.Reminder.Override();
  uint64_t v10 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  uint64_t v94 = (uint64_t *)((char *)&v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v95 = (uint64_t *)((char *)&v92 - v13);
  __chkstk_darwin(v14);
  uint64_t v96 = (uint64_t *)((char *)&v92 - v15);
  __chkstk_darwin(v16);
  uint64_t v18 = (uint64_t *)((char *)&v92 - v17);
  __chkstk_darwin(v19);
  unint64_t v21 = (uint64_t *)((char *)&v92 - v20);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v92 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v92 - v26;
  uint64_t v28 = sub_10003B754(&qword_1007927B0);
  __chkstk_darwin(v28 - 8);
  uint64_t v30 = (char *)&v92 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = a1;
  sub_1000145EC(a1, (uint64_t)v104);
  uint64_t v103 = _swiftEmptyArrayStorage;
  if ((*(uint64_t (**)(void *))(*(void *)a3 + 248))(v104))
  {
    long long v93 = v21;
    unint64_t v31 = v18;
    uint64_t v32 = a5;
    static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)();
    sub_10003B694((uint64_t)v30, (uint64_t)v27, &qword_1007927B0);
    swift_storeEnumTagMultiPayload();
    unint64_t v33 = sub_1005700A8(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v35 = *(void *)(v33 + 16);
    unint64_t v34 = *(void *)(v33 + 24);
    if (v35 >= v34 >> 1) {
      unint64_t v33 = sub_1005700A8(v34 > 1, v35 + 1, 1, v33);
    }
    *(void *)(v33 + 16) = v35 + 1;
    sub_1005B6A88((uint64_t)v27, v33+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
    uint64_t v103 = (void *)v33;
    sub_10003B6F8((uint64_t)v30, &qword_1007927B0);
    a5 = v32;
    uint64_t v18 = v31;
    unint64_t v21 = v93;
  }
  if (((*(uint64_t (**)(uint64_t))(*(void *)a3 + 256))(v100) & 1) == 0)
  {
    *(void *)uint64_t v24 = 0;
    *((void *)v24 + 1) = 0;
    v24[16] = 0;
    swift_storeEnumTagMultiPayload();
    unint64_t v36 = (unint64_t)v103;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v36 = sub_1005700A8(0, *(void *)(v36 + 16) + 1, 1, v36);
    }
    unint64_t v38 = *(void *)(v36 + 16);
    unint64_t v37 = *(void *)(v36 + 24);
    if (v38 >= v37 >> 1) {
      unint64_t v36 = sub_1005700A8(v37 > 1, v38 + 1, 1, v36);
    }
    *(void *)(v36 + 16) = v38 + 1;
    sub_1005B6A88((uint64_t)v24, v36+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
    uint64_t v103 = (void *)v36;
  }
  uint64_t v39 = v105;
  uint64_t v40 = v106;
  sub_100038D28(v104, v105);
  uint64_t v41 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v39, v40);
  uint64_t v42 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
  swift_beginAccess();
  uint64_t v43 = *v42;
  if (*(void *)(v43 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v44 = sub_10035C188((uint64_t)v41);
    uint64_t v45 = v96;
    if (v46)
    {
      uint64_t v47 = *(void *)(*(void *)(v43 + 56) + 8 * v44);
      swift_bridgeObjectRetain();

      swift_bridgeObjectRelease();
      uint64_t v48 = sub_100569870(v47);
    }
    else
    {

      uint64_t v48 = swift_bridgeObjectRelease();
    }
  }
  else
  {

    uint64_t v45 = v96;
  }
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 272))(v48);
  if (v49)
  {
    uint64_t v50 = (void *)v49;
    *unint64_t v21 = v49;
    swift_storeEnumTagMultiPayload();
    unint64_t v51 = (unint64_t)v103;
    id v52 = v50;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v51 = sub_1005700A8(0, *(void *)(v51 + 16) + 1, 1, v51);
    }
    unint64_t v54 = *(void *)(v51 + 16);
    unint64_t v53 = *(void *)(v51 + 24);
    if (v54 >= v53 >> 1) {
      unint64_t v51 = sub_1005700A8(v53 > 1, v54 + 1, 1, v51);
    }
    *(void *)(v51 + 16) = v54 + 1;
    sub_1005B6A88((uint64_t)v21, v51+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);

    uint64_t v103 = (void *)v51;
  }
  uint64_t v55 = (*(uint64_t (**)(void))(*(void *)a3 + 280))();
  if (v55)
  {
    uint64_t v56 = (void *)v55;
    *uint64_t v18 = v55;
    swift_storeEnumTagMultiPayload();
    unint64_t v57 = (unint64_t)v103;
    id v58 = v56;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v57 = sub_1005700A8(0, *(void *)(v57 + 16) + 1, 1, v57);
    }
    unint64_t v60 = *(void *)(v57 + 16);
    unint64_t v59 = *(void *)(v57 + 24);
    if (v60 >= v59 >> 1) {
      unint64_t v57 = sub_1005700A8(v59 > 1, v60 + 1, 1, v57);
    }
    *(void *)(v57 + 16) = v60 + 1;
    sub_1005B6A88((uint64_t)v18, v57+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v60, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);

    uint64_t v103 = (void *)v57;
  }
  uint64_t v61 = (*(uint64_t (**)(void))(*(void *)a3 + 296))();
  if (v61)
  {
    uint64_t v62 = (void *)v61;
    *uint64_t v45 = v61;
    swift_storeEnumTagMultiPayload();
    unint64_t v63 = (unint64_t)v103;
    id v64 = v62;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v63 = sub_1005700A8(0, *(void *)(v63 + 16) + 1, 1, v63);
    }
    unint64_t v66 = *(void *)(v63 + 16);
    unint64_t v65 = *(void *)(v63 + 24);
    if (v66 >= v65 >> 1) {
      unint64_t v63 = sub_1005700A8(v65 > 1, v66 + 1, 1, v63);
    }
    *(void *)(v63 + 16) = v66 + 1;
    sub_1005B6A88((uint64_t)v45, v63+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v66, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);

    uint64_t v103 = (void *)v63;
  }
  if ((*(uint64_t (**)(void))(*(void *)a3 + 504))())
  {
    static TTRRemindersListViewModel.Reminder.completionDateString(from:completionHidden:forAccessibility:)();
    if (v67)
    {
      static TTRRemindersListViewModel.Reminder.completionDateString(from:completionHidden:forAccessibility:)();
      if (v68)
      {
        uint64_t v69 = static TTRLocalizableStrings.CompletedList.completed(dateString:)();
        uint64_t v71 = v70;
        swift_bridgeObjectRelease();
        uint64_t v72 = v95;
        uint64_t *v95 = v69;
        v72[1] = v71;
        swift_storeEnumTagMultiPayload();
        unint64_t v73 = (unint64_t)v103;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v73 = sub_1005700A8(0, *(void *)(v73 + 16) + 1, 1, v73);
        }
        unint64_t v75 = *(void *)(v73 + 16);
        unint64_t v74 = *(void *)(v73 + 24);
        if (v75 >= v74 >> 1) {
          unint64_t v73 = sub_1005700A8(v74 > 1, v75 + 1, 1, v73);
        }
        *(void *)(v73 + 16) = v75 + 1;
        unint64_t v76 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
        uint64_t v77 = *(void *)(v10 + 72);
        sub_1005B6A88((uint64_t)v95, v73 + v76 + v77 * v75, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
        uint64_t v78 = static TTRLocalizableStrings.CompletedList.completed(dateString:)();
        uint64_t v80 = v79;
        swift_bridgeObjectRelease();
        uint64_t v81 = (uint64_t)v94;
        *uint64_t v94 = v78;
        *(void *)(v81 + 8) = v80;
        swift_storeEnumTagMultiPayload();
        unint64_t v83 = *(void *)(v73 + 16);
        unint64_t v82 = *(void *)(v73 + 24);
        if (v83 >= v82 >> 1) {
          unint64_t v73 = sub_1005700A8(v82 > 1, v83 + 1, 1, v73);
        }
        *(void *)(v73 + 16) = v83 + 1;
        sub_1005B6A88(v81, v73 + v76 + v83 * v77, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Reminder.Override);
        uint64_t v103 = (void *)v73;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
  uint64_t v84 = v97;
  sub_1005B2804(v100, v97, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v85 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 0, 1, v85);
  sub_1005B6B7C(v98, (uint64_t)v102);
  sub_1005B6BD8(v99);
  uint64_t v86 = TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)();
  unint64_t v87 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 264))(v86);
  uint64_t v88 = a5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.Reminder() + 24);
  *(unsigned char *)uint64_t v88 = v87;
  uint64x2_t v89 = (uint64x2_t)vdupq_n_s64(v87);
  int16x8_t v90 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v89, (uint64x2_t)xmmword_10067D840), (int32x4_t)vshlq_u64(v89, (uint64x2_t)xmmword_10067D830));
  *(int8x8_t *)v90.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v90), (int8x8_t)0x1000100010001);
  *(_DWORD *)(v88 + 1) = vmovn_s16(v90).u32[0];
  return sub_100038CD8((uint64_t)v104);
}

uint64_t sub_10059A428(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, int a5)
{
  int v33 = a5;
  int v10 = a4;
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v31 - v21;
  if (v10 == 2 || (uint64_t v23 = *(void *)(a1 + 16)) == 0)
  {
    uint64_t v28 = sub_10003B754(&qword_10078ADB0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 1, 1, v28);
  }
  else
  {
    int v32 = a4 & 1;
    uint64_t v24 = v23 - 1;
    uint64_t v25 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
    sub_1005B2804(a1+ ((*(unsigned __int8 *)(*(void *)(v25 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v25 - 8) + 80))+ *(void *)(*(void *)(v25 - 8) + 72) * v24+ *(int *)(v25 + 20), (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1005B6A88((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v26 = sub_10003B754(&qword_10078ADB0);
    uint64_t v27 = *(int *)(v26 + 48);
    sub_1005B6A88((uint64_t)v16, (uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    v22[v27] = v32;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v22, 0, 1, v26);
  }
  uint64_t v29 = sub_10003B694((uint64_t)v22, (uint64_t)v19, &qword_10078ADA8);
  __chkstk_darwin(v29);
  *(&v31 - 4) = a1;
  *(&v31 - 3) = v5;
  *(&v31 - 2) = a2;
  *(&v31 - 1) = a3;
  sub_10059B45C((uint64_t)v19, v33 & 1, (uint64_t (*)(void *))sub_1005B8680, (uint64_t)(&v31 - 6), (uint64_t (*)(uint64_t))static TTRSmartListFilterEditorViewModel.HelpTopic.__derived_enum_equals(_:_:), 0);
  sub_10003B6F8((uint64_t)v19, &qword_10078ADA8);
  return sub_10003B6F8((uint64_t)v22, &qword_10078ADA8);
}

id sub_10059A74C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, _UNKNOWN **, uint64_t))(*(void *)a1 + 920);
  swift_retain();
  char v7 = v6(a2, v5, &off_10074D330, 1);
  swift_release();
  if (v7) {
    id result = [self newObjectID];
  }
  else {
    id result = 0;
  }
  *a3 = result;
  return result;
}

uint64_t sub_10059A814(void *a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      sub_10003B754(&qword_10078A9C0);
      id v4 = (void *)static Array._allocateBufferUninitialized(minimumCapacity:)();
      v4[2] = a2;
      int v10 = v4;
      v4[4] = a1;
      if (a2 != 1)
      {
        v4[5] = a1;
        uint64_t v5 = a2 - 2;
        if (v5)
        {
          unint64_t v6 = v4 + 6;
          do
          {
            *v6++ = a1;
            id v7 = a1;
            --v5;
          }
          while (v5);
        }
        id v8 = a1;
      }
    }
    else
    {
      int v10 = _swiftEmptyArrayStorage;
    }
    specialized Array._endMutation()();
    return (uint64_t)v10;
  }
  return result;
}

uint64_t sub_10059A908@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v29 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a4;
  uint64_t v8 = sub_10003B754(&qword_1007936B0);
  __chkstk_darwin(v8);
  int v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  double v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = [a2 objectID:v18];
  sub_100595AEC(v21, a3, (uint64_t)v20);

  sub_1005B2804((uint64_t)v20, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload();
  sub_1005B2804((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  type metadata accessor for TTRRemindersListEditingSessionState(0);
  swift_allocObject();
  uint64_t v22 = sub_1003C0D8C((uint64_t)v13, (uint64_t)a2);
  uint64_t v23 = *(int *)(sub_10003B754(&qword_1007A09C8) + 48);
  uint64_t result = sub_10003B694(v27, (uint64_t)v10, (uint64_t *)&unk_100788DC0);
  if (__OFADD__(v29, v28))
  {
    __break(1u);
  }
  else
  {
    *(void *)&v10[v23] = v29 + v28;
    swift_storeEnumTagMultiPayload();
    sub_1005B2804((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    id v25 = a2;
    sub_100459054((uint64_t)v10, (uint64_t)v13, v22, v26);
    sub_1005B286C((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return sub_1005B286C((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  }
  return result;
}

uint64_t sub_10059ABBC(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  sub_1005B2804(a3, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v6 = a4[3];
  uint64_t v7 = a4[4];
  sub_100038D28(a4, v6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
  if ((result & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v9 = *(id *)(result + 8 * a2 + 32);
LABEL_5:
    int v10 = v9;
    swift_bridgeObjectRelease();
    id v11 = [v10 remObjectID];

    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_10059ACAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v26[0] = a2;
  v26[1] = a3;
  uint64_t v28 = a4;
  uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v27);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)v26 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754(&qword_1007936B0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  double v18 = (char *)v26 - v17;
  uint64_t v19 = *(void **)a1;
  uint64_t v20 = *(void *)(a1 + 8);
  uint64_t v21 = *(int *)(sub_10003B754(&qword_1007A09C8) + 48);
  sub_10003B694(v26[0], (uint64_t)v18, (uint64_t *)&unk_100788DC0);
  *(void *)&v18[v21] = v20;
  swift_storeEnumTagMultiPayload();
  id v22 = v19;
  id v23 = [v22 objectID];
  sub_100595AEC(v23, (uint64_t)v18, (uint64_t)v12);

  sub_1005B2804((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  swift_storeEnumTagMultiPayload();
  sub_1005B2804((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  type metadata accessor for TTRRemindersListEditingSessionState(0);
  swift_allocObject();
  uint64_t v24 = sub_1003C0D8C((uint64_t)v6, (uint64_t)v22);
  sub_10003B694((uint64_t)v18, (uint64_t)v15, &qword_1007936B0);
  sub_1005B2804((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100459054((uint64_t)v15, (uint64_t)v6, v24, v28);
  sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1005B286C((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  return sub_10003B6F8((uint64_t)v18, &qword_1007936B0);
}

uint64_t sub_10059AF90()
{
  return 1;
}

uint64_t sub_10059AFE8(uint64_t a1, int a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t a5)
{
  int v36 = a2;
  uint64_t v8 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v34 = *(void *)(v8 - 8);
  uint64_t v35 = v8;
  __chkstk_darwin(v8);
  int v33 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  uint64_t v17 = *(void *)(a5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  double v18 = *(uint64_t (**)(uint64_t))(v17 + 104);
  uint64_t v19 = *(void *)(v17 + 112);
  swift_retain_n();
  uint64_t v20 = sub_100459EF4(v18, v19);
  swift_release();
  *(void *)(a5 + v16) = v20;
  swift_retain();
  swift_release();
  if (a3(v20))
  {
    sub_10003B694(a1, (uint64_t)v15, &qword_10078ADA8);
    swift_retain();
    swift_retain();
    int v32 = v15;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    {
      uint64_t v31 = &_swiftEmptySetSingleton;
      goto LABEL_4;
    }
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v31 = v30;
    }
    else
    {
      uint64_t v31 = &_swiftEmptySetSingleton;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
LABEL_5:
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
        uint64_t v21 = v33;
        goto LABEL_11;
      }
LABEL_10:
      uint64_t v21 = v33;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      {
LABEL_13:
        uint64_t v23 = sub_10003B754(&qword_10078ADB8);
        uint64_t v24 = *(int *)(v23 + 48);
        REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
        *(void *)uint64_t v12 = v17;
        uint64_t v25 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(&v12[*(int *)(v25 + 20)], v21, v35);
        v12[*(int *)(v25 + 24)] = 0;
        v12[v24] = v36 & 1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v12, 0, 1, v23);
        type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
        swift_allocObject();
        uint64_t v26 = sub_10044D218((uint64_t)v20, (uint64_t)v32, (uint64_t)v12);
        swift_release();
        uint64_t v27 = a5 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v28 = *(void *)(v27 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 72))(v26, ObjectType, v28);
          swift_unknownObjectRelease();
        }
        sub_100595970(0);
        swift_release();
        swift_release();
        return swift_release();
      }
LABEL_11:
      if (_CocoaArrayWrapper.endIndex.getter()) {
        sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
      }
      goto LABEL_13;
    }
LABEL_4:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  swift_release();
  *(void *)(a5 + v16) = v17;

  return swift_release();
}

uint64_t sub_10059B45C(uint64_t a1, int a2, uint64_t (*a3)(void *), uint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v40 = a6;
  uint64_t v41 = a5;
  int v39 = a2;
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v37 = *(void *)(v10 - 8);
  uint64_t v38 = v10;
  __chkstk_darwin(v10);
  int v36 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated - 8);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  uint64_t v19 = *(void *)(v6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v19 + 104);
  uint64_t v21 = *(void *)(v19 + 112);
  swift_retain_n();
  id v22 = sub_100459EF4(v20, v21);
  swift_release();
  *(void *)(v7 + v18) = v22;
  swift_retain();
  swift_release();
  if (a3(v22))
  {
    sub_10003B694(a1, (uint64_t)v17, &qword_10078ADA8);
    swift_retain();
    swift_retain();
    uint64_t v35 = v17;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    {
      uint64_t v34 = &_swiftEmptySetSingleton;
      uint64_t v23 = v36;
      goto LABEL_4;
    }
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
      uint64_t v34 = v33;
      uint64_t v23 = v36;
    }
    else
    {
      uint64_t v34 = &_swiftEmptySetSingleton;
      uint64_t v23 = v36;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
        goto LABEL_4;
      }
    }
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
LABEL_5:
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
        goto LABEL_11;
      }
LABEL_10:
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      {
LABEL_13:
        uint64_t v25 = sub_10003B754(&qword_10078ADB8);
        uint64_t v26 = *(int *)(v25 + 48);
        REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
        *(void *)uint64_t v14 = v19;
        uint64_t v27 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v14[*(int *)(v27 + 20)], v23, v38);
        v14[*(int *)(v27 + 24)] = 0;
        v14[v26] = v39 & 1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v14, 0, 1, v25);
        type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
        swift_allocObject();
        uint64_t v28 = sub_10044D218((uint64_t)v22, (uint64_t)v35, (uint64_t)v14);
        swift_release();
        uint64_t v29 = v7 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (Strong)
        {
          uint64_t v31 = *(void *)(v29 + 8);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 72))(v28, ObjectType, v31);
          uint64_t Strong = swift_unknownObjectRelease();
        }
        if (v41(Strong)) {
          sub_100595970(0);
        }
        swift_release();
        swift_release();
        return swift_release();
      }
LABEL_11:
      if (_CocoaArrayWrapper.endIndex.getter()) {
        sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
      }
      goto LABEL_13;
    }
LABEL_4:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_10;
    }
    goto LABEL_5;
  }
  swift_release();
  *(void *)(v7 + v18) = v19;

  return swift_release();
}

BOOL sub_10059B8E8(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void *)(a2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 96);
  if (*(void *)(v4 + 16))
  {
    swift_retain();
    id v5 = v2;
    unint64_t v6 = sub_10035C188((uint64_t)v5);
    if (v7)
    {
      uint64_t v8 = *(void *)(*(void *)(v4 + 56) + 8 * v6);
      swift_endAccess();
      swift_bridgeObjectRetain();

      uint64_t v9 = *(void *)(v8 + 16);
      swift_release();
      swift_bridgeObjectRelease();
      return v9 == 0;
    }
    swift_endAccess();
    swift_release();
  }
  else
  {
    swift_endAccess();
  }
  return 1;
}

uint64_t sub_10059B9C4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  uint64_t result = TTRRemindersListViewModel.Item.reminderObjectID.getter();
  *a1 = result;
  return result;
}

uint64_t sub_10059BA10(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v45) = a1;
  uint64_t v3 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  __chkstk_darwin(v6);
  uint64_t v42 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  uint64_t v9 = __chkstk_darwin(updated - 8);
  uint64_t v46 = (uint64_t)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - v11;
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100018BF8(v13, (uint64_t)qword_1007A8768);
  swift_retain_n();
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = v5;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v48 = v18;
    uint64_t v19 = _typeName(_:qualified:)();
    uint64_t v47 = sub_1000385A8(v19, v20, &v48);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s: recreating presentationTree", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v5 = v16;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v21 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  swift_retain();
  id v22 = sub_10059D73C();
  uint64_t v24 = sub_100459C54((uint64_t)v22, v23);
  sub_1000499C4((uint64_t)v22);
  swift_release();
  sub_100593A94(v24);
  if ((v45 & 1) == 0)
  {
    uint64_t v25 = sub_10003B754(&qword_10078ADB8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v12, 1, 1, v25);
    goto LABEL_17;
  }
  uint64_t v45 = *(void *)(v2 + v21);
  swift_retain();
  uint64_t v41 = v5;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
  {
    uint64_t v40 = &_swiftEmptySetSingleton;
    goto LABEL_9;
  }
  if (_CocoaArrayWrapper.endIndex.getter())
  {
    sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v40 = v38;
  }
  else
  {
    uint64_t v40 = &_swiftEmptySetSingleton;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_9;
    }
  }
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_9:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
LABEL_10:
  if (_CocoaArrayWrapper.endIndex.getter())
  {
    sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
    goto LABEL_14;
  }
LABEL_13:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
LABEL_14:
    if (_CocoaArrayWrapper.endIndex.getter()) {
      sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
    }
  }
  uint64_t v26 = sub_10003B754(&qword_10078ADB8);
  uint64_t v27 = *(int *)(v26 + 48);
  uint64_t v28 = v42;
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
  *(void *)uint64_t v12 = v45;
  uint64_t v29 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v12[*(int *)(v29 + 20)], v28, v44);
  v12[*(int *)(v29 + 24)] = 0;
  v12[v27] = 1;
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v12, 0, 1, v26);
  id v5 = v41;
LABEL_17:
  uint64_t v30 = sub_10003B754(&qword_10078ADB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v5, 1, 1, v30);
  uint64_t v31 = v46;
  sub_1005B2804((uint64_t)v12, v46, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
  swift_allocObject();
  uint64_t v32 = swift_retain();
  uint64_t v33 = sub_10044D218(v32, (uint64_t)v5, v31);
  swift_release();
  *(void *)(v2 + v21) = v24;
  swift_retain();
  swift_release();
  uint64_t v34 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v35 = *(void *)(v34 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 72))(v33, ObjectType, v35);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    return sub_1005B286C((uint64_t)v12, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  }
  else
  {
    sub_1005B286C((uint64_t)v12, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
    swift_release();
    return swift_release();
  }
}

uint64_t sub_10059C0D4()
{
  sub_100588C8C();

  return swift_deallocClassInstance();
}

uint64_t sub_10059C12C()
{
  return type metadata accessor for TTRRemindersListViewModelSource(0);
}

uint64_t type metadata accessor for TTRRemindersListViewModelSource(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A87F8);
}

void sub_10059C154()
{
  type metadata accessor for TTRListType.SortingCapability();
  if (v0 <= 0x3F)
  {
    sub_10043BA84();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListViewModelSource.NextDataModelUpdateOptions(uint64_t result, __int16 *a2)
{
  __int16 v2 = *a2;
  *(unsigned char *)(result + 2) = *((unsigned char *)a2 + 2);
  *(_WORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListViewModelSource.NextDataModelUpdateOptions(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      int v2 = *((unsigned __int8 *)a1 + 3);
      if (*((unsigned char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
    else
    {
      int v2 = *(unsigned __int16 *)((char *)a1 + 3);
      if (*(unsigned __int16 *)((char *)a1 + 3)) {
        return (*a1 | (*((unsigned __int8 *)a1 + 2) << 16) | (v2 << 24)) - 16776961;
      }
    }
  }
  unsigned int v4 = *(unsigned __int8 *)a1;
  BOOL v5 = v4 >= 2;
  int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListViewModelSource.NextDataModelUpdateOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if ((a3 + 33554177) >> 24) {
    int v3 = 1;
  }
  else {
    int v3 = 2;
  }
  if (a3 <= 0xFE) {
    int v3 = 0;
  }
  if (a2 > 0xFE)
  {
    *(_WORD *)uint64_t result = a2 - 255;
    *(unsigned char *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      unsigned int v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2) {
        *(_WORD *)(result + 3) = v4;
      }
      else {
        *(unsigned char *)(result + 3) = v4;
      }
    }
  }
  else
  {
    if (!v3) {
      goto LABEL_10;
    }
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2) {
        return result;
      }
LABEL_16:
      *(unsigned char *)uint64_t result = a2 + 1;
      return result;
    }
    *(unsigned char *)(result + 3) = 0;
    if (a2) {
      goto LABEL_16;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListViewModelSource.NextDataModelUpdateOptions()
{
  return &type metadata for TTRRemindersListViewModelSource.NextDataModelUpdateOptions;
}

void destroy for TTRRemindersListReminderActionTarget(uint64_t a1)
{
}

uint64_t initializeWithCopy for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  BOOL v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1000AAE14(*(id *)a2, v4, v5, v6);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  return a1;
}

uint64_t assignWithCopy for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  BOOL v5 = *(void **)(a2 + 16);
  char v6 = *(unsigned char *)(a2 + 24);
  sub_1000AAE14(*(id *)a2, v4, v5, v6);
  uint64_t v7 = *(void **)a1;
  uint64_t v8 = *(void **)(a1 + 8);
  uint64_t v9 = *(void **)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  char v10 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v6;
  sub_1000AA844(v7, v8, v9, v10);
  return a1;
}

uint64_t assignWithTake for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  char v4 = *(unsigned char *)(a2 + 24);
  BOOL v5 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  char v6 = *(void **)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  char v8 = *(unsigned char *)(a1 + 24);
  *(unsigned char *)(a1 + 24) = v4;
  sub_1000AA844(v5, v7, v6, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListReminderActionTarget(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFA && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 250);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 6) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListReminderActionTarget(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 250;
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFA) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10059C578(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_10059C580(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListReminderActionTarget()
{
  return &type metadata for TTRRemindersListReminderActionTarget;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListViewModelMembershipChangeSummary(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005B842C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1001086A4);
}

void destroy for TTRRemindersListViewModelMembershipChangeSummary(uint64_t a1)
{
}

uint64_t *assignWithCopy for TTRRemindersListViewModelMembershipChangeSummary(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005B84A8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1001086A4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1001086F0);
}

uint64_t *assignWithTake for TTRRemindersListViewModelMembershipChangeSummary(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005B852C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1001086F0);
}

uint64_t getEnumTagSinglePayload for TTRRemindersListViewModelMembershipChangeSummary(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3E && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 62);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 16) & 0x3C | (*(unsigned __int8 *)(a1 + 16) >> 6)) ^ 0x3F;
  if (v3 >= 0x3D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListViewModelMembershipChangeSummary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3D)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 62;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3E) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_10059C6A8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 6;
}

uint64_t sub_10059C6B4(uint64_t result)
{
  *(unsigned char *)(result + 16) &= 0x3Fu;
  return result;
}

uint64_t sub_10059C6C4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListViewModelMembershipChangeSummary()
{
  return &type metadata for TTRRemindersListViewModelMembershipChangeSummary;
}

double sub_10059C6E8@<D0>(_OWORD *a1@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr))(*(void *)v1 + 336))(v5);
  long long v3 = v5[1];
  *a1 = v5[0];
  a1[1] = v3;
  double result = *(double *)&v6;
  a1[2] = v6;
  return result;
}

uint64_t sub_10059C750()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 344))();
}

uint64_t sub_10059C77C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 352))();
}

uint64_t sub_10059C7A8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_10059C7F4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 24))(ObjectType, v1);
}

uint64_t sub_10059C840()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t sub_10059C88C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t sub_10059C8B8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 56))(ObjectType, v1);
}

uint64_t sub_10059C914()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 64))(ObjectType, v1);
}

uint64_t sub_10059C960()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 424))();
}

uint64_t sub_10059C98C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 72))(ObjectType, v1);
}

uint64_t sub_10059C9D8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 80))(ObjectType, v1);
}

uint64_t TTRListDetailCreationEditor.changeItem.getter()
{
  return swift_retain();
}

uint64_t sub_10059CA2C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))() & 1;
}

uint64_t sub_10059CA74()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 456))();
}

uint64_t sub_10059CAA0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 464))();
}

uint64_t sub_10059CACC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 480))();
}

uint64_t sub_10059CB10()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 488))();
}

uint64_t sub_10059CB54()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 496))();
}

uint64_t sub_10059CB80()
{
  return swift_retain();
}

uint64_t sub_10059CBB8()
{
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated - 8);
  int v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v3 - 8);
  BOOL v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078ADB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = sub_10003B754(&qword_10078ADB8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
  swift_allocObject();
  uint64_t v8 = swift_retain();
  uint64_t v9 = sub_10044D218(v8, (uint64_t)v5, (uint64_t)v2);
  swift_release();
  return v9;
}

void *sub_10059CD48(void *a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
  swift_beginAccess();
  uint64_t v4 = *v3;
  id v5 = a1;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100598448(v5, v4);

  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_10059CDDC@<X0>(uint64_t a1@<X8>)
{
  sub_10058B0B0((uint64_t)v3);
  return sub_100028C3C((uint64_t)v3, a1, (uint64_t *)&unk_100791F10);
}

uint64_t sub_10059CE28()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 656))();
}

uint64_t sub_10059CE54()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 664))();
}

double sub_10059CE88@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  (*(void (**)(_OWORD *__return_ptr, void))(*(void *)v2 + 680))(v6, a1 & 1);
  double result = *(double *)v6;
  long long v5 = v6[1];
  *(_OWORD *)a2 = v6[0];
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v7;
  return result;
}

uint64_t sub_10059CEF8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 928))();
}

uint64_t sub_10059CF24()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 688))();
}

uint64_t sub_10059CF54(uint64_t a1, int a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_10003B754(&qword_10078ADB0);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v12 = a1;
  uint64_t v10 = a1;
  sub_10059B45C((uint64_t)v6, a2, (uint64_t (*)(void *))sub_1005A25C8, (uint64_t)v11, (uint64_t (*)(uint64_t))sub_1005A25D0, (uint64_t)v9);
  return sub_10003B6F8((uint64_t)v6, &qword_10078ADA8);
}

uint64_t sub_10059D074()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 896))();
}

uint64_t sub_10059D0B0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 744))();
}

uint64_t sub_10059D0E4()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 768))();
}

uint64_t sub_10059D128()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 832))();
}

uint64_t sub_10059D154()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 840))();
}

uint64_t sub_10059D180()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 856))();
}

uint64_t sub_10059D1AC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 848))();
}

uint64_t sub_10059D1D8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 864))();
}

uint64_t sub_10059D208()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 904))();
}

uint64_t sub_10059D234()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 912))();
}

uint64_t sub_10059D260()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 944))();
}

uint64_t sub_10059D28C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 952))();
}

uint64_t sub_10059D2B8()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 960))();
}

uint64_t sub_10059D2E4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 96))(ObjectType, v1);
}

uint64_t sub_10059D340@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  return sub_1005B2804(v3, a1, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
}

uint64_t sub_10059D3AC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 984))();
}

uint64_t sub_10059D3D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 160))(v6, ObjectType, v3);
  return sub_100028C3C((uint64_t)v6, a1, &qword_100792800);
}

uint64_t sub_10059D450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v5 + 168))(v8, a1, ObjectType, v5);
  return sub_100028C3C((uint64_t)v8, a2, &qword_100792800);
}

uint64_t sub_10059D4D4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 176))(a1, a2, ObjectType, v5);
}

uint64_t sub_10059D53C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1016))();
}

uint64_t sub_10059D568()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1024))();
}

uint64_t sub_10059D594()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1032))();
}

uint64_t sub_10059D5C0(Swift::Bool a1)
{
  swift_retain();
  TTRRemindersListCurrentTipCapability.requestSetCurrentTipHidden(_:)(a1);

  return swift_release();
}

uint64_t sub_10059D610()
{
  swift_retain();
  TTRRemindersListCurrentTipCapability.requestDismissTip()();

  return swift_release();
}

uint64_t sub_10059D658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListTreeViewModel();
  sub_1000145EC(a2, (uint64_t)v17);
  uint64_t v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
  swift_beginAccess();
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10059D73C();
  uint64_t v11 = v10;
  uint64_t v12 = v18;
  uint64_t v13 = v19;
  uint64_t v14 = sub_100038E88((uint64_t)v17, v18);
  uint64_t v15 = sub_10047FDC4(a1, v14, v8, (uint64_t)v9, v11, v6, v12, v13);
  sub_100038CD8((uint64_t)v17);
  return v15;
}

uint64_t (*sub_10059D73C())(uint64_t a1)
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v12 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v13 = *(void *)(v12 + 8);
    uint64_t v14 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess();
    sub_10003B694(v14, (uint64_t)v4, &qword_100786EF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
    {
      uint64_t v23 = sub_1005B6A88((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      __int16 v24 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 1064))(v23);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v13 + 24))(v31, ObjectType, v13);
      swift_unknownObjectRelease();
      sub_100038ED8(v31, (uint64_t)v30);
      sub_1005B6A88((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      unint64_t v26 = (*(unsigned __int8 *)(v6 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v27 = swift_allocObject();
      sub_100038ED8(v30, v27 + 16);
      sub_1005B6A88((uint64_t)v9, v27 + v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      uint64_t v28 = (unsigned char *)(v27 + v26 + v7);
      *uint64_t v28 = v24;
      v28[1] = HIBYTE(v24) & 1;
      return sub_1005B2D00;
    }
    swift_unknownObjectRelease();
    sub_10003B6F8((uint64_t)v4, &qword_100786EF0);
  }
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_1007A8768);
  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    *(void *)&v31[0] = v19;
    uint64_t v20 = _typeName(_:qualified:)();
    *(void *)&v30[0] = sub_1000385A8(v20, v21, (uint64_t *)v31);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s: failed to provide presentationTreeCreator", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  return 0;
}

uint64_t sub_10059DBB0(char a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v138 = a7;
  int v139 = a6;
  uint64_t v143 = a4;
  uint64_t v149 = a3;
  uint64_t v12 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v12 - 8);
  uint64_t v141 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  uint64_t v15 = __chkstk_darwin(updated - 8);
  uint64_t v140 = (uint64_t)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v130 - v17;
  uint64_t v133 = sub_10003B754(&qword_1007936B0);
  __chkstk_darwin(v133);
  uint64_t v20 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v22 = __chkstk_darwin(v21 - 8);
  uint64_t v147 = (char *)&v130 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v132 = (uint64_t)&v130 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v136 = (char *)&v130 - v27;
  __chkstk_darwin(v26);
  uint64_t v154 = (uint64_t)&v130 - v28;
  uint64_t v145 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v144 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  uint64_t v151 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v153 = *(void *)(v146 - 8);
  uint64_t v30 = __chkstk_darwin(v146);
  uint64_t v135 = (uint64_t)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v131 = (uint64_t)&v130 - v33;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v130 - v34;
  uint64_t v36 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  uint64_t v130 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v38 = (char *)&v130 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v39 - 8);
  uint64_t v41 = (char *)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    *(unsigned char *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 1;
  }
  sub_1005885DC(a2);
  uint64_t v42 = v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v42, (uint64_t)v41, &qword_100786EF0);
  uint64_t v43 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  LODWORD(v42) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v41, 1, v43);
  sub_10003B6F8((uint64_t)v41, &qword_100786EF0);
  if (v42 == 1)
  {
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v44 = type metadata accessor for Logger();
    sub_100018BF8(v44, (uint64_t)qword_1007A8768);
    uint64_t v45 = Logger.logObject.getter();
    os_log_type_t v46 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v47 = 0;
      _os_log_impl((void *)&_mh_execute_header, v45, v46, "Unexpected: a non-nil ListInfo should be set by the time the tree is updated.", v47, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v48 = *(void *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v51 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 72))(ObjectType, v48);
  uint64_t v134 = v20;
  if (v51)
  {
    uint64_t v52 = v50;
    uint64_t v53 = swift_getObjectType();
    LOBYTE(v52) = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(v53, v52);
    swift_unknownObjectRelease();
    uint64_t v51 = v52 & 1;
  }
  uint64_t v54 = v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v56 = *(void *)(v54 + 8);
    uint64_t v57 = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 40))(v51, 0, v57, v56);
    uint64_t Strong = swift_unknownObjectRelease();
  }
  uint64_t v137 = v54;
  uint64_t v58 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v160 = &_swiftEmptySetSingleton;
  uint64_t v152 = (unsigned char *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions);
  BOOL v59 = *(unsigned char *)(v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions + 2) == 1;
  uint64_t v150 = v8;
  uint64_t v142 = v18;
  uint64_t v148 = a5;
  if (v59)
  {
    uint64_t v60 = v8 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements;
    swift_beginAccess();
    uint64_t v61 = *(void *)(*(void *)v60 + 16);
    if (v61)
    {
      uint64_t v62 = (uint64_t)&v38[*(int *)(v36 + 20)];
      uint64_t v63 = *(void *)v60
          + ((*(unsigned __int8 *)(v130 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80));
      uint64_t v64 = *(void *)(v130 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1005B2804(v63, (uint64_t)v38, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        sub_1005B2804(v62, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B286C((uint64_t)v38, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        unint64_t v65 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter();
        sub_1005B286C((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (v65)
        {
          sub_100027C64(&v155, v65);
        }
        v63 += v64;
        --v61;
      }
      while (v61);
      swift_bridgeObjectRelease();
      uint64_t v58 = (uint64_t)v160;
    }
    *(void *)uint64_t v60 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    unint64_t v66 = (void *)(v150
                   + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
    swift_beginAccess();
    void *v66 = &_swiftEmptyDictionarySingleton;
    uint64_t Strong = swift_bridgeObjectRelease();
  }
  if ((v58 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v130 = __CocoaSet.count.getter();
    uint64_t Strong = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v130 = *(void *)(v58 + 16);
  }
  uint64_t v67 = v154;
  uint64_t v68 = v149(Strong);
  if (v152[1] == 1)
  {
    swift_retain();
    uint64_t v69 = sub_1004623E0(v68);
    swift_release();
    sub_1005979D0((unint64_t)v69);
    uint64_t v58 = (uint64_t)v160;
  }
  sub_100593A94(v68);
  uint64_t v143 = REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter();
  uint64_t v149 = (uint64_t (*)(uint64_t))v68;
  if ((v58 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v70 = __CocoaSet.count.getter();
    if (!v70)
    {
LABEL_41:
      swift_bridgeObjectRelease();
      unint64_t v87 = _swiftEmptyArrayStorage;
      uint64_t v88 = v67;
LABEL_42:
      sub_1005B40AC((unint64_t)v87, v143);
      swift_bridgeObjectRelease();
      uint64x2_t v89 = v142;
      uint64_t v90 = (uint64_t)v136;
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
      {
        if (_CocoaArrayWrapper.endIndex.getter())
        {
          sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
        }
        else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        {
          goto LABEL_43;
        }
        if (_CocoaArrayWrapper.endIndex.getter())
        {
          sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
          goto LABEL_44;
        }
      }
LABEL_43:
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      {
LABEL_46:
        REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
        uint64_t v91 = v153;
        uint64_t v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v153 + 56);
        uint64_t v93 = v146;
        v92(v88, 1, 1, v146);
        sub_10003B694(v138, v90, (uint64_t *)&unk_100788DC0);
        uint64_t v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
        uint64_t v153 = v91 + 48;
        if (v94(v90, 1, v93) == 1)
        {
          sub_10003B6F8(v90, (uint64_t *)&unk_100788DC0);
        }
        else
        {
          uint64_t v95 = v131;
          sub_1005B6A88(v90, v131, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v96 = (uint64_t)v134;
          sub_1005B2804(v95, (uint64_t)v134, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          v92(v96, 0, 1, v93);
          swift_storeEnumTagMultiPayload();
          uint64_t v97 = v132;
          sub_100461C08(v96, v132);
          sub_10003B6F8(v96, &qword_1007936B0);
          sub_1005B286C(v95, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_10003B6F8(v88, (uint64_t *)&unk_100788DC0);
          sub_100028C3C(v97, v88, (uint64_t *)&unk_100788DC0);
        }
        uint64_t v98 = (uint64_t)v147;
        if ((v139 & 1) != 0 || *v152 != 1)
        {
          uint64_t v107 = sub_10003B754(&qword_10078ADB8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v89, 1, 1, v107);
        }
        else
        {
          BOOL v99 = v130 != 0;
          uint64_t v100 = sub_10003B754(&qword_10078ADB8);
          uint64_t v101 = *(int *)(v100 + 48);
          uint64_t v102 = *(void *)(v150 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
          uint64_t v103 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
          (*(void (**)(char *, char *, uint64_t))(v144 + 16))(&v89[*(int *)(v103 + 20)], v151, v145);
          *(void *)uint64x2_t v89 = v102;
          uint64_t v104 = *(int *)(v103 + 24);
          uint64_t v93 = v146;
          v89[v104] = v99;
          v89[v101] = 1;
          uint64_t v105 = *(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56);
          uint64_t v106 = v100;
          uint64_t v98 = (uint64_t)v147;
          v105(v89, 0, 1, v106);
          swift_retain();
        }
        uint64_t v108 = v149;
        sub_10003B694(v154, v98, (uint64_t *)&unk_100788DC0);
        if (v94(v98, 1, v93) == 1)
        {
          uint64_t v109 = sub_10003B754(&qword_10078ADB0);
          uint64_t v110 = v141;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v109 - 8) + 56))(v141, 1, 1, v109);
        }
        else
        {
          uint64_t v111 = v135;
          sub_1005B6A88(v98, v135, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v112 = sub_10003B754(&qword_10078ADB0);
          uint64_t v113 = *(int *)(v112 + 48);
          uint64_t v110 = v141;
          sub_1005B2804(v111, v141, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          *(unsigned char *)(v110 + v113) = 0;
          sub_1005B286C(v111, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v110, 0, 1, v112);
        }
        uint64_t v114 = v137;
        swift_bridgeObjectRelease();
        uint64_t v115 = v140;
        sub_1005B2804((uint64_t)v89, v140, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
        type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
        swift_allocObject();
        uint64_t v116 = swift_retain();
        uint64_t v117 = sub_10044D218(v116, v110, v115);
        swift_release();
        *(void *)(v150 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree) = v108;
        swift_retain();
        swift_release();
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v118 = *(void *)(v114 + 8);
          uint64_t v119 = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 72))(v117, v119, v118);
          swift_unknownObjectRelease();
        }
        uint64_t v120 = *(void *)(REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter() + 16);
        swift_bridgeObjectRelease();
        if (v120)
        {
          REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter();
          uint64_t v121 = (void *)sub_10059F0F0();
          uint64_t v123 = v122;
          uint64_t v125 = v124;
          unsigned int v126 = v124;
          swift_bridgeObjectRelease();
          if (v126 <= 0xFB)
          {
            if (swift_unknownObjectWeakLoadStrong())
            {
              uint64_t v127 = *(void *)(v114 + 8);
              uint64_t v128 = swift_getObjectType();
              (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v127 + 152))(v121, v123, v125, v128, v127);
              swift_unknownObjectRelease();
            }
            sub_1001088FC(v121, v123, v125);
          }
        }
        sub_100595970(0);
        swift_release();
        swift_release();
        sub_1005B286C((uint64_t)v89, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
        sub_10003B6F8(v154, (uint64_t *)&unk_100788DC0);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v144 + 8))(v151, v145);
        uint64_t v129 = v152;
        *(_WORD *)uint64_t v152 = 257;
        v129[2] = 0;
        return result;
      }
LABEL_44:
      if (_CocoaArrayWrapper.endIndex.getter()) {
        sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
      }
      goto LABEL_46;
    }
    uint64_t v71 = v70;
    uint64_t v159 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v156 = __CocoaSet.startIndex.getter();
    uint64_t v157 = v72;
    char v158 = 1;
    if ((v71 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
    __break(1u);
  }
  uint64_t v71 = *(void *)(v58 + 16);
  swift_bridgeObjectRetain();
  if (!v71) {
    goto LABEL_41;
  }
  uint64_t v159 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v156 = sub_1005AF66C(v58);
  uint64_t v157 = v73;
  char v158 = v74 & 1;
  while (1)
  {
LABEL_35:
    while (1)
    {
      int64_t v80 = v156;
      uint64_t v81 = v157;
      char v82 = v158;
      sub_10059876C(v156, v157, v158, v58);
      uint64_t v84 = v83;
      REMObjectID.codable.getter();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
      if ((v58 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v75 = sub_1005AF9B0(v80, v81, v82, v58);
      uint64_t v77 = v76;
      char v79 = v78;
      sub_1000205F8(v80, v81, v82);
      uint64_t v156 = v75;
      uint64_t v157 = v77;
      char v158 = v79 & 1;
      if (!--v71) {
        goto LABEL_40;
      }
    }
    if ((v82 & 1) == 0) {
      break;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_10003B754(&qword_1007A8D68);
    uint64_t v86 = (void (*)(id *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v86(&v155, 0);
    if (!--v71)
    {
LABEL_40:
      sub_1000205F8(v156, v157, v158);
      unint64_t v87 = v159;
      swift_bridgeObjectRelease();
      uint64_t v88 = v154;
      goto LABEL_42;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10059EDC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListTreeViewModel();
  sub_1000145EC(a2, (uint64_t)v24);
  uint64_t v7 = (uint64_t *)(a3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
  swift_beginAccess();
  uint64_t v8 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_10059D73C();
  uint64_t v11 = v10;
  sub_1000145EC((uint64_t)v24, (uint64_t)v21);
  uint64_t v12 = v22;
  uint64_t v13 = v23;
  uint64_t v14 = sub_100038E88((uint64_t)v21, v22);
  __chkstk_darwin(v14);
  uint64_t v16 = &v21[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(unsigned char *))(v17 + 16))(v16);
  uint64_t v18 = sub_100475980(a1, 1, (uint64_t)v16, v8, (uint64_t)v9, v11, v6, v12, v13);
  sub_100038CD8((uint64_t)v21);
  sub_100038CD8((uint64_t)v24);
  return v18;
}

BOOL sub_10059EF4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10003B754(&qword_1007A09C0);
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078FA98);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListUncommittedSection(0);
  sub_1005B2804(a2 + *(int *)(v10 + 20), (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10003B694(a2, (uint64_t)&v6[*(int *)(v4 + 64)], &qword_1007936B0);
  uint64_t v11 = &v6[*(int *)(v4 + 60)];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  unsigned char v11[16] = 1;
  sub_10045E8E0((uint64_t)v9);
  sub_10003B6F8((uint64_t)v6, &qword_1007A09C0);
  uint64_t v12 = sub_10003B754(&qword_10078FAA0);
  BOOL v13 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v9, 1, v12) != 1;
  sub_10003B6F8((uint64_t)v9, &qword_10078FA98);
  return v13;
}

uint64_t sub_10059F0F0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v101 = ((char *)&v94 - v7);
  __chkstk_darwin(v6);
  uint64_t v102 = (char *)&v94 - v8;
  uint64_t v9 = sub_10003B754(&qword_1007A8D78);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (void **)((char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v94 - v17;
  static REMRemindersListDataView.GroceryAutoCategorizationMessage.coalesceRecent(encodedMessageStrings:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10003B6F8((uint64_t)v11, &qword_1007A8D78);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100018BF8(v19, (uint64_t)qword_1007A8768);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "summarizeAutoCategorizationMessages: error coalescing encoded AutoCategorization message strings", v22, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v100 = v0;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
  (*(void (**)(void **, char *, uint64_t))(v13 + 16))(v16, v18, v12);
  int v23 = (*(uint64_t (**)(void **, uint64_t))(v13 + 88))(v16, v12);
  if (v23 == enum case for REMRemindersListDataView.GroceryAutoCategorizationMessage.oneReminderToOneSection(_:))
  {
    uint64_t v97 = v18;
    uint64_t v98 = v12;
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    uint64_t v24 = sub_10003B754(&qword_1007A8D90);
    uint64_t v25 = (void **)((char *)v16 + *(int *)(v24 + 48));
    uint64_t v95 = (char *)v16 + *(int *)(v24 + 64);
    uint64_t v99 = v2;
    uint64_t v26 = *(void (**)(char *, void **, uint64_t))(v2 + 32);
    v26(v102, v16, v1);
    uint64_t v96 = v1;
    v26((char *)v101, v25, v1);
    id v27 = [self cdEntityName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v28 = objc_allocWithZone((Class)REMObjectID);
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    NSString v30 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v31 = [v28 initWithUUID:isa entityName:v30];

    sub_1000368FC(0, &qword_10078B5E8);
    id v32 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v33 = objc_allocWithZone((Class)REMObjectID);
    Class v34 = UUID._bridgeToObjectiveC()().super.isa;
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v33 initWithUUID:v34 entityName:v35];

    uint64_t v37 = v100;
    uint64_t v38 = *(void *)(v100 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v40 = (*(uint64_t (**)(id, uint64_t, uint64_t))(v38 + 120))(v31, ObjectType, v38);
    if (v40)
    {
      uint64_t v41 = (void *)v40;
      uint64_t v42 = (*(uint64_t (**)(void))(*(void *)v37 + 424))();
      if (v42)
      {
        uint64_t v43 = v42;
        if (!swift_unknownObjectWeakLoadStrong())
        {

          swift_unknownObjectRelease();
          goto LABEL_22;
        }
        uint64_t v44 = *(void *)(v43 + 64);
        uint64_t v45 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v44 + 16))(v45, v44);
        swift_unknownObjectRelease();
        id v46 = v36;
        TTRSection.init(with:store:)();
        int v48 = ~v47;
        swift_unknownObjectRelease();
        if (v48)
        {

          uint64_t v49 = *(void (**)(NSObject *, uint64_t))(v99 + 8);
          uint64_t v50 = v96;
          v49(v101, v96);
          v49(v102, v50);
          (*(void (**)(char *, uint64_t))(v13 + 8))(v97, v98);
          uint64_t v51 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8))(v95, v51);
          return (uint64_t)v41;
        }
      }
    }
LABEL_22:
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v69 = type metadata accessor for Logger();
    sub_100018BF8(v69, (uint64_t)qword_1007A8768);
    id v70 = v36;
    id v71 = v31;
    id v72 = v70;
    id v73 = v71;
    char v74 = Logger.logObject.getter();
    os_log_type_t v75 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v74, v75))
    {
      uint64_t v76 = swift_slowAlloc();
      uint64_t v77 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v76 = 138412546;
      uint64_t v100 = (uint64_t)v74;
      id v103 = v73;
      id v78 = v73;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v77 = v73;

      *(_WORD *)(v76 + 12) = 2112;
      id v103 = v72;
      id v79 = v72;
      char v74 = v100;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v77[1] = v72;

      _os_log_impl((void *)&_mh_execute_header, v74, v75, "summarizeAutoCategorizationMessages: could not get reminder or section {reminderObjectID: %@, sectionObjectID: %@}", (uint8_t *)v76, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v78 = v72;
    }
    uint64_t v81 = v97;
    uint64_t v80 = v98;

    char v82 = *(void (**)(NSObject *, uint64_t))(v99 + 8);
    uint64_t v83 = v96;
    v82(v101, v96);
    v82(v102, v83);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v81, v80);
    uint64_t v84 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v84 - 8) + 8))(v95, v84);
    return 0;
  }
  if (v23 == enum case for REMRemindersListDataView.GroceryAutoCategorizationMessage.manyRemindersToOneSection(_:))
  {
    uint64_t v97 = v18;
    uint64_t v98 = v12;
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    uint64_t v41 = *v16;
    uint64_t v52 = sub_10003B754(&qword_1007A8D88);
    uint64_t v53 = (char *)v16 + *(int *)(v52 + 48);
    uint64_t v102 = (char *)v16 + *(int *)(v52 + 64);
    uint64_t v99 = v2;
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v53, v1);
    sub_1000368FC(0, &qword_10078B5E8);
    id v54 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v55 = objc_allocWithZone((Class)REMObjectID);
    Class v56 = UUID._bridgeToObjectiveC()().super.isa;
    NSString v57 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v58 = [v55 initWithUUID:v56 entityName:v57];

    uint64_t v59 = (*(uint64_t (**)(void))(*(void *)v100 + 424))();
    if (v59)
    {
      uint64_t v60 = v59;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v61 = *(void *)(v60 + 64);
        uint64_t v62 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v61 + 16))(v62, v61);
        swift_unknownObjectRelease();
        id v63 = v58;
        TTRSection.init(with:store:)();
        int v65 = ~v64;
        swift_unknownObjectRelease();
        if (v65)
        {

          (*(void (**)(char *, uint64_t))(v99 + 8))(v5, v1);
          (*(void (**)(char *, uint64_t))(v13 + 8))(v97, v98);
          uint64_t v66 = type metadata accessor for Date();
          (*(void (**)(char *, uint64_t))(*(void *)(v66 - 8) + 8))(v102, v66);
          return (uint64_t)v41;
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v85 = type metadata accessor for Logger();
    sub_100018BF8(v85, (uint64_t)qword_1007A8768);
    id v86 = v58;
    unint64_t v87 = Logger.logObject.getter();
    os_log_type_t v88 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v87, v88))
    {
      uint64x2_t v89 = (uint8_t *)swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      *(_DWORD *)uint64x2_t v89 = 138412290;
      uint64_t v101 = v87;
      id v103 = v86;
      id v90 = v86;
      unint64_t v87 = v101;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v100 = v86;

      _os_log_impl((void *)&_mh_execute_header, v87, v88, "summarizeAutoCategorizationMessages: could not get section {sectionObjectID: %@}", v89, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v91 = v98;

    (*(void (**)(char *, uint64_t))(v99 + 8))(v5, v1);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v97, v91);
    uint64_t v92 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v92 - 8) + 8))(v102, v92);
    return 0;
  }
  if (v23 == enum case for REMRemindersListDataView.GroceryAutoCategorizationMessage.manyRemindersToManySections(_:))
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    (*(void (**)(void **, uint64_t))(v13 + 96))(v16, v12);
    uint64_t v41 = *v16;
    uint64_t v67 = (char *)v16 + *(int *)(sub_10003B754(&qword_1007A8D80) + 48);
    uint64_t v68 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t))(*(void *)(v68 - 8) + 8))(v67, v68);
    return (uint64_t)v41;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10059FE88()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  swift_retain_n();
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
  {
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
    }
    else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
    {
      goto LABEL_2;
    }
    if (_CocoaArrayWrapper.endIndex.getter())
    {
      sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
      goto LABEL_3;
    }
  }
LABEL_2:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  if (!_CocoaArrayWrapper.endIndex.getter())
  {
LABEL_5:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
LABEL_6:
  if (_CocoaArrayWrapper.endIndex.getter()) {
    sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
  }
LABEL_8:
  REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  swift_retain();
  sub_1005B56E8(0, (uint64_t)v10, (uint64_t)v7, 0, (uint64_t)v3, v0, v0);
  swift_release();
  sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_10003B6F8((uint64_t)v10, &qword_100786EF0);
  return swift_release_n();
}

uint64_t sub_1005A01D4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v68 = a3;
  uint64_t v69 = a4;
  uint64_t v85 = a1;
  uint64_t v7 = sub_10003B754(&qword_10078FAA0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v77 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_1007A09B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10003B754(&qword_10079D588);
  __chkstk_darwin(v76);
  uint64_t v75 = (uint64_t)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v14 - 8);
  uint64_t v74 = (uint64_t)v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10003B754(&qword_1007A09C0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754(&qword_10078FA98);
  __chkstk_darwin(v19 - 8);
  os_log_type_t v21 = (char *)v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v87 = (uint64_t)v67 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v25 = *(void *)(a2 + 16);
  if (!v25) {
    return v25 & 1;
  }
  uint64_t v84 = v7;
  v67[0] = a5;
  unint64_t v71 = v25;
  uint64_t v83 = a2 + ((*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80));
  uint64_t v81 = (uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  char v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  v67[1] = a2;
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v27 = v71;
  int v70 = 0;
  unint64_t v28 = 0;
  uint64_t v80 = -(uint64_t)v71;
  uint64_t v29 = v23;
  uint64_t v72 = v22;
  uint64_t v73 = v16;
LABEL_3:
  if (v28 > v27) {
    unint64_t v27 = v28;
  }
  uint64_t v86 = -(uint64_t)v27;
  ++v28;
  while (v86 + v28 != 1)
  {
    uint64_t v30 = v87;
    sub_1005B2804(v83 + *(void *)(v29 + 72) * (v28 - 1), v87, type metadata accessor for TTRRemindersListUncommittedReminder);
    uint64_t v31 = *(int *)(v22 + 24);
    uint64_t v32 = *(void *)(v30 + v31);
    uint64_t v79 = v30 + *(int *)(v22 + 20);
    sub_1005B2804(v79, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10003B694(v30, (uint64_t)&v18[*(int *)(v16 + 56)], &qword_1007936B0);
    id v33 = &v18[*(int *)(v16 + 52)];
    *(void *)id v33 = v32;
    *((void *)v33 + 1) = 0;
    v33[16] = 1;
    swift_retain();
    swift_retain();
    TTRMutableTreeStorage.insertTemporaryItem(with:)();
    swift_release();
    uint64_t v34 = sub_10003B754(&qword_1007A0A00);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v12, 1, v34) == 1)
    {
      sub_10003B6F8((uint64_t)v12, &qword_1007A09B8);
      uint64_t v35 = 1;
      uint64_t v36 = v84;
    }
    else
    {
      uint64_t v37 = *(void *)&v12[*(int *)(v34 + 48)];
      uint64_t v78 = v31;
      uint64_t v38 = v18;
      uint64_t v39 = v21;
      uint64_t v40 = v76;
      uint64_t v41 = *(int *)(v76 + 48);
      uint64_t v42 = (uint64_t)v12;
      uint64_t v43 = v12;
      uint64_t v44 = v75;
      sub_100028C3C(v42, v75, (uint64_t *)&unk_100788DC0);
      *(void *)(v44 + v41) = v37;
      uint64_t v45 = *(void *)(v44 + *(int *)(v40 + 48));
      uint64_t v46 = v44;
      uint64_t v12 = v43;
      uint64_t v47 = v74;
      sub_100028C3C(v46, v74, (uint64_t *)&unk_100788DC0);
      uint64_t v48 = type metadata accessor for TTRRemindersListViewModel.Item();
      uint64_t v49 = (uint64_t)v77;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v77, 1, 1, v48);
      sub_1000DFC68(v47, v49);
      uint64_t v36 = v84;
      *(void *)(v49 + *(int *)(v84 + 36)) = v45;
      uint64_t v50 = v49;
      os_log_type_t v21 = v39;
      uint64_t v18 = v38;
      uint64_t v22 = v72;
      sub_100028C3C(v50, (uint64_t)v21, &qword_10078FAA0);
      uint64_t v51 = v47;
      uint64_t v16 = v73;
      uint64_t v31 = v78;
      sub_10003B6F8(v51, (uint64_t *)&unk_100788DC0);
      uint64_t v35 = 0;
    }
    (*v82)(v21, v35, 1, v36);
    sub_10003B6F8((uint64_t)v18, &qword_1007A09C0);
    int v52 = (*v81)(v21, 1, v36);
    sub_10003B6F8((uint64_t)v21, &qword_10078FA98);
    if (v52 != 1)
    {
      uint64_t v57 = *(void *)(v87 + v31);
      if (v57)
      {
        uint64_t v58 = v29;
        uint64_t v59 = *(void **)(v57 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem);
        type metadata accessor for TTRReminderEditor();
        sub_1005B69D8((unint64_t *)&qword_100791DA0, (void (*)(uint64_t))&type metadata accessor for TTRReminderEditor);
        id v60 = v59;
        TTRUndoableEditing.init(changeItem:undoManager:)();
        uint64_t v61 = v88;
        (*(void (**)(uint64_t, uint64_t))(*(void *)v68 + 768))(v79, v88);
        if (v69)
        {
          v69(v61);

          swift_release();
        }
        else
        {
          swift_release();
        }
        uint64_t v29 = v58;
      }
      else
      {
        if (qword_100785708 != -1) {
          swift_once();
        }
        uint64_t v62 = type metadata accessor for Logger();
        sub_100018BF8(v62, (uint64_t)qword_1007A8768);
        id v63 = Logger.logObject.getter();
        os_log_type_t v64 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v63, v64))
        {
          int v65 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)int v65 = 0;
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "Missing reminderChangeItem for presetUncommittedReminder", v65, 2u);
          swift_slowDealloc();
        }
      }
      unint64_t v66 = v80 + v28;
      uint64_t result = sub_1005B286C(v87, type metadata accessor for TTRRemindersListUncommittedReminder);
      int v70 = 1;
      unint64_t v27 = v71;
      if (!v66)
      {
LABEL_27:
        swift_bridgeObjectRelease();
        LOBYTE(v25) = v70;
        return v25 & 1;
      }
      goto LABEL_3;
    }
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_100018BF8(v53, (uint64_t)qword_1007A8768);
    id v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v54, v55))
    {
      Class v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Class v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Failed to insert uncommittedReminder", v56, 2u);
      swift_slowDealloc();
    }

    uint64_t result = sub_1005B286C(v87, type metadata accessor for TTRRemindersListUncommittedReminder);
    ++v28;
    if (v80 + v28 == 1) {
      goto LABEL_27;
    }
  }
  __break(1u);
  return result;
}

BOOL sub_1005A0AAC()
{
  swift_retain();
  uint64_t v0 = TTRMutableTreeStorage.delete(_:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1 != 0;
}

uint64_t sub_1005A0B00(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item() - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9) {
    return 0;
  }
  uint64_t v10 = a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v11 = *(void *)(v6 + 72);
  swift_bridgeObjectRetain();
  while (1)
  {
    sub_1005B2804(v10, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload) {
      break;
    }
    sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
    sub_1005B286C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    v10 += v11;
    if (!--v9)
    {
      uint64_t v13 = 0;
      goto LABEL_9;
    }
  }
  if ((EnumCaseMultiPayload - 1) < 2) {
    sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
  }
  sub_1005B286C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v13 = 1;
LABEL_9:
  swift_bridgeObjectRelease();
  return v13;
}

void sub_1005A0CFC(char a1)
{
  char v2 = 1;
  char v3 = 0;
  switch(a1)
  {
    case 1:
      char v3 = 1;
      goto LABEL_8;
    case 2:
      return;
    case 3:
      goto LABEL_3;
    case 4:
    case 5:
    case 7:
      char v2 = 0;
LABEL_3:
      char v3 = 1;
      goto LABEL_10;
    case 6:
    case 10:
LABEL_8:
      char v2 = v3;
      goto LABEL_9;
    case 8:
    case 9:
      goto LABEL_10;
    default:
      uint64_t v4 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v5 = *(void *)(v4 + 8);
        uint64_t ObjectType = swift_getObjectType();
        LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
        swift_unknownObjectRelease();
        if (v5)
        {
          uint64_t v7 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions;
          *(_WORD *)uint64_t v7 = 0;
          *(unsigned char *)(v7 + 2) = 1;
          *(unsigned char *)(v1
                   + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 0;
          sub_10059FE88();
        }
      }
LABEL_9:
      char v3 = 0;
LABEL_10:
      uint64_t v8 = (char *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions);
      *uint64_t v8 = v3;
      v8[1] = v3;
      v8[2] = v2;
      TTRModuleState.modelWillUnload()();
      return;
  }
}

void sub_1005A0E2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 72))(ObjectType, v12))
  {
    uint64_t v15 = v14;
    uint64_t v16 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v33 = v9;
      uint64_t v17 = *(void *)(v16 + 8);
      uint64_t v18 = swift_getObjectType();
      uint64_t v34 = v4;
      uint64_t v19 = v18;
      uint64_t v20 = swift_getObjectType();
      char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v20, v15);
      uint64_t v22 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(v17 + 40);
      uint64_t v23 = v19;
      uint64_t v24 = v17;
      uint64_t v9 = v33;
      uint64_t v4 = v34;
      v22(v21 & 1, 1, v23, v24);
      swift_unknownObjectRelease();
    }
    uint64_t v25 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess();
    sub_10003B694(v25, (uint64_t)v7, &qword_100786EF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10003B6F8((uint64_t)v7, &qword_100786EF0);
    }
    else
    {
      sub_1005B6A88((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      sub_1005B2804((uint64_t)v11, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v4, 0, 1, v8);
      sub_1005885DC((uint64_t)v4);
      sub_10003B6F8((uint64_t)v4, &qword_100786EF0);
      sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    sub_10059BA10(0);
    sub_100595970(1);
    swift_unknownObjectRelease();
  }
  else
  {
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100018BF8(v26, (uint64_t)qword_1007A8768);
    swift_retain_n();
    unint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      v35[0] = v30;
      uint64_t v31 = _typeName(_:qualified:)();
      v35[3] = sub_1000385A8(v31, v32, v35);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: missing layoutContext", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_1005A12D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  return v4;
}

void sub_1005A1358()
{
}

void sub_1005A1380(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v10 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v37 - v14;
  if (qword_100785708 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_100018BF8(v16, (uint64_t)qword_1007A8768);
  sub_1005B2804(a1, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v41 = v17;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v38 = a1;
    char v21 = (uint8_t *)v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v40 = v2;
    uint64_t v44 = v22;
    uint64_t v39 = v6;
    *(_DWORD *)char v21 = 136315138;
    uint64_t v37 = v10;
    sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v23 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v43 = sub_1000385A8(v23, v24, &v44);
    uint64_t v10 = v37;
    uint64_t v6 = v39;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Discard uncommittedSection {item: %s}", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v38;
    swift_slowDealloc();
  }
  else
  {
    sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }

  TTRRemindersListViewModel.Item.sectionCasesOnly.getter();
  uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v9, 1, v25) == 1)
  {
    sub_1005B2804(a1, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v26, v27))
    {
      os_log_type_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v28 = 136315138;
      sub_1005B69D8((unint64_t *)&qword_10079F3A0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v29 = TTRTreeStorageItem.treeItemDescription.getter();
      uint64_t v43 = sub_1000385A8(v29, v30, &v44);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Discard uncommittedSection invalid item type {item: %s}", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1005B286C((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  else
  {
    sub_10003B754((uint64_t *)&unk_10078E960);
    unint64_t v31 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = xmmword_10066C6F0;
    sub_1005B2804(a1, v32 + v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v33 = sub_10003B754(&qword_10078ADB0);
    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v6, 1, 1, v33);
    __chkstk_darwin(v34);
    *(&v37 - 2) = v32;
    __chkstk_darwin(v35);
    *(&v37 - 2) = v32;
    sub_10059B45C((uint64_t)v6, 1, (uint64_t (*)(void *))sub_1005B867C, v36, (uint64_t (*)(uint64_t))sub_1005B868C, (uint64_t)(&v37 - 4));
    sub_10003B6F8((uint64_t)v6, &qword_10078ADA8);
    swift_bridgeObjectRelease();
    sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  }
}

void sub_1005A1A34(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v50 = a5;
  int v46 = a4;
  uint64_t v49 = a3;
  uint64_t v54 = a2;
  uint64_t v45 = a1;
  uint64_t v52 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  __chkstk_darwin(v52);
  uint64_t v51 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v53 = (char *)&v43 - v8;
  uint64_t v9 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v9 - 8);
  uint64_t v48 = (uint64_t)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v43);
  uint64_t v47 = (uint64_t)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10078FA98);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078FAA0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v44 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754(&qword_1007A8DA0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003B754(&qword_1007936B0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = v5;
  swift_retain();
  sub_1004602D4(v54, (uint64_t)v20);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    uint64_t v26 = &qword_1007A8DA0;
    uint64_t v27 = (uint64_t)v20;
LABEL_5:
    sub_10003B6F8(v27, v26);
    uint64_t v28 = (uint64_t)v53;
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100018BF8(v29, (uint64_t)qword_1007A8768);
    sub_1005B2804(v54, v28, type metadata accessor for TTRRemindersListSectionCreationLocation);
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v56 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136315138;
      sub_1005B2804(v28, v51, type metadata accessor for TTRRemindersListSectionCreationLocation);
      uint64_t v33 = String.init<A>(describing:)();
      uint64_t v55 = sub_1000385A8(v33, v34, &v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C(v28, type metadata accessor for TTRRemindersListSectionCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "Cannot resolve SectionCreationLocation {location: %s}", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1005B286C(v28, type metadata accessor for TTRRemindersListSectionCreationLocation);
    }

    return;
  }
  sub_100028C3C((uint64_t)v20, (uint64_t)v24, &qword_1007936B0);
  swift_retain();
  sub_100460A48((uint64_t)v14);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_10003B6F8((uint64_t)v24, &qword_1007936B0);
    uint64_t v26 = &qword_10078FA98;
    uint64_t v27 = (uint64_t)v14;
    goto LABEL_5;
  }
  uint64_t v35 = v44;
  sub_100028C3C((uint64_t)v14, v44, &qword_10078FAA0);
  uint64_t v36 = v47;
  sub_1005B2804(v45, v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  uint64_t v37 = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v38 = sub_10003B754(&qword_10078ADB0);
  uint64_t v39 = v38;
  uint64_t v40 = v48;
  if (v46)
  {
    uint64_t v41 = *(int *)(v38 + 48);
    sub_1005B2804(v36, v48, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v37 = 0;
    *(unsigned char *)(v40 + v41) = 0;
  }
  uint64_t v42 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v40, v37, 1, v39);
  __chkstk_darwin(v42);
  *(&v43 - 4) = v36;
  *(&v43 - 3) = v35;
  *(&v43 - 2) = v49;
  *(&v43 - 1) = v25;
  sub_10059AFE8(v40, v50 & 1, (uint64_t (*)(void *))sub_1005B69CC, (uint64_t)(&v43 - 6), v25);
  sub_10003B6F8(v40, &qword_10078ADA8);
  sub_10003B6F8((uint64_t)v24, &qword_1007936B0);
  sub_1005B286C(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_10003B6F8(v35, &qword_10078FAA0);
}

BOOL sub_1005A2140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v30[1] = a5;
  uint64_t v31 = a1;
  uint64_t v32 = a4;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10078FAA0);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v30 - v14;
  uint64_t v16 = sub_10003B754(&qword_1007A09D8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005B2804(a2, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v20 = &v19[*(int *)(v17 + 60)];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  unsigned char v20[16] = 1;
  *(void *)&v19[*(int *)(v17 + 64)] = _swiftEmptyArrayStorage;
  swift_retain();
  TTRMutableTreeStorage.insertNewItem(with:in:at:)();
  swift_release();
  sub_10003B6F8((uint64_t)v19, &qword_1007A09D8);
  sub_1005B2804(a2, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v8, 0, 1, v21);
  v22(v12, 1, 1, v21);
  uint64_t v23 = v31;
  sub_10000A550((uint64_t)v8, (uint64_t)v12, (uint64_t *)&unk_100788DC0);
  *(void *)&v12[*(int *)(v10 + 44)] = 0;
  sub_100028C3C((uint64_t)v12, (uint64_t)v15, &qword_10078FAA0);
  BOOL v24 = sub_10045D9F0(v32, (uint64_t)v15);
  sub_10003B6F8((uint64_t)v15, &qword_10078FAA0);
  if (v24)
  {
    sub_100593A94(v23);
  }
  else
  {
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100018BF8(v25, (uint64_t)qword_1007A8768);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to move items to editable section in tree view model", v28, 2u);
      swift_slowDealloc();
    }
  }
  return v24;
}

uint64_t sub_1005A24AC()
{
  return swift_retain();
}

uint64_t sub_1005A24BC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_interactor + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t sub_1005A2508@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  return sub_10003B694(v3, a1, &qword_100786EF0);
}

uint64_t sub_1005A2564()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1080))();
}

uint64_t sub_1005A2590()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 1088))();
}

BOOL sub_1005A25C8()
{
  return sub_1005A0AAC();
}

uint64_t sub_1005A25D0()
{
  return sub_1005A0B00(*(void *)(v0 + 16));
}

void sub_1005A25D8(uint64_t a1, uint64_t a2)
{
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  int64_t v4 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v11 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v11 >= v23) {
      return;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v11);
    ++v4;
    if (!v12)
    {
      int64_t v4 = v11 + 1;
      if (v11 + 1 >= v23) {
        return;
      }
      unint64_t v12 = *(void *)(v5 + 8 * v4);
      if (!v12)
      {
        int64_t v4 = v11 + 2;
        if (v11 + 2 >= v23) {
          return;
        }
        unint64_t v12 = *(void *)(v5 + 8 * v4);
        if (!v12)
        {
          int64_t v4 = v11 + 3;
          if (v11 + 3 >= v23) {
            return;
          }
          unint64_t v12 = *(void *)(v5 + 8 * v4);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v4 << 6);
LABEL_24:
    uint64_t v14 = 8 * v10;
    uint64_t v15 = *(void **)(*(void *)(a1 + 48) + v14);
    id v16 = *(id *)(*(void *)(a1 + 56) + v14);
    id v17 = v15;
    unint64_t v18 = sub_10035C188((uint64_t)v17);
    char v20 = v19;

    if ((v20 & 1) == 0)
    {

      return;
    }
    id v21 = *(id *)(*(void *)(a2 + 56) + 8 * v18);
    char v22 = static TTRSectionID.__derived_enum_equals(_:_:)();

    if ((v22 & 1) == 0) {
      return;
    }
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v23) {
    return;
  }
  unint64_t v12 = *(void *)(v5 + 8 * v13);
  if (v12)
  {
    int64_t v4 = v13;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v4 >= v23) {
      return;
    }
    unint64_t v12 = *(void *)(v5 + 8 * v4);
    ++v13;
    if (v12) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_1005A27C8(unint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    uint64_t v2 = _CocoaArrayWrapper.subscript.getter();
    type metadata accessor for REMObjectID_Codable();
    if (swift_dynamicCastClass()) {
      return v2;
    }
LABEL_10:
    _StringGuts.grow(_:)(85);
    unint64_t v3 = 0xD000000000000046;
    int64_t v4 = "NSArray element failed to match the Swift Array Element type\nExpected ";
    goto LABEL_11;
  }
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10) <= a1)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 8 * a1 + 0x20);
  type metadata accessor for REMObjectID_Codable();
  swift_unknownObjectRetain();
  if (swift_dynamicCastClass()) {
    return v2;
  }
  _StringGuts.grow(_:)(82);
  unint64_t v3 = 0xD000000000000043;
  int64_t v4 = "Down-casted Array element failed to match the target type\nExpected ";
LABEL_11:
  unint64_t v6 = (unint64_t)(v4 - 32) | 0x8000000000000000;
  String.append(_:)(*(Swift::String *)&v3);
  v7._object = (void *)0x80000001006BFA50;
  v7._countAndFlagsBits = 0xD000000000000013;
  String.append(_:)(v7);
  v8._countAndFlagsBits = 0x756F662074756220;
  v8._object = (void *)0xEB0000000020646ELL;
  String.append(_:)(v8);
  swift_getObjectType();
  swift_unknownObjectRelease();
  v9._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  uint64_t result = _assertionFailure(_:_:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1005A2974(uint64_t a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = __CocoaDictionary.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    *unint64_t v3 = sub_100571D20(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v10 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  sub_1000BAF2C(a1, a2, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005A2A28(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  Swift::String v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRRemindersListViewModel.SectionID.hash(into:)();
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005B2804(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      char v16 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)();
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005B286C(a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1005B2804(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005B2804(a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    uint64_t v20 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005AD25C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1005B6A88(a2, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    return 1;
  }
}

uint64_t sub_1005A2CAC(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  Swift::String v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRRemindersListViewModel.ItemID.hash(into:)();
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005B2804(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      char v16 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005B286C(a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1005B2804(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005B2804(a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v20 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005AD534((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1005B6A88(a2, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return 1;
  }
}

uint64_t sub_1005A2F30(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRetain();
      sub_10003B754(&qword_10078E370);
      swift_dynamicCast();
      swift_unknownObjectRelease();
      uint64_t result = 0;
      *a1 = v20;
      return result;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v16 = sub_1005ACF34(v7, result + 1, &qword_1007A8DD0, &qword_10078E370, (void (*)(unint64_t))sub_1005A9F7C);
    Swift::Int v21 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1005A9F7C();
      uint64_t v17 = v21;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1005AD1B8(a2, v17);
    *unint64_t v3 = v17;
  }
  else
  {
    Hasher.init(_seed:)();
    Swift::UInt v10 = *(void *)(a2 + 16);
    Hasher._combine(_:)(v10);
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(void *)(v6 + 48);
      if (*(void *)(*(void *)(v14 + 8 * v13) + 16) == v10)
      {
LABEL_12:
        swift_release();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v15 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v14 + 8 * v13) + 16) == v10) {
          goto LABEL_12;
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v19 = swift_retain();
    sub_1005AE6A0(v19, v13, isUniquelyReferenced_nonNull_native, (void (*)(unint64_t))sub_1005A9F7C, &qword_10078E370, (void (*)(unint64_t))sub_1005A7008, (uint64_t (*)(unint64_t))sub_1005A5528);
    *uint64_t v2 = v22;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1005A31F4(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRSectionID.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    id v10 = *(id *)(*(void *)(v6 + 48) + 8 * v9);
    char v11 = static TTRSectionID.__derived_enum_equals(_:_:)();

    if (v11)
    {
LABEL_6:
      swift_bridgeObjectRelease();

      uint64_t v15 = *(void **)(*(void *)(*v3 + 48) + 8 * v9);
      *a1 = v15;
      id v16 = v15;
      return 0;
    }
    uint64_t v12 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v12;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      id v13 = *(id *)(*(void *)(v6 + 48) + 8 * v9);
      char v14 = static TTRSectionID.__derived_enum_equals(_:_:)();

      if (v14) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v20 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  id v19 = a2;
  sub_1005AD80C((uint64_t)a2, v9, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v20;
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1005A3384(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = static Hasher._hash(seed:_:)();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005AD998(a2, v9, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005A3480(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRRemindersListViewModel.ReminderID.hash(into:)();
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005B2804(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      char v16 = static TTRRemindersListViewModel.ReminderID.__derived_struct_equals(_:_:)();
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005B286C(a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    sub_1005B2804(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005B2804(a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    uint64_t v20 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005ADABC((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1005B6A88(a2, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    return 1;
  }
}

uint64_t sub_1005A3704(void *a1, void *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = __CocoaSet.member(for:)();

    if (v9)
    {
      swift_bridgeObjectRelease();

      type metadata accessor for REMObjectID_Codable();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v29;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1005ACD10(v7, result + 1);
    unint64_t v30 = (void *)v22;
    unint64_t v23 = *(void *)(v22 + 16);
    if (*(void *)(v22 + 24) <= v23)
    {
      uint64_t v27 = v23 + 1;
      id v28 = v8;
      sub_1005AA754(v27, &qword_1007A8D58);
      BOOL v24 = v30;
    }
    else
    {
      BOOL v24 = (void *)v22;
      id v25 = v8;
    }
    sub_1005AD134((uint64_t)v8, v24);
    *unint64_t v3 = (uint64_t)v24;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = NSObject._rawHashValue(seed:)(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      type metadata accessor for REMObjectID_Codable();
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = static NSObject.== infix(_:_:)();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1005ADD94((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v31;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1005A398C(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)&v29 - v14;
  uint64_t v16 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  TTRRemindersListViewModel.ItemID.hash(into:)();
  sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  Swift::Int v17 = Hasher._finalize()();
  uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
  unint64_t v19 = v17 & ~v18;
  uint64_t v31 = a1;
  uint64_t v32 = v16;
  uint64_t v20 = v16 + 56;
  uint64_t v21 = *(void *)(v20 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19;
  unint64_t v30 = v3;
  if (v21)
  {
    uint64_t v22 = ~v18;
    uint64_t v23 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005B2804(*(void *)(v32 + 48) + v23 * v19, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      char v24 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
      sub_1005B286C((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v24) {
        break;
      }
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v20 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        goto LABEL_5;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005B286C(v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1005B2804(*(void *)(*v30 + 48) + v23 * v19, v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 0;
  }
  else
  {
LABEL_5:
    swift_bridgeObjectRelease();
    id v25 = v30;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v27 = v33;
    sub_1005B2804(v33, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v34 = *v25;
    *id v25 = 0x8000000000000000;
    sub_1005ADF2C((uint64_t)v9, v19, isUniquelyReferenced_nonNull_native);
    *id v25 = v34;
    swift_bridgeObjectRelease();
    sub_1005B6A88(v27, v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return 1;
  }
}

uint64_t sub_1005A3CE0(Swift::UInt *a1, Swift::UInt a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1005AE278(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(void *)(v9 + 8 * v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v9 + 8 * v8) != a2);
  }
  uint64_t result = 0;
  a2 = *(void *)(*(void *)(*v2 + 48) + 8 * v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005A3E00(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
  Swift::Int v11 = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v19 = a1;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v7 + 72);
    while (1)
    {
      sub_1005B2804(*(void *)(v10 + 48) + v15 * v13, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      char v16 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if (v16) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v19;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_1005B286C(a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_1005B2804(*(void *)(*v3 + 48) + v15 * v13, v19, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1005B2804(a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v20 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005AE3C8((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v20;
    swift_bridgeObjectRelease();
    sub_1005B6A88(a2, a1, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    return 1;
  }
}

uint64_t sub_1005A4084(uint64_t *a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v8 = __CocoaSet.member(for:)();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_unknownObjectRetain();
      sub_10003B754((uint64_t *)&unk_100788D30);
      swift_dynamicCast();
      *a1 = v20;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = __CocoaSet.count.getter();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v16 = sub_1005ACF34(v7, result + 1, &qword_1007A8DC0, (uint64_t *)&unk_100788D30, (void (*)(unint64_t))sub_1005AB440);
    Swift::Int v21 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1005AB440();
      uint64_t v17 = v21;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1005AD1B8(a2, v17);
    *unint64_t v3 = v17;
  }
  else
  {
    Hasher.init(_seed:)();
    Swift::UInt v10 = *(void *)(a2 + 16);
    Hasher._combine(_:)(v10);
    Swift::Int v11 = Hasher._finalize()();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(void *)(v6 + 48);
      if (*(void *)(*(void *)(v14 + 8 * v13) + 16) == v10)
      {
LABEL_12:
        swift_release();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v15 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v14 + 8 * v13) + 16) == v10) {
          goto LABEL_12;
        }
      }
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    Swift::Int v19 = swift_retain();
    sub_1005AE6A0(v19, v13, isUniquelyReferenced_nonNull_native, (void (*)(unint64_t))sub_1005AB440, (uint64_t *)&unk_100788D30, (void (*)(unint64_t))sub_1005A86F8, (uint64_t (*)(unint64_t))sub_1005A600C);
    *uint64_t v2 = v22;
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1005A4348(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *unint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1005AE814(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *unint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1005A44F8(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1005B69D8((unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1005B69D8((unint64_t *)&qword_100787548, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005AE9B0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1005A481C(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  uint64_t v18 = a1;
  swift_bridgeObjectRetain();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1005AEC6C(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    uint64_t v17 = v18;
    goto LABEL_27;
  }
  uint64_t v9 = ~v7;
  while (2)
  {
    unint64_t v10 = 0xE400000000000000;
    uint64_t v11 = 1701736302;
    switch(*(unsigned char *)(*(void *)(v5 + 48) + v8))
    {
      case 1:
        unint64_t v10 = 0xE500000000000000;
        uint64_t v11 = 0x7961646F74;
        break;
      case 2:
        unint64_t v10 = 0xE800000000000000;
        uint64_t v11 = 0x776F72726F6D6F74;
        break;
      case 3:
        unint64_t v10 = 0xE700000000000000;
        uint64_t v11 = 0x646E656B656577;
        break;
      case 4:
        uint64_t v11 = 0x57664F7472617473;
        unint64_t v10 = 0xEE007961646B6565;
        break;
      case 5:
        unint64_t v10 = 0xE600000000000000;
        uint64_t v11 = 0x6D6F74737563;
        break;
      default:
        break;
    }
    unint64_t v12 = 0xE400000000000000;
    uint64_t v13 = 1701736302;
    switch((char)a2)
    {
      case 1:
        unint64_t v12 = 0xE500000000000000;
        if (v11 == 0x7961646F74) {
          goto LABEL_18;
        }
        goto LABEL_19;
      case 2:
        unint64_t v12 = 0xE800000000000000;
        if (v11 != 0x776F72726F6D6F74) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 3:
        unint64_t v12 = 0xE700000000000000;
        if (v11 != 0x646E656B656577) {
          goto LABEL_19;
        }
        goto LABEL_18;
      case 4:
        uint64_t v13 = 0x57664F7472617473;
        unint64_t v12 = 0xEE007961646B6565;
        goto LABEL_17;
      case 5:
        unint64_t v12 = 0xE600000000000000;
        if (v11 != 0x6D6F74737563) {
          goto LABEL_19;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (v11 != v13) {
          goto LABEL_19;
        }
LABEL_18:
        if (v10 != v12)
        {
LABEL_19:
          char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v14) {
            goto LABEL_26;
          }
          unint64_t v8 = (v8 + 1) & v9;
          if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            goto LABEL_24;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_26:
        uint64_t v17 = v18;
        swift_bridgeObjectRelease();
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_27:
        *uint64_t v17 = a2;
        return result;
    }
  }
}

uint64_t sub_1005A4C20(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a2);
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1005AF080(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1005A4D40(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1005B69D8(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v33 = a2;
  uint64_t v11 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    id v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    Swift::Int v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    char v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1005B69D8((unint64_t *)&qword_10078E350, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      char v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    char v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *unint64_t v3 = 0x8000000000000000;
    sub_1005AF1E0((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *unint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1005A5064(uint64_t a1, void *a2, char a3)
{
  int v5 = a3 & 1;
  uint64_t v6 = *v3;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRListOrCustomSmartList.hash(into:)();
  Swift::Int v7 = Hasher._finalize()();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = 16 * v9;
    id v11 = *(id *)(*(void *)(v6 + 48) + 16 * v9);
    char v12 = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)();

    if (v12)
    {
LABEL_6:
      swift_bridgeObjectRelease();

      uint64_t v16 = *(void *)(*v22 + 48) + v10;
      uint64_t v17 = *(void **)v16;
      LOBYTE(v16) = *(unsigned char *)(v16 + 8);
      *(void *)a1 = v17;
      *(unsigned char *)(a1 + 8) = v16;
      id v18 = v17;
      return 0;
    }
    uint64_t v13 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v13;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      uint64_t v10 = 16 * v9;
      id v14 = *(id *)(*(void *)(v6 + 48) + 16 * v9);
      char v15 = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)();

      if (v15) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v24 = *v22;
  *uint64_t v22 = 0x8000000000000000;
  id v21 = a2;
  sub_1005AF49C((uint64_t)a2, v5, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v22 = v24;
  swift_bridgeObjectRelease();
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = v5 != 0;
  return 1;
}

void *sub_1005A5248()
{
  return sub_1005A52D8((uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, &qword_1007A8D98, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
}

void *sub_1005A5290()
{
  return sub_1005A52D8((uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_1007A7988, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

void *sub_1005A52D8(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v31 = a4;
  Swift::Int v7 = v4;
  uint64_t v8 = a1(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  id v11 = (char *)&v30 - v10;
  sub_10003B754(a2);
  uint64_t v12 = *v4;
  uint64_t v13 = static _SetStorage.copy(original:)();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *Swift::Int v7 = v14;
    return result;
  }
  uint64_t v30 = v7;
  uint64_t result = (void *)(v13 + 56);
  uint64_t v16 = v12 + 56;
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v14 + 32)) + 63) >> 6;
  if (v14 != v12 || (unint64_t)result >= v12 + 56 + 8 * v17) {
    uint64_t result = memmove(result, (const void *)(v12 + 56), 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v14 + 16) = *(void *)(v12 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v12 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v27 >= v23) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v16 + 8 * v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_26;
      }
      unint64_t v28 = *(void *)(v16 + 8 * v19);
      if (!v28) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_12:
    unint64_t v26 = *(void *)(v9 + 72) * v25;
    sub_1005B2804(*(void *)(v12 + 48) + v26, (uint64_t)v11, a3);
    uint64_t result = (void *)sub_1005B6A88((uint64_t)v11, *(void *)(v14 + 48) + v26, v31);
  }
  int64_t v29 = v27 + 2;
  if (v29 >= v23)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    Swift::Int v7 = v30;
    goto LABEL_28;
  }
  unint64_t v28 = *(void *)(v16 + 8 * v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_26;
    }
    unint64_t v28 = *(void *)(v16 + 8 * v19);
    ++v29;
    if (v28) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A5528()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A8DD0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v16 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 2;
  if (v18 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1005A56C0()
{
  return sub_1005A5A10(&qword_10079F780);
}

id sub_1005A56CC()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A8DF8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A5878()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A8E10);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1005A5A10(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003B754(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A5BB4()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A8E00);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A5D4C()
{
  return sub_1005A5D94((uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_1007A7998, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
}

void *sub_1005A5D94(uint64_t (*a1)(void), uint64_t *a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  unint64_t v8 = v4;
  uint64_t v9 = a1(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v30 - v11;
  sub_10003B754(a2);
  uint64_t v13 = *v4;
  uint64_t v14 = static _SetStorage.copy(original:)();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *unint64_t v8 = v15;
    return result;
  }
  id result = (void *)(v14 + 56);
  unint64_t v17 = (unint64_t)((1 << *(unsigned char *)(v15 + 32)) + 63) >> 6;
  uint64_t v30 = v8;
  uint64_t v31 = (const void *)(v13 + 56);
  if (v15 != v13 || (unint64_t)result >= v13 + 56 + 8 * v17) {
    id result = memmove(result, v31, 8 * v17);
  }
  int64_t v19 = 0;
  *(void *)(v15 + 16) = *(void *)(v13 + 16);
  uint64_t v20 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & *(void *)(v13 + 56);
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v19 << 6);
      goto LABEL_12;
    }
    int64_t v27 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v27 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v27);
    ++v19;
    if (!v28)
    {
      int64_t v19 = v27 + 1;
      if (v27 + 1 >= v23) {
        goto LABEL_28;
      }
      unint64_t v28 = *((void *)v31 + v19);
      if (!v28)
      {
        int64_t v19 = v27 + 2;
        if (v27 + 2 >= v23) {
          goto LABEL_28;
        }
        unint64_t v28 = *((void *)v31 + v19);
        if (!v28) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v22 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v19 << 6);
LABEL_12:
    unint64_t v26 = *(void *)(v10 + 72) * v25;
    sub_1005B2804(*(void *)(v13 + 48) + v26, (uint64_t)v12, a3);
    id result = (void *)sub_1005B6A88((uint64_t)v12, *(void *)(v15 + 48) + v26, a4);
  }
  int64_t v29 = v27 + 3;
  if (v29 >= v23)
  {
LABEL_28:
    id result = (void *)swift_release();
    unint64_t v8 = v30;
    goto LABEL_30;
  }
  unint64_t v28 = *((void *)v31 + v29);
  if (v28)
  {
    int64_t v19 = v29;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v19 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v19 >= v23) {
      goto LABEL_28;
    }
    unint64_t v28 = *((void *)v31 + v19);
    ++v29;
    if (v28) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1005A600C()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A8DC0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    id result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A61B8()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A7978);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    int64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A636C()
{
  return sub_1005A6544((uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_1007A7980);
}

void *sub_1005A638C()
{
  return sub_1005A6398(&qword_1007A7990);
}

void *sub_1005A6398(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003B754(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _SetStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1005A6524()
{
  return sub_1005A6544((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1007A8DC8);
}

void *sub_1005A6544(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v25 - v7;
  sub_10003B754(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = static _SetStorage.copy(original:)();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  unint64_t v26 = v4;
  int64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

id sub_1005A67F4()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_1007A8DE8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _SetStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    unint64_t v18 = *(void **)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 8) = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1005A69B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v31 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10003B754(&qword_1007A8D98);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 56);
  int64_t v29 = v0;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v30) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v30) {
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v14);
      if (!v19) {
        break;
      }
    }
LABEL_21:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(v31 + 72);
    sub_1005B2804(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.SectionID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1005B6A88((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v30)
  {
LABEL_31:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_33;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v30) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1005A6CDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v31 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_10003B754(&qword_1007A7988);
  uint64_t v6 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 56);
  int64_t v29 = v0;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v30) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v30) {
        goto LABEL_31;
      }
      unint64_t v19 = *(void *)(v9 + 8 * v14);
      if (!v19) {
        break;
      }
    }
LABEL_21:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_22:
    uint64_t v21 = *(void *)(v31 + 72);
    sub_1005B2804(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ItemID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1005B6A88((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v30)
  {
LABEL_31:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_33;
  }
  unint64_t v19 = *(void *)(v9 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v30) {
      goto LABEL_31;
    }
    unint64_t v19 = *(void *)(v9 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1005A7008()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DD0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_33:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_22;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
    if (v15 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_31;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16) {
        break;
      }
    }
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_22:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(*(void *)(v18 + 16));
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_34;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  int64_t v17 = v15 + 2;
  if (v17 >= v10)
  {
LABEL_31:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_33;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_31;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_1005A7278()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DF8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    Hasher.init(_seed:)();
    id v20 = v19;
    TTRSectionID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A7504()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8E10);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = static Hasher._hash(seed:_:)();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A7768()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  int64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10003B754(&qword_1007A8D70);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_1005B2804(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ReminderID.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_1005B6A88((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A7ACC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10003B754(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = NSObject._rawHashValue(seed:)(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A7D44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v36 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  sub_10003B754(&qword_1007A8DD8);
  uint64_t v9 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v10;
    return result;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 56);
  uint64_t v33 = v0;
  uint64_t v34 = v8 + 56;
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v35 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v35) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v34 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v34 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    uint64_t v24 = *(void *)(v36 + 72);
    sub_1005B2804(*(void *)(v8 + 48) + v24 * v20, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    TTRRemindersListViewModel.ItemID.hash(into:)();
    sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t result = Hasher._finalize()();
    uint64_t v25 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_1005B6A88((uint64_t)v7, *(void *)(v10 + 48) + v18 * v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    ++*(void *)(v10 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v35)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v33;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v34 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v35) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8118()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8E00);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8394()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  int64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10003B754(&qword_1007A7998);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  BOOL v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v3 + 72);
    sub_1005B2804(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_1005B6A88((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A86F8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DC0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(*(void *)(v18 + 16));
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
    uint64_t result = swift_retain();
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A897C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A7978);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    void *v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8C2C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10003B754(&qword_1007A7980);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1005B69D8((unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A8FDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8E08);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1005A9314);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005A932C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A7990);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(v18);
    uint64_t result = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A95A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_10003B754(&qword_1007A8DC8);
  uint64_t v7 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1005B69D8(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A9958()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DE8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v30) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v30) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = *(void *)(v2 + 48) + 16 * v15;
    int64_t v20 = *(void **)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    Hasher.init(_seed:)();
    id v22 = v20;
    TTRListOrCustomSmartList.hash(into:)();
    uint64_t result = Hasher._finalize()();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = *(void *)(v4 + 48) + 16 * v12;
    *(void *)uint64_t v13 = v20;
    *(unsigned char *)(v13 + 8) = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v30)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v30) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1005A9C0C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), void (*a5)(char *))
{
  uint64_t v42 = a5;
  unint64_t v8 = v5;
  uint64_t v9 = a2(0);
  uint64_t v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  int64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *v5;
  sub_10003B754(a3);
  uint64_t v13 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_37;
  }
  uint64_t v38 = v5;
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 56);
  uint64_t v40 = (void *)(v12 + 56);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int64_t v39 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 56;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v25 >= v39) {
      break;
    }
    char v26 = v40;
    unint64_t v27 = v40[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v39) {
        goto LABEL_31;
      }
      unint64_t v27 = v40[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v39)
        {
LABEL_31:
          swift_release();
          unint64_t v8 = v38;
          goto LABEL_33;
        }
        unint64_t v27 = v40[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_39;
            }
            if (v21 >= v39) {
              goto LABEL_31;
            }
            unint64_t v27 = v40[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v18 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v41 + 72);
    sub_1005B6A88(*(void *)(v12 + 48) + v29 * v24, (uint64_t)v11, a4);
    Hasher.init(_seed:)();
    v42(v43);
    uint64_t result = Hasher._finalize()();
    uint64_t v30 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v19 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v31) & ~*(void *)(v19 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v33 = 0;
      unint64_t v34 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v34 && (v33 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v35 = v32 == v34;
        if (v32 == v34) {
          unint64_t v32 = 0;
        }
        v33 |= v35;
        uint64_t v36 = *(void *)(v19 + 8 * v32);
      }
      while (v36 == -1);
      unint64_t v22 = __clz(__rbit64(~v36)) + (v32 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    uint64_t result = sub_1005B6A88((uint64_t)v11, *(void *)(v14 + 48) + v22 * v29, a4);
    ++*(void *)(v14 + 16);
  }
  swift_release();
  unint64_t v8 = v38;
  char v26 = v40;
LABEL_33:
  uint64_t v37 = 1 << *(unsigned char *)(v12 + 32);
  if (v37 > 63) {
    bzero(v26, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v37;
  }
  *(void *)(v12 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  *unint64_t v8 = v14;
  return result;
}

uint64_t sub_1005A9F7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DD0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_31;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_31;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v17 = v15 + 2;
            if (v17 >= v10)
            {
LABEL_31:
              uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
              if (v26 > 63) {
                bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v6 = -1 << v26;
              }
              uint64_t v1 = v0;
              *(void *)(v2 + 16) = 0;
              break;
            }
            unint64_t v16 = v6[v17];
            if (!v16)
            {
              while (1)
              {
                int64_t v5 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_37;
                }
                if (v5 >= v10) {
                  goto LABEL_31;
                }
                unint64_t v16 = v6[v5];
                ++v17;
                if (v16) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v5 = v17;
          }
        }
LABEL_21:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v18 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AA214()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DF8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      Hasher.init(_seed:)();
      TTRSectionID.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AA4D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8E10);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = static Hasher._hash(seed:_:)();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AA754(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_10003B754(a2);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = NSObject._rawHashValue(seed:)(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1005AA9F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v0;
  sub_10003B754(&qword_1007A8DD8);
  uint64_t v9 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    unint64_t v34 = v0;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 56);
    uint64_t v36 = (void *)(v8 + 56);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v35 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = v9 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v36[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v36[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v35) {
              goto LABEL_33;
            }
            unint64_t v22 = v36[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v35)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v34;
                uint64_t v32 = 1 << *(unsigned char *)(v8 + 32);
                if (v32 > 63) {
                  bzero(v36, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v32;
                }
                *(void *)(v8 + 16) = 0;
                break;
              }
              unint64_t v22 = v36[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v35) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v36[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v37 + 72);
      sub_1005B6A88(*(void *)(v8 + 48) + v24 * v20, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      Hasher.init(_seed:)();
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      TTRRemindersListViewModel.ItemID.hash(into:)();
      sub_1005B286C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t result = Hasher._finalize()();
      uint64_t v25 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t result = sub_1005B6A88((uint64_t)v7, *(void *)(v10 + 48) + v18 * v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v10;
  return result;
}

uint64_t sub_1005AAE00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8E00);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v18);
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AB0AC(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(void), void (*a5)(char *))
{
  uint64_t v41 = a5;
  uint64_t v8 = v5;
  uint64_t v9 = a2(0);
  uint64_t v40 = *(void *)(v9 - 8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = *v5;
  sub_10003B754(a3);
  uint64_t v13 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v14 = v13;
  if (*(void *)(v12 + 16))
  {
    uint64_t v37 = v5;
    uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
    uint64_t v16 = *(void *)(v12 + 56);
    int64_t v39 = (void *)(v12 + 56);
    if (v15 < 64) {
      uint64_t v17 = ~(-1 << v15);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v16;
    int64_t v38 = (unint64_t)(v15 + 63) >> 6;
    uint64_t v19 = v13 + 56;
    uint64_t result = swift_retain();
    int64_t v21 = 0;
    while (1)
    {
      if (v18)
      {
        unint64_t v23 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v24 = v23 | (v21 << 6);
      }
      else
      {
        int64_t v25 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v25 >= v38) {
          goto LABEL_33;
        }
        unint64_t v26 = v39[v25];
        ++v21;
        if (!v26)
        {
          int64_t v21 = v25 + 1;
          if (v25 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v26 = v39[v21];
          if (!v26)
          {
            int64_t v21 = v25 + 2;
            if (v25 + 2 >= v38) {
              goto LABEL_33;
            }
            unint64_t v26 = v39[v21];
            if (!v26)
            {
              int64_t v27 = v25 + 3;
              if (v27 >= v38)
              {
LABEL_33:
                swift_release();
                uint64_t v8 = v37;
                uint64_t v36 = 1 << *(unsigned char *)(v12 + 32);
                if (v36 > 63) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v39 = -1 << v36;
                }
                *(void *)(v12 + 16) = 0;
                break;
              }
              unint64_t v26 = v39[v27];
              if (!v26)
              {
                while (1)
                {
                  int64_t v21 = v27 + 1;
                  if (__OFADD__(v27, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v38) {
                    goto LABEL_33;
                  }
                  unint64_t v26 = v39[v21];
                  ++v27;
                  if (v26) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v27;
            }
          }
        }
LABEL_23:
        unint64_t v18 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
      }
      uint64_t v28 = *(void *)(v40 + 72);
      sub_1005B6A88(*(void *)(v12 + 48) + v28 * v24, (uint64_t)v11, a4);
      Hasher.init(_seed:)();
      v41(v42);
      uint64_t result = Hasher._finalize()();
      uint64_t v29 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v19 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v30) & ~*(void *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v19 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v22 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      uint64_t result = sub_1005B6A88((uint64_t)v11, *(void *)(v14 + 48) + v22 * v28, a4);
      ++*(void *)(v14 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v8 = v14;
  return result;
}

uint64_t sub_1005AB440()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DC0);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v18 + 16));
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AB6EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A7978);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      Hasher.init(_seed:)();
      String.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      void *v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AB9CC()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10003B754(&qword_1007A7980);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1005B69D8((unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1005ABDC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8E08);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    Swift::Int v12 = Hasher._finalize()();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0x1005AC134);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AC14C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A7990);
  uint64_t result = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      Swift::UInt v18 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v14);
      Hasher.init(_seed:)();
      Hasher._combine(_:)(v18);
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1005AC3F8()
{
  uint64_t v1 = v0;
  uint64_t v42 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_10003B754(&qword_1007A8DC8);
  uint64_t v5 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1005B69D8(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1005AC7F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_10003B754(&qword_1007A8DE8);
  uint64_t v3 = static _SetStorage.resize(original:capacity:move:)();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    char v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = *(void *)(v2 + 48) + 16 * v15;
      uint64_t v20 = *(void *)v19;
      char v21 = *(unsigned char *)(v19 + 8);
      Hasher.init(_seed:)();
      TTRListOrCustomSmartList.hash(into:)();
      uint64_t result = Hasher._finalize()();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = *(void *)(v4 + 48) + 16 * v12;
      *(void *)uint64_t v13 = v20;
      *(unsigned char *)(v13 + 8) = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

Swift::Int sub_1005ACADC(uint64_t a1, uint64_t a2)
{
  return sub_1005ACF34(a1, a2, &qword_1007A8DD0, &qword_10078E370, (void (*)(unint64_t))sub_1005A9F7C);
}

Swift::Int sub_1005ACB04(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10003B754(&qword_10079F780);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      sub_1000368FC(0, qword_10078E3D0);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1005AA754(v9 + 1, &qword_10079F780);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1005ACD10(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_10003B754(&qword_1007A8D58);
    uint64_t v2 = static _SetStorage.convert(_:capacity:)();
    uint64_t v15 = v2;
    __CocoaSet.makeIterator()();
    if (__CocoaSet.Iterator.next()())
    {
      type metadata accessor for REMObjectID_Codable();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v15;
        unint64_t v9 = *(void *)(v15 + 16);
        if (*(void *)(v15 + 24) <= v9)
        {
          sub_1005AA754(v9 + 1, &qword_1007A8D58);
          uint64_t v2 = v15;
        }
        Swift::Int result = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v10 = 0;
          unint64_t v11 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v11 && (v10 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v12 = v7 == v11;
            if (v7 == v11) {
              unint64_t v7 = 0;
            }
            v10 |= v12;
            uint64_t v13 = *(void *)(v4 + 8 * v7);
          }
          while (v13 == -1);
          unint64_t v8 = __clz(__rbit64(~v13)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v14;
        ++*(void *)(v2 + 16);
      }
      while (__CocoaSet.Iterator.next()());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

Swift::Int sub_1005ACF0C(uint64_t a1, uint64_t a2)
{
  return sub_1005ACF34(a1, a2, &qword_1007A8DC0, (uint64_t *)&unk_100788D30, (void (*)(unint64_t))sub_1005AB440);
}

Swift::Int sub_1005ACF34(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4, void (*a5)(unint64_t))
{
  if (a2)
  {
    sub_10003B754(a3);
    uint64_t v7 = static _SetStorage.convert(_:capacity:)();
    uint64_t v20 = v7;
    __CocoaSet.makeIterator()();
    for (; __CocoaSet.Iterator.next()(); ++*(void *)(v7 + 16))
    {
      sub_10003B754(a4);
      swift_dynamicCast();
      unint64_t v14 = *(void *)(v7 + 16);
      if (*(void *)(v7 + 24) <= v14)
      {
        a5(v14 + 1);
        uint64_t v7 = v20;
      }
      Hasher.init(_seed:)();
      Hasher._combine(_:)(*(void *)(v19 + 16));
      Swift::Int result = Hasher._finalize()();
      uint64_t v9 = v7 + 56;
      uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      if (((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v11) & ~*(void *)(v7 + 56 + 8 * (v11 >> 6)))) | v11 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v15 = 0;
        unint64_t v16 = (unint64_t)(63 - v10) >> 6;
        do
        {
          if (++v12 == v16 && (v15 & 1) != 0)
          {
            __break(1u);
            return result;
          }
          BOOL v17 = v12 == v16;
          if (v12 == v16) {
            unint64_t v12 = 0;
          }
          v15 |= v17;
          uint64_t v18 = *(void *)(v9 + 8 * v12);
        }
        while (v18 == -1);
        unint64_t v13 = __clz(__rbit64(~v18)) + (v12 << 6);
      }
      *(void *)(v9 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v19;
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v7;
}

unint64_t sub_1005AD134(uint64_t a1, void *a2)
{
  NSObject._rawHashValue(seed:)(a2[5]);
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

unint64_t sub_1005AD1B8(uint64_t a1, uint64_t a2)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*(void *)(a1 + 16));
  Hasher._finalize()();
  unint64_t result = _HashTable.nextHole(atOrAfter:)();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1005AD25C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005A9C0C(v12 + 1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, &qword_1007A8D98, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, (void (*)(char *))&TTRRemindersListViewModel.SectionID.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1005A69B0();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.SectionID.hash(into:)();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1005B2804(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        char v20 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)();
        sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1005A52D8((uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, &qword_1007A8D98, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005B6A88(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1005AD534(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005A9C0C(v12 + 1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_1007A7988, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(char *))&TTRRemindersListViewModel.ItemID.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1005A6CDC();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ItemID.hash(into:)();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1005B2804(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        char v20 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
        sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1005A52D8((uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, &qword_1007A7988, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005B6A88(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005AD80C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005AA214();
  }
  else
  {
    if (v8 > v7)
    {
      sub_1005A56CC();
      goto LABEL_14;
    }
    sub_1005A7278();
  }
  uint64_t v9 = *v3;
  Hasher.init(_seed:)();
  TTRSectionID.hash(into:)();
  Swift::Int v10 = Hasher._finalize()();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static TTRSectionID.__derived_enum_equals(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static TTRSectionID.__derived_enum_equals(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1005AD998(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005AA4D0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1005A5878();
      goto LABEL_14;
    }
    sub_1005A7504();
  }
  uint64_t v8 = *v3;
  uint64_t result = static Hasher._hash(seed:_:)();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1005ADABC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005AB0AC(v12 + 1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID, &qword_1007A8D70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID, (void (*)(char *))&TTRRemindersListViewModel.ReminderID.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1005A7768();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    TTRRemindersListViewModel.ReminderID.hash(into:)();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1005B2804(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        char v20 = static TTRRemindersListViewModel.ReminderID.__derived_struct_equals(_:_:)();
        sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1005A5D94((uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID, &qword_1007A8D70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005B6A88(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005ADD94(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v8 = v6 + 1;
  if (a3)
  {
    sub_1005AA754(v8, &qword_1007A8D58);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1005A5A10(&qword_1007A8D58);
      goto LABEL_14;
    }
    sub_1005A7ACC(v8, &qword_1007A8D58);
  }
  uint64_t v9 = *v3;
  Swift::Int v10 = NSObject._rawHashValue(seed:)(*(void *)(*v3 + 40));
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for REMObjectID_Codable();
    id v12 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
    char v13 = static NSObject.== infix(_:_:)();

    if (v13)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v14 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v14;
        if (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v9 + 48) + 8 * a2);
        char v16 = static NSObject.== infix(_:_:)();

        if (v16) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v17 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v17 + 48) + 8 * a2) = a1;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v20;
  }
}

uint64_t sub_1005ADF2C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v33 = a1;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v13 = (char *)v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v15 = (char *)v30 - v14;
  unint64_t v16 = *(void *)(*v3 + 16);
  unint64_t v17 = *(void *)(*v3 + 24);
  uint64_t v31 = v7;
  BOOL v32 = v3;
  if (v17 > v16 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005AA9F0();
  }
  else
  {
    if (v17 > v16)
    {
      sub_1005A5D94((uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item, &qword_1007A8DD8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_12;
    }
    sub_1005A7D44();
  }
  uint64_t v18 = *v3;
  Hasher.init(_seed:)();
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  TTRRemindersListViewModel.ItemID.hash(into:)();
  sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  Swift::Int v19 = Hasher._finalize()();
  uint64_t v20 = -1 << *(unsigned char *)(v18 + 32);
  a2 = v19 & ~v20;
  if ((*(void *)(v18 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    v30[1] = v6;
    uint64_t v21 = ~v20;
    uint64_t v22 = *(void *)(v7 + 72);
    do
    {
      sub_1005B2804(*(void *)(v18 + 48) + v22 * a2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      char v23 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
      sub_1005B286C((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_1005B286C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v23) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v21;
    }
    while (((*(void *)(v18 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v24 = v33;
  uint64_t v25 = *v32;
  *(void *)(*v32 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005B6A88(v24, *(void *)(v25 + 48) + *(void *)(v31 + 72) * a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v27 = *(void *)(v25 + 16);
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (!v28)
  {
    *(void *)(v25 + 16) = v29;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005AE278(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005AAE00();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1005A5BB4();
      goto LABEL_14;
    }
    sub_1005A8118();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v5);
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      type metadata accessor for REMReminderPriorityLevel(0);
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1005AE3C8(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v4 + 16);
  unint64_t v13 = *(void *)(*v4 + 24);
  if (v13 > v12 && (a3 & 1) != 0)
  {
LABEL_13:
    uint64_t v14 = v9;
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005AB0AC(v12 + 1, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_1007A7998, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(char *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:));
    goto LABEL_8;
  }
  if (v13 <= v12)
  {
    sub_1005A8394();
LABEL_8:
    uint64_t v15 = *v4;
    Hasher.init(_seed:)();
    TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
    Swift::Int v16 = Hasher._finalize()();
    uint64_t v17 = -1 << *(unsigned char *)(v15 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v26 = v8;
      uint64_t v18 = ~v17;
      uint64_t v14 = v9;
      uint64_t v19 = *(void *)(v9 + 72);
      while (1)
      {
        sub_1005B2804(*(void *)(v15 + 48) + v19 * a2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        char v20 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
        sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        if (v20) {
          goto LABEL_17;
        }
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v15 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_14;
        }
      }
    }
    goto LABEL_13;
  }
  uint64_t v14 = v9;
  sub_1005A5D94((uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, &qword_1007A7998, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
LABEL_14:
  uint64_t v21 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1005B6A88(a1, *(void *)(v21 + 48) + *(void *)(v14 + 72) * a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (!v24)
  {
    *(void *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_17:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005AE6A0(Swift::Int result, unint64_t a2, char a3, void (*a4)(unint64_t), uint64_t *a5, void (*a6)(unint64_t), uint64_t (*a7)(unint64_t))
{
  Swift::Int v10 = result;
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  unint64_t v13 = v11 + 1;
  if (a3)
  {
    a4(v13);
  }
  else
  {
    if (v12 > v11)
    {
      uint64_t result = a7(v13);
      goto LABEL_14;
    }
    a6(v13);
  }
  uint64_t v14 = *v7;
  Hasher.init(_seed:)();
  Swift::UInt v15 = *(void *)(v10 + 16);
  Hasher._combine(_:)(v15);
  uint64_t result = Hasher._finalize()();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = result & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = *(void *)(v14 + 48);
    if (*(void *)(*(void *)(v17 + 8 * a2) + 16) == v15)
    {
LABEL_13:
      sub_10003B754(a5);
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v18 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v17 + 8 * a2) + 16) == v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v19 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v19 + 48) + 8 * a2) = v10;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v22;
  }
  return result;
}

Swift::Int sub_1005AE814(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  Swift::UInt v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1005AB6EC();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_1005A61B8();
      goto LABEL_22;
    }
    sub_1005A897C();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  String.hash(into:)();
  uint64_t result = Hasher._finalize()();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    Swift::UInt v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  BOOL v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *BOOL v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1005AE9B0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005AB9CC();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1005A6544((uint64_t (*)(void))&type metadata accessor for IndexPath, &qword_1007A7980);
      goto LABEL_12;
    }
    sub_1005A8C2C();
  }
  uint64_t v12 = *v3;
  sub_1005B69D8((unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1005B69D8((unint64_t *)&qword_100787548, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

Swift::Int sub_1005AEC6C(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1005ABDC8();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_1005A6398(&qword_1007A8E08);
        goto LABEL_31;
      }
      sub_1005A8FDC();
    }
    uint64_t v8 = *v3;
    Hasher.init(_seed:)();
    String.hash(into:)();
    swift_bridgeObjectRelease();
    uint64_t result = Hasher._finalize()();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1701736302;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x7961646F74;
            break;
          case 2:
            unint64_t v11 = 0xE800000000000000;
            uint64_t v12 = 0x776F72726F6D6F74;
            break;
          case 3:
            unint64_t v11 = 0xE700000000000000;
            uint64_t v12 = 0x646E656B656577;
            break;
          case 4:
            uint64_t v12 = 0x57664F7472617473;
            unint64_t v11 = 0xEE007961646B6565;
            break;
          case 5:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x6D6F74737563;
            break;
          default:
            break;
        }
        unint64_t v13 = 0xE400000000000000;
        uint64_t v14 = 1701736302;
        switch(v5)
        {
          case 1:
            unint64_t v13 = 0xE500000000000000;
            if (v12 != 0x7961646F74) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 2:
            unint64_t v13 = 0xE800000000000000;
            if (v12 != 0x776F72726F6D6F74) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 3:
            unint64_t v13 = 0xE700000000000000;
            uint64_t v14 = 0x646E656B656577;
            goto LABEL_24;
          case 4:
            unint64_t v13 = 0xEE007961646B6565;
            if (v12 != 0x57664F7472617473) {
              goto LABEL_26;
            }
            goto LABEL_25;
          case 5:
            unint64_t v13 = 0xE600000000000000;
            if (v12 != 0x6D6F74737563) {
              goto LABEL_26;
            }
            goto LABEL_25;
          default:
LABEL_24:
            if (v12 != v14) {
              goto LABEL_26;
            }
LABEL_25:
            if (v11 == v13) {
              goto LABEL_34;
            }
LABEL_26:
            char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v15) {
              goto LABEL_35;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_31:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v16 + 48) + a2) = v5;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
    __break(1u);
LABEL_34:
    swift_bridgeObjectRelease_n();
LABEL_35:
    ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    JUMPOUT(0x1005AF038);
  }
  *(void *)(v16 + 16) = v19;
  return result;
}

Swift::Int sub_1005AF080(Swift::Int result, unint64_t a2, char a3)
{
  Swift::UInt v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005AC14C();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_1005A6398(&qword_1007A7990);
      goto LABEL_14;
    }
    sub_1005A932C();
  }
  uint64_t v8 = *v3;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v5);
  uint64_t result = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1005AF1E0(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  BOOL v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005AC3F8();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1005A6544((uint64_t (*)(void))&type metadata accessor for UUID, &qword_1007A8DC8);
      goto LABEL_12;
    }
    sub_1005A95A8();
  }
  uint64_t v12 = *v3;
  sub_1005B69D8(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1005B69D8((unint64_t *)&qword_10078E350, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1005AF49C(uint64_t a1, char a2, unint64_t a3, char a4)
{
  Swift::UInt v5 = v4;
  int v8 = a2 & 1;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_14;
  }
  if (a4)
  {
    sub_1005AC7F4();
  }
  else
  {
    if (v10 > v9)
    {
      sub_1005A67F4();
      goto LABEL_14;
    }
    sub_1005A9958();
  }
  uint64_t v11 = *v4;
  Hasher.init(_seed:)();
  TTRListOrCustomSmartList.hash(into:)();
  Swift::Int v12 = Hasher._finalize()();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  a3 = v12 & ~v13;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    id v14 = *(id *)(*(void *)(v11 + 48) + 16 * a3);
    char v15 = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)();

    if (v15)
    {
LABEL_13:
      ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
      __break(1u);
    }
    else
    {
      uint64_t v16 = ~v13;
      while (1)
      {
        a3 = (a3 + 1) & v16;
        if (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        id v17 = *(id *)(*(void *)(v11 + 48) + 16 * a3);
        char v18 = static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)();

        if (v18) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v19 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v20 = *(void *)(v19 + 48) + 16 * a3;
  *(void *)uint64_t v20 = a1;
  *(unsigned char *)(v20 + 8) = v8 != 0;
  uint64_t v21 = *(void *)(v19 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v19 + 16) = v23;
  }
}

uint64_t sub_1005AF66C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t (*sub_1005AF6F4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unsigned int v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1005AF82C(v6, a2, a3);
  return sub_10003C774;
}

uint64_t (*sub_1005AF75C(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unsigned int v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1005AF8AC(v6, a2, a3);
  return sub_10003C774;
}

uint64_t (*sub_1005AF7C4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unsigned int v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1005AF92C(v6, a2, a3);
  return sub_10003C774;
}

uint64_t (*sub_1005AF82C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return j__s9Reminders29TTRRemindersListTreeViewModelC13AuxiliaryDataVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1005AF8AC(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for TTRITemplateSavingDismissAnimationCoordinator.SourceView;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_1005AF92C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return destroy for TTRRemindersListTreeViewModel.AuxiliaryData;
  }
  __break(1u);
  return result;
}

int64_t sub_1005AF9B0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1005AFA94(uint64_t a1, uint64_t *a2)
{
  uint64_t v193 = (char *)a1;
  uint64_t v194 = a2;
  uint64_t v2 = (void *)type metadata accessor for DateComponents();
  uint64_t v3 = (void (**)(char *, char *, id))*(v2 - 1);
  id v191 = v2;
  v192 = v3;
  __chkstk_darwin(v2);
  uint64_t v186 = (char *)&v183 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int v187 = (char *)&v183 - v6;
  __chkstk_darwin(v7);
  uint64_t v184 = (char *)&v183 - v8;
  __chkstk_darwin(v9);
  uint64_t v185 = (char *)&v183 - v10;
  uint64_t v11 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  __chkstk_darwin(v11);
  uint64_t v190 = (uint64_t *)((char *)&v183 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  v189 = (uint64_t *)((char *)&v183 - v14);
  __chkstk_darwin(v15);
  uint64_t v188 = (uint64_t)&v183 - v16;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v183 - v18;
  __chkstk_darwin(v20);
  BOOL v22 = (char *)&v183 - v21;
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v183 - v24;
  __chkstk_darwin(v26);
  BOOL v28 = (char *)&v183 - v27;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v183 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v183 - v33;
  uint64_t v35 = sub_10003B754(&qword_1007A8F98);
  __chkstk_darwin(v35 - 8);
  uint64_t v37 = (char *)&v183 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = (uint64_t)&v37[*(int *)(v38 + 56)];
  sub_1005B2804((uint64_t)v193, (uint64_t)v37, type metadata accessor for TTRRemindersListMovingRemindersParams);
  uint64_t v40 = (uint64_t)v194;
  uint64_t v194 = (uint64_t *)v39;
  sub_1005B2804(v40, v39, type metadata accessor for TTRRemindersListMovingRemindersParams);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v193 = v37;
      sub_1005B2804((uint64_t)v37, (uint64_t)v31, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v48 = *(void *)v31;
      uint64_t v47 = (void *)*((void *)v31 + 1);
      uint64_t v49 = (void *)*((void *)v31 + 2);
      unsigned __int8 v50 = v31[24];
      uint64_t v51 = v194;
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_46;
      }
      uint64_t v52 = (void *)v51[1];
      uint64_t v53 = (void *)v51[2];
      unsigned __int8 v54 = *((unsigned char *)v51 + 24);
      char v55 = sub_1000BA00C(v48, *v51);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v55)
      {
        sub_1000368FC(0, (unint64_t *)&qword_100797210);
        if (static NSObject.== infix(_:_:)())
        {
          id v197 = v49;
          unsigned __int8 v198 = v50;
          uint64_t v195 = v53;
          unsigned __int8 v196 = v54;
          sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
          sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
          char v56 = static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)();

          uint64_t v57 = v53;
          unsigned __int8 v58 = v54;
          goto LABEL_21;
        }
      }
      uint64_t v164 = v53;
      unsigned __int8 v165 = v54;
      goto LABEL_63;
    case 2u:
      uint64_t v193 = v37;
      sub_1005B2804((uint64_t)v37, (uint64_t)v28, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v59 = *(void *)v28;
      id v60 = (void *)*((void *)v28 + 1);
      uint64_t v61 = (void *)*((void *)v28 + 2);
      unsigned __int8 v62 = v28[24];
      uint64_t v63 = *((void *)v28 + 4);
      os_log_type_t v64 = v194;
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v61, v62);
        swift_bridgeObjectRelease();

        goto LABEL_52;
      }
      v192 = (void (**)(char *, char *, id))v60;
      uint64_t v66 = *v64;
      int v65 = (void *)v64[1];
      uint64_t v67 = (void *)v64[2];
      int v68 = *((unsigned __int8 *)v64 + 24);
      uint64_t v69 = v64[4];
      char v70 = sub_1000BA00C(v59, v66);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v70 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v67, v68);

LABEL_80:
        swift_bridgeObjectRelease();
        id v170 = v61;
        goto LABEL_81;
      }
      LODWORD(v194) = v68;
      uint64_t v71 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v73 = v72;
      id v191 = v65;
      if (v71 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v73 == v74)
      {
        swift_bridgeObjectRelease_n();
        unsigned __int8 v75 = v194;
      }
      else
      {
        char v174 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned __int8 v75 = v194;
        if ((v174 & 1) == 0)
        {
LABEL_79:
          swift_bridgeObjectRelease();
          sub_100065740(v67, v75);

          goto LABEL_80;
        }
      }
      id v197 = v61;
      unsigned __int8 v198 = v62;
      uint64_t v195 = v67;
      unsigned __int8 v196 = v75;
      sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
      sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
      if (static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)())
      {
        id v175 = v191;
        uint64_t v176 = v192;
        if (v63)
        {
          if (v69)
          {
            swift_bridgeObjectRetain();
            uint64_t v177 = swift_bridgeObjectRetain();
            sub_1005A25D8(v177, v69);
            char v179 = v178;
            swift_bridgeObjectRelease();
            sub_100065740(v67, v194);

            sub_100065740(v61, v62);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();

            if ((v179 & 1) == 0) {
              goto LABEL_88;
            }
            goto LABEL_104;
          }
          swift_bridgeObjectRetain();
          sub_100065740(v67, v194);

          sub_100065740(v61, v62);
          swift_bridgeObjectRelease_n();

          goto LABEL_88;
        }
        sub_100065740(v67, v194);

        sub_100065740(v61, v62);
        if (!v69)
        {
LABEL_104:
          sub_1005B286C((uint64_t)v193, type metadata accessor for TTRRemindersListMovingRemindersParams);
          char v56 = 1;
          return v56 & 1;
        }
        goto LABEL_100;
      }
      goto LABEL_79;
    case 3u:
      uint64_t v76 = (uint64_t)v37;
      sub_1005B2804((uint64_t)v37, (uint64_t)v25, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v78 = *(void *)v25;
      uint64_t v77 = (void *)*((void *)v25 + 1);
      uint64_t v79 = (void *)*((void *)v25 + 2);
      unsigned __int8 v80 = v25[24];
      uint64_t v81 = v194;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_100065740(v79, v80);
        swift_bridgeObjectRelease();

        uint64_t v37 = (char *)v76;
        goto LABEL_53;
      }
      char v82 = (void *)v81[1];
      uint64_t v83 = (void *)v81[2];
      unsigned __int8 v84 = *((unsigned char *)v81 + 24);
      char v85 = sub_1000BA00C(v78, *v81);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v85)
      {
        sub_1000368FC(0, (unint64_t *)&qword_100797210);
        if (static NSObject.== infix(_:_:)())
        {
          id v197 = v79;
          unsigned __int8 v198 = v80;
          uint64_t v195 = v83;
          unsigned __int8 v196 = v84;
          sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
          sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
          char v56 = static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)();

          sub_100065740(v83, v84);
          sub_100065740(v79, v80);
          sub_1005B286C(v76, type metadata accessor for TTRRemindersListMovingRemindersParams);
          return v56 & 1;
        }
        uint64_t v168 = v83;
        unsigned __int8 v169 = v84;
      }
      else
      {
        uint64_t v168 = v83;
        unsigned __int8 v169 = v84;
      }
      sub_100065740(v168, v169);

      sub_100065740(v79, v80);
      uint64_t v180 = v76;
      goto LABEL_89;
    case 4u:
      uint64_t v193 = v37;
      sub_1005B2804((uint64_t)v37, (uint64_t)v22, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v86 = *(void *)v22;
      uint64_t v47 = (void *)*((void *)v22 + 1);
      uint64_t v49 = (void *)*((void *)v22 + 2);
      unsigned __int8 v50 = v22[24];
      uint64_t v87 = v194;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
LABEL_46:
        sub_100065740(v49, v50);
        swift_bridgeObjectRelease();

        goto LABEL_52;
      }
      uint64_t v52 = (void *)v87[1];
      uint64_t v88 = (void *)v87[2];
      unsigned __int8 v89 = *((unsigned char *)v87 + 24);
      char v90 = sub_1000BA00C(v86, *v87);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v90)
      {
        sub_1000368FC(0, (unint64_t *)&qword_100797210);
        if (static NSObject.== infix(_:_:)())
        {
          id v197 = v49;
          unsigned __int8 v198 = v50;
          uint64_t v195 = v88;
          unsigned __int8 v196 = v89;
          sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
          sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
          char v56 = static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)();

          uint64_t v57 = v88;
          unsigned __int8 v58 = v89;
LABEL_21:
          sub_100065740(v57, v58);
          uint64_t v91 = v49;
          unsigned __int8 v92 = v50;
          goto LABEL_22;
        }
      }
      uint64_t v164 = v88;
      unsigned __int8 v165 = v89;
LABEL_63:
      sub_100065740(v164, v165);

      uint64_t v166 = v49;
      unsigned __int8 v167 = v50;
      goto LABEL_64;
    case 5u:
      sub_1005B2804((uint64_t)v37, (uint64_t)v19, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v94 = *(void *)v19;
      uint64_t v93 = (void *)*((void *)v19 + 1);
      uint64_t v95 = (void *)*((void *)v19 + 2);
      uint64_t v96 = (void *)*((void *)v19 + 3);
      unsigned __int8 v97 = v19[32];
      uint64_t v98 = v194;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        sub_100065740(v96, v97);
        swift_bridgeObjectRelease();

        goto LABEL_53;
      }
      v192 = (void (**)(char *, char *, id))v95;
      uint64_t v193 = v37;
      uint64_t v99 = (void *)v98[1];
      uint64_t v101 = (void *)v98[2];
      uint64_t v100 = (void *)v98[3];
      int v102 = *((unsigned __int8 *)v98 + 32);
      char v103 = sub_1000BA00C(v94, *v98);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v103 & 1) == 0
        || (int v104 = v102,
            sub_1000368FC(0, (unint64_t *)&qword_100797210),
            (static NSObject.== infix(_:_:)() & 1) == 0))
      {
        sub_100065740(v100, v102);

        sub_100065740(v96, v97);
        goto LABEL_86;
      }
      uint64_t v105 = v192;
      if ((static NSObject.== infix(_:_:)() & 1) == 0)
      {
        sub_100065740(v100, v104);

        sub_100065740(v96, v97);
        goto LABEL_88;
      }
      id v197 = v96;
      unsigned __int8 v198 = v97;
      uint64_t v195 = v100;
      unsigned __int8 v196 = v104;
      LODWORD(v194) = v104;
      sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
      sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
      char v56 = static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)();

      sub_100065740(v100, v194);
      uint64_t v91 = v96;
      unsigned __int8 v92 = v97;
LABEL_22:
      sub_100065740(v91, v92);
      goto LABEL_42;
    case 6u:
      uint64_t v106 = v188;
      sub_1005B2804((uint64_t)v37, v188, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v108 = *(void *)v106;
      uint64_t v107 = *(void **)(v106 + 8);
      uint64_t v109 = *(void **)(v106 + 24);
      unsigned __int8 v110 = *(unsigned char *)(v106 + 32);
      uint64_t v111 = *(void *)(v106 + 40);
      uint64_t v112 = v194;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v109, v110);
        swift_bridgeObjectRelease();

        goto LABEL_53;
      }
      uint64_t v190 = (uint64_t *)v111;
      id v191 = v109;
      v192 = (void (**)(char *, char *, id))v107;
      uint64_t v193 = v37;
      uint64_t v113 = (void *)v112[1];
      uint64_t v114 = (void *)v112[3];
      unsigned __int8 v115 = *((unsigned char *)v112 + 32);
      uint64_t v116 = v112[5];
      char v117 = sub_1000BA00C(v108, *v112);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v117 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v114, v115);

        swift_bridgeObjectRelease();
        id v170 = v191;
        unsigned __int8 v171 = v110;
LABEL_82:
        sub_100065740(v170, v171);
        goto LABEL_86;
      }
      uint64_t v118 = v116;
      uint64_t v119 = v192;
      if ((static TTRSection.__derived_enum_equals(_:_:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v114, v115);

        swift_bridgeObjectRelease();
        sub_100065740(v191, v110);

        goto LABEL_88;
      }
      id v120 = v191;
      id v197 = v191;
      unsigned __int8 v62 = v110;
      unsigned __int8 v198 = v110;
      uint64_t v195 = v114;
      unsigned __int8 v196 = v115;
      sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
      sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
      if ((static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v114, v115);

        swift_bridgeObjectRelease();
        id v170 = v120;
LABEL_81:
        unsigned __int8 v171 = v62;
        goto LABEL_82;
      }
      if (v190)
      {
        if (v118)
        {
          swift_bridgeObjectRetain();
          uint64_t v121 = swift_bridgeObjectRetain();
          sub_1005A25D8(v121, v118);
          char v123 = v122;
          swift_bridgeObjectRelease();
          sub_100065740(v114, v115);

          sub_100065740(v191, v110);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();

          if ((v123 & 1) == 0) {
            goto LABEL_88;
          }
          goto LABEL_104;
        }
        swift_bridgeObjectRetain();
        sub_100065740(v114, v115);

        sub_100065740(v191, v110);
        swift_bridgeObjectRelease_n();
LABEL_86:
        uint64_t v181 = v192;
        goto LABEL_87;
      }
      sub_100065740(v114, v115);

      sub_100065740(v191, v110);
      if (!v118) {
        goto LABEL_104;
      }
LABEL_100:
      swift_bridgeObjectRelease();
LABEL_88:
      uint64_t v180 = (uint64_t)v193;
LABEL_89:
      sub_1005B286C(v180, type metadata accessor for TTRRemindersListMovingRemindersParams);
LABEL_90:
      char v56 = 0;
      return v56 & 1;
    case 7u:
      uint64_t v193 = v37;
      uint64_t v124 = v189;
      sub_1005B2804((uint64_t)v37, (uint64_t)v189, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v125 = *v124;
      uint64_t v126 = *(int *)(sub_10003B754(&qword_100792838) + 48);
      uint64_t v127 = (char *)v124 + v126;
      uint64_t v128 = v194;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
        ((void (*)(char *, id))v192[1])(v127, v191);
        goto LABEL_51;
      }
      uint64_t v129 = *v128;
      uint64_t v130 = v192;
      uint64_t v131 = v192[4];
      uint64_t v132 = v185;
      uint64_t v133 = v127;
      id v134 = v191;
      v131(v185, v133, v191);
      uint64_t v135 = v184;
      v131(v184, (char *)v128 + v126, v134);
      char v136 = sub_1000BA00C(v125, v129);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v136)
      {
        char v56 = static DateComponents.== infix(_:_:)();
        uint64_t v137 = (void (*)(char *, id))v130[1];
        v137(v135, v134);
        v137(v132, v134);
        goto LABEL_42;
      }
      uint64_t v172 = (void (*)(char *, id))v130[1];
      v172(v135, v134);
      uint64_t v173 = v132;
      goto LABEL_71;
    case 8u:
      uint64_t v193 = v37;
      uint64_t v138 = (uint64_t)v37;
      int v139 = v190;
      sub_1005B2804(v138, (uint64_t)v190, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v140 = *v139;
      uint64_t v141 = *(int *)(sub_10003B754(&qword_100792838) + 48);
      uint64_t v142 = (char *)v139 + v141;
      uint64_t v143 = v194;
      if (swift_getEnumCaseMultiPayload() != 8)
      {
        ((void (*)(char *, id))v192[1])(v142, v191);
LABEL_51:
        swift_bridgeObjectRelease();
LABEL_52:
        uint64_t v37 = v193;
        goto LABEL_53;
      }
      uint64_t v144 = *v143;
      id v134 = v191;
      uint64_t v145 = v192;
      uint64_t v146 = v192[4];
      uint64_t v147 = v187;
      v146(v187, v142, v191);
      uint64_t v148 = v186;
      v146(v186, (char *)v143 + v141, v134);
      char v149 = sub_1000BA00C(v140, v144);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v149)
      {
        char v56 = static DateComponents.== infix(_:_:)();
        uint64_t v150 = (void (*)(char *, id))v145[1];
        v150(v148, v134);
        v150(v147, v134);
LABEL_42:
        sub_1005B286C((uint64_t)v193, type metadata accessor for TTRRemindersListMovingRemindersParams);
        return v56 & 1;
      }
      uint64_t v172 = (void (*)(char *, id))v145[1];
      v172(v148, v134);
      uint64_t v173 = v147;
LABEL_71:
      v172(v173, v134);
      goto LABEL_88;
    default:
      sub_1005B2804((uint64_t)v37, (uint64_t)v34, type metadata accessor for TTRRemindersListMovingRemindersParams);
      uint64_t v42 = *(void *)v34;
      uint64_t v41 = (void *)*((void *)v34 + 1);
      uint64_t v43 = (void *)*((void *)v34 + 2);
      int v44 = v34[24];
      uint64_t v45 = *((void *)v34 + 4);
      int v46 = v194;
      if (swift_getEnumCaseMultiPayload())
      {
        swift_bridgeObjectRelease();
        sub_100065740(v43, v44);
        swift_bridgeObjectRelease();

LABEL_53:
        sub_10003B6F8((uint64_t)v37, &qword_1007A8F98);
        goto LABEL_90;
      }
      LODWORD(v192) = v44;
      uint64_t v193 = v37;
      uint64_t v152 = *v46;
      uint64_t v151 = (void *)v46[1];
      uint64_t v153 = (void *)v46[2];
      int v154 = *((unsigned __int8 *)v46 + 24);
      uint64_t v155 = v46[4];
      char v156 = sub_1000BA00C(v42, v152);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v156 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_100065740(v153, v154);

        swift_bridgeObjectRelease();
        sub_100065740(v43, v192);

        goto LABEL_88;
      }
      uint64_t v157 = v153;
      LODWORD(v194) = v154;
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      uint64_t v47 = v41;
      if (static NSObject.== infix(_:_:)())
      {
        id v191 = v151;
        id v197 = v43;
        unsigned __int8 v158 = v192;
        unsigned __int8 v198 = v192;
        uint64_t v159 = v157;
        uint64_t v195 = v157;
        unsigned __int8 v160 = v194;
        unsigned __int8 v196 = v194;
        sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
        sub_1000280B4(qword_1007A8FA0, (unint64_t *)&unk_1007A1A90);
        if (static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)())
        {
          if (v45)
          {
            if (v155)
            {
              swift_bridgeObjectRetain();
              uint64_t v161 = swift_bridgeObjectRetain();
              sub_1005A25D8(v161, v155);
              char v163 = v162;
              swift_bridgeObjectRelease();
              sub_100065740(v159, v194);
              sub_100065740(v43, v192);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();

              if ((v163 & 1) == 0) {
                goto LABEL_88;
              }
              goto LABEL_104;
            }
            swift_bridgeObjectRetain();
            sub_100065740(v159, v194);
            sub_100065740(v43, v192);
            swift_bridgeObjectRelease_n();

            uint64_t v181 = (void (**)(char *, char *, id))v191;
LABEL_87:

            goto LABEL_88;
          }
          sub_100065740(v159, v194);
          sub_100065740(v43, v192);

          if (!v155) {
            goto LABEL_104;
          }
          goto LABEL_100;
        }
        swift_bridgeObjectRelease();
        sub_100065740(v159, v160);

        swift_bridgeObjectRelease();
        uint64_t v166 = v43;
        unsigned __int8 v167 = v158;
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_100065740(v157, v194);

        swift_bridgeObjectRelease();
        uint64_t v166 = v43;
        unsigned __int8 v167 = v192;
      }
LABEL_64:
      sub_100065740(v166, v167);

      goto LABEL_88;
  }
}

uint64_t sub_1005B0FBC(void *a1, void *a2, void *a3, char a4, void *a5, void *a6, void *a7, char a8)
{
  switch(a4)
  {
    case 1:
      if (a8 != 1) {
        goto LABEL_22;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      sub_1000AAE14(a1, a2, a3, 1);
      sub_1000AAE14(a5, a6, a7, 1);
      char v14 = static NSObject.== infix(_:_:)();
      sub_1000AA844(a5, a6, a7, 1);
      uint64_t v15 = a1;
      uint64_t v16 = a2;
      uint64_t v17 = a3;
      char v18 = 1;
      goto LABEL_26;
    case 2:
      if (a8 != 2) {
        goto LABEL_22;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      sub_1000AAE14(a1, a2, a3, 2);
      sub_1000AAE14(a5, a6, a7, 2);
      char v14 = static NSObject.== infix(_:_:)();
      sub_1000AA844(a5, a6, a7, 2);
      uint64_t v15 = a1;
      uint64_t v16 = a2;
      uint64_t v17 = a3;
      char v18 = 2;
      goto LABEL_26;
    case 3:
      if (a8 != 3) {
        goto LABEL_22;
      }
      uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v21 = v20;
      if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
        char v14 = 1;
      }
      else {
        char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      sub_1000AAE14(a1, a2, a3, 3);
      sub_1000AAE14(a5, a6, a7, 3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000AA844(a5, a6, a7, 3);
      uint64_t v15 = a1;
      uint64_t v16 = a2;
      uint64_t v17 = a3;
      char v18 = 3;
      goto LABEL_26;
    case 4:
      if (a8 != 4) {
        goto LABEL_22;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      id v23 = a1;
      id v24 = a5;
      id v25 = a2;
      id v26 = a6;
      char v27 = static NSObject.== infix(_:_:)();

      if (v27)
      {
        char v14 = static NSObject.== infix(_:_:)();
      }
      else
      {

        char v14 = 0;
      }
      return v14 & 1;
    case 5:
      if (a8 != 5) {
        goto LABEL_22;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      id v28 = a1;
      id v29 = a5;
      id v30 = a2;
      id v31 = a3;
      id v32 = a6;
      id v33 = a7;
      char v34 = static NSObject.== infix(_:_:)();

      if (v34 & 1) != 0 && (static NSObject.== infix(_:_:)())
      {
        char v14 = static NSObject.== infix(_:_:)();
      }
      else
      {

        char v14 = 0;
      }
      return v14 & 1;
    case 6:
      if (a8 == 6)
      {
        sub_1000AAE14(a1, a2, a3, 6);
        sub_1000AAE14(a5, a6, a7, 6);
        char v14 = static TTRSection.__derived_enum_equals(_:_:)();
        sub_1000AA844(a5, a6, a7, 6);
        uint64_t v15 = a1;
        uint64_t v16 = a2;
        uint64_t v17 = a3;
        char v18 = 6;
LABEL_26:
        sub_1000AA844(v15, v16, v17, v18);
      }
      else
      {
LABEL_22:
        char v14 = 0;
      }
      return v14 & 1;
    default:
      if (a8) {
        char v14 = 0;
      }
      else {
        char v14 = a5 == a1;
      }
      return v14 & 1;
  }
}

uint64_t sub_1005B1404(void *a1, void *a2, char a3, void *a4, void *a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_19;
      }
      sub_1000652AC(a1, a2, 1);
      sub_1000652AC(a4, a5, 1);
      char v10 = static TTRRemindersListTargetContainer.TargetList.__derived_enum_equals(_:_:)();
      sub_100065320(a4, a5, 1);
      sub_100065320(a1, a2, 1);
      return v10 & 1;
    case 2:
      if (a6 != 2) {
        goto LABEL_19;
      }
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      id v11 = a5;
      id v12 = a1;
      id v13 = a4;
      id v14 = a2;
      char v15 = static NSObject.== infix(_:_:)();

      if ((v15 & 1) == 0)
      {

        goto LABEL_18;
      }
      if (a2)
      {
        if (a5)
        {
          sub_1000368FC(0, &qword_100791CF0);
          id v16 = v14;
          id v17 = v11;
          char v18 = static NSObject.== infix(_:_:)();

          if ((v18 & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_24;
        }
        id v11 = v14;
LABEL_18:

        goto LABEL_19;
      }
      if (a5) {
        goto LABEL_18;
      }
LABEL_24:
      char v10 = 1;
      return v10 & 1;
    case 3:
      if (a6 == 3)
      {
        uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v21 = v20;
        if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
          char v10 = 1;
        }
        else {
          char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        sub_1000652AC(a1, a2, 3);
        sub_1000652AC(a4, a5, 3);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100065320(a4, a5, 3);
        sub_100065320(a1, a2, 3);
      }
      else
      {
LABEL_19:
        char v10 = 0;
      }
      return v10 & 1;
    default:
      if (a6) {
        char v10 = 0;
      }
      else {
        char v10 = a4 == a1;
      }
      return v10 & 1;
  }
}

void sub_1005B1694(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10003B754(&qword_10079F780);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_1000368FC(0, qword_10078E3D0);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = static NSObject.== infix(_:_:)();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void *sub_1005B19F0(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1004D34B4(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    unint64_t v12 = v1 & 0xC000000000000001;
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    uint64_t v4 = 0;
    uint64_t v13 = v2;
    unint64_t v14 = v1;
    while (v2 != v4)
    {
      if (v12) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * v4 + 32);
      }
      id v6 = v5;
      TTRParticipantModel.init(sharee:)();
      id v7 = [v6 objectID];
      id v8 = [v6 objectID];
      static NSObject.== infix(_:_:)();

      TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)();
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_1004D34B4(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[14 * v10];
      v11[4] = v15;
      ++v4;
      *(_OWORD *)(v11 + 5) = v16;
      *(_OWORD *)(v11 + 7) = v17;
      *(_OWORD *)(v11 + 9) = v18;
      *(_OWORD *)(v11 + 11) = v19;
      *(_OWORD *)(v11 + 13) = v20;
      v11[15] = v21;
      unsigned char v11[16] = v22;
      v11[17] = v23;
      uint64_t v2 = v13;
      unint64_t v1 = v14;
      if (v13 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

unint64_t sub_1005B1C50(unint64_t a1)
{
  return sub_1005B1C68(a1, &qword_1007A8DC0);
}

unint64_t sub_1005B1C5C(unint64_t a1)
{
  return sub_1005B1C68(a1, &qword_1007A8DD0);
}

unint64_t sub_1005B1C68(unint64_t result, uint64_t *a2)
{
  unint64_t v3 = result;
  unint64_t v4 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_10003B754(a2);
      uint64_t result = static _SetStorage.allocate(capacity:)();
      id v5 = (unsigned char *)result;
      uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
      if (!v4) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v7) {
        return (unint64_t)v5;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  id v5 = &_swiftEmptySetSingleton;
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v4) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v7 = *(void *)(v6 + 16);
  if (!v7) {
    return (unint64_t)v5;
  }
LABEL_9:
  unint64_t v9 = v5 + 56;
  if ((v3 & 0xC000000000000001) != 0)
  {
    uint64_t v10 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
        BOOL v11 = __OFADD__(v10++, 1);
        if (v11)
        {
          __break(1u);
          goto LABEL_34;
        }
        unint64_t v12 = result;
        Hasher.init(_seed:)();
        Swift::UInt v13 = *(void *)(v12 + 16);
        Hasher._combine(_:)(v13);
        uint64_t result = Hasher._finalize()();
        uint64_t v14 = -1 << v5[32];
        unint64_t v15 = result & ~v14;
        unint64_t v16 = v15 >> 6;
        uint64_t v17 = *(void *)&v9[8 * (v15 >> 6)];
        uint64_t v18 = 1 << v15;
        uint64_t v19 = *((void *)v5 + 6);
        if (((1 << v15) & v17) != 0) {
          break;
        }
LABEL_19:
        *(void *)&v9[8 * v16] = v18 | v17;
        *(void *)(v19 + 8 * v15) = v12;
        uint64_t v21 = *((void *)v5 + 2);
        BOOL v11 = __OFADD__(v21, 1);
        uint64_t v22 = v21 + 1;
        if (v11) {
          goto LABEL_35;
        }
        *((void *)v5 + 2) = v22;
        if (v10 == v7) {
          return (unint64_t)v5;
        }
      }
      if (*(void *)(*(void *)(v19 + 8 * v15) + 16) != v13)
      {
        uint64_t v20 = ~v14;
        do
        {
          unint64_t v15 = (v15 + 1) & v20;
          unint64_t v16 = v15 >> 6;
          uint64_t v17 = *(void *)&v9[8 * (v15 >> 6)];
          uint64_t v18 = 1 << v15;
          if ((v17 & (1 << v15)) == 0) {
            goto LABEL_19;
          }
        }
        while (*(void *)(*(void *)(v19 + 8 * v15) + 16) != v13);
      }
      swift_unknownObjectRelease();
      if (v10 == v7) {
        return (unint64_t)v5;
      }
    }
  }
  uint64_t v23 = 0;
  unint64_t v24 = v3 + 32;
  uint64_t v25 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v23 != v25)
  {
    uint64_t v28 = *(void *)(v24 + 8 * v23);
    Hasher.init(_seed:)();
    Swift::UInt v29 = *(void *)(v28 + 16);
    Hasher._combine(_:)(v29);
    uint64_t result = Hasher._finalize()();
    uint64_t v30 = -1 << v5[32];
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    uint64_t v33 = *(void *)&v9[8 * (v31 >> 6)];
    uint64_t v34 = 1 << v31;
    uint64_t v35 = *((void *)v5 + 6);
    if (((1 << v31) & v33) != 0)
    {
      if (*(void *)(*(void *)(v35 + 8 * v31) + 16) == v29) {
        goto LABEL_25;
      }
      uint64_t v36 = ~v30;
      while (1)
      {
        unint64_t v31 = (v31 + 1) & v36;
        unint64_t v32 = v31 >> 6;
        uint64_t v33 = *(void *)&v9[8 * (v31 >> 6)];
        uint64_t v34 = 1 << v31;
        if ((v33 & (1 << v31)) == 0) {
          break;
        }
        if (*(void *)(*(void *)(v35 + 8 * v31) + 16) == v29) {
          goto LABEL_25;
        }
      }
    }
    *(void *)&v9[8 * v32] = v34 | v33;
    *(void *)(v35 + 8 * v31) = v28;
    uint64_t v26 = *((void *)v5 + 2);
    BOOL v11 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v11) {
      goto LABEL_36;
    }
    *((void *)v5 + 2) = v27;
    uint64_t result = swift_retain();
LABEL_25:
    if (++v23 == v7) {
      return (unint64_t)v5;
    }
  }
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1005B1F44(uint64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_10;
  }
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2) {
      return *(void *)(*(void *)(a4 + 48) + 8 * result);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1005B1F9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  *(void *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate + 8) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = *(void *)(v12 + 8);
    uint64_t v15 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
    swift_beginAccess();
    sub_10003B694(v15, (uint64_t)v7, &qword_100786EF0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_10003B6F8((uint64_t)v7, &qword_100786EF0);
    }
    else
    {
      sub_1005B6A88((uint64_t)v7, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v14 + 56))(v11, ObjectType, v14);
      sub_1005B286C((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    uint64_t v17 = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v14 + 64))(*(unsigned __int8 *)(v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging), v17, v14);
    return swift_unknownObjectRelease();
  }
  return result;
}

void *sub_1005B21D8(unint64_t a1, void *a2, SEL *a3)
{
  if (a1 >> 62) {
    goto LABEL_13;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 objectID];
      id v10 = [a2 *a3];
      char v11 = static NSObject.== infix(_:_:)();

      if (v11)
      {
        swift_bridgeObjectRelease();
        return v7;
      }

      ++v5;
      if (v8 == v4) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_14:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1005B2360(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_100038D28(a1, v2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 88))(v14, v2, v3);
  uint64_t v4 = v15;
  if (!v15)
  {
    sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100791D90);
    return 0;
  }
  uint64_t v5 = v16;
  sub_100038D28(v14, v15);
  unint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
  sub_100038CD8((uint64_t)v14);
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  sub_100038D28(a1, v7);
  id v9 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 72))(v7, v8);
  id v10 = v9;
  if (!v9)
  {
    swift_bridgeObjectRelease();
    return v10;
  }
  id v11 = [v9 objectID];

  if (!v11)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  id v12 = v11;
  id v10 = sub_1005B19F0(v6);
  swift_bridgeObjectRelease();

  return v10;
}

void sub_1005B24CC(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10003B754(&qword_1007A8D58);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_1005A27C8(v8, a1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        type metadata accessor for REMObjectID_Codable();
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      v3[2] = v24;
LABEL_12:
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for REMObjectID_Codable();
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35)
      {
LABEL_23:

        uint64_t v5 = v43;
        goto LABEL_24;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = static NSObject.== infix(_:_:)();

        if (v38) {
          goto LABEL_23;
        }
      }
      uint64_t v5 = v43;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_39;
    }
    v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_1005B2804(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005B286C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005B28CC()
{
  unint64_t v1 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(*((void *)v1 - 1) + 64);
  sub_100038CD8(v0 + 16);
  uint64_t v5 = (id *)(v0 + v3);
  uint64_t v6 = type metadata accessor for TTRListType();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 5u:

        break;
      case 3u:
        uint64_t v7 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
        break;
      case 4u:
        swift_bridgeObjectRelease();
        break;
      default:
        break;
    }
  }
  swift_bridgeObjectRelease();

  unint64_t v8 = *(char **)((char *)v5 + v1[9] + 8);
  if ((unint64_t)(v8 - 1) >= 3) {

  }
  uint64_t v9 = (char *)v5 + v1[10];
  uint64_t v10 = type metadata accessor for TTRRemindersListTip();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    uint64_t v11 = &v9[*(int *)(type metadata accessor for TTRRemindersListTips() + 20)];
    uint64_t v12 = type metadata accessor for AnyTip();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = (char *)v5 + v1[24];
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14))
  {
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v13, 1, v15))
    {
      swift_bridgeObjectRelease();
      uint64_t v16 = &v13[*(int *)(v15 + 20)];
      uint64_t v17 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    }
    id v18 = &v13[*(int *)(v14 + 20)];
    if (*((void *)v18 + 1))
    {
      swift_bridgeObjectRelease();
    }
  }
  char v19 = (char *)v5 + v1[25];
  uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20))
  {
    uint64_t v21 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21))
    {
      uint64_t v22 = type metadata accessor for Date();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v19, v22);
    }
  }

  return _swift_deallocObject(v0, v4 + v3 + 2, v2 | 7);
}

uint64_t sub_1005B2D00(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (char *)v1 + v4;
  uint64_t v6 = (unsigned __int8 *)v1 + *(void *)(v3 + 64) + v4;
  unsigned int v7 = *v6;
  if (v6[1]) {
    int v8 = 256;
  }
  else {
    int v8 = 0;
  }
  uint64_t v9 = v8 | v7;
  uint64_t v10 = v1[5];
  uint64_t v11 = v1[6];
  sub_100038D28(v1 + 2, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t))(v11 + 8))(a1, v5, v9, v10, v11);
}

void *sub_1005B2DE4(unint64_t a1, void (*a2)(unint64_t, id), uint64_t a3)
{
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  uint64_t v4 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  uint64_t v19 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = _swiftEmptyArrayStorage;
  sub_1004D3570(0, 0, 0);
  unsigned int v7 = v22;
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v8)
  {
    while (1)
    {
      unint64_t v9 = 0;
      uint64_t v17 = a1 & 0xFFFFFFFFFFFFFF8;
      unint64_t v18 = a1 & 0xC000000000000001;
      while (v18)
      {
        id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
        uint64_t v11 = v10;
        unint64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_14;
        }
        v20(v9, v10);

        uint64_t v22 = v7;
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        if (v14 >= v13 >> 1)
        {
          sub_1004D3570(v13 > 1, v14 + 1, 1);
          unsigned int v7 = v22;
        }
        v7[2] = v14 + 1;
        sub_1005B6A88((uint64_t)v6, (uint64_t)v7+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v14, type metadata accessor for TTRRemindersListUncommittedReminder);
        ++v9;
        if (v12 == v8) {
          goto LABEL_16;
        }
      }
      if (v9 < *(void *)(v17 + 16)) {
        break;
      }
      __break(1u);
LABEL_14:
      __break(1u);
LABEL_15:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      if (!v8) {
        goto LABEL_16;
      }
    }
    id v10 = *(id *)(a1 + 8 * v9 + 32);
    goto LABEL_7;
  }
LABEL_16:
  swift_bridgeObjectRelease();
  return v7;
}

void *sub_1005B300C(uint64_t a1, uint64_t (*a2)(char *, void, char *), uint64_t a3)
{
  uint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v4 = sub_10003B754(&qword_1007A1528);
  uint64_t v34 = *(void *)(v4 - 8);
  uint64_t v35 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_10003B754(&qword_1007A0A30);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v10 = (void *)((char *)v28 - v9);
  __chkstk_darwin(v11);
  unint64_t v13 = (void *)((char *)v28 - v12);
  char v38 = _swiftEmptyArrayStorage;
  sub_1004D3540(0, 0, 0);
  unint64_t v14 = v38;
  uint64_t v15 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v32 = v15;
  v28[1] = a1;
  if (v15)
  {
    uint64_t v16 = 0;
    uint64_t v17 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
    uint64_t v29 = *(void *)(v17 + 72);
    unint64_t v30 = v6;
    do
    {
      uint64_t v19 = v31;
      uint64_t v20 = (uint64_t)&v33[*(int *)(v31 + 48)];
      sub_1005B2804(v18, v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v21 = (uint64_t)v10 + *(int *)(v19 + 48);
      *id v10 = v16;
      sub_1005B6A88(v20, v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100028C3C((uint64_t)v10, (uint64_t)v13, &qword_1007A0A30);
      uint64_t v22 = (char *)v13 + *(int *)(v19 + 48);
      uint64_t v23 = *(int *)(v35 + 48);
      *(void *)&v6[v23] = v36(v6, *v13, v22);
      sub_10003B6F8((uint64_t)v13, &qword_1007A0A30);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3540(0, v14[2] + 1, 1);
        unint64_t v14 = v38;
      }
      unint64_t v25 = v14[2];
      unint64_t v24 = v14[3];
      if (v25 >= v24 >> 1)
      {
        sub_1004D3540(v24 > 1, v25 + 1, 1);
        unint64_t v14 = v38;
      }
      ++v16;
      v14[2] = v25 + 1;
      uint64_t v26 = (uint64_t)v14
          + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))
          + *(void *)(v34 + 72) * v25;
      uint64_t v6 = v30;
      sub_100028C3C((uint64_t)v30, v26, &qword_1007A1528);
      v18 += v29;
    }
    while (v32 != v16);
  }
  swift_bridgeObjectRelease();
  return v14;
}

void *sub_1005B3360(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListUncommittedReminder(0);
  __chkstk_darwin(v5);
  uint64_t v33 = (uint64_t)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v10 = (char *)&v29 - v9;
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v35 = _swiftEmptyArrayStorage;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v31 = v2;
    uint64_t v13 = 0;
    uint64_t v14 = *(void *)(v8 + 72);
    unint64_t v32 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v15 = a1 + v32;
    uint64_t v34 = a2;
    uint64_t v16 = a2 + 56;
    uint64_t v17 = _swiftEmptyArrayStorage;
    while (1)
    {
      sub_1005B2804(v15 + v14 * v13, (uint64_t)v10, type metadata accessor for TTRRemindersListUncommittedReminder);
      uint64_t v18 = *(void *)&v10[*(int *)(v5 + 24)];
      if (v18)
      {
        id v19 = [*(id *)(v18 + OBJC_IVAR____TtC9Reminders35TTRRemindersListEditingSessionState_reminderChangeItem) saveRequest];
        if (v19)
        {
          uint64_t v20 = v19;
          if (*(void *)(v34 + 16))
          {
            uint64_t v21 = static Hasher._hash(seed:_:)();
            uint64_t v22 = -1 << *(unsigned char *)(v34 + 32);
            unint64_t v23 = v21 & ~v22;
            if ((*(void *)(v16 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23))
            {
              uint64_t v24 = *(void *)(v34 + 48);
              if (*(void **)(v24 + 8 * v23) == v20)
              {
LABEL_11:

                sub_1005B6A88((uint64_t)v10, v33, type metadata accessor for TTRRemindersListUncommittedReminder);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  sub_1004D3570(0, v17[2] + 1, 1);
                }
                uint64_t v17 = v35;
                unint64_t v27 = v35[2];
                unint64_t v26 = v35[3];
                unint64_t v28 = v27 + 1;
                if (v27 >= v26 >> 1)
                {
                  unint64_t v30 = v27 + 1;
                  sub_1004D3570(v26 > 1, v27 + 1, 1);
                  unint64_t v28 = v30;
                  uint64_t v17 = v35;
                }
                v17[2] = v28;
                sub_1005B6A88(v33, (uint64_t)v17 + v32 + v27 * v14, type metadata accessor for TTRRemindersListUncommittedReminder);
                goto LABEL_18;
              }
              uint64_t v25 = ~v22;
              while (1)
              {
                unint64_t v23 = (v23 + 1) & v25;
                if (((*(void *)(v16 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
                  break;
                }
                if (*(void **)(v24 + 8 * v23) == v20) {
                  goto LABEL_11;
                }
              }
            }
          }
        }
      }
      sub_1005B286C((uint64_t)v10, type metadata accessor for TTRRemindersListUncommittedReminder);
LABEL_18:
      if (++v13 == v12) {
        return v35;
      }
    }
  }
  return result;
}

void *sub_1005B3650(uint64_t a1, uint64_t a2)
{
  uint64_t v71 = a2;
  uint64_t v67 = sub_10003B754(&qword_10078FAA0);
  __chkstk_darwin(v67);
  uint64_t v66 = (char *)v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v65 = (uint64_t)v52 - v6;
  uint64_t v7 = sub_10003B754(&qword_10079D580);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10003B754(&qword_10079D588);
  __chkstk_darwin(v64);
  uint64_t v63 = (uint64_t)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v62 = (uint64_t)v52 - v15;
  uint64_t v16 = sub_10003B754(&qword_1007A0A08);
  __chkstk_darwin(v16 - 8);
  uint64_t v72 = (uint64_t)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_10003B754(&qword_10079C900);
  uint64_t v18 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v61 = (uint64_t)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v54 = (uint64_t)v52 - v21;
  uint64_t v22 = *(void *)(a1 + 16);
  if (v22)
  {
    v52[2] = v2;
    uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = a1 + ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80));
    uint64_t v57 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    uint64_t v58 = v23;
    uint64_t v53 = v18;
    char v55 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    char v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    uint64_t v69 = *(void *)(v24 + 72);
    v52[1] = a1;
    swift_bridgeObjectRetain();
    int v68 = _swiftEmptyArrayStorage;
    uint64_t v59 = v13;
    id v60 = v9;
    while (1)
    {
      uint64_t v73 = *(void *)(v71 + 80);
      swift_retain();
      TTRMutableTreeStorage.parent(of:)();
      sub_10003B754(&qword_10078C500);
      sub_100037EA0(&qword_1007A09E8, &qword_10078C500);
      uint64_t v26 = TTRTreeContentsQueryable.childIndex(of:inParent:)();
      if (v27)
      {
        sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DC0);
        uint64_t v31 = sub_10003B754(&qword_10079D590);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v9, 1, 1, v31);
      }
      else
      {
        uint64_t v28 = v26;
        uint64_t v29 = sub_10003B754(&qword_10079D590);
        uint64_t v30 = *(int *)(v29 + 48);
        sub_100028C3C((uint64_t)v13, (uint64_t)v9, (uint64_t *)&unk_100788DC0);
        *(void *)&v9[v30] = v28;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 0, 1, v29);
      }
      swift_release();
      uint64_t v32 = sub_10003B754(&qword_10079D590);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v9, 1, v32) == 1)
      {
        sub_10003B6F8((uint64_t)v9, &qword_10079D580);
        (*v55)(v72, 1, 1, v70);
      }
      else
      {
        uint64_t v33 = *(void *)&v9[*(int *)(v32 + 48)];
        uint64_t v35 = v63;
        uint64_t v34 = v64;
        uint64_t v36 = *(int *)(v64 + 48);
        sub_100028C3C((uint64_t)v9, v63, (uint64_t *)&unk_100788DC0);
        *(void *)(v35 + v36) = v33;
        uint64_t v37 = *(void *)(v35 + *(int *)(v34 + 48));
        uint64_t v38 = v62;
        sub_100028C3C(v35, v62, (uint64_t *)&unk_100788DC0);
        uint64_t v39 = *(void *)(v71 + 32);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v41 = (uint64_t)v66;
        (*v57)(v66, 1, 1, v58);
        sub_1000DFC68(v38, v41);
        *(void *)(v41 + *(int *)(v67 + 36)) = v37;
        uint64_t v42 = v41;
        uint64_t v43 = v72;
        uint64_t v44 = v65;
        sub_100028C3C(v42, v65, &qword_10078FAA0);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v44, ObjectType, v39);
        sub_10003B6F8(v44, &qword_10078FAA0);
        uint64_t v45 = v38;
        uint64_t v13 = v59;
        uint64_t v9 = v60;
        sub_10003B6F8(v45, (uint64_t *)&unk_100788DC0);
        if ((*v56)(v43, 1, v70) != 1)
        {
          uint64_t v46 = v54;
          sub_100028C3C(v72, v54, &qword_10079C900);
          sub_100028C3C(v46, v61, &qword_10079C900);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v47 = (unint64_t)v68;
          }
          else {
            unint64_t v47 = sub_10057026C(0, v68[2] + 1, 1, (unint64_t)v68);
          }
          unint64_t v49 = *(void *)(v47 + 16);
          unint64_t v48 = *(void *)(v47 + 24);
          if (v49 >= v48 >> 1) {
            unint64_t v47 = sub_10057026C(v48 > 1, v49 + 1, 1, v47);
          }
          *(void *)(v47 + 16) = v49 + 1;
          unint64_t v50 = (*(unsigned __int8 *)(v53 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
          int v68 = (void *)v47;
          sub_100028C3C(v61, v47 + v50 + *(void *)(v53 + 72) * v49, &qword_10079C900);
          goto LABEL_5;
        }
      }
      sub_10003B6F8(v72, &qword_1007A0A08);
LABEL_5:
      v25 += v69;
      if (!--v22)
      {
        swift_bridgeObjectRelease();
        return v68;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1005B3D94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_10003B754(&qword_1007A8DA8);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1005B69D8(&qword_1007A8DB0, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1005B69D8(&qword_1007A8DB8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_1005B40AC(unint64_t result, uint64_t a2)
{
  unint64_t v2 = result;
  uint64_t v9 = a2;
  if (!(result >> 62))
  {
    uint64_t v3 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
    return v9;
  }
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v3 = result;
  if (!result) {
    return v9;
  }
LABEL_3:
  if (v3 >= 1)
  {
    if ((v2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v3; ++i)
      {
        uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        sub_1005A3704(&v8, v5);
      }
    }
    else
    {
      uint64_t v6 = (void **)(v2 + 32);
      do
      {
        uint64_t v7 = *v6++;
        sub_1005A3704(&v8, v7);

        --v3;
      }
      while (v3);
    }
    return v9;
  }
  __break(1u);
  return result;
}

void sub_1005B418C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_10003B754(&qword_1007A8D58);
      uint64_t v3 = (void *)static _SetStorage.allocate(capacity:)();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = NSObject._rawHashValue(seed:)(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        type metadata accessor for REMObjectID_Codable();
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = static NSObject.== infix(_:_:)();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = static NSObject.== infix(_:_:)();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_37;
      }
      v3[2] = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(a1 + 32 + 8 * v25);
    Swift::Int v28 = NSObject._rawHashValue(seed:)(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for REMObjectID_Codable();
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = static NSObject.== infix(_:_:)();

      if (v35) {
        goto LABEL_23;
      }
      uint64_t v36 = ~v29;
      unint64_t v30 = (v30 + 1) & v36;
      unint64_t v31 = v30 >> 6;
      uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
      uint64_t v33 = 1 << v30;
      if ((v32 & (1 << v30)) != 0)
      {
        while (1)
        {
          id v37 = *(id *)(v3[6] + 8 * v30);
          char v38 = static NSObject.== infix(_:_:)();

          if (v38) {
            break;
          }
          unint64_t v30 = (v30 + 1) & v36;
          unint64_t v31 = v30 >> 6;
          uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
          uint64_t v33 = 1 << v30;
          if ((v32 & (1 << v30)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v5 = v42;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_1005B44E4(uint64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_10;
  }
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
  }
  else if ((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result))
  {
    if (*(_DWORD *)(a4 + 36) == a2) {
      return *(void *)(*(void *)(a4 + 48) + 16 * result);
    }
    goto LABEL_9;
  }
  __break(1u);
LABEL_9:
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void sub_1005B4540(uint64_t a1)
{
}

void sub_1005B4594(uint64_t a1)
{
}

void sub_1005B45E8(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *, char *), uint64_t (*a5)(void))
{
  uint64_t v9 = a2(0) - 8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v19 - v14;
  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    uint64_t v17 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v18 = *(void *)(v13 + 72);
    do
    {
      sub_1005B2804(v17, (uint64_t)v11, a3);
      a4(v15, v11);
      sub_1005B286C((uint64_t)v15, a5);
      v17 += v18;
      --v16;
    }
    while (v16);
  }
}

uint64_t sub_1005B4720(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)&long long v34 = a6;
  uint64_t v35 = a5;
  v38[3] = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  v38[4] = &off_10074D320;
  v38[0] = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = 0;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = &_swiftEmptyDictionarySingleton;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &_swiftEmptyArrayStorage;
  uint64_t v13 = (uint64_t *)(v12 + 16);
  uint64_t v33 = v12;
  if (a2)
  {
    uint64_t v29 = __chkstk_darwin(v12);
    unint64_t v30 = (void *)v10;
    uint64_t v14 = v10;
    unint64_t v31 = v38;
    uint64_t v32 = v11;
    sub_100587844((void (*)(uint64_t))sub_10047FF10, (uint64_t)v28, a1);
  }
  else
  {
    uint64_t v14 = v10;
    swift_beginAccess();
    uint64_t v15 = swift_bridgeObjectRetain();
    sub_100569828(v15);
    uint64_t v16 = swift_endAccess();
    __chkstk_darwin(v16);
    uint64_t v29 = v10 + 16;
    unint64_t v30 = v38;
    unint64_t v31 = (void *)(v11 + 16);
    sub_1005963F8((void (*)(void))sub_1004785D4, (uint64_t)v28, a1);
  }
  swift_bridgeObjectRelease();
  sub_10003B754(&qword_10078C500);
  uint64_t v17 = (void *)TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)();
  sub_100476C0C(a4, v17);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v18 = *v13;
  swift_bridgeObjectRetain();
  sub_1004780E8((uint64_t)v17, v18);
  swift_bridgeObjectRelease();
  uint64_t v19 = v35;
  if (v35)
  {
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = v34;
    *(void *)(v20 + 16) = v19;
    *(void *)(v20 + 24) = v21;
    char v22 = (uint64_t (*)())sub_1005B69C4;
  }
  else
  {
    char v22 = sub_100459EB0;
    uint64_t v20 = 0;
  }
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  *(void *)(v23 + 24) = v20;
  id v37 = v17;
  sub_10006C140(v19);
  swift_retain();
  ((void (*)(long long *__return_ptr, void **))v22)(v36, &v37);
  swift_release();
  long long v34 = v36[0];
  swift_beginAccess();
  uint64_t v24 = *(void *)(v11 + 16);
  swift_beginAccess();
  uint64_t v25 = *(void *)(v14 + 16);
  sub_1000145EC((uint64_t)v38, (uint64_t)v36);
  type metadata accessor for TTRRemindersListTreeViewModel();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 88) = &_swiftEmptySetSingleton;
  *(void *)(v26 + 80) = v17;
  *(_OWORD *)(v26 + 24) = v34;
  *(void *)(v26 + 96) = v24;
  *(void *)(v26 + 104) = sub_1005B69BC;
  *(void *)(v26 + 112) = v23;
  swift_beginAccess();
  *(void *)(v26 + 88) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v26 + 16) = v25;
  sub_100038ED8(v36, v26 + 40);
  sub_1000499C4(v35);
  sub_100038CD8((uint64_t)v38);
  swift_release();
  swift_release();
  swift_release();
  return v26;
}

Swift::Int sub_1005B4B28(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10003B754(&qword_1007A8E38);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v24 = v1;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(v25 + v4);
      Hasher.init(_seed:)();
      if (v6) {
        uint64_t v7 = 0x736E6D756C6F63;
      }
      else {
        uint64_t v7 = 1953720684;
      }
      if (v6) {
        unint64_t v8 = 0xE700000000000000;
      }
      else {
        unint64_t v8 = 0xE400000000000000;
      }
      String.hash(into:)();
      swift_bridgeObjectRelease();
      Swift::Int result = Hasher._finalize()();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        char v23 = v6;
        uint64_t v15 = ~v10;
        do
        {
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11)) {
            uint64_t v16 = 0x736E6D756C6F63;
          }
          else {
            uint64_t v16 = 1953720684;
          }
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11)) {
            unint64_t v17 = 0xE700000000000000;
          }
          else {
            unint64_t v17 = 0xE400000000000000;
          }
          if (v16 == v7 && v17 == v8)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
          char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_4;
          }
          unint64_t v11 = (v11 + 1) & v15;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
        }
        while ((v13 & (1 << v11)) != 0);
        LOBYTE(v6) = v23;
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(*(void *)(v3 + 48) + v11) = v6;
      uint64_t v20 = *(void *)(v3 + 16);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        break;
      }
      *(void *)(v3 + 16) = v22;
LABEL_4:
      if (++v4 == v24) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

void sub_1005B4D14(uint64_t a1, uint64_t a2, int a3)
{
  int v47 = a3;
  uint64_t v45 = a1;
  uint64_t v43 = type metadata accessor for TTRRemindersListSectionCreationLocation(0);
  __chkstk_darwin(v43);
  uint64_t v42 = (uint64_t)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v49 = (uint64_t)&v41 - v7;
  uint64_t v8 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v8 - 8);
  uint64_t v46 = (uint64_t)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for TTRRemindersListUncommittedSection(0);
  __chkstk_darwin(v41);
  uint64_t v48 = (uint64_t)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v44);
  unint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = sub_10003B754(&qword_1007A8DA0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754(&qword_1007936B0);
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v41 - v24;
  uint64_t v50 = v3;
  swift_retain();
  sub_1004602D4(a2, (uint64_t)v18);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_1007A8DA0);
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100018BF8(v26, (uint64_t)qword_1007A8768);
    uint64_t v27 = v49;
    sub_1005B2804(a2, v49, type metadata accessor for TTRRemindersListSectionCreationLocation);
    Swift::Int v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      *(_DWORD *)unint64_t v30 = 136315138;
      sub_1005B2804(v27, v42, type metadata accessor for TTRRemindersListSectionCreationLocation);
      uint64_t v31 = String.init<A>(describing:)();
      uint64_t v51 = sub_1000385A8(v31, v32, &v52);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1005B286C(v27, type metadata accessor for TTRRemindersListSectionCreationLocation);
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Cannot resolve SectionCreationLocation {location: %s}", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1005B286C(v27, type metadata accessor for TTRRemindersListSectionCreationLocation);
    }
  }
  else
  {
    sub_100028C3C((uint64_t)v18, (uint64_t)v25, &qword_1007936B0);
    sub_1005B2804(v45, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v33 = 1;
    swift_storeEnumTagMultiPayload();
    sub_10003B694((uint64_t)v25, (uint64_t)v22, &qword_1007936B0);
    sub_1005B2804((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v34 = v48;
    sub_1004597D8((uint64_t)v22, (uint64_t)v12, v48);
    uint64_t v35 = sub_10003B754(&qword_10078ADB0);
    uint64_t v36 = v35;
    char v37 = v47;
    uint64_t v38 = v46;
    if (v47)
    {
      uint64_t v39 = *(int *)(v35 + 48);
      sub_1005B2804(v34 + *(int *)(v41 + 20), v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v33 = 0;
      *(unsigned char *)(v38 + v39) = 0;
    }
    uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v38, v33, 1, v36);
    __chkstk_darwin(v40);
    *(&v41 - 2) = v34;
    sub_10059AFE8(v38, v37 & 1, (uint64_t (*)(void *))sub_1005B6A20, (uint64_t)(&v41 - 4), v50);
    sub_10003B6F8(v38, &qword_10078ADA8);
    sub_1005B286C(v34, type metadata accessor for TTRRemindersListUncommittedSection);
    sub_1005B286C((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10003B6F8((uint64_t)v25, &qword_1007936B0);
  }
}

void *sub_1005B53B0(void *a1, void *a2, void *a3, char a4)
{
  uint64_t v6 = a1;
  switch(a4)
  {
    case 1:
    case 2:
    case 6:
      return v6;
    case 3:
      sub_1000AA844(a1, a2, a3, 3);
      uint64_t v6 = 0;
      break;
    case 4:
      id v7 = a2;
      sub_1000AA844(v6, a2, a3, 4);
      uint64_t v6 = a2;
      break;
    case 5:
      id v8 = a1;
      sub_1000AA844(v6, a2, a3, 5);
      break;
    default:
      uint64_t v6 = 0;
      break;
  }
  return v6;
}

void *sub_1005B54B8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_10003B754(&qword_1007A8DF0);
    uint64_t v3 = static _SetStorage.allocate(capacity:)();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v31 = v1;
    uint64_t v32 = a1 + 32;
    while (1)
    {
      uint64_t v6 = *(void **)(v32 + 8 * v4);
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      Hasher.init(_seed:)();
      id v7 = v6;
      String.hash(into:)();
      Swift::Int v8 = Hasher._finalize()();
      Swift::Int result = (void *)swift_bridgeObjectRelease();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v8 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v17 = v16;
        if (v15 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        char v20 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        Swift::Int result = (void *)swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_4;
        }
        uint64_t v21 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v21;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v24 = v23;
          if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25) {
            goto LABEL_3;
          }
          char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          Swift::Int result = (void *)swift_bridgeObjectRelease();
          if (v27) {
            goto LABEL_4;
          }
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(void *)(*(void *)(v3 + 48) + 8 * v11) = v7;
      uint64_t v28 = *(void *)(v3 + 16);
      BOOL v29 = __OFADD__(v28, 1);
      uint64_t v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31) {
        return (void *)v3;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1005B56E8(char a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v146 = a7;
  uint64_t v138 = a5;
  int v141 = a4;
  uint64_t v151 = a3;
  uint64_t v10 = sub_10003B754(&qword_10078ADA8);
  __chkstk_darwin(v10 - 8);
  uint64_t v144 = (uint64_t)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  __chkstk_darwin(updated - 8);
  uint64_t v143 = (uint64_t)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v130 - v15;
  uint64_t v133 = sub_10003B754(&qword_1007936B0);
  __chkstk_darwin(v133);
  uint64_t v134 = (uint64_t)&v130 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v142 = *(void *)(v150 - 8);
  __chkstk_darwin(v150);
  uint64_t v19 = (char *)&v130 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v135 = (uint64_t)&v130 - v21;
  __chkstk_darwin(v22);
  uint64_t v132 = (uint64_t)&v130 - v23;
  uint64_t v24 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v24 - 8);
  uint64_t v140 = (uint64_t)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v131 = (uint64_t)&v130 - v27;
  __chkstk_darwin(v28);
  uint64_t v137 = (char *)&v130 - v29;
  __chkstk_darwin(v30);
  uint64_t v153 = (uint64_t)&v130 - v31;
  uint64_t v149 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v148 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v152 = (char *)&v130 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement(0);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v36 = (char *)&v130 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v37 - 8);
  uint64_t v39 = (char *)&v130 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1) {
    *(unsigned char *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 1;
  }
  sub_1005885DC(a2);
  uint64_t v40 = a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v40, (uint64_t)v39, &qword_100786EF0);
  uint64_t v41 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  LODWORD(v40) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v39, 1, v41);
  sub_10003B6F8((uint64_t)v39, &qword_100786EF0);
  if (v40 == 1)
  {
    if (qword_100785708 != -1) {
      swift_once();
    }
    uint64_t v42 = type metadata accessor for Logger();
    sub_100018BF8(v42, (uint64_t)qword_1007A8768);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v45 = 0;
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "Unexpected: a non-nil ListInfo should be set by the time the tree is updated.", v45, 2u);
      swift_slowDealloc();
    }
  }
  uint64_t v46 = *(void *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 72))(ObjectType, v46);
  if (v49)
  {
    uint64_t v50 = v48;
    uint64_t v51 = swift_getObjectType();
    LOBYTE(v50) = (*(uint64_t (**)(uint64_t, uint64_t))(v50 + 16))(v51, v50);
    swift_unknownObjectRelease();
    uint64_t v49 = v50 & 1;
  }
  uint64_t v52 = a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v53 = *(void *)(v52 + 8);
    uint64_t v54 = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 40))(v49, 0, v54, v53);
    swift_unknownObjectRelease();
  }
  uint64_t v139 = v52;
  uint64_t v55 = (uint64_t)&_swiftEmptySetSingleton;
  uint64_t v161 = &_swiftEmptySetSingleton;
  uint64_t v155 = (unsigned char *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions);
  BOOL v56 = *(unsigned char *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions + 2) == 1;
  uint64_t v145 = v16;
  uint64_t v147 = a6;
  if (v56)
  {
    uint64_t v57 = a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements;
    swift_beginAccess();
    uint64_t v58 = *(void *)(*(void *)v57 + 16);
    if (v58)
    {
      uint64_t v59 = (uint64_t)&v36[*(int *)(v33 + 20)];
      uint64_t v60 = *(void *)v57
          + ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80));
      uint64_t v61 = *(void *)(v34 + 72);
      swift_bridgeObjectRetain();
      do
      {
        sub_1005B2804(v60, (uint64_t)v36, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        sub_1005B2804(v59, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1005B286C((uint64_t)v36, type metadata accessor for TTRRemindersListTreeViewModel.RecurrentReminderReplacement);
        uint64_t v62 = (void *)TTRRemindersListViewModel.Item.reminderObjectID.getter();
        sub_1005B286C((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        if (v62)
        {
          sub_100027C64(&v156, v62);
        }
        v60 += v61;
        --v58;
      }
      while (v58);
      swift_bridgeObjectRelease();
      uint64_t v55 = (uint64_t)v161;
    }
    *(void *)uint64_t v57 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    a6 = v147;
    uint64_t v63 = (void *)(v147
                   + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides);
    swift_beginAccess();
    *uint64_t v63 = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRelease();
  }
  if ((v55 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v130 = __CocoaSet.count.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v130 = *(void *)(v55 + 16);
  }
  type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  uint64_t v64 = swift_allocObject();
  uint64_t v65 = (uint64_t *)(v146 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements);
  swift_beginAccess();
  uint64_t v66 = *v65;
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_10059D73C();
  uint64_t v69 = sub_1005B4720((uint64_t)_swiftEmptyArrayStorage, 0, v64, v66, (uint64_t)v67, v68);
  if (v155[1] == 1)
  {
    swift_retain();
    uint64_t v70 = sub_1004623E0(v69);
    swift_release();
    sub_1005979D0((unint64_t)v70);
    uint64_t v55 = (uint64_t)v161;
  }
  uint64_t v154 = v69;
  sub_100593A94(v69);
  uint64_t v136 = REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter();
  if ((v55 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v71 = __CocoaSet.count.getter();
    if (!v71) {
      goto LABEL_41;
    }
    uint64_t v72 = v71;
    unsigned __int8 v160 = _swiftEmptyArrayStorage;
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v157 = __CocoaSet.startIndex.getter();
    uint64_t v158 = v73;
    char v159 = 1;
    if ((v72 & 0x8000000000000000) == 0) {
      goto LABEL_35;
    }
    __break(1u);
  }
  uint64_t v72 = *(void *)(v55 + 16);
  swift_bridgeObjectRetain();
  if (!v72)
  {
LABEL_41:
    swift_bridgeObjectRelease();
    uint64_t v87 = _swiftEmptyArrayStorage;
LABEL_42:
    sub_1005B40AC((unint64_t)v87, v136);
    swift_bridgeObjectRelease();
    uint64_t v88 = v145;
    uint64_t v89 = v150;
    uint64_t v90 = (uint64_t)v137;
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter()) {
        sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
      }
      if (_CocoaArrayWrapper.endIndex.getter()) {
        sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
      }
      if (_CocoaArrayWrapper.endIndex.getter()) {
        sub_1005B418C((unint64_t)_swiftEmptyArrayStorage);
      }
    }
    REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
    uint64_t v91 = v142;
    unsigned __int8 v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v142 + 56);
    uint64_t v93 = v153;
    v92(v153, 1, 1, v89);
    sub_10003B694(v138, v90, (uint64_t *)&unk_100788DC0);
    uint64_t v94 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
    if (v94(v90, 1, v89) == 1)
    {
      sub_10003B6F8(v90, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      uint64_t v95 = v90;
      uint64_t v96 = v132;
      sub_1005B6A88(v95, v132, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v97 = v134;
      sub_1005B2804(v96, v134, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v92(v97, 0, 1, v89);
      swift_storeEnumTagMultiPayload();
      uint64_t v98 = v131;
      sub_100461C08(v97, v131);
      sub_10003B6F8(v97, &qword_1007936B0);
      sub_1005B286C(v96, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v93, (uint64_t *)&unk_100788DC0);
      sub_100028C3C(v98, v93, (uint64_t *)&unk_100788DC0);
    }
    if ((v141 & 1) != 0 || *v155 != 1)
    {
      uint64_t v105 = sub_10003B754(&qword_10078ADB8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v88, 1, 1, v105);
    }
    else
    {
      BOOL v99 = v130 != 0;
      uint64_t v100 = sub_10003B754(&qword_10078ADB8);
      uint64_t v101 = *(int *)(v100 + 48);
      uint64_t v102 = *(void *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
      uint64_t v103 = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters(0);
      (*(void (**)(char *, char *, uint64_t))(v148 + 16))(&v88[*(int *)(v103 + 20)], v152, v149);
      *(void *)uint64_t v88 = v102;
      uint64_t v104 = *(int *)(v103 + 24);
      uint64_t v93 = v153;
      v88[v104] = v99;
      uint64_t v89 = v150;
      v88[v101] = 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v88, 0, 1, v100);
      swift_retain();
    }
    uint64_t v106 = v140;
    sub_10003B694(v93, v140, (uint64_t *)&unk_100788DC0);
    if (v94(v106, 1, v89) == 1)
    {
      uint64_t v107 = sub_10003B754(&qword_10078ADB0);
      uint64_t v108 = v144;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 56))(v144, 1, 1, v107);
    }
    else
    {
      uint64_t v109 = v135;
      sub_1005B6A88(v106, v135, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v110 = sub_10003B754(&qword_10078ADB0);
      uint64_t v111 = *(int *)(v110 + 48);
      uint64_t v108 = v144;
      sub_1005B2804(v109, v144, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(unsigned char *)(v108 + v111) = 0;
      sub_1005B286C(v109, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v110 - 8) + 56))(v108, 0, 1, v110);
    }
    uint64_t v112 = v139;
    uint64_t v113 = v154;
    swift_bridgeObjectRelease();
    uint64_t v114 = v143;
    sub_1005B2804((uint64_t)v88, v143, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
    type metadata accessor for TTRRemindersListTreeViewModelUpdateContext(0);
    swift_allocObject();
    uint64_t v115 = swift_retain();
    uint64_t v116 = sub_10044D218(v115, v108, v114);
    swift_release();
    *(void *)(a6 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree) = v113;
    swift_retain();
    swift_release();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v117 = *(void *)(v112 + 8);
      uint64_t v118 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v117 + 72))(v116, v118, v117);
      swift_unknownObjectRelease();
    }
    uint64_t v119 = *(void *)(REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter() + 16);
    swift_bridgeObjectRelease();
    if (v119)
    {
      REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter();
      id v120 = (void *)sub_10059F0F0();
      char v122 = v121;
      uint64_t v124 = v123;
      unsigned int v125 = v123;
      swift_bridgeObjectRelease();
      if (v125 <= 0xFB)
      {
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v126 = *(void *)(v112 + 8);
          uint64_t v127 = swift_getObjectType();
          (*(void (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v126 + 152))(v120, v122, v124, v127, v126);
          swift_unknownObjectRelease();
        }
        sub_1001088FC(v120, v122, v124);
      }
    }
    sub_100595970(0);
    swift_release();
    swift_release();
    sub_1005B286C((uint64_t)v88, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
    sub_10003B6F8(v153, (uint64_t *)&unk_100788DC0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v152, v149);
    uint64_t v129 = v155;
    *(_WORD *)uint64_t v155 = 257;
    v129[2] = 0;
    return result;
  }
  unsigned __int8 v160 = _swiftEmptyArrayStorage;
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v157 = sub_1005AF66C(v55);
  uint64_t v158 = v74;
  char v159 = v75 & 1;
  while (1)
  {
LABEL_35:
    while (1)
    {
      int64_t v82 = v157;
      uint64_t v81 = v158;
      char v83 = v159;
      sub_10059876C(v157, v158, v159, v55);
      char v85 = v84;
      REMObjectID.codable.getter();

      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      if ((v55 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v76 = sub_1005AF9B0(v82, v81, v83, v55);
      uint64_t v78 = v77;
      char v80 = v79;
      sub_1000205F8(v82, v81, v83);
      uint64_t v157 = v76;
      uint64_t v158 = v78;
      char v159 = v80 & 1;
      if (!--v72) {
        goto LABEL_40;
      }
    }
    if ((v83 & 1) == 0) {
      break;
    }
    if (__CocoaSet.Index.handleBitPattern.getter()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_10003B754(&qword_1007A8D68);
    uint64_t v86 = (void (*)(id *, void))Set.Index._asCocoa.modify();
    __CocoaSet.formIndex(after:isUnique:)();
    v86(&v156, 0);
    if (!--v72)
    {
LABEL_40:
      sub_1000205F8(v157, v158, v159);
      uint64_t v87 = v160;
      swift_bridgeObjectRelease();
      a6 = v147;
      goto LABEL_42;
    }
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1005B693C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005B694C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005B6984()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005B69BC(uint64_t a1)
{
  return sub_100459EB4(a1, *(void (**)(uint64_t *__return_ptr, uint64_t *))(v1 + 16));
}

uint64_t sub_1005B69C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100459E7C(a1, *(uint64_t (**)(void))(v2 + 16), a2);
}

BOOL sub_1005B69CC(uint64_t a1)
{
  return sub_1005A2140(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1005B69D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1005B6A20(uint64_t a1)
{
  return sub_10059EF4C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005B6A28(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(v1 + 24) + 504))(a1, *(void *)(v1 + 16));
}

BOOL sub_1005B6A68(void **a1)
{
  return sub_10059B8E8(a1, v1);
}

uint64_t sub_1005B6A88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005B6AF0()
{
  return sub_10059AF90();
}

uint64_t sub_1005B6AF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10059ACAC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005B6B18(uint64_t a1)
{
  return sub_1005A01D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_1005B6B24@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_10059A908(a1, a2, v3[3], v3[4], v3[5], a3);
}

uint64_t sub_1005B6B30(uint64_t a1, unint64_t a2, uint64_t a3)
{
  return sub_10059ABBC(a1, a2, a3, *(void **)(v3 + 16));
}

id sub_1005B6B38@<X0>(void *a1@<X8>)
{
  return sub_10059A74C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

double sub_1005B6B58(_OWORD *a1)
{
  double result = 0.0;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1005B6B7C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1005B6BD8(uint64_t a1)
{
  return a1;
}

id sub_1005B6C0C(id result, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    uint64_t v5 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v6 = v5;
    return a2;
  }
  return result;
}

uint64_t sub_1005B6C6C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        uint64_t v11 = (void *)a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v11;
        unint64_t v12 = (void *)a2[2];
        unsigned __int8 v13 = *((unsigned char *)a2 + 24);
        swift_bridgeObjectRetain();
        id v14 = v11;
        sub_1000AAEA8(v12, v13);
        *(void *)(a1 + 16) = v12;
        *(unsigned char *)(a1 + 24) = v13;
        break;
      case 5u:
        uint64_t v15 = (void *)a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v15;
        uint64_t v17 = (void *)a2[2];
        uint64_t v16 = (void *)a2[3];
        *(void *)(a1 + 16) = v17;
        unsigned __int8 v18 = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        id v19 = v15;
        id v20 = v17;
        sub_1000AAEA8(v16, v18);
        *(void *)(a1 + 24) = v16;
        *(unsigned char *)(a1 + 32) = v18;
        break;
      case 6u:
        uint64_t v21 = (void *)a2[1];
        char v22 = *((unsigned char *)a2 + 16);
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v21;
        *(unsigned char *)(a1 + 16) = v22;
        uint64_t v23 = (void *)a2[3];
        unsigned __int8 v24 = *((unsigned char *)a2 + 32);
        swift_bridgeObjectRetain();
        id v25 = v21;
        sub_1000AAEA8(v23, v24);
        *(void *)(a1 + 24) = v23;
        *(unsigned char *)(a1 + 32) = v24;
        *(void *)(a1 + 40) = a2[5];
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        uint64_t v26 = *(int *)(sub_10003B754(&qword_100792838) + 48);
        uint64_t v27 = a1 + v26;
        uint64_t v28 = (uint64_t)a2 + v26;
        uint64_t v29 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
        break;
      default:
        id v6 = (void *)a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v6;
        id v7 = (void *)a2[2];
        unsigned __int8 v8 = *((unsigned char *)a2 + 24);
        swift_bridgeObjectRetain();
        id v9 = v6;
        sub_1000AAEA8(v7, v8);
        *(void *)(a1 + 16) = v7;
        *(unsigned char *)(a1 + 24) = v8;
        *(void *)(a1 + 32) = a2[4];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1005B7004(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 2u:
      swift_bridgeObjectRelease();

      sub_100065740(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));
      goto LABEL_12;
    case 1u:
    case 3u:
    case 4u:
      swift_bridgeObjectRelease();

      uint64_t v2 = *(void **)(a1 + 16);
      unsigned __int8 v3 = *(unsigned char *)(a1 + 24);
      goto LABEL_8;
    case 5u:
      swift_bridgeObjectRelease();

      uint64_t v2 = *(void **)(a1 + 24);
      unsigned __int8 v3 = *(unsigned char *)(a1 + 32);
LABEL_8:
      sub_100065740(v2, v3);
      break;
    case 6u:
      swift_bridgeObjectRelease();

      sub_100065740(*(id *)(a1 + 24), *(unsigned char *)(a1 + 32));
LABEL_12:
      swift_bridgeObjectRelease();
      break;
    case 7u:
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v4 = a1 + *(int *)(sub_10003B754(&qword_100792838) + 48);
      uint64_t v5 = type metadata accessor for DateComponents();
      id v6 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      v6(v4, v5);
      break;
    default:
      return;
  }
}

uint64_t sub_1005B719C(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
      uint64_t v4 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v4;
      uint64_t v5 = *(void **)(a2 + 16);
      unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
      swift_bridgeObjectRetain();
      id v7 = v4;
      sub_1000AAEA8(v5, v6);
      *(void *)(a1 + 16) = v5;
      *(unsigned char *)(a1 + 24) = v6;
      break;
    case 5u:
      uint64_t v16 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v16;
      unsigned __int8 v18 = *(void **)(a2 + 16);
      uint64_t v17 = *(void **)(a2 + 24);
      *(void *)(a1 + 16) = v18;
      unsigned __int8 v19 = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      id v20 = v16;
      id v21 = v18;
      sub_1000AAEA8(v17, v19);
      *(void *)(a1 + 24) = v17;
      *(unsigned char *)(a1 + 32) = v19;
      break;
    case 6u:
      char v22 = *(void **)(a2 + 8);
      char v23 = *(unsigned char *)(a2 + 16);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v22;
      *(unsigned char *)(a1 + 16) = v23;
      unsigned __int8 v24 = *(void **)(a2 + 24);
      unsigned __int8 v25 = *(unsigned char *)(a2 + 32);
      swift_bridgeObjectRetain();
      id v26 = v22;
      sub_1000AAEA8(v24, v25);
      *(void *)(a1 + 24) = v24;
      *(unsigned char *)(a1 + 32) = v25;
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      goto LABEL_7;
    case 7u:
    case 8u:
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      uint64_t v12 = *(int *)(sub_10003B754(&qword_100792838) + 48);
      uint64_t v13 = a1 + v12;
      uint64_t v14 = a2 + v12;
      uint64_t v15 = type metadata accessor for DateComponents();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      break;
    default:
      unsigned __int8 v8 = *(void **)(a2 + 8);
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = v8;
      id v9 = *(void **)(a2 + 16);
      unsigned __int8 v10 = *(unsigned char *)(a2 + 24);
      swift_bridgeObjectRetain();
      id v11 = v8;
      sub_1000AAEA8(v9, v10);
      *(void *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 24) = v10;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
LABEL_7:
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005B738C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005B286C(a1, type metadata accessor for TTRRemindersListMovingRemindersParams);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 3u:
      case 4u:
        *(void *)a1 = *(void *)a2;
        unsigned __int8 v8 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v8;
        id v9 = *(void **)(a2 + 16);
        unsigned __int8 v10 = *(unsigned char *)(a2 + 24);
        swift_bridgeObjectRetain();
        id v11 = v8;
        sub_1000AAEA8(v9, v10);
        *(void *)(a1 + 16) = v9;
        *(unsigned char *)(a1 + 24) = v10;
        break;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v12 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v12;
        uint64_t v13 = *(void **)(a2 + 16);
        *(void *)(a1 + 16) = v13;
        uint64_t v14 = *(void **)(a2 + 24);
        unsigned __int8 v15 = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        id v16 = v12;
        id v17 = v13;
        sub_1000AAEA8(v14, v15);
        *(void *)(a1 + 24) = v14;
        *(unsigned char *)(a1 + 32) = v15;
        break;
      case 6u:
        *(void *)a1 = *(void *)a2;
        unsigned __int8 v18 = *(void **)(a2 + 8);
        char v19 = *(unsigned char *)(a2 + 16);
        *(void *)(a1 + 8) = v18;
        *(unsigned char *)(a1 + 16) = v19;
        id v20 = *(void **)(a2 + 24);
        unsigned __int8 v21 = *(unsigned char *)(a2 + 32);
        swift_bridgeObjectRetain();
        id v22 = v18;
        sub_1000AAEA8(v20, v21);
        *(void *)(a1 + 24) = v20;
        *(unsigned char *)(a1 + 32) = v21;
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        break;
      case 7u:
      case 8u:
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        uint64_t v23 = *(int *)(sub_10003B754(&qword_100792838) + 48);
        uint64_t v24 = a1 + v23;
        uint64_t v25 = a2 + v23;
        uint64_t v26 = type metadata accessor for DateComponents();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16))(v24, v25, v26);
        break;
      default:
        *(void *)a1 = *(void *)a2;
        uint64_t v4 = *(void **)(a2 + 8);
        *(void *)(a1 + 8) = v4;
        uint64_t v5 = *(void **)(a2 + 16);
        unsigned __int8 v6 = *(unsigned char *)(a2 + 24);
        swift_bridgeObjectRetain();
        id v7 = v4;
        sub_1000AAEA8(v5, v6);
        *(void *)(a1 + 16) = v5;
        *(unsigned char *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for TTRRemindersListMovingRemindersParams(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A8EB0);
}

void *sub_1005B7754(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 8 || EnumCaseMultiPayload == 7)
  {
    *a1 = *a2;
    uint64_t v7 = *(int *)(sub_10003B754(&qword_100792838) + 48);
    unsigned __int8 v8 = (char *)a1 + v7;
    id v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for DateComponents();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1005B78A4(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005B286C((uint64_t)a1, type metadata accessor for TTRRemindersListMovingRemindersParams);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 8 || EnumCaseMultiPayload == 7)
    {
      *a1 = *a2;
      uint64_t v7 = *(int *)(sub_10003B754(&qword_100792838) + 48);
      unsigned __int8 v8 = (char *)a1 + v7;
      id v9 = (char *)a2 + v7;
      uint64_t v10 = type metadata accessor for DateComponents();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1005B7A18()
{
  uint64_t v4 = "(";
  uint64_t v5 = &unk_10067DF10;
  unsigned __int8 v6 = "(";
  uint64_t v7 = &unk_10067DF10;
  unsigned __int8 v8 = &unk_10067DF10;
  id v9 = &unk_10067DF28;
  uint64_t v10 = &unk_10067DF40;
  uint64_t result = type metadata accessor for DateComponents();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    id v11 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v12 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_1005B7B10(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v9 = *a2;
    *(void *)a1 = *a2;
    a1 = &v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v10 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      id v11 = *a2;
      *(void *)a1 = *a2;
      uint64_t v12 = v11;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for DateComponents();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void sub_1005B7C88(void **a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
LABEL_6:
    uint64_t v4 = *(void (**)(void **, uint64_t))(*(void *)(v3 - 8) + 8);
    v4(a1, v3);
    return;
  }
  if (EnumCaseMultiPayload != 2)
  {
    if (EnumCaseMultiPayload) {
      return;
    }
    uint64_t v3 = type metadata accessor for DateComponents();
    goto LABEL_6;
  }
  int v5 = *a1;
}

void **sub_1005B7D3C(void **a1, void **a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 2)
  {
    id v9 = *a2;
    *a1 = *a2;
    id v10 = v9;
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for DateComponents();
    (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void **sub_1005B7E70(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005B286C((uint64_t)a1, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 2)
    {
      id v9 = *a2;
      *a1 = *a2;
      id v10 = v9;
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for DateComponents();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t type metadata accessor for TTRRemindersListMatchedAttributeValue(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A8F58);
}

void *sub_1005B7FE8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    uint64_t v8 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for DateComponents();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005B80F4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005B286C((uint64_t)a1, type metadata accessor for TTRRemindersListMatchedAttributeValue);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      uint64_t v8 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for DateComponents();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005B8224()
{
  uint64_t result = type metadata accessor for DateComponents();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for REMHashtagLabelSpecifier();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRRemindersListReminderActionTarget.DisallowReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005B83CCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListReminderActionTarget.DisallowReason()
{
  return &type metadata for TTRRemindersListReminderActionTarget.DisallowReason;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRRemindersListReminderActionTargetExtended(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005B842C(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1000652AC);
}

void destroy for TTRRemindersListReminderActionTargetExtended(uint64_t a1)
{
}

uint64_t sub_1005B842C(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t))
{
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  uint64_t v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for TTRRemindersListReminderActionTargetExtended(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_1005B84A8(a1, a2, a3, (void (*)(void, uint64_t, uint64_t))sub_1000652AC, (void (*)(uint64_t, uint64_t, uint64_t))sub_100065320);
}

uint64_t *sub_1005B84A8(uint64_t *a1, uint64_t *a2, uint64_t a3, void (*a4)(void, uint64_t, uint64_t), void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v8, v9);
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  uint64_t v12 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v9;
  a5(v10, v11, v12);
  return a1;
}

uint64_t *assignWithTake for TTRRemindersListReminderActionTargetExtended(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005B852C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_100065320);
}

uint64_t *sub_1005B852C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5 = *(unsigned char *)(a2 + 16);
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v8 = *((unsigned __int8 *)a1 + 16);
  *((unsigned char *)a1 + 16) = v5;
  a4(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListReminderActionTargetExtended(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRRemindersListReminderActionTargetExtended(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1005B8604(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1005B860C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRRemindersListReminderActionTargetExtended()
{
  return &type metadata for TTRRemindersListReminderActionTargetExtended;
}

unint64_t sub_1005B8628()
{
  unint64_t result = qword_1007A8F90;
  if (!qword_1007A8F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A8F90);
  }
  return result;
}

uint64_t sub_1005B86A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = *(void *)(v1
                  + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_recentlyDeletedDataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(ObjectType, v11);
  id v14 = [v13 objectID];

  *uint64_t v10 = v14;
  uint64_t v15 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 0, 1, v15);
  id v16 = v14;
  static TTRLocalizableStrings.RecentlyDeletedList.genericRecentlyDeletedTitle.getter();
  type metadata accessor for TTRListColors();
  static TTRListColors.recentlyDeleted.getter();
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v7, 1, 1, v17);
  uint64_t v18 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = v23;
  TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();

  uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 0, 1, v20);
}

double sub_1005B89D8@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 2;
  double result = 0.0;
  *(_OWORD *)(a1 + 8) = xmmword_10066EDA0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 32) = 0;
  *(unsigned char *)(a1 + 40) = 0;
  *(_DWORD *)(a1 + 41) = 16843009;
  *(_WORD *)(a1 + 45) = 257;
  *(unsigned char *)(a1 + 47) = 0;
  return result;
}

unint64_t sub_1005B8A08()
{
  uint64_t v0 = (unsigned __int8 *)TTRReminderCellStyle.recentlyDeleted.unsafeMutableAddressor();
  uint64_t v1 = &_mh_execute_header;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

id sub_1005B8A74()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v4, (uint64_t)v3, &qword_100786EF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 0;
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_1005B96E0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_1005B8BAC()
{
  return static UIColor.ttrLabelColor.getter();
}

uint64_t sub_1005B8BD8(uint64_t a1)
{
  return sub_1005B8CFC(a1, (void (*)(uint64_t))sub_1004E73A4);
}

uint64_t sub_1005B8BF0()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = &off_100751868;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1005B8C88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1005B8BF0();
  sub_1004E7B18(a1, a2, a3);

  return swift_release();
}

uint64_t sub_1005B8CE4(uint64_t a1)
{
  return sub_1005B8CFC(a1, (void (*)(uint64_t))sub_1004E7CE4);
}

uint64_t sub_1005B8CFC(uint64_t a1, void (*a2)(uint64_t))
{
  sub_1005B8BF0();
  a2(a1);

  return swift_release();
}

uint64_t sub_1005B8D58()
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_1005B8DA8()
{
  uint64_t v0 = sub_100588C8C();
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1005B8E3C()
{
  return type metadata accessor for TTRShowRecentlyDeletedViewModelSource();
}

uint64_t type metadata accessor for TTRShowRecentlyDeletedViewModelSource()
{
  uint64_t result = qword_1007A9070;
  if (!qword_1007A9070) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005B8E90()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005B8EE8(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v42);
  id v6 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v7 - 8);
  uint64_t v41 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - v19;
  uint64_t v40 = a1;
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  sub_10003B694((uint64_t)v20, (uint64_t)v17, &qword_100786F00);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v11);
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  if (v21 != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v17, v11);
    uint64_t v22 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v23 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  BOOL v24 = v21 == 1;
  sub_10003B6F8((uint64_t)v20, &qword_100786F00);
  uint64_t v25 = v46;
  uint64_t v26 = v46 + OBJC_IVAR____TtC9Reminders37TTRShowRecentlyDeletedViewModelSource_remindersCount;
  *(void *)uint64_t v26 = v22;
  *(void *)(v26 + 8) = v23;
  *(unsigned char *)(v26 + 16) = v24;
  uint64_t v27 = v43;
  sub_1005B86A0(v43);
  uint64_t v28 = REMRemindersListDataView.FlatModel.reminders.getter();
  sub_10003B754(&qword_10078D1E8);
  uint64_t v29 = (int *)(type metadata accessor for TTRRemindersListTreeViewModel.Section(0) - 8);
  unint64_t v30 = (*(unsigned __int8 *)(*(void *)v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v29 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_10066C6F0;
  uint64_t v32 = v31 + v30;
  *id v6 = 2;
  swift_storeEnumTagMultiPayload();
  sub_100105478(v49);
  sub_100050E5C((uint64_t)v49, (uint64_t)v50);
  uint64_t v33 = (uint64_t)v41;
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
  sub_10010570C(v33, v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  *(void *)(v32 + v29[7]) = v28;
  *(unsigned char *)(v32 + v29[8]) = 0;
  uint64_t v34 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v37 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v45, 1, 1, v36);
  v48[3] = v34;
  v48[4] = &off_10074D320;
  v48[0] = v35;
  sub_1000145EC((uint64_t)v48, (uint64_t)v47);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v31;
  sub_100038ED8(v47, v38 + 24);
  *(void *)(v38 + 64) = v25;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10059DBB0(1, v27, (uint64_t (*)(uint64_t))sub_100051174, v38, v44, 0, v37);
  swift_release();
  sub_100038CD8((uint64_t)v48);
  swift_bridgeObjectRelease();
  sub_10003B6F8(v37, (uint64_t *)&unk_100788DC0);
  sub_10003B6F8(v27, &qword_100786EF0);
  return swift_release();
}

void *sub_1005B9480()
{
  return sub_1005B94D0();
}

uint64_t sub_1005B9488()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void *sub_1005B94D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1005B96E0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_10010570C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1005B96E0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

unint64_t sub_1005B96A0()
{
  unint64_t result = qword_10078E640;
  if (!qword_10078E640)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078E640);
  }
  return result;
}

uint64_t sub_1005B96E0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005B9740(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    uint64_t v21 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v7 = (void *)a2[1];
    uint64_t v8 = (void *)a2[2];
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = v8;
    uint64_t v9 = (void *)a2[3];
    *(void *)(a1 + 24) = v9;
    *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    uint64_t v10 = (void *)a2[5];
    *(void *)(a1 + 40) = v10;
    *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
    uint64_t v11 = (void *)a2[7];
    *(void *)(a1 + 56) = v11;
    uint64_t v13 = a2 + 8;
    uint64_t v12 = a2[8];
    id v14 = v7;
    id v15 = v8;
    id v16 = v9;
    id v17 = v10;
    id v18 = v11;
    if (v12)
    {
      uint64_t v19 = v3[9];
      *(void *)(a1 + 64) = v12;
      *(void *)(a1 + 72) = v19;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *v13;
    }
    uint64_t v22 = v3[16];
    uint64_t v23 = (void *)v3[10];
    BOOL v24 = (void *)v3[11];
    *(void *)(a1 + 80) = v23;
    *(void *)(a1 + 88) = v24;
    *(unsigned char *)(a1 + 96) = *((unsigned char *)v3 + 96);
    *(void *)(a1 + 104) = v3[13];
    *(unsigned char *)(a1 + 112) = *((unsigned char *)v3 + 112);
    uint64_t v25 = (void *)v3[15];
    *(void *)(a1 + 120) = v25;
    id v26 = v23;
    id v27 = v24;
    id v28 = v25;
    if (v22)
    {
      uint64_t v29 = v3[17];
      *(void *)(a1 + 128) = v22;
      *(void *)(a1 + 136) = v29;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 128) = *((_OWORD *)v3 + 8);
    }
    uint64_t v30 = v3[21];
    uint64_t v31 = v3[19];
    *(void *)(a1 + 144) = v3[18];
    *(void *)(a1 + 152) = v31;
    uint64_t v32 = (void *)v3[20];
    *(void *)(a1 + 160) = v32;
    swift_bridgeObjectRetain();
    id v33 = v32;
    if (v30)
    {
      uint64_t v34 = v3[22];
      *(void *)(a1 + 168) = v30;
      *(void *)(a1 + 176) = v34;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(v3 + 21);
    }
    uint64_t v35 = v3[25];
    uint64_t v36 = v3[24];
    *(void *)(a1 + 184) = v3[23];
    *(void *)(a1 + 192) = v36;
    swift_bridgeObjectRetain();
    if (v35)
    {
      uint64_t v37 = v3[26];
      *(void *)(a1 + 200) = v35;
      *(void *)(a1 + 208) = v37;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(v3 + 25);
    }
    uint64_t v38 = v3[30];
    *(_WORD *)(a1 + 216) = *((_WORD *)v3 + 108);
    *(unsigned char *)(a1 + 224) = *((unsigned char *)v3 + 224);
    uint64_t v39 = (void *)v3[29];
    *(void *)(a1 + 232) = v39;
    id v40 = v39;
    if (v38)
    {
      uint64_t v41 = v3[31];
      *(void *)(a1 + 240) = v38;
      *(void *)(a1 + 248) = v41;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 240) = *((_OWORD *)v3 + 15);
    }
    uint64_t v42 = v3[33];
    *(void *)(a1 + 256) = v3[32];
    swift_bridgeObjectRetain();
    if (v42)
    {
      uint64_t v43 = v3[34];
      *(void *)(a1 + 264) = v42;
      *(void *)(a1 + 272) = v43;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(v3 + 33);
    }
    uint64_t v44 = v6[17];
    uint64_t v45 = a1 + v44;
    uint64_t v46 = (uint64_t)v3 + v44;
    *(_OWORD *)(a1 + v44) = *(_OWORD *)((char *)v3 + v44);
    swift_unknownObjectRetain();
    uint64_t v47 = *(int *)(sub_10003B754(&qword_100794B60) + 28);
    uint64_t v48 = (void **)(v45 + v47);
    uint64_t v49 = (void **)(v46 + v47);
    uint64_t v50 = sub_10003B754(&qword_100794BB0);
    uint64_t v51 = *(void **)(v50 - 8);
    v500 = v3;
    v503 = v6;
    if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v51 + 6))(v49, 1, v50))
    {
      uint64_t v52 = sub_10003B754(&qword_100794BA8);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      uint64_t v53 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v54 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v108 = *v49;
              char *v48 = *v49;
              id v109 = v108;
              goto LABEL_53;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v107 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(v48, v49, v107);
LABEL_53:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v48, v49, *(void *)(*(void *)(v54 - 8) + 64));
              break;
          }
          uint64_t v110 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v111 = v110[5];
          uint64_t v112 = (char *)v48 + v111;
          uint64_t v113 = (char *)v49 + v111;
          uint64_t v114 = *(uint64_t *)((char *)v49 + v111 + 8);
          if (!v114) {
            goto LABEL_67;
          }
          *(void *)uint64_t v112 = *(void *)v113;
          *((void *)v112 + 1) = v114;
          uint64_t v115 = (void *)*((void *)v113 + 2);
          uint64_t v116 = *((void *)v113 + 3);
          uint64_t v415 = *((void *)v113 + 5);
          uint64_t v427 = *((void *)v113 + 4);
          v459 = (void *)*((void *)v113 + 7);
          __dsth = (void *)*((void *)v113 + 6);
          unsigned __int8 v442 = v113[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v115, v116, v427, v415, (uint64_t)__dsth, (uint64_t)v459, v442);
          *((void *)v112 + 2) = v115;
          *((void *)v112 + 3) = v116;
          *((void *)v112 + 4) = v427;
          *((void *)v112 + 5) = v415;
          *((void *)v112 + 6) = __dsth;
          *((void *)v112 + 7) = v459;
          v112[64] = v442;
          *(_DWORD *)(v112 + 65) = *(_DWORD *)(v113 + 65);
          int v117 = v113[120];
          if (v117 == 255)
          {
            long long v118 = *(_OWORD *)(v113 + 88);
            *(_OWORD *)(v112 + 72) = *(_OWORD *)(v113 + 72);
            *(_OWORD *)(v112 + 88) = v118;
            *(_OWORD *)(v112 + 104) = *(_OWORD *)(v113 + 104);
            v112[120] = v113[120];
          }
          else
          {
            char v119 = v117 & 1;
            id v120 = (void *)*((void *)v113 + 9);
            v460 = (void *)*((void *)v113 + 11);
            __dstuint64_t i = (void *)*((void *)v113 + 10);
            uint64_t v428 = *((void *)v113 + 13);
            uint64_t v443 = *((void *)v113 + 12);
            uint64_t v416 = *((void *)v113 + 14);
            sub_10003BED8(v120, (uint64_t)__dsti, (uint64_t)v460, v443, v428, v416, v117 & 1);
            *((void *)v112 + 9) = v120;
            *((void *)v112 + 10) = __dsti;
            *((void *)v112 + 11) = v460;
            *((void *)v112 + 12) = v443;
            *((void *)v112 + 13) = v428;
            *((void *)v112 + 14) = v416;
            v112[120] = v119;
          }
          v112[121] = v113[121];
          goto LABEL_70;
        case 1u:
          uint64_t v55 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              char v122 = *v49;
              char *v48 = *v49;
              id v123 = v122;
              goto LABEL_63;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v121 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v121 - 8) + 16))(v48, v49, v121);
LABEL_63:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
              break;
          }
          uint64_t v110 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v124 = v110[5];
          uint64_t v112 = (char *)v48 + v124;
          uint64_t v113 = (char *)v49 + v124;
          uint64_t v125 = *(uint64_t *)((char *)v49 + v124 + 8);
          if (v125)
          {
            *(void *)uint64_t v112 = *(void *)v113;
            *((void *)v112 + 1) = v125;
            uint64_t v126 = (void *)*((void *)v113 + 2);
            uint64_t v127 = *((void *)v113 + 3);
            uint64_t v417 = *((void *)v113 + 5);
            uint64_t v429 = *((void *)v113 + 4);
            v461 = (void *)*((void *)v113 + 7);
            __dstj = (void *)*((void *)v113 + 6);
            unsigned __int8 v444 = v113[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v126, v127, v429, v417, (uint64_t)__dstj, (uint64_t)v461, v444);
            *((void *)v112 + 2) = v126;
            *((void *)v112 + 3) = v127;
            *((void *)v112 + 4) = v429;
            *((void *)v112 + 5) = v417;
            *((void *)v112 + 6) = __dstj;
            *((void *)v112 + 7) = v461;
            v112[64] = v444;
            *(_DWORD *)(v112 + 65) = *(_DWORD *)(v113 + 65);
            int v128 = v113[120];
            if (v128 == 255)
            {
              long long v129 = *(_OWORD *)(v113 + 88);
              *(_OWORD *)(v112 + 72) = *(_OWORD *)(v113 + 72);
              *(_OWORD *)(v112 + 88) = v129;
              *(_OWORD *)(v112 + 104) = *(_OWORD *)(v113 + 104);
              v112[120] = v113[120];
            }
            else
            {
              char v133 = v128 & 1;
              uint64_t v134 = (void *)*((void *)v113 + 9);
              v462 = (void *)*((void *)v113 + 11);
              __dstk = (void *)*((void *)v113 + 10);
              uint64_t v430 = *((void *)v113 + 13);
              uint64_t v445 = *((void *)v113 + 12);
              uint64_t v418 = *((void *)v113 + 14);
              sub_10003BED8(v134, (uint64_t)__dstk, (uint64_t)v462, v445, v430, v418, v128 & 1);
              *((void *)v112 + 9) = v134;
              *((void *)v112 + 10) = __dstk;
              *((void *)v112 + 11) = v462;
              *((void *)v112 + 12) = v445;
              *((void *)v112 + 13) = v430;
              *((void *)v112 + 14) = v418;
              v112[120] = v133;
            }
            v112[121] = v113[121];
          }
          else
          {
LABEL_67:
            long long v130 = *((_OWORD *)v113 + 5);
            *((_OWORD *)v112 + 4) = *((_OWORD *)v113 + 4);
            *((_OWORD *)v112 + 5) = v130;
            *((_OWORD *)v112 + 6) = *((_OWORD *)v113 + 6);
            *(_OWORD *)(v112 + 106) = *(_OWORD *)(v113 + 106);
            long long v131 = *((_OWORD *)v113 + 1);
            *(_OWORD *)uint64_t v112 = *(_OWORD *)v113;
            *((_OWORD *)v112 + 1) = v131;
            long long v132 = *((_OWORD *)v113 + 3);
            *((_OWORD *)v112 + 2) = *((_OWORD *)v113 + 2);
            *((_OWORD *)v112 + 3) = v132;
          }
LABEL_70:
          *((unsigned char *)v48 + v110[6]) = *((unsigned char *)v49 + v110[6]);
          *((unsigned char *)v48 + v110[7]) = *((unsigned char *)v49 + v110[7]);
          *((unsigned char *)v48 + v110[8]) = *((unsigned char *)v49 + v110[8]);
          *((unsigned char *)v48 + v110[9]) = *((unsigned char *)v49 + v110[9]);
          *((unsigned char *)v48 + v110[10]) = *((unsigned char *)v49 + v110[10]);
          uint64_t v135 = v110[11];
          uint64_t v136 = *(void **)((char *)v49 + v135);
          *(void **)((char *)v48 + v135) = v136;
          id v137 = v136;
          swift_storeEnumTagMultiPayload();
          uint64_t v3 = v500;
          uint64_t v6 = v503;
          break;
        case 2u:
          v457 = v51;
          BOOL v56 = *v49;
          char *v48 = *v49;
          uint64_t v57 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (void **)((char *)v48 + v57);
          uint64_t v58 = (void **)((char *)v49 + v57);
          uint64_t v59 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v60 = *(void *)(v59 - 8);
          uint64_t v61 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v60 + 48);
          id v62 = v56;
          if (v61(v58, 1, v59))
          {
            uint64_t v63 = sub_10003B754(&qword_10078C890);
            memcpy(__dst, v58, *(void *)(*(void *)(v63 - 8) + 64));
            uint64_t v3 = v500;
            uint64_t v6 = v503;
            uint64_t v51 = v457;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v139 = *v58;
                *__dst = *v58;
                id v140 = v139;
                goto LABEL_74;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v138 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v138 - 8) + 16))(__dst, v58, v138);
LABEL_74:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(__dst, v58, *(void *)(v60 + 64));
                break;
            }
            uint64_t v6 = v503;
            uint64_t v51 = v457;
            (*(void (**)(void **, void, uint64_t, uint64_t))(v60 + 56))(__dst, 0, 1, v59);
            uint64_t v3 = v500;
          }
          goto LABEL_85;
        case 3u:
          uint64_t v64 = *v49;
          char *v48 = *v49;
          uint64_t v65 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v458 = (void **)((char *)v49 + v65);
          __dsta = (void **)((char *)v48 + v65);
          uint64_t v66 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v67 = *(void *)(v66 - 8);
          uint64_t v68 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v67 + 48);
          id v69 = v64;
          if (v68(v458, 1, v66)) {
            goto LABEL_29;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v94 = *v458;
              *__dsta = *v458;
              id v95 = v94;
              goto LABEL_83;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v146 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v146 - 8) + 16))(__dsta, v458, v146);
LABEL_83:
              swift_storeEnumTagMultiPayload();
              uint64_t v6 = v503;
              uint64_t v142 = v66;
              uint64_t v3 = v500;
              uint64_t v141 = v67;
              break;
            default:
              memcpy(__dsta, v458, *(void *)(v67 + 64));
              uint64_t v141 = v67;
              uint64_t v6 = v503;
              uint64_t v142 = v66;
              uint64_t v3 = v500;
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v141 + 56))(__dsta, 0, 1, v142);
          goto LABEL_85;
        case 4u:
          uint64_t v71 = *v49;
          char *v48 = *v49;
          uint64_t v72 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v458 = (void **)((char *)v49 + v72);
          __dsta = (void **)((char *)v48 + v72);
          uint64_t v73 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v74 = *(void *)(v73 - 8);
          char v75 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v74 + 48);
          id v76 = v71;
          if (v75(v458, 1, v73))
          {
LABEL_29:
            uint64_t v70 = sub_10003B754(&qword_10078C890);
            memcpy(__dsta, v458, *(void *)(*(void *)(v70 - 8) + 64));
            uint64_t v3 = v500;
            uint64_t v6 = v503;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v144 = *v458;
                *__dsta = *v458;
                id v145 = v144;
                goto LABEL_80;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v143 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v143 - 8) + 16))(__dsta, v458, v143);
LABEL_80:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(__dsta, v458, *(void *)(v74 + 64));
                break;
            }
            uint64_t v6 = v503;
            (*(void (**)(void **, void, uint64_t, uint64_t))(v74 + 56))(__dsta, 0, 1, v73);
            uint64_t v3 = v500;
          }
          goto LABEL_85;
        case 5u:
          char *v48 = *v49;
          *((unsigned char *)v48 + 8) = *((unsigned char *)v49 + 8);
          *(_WORD *)((char *)v48 + 9) = *(_WORD *)((char *)v49 + 9);
          uint64_t v77 = v49[2];
          v48[2] = v77;
          id v78 = v77;
          goto LABEL_85;
        case 6u:
          uint64_t v88 = *v49;
          char *v48 = *v49;
          id v89 = v88;
          goto LABEL_85;
        case 7u:
          uint64_t v79 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v80 = *(void *)(v79 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v80 + 48))(v49, 1, v79))
          {
            uint64_t v81 = sub_10003B754(&qword_10078C518);
            memcpy(v48, v49, *(void *)(*(void *)(v81 - 8) + 64));
          }
          else
          {
            char *v48 = *v49;
            uint64_t v96 = *(int *)(v79 + 20);
            v501 = (char *)v48 + v96;
            __dstg = (char *)v49 + v96;
            uint64_t v97 = type metadata accessor for REMHashtagLabelSpecifier();
            v441 = *(void (**)(char *, char *, uint64_t))(*(void *)(v97 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v98 = v97;
            uint64_t v3 = v500;
            v441(v501, __dstg, v98);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v80 + 56))(v48, 0, 1, v79);
          }
          uint64_t v99 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v100 = (void **)((char *)v48 + v99);
          uint64_t v101 = (void **)((char *)v49 + v99);
          uint64_t v102 = v101[1];
          uint64_t v6 = v503;
          if (v102)
          {
            *uint64_t v100 = *v101;
            v100[1] = v102;
            uint64_t v103 = (void *)v101[2];
            v100[2] = v103;
            swift_bridgeObjectRetain();
            id v104 = v103;
          }
          else
          {
            *(_OWORD *)uint64_t v100 = *(_OWORD *)v101;
            v100[2] = v101[2];
          }
          goto LABEL_85;
        case 8u:
          uint64_t v90 = v6;
          uint64_t v91 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v92 = *(void *)(v91 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v92 + 48))(v49, 1, v91))
          {
            uint64_t v93 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v48, v49, *(void *)(*(void *)(v93 - 8) + 64));
          }
          else
          {
            uint64_t v105 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v105 - 8) + 16))(v48, v49, v105);
            *((unsigned char *)v48 + *(int *)(v91 + 20)) = *((unsigned char *)v49 + *(int *)(v91 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v92 + 56))(v48, 0, 1, v91);
          }
          uint64_t v6 = v90;
          uint64_t v106 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)v48 + *(int *)(v106 + 20)) = *(void **)((char *)v49 + *(int *)(v106 + 20));
          goto LABEL_85;
        case 9u:
          *(unsigned char *)uint64_t v48 = *(unsigned char *)v49;
          uint64_t v82 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          char v83 = (char *)v48 + v82;
          unsigned __int8 v84 = v6;
          char v85 = (char *)v49 + v82;
          uint64_t v86 = type metadata accessor for AnyTip();
          uint64_t v87 = v85;
          uint64_t v6 = v84;
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 16))(v83, v87, v86);
LABEL_85:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
          break;
      }
      uint64_t v147 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
      *((unsigned char *)v48 + v147[5]) = *((unsigned char *)v49 + v147[5]);
      uint64_t v148 = v147[6];
      uint64_t v149 = *(void **)((char *)v49 + v148);
      *(void **)((char *)v48 + v148) = v149;
      uint64_t v150 = v147[7];
      uint64_t v151 = *(void **)((char *)v49 + v150);
      *(void **)((char *)v48 + v150) = v151;
      *((unsigned char *)v48 + v147[8]) = *((unsigned char *)v49 + v147[8]);
      uint64_t v152 = v147[9];
      uint64_t v153 = (char *)v48 + v152;
      uint64_t v154 = (char *)v49 + v152;
      *(void *)uint64_t v153 = *(void *)v154;
      v153[8] = v154[8];
      *(void **)((char *)v48 + v147[10]) = *(void **)((char *)v49 + v147[10]);
      uint64_t v155 = v147[11];
      id v156 = *(void **)((char *)v49 + v155);
      *(void **)((char *)v48 + v155) = v156;
      *(void **)((char *)v48 + *(int *)(v50 + 48)) = *(void **)((char *)v49 + *(int *)(v50 + 48));
      uint64_t v157 = (void (*)(void **, void, uint64_t, uint64_t))*((void *)v51 + 7);
      id v158 = v149;
      id v159 = v151;
      swift_bridgeObjectRetain();
      id v160 = v156;
      v157(v48, 0, 1, v50);
    }
    uint64_t v161 = v6[18];
    uint64_t v162 = a1 + v161;
    uint64_t v163 = (uint64_t)v3 + v161;
    *(unsigned char *)uint64_t v162 = *((unsigned char *)v3 + v161);
    *(_OWORD *)(v162 + 8) = *(_OWORD *)((char *)v3 + v161 + 8);
    swift_unknownObjectRetain();
    uint64_t v164 = *(int *)(sub_10003B754(&qword_100794B58) + 40);
    unsigned __int8 v165 = (void **)(v162 + v164);
    uint64_t v166 = (void **)(v163 + v164);
    uint64_t v167 = sub_10003B754(&qword_100794B98);
    uint64_t v168 = *(void **)(v167 - 8);
    if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v168 + 6))(v166, 1, v167))
    {
      uint64_t v169 = sub_10003B754(&qword_100794B90);
      memcpy(v165, v166, *(void *)(*(void *)(v169 - 8) + 64));
    }
    else
    {
      uint64_t v170 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v171 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v223 = *v166;
              *unsigned __int8 v165 = *v166;
              id v224 = v223;
              goto LABEL_119;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v222 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v222 - 8) + 16))(v165, v166, v222);
LABEL_119:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v165, v166, *(void *)(*(void *)(v171 - 8) + 64));
              break;
          }
          v225 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v226 = v225[5];
          uint64_t v227 = (char *)v165 + v226;
          v228 = (char *)v166 + v226;
          uint64_t v229 = *(uint64_t *)((char *)v166 + v226 + 8);
          if (v229)
          {
            *(void *)uint64_t v227 = *(void *)v228;
            *((void *)v227 + 1) = v229;
            uint64_t v230 = (void *)*((void *)v228 + 2);
            uint64_t v231 = *((void *)v228 + 3);
            uint64_t v419 = *((void *)v228 + 4);
            v467 = (void *)*((void *)v228 + 6);
            __dstm = (void *)*((void *)v228 + 5);
            uint64_t v446 = *((void *)v228 + 7);
            unsigned __int8 v432 = v228[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v230, v231, v419, (uint64_t)__dstm, (uint64_t)v467, v446, v432);
            *((void *)v227 + 2) = v230;
            *((void *)v227 + 3) = v231;
            *((void *)v227 + 4) = v419;
            *((void *)v227 + 5) = __dstm;
            *((void *)v227 + 6) = v467;
            *((void *)v227 + 7) = v446;
            v227[64] = v432;
            *(_DWORD *)(v227 + 65) = *(_DWORD *)(v228 + 65);
            int v232 = v228[120];
            if (v232 == 255)
            {
              long long v233 = *(_OWORD *)(v228 + 88);
              *(_OWORD *)(v227 + 72) = *(_OWORD *)(v228 + 72);
              *(_OWORD *)(v227 + 88) = v233;
              *(_OWORD *)(v227 + 104) = *(_OWORD *)(v228 + 104);
              v227[120] = v228[120];
            }
            else
            {
              char v237 = v232 & 1;
              v238 = (void *)*((void *)v228 + 9);
              v468 = (void *)*((void *)v228 + 11);
              __dstn = (void *)*((void *)v228 + 10);
              uint64_t v433 = *((void *)v228 + 13);
              uint64_t v447 = *((void *)v228 + 12);
              uint64_t v420 = *((void *)v228 + 14);
              sub_10003BED8(v238, (uint64_t)__dstn, (uint64_t)v468, v447, v433, v420, v232 & 1);
              *((void *)v227 + 9) = v238;
              *((void *)v227 + 10) = __dstn;
              *((void *)v227 + 11) = v468;
              *((void *)v227 + 12) = v447;
              *((void *)v227 + 13) = v433;
              *((void *)v227 + 14) = v420;
              v227[120] = v237;
            }
            v227[121] = v228[121];
          }
          else
          {
            long long v234 = *((_OWORD *)v228 + 5);
            *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
            *((_OWORD *)v227 + 5) = v234;
            *((_OWORD *)v227 + 6) = *((_OWORD *)v228 + 6);
            *(_OWORD *)(v227 + 106) = *(_OWORD *)(v228 + 106);
            long long v235 = *((_OWORD *)v228 + 1);
            *(_OWORD *)uint64_t v227 = *(_OWORD *)v228;
            *((_OWORD *)v227 + 1) = v235;
            long long v236 = *((_OWORD *)v228 + 3);
            *((_OWORD *)v227 + 2) = *((_OWORD *)v228 + 2);
            *((_OWORD *)v227 + 3) = v236;
          }
          *((unsigned char *)v165 + v225[6]) = *((unsigned char *)v166 + v225[6]);
          *((unsigned char *)v165 + v225[7]) = *((unsigned char *)v166 + v225[7]);
          *((unsigned char *)v165 + v225[8]) = *((unsigned char *)v166 + v225[8]);
          *((unsigned char *)v165 + v225[9]) = *((unsigned char *)v166 + v225[9]);
          *((unsigned char *)v165 + v225[10]) = *((unsigned char *)v166 + v225[10]);
          uint64_t v239 = v225[11];
          uint64_t v240 = *(void **)((char *)v166 + v239);
          *(void **)((char *)v165 + v239) = v240;
          id v241 = v240;
          goto LABEL_138;
        case 1u:
          uint64_t v172 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v243 = *v166;
              *unsigned __int8 v165 = *v166;
              id v244 = v243;
              goto LABEL_130;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v242 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v242 - 8) + 16))(v165, v166, v242);
LABEL_130:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v165, v166, *(void *)(*(void *)(v172 - 8) + 64));
              break;
          }
          uint64_t v245 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v246 = v245[5];
          uint64_t v247 = (char *)v165 + v246;
          v248 = (char *)v166 + v246;
          uint64_t v249 = *(uint64_t *)((char *)v166 + v246 + 8);
          if (v249)
          {
            *(void *)uint64_t v247 = *(void *)v248;
            *((void *)v247 + 1) = v249;
            uint64_t v250 = (void *)*((void *)v248 + 2);
            uint64_t v251 = *((void *)v248 + 3);
            uint64_t v421 = *((void *)v248 + 5);
            uint64_t v434 = *((void *)v248 + 4);
            v469 = (void *)*((void *)v248 + 7);
            __dsto = (void *)*((void *)v248 + 6);
            unsigned __int8 v448 = v248[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v250, v251, v434, v421, (uint64_t)__dsto, (uint64_t)v469, v448);
            *((void *)v247 + 2) = v250;
            *((void *)v247 + 3) = v251;
            *((void *)v247 + 4) = v434;
            *((void *)v247 + 5) = v421;
            *((void *)v247 + 6) = __dsto;
            *((void *)v247 + 7) = v469;
            v247[64] = v448;
            *(_DWORD *)(v247 + 65) = *(_DWORD *)(v248 + 65);
            int v252 = v248[120];
            if (v252 == 255)
            {
              long long v253 = *(_OWORD *)(v248 + 88);
              *(_OWORD *)(v247 + 72) = *(_OWORD *)(v248 + 72);
              *(_OWORD *)(v247 + 88) = v253;
              *(_OWORD *)(v247 + 104) = *(_OWORD *)(v248 + 104);
              v247[120] = v248[120];
            }
            else
            {
              char v257 = v252 & 1;
              uint64_t v258 = (void *)*((void *)v248 + 9);
              v470 = (void *)*((void *)v248 + 11);
              __dstp = (void *)*((void *)v248 + 10);
              uint64_t v435 = *((void *)v248 + 13);
              uint64_t v449 = *((void *)v248 + 12);
              uint64_t v422 = *((void *)v248 + 14);
              sub_10003BED8(v258, (uint64_t)__dstp, (uint64_t)v470, v449, v435, v422, v252 & 1);
              *((void *)v247 + 9) = v258;
              *((void *)v247 + 10) = __dstp;
              *((void *)v247 + 11) = v470;
              *((void *)v247 + 12) = v449;
              *((void *)v247 + 13) = v435;
              *((void *)v247 + 14) = v422;
              v247[120] = v257;
            }
            v247[121] = v248[121];
          }
          else
          {
            long long v254 = *((_OWORD *)v248 + 5);
            *((_OWORD *)v247 + 4) = *((_OWORD *)v248 + 4);
            *((_OWORD *)v247 + 5) = v254;
            *((_OWORD *)v247 + 6) = *((_OWORD *)v248 + 6);
            *(_OWORD *)(v247 + 106) = *(_OWORD *)(v248 + 106);
            long long v255 = *((_OWORD *)v248 + 1);
            *(_OWORD *)uint64_t v247 = *(_OWORD *)v248;
            *((_OWORD *)v247 + 1) = v255;
            long long v256 = *((_OWORD *)v248 + 3);
            *((_OWORD *)v247 + 2) = *((_OWORD *)v248 + 2);
            *((_OWORD *)v247 + 3) = v256;
          }
          *((unsigned char *)v165 + v245[6]) = *((unsigned char *)v166 + v245[6]);
          *((unsigned char *)v165 + v245[7]) = *((unsigned char *)v166 + v245[7]);
          *((unsigned char *)v165 + v245[8]) = *((unsigned char *)v166 + v245[8]);
          *((unsigned char *)v165 + v245[9]) = *((unsigned char *)v166 + v245[9]);
          *((unsigned char *)v165 + v245[10]) = *((unsigned char *)v166 + v245[10]);
          uint64_t v259 = v245[11];
          v260 = *(void **)((char *)v166 + v259);
          *(void **)((char *)v165 + v259) = v260;
          id v261 = v260;
LABEL_138:
          swift_storeEnumTagMultiPayload();
          uint64_t v3 = v500;
          break;
        case 2u:
          v463 = v168;
          uint64_t v173 = *v166;
          *unsigned __int8 v165 = *v166;
          uint64_t v174 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dstb = (void **)((char *)v165 + v174);
          id v175 = (void **)((char *)v166 + v174);
          uint64_t v176 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v177 = *(void *)(v176 - 8);
          char v178 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v177 + 48);
          id v179 = v173;
          if (v178(v175, 1, v176))
          {
            uint64_t v180 = sub_10003B754(&qword_10078C890);
            memcpy(__dstb, v175, *(void *)(*(void *)(v180 - 8) + 64));
            uint64_t v3 = v500;
            uint64_t v168 = v463;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v263 = *v175;
                *__dstb = *v175;
                id v264 = v263;
                goto LABEL_142;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v262 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v262 - 8) + 16))(__dstb, v175, v262);
LABEL_142:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(__dstb, v175, *(void *)(v177 + 64));
                break;
            }
            uint64_t v168 = v463;
            (*(void (**)(void **, void, uint64_t, uint64_t))(v177 + 56))(__dstb, 0, 1, v176);
            uint64_t v3 = v500;
          }
          goto LABEL_153;
        case 3u:
          uint64_t v181 = *v166;
          *unsigned __int8 v165 = *v166;
          uint64_t v182 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v464 = (void **)((char *)v166 + v182);
          __dstc = (void **)((char *)v165 + v182);
          uint64_t v183 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v184 = *(void *)(v183 - 8);
          uint64_t v185 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v184 + 48);
          id v186 = v181;
          int v187 = v464;
          if (v185(v464, 1, v183)) {
            goto LABEL_95;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v209 = *v464;
              *__dstc = *v464;
              id v210 = v209;
              goto LABEL_151;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v269 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v269 - 8) + 16))(__dstc, v464, v269);
LABEL_151:
              swift_storeEnumTagMultiPayload();
              uint64_t v3 = v500;
              uint64_t v265 = v184;
              break;
            default:
              memcpy(__dstc, v464, *(void *)(v184 + 64));
              uint64_t v265 = v184;
              uint64_t v3 = v500;
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v265 + 56))(__dstc, 0, 1, v183);
          goto LABEL_153;
        case 4u:
          v189 = *v166;
          *unsigned __int8 v165 = *v166;
          uint64_t v190 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v465 = (void **)((char *)v166 + v190);
          __dstc = (void **)((char *)v165 + v190);
          uint64_t v191 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v192 = *(void *)(v191 - 8);
          uint64_t v193 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v192 + 48);
          id v194 = v189;
          int v187 = v465;
          if (v193(v465, 1, v191))
          {
LABEL_95:
            uint64_t v188 = sub_10003B754(&qword_10078C890);
            memcpy(__dstc, v187, *(void *)(*(void *)(v188 - 8) + 64));
            uint64_t v3 = v500;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v267 = *v465;
                *__dstc = *v465;
                id v268 = v267;
                goto LABEL_148;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v266 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v266 - 8) + 16))(__dstc, v465, v266);
LABEL_148:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(__dstc, v465, *(void *)(v192 + 64));
                break;
            }
            (*(void (**)(void **, void, uint64_t, uint64_t))(v192 + 56))(__dstc, 0, 1, v191);
            uint64_t v3 = v500;
          }
          goto LABEL_153;
        case 5u:
          *unsigned __int8 v165 = *v166;
          *((unsigned char *)v165 + 8) = *((unsigned char *)v166 + 8);
          *(_WORD *)((char *)v165 + 9) = *(_WORD *)((char *)v166 + 9);
          uint64_t v195 = v166[2];
          v165[2] = v195;
          id v196 = v195;
          goto LABEL_153;
        case 6u:
          v204 = *v166;
          *unsigned __int8 v165 = *v166;
          id v205 = v204;
          goto LABEL_153;
        case 7u:
          uint64_t v197 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v198 = *(void *)(v197 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v198 + 48))(v166, 1, v197))
          {
            uint64_t v199 = sub_10003B754(&qword_10078C518);
            memcpy(v165, v166, *(void *)(*(void *)(v199 - 8) + 64));
          }
          else
          {
            *unsigned __int8 v165 = *v166;
            uint64_t v211 = *(int *)(v197 + 20);
            v466 = (char *)v166 + v211;
            __dstl = (char *)v165 + v211;
            uint64_t v212 = type metadata accessor for REMHashtagLabelSpecifier();
            v431 = *(void (**)(char *, char *, uint64_t))(*(void *)(v212 - 8) + 16);
            swift_bridgeObjectRetain();
            uint64_t v213 = v212;
            uint64_t v3 = v500;
            v431(__dstl, v466, v213);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v198 + 56))(v165, 0, 1, v197);
          }
          uint64_t v214 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v215 = (void **)((char *)v165 + v214);
          v216 = (void **)((char *)v166 + v214);
          uint64_t v217 = v216[1];
          if (v217)
          {
            *uint64_t v215 = *v216;
            v215[1] = v217;
            uint64_t v218 = (void *)v216[2];
            v215[2] = v218;
            swift_bridgeObjectRetain();
            id v219 = v218;
          }
          else
          {
            *(_OWORD *)uint64_t v215 = *(_OWORD *)v216;
            v215[2] = v216[2];
          }
          goto LABEL_153;
        case 8u:
          uint64_t v206 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v207 = *(void *)(v206 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v207 + 48))(v166, 1, v206))
          {
            uint64_t v208 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v165, v166, *(void *)(*(void *)(v208 - 8) + 64));
          }
          else
          {
            uint64_t v220 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v220 - 8) + 16))(v165, v166, v220);
            *((unsigned char *)v165 + *(int *)(v206 + 20)) = *((unsigned char *)v166 + *(int *)(v206 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v207 + 56))(v165, 0, 1, v206);
          }
          uint64_t v221 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)v165 + *(int *)(v221 + 20)) = *(void **)((char *)v166 + *(int *)(v221 + 20));
          goto LABEL_153;
        case 9u:
          *(unsigned char *)unsigned __int8 v165 = *(unsigned char *)v166;
          uint64_t v200 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v201 = (char *)v165 + v200;
          uint64_t v202 = (char *)v166 + v200;
          uint64_t v203 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v203 - 8) + 16))(v201, v202, v203);
LABEL_153:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v165, v166, *(void *)(*(void *)(v170 - 8) + 64));
          break;
      }
      v270 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
      *((unsigned char *)v165 + v270[5]) = *((unsigned char *)v166 + v270[5]);
      uint64_t v271 = v270[6];
      v272 = *(void **)((char *)v166 + v271);
      *(void **)((char *)v165 + v271) = v272;
      *(void **)((char *)v165 + v270[7]) = *(void **)((char *)v166 + v270[7]);
      *(void **)((char *)v165 + v270[8]) = *(void **)((char *)v166 + v270[8]);
      *((unsigned char *)v165 + v270[9]) = *((unsigned char *)v166 + v270[9]);
      *(void **)((char *)v165 + *(int *)(v167 + 48)) = *(void **)((char *)v166 + *(int *)(v167 + 48));
      v273 = (void (*)(void **, void, uint64_t, uint64_t))*((void *)v168 + 7);
      id v274 = v272;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v273(v165, 0, 1, v167);
      uint64_t v6 = v503;
    }
    uint64_t v275 = v6[19];
    uint64_t v276 = v6[20];
    v277 = *(void **)((char *)v3 + v275);
    *(void *)(a1 + v275) = v277;
    v278 = (void *)(a1 + v276);
    v279 = (uint64_t *)((char *)v3 + v276);
    uint64_t v280 = v279[1];
    void *v278 = *v279;
    v278[1] = v280;
    uint64_t v281 = v6[22];
    *(unsigned char *)(a1 + v6[21]) = *((unsigned char *)v3 + v6[21]);
    v282 = (void *)(a1 + v281);
    v283 = (uint64_t *)((char *)v3 + v281);
    uint64_t v284 = v283[1];
    void *v282 = *v283;
    v282[1] = v284;
    uint64_t v285 = v6[23];
    uint64_t v286 = v6[24];
    v287 = (void *)(a1 + v285);
    v288 = (uint64_t *)((char *)v3 + v285);
    uint64_t v289 = v288[1];
    void *v287 = *v288;
    v287[1] = v289;
    uint64_t v290 = a1;
    v291 = *(void **)((char *)v3 + v286);
    *(void *)(v290 + v286) = v291;
    uint64_t v292 = v6[26];
    *(void *)(v290 + v6[25]) = *(uint64_t *)((char *)v3 + v6[25]);
    uint64_t v502 = v290;
    v293 = (void *)(v290 + v292);
    uint64_t v294 = (uint64_t)v3 + v292;
    v296 = *(void **)v294;
    uint64_t v295 = *(void *)(v294 + 8);
    void *v293 = *(void *)v294;
    v293[1] = v295;
    v293[2] = *(void *)(v294 + 16);
    __dstd = *(void **)(v294 + 24);
    id v297 = v277;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v298 = v291;
    swift_bridgeObjectRetain();
    id v299 = v296;
    swift_bridgeObjectRetain();
    if (__dstd)
    {
      uint64_t v300 = *(void *)(v294 + 32);
      v293[3] = __dstd;
      v293[4] = v300;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v293 + 3) = *(_OWORD *)(v294 + 24);
    }
    uint64_t v21 = v502;
    uint64_t v301 = v503[27];
    v302 = (void *)(v502 + v301);
    v303 = (uint64_t *)((char *)v500 + v301);
    v304 = *(void **)((char *)v500 + v301);
    uint64_t v305 = v303[1];
    void *v302 = v304;
    v302[1] = v305;
    v302[2] = v303[2];
    uint64_t v306 = v303[3];
    id v307 = v304;
    swift_bridgeObjectRetain();
    if (v306)
    {
      uint64_t v308 = v303[4];
      v302[3] = v306;
      v302[4] = v308;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(v302 + 3) = *(_OWORD *)(v303 + 3);
    }
    uint64_t v309 = v503[28];
    uint64_t v310 = v502 + v309;
    uint64_t v311 = (uint64_t)v500 + v309;
    *(_OWORD *)(v502 + v309) = *(_OWORD *)((char *)v500 + v309);
    swift_unknownObjectRetain();
    uint64_t v312 = sub_10003B754(&qword_100794B50);
    uint64_t v313 = *(int *)(v312 + 28);
    v314 = (void **)(v310 + v313);
    v315 = (void **)(v311 + v313);
    uint64_t v316 = sub_10003B754(&qword_100794B68);
    v317 = *(void **)(v316 - 8);
    if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v317 + 6))(v315, 1, v316))
    {
      uint64_t v318 = sub_10003B754(&qword_1007A2550);
      memcpy(v314, v315, *(void *)(*(void *)(v318 - 8) + 64));
    }
    else
    {
      uint64_t v319 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v320 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v504 = v312;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v368 = *v315;
              *v314 = *v315;
              id v369 = v368;
              goto LABEL_193;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v367 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v367 - 8) + 16))(v314, v315, v367);
LABEL_193:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v314, v315, *(void *)(*(void *)(v320 - 8) + 64));
              break;
          }
          v370 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v371 = v370[5];
          v372 = (char *)v314 + v371;
          v373 = (char *)v315 + v371;
          uint64_t v374 = *(uint64_t *)((char *)v315 + v371 + 8);
          if (!v374) {
            goto LABEL_207;
          }
          *(void *)v372 = *(void *)v373;
          *((void *)v372 + 1) = v374;
          v375 = (void *)*((void *)v373 + 2);
          v474 = (void *)*((void *)v373 + 4);
          __dstr = (void *)*((void *)v373 + 3);
          uint64_t v437 = *((void *)v373 + 6);
          uint64_t v453 = *((void *)v373 + 5);
          uint64_t v423 = *((void *)v373 + 7);
          unsigned __int8 v411 = v373[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v375, (uint64_t)__dstr, (uint64_t)v474, v453, v437, v423, v411);
          *((void *)v372 + 2) = v375;
          *((void *)v372 + 3) = __dstr;
          *((void *)v372 + 4) = v474;
          *((void *)v372 + 5) = v453;
          *((void *)v372 + 6) = v437;
          *((void *)v372 + 7) = v423;
          v372[64] = v411;
          *(_DWORD *)(v372 + 65) = *(_DWORD *)(v373 + 65);
          int v376 = v373[120];
          if (v376 == 255)
          {
            long long v377 = *(_OWORD *)(v373 + 88);
            *(_OWORD *)(v372 + 72) = *(_OWORD *)(v373 + 72);
            *(_OWORD *)(v372 + 88) = v377;
            *(_OWORD *)(v372 + 104) = *(_OWORD *)(v373 + 104);
            v372[120] = v373[120];
          }
          else
          {
            char v378 = v376 & 1;
            v475 = (void *)*((void *)v373 + 10);
            __dsts = (void *)*((void *)v373 + 9);
            uint64_t v438 = *((void *)v373 + 12);
            uint64_t v454 = *((void *)v373 + 11);
            uint64_t v412 = *((void *)v373 + 14);
            uint64_t v424 = *((void *)v373 + 13);
            sub_10003BED8(__dsts, (uint64_t)v475, v454, v438, v424, v412, v376 & 1);
            *((void *)v372 + 9) = __dsts;
            *((void *)v372 + 10) = v475;
            *((void *)v372 + 11) = v454;
            *((void *)v372 + 12) = v438;
            *((void *)v372 + 13) = v424;
            *((void *)v372 + 14) = v412;
            v372[120] = v378;
          }
          v372[121] = v373[121];
          goto LABEL_210;
        case 1u:
          uint64_t v321 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v504 = v312;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v380 = *v315;
              *v314 = *v315;
              id v381 = v380;
              goto LABEL_203;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v379 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v379 - 8) + 16))(v314, v315, v379);
LABEL_203:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v314, v315, *(void *)(*(void *)(v321 - 8) + 64));
              break;
          }
          v370 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v382 = v370[5];
          v372 = (char *)v314 + v382;
          v373 = (char *)v315 + v382;
          uint64_t v383 = *(uint64_t *)((char *)v315 + v382 + 8);
          if (v383)
          {
            *(void *)v372 = *(void *)v373;
            *((void *)v372 + 1) = v383;
            v384 = (void *)*((void *)v373 + 2);
            v476 = (void *)*((void *)v373 + 4);
            __dstt = (void *)*((void *)v373 + 3);
            uint64_t v439 = *((void *)v373 + 6);
            uint64_t v455 = *((void *)v373 + 5);
            uint64_t v425 = *((void *)v373 + 7);
            unsigned __int8 v413 = v373[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v384, (uint64_t)__dstt, (uint64_t)v476, v455, v439, v425, v413);
            *((void *)v372 + 2) = v384;
            *((void *)v372 + 3) = __dstt;
            *((void *)v372 + 4) = v476;
            *((void *)v372 + 5) = v455;
            *((void *)v372 + 6) = v439;
            *((void *)v372 + 7) = v425;
            v372[64] = v413;
            *(_DWORD *)(v372 + 65) = *(_DWORD *)(v373 + 65);
            int v385 = v373[120];
            if (v385 == 255)
            {
              long long v386 = *(_OWORD *)(v373 + 88);
              *(_OWORD *)(v372 + 72) = *(_OWORD *)(v373 + 72);
              *(_OWORD *)(v372 + 88) = v386;
              *(_OWORD *)(v372 + 104) = *(_OWORD *)(v373 + 104);
              v372[120] = v373[120];
            }
            else
            {
              char v390 = v385 & 1;
              v477 = (void *)*((void *)v373 + 10);
              __dstu = (void *)*((void *)v373 + 9);
              uint64_t v440 = *((void *)v373 + 12);
              uint64_t v456 = *((void *)v373 + 11);
              uint64_t v414 = *((void *)v373 + 14);
              uint64_t v426 = *((void *)v373 + 13);
              sub_10003BED8(__dstu, (uint64_t)v477, v456, v440, v426, v414, v385 & 1);
              *((void *)v372 + 9) = __dstu;
              *((void *)v372 + 10) = v477;
              *((void *)v372 + 11) = v456;
              *((void *)v372 + 12) = v440;
              *((void *)v372 + 13) = v426;
              *((void *)v372 + 14) = v414;
              v372[120] = v390;
            }
            v372[121] = v373[121];
          }
          else
          {
LABEL_207:
            long long v387 = *((_OWORD *)v373 + 5);
            *((_OWORD *)v372 + 4) = *((_OWORD *)v373 + 4);
            *((_OWORD *)v372 + 5) = v387;
            *((_OWORD *)v372 + 6) = *((_OWORD *)v373 + 6);
            *(_OWORD *)(v372 + 106) = *(_OWORD *)(v373 + 106);
            long long v388 = *((_OWORD *)v373 + 1);
            *(_OWORD *)v372 = *(_OWORD *)v373;
            *((_OWORD *)v372 + 1) = v388;
            long long v389 = *((_OWORD *)v373 + 3);
            *((_OWORD *)v372 + 2) = *((_OWORD *)v373 + 2);
            *((_OWORD *)v372 + 3) = v389;
          }
LABEL_210:
          *((unsigned char *)v314 + v370[6]) = *((unsigned char *)v315 + v370[6]);
          *((unsigned char *)v314 + v370[7]) = *((unsigned char *)v315 + v370[7]);
          *((unsigned char *)v314 + v370[8]) = *((unsigned char *)v315 + v370[8]);
          *((unsigned char *)v314 + v370[9]) = *((unsigned char *)v315 + v370[9]);
          *((unsigned char *)v314 + v370[10]) = *((unsigned char *)v315 + v370[10]);
          uint64_t v391 = v370[11];
          v392 = *(void **)((char *)v315 + v391);
          *(void **)((char *)v314 + v391) = v392;
          id v393 = v392;
          swift_storeEnumTagMultiPayload();
          uint64_t v312 = v504;
          break;
        case 2u:
          uint64_t v505 = v312;
          v322 = *v315;
          *v314 = *v315;
          uint64_t v323 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v471 = (void **)((char *)v315 + v323);
          __dste = (void **)((char *)v314 + v323);
          uint64_t v324 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v450 = *(void *)(v324 - 8);
          v325 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v450 + 48);
          id v326 = v322;
          if (v325(v471, 1, v324)) {
            goto LABEL_169;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v395 = *v471;
              *__dste = *v471;
              id v396 = v395;
              goto LABEL_214;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v394 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v394 - 8) + 16))(__dste, v471, v394);
LABEL_214:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dste, v471, *(void *)(v450 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v450 + 56))(__dste, 0, 1, v324);
          goto LABEL_226;
        case 3u:
          uint64_t v505 = v312;
          v327 = *v315;
          *v314 = *v315;
          uint64_t v328 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v471 = (void **)((char *)v315 + v328);
          __dste = (void **)((char *)v314 + v328);
          uint64_t v329 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v451 = *(void *)(v329 - 8);
          v330 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v451 + 48);
          id v331 = v327;
          if (v330(v471, 1, v329))
          {
LABEL_169:
            uint64_t v332 = sub_10003B754(&qword_10078C890);
            memcpy(__dste, v471, *(void *)(*(void *)(v332 - 8) + 64));
            uint64_t v312 = v505;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v355 = *v471;
                *__dste = *v471;
                id v356 = v355;
                goto LABEL_224;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v402 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v402 - 8) + 16))(__dste, v471, v402);
LABEL_224:
                swift_storeEnumTagMultiPayload();
                uint64_t v398 = v329;
                uint64_t v397 = v451;
                break;
              default:
                memcpy(__dste, v471, *(void *)(v451 + 64));
                uint64_t v397 = v451;
                uint64_t v398 = v329;
                break;
            }
            (*(void (**)(void **, void, uint64_t, uint64_t))(v397 + 56))(__dste, 0, 1, v398);
          }
          goto LABEL_226;
        case 4u:
          __dstf = v317;
          v333 = *v315;
          *v314 = *v315;
          uint64_t v334 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v452 = (void **)((char *)v315 + v334);
          v472 = (void **)((char *)v314 + v334);
          uint64_t v335 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v336 = *(void *)(v335 - 8);
          v337 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v336 + 48);
          id v338 = v333;
          if (v337(v452, 1, v335))
          {
            uint64_t v339 = sub_10003B754(&qword_10078C890);
            memcpy(v472, v452, *(void *)(*(void *)(v339 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v400 = *v452;
                *v472 = *v452;
                id v401 = v400;
                goto LABEL_220;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v399 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v399 - 8) + 16))(v472, v452, v399);
LABEL_220:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v472, v452, *(void *)(v336 + 64));
                break;
            }
            (*(void (**)(void **, void, uint64_t, uint64_t))(v336 + 56))(v472, 0, 1, v335);
          }
          v317 = __dstf;
          goto LABEL_226;
        case 5u:
          *v314 = *v315;
          *((unsigned char *)v314 + 8) = *((unsigned char *)v315 + 8);
          *(_WORD *)((char *)v314 + 9) = *(_WORD *)((char *)v315 + 9);
          v340 = v315[2];
          v314[2] = v340;
          id v341 = v340;
          goto LABEL_226;
        case 6u:
          v349 = *v315;
          *v314 = *v315;
          id v350 = v349;
          goto LABEL_226;
        case 7u:
          uint64_t v506 = v312;
          uint64_t v342 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v343 = *(void *)(v342 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v343 + 48))(v315, 1, v342))
          {
            uint64_t v344 = sub_10003B754(&qword_10078C518);
            memcpy(v314, v315, *(void *)(*(void *)(v344 - 8) + 64));
          }
          else
          {
            *v314 = *v315;
            uint64_t v357 = *(int *)(v342 + 20);
            v473 = (char *)v315 + v357;
            __dstq = (char *)v314 + v357;
            uint64_t v358 = type metadata accessor for REMHashtagLabelSpecifier();
            v436 = *(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16);
            swift_bridgeObjectRetain();
            v436(__dstq, v473, v358);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v343 + 56))(v314, 0, 1, v342);
          }
          uint64_t v359 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          v360 = (void **)((char *)v314 + v359);
          v361 = (void **)((char *)v315 + v359);
          uint64_t v362 = v361[1];
          uint64_t v312 = v506;
          if (v362)
          {
            void *v360 = *v361;
            v360[1] = v362;
            v363 = (void *)v361[2];
            v360[2] = v363;
            swift_bridgeObjectRetain();
            id v364 = v363;
          }
          else
          {
            *(_OWORD *)v360 = *(_OWORD *)v361;
            v360[2] = v361[2];
          }
          goto LABEL_226;
        case 8u:
          uint64_t v351 = v312;
          uint64_t v352 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v353 = *(void *)(v352 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v353 + 48))(v315, 1, v352))
          {
            uint64_t v354 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v314, v315, *(void *)(*(void *)(v354 - 8) + 64));
          }
          else
          {
            uint64_t v365 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v365 - 8) + 16))(v314, v315, v365);
            *((unsigned char *)v314 + *(int *)(v352 + 20)) = *((unsigned char *)v315 + *(int *)(v352 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v353 + 56))(v314, 0, 1, v352);
          }
          uint64_t v312 = v351;
          uint64_t v366 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)v314 + *(int *)(v366 + 20)) = *(void **)((char *)v315 + *(int *)(v366 + 20));
          goto LABEL_226;
        case 9u:
          *(unsigned char *)v314 = *(unsigned char *)v315;
          uint64_t v345 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          v346 = (char *)v314 + v345;
          v347 = (char *)v315 + v345;
          uint64_t v348 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v348 - 8) + 16))(v346, v347, v348);
LABEL_226:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v314, v315, *(void *)(*(void *)(v319 - 8) + 64));
          break;
      }
      v403 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
      *((unsigned char *)v314 + v403[5]) = *((unsigned char *)v315 + v403[5]);
      uint64_t v404 = v403[6];
      v405 = (void **)((char *)v314 + v404);
      v406 = (uint64_t *)((char *)v315 + v404);
      uint64_t v408 = *v406;
      uint64_t v407 = v406[1];
      void *v405 = v408;
      v405[1] = v407;
      *(void **)((char *)v314 + v403[7]) = *(void **)((char *)v315 + v403[7]);
      *(void **)((char *)v314 + *(int *)(v316 + 48)) = *(void **)((char *)v315 + *(int *)(v316 + 48));
      v409 = (void (*)(void **, void, uint64_t, uint64_t))*((void *)v317 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v409(v314, 0, 1, v316);
      uint64_t v21 = v502;
    }
    *(unsigned char *)(v310 + *(int *)(v312 + 32)) = *(unsigned char *)(v311 + *(int *)(v312 + 32));
  }
  return v21;
}

uint64_t sub_1005BE100(uint64_t a1, int *a2)
{
  if (*(void *)(a1 + 64)) {
    swift_release();
  }

  if (*(void *)(a1 + 128)) {
    swift_release();
  }
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 168)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 200)) {
    swift_release();
  }

  if (*(void *)(a1 + 240)) {
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 264)) {
    swift_release();
  }
  uint64_t v4 = a1 + a2[17];
  swift_unknownObjectRelease();
  uint64_t v5 = v4 + *(int *)(sub_10003B754(&qword_100794B60) + 28);
  uint64_t v6 = sub_10003B754(&qword_100794BB0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_17;
          default:
            goto LABEL_36;
        }
        goto LABEL_36;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_35:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_17:
            uint64_t v7 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5, v7);
            break;
          default:
            break;
        }
LABEL_36:
        uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v21 = v5 + *(int *)(v20 + 20);
        if (*(void *)(v21 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v21 + 16), *(void *)(v21 + 24), *(void *)(v21 + 32), *(void *)(v21 + 40), *(void *)(v21 + 48), *(void *)(v21 + 56), *(unsigned char *)(v21 + 64));
          int v22 = *(unsigned __int8 *)(v21 + 120);
          if (v22 != 255) {
            sub_10003B9C0(*(void **)(v21 + 72), *(void *)(v21 + 80), *(void *)(v21 + 88), *(void *)(v21 + 96), *(void *)(v21 + 104), *(void *)(v21 + 112), v22 & 1);
          }
        }
        id v13 = *(id *)(v5 + *(int *)(v20 + 44));
        goto LABEL_40;
      case 2u:

        uint64_t v8 = (id *)(v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_106;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 3u:

        uint64_t v8 = (id *)(v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_106;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_24;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 4u:

        uint64_t v8 = (id *)(v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v8, 1, v11))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_106:
              id v13 = *v8;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_24:
              uint64_t v12 = type metadata accessor for Date();
              goto LABEL_34;
            default:
              goto LABEL_41;
          }
        }
        goto LABEL_41;
      case 5u:
        id v13 = *(id *)(v5 + 16);
        goto LABEL_40;
      case 6u:
        id v13 = *(id *)v5;
        goto LABEL_40;
      case 7u:
        uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14))
        {
          swift_bridgeObjectRelease();
          uint64_t v15 = v5 + *(int *)(v14 + 20);
          uint64_t v16 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
        }
        uint64_t v17 = v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(v17 + 8)) {
          goto LABEL_41;
        }
        swift_bridgeObjectRelease();
        id v13 = *(id *)(v17 + 16);
LABEL_40:

LABEL_41:
        uint64_t v23 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();

        swift_bridgeObjectRelease();
        break;
      case 8u:
        uint64_t v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v5, 1, v18))
        {
          uint64_t v19 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v5, v19);
        }
        goto LABEL_41;
      case 9u:
        uint64_t v8 = (id *)(v5 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
        uint64_t v12 = type metadata accessor for AnyTip();
LABEL_34:
        (*(void (**)(id *, uint64_t))(*(void *)(v12 - 8) + 8))(v8, v12);
        goto LABEL_41;
      default:
        goto LABEL_41;
    }
  }
  uint64_t v24 = a1 + a2[18];
  swift_unknownObjectRelease();
  uint64_t v25 = v24 + *(int *)(sub_10003B754(&qword_100794B58) + 40);
  uint64_t v26 = sub_10003B754(&qword_100794B98);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v25, 1, v26))
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_46;
          default:
            goto LABEL_65;
        }
        goto LABEL_65;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_64:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_46:
            uint64_t v27 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v25, v27);
            break;
          default:
            break;
        }
LABEL_65:
        uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v41 = v25 + *(int *)(v40 + 20);
        if (*(void *)(v41 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v41 + 16), *(void *)(v41 + 24), *(void *)(v41 + 32), *(void *)(v41 + 40), *(void *)(v41 + 48), *(void *)(v41 + 56), *(unsigned char *)(v41 + 64));
          int v42 = *(unsigned __int8 *)(v41 + 120);
          if (v42 != 255) {
            sub_10003B9C0(*(void **)(v41 + 72), *(void *)(v41 + 80), *(void *)(v41 + 88), *(void *)(v41 + 96), *(void *)(v41 + 104), *(void *)(v41 + 112), v42 & 1);
          }
        }
        id v33 = *(id *)(v25 + *(int *)(v40 + 44));
        goto LABEL_69;
      case 2u:

        id v28 = (id *)(v25 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_107;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 3u:

        id v28 = (id *)(v25 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v28, 1, v30))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_107;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_53;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 4u:

        id v28 = (id *)(v25 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v28, 1, v31))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_107:
              id v33 = *v28;
              goto LABEL_69;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_53:
              uint64_t v32 = type metadata accessor for Date();
              goto LABEL_63;
            default:
              goto LABEL_70;
          }
        }
        goto LABEL_70;
      case 5u:
        id v33 = *(id *)(v25 + 16);
        goto LABEL_69;
      case 6u:
        id v33 = *(id *)v25;
        goto LABEL_69;
      case 7u:
        uint64_t v34 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v25, 1, v34))
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = v25 + *(int *)(v34 + 20);
          uint64_t v36 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
        }
        uint64_t v37 = v25 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(v37 + 8)) {
          goto LABEL_70;
        }
        swift_bridgeObjectRelease();
        id v33 = *(id *)(v37 + 16);
LABEL_69:

LABEL_70:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 8u:
        uint64_t v38 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v25, 1, v38))
        {
          uint64_t v39 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v25, v39);
        }
        goto LABEL_70;
      case 9u:
        id v28 = (id *)(v25 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
        uint64_t v32 = type metadata accessor for AnyTip();
LABEL_63:
        (*(void (**)(id *, uint64_t))(*(void *)(v32 - 8) + 8))(v28, v32);
        goto LABEL_70;
      default:
        goto LABEL_70;
    }
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v43 = a1 + a2[26];

  swift_bridgeObjectRelease();
  if (*(void *)(v43 + 24)) {
    swift_release();
  }
  uint64_t v44 = a1 + a2[27];

  swift_bridgeObjectRelease();
  if (*(void *)(v44 + 24)) {
    swift_release();
  }
  uint64_t v45 = a1 + a2[28];
  swift_unknownObjectRelease();
  uint64_t v46 = v45 + *(int *)(sub_10003B754(&qword_100794B50) + 28);
  uint64_t v47 = sub_10003B754(&qword_100794B68);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47);
  if (!result)
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_97;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_79;
          default:
            goto LABEL_98;
        }
        goto LABEL_98;
      case 1u:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_97:

            break;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_79:
            uint64_t v49 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 - 8) + 8))(v46, v49);
            break;
          default:
            break;
        }
LABEL_98:
        uint64_t v62 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v63 = v46 + *(int *)(v62 + 20);
        if (*(void *)(v63 + 8))
        {
          swift_bridgeObjectRelease();
          sub_1000510EC(*(void **)(v63 + 16), *(void *)(v63 + 24), *(void *)(v63 + 32), *(void *)(v63 + 40), *(void *)(v63 + 48), *(void *)(v63 + 56), *(unsigned char *)(v63 + 64));
          int v64 = *(unsigned __int8 *)(v63 + 120);
          if (v64 != 255) {
            sub_10003B9C0(*(void **)(v63 + 72), *(void *)(v63 + 80), *(void *)(v63 + 88), *(void *)(v63 + 96), *(void *)(v63 + 104), *(void *)(v63 + 112), v64 & 1);
          }
        }
        id v55 = *(id *)(v46 + *(int *)(v62 + 44));
        goto LABEL_102;
      case 2u:

        uint64_t v50 = (id *)(v46 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v50, 1, v51))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_108;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 3u:

        uint64_t v50 = (id *)(v46 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v52 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v52 - 8) + 48))(v50, 1, v52))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_108;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              goto LABEL_86;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 4u:

        uint64_t v50 = (id *)(v46 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v53 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 48))(v50, 1, v53))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
LABEL_108:
              id v55 = *v50;
              goto LABEL_102;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_86:
              uint64_t v54 = type metadata accessor for Date();
              goto LABEL_96;
            default:
              goto LABEL_103;
          }
        }
        goto LABEL_103;
      case 5u:
        id v55 = *(id *)(v46 + 16);
        goto LABEL_102;
      case 6u:
        id v55 = *(id *)v46;
        goto LABEL_102;
      case 7u:
        uint64_t v56 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v46, 1, v56))
        {
          swift_bridgeObjectRelease();
          uint64_t v57 = v46 + *(int *)(v56 + 20);
          uint64_t v58 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v57, v58);
        }
        uint64_t v59 = v46 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        if (!*(void *)(v59 + 8)) {
          goto LABEL_103;
        }
        swift_bridgeObjectRelease();
        id v55 = *(id *)(v59 + 16);
LABEL_102:

LABEL_103:
        type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        break;
      case 8u:
        uint64_t v60 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 48))(v46, 1, v60))
        {
          uint64_t v61 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 - 8) + 8))(v46, v61);
        }
        goto LABEL_103;
      case 9u:
        uint64_t v50 = (id *)(v46 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
        uint64_t v54 = type metadata accessor for AnyTip();
LABEL_96:
        (*(void (**)(id *, uint64_t))(*(void *)(v54 - 8) + 8))(v50, v54);
        goto LABEL_103;
      default:
        goto LABEL_103;
    }
  }
  return result;
}

uint64_t sub_1005BF530(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4 = a2;
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v6 = *(void **)(a2 + 8);
  uint64_t v7 = *(void **)(a2 + 16);
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = v7;
  uint64_t v8 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v9 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v9;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v10 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v10;
  uint64_t v12 = (_OWORD *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 64);
  id v13 = v6;
  id v14 = v7;
  id v15 = v8;
  id v16 = v9;
  id v17 = v10;
  if (v11)
  {
    uint64_t v18 = *(void *)(v4 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v18;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v12;
  }
  uint64_t v19 = *(void *)(v4 + 128);
  uint64_t v20 = *(void **)(v4 + 80);
  uint64_t v21 = *(void **)(v4 + 88);
  *(void *)(a1 + 80) = v20;
  *(void *)(a1 + 88) = v21;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(v4 + 96);
  *(void *)(a1 + 104) = *(void *)(v4 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(v4 + 112);
  int v22 = *(void **)(v4 + 120);
  *(void *)(a1 + 120) = v22;
  id v23 = v20;
  id v24 = v21;
  id v25 = v22;
  if (v19)
  {
    uint64_t v26 = *(void *)(v4 + 136);
    *(void *)(a1 + 128) = v19;
    *(void *)(a1 + 136) = v26;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(v4 + 128);
  }
  uint64_t v27 = *(void *)(v4 + 168);
  uint64_t v28 = *(void *)(v4 + 152);
  *(void *)(a1 + 144) = *(void *)(v4 + 144);
  *(void *)(a1 + 152) = v28;
  uint64_t v29 = *(void **)(v4 + 160);
  *(void *)(a1 + 160) = v29;
  swift_bridgeObjectRetain();
  id v30 = v29;
  if (v27)
  {
    uint64_t v31 = *(void *)(v4 + 176);
    *(void *)(a1 + 168) = v27;
    *(void *)(a1 + 176) = v31;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(v4 + 168);
  }
  uint64_t v32 = *(void *)(v4 + 200);
  uint64_t v33 = *(void *)(v4 + 192);
  *(void *)(a1 + 184) = *(void *)(v4 + 184);
  *(void *)(a1 + 192) = v33;
  swift_bridgeObjectRetain();
  if (v32)
  {
    uint64_t v34 = *(void *)(v4 + 208);
    *(void *)(a1 + 200) = v32;
    *(void *)(a1 + 208) = v34;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(v4 + 200);
  }
  uint64_t v35 = *(void *)(v4 + 240);
  *(_WORD *)(a1 + 216) = *(_WORD *)(v4 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(v4 + 224);
  uint64_t v36 = *(void **)(v4 + 232);
  *(void *)(a1 + 232) = v36;
  id v37 = v36;
  if (v35)
  {
    uint64_t v38 = *(void *)(v4 + 248);
    *(void *)(a1 + 240) = v35;
    *(void *)(a1 + 248) = v38;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(v4 + 240);
  }
  uint64_t v39 = *(void *)(v4 + 264);
  *(void *)(a1 + 256) = *(void *)(v4 + 256);
  swift_bridgeObjectRetain();
  if (v39)
  {
    uint64_t v40 = *(void *)(v4 + 272);
    *(void *)(a1 + 264) = v39;
    *(void *)(a1 + 272) = v40;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(v4 + 264);
  }
  uint64_t v41 = a3[17];
  uint64_t v42 = a1 + v41;
  uint64_t v43 = v4 + v41;
  *(_OWORD *)(a1 + v41) = *(_OWORD *)(v4 + v41);
  swift_unknownObjectRetain();
  uint64_t v44 = *(int *)(sub_10003B754(&qword_100794B60) + 28);
  uint64_t v45 = (void **)(v42 + v44);
  uint64_t v46 = (void **)(v43 + v44);
  uint64_t v47 = sub_10003B754(&qword_100794BB0);
  uint64_t v48 = *(void **)(v47 - 8);
  uint64_t v502 = v4;
  v507 = a3;
  if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v48 + 6))(v46, 1, v47))
  {
    uint64_t v49 = sub_10003B754(&qword_100794BA8);
    memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    uint64_t v50 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v105 = *v46;
            *uint64_t v45 = *v46;
            id v106 = v105;
            goto LABEL_51;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v104 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(v45, v46, v104);
LABEL_51:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
            break;
        }
        uint64_t v107 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v108 = v107[5];
        id v109 = (char *)v45 + v108;
        uint64_t v110 = (char *)v46 + v108;
        uint64_t v111 = *(uint64_t *)((char *)v46 + v108 + 8);
        if (!v111) {
          goto LABEL_65;
        }
        *(void *)id v109 = *(void *)v110;
        *((void *)v109 + 1) = v111;
        uint64_t v112 = (void *)*((void *)v110 + 2);
        uint64_t v113 = *((void *)v110 + 3);
        uint64_t v415 = *((void *)v110 + 5);
        uint64_t v427 = *((void *)v110 + 4);
        v459 = (void *)*((void *)v110 + 7);
        __dsth = (void *)*((void *)v110 + 6);
        unsigned __int8 v442 = v110[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v112, v113, v427, v415, (uint64_t)__dsth, (uint64_t)v459, v442);
        *((void *)v109 + 2) = v112;
        *((void *)v109 + 3) = v113;
        *((void *)v109 + 4) = v427;
        *((void *)v109 + 5) = v415;
        *((void *)v109 + 6) = __dsth;
        *((void *)v109 + 7) = v459;
        v109[64] = v442;
        *(_DWORD *)(v109 + 65) = *(_DWORD *)(v110 + 65);
        int v114 = v110[120];
        if (v114 == 255)
        {
          long long v115 = *(_OWORD *)(v110 + 88);
          *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
          *(_OWORD *)(v109 + 88) = v115;
          *(_OWORD *)(v109 + 104) = *(_OWORD *)(v110 + 104);
          v109[120] = v110[120];
        }
        else
        {
          char v116 = v114 & 1;
          int v117 = (void *)*((void *)v110 + 9);
          v460 = (void *)*((void *)v110 + 11);
          __dstuint64_t i = (void *)*((void *)v110 + 10);
          uint64_t v428 = *((void *)v110 + 13);
          uint64_t v443 = *((void *)v110 + 12);
          uint64_t v416 = *((void *)v110 + 14);
          sub_10003BED8(v117, (uint64_t)__dsti, (uint64_t)v460, v443, v428, v416, v114 & 1);
          *((void *)v109 + 9) = v117;
          *((void *)v109 + 10) = __dsti;
          *((void *)v109 + 11) = v460;
          *((void *)v109 + 12) = v443;
          *((void *)v109 + 13) = v428;
          *((void *)v109 + 14) = v416;
          v109[120] = v116;
        }
        v109[121] = v110[121];
        goto LABEL_68;
      case 1u:
        uint64_t v52 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            char v119 = *v46;
            *uint64_t v45 = *v46;
            id v120 = v119;
            goto LABEL_61;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v118 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v118 - 8) + 16))(v45, v46, v118);
LABEL_61:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v45, v46, *(void *)(*(void *)(v52 - 8) + 64));
            break;
        }
        uint64_t v107 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v121 = v107[5];
        id v109 = (char *)v45 + v121;
        uint64_t v110 = (char *)v46 + v121;
        uint64_t v122 = *(uint64_t *)((char *)v46 + v121 + 8);
        if (v122)
        {
          *(void *)id v109 = *(void *)v110;
          *((void *)v109 + 1) = v122;
          id v123 = (void *)*((void *)v110 + 2);
          uint64_t v124 = *((void *)v110 + 3);
          uint64_t v417 = *((void *)v110 + 5);
          uint64_t v429 = *((void *)v110 + 4);
          v461 = (void *)*((void *)v110 + 7);
          __dstj = (void *)*((void *)v110 + 6);
          unsigned __int8 v444 = v110[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v123, v124, v429, v417, (uint64_t)__dstj, (uint64_t)v461, v444);
          *((void *)v109 + 2) = v123;
          *((void *)v109 + 3) = v124;
          *((void *)v109 + 4) = v429;
          *((void *)v109 + 5) = v417;
          *((void *)v109 + 6) = __dstj;
          *((void *)v109 + 7) = v461;
          v109[64] = v444;
          *(_DWORD *)(v109 + 65) = *(_DWORD *)(v110 + 65);
          int v125 = v110[120];
          if (v125 == 255)
          {
            long long v126 = *(_OWORD *)(v110 + 88);
            *(_OWORD *)(v109 + 72) = *(_OWORD *)(v110 + 72);
            *(_OWORD *)(v109 + 88) = v126;
            *(_OWORD *)(v109 + 104) = *(_OWORD *)(v110 + 104);
            v109[120] = v110[120];
          }
          else
          {
            char v130 = v125 & 1;
            long long v131 = (void *)*((void *)v110 + 9);
            v462 = (void *)*((void *)v110 + 11);
            __dstk = (void *)*((void *)v110 + 10);
            uint64_t v430 = *((void *)v110 + 13);
            uint64_t v445 = *((void *)v110 + 12);
            uint64_t v418 = *((void *)v110 + 14);
            sub_10003BED8(v131, (uint64_t)__dstk, (uint64_t)v462, v445, v430, v418, v125 & 1);
            *((void *)v109 + 9) = v131;
            *((void *)v109 + 10) = __dstk;
            *((void *)v109 + 11) = v462;
            *((void *)v109 + 12) = v445;
            *((void *)v109 + 13) = v430;
            *((void *)v109 + 14) = v418;
            v109[120] = v130;
          }
          v109[121] = v110[121];
        }
        else
        {
LABEL_65:
          long long v127 = *((_OWORD *)v110 + 5);
          *((_OWORD *)v109 + 4) = *((_OWORD *)v110 + 4);
          *((_OWORD *)v109 + 5) = v127;
          *((_OWORD *)v109 + 6) = *((_OWORD *)v110 + 6);
          *(_OWORD *)(v109 + 106) = *(_OWORD *)(v110 + 106);
          long long v128 = *((_OWORD *)v110 + 1);
          *(_OWORD *)id v109 = *(_OWORD *)v110;
          *((_OWORD *)v109 + 1) = v128;
          long long v129 = *((_OWORD *)v110 + 3);
          *((_OWORD *)v109 + 2) = *((_OWORD *)v110 + 2);
          *((_OWORD *)v109 + 3) = v129;
        }
LABEL_68:
        *((unsigned char *)v45 + v107[6]) = *((unsigned char *)v46 + v107[6]);
        *((unsigned char *)v45 + v107[7]) = *((unsigned char *)v46 + v107[7]);
        *((unsigned char *)v45 + v107[8]) = *((unsigned char *)v46 + v107[8]);
        *((unsigned char *)v45 + v107[9]) = *((unsigned char *)v46 + v107[9]);
        *((unsigned char *)v45 + v107[10]) = *((unsigned char *)v46 + v107[10]);
        uint64_t v132 = v107[11];
        char v133 = *(void **)((char *)v46 + v132);
        *(void **)((char *)v45 + v132) = v133;
        id v134 = v133;
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v502;
        a3 = v507;
        break;
      case 2u:
        v457 = v48;
        uint64_t v53 = *v46;
        *uint64_t v45 = *v46;
        uint64_t v54 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dst = (void **)((char *)v45 + v54);
        id v55 = (void **)((char *)v46 + v54);
        uint64_t v56 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v57 = *(void *)(v56 - 8);
        uint64_t v58 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v57 + 48);
        id v59 = v53;
        if (v58(v55, 1, v56))
        {
          uint64_t v60 = sub_10003B754(&qword_10078C890);
          memcpy(__dst, v55, *(void *)(*(void *)(v60 - 8) + 64));
          uint64_t v4 = v502;
          a3 = v507;
          uint64_t v48 = v457;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v136 = *v55;
              *__dst = *v55;
              id v137 = v136;
              goto LABEL_72;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v135 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v135 - 8) + 16))(__dst, v55, v135);
LABEL_72:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dst, v55, *(void *)(v57 + 64));
              break;
          }
          a3 = v507;
          uint64_t v48 = v457;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v57 + 56))(__dst, 0, 1, v56);
          uint64_t v4 = v502;
        }
        goto LABEL_83;
      case 3u:
        uint64_t v61 = *v46;
        *uint64_t v45 = *v46;
        uint64_t v62 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v458 = (void **)((char *)v46 + v62);
        __dsta = (void **)((char *)v45 + v62);
        uint64_t v63 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v64 = *(void *)(v63 - 8);
        uint64_t v65 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v64 + 48);
        id v66 = v61;
        if (v65(v458, 1, v63)) {
          goto LABEL_27;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v91 = *v458;
            *__dsta = *v458;
            id v92 = v91;
            goto LABEL_81;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v143 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v143 - 8) + 16))(__dsta, v458, v143);
LABEL_81:
            swift_storeEnumTagMultiPayload();
            uint64_t v4 = v502;
            a3 = v507;
            uint64_t v139 = v63;
            uint64_t v138 = v64;
            break;
          default:
            memcpy(__dsta, v458, *(void *)(v64 + 64));
            uint64_t v138 = v64;
            uint64_t v4 = v502;
            a3 = v507;
            uint64_t v139 = v63;
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v138 + 56))(__dsta, 0, 1, v139);
        goto LABEL_83;
      case 4u:
        uint64_t v68 = *v46;
        *uint64_t v45 = *v46;
        uint64_t v69 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v458 = (void **)((char *)v46 + v69);
        __dsta = (void **)((char *)v45 + v69);
        uint64_t v70 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v71 = *(void *)(v70 - 8);
        uint64_t v72 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v71 + 48);
        id v73 = v68;
        if (v72(v458, 1, v70))
        {
LABEL_27:
          uint64_t v67 = sub_10003B754(&qword_10078C890);
          memcpy(__dsta, v458, *(void *)(*(void *)(v67 - 8) + 64));
          uint64_t v4 = v502;
          a3 = v507;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v141 = *v458;
              *__dsta = *v458;
              id v142 = v141;
              goto LABEL_78;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v140 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v140 - 8) + 16))(__dsta, v458, v140);
LABEL_78:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dsta, v458, *(void *)(v71 + 64));
              break;
          }
          a3 = v507;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v71 + 56))(__dsta, 0, 1, v70);
          uint64_t v4 = v502;
        }
        goto LABEL_83;
      case 5u:
        *uint64_t v45 = *v46;
        *((unsigned char *)v45 + 8) = *((unsigned char *)v46 + 8);
        *(_WORD *)((char *)v45 + 9) = *(_WORD *)((char *)v46 + 9);
        uint64_t v74 = v46[2];
        v45[2] = v74;
        id v75 = v74;
        goto LABEL_83;
      case 6u:
        char v85 = *v46;
        *uint64_t v45 = *v46;
        id v86 = v85;
        goto LABEL_83;
      case 7u:
        uint64_t v76 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v77 = *(void *)(v76 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48))(v46, 1, v76))
        {
          uint64_t v78 = sub_10003B754(&qword_10078C518);
          memcpy(v45, v46, *(void *)(*(void *)(v78 - 8) + 64));
        }
        else
        {
          *uint64_t v45 = *v46;
          uint64_t v93 = *(int *)(v76 + 20);
          __dstg = (char *)v46 + v93;
          v500 = (char *)v45 + v93;
          uint64_t v94 = type metadata accessor for REMHashtagLabelSpecifier();
          v441 = *(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v95 = v94;
          uint64_t v4 = v502;
          v441(v500, __dstg, v95);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v77 + 56))(v45, 0, 1, v76);
        }
        uint64_t v96 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v97 = (void **)((char *)v45 + v96);
        uint64_t v98 = (void **)((char *)v46 + v96);
        uint64_t v99 = v98[1];
        a3 = v507;
        if (v99)
        {
          *uint64_t v97 = *v98;
          v97[1] = v99;
          uint64_t v100 = (void *)v98[2];
          v97[2] = v100;
          swift_bridgeObjectRetain();
          id v101 = v100;
        }
        else
        {
          *(_OWORD *)uint64_t v97 = *(_OWORD *)v98;
          v97[2] = v98[2];
        }
        goto LABEL_83;
      case 8u:
        uint64_t v87 = a3;
        uint64_t v88 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v89 = *(void *)(v88 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v89 + 48))(v46, 1, v88))
        {
          uint64_t v90 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v45, v46, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          uint64_t v102 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v102 - 8) + 16))(v45, v46, v102);
          *((unsigned char *)v45 + *(int *)(v88 + 20)) = *((unsigned char *)v46 + *(int *)(v88 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v89 + 56))(v45, 0, 1, v88);
        }
        a3 = v87;
        uint64_t v103 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)v45 + *(int *)(v103 + 20)) = *(void **)((char *)v46 + *(int *)(v103 + 20));
        goto LABEL_83;
      case 9u:
        *(unsigned char *)uint64_t v45 = *(unsigned char *)v46;
        uint64_t v79 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v80 = (char *)v45 + v79;
        uint64_t v81 = a3;
        uint64_t v82 = (char *)v46 + v79;
        uint64_t v83 = type metadata accessor for AnyTip();
        unsigned __int8 v84 = v82;
        a3 = v81;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v83 - 8) + 16))(v80, v84, v83);
LABEL_83:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v45, v46, *(void *)(*(void *)(v50 - 8) + 64));
        break;
    }
    uint64_t v144 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
    *((unsigned char *)v45 + v144[5]) = *((unsigned char *)v46 + v144[5]);
    uint64_t v145 = v144[6];
    uint64_t v146 = *(void **)((char *)v46 + v145);
    *(void **)((char *)v45 + v145) = v146;
    uint64_t v147 = v144[7];
    uint64_t v148 = *(void **)((char *)v46 + v147);
    *(void **)((char *)v45 + v147) = v148;
    *((unsigned char *)v45 + v144[8]) = *((unsigned char *)v46 + v144[8]);
    uint64_t v149 = v144[9];
    uint64_t v150 = (char *)v45 + v149;
    uint64_t v151 = (char *)v46 + v149;
    *(void *)uint64_t v150 = *(void *)v151;
    v150[8] = v151[8];
    *(void **)((char *)v45 + v144[10]) = *(void **)((char *)v46 + v144[10]);
    uint64_t v152 = v144[11];
    uint64_t v153 = *(void **)((char *)v46 + v152);
    *(void **)((char *)v45 + v152) = v153;
    *(void **)((char *)v45 + *(int *)(v47 + 48)) = *(void **)((char *)v46 + *(int *)(v47 + 48));
    uint64_t v154 = (void (*)(void **, void, uint64_t, uint64_t))*((void *)v48 + 7);
    id v155 = v146;
    id v156 = v148;
    swift_bridgeObjectRetain();
    id v157 = v153;
    v154(v45, 0, 1, v47);
  }
  uint64_t v158 = a3[18];
  uint64_t v159 = a1 + v158;
  uint64_t v160 = v4 + v158;
  *(unsigned char *)uint64_t v159 = *(unsigned char *)(v4 + v158);
  *(_OWORD *)(v159 + 8) = *(_OWORD *)(v4 + v158 + 8);
  swift_unknownObjectRetain();
  uint64_t v161 = *(int *)(sub_10003B754(&qword_100794B58) + 40);
  uint64_t v162 = (void **)(v159 + v161);
  uint64_t v163 = (void **)(v160 + v161);
  uint64_t v164 = sub_10003B754(&qword_100794B98);
  unsigned __int8 v165 = *(void **)(v164 - 8);
  if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v165 + 6))(v163, 1, v164))
  {
    uint64_t v166 = sub_10003B754(&qword_100794B90);
    memcpy(v162, v163, *(void *)(*(void *)(v166 - 8) + 64));
  }
  else
  {
    uint64_t v167 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v168 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v220 = *v163;
            *uint64_t v162 = *v163;
            id v221 = v220;
            goto LABEL_117;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v219 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v219 - 8) + 16))(v162, v163, v219);
LABEL_117:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v162, v163, *(void *)(*(void *)(v168 - 8) + 64));
            break;
        }
        uint64_t v222 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v223 = v222[5];
        id v224 = (char *)v162 + v223;
        v225 = (char *)v163 + v223;
        uint64_t v226 = *(uint64_t *)((char *)v163 + v223 + 8);
        if (v226)
        {
          *(void *)id v224 = *(void *)v225;
          *((void *)v224 + 1) = v226;
          uint64_t v227 = (void *)*((void *)v225 + 2);
          uint64_t v228 = *((void *)v225 + 3);
          uint64_t v419 = *((void *)v225 + 4);
          v467 = (void *)*((void *)v225 + 6);
          __dstm = (void *)*((void *)v225 + 5);
          uint64_t v446 = *((void *)v225 + 7);
          unsigned __int8 v432 = v225[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v227, v228, v419, (uint64_t)__dstm, (uint64_t)v467, v446, v432);
          *((void *)v224 + 2) = v227;
          *((void *)v224 + 3) = v228;
          *((void *)v224 + 4) = v419;
          *((void *)v224 + 5) = __dstm;
          *((void *)v224 + 6) = v467;
          *((void *)v224 + 7) = v446;
          v224[64] = v432;
          *(_DWORD *)(v224 + 65) = *(_DWORD *)(v225 + 65);
          int v229 = v225[120];
          if (v229 == 255)
          {
            long long v230 = *(_OWORD *)(v225 + 88);
            *(_OWORD *)(v224 + 72) = *(_OWORD *)(v225 + 72);
            *(_OWORD *)(v224 + 88) = v230;
            *(_OWORD *)(v224 + 104) = *(_OWORD *)(v225 + 104);
            v224[120] = v225[120];
          }
          else
          {
            char v234 = v229 & 1;
            long long v235 = (void *)*((void *)v225 + 9);
            v468 = (void *)*((void *)v225 + 11);
            __dstn = (void *)*((void *)v225 + 10);
            uint64_t v433 = *((void *)v225 + 13);
            uint64_t v447 = *((void *)v225 + 12);
            uint64_t v420 = *((void *)v225 + 14);
            sub_10003BED8(v235, (uint64_t)__dstn, (uint64_t)v468, v447, v433, v420, v229 & 1);
            *((void *)v224 + 9) = v235;
            *((void *)v224 + 10) = __dstn;
            *((void *)v224 + 11) = v468;
            *((void *)v224 + 12) = v447;
            *((void *)v224 + 13) = v433;
            *((void *)v224 + 14) = v420;
            v224[120] = v234;
          }
          v224[121] = v225[121];
        }
        else
        {
          long long v231 = *((_OWORD *)v225 + 5);
          *((_OWORD *)v224 + 4) = *((_OWORD *)v225 + 4);
          *((_OWORD *)v224 + 5) = v231;
          *((_OWORD *)v224 + 6) = *((_OWORD *)v225 + 6);
          *(_OWORD *)(v224 + 106) = *(_OWORD *)(v225 + 106);
          long long v232 = *((_OWORD *)v225 + 1);
          *(_OWORD *)id v224 = *(_OWORD *)v225;
          *((_OWORD *)v224 + 1) = v232;
          long long v233 = *((_OWORD *)v225 + 3);
          *((_OWORD *)v224 + 2) = *((_OWORD *)v225 + 2);
          *((_OWORD *)v224 + 3) = v233;
        }
        *((unsigned char *)v162 + v222[6]) = *((unsigned char *)v163 + v222[6]);
        *((unsigned char *)v162 + v222[7]) = *((unsigned char *)v163 + v222[7]);
        *((unsigned char *)v162 + v222[8]) = *((unsigned char *)v163 + v222[8]);
        *((unsigned char *)v162 + v222[9]) = *((unsigned char *)v163 + v222[9]);
        *((unsigned char *)v162 + v222[10]) = *((unsigned char *)v163 + v222[10]);
        uint64_t v236 = v222[11];
        char v237 = *(void **)((char *)v163 + v236);
        *(void **)((char *)v162 + v236) = v237;
        id v238 = v237;
        goto LABEL_136;
      case 1u:
        uint64_t v169 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v240 = *v163;
            *uint64_t v162 = *v163;
            id v241 = v240;
            goto LABEL_128;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v239 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v239 - 8) + 16))(v162, v163, v239);
LABEL_128:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v162, v163, *(void *)(*(void *)(v169 - 8) + 64));
            break;
        }
        uint64_t v242 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v243 = v242[5];
        id v244 = (char *)v162 + v243;
        uint64_t v245 = (char *)v163 + v243;
        uint64_t v246 = *(uint64_t *)((char *)v163 + v243 + 8);
        if (v246)
        {
          *(void *)id v244 = *(void *)v245;
          *((void *)v244 + 1) = v246;
          uint64_t v247 = (void *)*((void *)v245 + 2);
          uint64_t v248 = *((void *)v245 + 3);
          uint64_t v421 = *((void *)v245 + 5);
          uint64_t v434 = *((void *)v245 + 4);
          v469 = (void *)*((void *)v245 + 7);
          __dsto = (void *)*((void *)v245 + 6);
          unsigned __int8 v448 = v245[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v247, v248, v434, v421, (uint64_t)__dsto, (uint64_t)v469, v448);
          *((void *)v244 + 2) = v247;
          *((void *)v244 + 3) = v248;
          *((void *)v244 + 4) = v434;
          *((void *)v244 + 5) = v421;
          *((void *)v244 + 6) = __dsto;
          *((void *)v244 + 7) = v469;
          v244[64] = v448;
          *(_DWORD *)(v244 + 65) = *(_DWORD *)(v245 + 65);
          int v249 = v245[120];
          if (v249 == 255)
          {
            long long v250 = *(_OWORD *)(v245 + 88);
            *(_OWORD *)(v244 + 72) = *(_OWORD *)(v245 + 72);
            *(_OWORD *)(v244 + 88) = v250;
            *(_OWORD *)(v244 + 104) = *(_OWORD *)(v245 + 104);
            v244[120] = v245[120];
          }
          else
          {
            char v254 = v249 & 1;
            long long v255 = (void *)*((void *)v245 + 9);
            v470 = (void *)*((void *)v245 + 11);
            __dstp = (void *)*((void *)v245 + 10);
            uint64_t v435 = *((void *)v245 + 13);
            uint64_t v449 = *((void *)v245 + 12);
            uint64_t v422 = *((void *)v245 + 14);
            sub_10003BED8(v255, (uint64_t)__dstp, (uint64_t)v470, v449, v435, v422, v249 & 1);
            *((void *)v244 + 9) = v255;
            *((void *)v244 + 10) = __dstp;
            *((void *)v244 + 11) = v470;
            *((void *)v244 + 12) = v449;
            *((void *)v244 + 13) = v435;
            *((void *)v244 + 14) = v422;
            v244[120] = v254;
          }
          v244[121] = v245[121];
        }
        else
        {
          long long v251 = *((_OWORD *)v245 + 5);
          *((_OWORD *)v244 + 4) = *((_OWORD *)v245 + 4);
          *((_OWORD *)v244 + 5) = v251;
          *((_OWORD *)v244 + 6) = *((_OWORD *)v245 + 6);
          *(_OWORD *)(v244 + 106) = *(_OWORD *)(v245 + 106);
          long long v252 = *((_OWORD *)v245 + 1);
          *(_OWORD *)id v244 = *(_OWORD *)v245;
          *((_OWORD *)v244 + 1) = v252;
          long long v253 = *((_OWORD *)v245 + 3);
          *((_OWORD *)v244 + 2) = *((_OWORD *)v245 + 2);
          *((_OWORD *)v244 + 3) = v253;
        }
        *((unsigned char *)v162 + v242[6]) = *((unsigned char *)v163 + v242[6]);
        *((unsigned char *)v162 + v242[7]) = *((unsigned char *)v163 + v242[7]);
        *((unsigned char *)v162 + v242[8]) = *((unsigned char *)v163 + v242[8]);
        *((unsigned char *)v162 + v242[9]) = *((unsigned char *)v163 + v242[9]);
        *((unsigned char *)v162 + v242[10]) = *((unsigned char *)v163 + v242[10]);
        uint64_t v256 = v242[11];
        char v257 = *(void **)((char *)v163 + v256);
        *(void **)((char *)v162 + v256) = v257;
        id v258 = v257;
LABEL_136:
        swift_storeEnumTagMultiPayload();
        uint64_t v4 = v502;
        break;
      case 2u:
        v463 = v165;
        uint64_t v170 = *v163;
        *uint64_t v162 = *v163;
        uint64_t v171 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dstb = (void **)((char *)v162 + v171);
        uint64_t v172 = (void **)((char *)v163 + v171);
        uint64_t v173 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v174 = *(void *)(v173 - 8);
        id v175 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v174 + 48);
        id v176 = v170;
        if (v175(v172, 1, v173))
        {
          uint64_t v177 = sub_10003B754(&qword_10078C890);
          memcpy(__dstb, v172, *(void *)(*(void *)(v177 - 8) + 64));
          uint64_t v4 = v502;
          unsigned __int8 v165 = v463;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v260 = *v172;
              *__dstb = *v172;
              id v261 = v260;
              goto LABEL_140;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v259 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v259 - 8) + 16))(__dstb, v172, v259);
LABEL_140:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dstb, v172, *(void *)(v174 + 64));
              break;
          }
          unsigned __int8 v165 = v463;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v174 + 56))(__dstb, 0, 1, v173);
          uint64_t v4 = v502;
        }
        goto LABEL_151;
      case 3u:
        char v178 = *v163;
        *uint64_t v162 = *v163;
        uint64_t v179 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v464 = (void **)((char *)v163 + v179);
        __dstc = (void **)((char *)v162 + v179);
        uint64_t v180 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v181 = *(void *)(v180 - 8);
        uint64_t v182 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v181 + 48);
        id v183 = v178;
        uint64_t v184 = v464;
        if (v182(v464, 1, v180)) {
          goto LABEL_93;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v206 = *v464;
            *__dstc = *v464;
            id v207 = v206;
            goto LABEL_149;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v266 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v266 - 8) + 16))(__dstc, v464, v266);
LABEL_149:
            swift_storeEnumTagMultiPayload();
            uint64_t v4 = v502;
            uint64_t v262 = v181;
            break;
          default:
            memcpy(__dstc, v464, *(void *)(v181 + 64));
            uint64_t v262 = v181;
            uint64_t v4 = v502;
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v262 + 56))(__dstc, 0, 1, v180);
        goto LABEL_151;
      case 4u:
        id v186 = *v163;
        *uint64_t v162 = *v163;
        uint64_t v187 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v465 = (void **)((char *)v163 + v187);
        __dstc = (void **)((char *)v162 + v187);
        uint64_t v188 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v189 = *(void *)(v188 - 8);
        uint64_t v190 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v189 + 48);
        id v191 = v186;
        uint64_t v184 = v465;
        if (v190(v465, 1, v188))
        {
LABEL_93:
          uint64_t v185 = sub_10003B754(&qword_10078C890);
          memcpy(__dstc, v184, *(void *)(*(void *)(v185 - 8) + 64));
          uint64_t v4 = v502;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v264 = *v465;
              *__dstc = *v465;
              id v265 = v264;
              goto LABEL_146;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v263 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v263 - 8) + 16))(__dstc, v465, v263);
LABEL_146:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dstc, v465, *(void *)(v189 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v189 + 56))(__dstc, 0, 1, v188);
          uint64_t v4 = v502;
        }
        goto LABEL_151;
      case 5u:
        *uint64_t v162 = *v163;
        *((unsigned char *)v162 + 8) = *((unsigned char *)v163 + 8);
        *(_WORD *)((char *)v162 + 9) = *(_WORD *)((char *)v163 + 9);
        uint64_t v192 = v163[2];
        v162[2] = v192;
        id v193 = v192;
        goto LABEL_151;
      case 6u:
        uint64_t v201 = *v163;
        *uint64_t v162 = *v163;
        id v202 = v201;
        goto LABEL_151;
      case 7u:
        uint64_t v194 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v195 = *(void *)(v194 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v195 + 48))(v163, 1, v194))
        {
          uint64_t v196 = sub_10003B754(&qword_10078C518);
          memcpy(v162, v163, *(void *)(*(void *)(v196 - 8) + 64));
        }
        else
        {
          *uint64_t v162 = *v163;
          uint64_t v208 = *(int *)(v194 + 20);
          v466 = (char *)v163 + v208;
          __dstl = (char *)v162 + v208;
          uint64_t v209 = type metadata accessor for REMHashtagLabelSpecifier();
          v431 = *(void (**)(char *, char *, uint64_t))(*(void *)(v209 - 8) + 16);
          swift_bridgeObjectRetain();
          uint64_t v210 = v209;
          uint64_t v4 = v502;
          v431(__dstl, v466, v210);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v195 + 56))(v162, 0, 1, v194);
        }
        uint64_t v211 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v212 = (void **)((char *)v162 + v211);
        uint64_t v213 = (void **)((char *)v163 + v211);
        uint64_t v214 = v213[1];
        if (v214)
        {
          *uint64_t v212 = *v213;
          v212[1] = v214;
          uint64_t v215 = (void *)v213[2];
          v212[2] = v215;
          swift_bridgeObjectRetain();
          id v216 = v215;
        }
        else
        {
          *(_OWORD *)uint64_t v212 = *(_OWORD *)v213;
          v212[2] = v213[2];
        }
        goto LABEL_151;
      case 8u:
        uint64_t v203 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v204 = *(void *)(v203 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v204 + 48))(v163, 1, v203))
        {
          uint64_t v205 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v162, v163, *(void *)(*(void *)(v205 - 8) + 64));
        }
        else
        {
          uint64_t v217 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v217 - 8) + 16))(v162, v163, v217);
          *((unsigned char *)v162 + *(int *)(v203 + 20)) = *((unsigned char *)v163 + *(int *)(v203 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v204 + 56))(v162, 0, 1, v203);
        }
        uint64_t v218 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)v162 + *(int *)(v218 + 20)) = *(void **)((char *)v163 + *(int *)(v218 + 20));
        goto LABEL_151;
      case 9u:
        *(unsigned char *)uint64_t v162 = *(unsigned char *)v163;
        uint64_t v197 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v198 = (char *)v162 + v197;
        uint64_t v199 = (char *)v163 + v197;
        uint64_t v200 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v200 - 8) + 16))(v198, v199, v200);
LABEL_151:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v162, v163, *(void *)(*(void *)(v167 - 8) + 64));
        break;
    }
    v267 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
    *((unsigned char *)v162 + v267[5]) = *((unsigned char *)v163 + v267[5]);
    uint64_t v268 = v267[6];
    uint64_t v269 = *(void **)((char *)v163 + v268);
    *(void **)((char *)v162 + v268) = v269;
    *(void **)((char *)v162 + v267[7]) = *(void **)((char *)v163 + v267[7]);
    *(void **)((char *)v162 + v267[8]) = *(void **)((char *)v163 + v267[8]);
    *((unsigned char *)v162 + v267[9]) = *((unsigned char *)v163 + v267[9]);
    *(void **)((char *)v162 + *(int *)(v164 + 48)) = *(void **)((char *)v163 + *(int *)(v164 + 48));
    v270 = (void (*)(void **, void, uint64_t, uint64_t))*((void *)v165 + 7);
    id v271 = v269;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v270(v162, 0, 1, v164);
    a3 = v507;
  }
  uint64_t v272 = a3[19];
  uint64_t v273 = a3[20];
  id v274 = *(void **)(v4 + v272);
  *(void *)(a1 + v272) = v274;
  uint64_t v275 = (void *)(a1 + v273);
  uint64_t v276 = (void *)(v4 + v273);
  uint64_t v277 = v276[1];
  *uint64_t v275 = *v276;
  v275[1] = v277;
  uint64_t v278 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(v4 + a3[21]);
  v279 = (void *)(a1 + v278);
  uint64_t v280 = (void *)(v4 + v278);
  uint64_t v281 = v280[1];
  void *v279 = *v280;
  v279[1] = v281;
  uint64_t v282 = a3[23];
  uint64_t v283 = a3[24];
  uint64_t v284 = (void *)(a1 + v282);
  uint64_t v285 = (void *)(v4 + v282);
  uint64_t v286 = v285[1];
  *uint64_t v284 = *v285;
  v284[1] = v286;
  uint64_t v287 = a1;
  v288 = *(void **)(v4 + v283);
  *(void *)(v287 + v283) = v288;
  uint64_t v289 = a3[26];
  *(void *)(v287 + a3[25]) = *(void *)(v4 + a3[25]);
  uint64_t v290 = (void *)(v287 + v289);
  uint64_t v291 = v4 + v289;
  v293 = *(void **)v291;
  uint64_t v292 = *(void *)(v291 + 8);
  *uint64_t v290 = *(void *)v291;
  v290[1] = v292;
  v290[2] = *(void *)(v291 + 16);
  __dstd = *(void **)(v291 + 24);
  uint64_t v501 = v287;
  id v294 = v274;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v295 = v288;
  swift_bridgeObjectRetain();
  id v296 = v293;
  swift_bridgeObjectRetain();
  if (__dstd)
  {
    uint64_t v297 = *(void *)(v291 + 32);
    v290[3] = __dstd;
    v290[4] = v297;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v290 + 3) = *(_OWORD *)(v291 + 24);
  }
  uint64_t v298 = v507[27];
  uint64_t v299 = v501;
  uint64_t v300 = (void *)(v501 + v298);
  uint64_t v301 = (void *)(v502 + v298);
  v302 = *(void **)(v502 + v298);
  uint64_t v303 = v301[1];
  *uint64_t v300 = v302;
  v300[1] = v303;
  v300[2] = v301[2];
  uint64_t v304 = v301[3];
  id v305 = v302;
  swift_bridgeObjectRetain();
  if (v304)
  {
    uint64_t v306 = v301[4];
    v300[3] = v304;
    v300[4] = v306;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(v300 + 3) = *(_OWORD *)(v301 + 3);
  }
  uint64_t v307 = v507[28];
  uint64_t v308 = v501 + v307;
  uint64_t v309 = v502 + v307;
  *(_OWORD *)(v501 + v307) = *(_OWORD *)(v502 + v307);
  swift_unknownObjectRetain();
  uint64_t v310 = sub_10003B754(&qword_100794B50);
  uint64_t v311 = *(int *)(v310 + 28);
  uint64_t v312 = (void **)(v308 + v311);
  uint64_t v313 = (void **)(v309 + v311);
  uint64_t v314 = sub_10003B754(&qword_100794B68);
  v315 = *(void **)(v314 - 8);
  if ((*((unsigned int (**)(void **, uint64_t, uint64_t))v315 + 6))(v313, 1, v314))
  {
    uint64_t v316 = sub_10003B754(&qword_1007A2550);
    memcpy(v312, v313, *(void *)(*(void *)(v316 - 8) + 64));
  }
  else
  {
    uint64_t v317 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v503 = v310;
        uint64_t v318 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v368 = *v313;
            *uint64_t v312 = *v313;
            id v369 = v368;
            goto LABEL_191;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v367 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v367 - 8) + 16))(v312, v313, v367);
LABEL_191:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v312, v313, *(void *)(*(void *)(v318 - 8) + 64));
            break;
        }
        v370 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v371 = v370[5];
        v372 = (char *)v312 + v371;
        v373 = (char *)v313 + v371;
        uint64_t v374 = *(uint64_t *)((char *)v313 + v371 + 8);
        if (!v374) {
          goto LABEL_205;
        }
        *(void *)v372 = *(void *)v373;
        *((void *)v372 + 1) = v374;
        v375 = (void *)*((void *)v373 + 2);
        v474 = (void *)*((void *)v373 + 4);
        __dstr = (void *)*((void *)v373 + 3);
        uint64_t v437 = *((void *)v373 + 6);
        uint64_t v453 = *((void *)v373 + 5);
        uint64_t v423 = *((void *)v373 + 7);
        unsigned __int8 v411 = v373[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v375, (uint64_t)__dstr, (uint64_t)v474, v453, v437, v423, v411);
        *((void *)v372 + 2) = v375;
        *((void *)v372 + 3) = __dstr;
        *((void *)v372 + 4) = v474;
        *((void *)v372 + 5) = v453;
        *((void *)v372 + 6) = v437;
        *((void *)v372 + 7) = v423;
        v372[64] = v411;
        *(_DWORD *)(v372 + 65) = *(_DWORD *)(v373 + 65);
        int v376 = v373[120];
        if (v376 == 255)
        {
          long long v377 = *(_OWORD *)(v373 + 88);
          *(_OWORD *)(v372 + 72) = *(_OWORD *)(v373 + 72);
          *(_OWORD *)(v372 + 88) = v377;
          *(_OWORD *)(v372 + 104) = *(_OWORD *)(v373 + 104);
          v372[120] = v373[120];
        }
        else
        {
          char v378 = v376 & 1;
          v475 = (void *)*((void *)v373 + 10);
          __dsts = (void *)*((void *)v373 + 9);
          uint64_t v438 = *((void *)v373 + 12);
          uint64_t v454 = *((void *)v373 + 11);
          uint64_t v412 = *((void *)v373 + 14);
          uint64_t v424 = *((void *)v373 + 13);
          sub_10003BED8(__dsts, (uint64_t)v475, v454, v438, v424, v412, v376 & 1);
          *((void *)v372 + 9) = __dsts;
          *((void *)v372 + 10) = v475;
          *((void *)v372 + 11) = v454;
          *((void *)v372 + 12) = v438;
          *((void *)v372 + 13) = v424;
          *((void *)v372 + 14) = v412;
          v372[120] = v378;
        }
        v372[121] = v373[121];
        goto LABEL_208;
      case 1u:
        uint64_t v503 = v310;
        uint64_t v319 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v380 = *v313;
            *uint64_t v312 = *v313;
            id v381 = v380;
            goto LABEL_201;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v379 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v379 - 8) + 16))(v312, v313, v379);
LABEL_201:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v312, v313, *(void *)(*(void *)(v319 - 8) + 64));
            break;
        }
        v370 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v382 = v370[5];
        v372 = (char *)v312 + v382;
        v373 = (char *)v313 + v382;
        uint64_t v383 = *(uint64_t *)((char *)v313 + v382 + 8);
        if (v383)
        {
          *(void *)v372 = *(void *)v373;
          *((void *)v372 + 1) = v383;
          v384 = (void *)*((void *)v373 + 2);
          v476 = (void *)*((void *)v373 + 4);
          __dstt = (void *)*((void *)v373 + 3);
          uint64_t v439 = *((void *)v373 + 6);
          uint64_t v455 = *((void *)v373 + 5);
          uint64_t v425 = *((void *)v373 + 7);
          unsigned __int8 v413 = v373[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v384, (uint64_t)__dstt, (uint64_t)v476, v455, v439, v425, v413);
          *((void *)v372 + 2) = v384;
          *((void *)v372 + 3) = __dstt;
          *((void *)v372 + 4) = v476;
          *((void *)v372 + 5) = v455;
          *((void *)v372 + 6) = v439;
          *((void *)v372 + 7) = v425;
          v372[64] = v413;
          *(_DWORD *)(v372 + 65) = *(_DWORD *)(v373 + 65);
          int v385 = v373[120];
          if (v385 == 255)
          {
            long long v386 = *(_OWORD *)(v373 + 88);
            *(_OWORD *)(v372 + 72) = *(_OWORD *)(v373 + 72);
            *(_OWORD *)(v372 + 88) = v386;
            *(_OWORD *)(v372 + 104) = *(_OWORD *)(v373 + 104);
            v372[120] = v373[120];
          }
          else
          {
            char v390 = v385 & 1;
            v477 = (void *)*((void *)v373 + 10);
            __dstu = (void *)*((void *)v373 + 9);
            uint64_t v440 = *((void *)v373 + 12);
            uint64_t v456 = *((void *)v373 + 11);
            uint64_t v414 = *((void *)v373 + 14);
            uint64_t v426 = *((void *)v373 + 13);
            sub_10003BED8(__dstu, (uint64_t)v477, v456, v440, v426, v414, v385 & 1);
            *((void *)v372 + 9) = __dstu;
            *((void *)v372 + 10) = v477;
            *((void *)v372 + 11) = v456;
            *((void *)v372 + 12) = v440;
            *((void *)v372 + 13) = v426;
            *((void *)v372 + 14) = v414;
            v372[120] = v390;
          }
          v372[121] = v373[121];
        }
        else
        {
LABEL_205:
          long long v387 = *((_OWORD *)v373 + 5);
          *((_OWORD *)v372 + 4) = *((_OWORD *)v373 + 4);
          *((_OWORD *)v372 + 5) = v387;
          *((_OWORD *)v372 + 6) = *((_OWORD *)v373 + 6);
          *(_OWORD *)(v372 + 106) = *(_OWORD *)(v373 + 106);
          long long v388 = *((_OWORD *)v373 + 1);
          *(_OWORD *)v372 = *(_OWORD *)v373;
          *((_OWORD *)v372 + 1) = v388;
          long long v389 = *((_OWORD *)v373 + 3);
          *((_OWORD *)v372 + 2) = *((_OWORD *)v373 + 2);
          *((_OWORD *)v372 + 3) = v389;
        }
LABEL_208:
        *((unsigned char *)v312 + v370[6]) = *((unsigned char *)v313 + v370[6]);
        *((unsigned char *)v312 + v370[7]) = *((unsigned char *)v313 + v370[7]);
        *((unsigned char *)v312 + v370[8]) = *((unsigned char *)v313 + v370[8]);
        *((unsigned char *)v312 + v370[9]) = *((unsigned char *)v313 + v370[9]);
        *((unsigned char *)v312 + v370[10]) = *((unsigned char *)v313 + v370[10]);
        uint64_t v391 = v370[11];
        v392 = *(void **)((char *)v313 + v391);
        *(void **)((char *)v312 + v391) = v392;
        id v393 = v392;
        swift_storeEnumTagMultiPayload();
        uint64_t v299 = v501;
        uint64_t v310 = v503;
        break;
      case 2u:
        uint64_t v504 = v310;
        uint64_t v320 = *v313;
        *uint64_t v312 = *v313;
        uint64_t v321 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v471 = (void **)((char *)v313 + v321);
        __dste = (void **)((char *)v312 + v321);
        uint64_t v322 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v450 = *(void *)(v322 - 8);
        uint64_t v323 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v450 + 48);
        id v324 = v320;
        if (v323(v471, 1, v322)) {
          goto LABEL_167;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v395 = *v471;
            *__dste = *v471;
            id v396 = v395;
            goto LABEL_212;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v394 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v394 - 8) + 16))(__dste, v471, v394);
LABEL_212:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dste, v471, *(void *)(v450 + 64));
            break;
        }
        uint64_t v299 = v501;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v450 + 56))(__dste, 0, 1, v322);
        uint64_t v310 = v504;
        goto LABEL_224;
      case 3u:
        uint64_t v504 = v310;
        v325 = *v313;
        *uint64_t v312 = *v313;
        uint64_t v326 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v471 = (void **)((char *)v313 + v326);
        __dste = (void **)((char *)v312 + v326);
        uint64_t v327 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v451 = *(void *)(v327 - 8);
        uint64_t v328 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v451 + 48);
        id v329 = v325;
        if (v328(v471, 1, v327))
        {
LABEL_167:
          uint64_t v330 = sub_10003B754(&qword_10078C890);
          memcpy(__dste, v471, *(void *)(*(void *)(v330 - 8) + 64));
          uint64_t v299 = v501;
          uint64_t v310 = v504;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v355 = *v471;
              *__dste = *v471;
              id v356 = v355;
              goto LABEL_222;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v402 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v402 - 8) + 16))(__dste, v471, v402);
LABEL_222:
              swift_storeEnumTagMultiPayload();
              uint64_t v299 = v501;
              uint64_t v310 = v504;
              uint64_t v398 = v327;
              uint64_t v397 = v451;
              break;
            default:
              memcpy(__dste, v471, *(void *)(v451 + 64));
              uint64_t v397 = v451;
              uint64_t v299 = v501;
              uint64_t v310 = v504;
              uint64_t v398 = v327;
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v397 + 56))(__dste, 0, 1, v398);
        }
        goto LABEL_224;
      case 4u:
        __dstf = v315;
        uint64_t v505 = v310;
        id v331 = *v313;
        *uint64_t v312 = *v313;
        uint64_t v332 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v452 = (void **)((char *)v313 + v332);
        v472 = (void **)((char *)v312 + v332);
        uint64_t v333 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v334 = *(void *)(v333 - 8);
        uint64_t v335 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v334 + 48);
        id v336 = v331;
        if (v335(v452, 1, v333))
        {
          uint64_t v337 = sub_10003B754(&qword_10078C890);
          memcpy(v472, v452, *(void *)(*(void *)(v337 - 8) + 64));
          uint64_t v299 = v501;
          uint64_t v310 = v505;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v400 = *v452;
              *v472 = *v452;
              id v401 = v400;
              goto LABEL_218;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v399 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v399 - 8) + 16))(v472, v452, v399);
LABEL_218:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v472, v452, *(void *)(v334 + 64));
              break;
          }
          uint64_t v299 = v501;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v334 + 56))(v472, 0, 1, v333);
          uint64_t v310 = v505;
        }
        v315 = __dstf;
        goto LABEL_224;
      case 5u:
        *uint64_t v312 = *v313;
        *((unsigned char *)v312 + 8) = *((unsigned char *)v313 + 8);
        *(_WORD *)((char *)v312 + 9) = *(_WORD *)((char *)v313 + 9);
        id v338 = v313[2];
        v312[2] = v338;
        id v339 = v338;
        goto LABEL_224;
      case 6u:
        v349 = *v313;
        *uint64_t v312 = *v313;
        id v350 = v349;
        goto LABEL_224;
      case 7u:
        uint64_t v506 = v310;
        uint64_t v340 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v341 = *(void *)(v340 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v341 + 48))(v313, 1, v340))
        {
          uint64_t v342 = sub_10003B754(&qword_10078C518);
          memcpy(v312, v313, *(void *)(*(void *)(v342 - 8) + 64));
        }
        else
        {
          *uint64_t v312 = *v313;
          uint64_t v357 = *(int *)(v340 + 20);
          v473 = (char *)v313 + v357;
          __dstq = (char *)v312 + v357;
          uint64_t v358 = type metadata accessor for REMHashtagLabelSpecifier();
          v436 = *(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 16);
          swift_bridgeObjectRetain();
          v436(__dstq, v473, v358);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v341 + 56))(v312, 0, 1, v340);
        }
        uint64_t v359 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        v360 = (void **)((char *)v312 + v359);
        v361 = (void **)((char *)v313 + v359);
        uint64_t v362 = v361[1];
        uint64_t v299 = v501;
        uint64_t v310 = v506;
        if (v362)
        {
          void *v360 = *v361;
          v360[1] = v362;
          v363 = (void *)v361[2];
          v360[2] = v363;
          swift_bridgeObjectRetain();
          id v364 = v363;
        }
        else
        {
          *(_OWORD *)v360 = *(_OWORD *)v361;
          v360[2] = v361[2];
        }
        goto LABEL_224;
      case 8u:
        uint64_t v351 = v310;
        uint64_t v352 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v353 = *(void *)(v352 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v353 + 48))(v313, 1, v352))
        {
          uint64_t v354 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v312, v313, *(void *)(*(void *)(v354 - 8) + 64));
        }
        else
        {
          uint64_t v365 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v365 - 8) + 16))(v312, v313, v365);
          *((unsigned char *)v312 + *(int *)(v352 + 20)) = *((unsigned char *)v313 + *(int *)(v352 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v353 + 56))(v312, 0, 1, v352);
        }
        uint64_t v299 = v501;
        uint64_t v310 = v351;
        uint64_t v366 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)v312 + *(int *)(v366 + 20)) = *(void **)((char *)v313 + *(int *)(v366 + 20));
        goto LABEL_224;
      case 9u:
        *(unsigned char *)uint64_t v312 = *(unsigned char *)v313;
        uint64_t v343 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v344 = (char *)v312 + v343;
        uint64_t v345 = v310;
        v346 = (char *)v313 + v343;
        uint64_t v347 = type metadata accessor for AnyTip();
        uint64_t v348 = v346;
        uint64_t v310 = v345;
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v347 - 8) + 16))(v344, v348, v347);
LABEL_224:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v312, v313, *(void *)(*(void *)(v317 - 8) + 64));
        break;
    }
    v403 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
    *((unsigned char *)v312 + v403[5]) = *((unsigned char *)v313 + v403[5]);
    uint64_t v404 = v403[6];
    v405 = (void **)((char *)v312 + v404);
    v406 = (uint64_t *)((char *)v313 + v404);
    uint64_t v408 = *v406;
    uint64_t v407 = v406[1];
    void *v405 = v408;
    v405[1] = v407;
    *(void **)((char *)v312 + v403[7]) = *(void **)((char *)v313 + v403[7]);
    *(void **)((char *)v312 + *(int *)(v314 + 48)) = *(void **)((char *)v313 + *(int *)(v314 + 48));
    v409 = (void (*)(void **, void, uint64_t, uint64_t))*((void *)v315 + 7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v409(v312, 0, 1, v314);
  }
  *(unsigned char *)(v308 + *(int *)(v310 + 32)) = *(unsigned char *)(v309 + *(int *)(v310 + 32));
  return v299;
}

uint64_t sub_1005C3EA0(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  uint64_t v6 = *(void **)(a1 + 8);
  uint64_t v7 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v7;
  id v8 = v7;

  uint64_t v9 = *(void **)(a1 + 16);
  uint64_t v10 = *(void **)(a2 + 16);
  *(void *)(a1 + 16) = v10;
  id v11 = v10;

  uint64_t v12 = *(void **)(a1 + 24);
  id v13 = *(void **)(a2 + 24);
  *(void *)(a1 + 24) = v13;
  id v14 = v13;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  id v15 = *(void **)(a1 + 40);
  id v16 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v16;
  id v17 = v16;

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v18 = *(void **)(a1 + 56);
  uint64_t v19 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v19;
  id v20 = v19;

  uint64_t v21 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v21)
    {
      uint64_t v22 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v21;
      *(void *)(a1 + 72) = v22;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v21)
  {
    uint64_t v23 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v21;
    *(void *)(a1 + 72) = v23;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  id v24 = *(void **)(a1 + 80);
  id v25 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v25;
  id v26 = v25;

  uint64_t v27 = *(void **)(a1 + 88);
  uint64_t v28 = *(void **)(a2 + 88);
  *(void *)(a1 + 88) = v28;
  id v29 = v28;

  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  uint64_t v30 = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  *(void *)(a1 + 104) = v30;
  uint64_t v31 = *(void **)(a1 + 120);
  uint64_t v32 = *(void **)(a2 + 120);
  *(void *)(a1 + 120) = v32;
  id v33 = v32;

  uint64_t v34 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v34)
    {
      uint64_t v35 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = v34;
      *(void *)(a1 + 136) = v35;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v34)
  {
    uint64_t v36 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = v34;
    *(void *)(a1 + 136) = v36;
    swift_retain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_15:
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v37 = *(void **)(a1 + 160);
  uint64_t v38 = *(void **)(a2 + 160);
  *(void *)(a1 + 160) = v38;
  id v39 = v38;

  uint64_t v40 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168))
  {
    if (v40)
    {
      uint64_t v41 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = v40;
      *(void *)(a1 + 176) = v41;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v40)
  {
    uint64_t v42 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = v40;
    *(void *)(a1 + 176) = v42;
    swift_retain();
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
LABEL_22:
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v43 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v43)
    {
      uint64_t v44 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = v43;
      *(void *)(a1 + 208) = v44;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v43)
  {
    uint64_t v45 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = v43;
    *(void *)(a1 + 208) = v45;
    swift_retain();
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
LABEL_29:
  *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
  *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  uint64_t v46 = *(void **)(a1 + 232);
  uint64_t v47 = *(void **)(a2 + 232);
  *(void *)(a1 + 232) = v47;
  id v48 = v47;

  uint64_t v49 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240))
  {
    if (v49)
    {
      uint64_t v50 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = v49;
      *(void *)(a1 + 248) = v50;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v49)
  {
    uint64_t v51 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v49;
    *(void *)(a1 + 248) = v51;
    swift_retain();
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_36:
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void *)(a2 + 264);
  if (*(void *)(a1 + 264))
  {
    if (v52)
    {
      uint64_t v53 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = v52;
      *(void *)(a1 + 272) = v53;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v52)
  {
    uint64_t v54 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = v52;
    *(void *)(a1 + 272) = v54;
    swift_retain();
    goto LABEL_43;
  }
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_43:
  uint64_t v55 = a3[17];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = *(void *)(a2 + v55 + 8);
  *(void *)(a1 + v55) = *(void *)(a2 + v55);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v56 + 8) = v58;
  uint64_t v59 = *(int *)(sub_10003B754(&qword_100794B60) + 28);
  uint64_t v60 = (void **)(v56 + v59);
  uint64_t v61 = (void **)(v57 + v59);
  uint64_t v62 = sub_10003B754(&qword_100794BB0);
  uint64_t v63 = *(void *)(v62 - 8);
  uint64_t v64 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v63 + 48);
  LODWORD(v58) = v64(v60, 1, v62);
  int v65 = v64(v61, 1, v62);
  if (v58)
  {
    if (!v65)
    {
      uint64_t v66 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v67 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v151 = *v61;
              char *v60 = *v61;
              id v152 = v151;
              goto LABEL_104;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v150 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v150 - 8) + 16))(v60, v61, v150);
LABEL_104:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v60, v61, *(void *)(*(void *)(v67 - 8) + 64));
              break;
          }
          uint64_t v153 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v154 = v153[5];
          id v155 = (char *)v60 + v154;
          id v156 = (char *)v61 + v154;
          if (!*(void **)((char *)v61 + v154 + 8)) {
            goto LABEL_108;
          }
          v720 = v153;
          *(void *)id v155 = *(void *)v156;
          *((void *)v155 + 1) = *((void *)v156 + 1);
          id v157 = (void *)*((void *)v156 + 2);
          uint64_t v850 = *((void *)v156 + 4);
          __dstg = (void *)*((void *)v156 + 3);
          v783 = (void *)*((void *)v156 + 6);
          uint64_t v821 = *((void *)v156 + 5);
          uint64_t v754 = *((void *)v156 + 7);
          unsigned __int8 v730 = v156[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v157, (uint64_t)__dstg, v850, v821, (uint64_t)v783, v754, v730);
          *((void *)v155 + 2) = v157;
          *((void *)v155 + 3) = __dstg;
          *((void *)v155 + 4) = v850;
          *((void *)v155 + 5) = v821;
          *((void *)v155 + 6) = v783;
          *((void *)v155 + 7) = v754;
          v155[64] = v730;
          v155[65] = v156[65];
          v155[66] = v156[66];
          v155[67] = v156[67];
          v155[68] = v156[68];
          int v158 = v156[120];
          if (v158 == 255)
          {
            long long v159 = *(_OWORD *)(v156 + 72);
            long long v160 = *(_OWORD *)(v156 + 88);
            long long v161 = *(_OWORD *)(v156 + 104);
            v155[120] = v156[120];
            *(_OWORD *)(v155 + 88) = v160;
            *(_OWORD *)(v155 + 104) = v161;
            *(_OWORD *)(v155 + 72) = v159;
          }
          else
          {
            char __dsth = v158 & 1;
            uint64_t v168 = (void *)*((void *)v156 + 9);
            uint64_t v822 = *((void *)v156 + 11);
            uint64_t v851 = *((void *)v156 + 10);
            uint64_t v755 = *((void *)v156 + 13);
            v784 = (void *)*((void *)v156 + 12);
            uint64_t v731 = *((void *)v156 + 14);
            sub_10003BED8(v168, v851, v822, (uint64_t)v784, v755, v731, v158 & 1);
            *((void *)v155 + 9) = v168;
            *((void *)v155 + 10) = v851;
            *((void *)v155 + 11) = v822;
            *((void *)v155 + 12) = v784;
            *((void *)v155 + 13) = v755;
            *((void *)v155 + 14) = v731;
            v155[120] = __dsth;
          }
          v155[121] = v156[121];
          uint64_t v153 = v720;
          goto LABEL_111;
        case 1u:
          uint64_t v71 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v173 = *v61;
              char *v60 = *v61;
              id v174 = v173;
              goto LABEL_115;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v172 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v172 - 8) + 16))(v60, v61, v172);
LABEL_115:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v60, v61, *(void *)(*(void *)(v71 - 8) + 64));
              break;
          }
          uint64_t v153 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v175 = v153[5];
          id v155 = (char *)v60 + v175;
          id v156 = (char *)v61 + v175;
          if (*(void **)((char *)v61 + v175 + 8))
          {
            v721 = v153;
            *(void *)id v155 = *(void *)v156;
            *((void *)v155 + 1) = *((void *)v156 + 1);
            id v176 = (void *)*((void *)v156 + 2);
            uint64_t v852 = *((void *)v156 + 4);
            __dstuint64_t i = (void *)*((void *)v156 + 3);
            v785 = (void *)*((void *)v156 + 6);
            uint64_t v823 = *((void *)v156 + 5);
            uint64_t v756 = *((void *)v156 + 7);
            unsigned __int8 v732 = v156[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v176, (uint64_t)__dsti, v852, v823, (uint64_t)v785, v756, v732);
            *((void *)v155 + 2) = v176;
            *((void *)v155 + 3) = __dsti;
            *((void *)v155 + 4) = v852;
            *((void *)v155 + 5) = v823;
            *((void *)v155 + 6) = v785;
            *((void *)v155 + 7) = v756;
            v155[64] = v732;
            v155[65] = v156[65];
            v155[66] = v156[66];
            v155[67] = v156[67];
            v155[68] = v156[68];
            int v177 = v156[120];
            if (v177 == 255)
            {
              long long v178 = *(_OWORD *)(v156 + 72);
              long long v179 = *(_OWORD *)(v156 + 88);
              long long v180 = *(_OWORD *)(v156 + 104);
              v155[120] = v156[120];
              *(_OWORD *)(v155 + 88) = v179;
              *(_OWORD *)(v155 + 104) = v180;
              *(_OWORD *)(v155 + 72) = v178;
            }
            else
            {
              char __dstj = v177 & 1;
              uint64_t v181 = (void *)*((void *)v156 + 9);
              uint64_t v824 = *((void *)v156 + 11);
              uint64_t v853 = *((void *)v156 + 10);
              uint64_t v757 = *((void *)v156 + 13);
              v786 = (void *)*((void *)v156 + 12);
              uint64_t v733 = *((void *)v156 + 14);
              sub_10003BED8(v181, v853, v824, (uint64_t)v786, v757, v733, v177 & 1);
              *((void *)v155 + 9) = v181;
              *((void *)v155 + 10) = v853;
              *((void *)v155 + 11) = v824;
              *((void *)v155 + 12) = v786;
              *((void *)v155 + 13) = v757;
              *((void *)v155 + 14) = v733;
              v155[120] = __dstj;
            }
            v155[121] = v156[121];
            uint64_t v153 = v721;
          }
          else
          {
LABEL_108:
            long long v162 = *(_OWORD *)v156;
            long long v163 = *((_OWORD *)v156 + 1);
            long long v164 = *((_OWORD *)v156 + 3);
            *((_OWORD *)v155 + 2) = *((_OWORD *)v156 + 2);
            *((_OWORD *)v155 + 3) = v164;
            *(_OWORD *)id v155 = v162;
            *((_OWORD *)v155 + 1) = v163;
            long long v165 = *((_OWORD *)v156 + 4);
            long long v166 = *((_OWORD *)v156 + 5);
            long long v167 = *((_OWORD *)v156 + 6);
            *(_OWORD *)(v155 + 106) = *(_OWORD *)(v156 + 106);
            *((_OWORD *)v155 + 5) = v166;
            *((_OWORD *)v155 + 6) = v167;
            *((_OWORD *)v155 + 4) = v165;
          }
LABEL_111:
          *((unsigned char *)v60 + v153[6]) = *((unsigned char *)v61 + v153[6]);
          *((unsigned char *)v60 + v153[7]) = *((unsigned char *)v61 + v153[7]);
          *((unsigned char *)v60 + v153[8]) = *((unsigned char *)v61 + v153[8]);
          *((unsigned char *)v60 + v153[9]) = *((unsigned char *)v61 + v153[9]);
          *((unsigned char *)v60 + v153[10]) = *((unsigned char *)v61 + v153[10]);
          uint64_t v169 = v153[11];
          uint64_t v170 = *(void **)((char *)v61 + v169);
          *(void **)((char *)v60 + v169) = v170;
          id v171 = v170;
          goto LABEL_158;
        case 2u:
          uint64_t v816 = v62;
          uint64_t v72 = *v61;
          char *v60 = *v61;
          uint64_t v73 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v842 = (void **)((char *)v61 + v73);
          __dst = (void **)((char *)v60 + v73);
          uint64_t v74 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          v779 = *(void **)(v74 - 8);
          id v75 = (unsigned int (*)(void **, uint64_t, uint64_t))v779[6];
          id v76 = v72;
          if (v75(v842, 1, v74))
          {
            uint64_t v77 = sub_10003B754(&qword_10078C890);
            memcpy(__dst, v842, *(void *)(*(void *)(v77 - 8) + 64));
            uint64_t v62 = v816;
            goto LABEL_158;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v220 = *v842;
              *__dst = *v842;
              id v221 = v220;
              goto LABEL_146;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v218 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v218 - 8) + 16))(__dst, v842, v218);
LABEL_146:
              swift_storeEnumTagMultiPayload();
              uint64_t v219 = v779;
              uint64_t v62 = v816;
              break;
            default:
              memcpy(__dst, v842, v779[8]);
              uint64_t v219 = v779;
              uint64_t v62 = v816;
              break;
          }
          goto LABEL_157;
        case 3u:
          uint64_t v78 = *v61;
          char *v60 = *v61;
          uint64_t v79 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v843 = (void **)((char *)v61 + v79);
          __dst = (void **)((char *)v60 + v79);
          uint64_t v74 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          v780 = *(void **)(v74 - 8);
          v817 = (unsigned int (*)(void **, uint64_t, uint64_t))v780[6];
          id v80 = v78;
          uint64_t v81 = v843;
          if (v817(v843, 1, v74)) {
            goto LABEL_59;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v223 = *v843;
              *__dst = *v843;
              id v224 = v223;
              goto LABEL_151;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v222 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v222 - 8) + 16))(__dst, v843, v222);
LABEL_151:
              swift_storeEnumTagMultiPayload();
              uint64_t v219 = v780;
              break;
            default:
              memcpy(__dst, v843, v780[8]);
              uint64_t v219 = v780;
              break;
          }
          goto LABEL_157;
        case 4u:
          uint64_t v82 = *v61;
          char *v60 = *v61;
          uint64_t v83 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v844 = (void **)((char *)v61 + v83);
          __dst = (void **)((char *)v60 + v83);
          uint64_t v74 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          v781 = *(void **)(v74 - 8);
          v818 = (unsigned int (*)(void **, uint64_t, uint64_t))v781[6];
          id v84 = v82;
          uint64_t v81 = v844;
          if (v818(v844, 1, v74))
          {
LABEL_59:
            uint64_t v85 = sub_10003B754(&qword_10078C890);
            memcpy(__dst, v81, *(void *)(*(void *)(v85 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v226 = *v844;
                *__dst = *v844;
                id v227 = v226;
                goto LABEL_156;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v225 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v225 - 8) + 16))(__dst, v844, v225);
LABEL_156:
                swift_storeEnumTagMultiPayload();
                uint64_t v219 = v781;
                break;
              default:
                memcpy(__dst, v844, v781[8]);
                uint64_t v219 = v781;
                break;
            }
LABEL_157:
            ((void (*)(void **, void, uint64_t, uint64_t))v219[7])(__dst, 0, 1, v74);
          }
LABEL_158:
          swift_storeEnumTagMultiPayload();
LABEL_159:
          uint64_t v228 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
          *((unsigned char *)v60 + v228[5]) = *((unsigned char *)v61 + v228[5]);
          uint64_t v229 = v228[6];
          long long v230 = *(void **)((char *)v61 + v229);
          *(void **)((char *)v60 + v229) = v230;
          uint64_t v231 = v228[7];
          long long v232 = *(void **)((char *)v61 + v231);
          *(void **)((char *)v60 + v231) = v232;
          *((unsigned char *)v60 + v228[8]) = *((unsigned char *)v61 + v228[8]);
          uint64_t v233 = v228[9];
          char v234 = (char *)v60 + v233;
          long long v235 = (char *)v61 + v233;
          char v236 = v235[8];
          *(void *)char v234 = *(void *)v235;
          v234[8] = v236;
          *(void **)((char *)v60 + v228[10]) = *(void **)((char *)v61 + v228[10]);
          uint64_t v237 = v228[11];
          id v238 = *(void **)((char *)v61 + v237);
          *(void **)((char *)v60 + v237) = v238;
          *(void **)((char *)v60 + *(int *)(v62 + 48)) = *(void **)((char *)v61 + *(int *)(v62 + 48));
          uint64_t v239 = *(void (**)(void **, void, uint64_t, uint64_t))(v63 + 56);
          id v240 = v230;
          id v241 = v232;
          swift_bridgeObjectRetain();
          id v242 = v238;
          v239(v60, 0, 1, v62);
          break;
        case 5u:
          char *v60 = *v61;
          *((unsigned char *)v60 + 8) = *((unsigned char *)v61 + 8);
          *((unsigned char *)v60 + 9) = *((unsigned char *)v61 + 9);
          *((unsigned char *)v60 + 10) = *((unsigned char *)v61 + 10);
          id v86 = v61[2];
          v60[2] = v86;
          id v87 = v86;
          goto LABEL_158;
        case 6u:
          uint64_t v95 = *v61;
          char *v60 = *v61;
          id v96 = v95;
          goto LABEL_158;
        case 7u:
          uint64_t v88 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v89 = *(void *)(v88 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v89 + 48))(v61, 1, v88))
          {
            uint64_t v90 = sub_10003B754(&qword_10078C518);
            memcpy(v60, v61, *(void *)(*(void *)(v90 - 8) + 64));
          }
          else
          {
            char *v60 = *v61;
            uint64_t v125 = *(int *)(v88 + 20);
            v848 = (char *)v61 + v125;
            __dste = (char *)v60 + v125;
            uint64_t v126 = type metadata accessor for REMHashtagLabelSpecifier();
            v782 = *(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 16);
            swift_bridgeObjectRetain();
            v782(__dste, v848, v126);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v89 + 56))(v60, 0, 1, v88);
          }
          uint64_t v127 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          long long v128 = (void **)((char *)v60 + v127);
          long long v129 = (void **)((char *)v61 + v127);
          if (v129[1])
          {
            *long long v128 = *v129;
            v128[1] = v129[1];
            char v130 = (void *)v129[2];
            v128[2] = v130;
            swift_bridgeObjectRetain();
            id v131 = v130;
          }
          else
          {
            long long v132 = *(_OWORD *)v129;
            v128[2] = v129[2];
            *(_OWORD *)long long v128 = v132;
          }
          goto LABEL_158;
        case 8u:
          uint64_t v97 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v98 = *(void *)(v97 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v98 + 48))(v61, 1, v97))
          {
            uint64_t v99 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v60, v61, *(void *)(*(void *)(v99 - 8) + 64));
          }
          else
          {
            uint64_t v138 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v138 - 8) + 16))(v60, v61, v138);
            *((unsigned char *)v60 + *(int *)(v97 + 20)) = *((unsigned char *)v61 + *(int *)(v97 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v98 + 56))(v60, 0, 1, v97);
          }
          uint64_t v139 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)v60 + *(int *)(v139 + 20)) = *(void **)((char *)v61 + *(int *)(v139 + 20));
          goto LABEL_158;
        case 9u:
          *(unsigned char *)uint64_t v60 = *(unsigned char *)v61;
          uint64_t v91 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          id v92 = (char *)v60 + v91;
          uint64_t v93 = (char *)v61 + v91;
          uint64_t v94 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v94 - 8) + 16))(v92, v93, v94);
          goto LABEL_158;
        default:
          memcpy(v60, v61, *(void *)(*(void *)(v66 - 8) + 64));
          goto LABEL_159;
      }
      goto LABEL_177;
    }
LABEL_49:
    uint64_t v68 = sub_10003B754(&qword_100794BA8);
    memcpy(v60, v61, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_177;
  }
  if (v65)
  {
    sub_10003B6F8((uint64_t)v60, &qword_100794BB0);
    goto LABEL_49;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)v60);
    uint64_t v69 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v70 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v183 = *v61;
            char *v60 = *v61;
            id v184 = v183;
            goto LABEL_125;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v182 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v182 - 8) + 16))(v60, v61, v182);
LABEL_125:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v60, v61, *(void *)(*(void *)(v70 - 8) + 64));
            break;
        }
        uint64_t v185 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v186 = v185[5];
        uint64_t v187 = (char *)v60 + v186;
        uint64_t v188 = (char *)v61 + v186;
        if (!*(void **)((char *)v61 + v186 + 8)) {
          goto LABEL_129;
        }
        v758 = v185;
        *(void *)uint64_t v187 = *(void *)v188;
        *((void *)v187 + 1) = *((void *)v188 + 1);
        uint64_t v189 = (void *)*((void *)v188 + 2);
        uint64_t v734 = *((void *)v188 + 3);
        uint64_t v190 = *((void *)v188 + 4);
        uint64_t v854 = *((void *)v188 + 6);
        __dstk = (void *)*((void *)v188 + 5);
        uint64_t v825 = *((void *)v188 + 7);
        unsigned __int8 v787 = v188[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v189, v734, v190, (uint64_t)__dstk, v854, v825, v787);
        *((void *)v187 + 2) = v189;
        *((void *)v187 + 3) = v734;
        *((void *)v187 + 4) = v190;
        *((void *)v187 + 5) = __dstk;
        *((void *)v187 + 6) = v854;
        *((void *)v187 + 7) = v825;
        v187[64] = v787;
        v187[65] = v188[65];
        v187[66] = v188[66];
        v187[67] = v188[67];
        v187[68] = v188[68];
        int v191 = v188[120];
        if (v191 == 255)
        {
          long long v192 = *(_OWORD *)(v188 + 72);
          long long v193 = *(_OWORD *)(v188 + 88);
          long long v194 = *(_OWORD *)(v188 + 104);
          v187[120] = v188[120];
          *(_OWORD *)(v187 + 88) = v193;
          *(_OWORD *)(v187 + 104) = v194;
          *(_OWORD *)(v187 + 72) = v192;
        }
        else
        {
          char __dstl = v191 & 1;
          id v202 = (void *)*((void *)v188 + 9);
          uint64_t v201 = *((void *)v188 + 10);
          uint64_t v826 = *((void *)v188 + 12);
          uint64_t v855 = *((void *)v188 + 11);
          v788 = (void *)*((void *)v188 + 13);
          uint64_t v735 = *((void *)v188 + 14);
          sub_10003BED8(v202, v201, v855, v826, (uint64_t)v788, v735, v191 & 1);
          *((void *)v187 + 9) = v202;
          *((void *)v187 + 10) = v201;
          *((void *)v187 + 11) = v855;
          *((void *)v187 + 12) = v826;
          *((void *)v187 + 13) = v788;
          *((void *)v187 + 14) = v735;
          v187[120] = __dstl;
        }
        v187[121] = v188[121];
        uint64_t v185 = v758;
        goto LABEL_132;
      case 1u:
        uint64_t v100 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v207 = *v61;
            char *v60 = *v61;
            id v208 = v207;
            goto LABEL_136;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v206 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v206 - 8) + 16))(v60, v61, v206);
LABEL_136:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v60, v61, *(void *)(*(void *)(v100 - 8) + 64));
            break;
        }
        uint64_t v185 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v209 = v185[5];
        uint64_t v187 = (char *)v60 + v209;
        uint64_t v188 = (char *)v61 + v209;
        if (*(void **)((char *)v61 + v209 + 8))
        {
          v759 = v185;
          *(void *)uint64_t v187 = *(void *)v188;
          *((void *)v187 + 1) = *((void *)v188 + 1);
          uint64_t v210 = (void *)*((void *)v188 + 2);
          uint64_t v736 = *((void *)v188 + 3);
          uint64_t v211 = *((void *)v188 + 4);
          uint64_t v856 = *((void *)v188 + 6);
          __dstm = (void *)*((void *)v188 + 5);
          uint64_t v827 = *((void *)v188 + 7);
          unsigned __int8 v789 = v188[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v210, v736, v211, (uint64_t)__dstm, v856, v827, v789);
          *((void *)v187 + 2) = v210;
          *((void *)v187 + 3) = v736;
          *((void *)v187 + 4) = v211;
          *((void *)v187 + 5) = __dstm;
          *((void *)v187 + 6) = v856;
          *((void *)v187 + 7) = v827;
          v187[64] = v789;
          v187[65] = v188[65];
          v187[66] = v188[66];
          v187[67] = v188[67];
          v187[68] = v188[68];
          int v212 = v188[120];
          if (v212 == 255)
          {
            long long v213 = *(_OWORD *)(v188 + 72);
            long long v214 = *(_OWORD *)(v188 + 88);
            long long v215 = *(_OWORD *)(v188 + 104);
            v187[120] = v188[120];
            *(_OWORD *)(v187 + 88) = v214;
            *(_OWORD *)(v187 + 104) = v215;
            *(_OWORD *)(v187 + 72) = v213;
          }
          else
          {
            char __dstn = v212 & 1;
            uint64_t v217 = (void *)*((void *)v188 + 9);
            uint64_t v216 = *((void *)v188 + 10);
            uint64_t v828 = *((void *)v188 + 12);
            uint64_t v857 = *((void *)v188 + 11);
            v790 = (void *)*((void *)v188 + 13);
            uint64_t v737 = *((void *)v188 + 14);
            sub_10003BED8(v217, v216, v857, v828, (uint64_t)v790, v737, v212 & 1);
            *((void *)v187 + 9) = v217;
            *((void *)v187 + 10) = v216;
            *((void *)v187 + 11) = v857;
            *((void *)v187 + 12) = v828;
            *((void *)v187 + 13) = v790;
            *((void *)v187 + 14) = v737;
            v187[120] = __dstn;
          }
          v187[121] = v188[121];
          uint64_t v185 = v759;
        }
        else
        {
LABEL_129:
          long long v195 = *(_OWORD *)v188;
          long long v196 = *((_OWORD *)v188 + 1);
          long long v197 = *((_OWORD *)v188 + 3);
          *((_OWORD *)v187 + 2) = *((_OWORD *)v188 + 2);
          *((_OWORD *)v187 + 3) = v197;
          *(_OWORD *)uint64_t v187 = v195;
          *((_OWORD *)v187 + 1) = v196;
          long long v198 = *((_OWORD *)v188 + 4);
          long long v199 = *((_OWORD *)v188 + 5);
          long long v200 = *((_OWORD *)v188 + 6);
          *(_OWORD *)(v187 + 106) = *(_OWORD *)(v188 + 106);
          *((_OWORD *)v187 + 5) = v199;
          *((_OWORD *)v187 + 6) = v200;
          *((_OWORD *)v187 + 4) = v198;
        }
LABEL_132:
        *((unsigned char *)v60 + v185[6]) = *((unsigned char *)v61 + v185[6]);
        *((unsigned char *)v60 + v185[7]) = *((unsigned char *)v61 + v185[7]);
        *((unsigned char *)v60 + v185[8]) = *((unsigned char *)v61 + v185[8]);
        *((unsigned char *)v60 + v185[9]) = *((unsigned char *)v61 + v185[9]);
        *((unsigned char *)v60 + v185[10]) = *((unsigned char *)v61 + v185[10]);
        uint64_t v203 = v185[11];
        uint64_t v204 = *(void **)((char *)v61 + v203);
        *(void **)((char *)v60 + v203) = v204;
        id v205 = v204;
        goto LABEL_175;
      case 2u:
        id v101 = *v61;
        char *v60 = *v61;
        uint64_t v102 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v845 = (void **)((char *)v61 + v102);
        __dsta = (void **)((char *)v60 + v102);
        uint64_t v103 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v819 = *(void *)(v103 - 8);
        uint64_t v104 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v819 + 48);
        id v105 = v101;
        id v106 = v845;
        if (v104(v845, 1, v103)) {
          goto LABEL_72;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v244 = *v845;
            *__dsta = *v845;
            id v245 = v244;
            goto LABEL_163;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v243 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v243 - 8) + 16))(__dsta, v845, v243);
LABEL_163:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dsta, v845, *(void *)(v819 + 64));
            break;
        }
        goto LABEL_174;
      case 3u:
        uint64_t v107 = *v61;
        char *v60 = *v61;
        uint64_t v108 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v846 = (void **)((char *)v61 + v108);
        __dsta = (void **)((char *)v60 + v108);
        uint64_t v103 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v819 = *(void *)(v103 - 8);
        id v109 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v819 + 48);
        id v110 = v107;
        id v106 = v846;
        if (v109(v846, 1, v103)) {
          goto LABEL_72;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v247 = *v846;
            *__dsta = *v846;
            id v248 = v247;
            goto LABEL_168;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v246 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v246 - 8) + 16))(__dsta, v846, v246);
LABEL_168:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dsta, v846, *(void *)(v819 + 64));
            break;
        }
        goto LABEL_174;
      case 4u:
        uint64_t v112 = *v61;
        char *v60 = *v61;
        uint64_t v113 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v847 = (void **)((char *)v61 + v113);
        __dsta = (void **)((char *)v60 + v113);
        uint64_t v103 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v819 = *(void *)(v103 - 8);
        int v114 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v819 + 48);
        id v115 = v112;
        id v106 = v847;
        if (v114(v847, 1, v103))
        {
LABEL_72:
          uint64_t v111 = sub_10003B754(&qword_10078C890);
          memcpy(__dsta, v106, *(void *)(*(void *)(v111 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              long long v250 = *v847;
              *__dsta = *v847;
              id v251 = v250;
              goto LABEL_173;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v249 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v249 - 8) + 16))(__dsta, v847, v249);
LABEL_173:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dsta, v847, *(void *)(v819 + 64));
              break;
          }
LABEL_174:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v819 + 56))(__dsta, 0, 1, v103);
        }
LABEL_175:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        char *v60 = *v61;
        *((unsigned char *)v60 + 8) = *((unsigned char *)v61 + 8);
        *((unsigned char *)v60 + 9) = *((unsigned char *)v61 + 9);
        *((unsigned char *)v60 + 10) = *((unsigned char *)v61 + 10);
        char v116 = v61[2];
        v60[2] = v116;
        id v117 = v116;
        goto LABEL_175;
      case 6u:
        char v133 = *v61;
        char *v60 = *v61;
        id v134 = v133;
        goto LABEL_175;
      case 7u:
        uint64_t v118 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v119 = *(void *)(v118 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v119 + 48))(v61, 1, v118))
        {
          uint64_t v120 = sub_10003B754(&qword_10078C518);
          memcpy(v60, v61, *(void *)(*(void *)(v120 - 8) + 64));
        }
        else
        {
          char *v60 = *v61;
          uint64_t v140 = *(int *)(v118 + 20);
          v849 = (char *)v61 + v140;
          __dstf = (char *)v60 + v140;
          uint64_t v141 = type metadata accessor for REMHashtagLabelSpecifier();
          v820 = *(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16);
          swift_bridgeObjectRetain();
          v820(__dstf, v849, v141);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v119 + 56))(v60, 0, 1, v118);
        }
        uint64_t v142 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v143 = (void **)((char *)v60 + v142);
        uint64_t v144 = (void **)((char *)v61 + v142);
        if (v144[1])
        {
          void *v143 = *v144;
          v143[1] = v144[1];
          uint64_t v145 = (void *)v144[2];
          v143[2] = v145;
          swift_bridgeObjectRetain();
          id v146 = v145;
        }
        else
        {
          long long v147 = *(_OWORD *)v144;
          v143[2] = v144[2];
          *(_OWORD *)uint64_t v143 = v147;
        }
        goto LABEL_175;
      case 8u:
        uint64_t v135 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v136 = *(void *)(v135 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v136 + 48))(v61, 1, v135))
        {
          uint64_t v137 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v60, v61, *(void *)(*(void *)(v137 - 8) + 64));
        }
        else
        {
          uint64_t v148 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v148 - 8) + 16))(v60, v61, v148);
          *((unsigned char *)v60 + *(int *)(v135 + 20)) = *((unsigned char *)v61 + *(int *)(v135 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v136 + 56))(v60, 0, 1, v135);
        }
        uint64_t v149 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)v60 + *(int *)(v149 + 20)) = *(void **)((char *)v61 + *(int *)(v149 + 20));
        goto LABEL_175;
      case 9u:
        *(unsigned char *)uint64_t v60 = *(unsigned char *)v61;
        uint64_t v121 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v122 = (char *)v60 + v121;
        id v123 = (char *)v61 + v121;
        uint64_t v124 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 16))(v122, v123, v124);
        goto LABEL_175;
      default:
        memcpy(v60, v61, *(void *)(*(void *)(v69 - 8) + 64));
        break;
    }
  }
  long long v252 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
  *((unsigned char *)v60 + v252[5]) = *((unsigned char *)v61 + v252[5]);
  uint64_t v253 = v252[6];
  char v254 = *(void **)((char *)v61 + v253);
  long long v255 = *(void **)((char *)v60 + v253);
  *(void **)((char *)v60 + v253) = v254;
  id v256 = v254;

  uint64_t v257 = v252[7];
  id v258 = *(void **)((char *)v60 + v257);
  uint64_t v259 = *(void **)((char *)v61 + v257);
  *(void **)((char *)v60 + v257) = v259;
  id v260 = v259;

  *((unsigned char *)v60 + v252[8]) = *((unsigned char *)v61 + v252[8]);
  uint64_t v261 = v252[9];
  uint64_t v262 = (char *)v60 + v261;
  uint64_t v263 = (char *)v61 + v261;
  char v264 = v263[8];
  *(void *)uint64_t v262 = *(void *)v263;
  v262[8] = v264;
  *(void **)((char *)v60 + v252[10]) = *(void **)((char *)v61 + v252[10]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v265 = v252[11];
  uint64_t v266 = *(void **)((char *)v61 + v265);
  v267 = *(void **)((char *)v60 + v265);
  *(void **)((char *)v60 + v265) = v266;
  id v268 = v266;

  *(void **)((char *)v60 + *(int *)(v62 + 48)) = *(void **)((char *)v61 + *(int *)(v62 + 48));
LABEL_177:
  uint64_t v269 = a3[18];
  uint64_t v270 = a1 + v269;
  uint64_t v271 = a2 + v269;
  *(unsigned char *)uint64_t v270 = *(unsigned char *)(a2 + v269);
  uint64_t v272 = *(void *)(a2 + v269 + 16);
  *(void *)(v270 + 8) = *(void *)(a2 + v269 + 8);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v270 + 16) = v272;
  uint64_t v273 = *(int *)(sub_10003B754(&qword_100794B58) + 40);
  id v274 = (void **)(v270 + v273);
  uint64_t v275 = (void **)(v271 + v273);
  uint64_t v276 = sub_10003B754(&qword_100794B98);
  uint64_t v277 = *(void *)(v276 - 8);
  uint64_t v278 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v277 + 48);
  LODWORD(v272) = v278(v274, 1, v276);
  int v279 = v278(v275, 1, v276);
  if (v272)
  {
    if (!v279)
    {
      uint64_t v280 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v281 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v365 = *v275;
              *id v274 = *v275;
              id v366 = v365;
              goto LABEL_238;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v364 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v364 - 8) + 16))(v274, v275, v364);
LABEL_238:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v274, v275, *(void *)(*(void *)(v281 - 8) + 64));
              break;
          }
          uint64_t v367 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v368 = v367[5];
          id v369 = (char *)v274 + v368;
          v370 = (char *)v275 + v368;
          if (!*(void **)((char *)v275 + v368 + 8)) {
            goto LABEL_242;
          }
          v722 = v367;
          *(void *)id v369 = *(void *)v370;
          *((void *)v369 + 1) = *((void *)v370 + 1);
          uint64_t v371 = (void *)*((void *)v370 + 2);
          uint64_t v866 = *((void *)v370 + 4);
          __dstq = (void *)*((void *)v370 + 3);
          v795 = (void *)*((void *)v370 + 6);
          uint64_t v834 = *((void *)v370 + 5);
          uint64_t v760 = *((void *)v370 + 7);
          unsigned __int8 v738 = v370[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v371, (uint64_t)__dstq, v866, v834, (uint64_t)v795, v760, v738);
          *((void *)v369 + 2) = v371;
          *((void *)v369 + 3) = __dstq;
          *((void *)v369 + 4) = v866;
          *((void *)v369 + 5) = v834;
          *((void *)v369 + 6) = v795;
          *((void *)v369 + 7) = v760;
          v369[64] = v738;
          v369[65] = v370[65];
          v369[66] = v370[66];
          v369[67] = v370[67];
          v369[68] = v370[68];
          int v372 = v370[120];
          if (v372 == 255)
          {
            long long v373 = *(_OWORD *)(v370 + 72);
            long long v374 = *(_OWORD *)(v370 + 88);
            long long v375 = *(_OWORD *)(v370 + 104);
            v369[120] = v370[120];
            *(_OWORD *)(v369 + 88) = v374;
            *(_OWORD *)(v369 + 104) = v375;
            *(_OWORD *)(v369 + 72) = v373;
          }
          else
          {
            char __dstr = v372 & 1;
            uint64_t v382 = (void *)*((void *)v370 + 9);
            uint64_t v835 = *((void *)v370 + 11);
            uint64_t v867 = *((void *)v370 + 10);
            uint64_t v761 = *((void *)v370 + 13);
            v796 = (void *)*((void *)v370 + 12);
            uint64_t v739 = *((void *)v370 + 14);
            sub_10003BED8(v382, v867, v835, (uint64_t)v796, v761, v739, v372 & 1);
            *((void *)v369 + 9) = v382;
            *((void *)v369 + 10) = v867;
            *((void *)v369 + 11) = v835;
            *((void *)v369 + 12) = v796;
            *((void *)v369 + 13) = v761;
            *((void *)v369 + 14) = v739;
            v369[120] = __dstr;
          }
          v369[121] = v370[121];
          uint64_t v367 = v722;
          goto LABEL_245;
        case 1u:
          uint64_t v285 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              long long v387 = *v275;
              *id v274 = *v275;
              id v388 = v387;
              goto LABEL_249;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v386 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v386 - 8) + 16))(v274, v275, v386);
LABEL_249:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v274, v275, *(void *)(*(void *)(v285 - 8) + 64));
              break;
          }
          uint64_t v367 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v389 = v367[5];
          id v369 = (char *)v274 + v389;
          v370 = (char *)v275 + v389;
          if (*(void **)((char *)v275 + v389 + 8))
          {
            v723 = v367;
            *(void *)id v369 = *(void *)v370;
            *((void *)v369 + 1) = *((void *)v370 + 1);
            char v390 = (void *)*((void *)v370 + 2);
            uint64_t v868 = *((void *)v370 + 4);
            __dsts = (void *)*((void *)v370 + 3);
            v797 = (void *)*((void *)v370 + 6);
            uint64_t v836 = *((void *)v370 + 5);
            uint64_t v762 = *((void *)v370 + 7);
            unsigned __int8 v740 = v370[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v390, (uint64_t)__dsts, v868, v836, (uint64_t)v797, v762, v740);
            *((void *)v369 + 2) = v390;
            *((void *)v369 + 3) = __dsts;
            *((void *)v369 + 4) = v868;
            *((void *)v369 + 5) = v836;
            *((void *)v369 + 6) = v797;
            *((void *)v369 + 7) = v762;
            v369[64] = v740;
            v369[65] = v370[65];
            v369[66] = v370[66];
            v369[67] = v370[67];
            v369[68] = v370[68];
            int v391 = v370[120];
            if (v391 == 255)
            {
              long long v392 = *(_OWORD *)(v370 + 72);
              long long v393 = *(_OWORD *)(v370 + 88);
              long long v394 = *(_OWORD *)(v370 + 104);
              v369[120] = v370[120];
              *(_OWORD *)(v369 + 88) = v393;
              *(_OWORD *)(v369 + 104) = v394;
              *(_OWORD *)(v369 + 72) = v392;
            }
            else
            {
              char __dstt = v391 & 1;
              v395 = (void *)*((void *)v370 + 9);
              uint64_t v837 = *((void *)v370 + 11);
              uint64_t v869 = *((void *)v370 + 10);
              uint64_t v763 = *((void *)v370 + 13);
              v798 = (void *)*((void *)v370 + 12);
              uint64_t v741 = *((void *)v370 + 14);
              sub_10003BED8(v395, v869, v837, (uint64_t)v798, v763, v741, v391 & 1);
              *((void *)v369 + 9) = v395;
              *((void *)v369 + 10) = v869;
              *((void *)v369 + 11) = v837;
              *((void *)v369 + 12) = v798;
              *((void *)v369 + 13) = v763;
              *((void *)v369 + 14) = v741;
              v369[120] = __dstt;
            }
            v369[121] = v370[121];
            uint64_t v367 = v723;
          }
          else
          {
LABEL_242:
            long long v376 = *(_OWORD *)v370;
            long long v377 = *((_OWORD *)v370 + 1);
            long long v378 = *((_OWORD *)v370 + 3);
            *((_OWORD *)v369 + 2) = *((_OWORD *)v370 + 2);
            *((_OWORD *)v369 + 3) = v378;
            *(_OWORD *)id v369 = v376;
            *((_OWORD *)v369 + 1) = v377;
            long long v379 = *((_OWORD *)v370 + 4);
            long long v380 = *((_OWORD *)v370 + 5);
            long long v381 = *((_OWORD *)v370 + 6);
            *(_OWORD *)(v369 + 106) = *(_OWORD *)(v370 + 106);
            *((_OWORD *)v369 + 5) = v380;
            *((_OWORD *)v369 + 6) = v381;
            *((_OWORD *)v369 + 4) = v379;
          }
LABEL_245:
          *((unsigned char *)v274 + v367[6]) = *((unsigned char *)v275 + v367[6]);
          *((unsigned char *)v274 + v367[7]) = *((unsigned char *)v275 + v367[7]);
          *((unsigned char *)v274 + v367[8]) = *((unsigned char *)v275 + v367[8]);
          *((unsigned char *)v274 + v367[9]) = *((unsigned char *)v275 + v367[9]);
          *((unsigned char *)v274 + v367[10]) = *((unsigned char *)v275 + v367[10]);
          uint64_t v383 = v367[11];
          v384 = *(void **)((char *)v275 + v383);
          *(void **)((char *)v274 + v383) = v384;
          id v385 = v384;
          goto LABEL_292;
        case 2u:
          uint64_t v829 = v276;
          uint64_t v286 = *v275;
          *id v274 = *v275;
          uint64_t v287 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v858 = (void **)((char *)v275 + v287);
          __dstb = (void **)((char *)v274 + v287);
          uint64_t v288 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          v791 = *(void **)(v288 - 8);
          uint64_t v289 = (unsigned int (*)(void **, uint64_t, uint64_t))v791[6];
          id v290 = v286;
          if (v289(v858, 1, v288))
          {
            uint64_t v291 = sub_10003B754(&qword_10078C890);
            memcpy(__dstb, v858, *(void *)(*(void *)(v291 - 8) + 64));
            uint64_t v276 = v829;
            goto LABEL_292;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v434 = *v858;
              *__dstb = *v858;
              id v435 = v434;
              goto LABEL_280;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v432 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v432 - 8) + 16))(__dstb, v858, v432);
LABEL_280:
              swift_storeEnumTagMultiPayload();
              uint64_t v433 = v791;
              uint64_t v276 = v829;
              break;
            default:
              memcpy(__dstb, v858, v791[8]);
              uint64_t v433 = v791;
              uint64_t v276 = v829;
              break;
          }
          goto LABEL_291;
        case 3u:
          uint64_t v292 = *v275;
          *id v274 = *v275;
          uint64_t v293 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v859 = (void **)((char *)v275 + v293);
          __dstb = (void **)((char *)v274 + v293);
          uint64_t v288 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          v792 = *(void **)(v288 - 8);
          v830 = (unsigned int (*)(void **, uint64_t, uint64_t))v792[6];
          id v294 = v292;
          id v295 = v859;
          if (v830(v859, 1, v288)) {
            goto LABEL_193;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v437 = *v859;
              *__dstb = *v859;
              id v438 = v437;
              goto LABEL_285;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v436 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v436 - 8) + 16))(__dstb, v859, v436);
LABEL_285:
              swift_storeEnumTagMultiPayload();
              uint64_t v433 = v792;
              break;
            default:
              memcpy(__dstb, v859, v792[8]);
              uint64_t v433 = v792;
              break;
          }
          goto LABEL_291;
        case 4u:
          id v296 = *v275;
          *id v274 = *v275;
          uint64_t v297 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v860 = (void **)((char *)v275 + v297);
          __dstb = (void **)((char *)v274 + v297);
          uint64_t v288 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          v793 = *(void **)(v288 - 8);
          v831 = (unsigned int (*)(void **, uint64_t, uint64_t))v793[6];
          id v298 = v296;
          id v295 = v860;
          if (v831(v860, 1, v288))
          {
LABEL_193:
            uint64_t v299 = sub_10003B754(&qword_10078C890);
            memcpy(__dstb, v295, *(void *)(*(void *)(v299 - 8) + 64));
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                uint64_t v440 = *v860;
                *__dstb = *v860;
                id v441 = v440;
                goto LABEL_290;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v439 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v439 - 8) + 16))(__dstb, v860, v439);
LABEL_290:
                swift_storeEnumTagMultiPayload();
                uint64_t v433 = v793;
                break;
              default:
                memcpy(__dstb, v860, v793[8]);
                uint64_t v433 = v793;
                break;
            }
LABEL_291:
            ((void (*)(void **, void, uint64_t, uint64_t))v433[7])(__dstb, 0, 1, v288);
          }
LABEL_292:
          swift_storeEnumTagMultiPayload();
LABEL_293:
          unsigned __int8 v442 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
          *((unsigned char *)v274 + v442[5]) = *((unsigned char *)v275 + v442[5]);
          uint64_t v443 = v442[6];
          unsigned __int8 v444 = *(void **)((char *)v275 + v443);
          *(void **)((char *)v274 + v443) = v444;
          *(void **)((char *)v274 + v442[7]) = *(void **)((char *)v275 + v442[7]);
          *(void **)((char *)v274 + v442[8]) = *(void **)((char *)v275 + v442[8]);
          *((unsigned char *)v274 + v442[9]) = *((unsigned char *)v275 + v442[9]);
          *(void **)((char *)v274 + *(int *)(v276 + 48)) = *(void **)((char *)v275 + *(int *)(v276 + 48));
          uint64_t v445 = *(void (**)(void **, void, uint64_t, uint64_t))(v277 + 56);
          id v446 = v444;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v445(v274, 0, 1, v276);
          break;
        case 5u:
          *id v274 = *v275;
          *((unsigned char *)v274 + 8) = *((unsigned char *)v275 + 8);
          *((unsigned char *)v274 + 9) = *((unsigned char *)v275 + 9);
          *((unsigned char *)v274 + 10) = *((unsigned char *)v275 + 10);
          uint64_t v300 = v275[2];
          v274[2] = v300;
          id v301 = v300;
          goto LABEL_292;
        case 6u:
          uint64_t v309 = *v275;
          *id v274 = *v275;
          id v310 = v309;
          goto LABEL_292;
        case 7u:
          uint64_t v302 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v303 = *(void *)(v302 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v303 + 48))(v275, 1, v302))
          {
            uint64_t v304 = sub_10003B754(&qword_10078C518);
            memcpy(v274, v275, *(void *)(*(void *)(v304 - 8) + 64));
          }
          else
          {
            *id v274 = *v275;
            uint64_t v339 = *(int *)(v302 + 20);
            v864 = (char *)v275 + v339;
            __dsto = (char *)v274 + v339;
            uint64_t v340 = type metadata accessor for REMHashtagLabelSpecifier();
            v794 = *(void (**)(char *, char *, uint64_t))(*(void *)(v340 - 8) + 16);
            swift_bridgeObjectRetain();
            v794(__dsto, v864, v340);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v303 + 56))(v274, 0, 1, v302);
          }
          uint64_t v341 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v342 = (void **)((char *)v274 + v341);
          uint64_t v343 = (void **)((char *)v275 + v341);
          if (v343[1])
          {
            *uint64_t v342 = *v343;
            v342[1] = v343[1];
            uint64_t v344 = (void *)v343[2];
            v342[2] = v344;
            swift_bridgeObjectRetain();
            id v345 = v344;
          }
          else
          {
            long long v346 = *(_OWORD *)v343;
            v342[2] = v343[2];
            *(_OWORD *)uint64_t v342 = v346;
          }
          goto LABEL_292;
        case 8u:
          uint64_t v311 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v312 = *(void *)(v311 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v312 + 48))(v275, 1, v311))
          {
            uint64_t v313 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v274, v275, *(void *)(*(void *)(v313 - 8) + 64));
          }
          else
          {
            uint64_t v352 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v352 - 8) + 16))(v274, v275, v352);
            *((unsigned char *)v274 + *(int *)(v311 + 20)) = *((unsigned char *)v275 + *(int *)(v311 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v312 + 56))(v274, 0, 1, v311);
          }
          uint64_t v353 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)v274 + *(int *)(v353 + 20)) = *(void **)((char *)v275 + *(int *)(v353 + 20));
          goto LABEL_292;
        case 9u:
          *(unsigned char *)id v274 = *(unsigned char *)v275;
          uint64_t v305 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v306 = (char *)v274 + v305;
          uint64_t v307 = (char *)v275 + v305;
          uint64_t v308 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v308 - 8) + 16))(v306, v307, v308);
          goto LABEL_292;
        default:
          memcpy(v274, v275, *(void *)(*(void *)(v280 - 8) + 64));
          goto LABEL_293;
      }
      goto LABEL_311;
    }
LABEL_183:
    uint64_t v282 = sub_10003B754(&qword_100794B90);
    memcpy(v274, v275, *(void *)(*(void *)(v282 - 8) + 64));
    goto LABEL_311;
  }
  if (v279)
  {
    sub_10003B6F8((uint64_t)v274, &qword_100794B98);
    goto LABEL_183;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)v274);
    uint64_t v283 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v284 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v397 = *v275;
            *id v274 = *v275;
            id v398 = v397;
            goto LABEL_259;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v396 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v396 - 8) + 16))(v274, v275, v396);
LABEL_259:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v274, v275, *(void *)(*(void *)(v284 - 8) + 64));
            break;
        }
        uint64_t v399 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v400 = v399[5];
        id v401 = (char *)v274 + v400;
        uint64_t v402 = (char *)v275 + v400;
        if (!*(void **)((char *)v275 + v400 + 8)) {
          goto LABEL_263;
        }
        v764 = v399;
        *(void *)id v401 = *(void *)v402;
        *((void *)v401 + 1) = *((void *)v402 + 1);
        v403 = (void *)*((void *)v402 + 2);
        uint64_t v742 = *((void *)v402 + 3);
        uint64_t v404 = *((void *)v402 + 4);
        uint64_t v870 = *((void *)v402 + 6);
        __dstu = (void *)*((void *)v402 + 5);
        uint64_t v838 = *((void *)v402 + 7);
        unsigned __int8 v799 = v402[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v403, v742, v404, (uint64_t)__dstu, v870, v838, v799);
        *((void *)v401 + 2) = v403;
        *((void *)v401 + 3) = v742;
        *((void *)v401 + 4) = v404;
        *((void *)v401 + 5) = __dstu;
        *((void *)v401 + 6) = v870;
        *((void *)v401 + 7) = v838;
        v401[64] = v799;
        v401[65] = v402[65];
        v401[66] = v402[66];
        v401[67] = v402[67];
        v401[68] = v402[68];
        int v405 = v402[120];
        if (v405 == 255)
        {
          long long v406 = *(_OWORD *)(v402 + 72);
          long long v407 = *(_OWORD *)(v402 + 88);
          long long v408 = *(_OWORD *)(v402 + 104);
          v401[120] = v402[120];
          *(_OWORD *)(v401 + 88) = v407;
          *(_OWORD *)(v401 + 104) = v408;
          *(_OWORD *)(v401 + 72) = v406;
        }
        else
        {
          char __dstv = v405 & 1;
          uint64_t v416 = (void *)*((void *)v402 + 9);
          uint64_t v415 = *((void *)v402 + 10);
          uint64_t v839 = *((void *)v402 + 12);
          uint64_t v871 = *((void *)v402 + 11);
          v800 = (void *)*((void *)v402 + 13);
          uint64_t v743 = *((void *)v402 + 14);
          sub_10003BED8(v416, v415, v871, v839, (uint64_t)v800, v743, v405 & 1);
          *((void *)v401 + 9) = v416;
          *((void *)v401 + 10) = v415;
          *((void *)v401 + 11) = v871;
          *((void *)v401 + 12) = v839;
          *((void *)v401 + 13) = v800;
          *((void *)v401 + 14) = v743;
          v401[120] = __dstv;
        }
        v401[121] = v402[121];
        uint64_t v399 = v764;
        goto LABEL_266;
      case 1u:
        uint64_t v314 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v421 = *v275;
            *id v274 = *v275;
            id v422 = v421;
            goto LABEL_270;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v420 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v420 - 8) + 16))(v274, v275, v420);
LABEL_270:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v274, v275, *(void *)(*(void *)(v314 - 8) + 64));
            break;
        }
        uint64_t v399 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v423 = v399[5];
        id v401 = (char *)v274 + v423;
        uint64_t v402 = (char *)v275 + v423;
        if (*(void **)((char *)v275 + v423 + 8))
        {
          v765 = v399;
          *(void *)id v401 = *(void *)v402;
          *((void *)v401 + 1) = *((void *)v402 + 1);
          uint64_t v424 = (void *)*((void *)v402 + 2);
          uint64_t v744 = *((void *)v402 + 3);
          uint64_t v425 = *((void *)v402 + 4);
          uint64_t v872 = *((void *)v402 + 6);
          __dstw = (void *)*((void *)v402 + 5);
          uint64_t v840 = *((void *)v402 + 7);
          unsigned __int8 v801 = v402[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v424, v744, v425, (uint64_t)__dstw, v872, v840, v801);
          *((void *)v401 + 2) = v424;
          *((void *)v401 + 3) = v744;
          *((void *)v401 + 4) = v425;
          *((void *)v401 + 5) = __dstw;
          *((void *)v401 + 6) = v872;
          *((void *)v401 + 7) = v840;
          v401[64] = v801;
          v401[65] = v402[65];
          v401[66] = v402[66];
          v401[67] = v402[67];
          v401[68] = v402[68];
          int v426 = v402[120];
          if (v426 == 255)
          {
            long long v427 = *(_OWORD *)(v402 + 72);
            long long v428 = *(_OWORD *)(v402 + 88);
            long long v429 = *(_OWORD *)(v402 + 104);
            v401[120] = v402[120];
            *(_OWORD *)(v401 + 88) = v428;
            *(_OWORD *)(v401 + 104) = v429;
            *(_OWORD *)(v401 + 72) = v427;
          }
          else
          {
            char __dstx = v426 & 1;
            v431 = (void *)*((void *)v402 + 9);
            uint64_t v430 = *((void *)v402 + 10);
            uint64_t v841 = *((void *)v402 + 12);
            uint64_t v873 = *((void *)v402 + 11);
            v802 = (void *)*((void *)v402 + 13);
            uint64_t v745 = *((void *)v402 + 14);
            sub_10003BED8(v431, v430, v873, v841, (uint64_t)v802, v745, v426 & 1);
            *((void *)v401 + 9) = v431;
            *((void *)v401 + 10) = v430;
            *((void *)v401 + 11) = v873;
            *((void *)v401 + 12) = v841;
            *((void *)v401 + 13) = v802;
            *((void *)v401 + 14) = v745;
            v401[120] = __dstx;
          }
          v401[121] = v402[121];
          uint64_t v399 = v765;
        }
        else
        {
LABEL_263:
          long long v409 = *(_OWORD *)v402;
          long long v410 = *((_OWORD *)v402 + 1);
          long long v411 = *((_OWORD *)v402 + 3);
          *((_OWORD *)v401 + 2) = *((_OWORD *)v402 + 2);
          *((_OWORD *)v401 + 3) = v411;
          *(_OWORD *)id v401 = v409;
          *((_OWORD *)v401 + 1) = v410;
          long long v412 = *((_OWORD *)v402 + 4);
          long long v413 = *((_OWORD *)v402 + 5);
          long long v414 = *((_OWORD *)v402 + 6);
          *(_OWORD *)(v401 + 106) = *(_OWORD *)(v402 + 106);
          *((_OWORD *)v401 + 5) = v413;
          *((_OWORD *)v401 + 6) = v414;
          *((_OWORD *)v401 + 4) = v412;
        }
LABEL_266:
        *((unsigned char *)v274 + v399[6]) = *((unsigned char *)v275 + v399[6]);
        *((unsigned char *)v274 + v399[7]) = *((unsigned char *)v275 + v399[7]);
        *((unsigned char *)v274 + v399[8]) = *((unsigned char *)v275 + v399[8]);
        *((unsigned char *)v274 + v399[9]) = *((unsigned char *)v275 + v399[9]);
        *((unsigned char *)v274 + v399[10]) = *((unsigned char *)v275 + v399[10]);
        uint64_t v417 = v399[11];
        uint64_t v418 = *(void **)((char *)v275 + v417);
        *(void **)((char *)v274 + v417) = v418;
        id v419 = v418;
        goto LABEL_309;
      case 2u:
        v315 = *v275;
        *id v274 = *v275;
        uint64_t v316 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v861 = (void **)((char *)v275 + v316);
        __dstc = (void **)((char *)v274 + v316);
        uint64_t v317 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v832 = *(void *)(v317 - 8);
        uint64_t v318 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v832 + 48);
        id v319 = v315;
        uint64_t v320 = v861;
        if (v318(v861, 1, v317)) {
          goto LABEL_206;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            unsigned __int8 v448 = *v861;
            *__dstc = *v861;
            id v449 = v448;
            goto LABEL_297;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v447 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v447 - 8) + 16))(__dstc, v861, v447);
LABEL_297:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dstc, v861, *(void *)(v832 + 64));
            break;
        }
        goto LABEL_308;
      case 3u:
        uint64_t v321 = *v275;
        *id v274 = *v275;
        uint64_t v322 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v862 = (void **)((char *)v275 + v322);
        __dstc = (void **)((char *)v274 + v322);
        uint64_t v317 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v832 = *(void *)(v317 - 8);
        uint64_t v323 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v832 + 48);
        id v324 = v321;
        uint64_t v320 = v862;
        if (v323(v862, 1, v317)) {
          goto LABEL_206;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v451 = *v862;
            *__dstc = *v862;
            id v452 = v451;
            goto LABEL_302;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v450 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v450 - 8) + 16))(__dstc, v862, v450);
LABEL_302:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dstc, v862, *(void *)(v832 + 64));
            break;
        }
        goto LABEL_308;
      case 4u:
        uint64_t v326 = *v275;
        *id v274 = *v275;
        uint64_t v327 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v863 = (void **)((char *)v275 + v327);
        __dstc = (void **)((char *)v274 + v327);
        uint64_t v317 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v832 = *(void *)(v317 - 8);
        uint64_t v328 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v832 + 48);
        id v329 = v326;
        uint64_t v320 = v863;
        if (v328(v863, 1, v317))
        {
LABEL_206:
          uint64_t v325 = sub_10003B754(&qword_10078C890);
          memcpy(__dstc, v320, *(void *)(*(void *)(v325 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v454 = *v863;
              *__dstc = *v863;
              id v455 = v454;
              goto LABEL_307;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v453 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v453 - 8) + 16))(__dstc, v863, v453);
LABEL_307:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dstc, v863, *(void *)(v832 + 64));
              break;
          }
LABEL_308:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v832 + 56))(__dstc, 0, 1, v317);
        }
LABEL_309:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *id v274 = *v275;
        *((unsigned char *)v274 + 8) = *((unsigned char *)v275 + 8);
        *((unsigned char *)v274 + 9) = *((unsigned char *)v275 + 9);
        *((unsigned char *)v274 + 10) = *((unsigned char *)v275 + 10);
        uint64_t v330 = v275[2];
        v274[2] = v330;
        id v331 = v330;
        goto LABEL_309;
      case 6u:
        uint64_t v347 = *v275;
        *id v274 = *v275;
        id v348 = v347;
        goto LABEL_309;
      case 7u:
        uint64_t v332 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v333 = *(void *)(v332 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v333 + 48))(v275, 1, v332))
        {
          uint64_t v334 = sub_10003B754(&qword_10078C518);
          memcpy(v274, v275, *(void *)(*(void *)(v334 - 8) + 64));
        }
        else
        {
          *id v274 = *v275;
          uint64_t v354 = *(int *)(v332 + 20);
          v865 = (char *)v275 + v354;
          __dstp = (char *)v274 + v354;
          uint64_t v355 = type metadata accessor for REMHashtagLabelSpecifier();
          v833 = *(void (**)(char *, char *, uint64_t))(*(void *)(v355 - 8) + 16);
          swift_bridgeObjectRetain();
          v833(__dstp, v865, v355);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v333 + 56))(v274, 0, 1, v332);
        }
        uint64_t v356 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v357 = (void **)((char *)v274 + v356);
        uint64_t v358 = (void **)((char *)v275 + v356);
        if (v358[1])
        {
          *uint64_t v357 = *v358;
          v357[1] = v358[1];
          uint64_t v359 = (void *)v358[2];
          v357[2] = v359;
          swift_bridgeObjectRetain();
          id v360 = v359;
        }
        else
        {
          long long v361 = *(_OWORD *)v358;
          v357[2] = v358[2];
          *(_OWORD *)uint64_t v357 = v361;
        }
        goto LABEL_309;
      case 8u:
        uint64_t v349 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v350 = *(void *)(v349 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v350 + 48))(v275, 1, v349))
        {
          uint64_t v351 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v274, v275, *(void *)(*(void *)(v351 - 8) + 64));
        }
        else
        {
          uint64_t v362 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v362 - 8) + 16))(v274, v275, v362);
          *((unsigned char *)v274 + *(int *)(v349 + 20)) = *((unsigned char *)v275 + *(int *)(v349 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v350 + 56))(v274, 0, 1, v349);
        }
        uint64_t v363 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)v274 + *(int *)(v363 + 20)) = *(void **)((char *)v275 + *(int *)(v363 + 20));
        goto LABEL_309;
      case 9u:
        *(unsigned char *)id v274 = *(unsigned char *)v275;
        uint64_t v335 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v336 = (char *)v274 + v335;
        uint64_t v337 = (char *)v275 + v335;
        uint64_t v338 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v338 - 8) + 16))(v336, v337, v338);
        goto LABEL_309;
      default:
        memcpy(v274, v275, *(void *)(*(void *)(v283 - 8) + 64));
        break;
    }
  }
  uint64_t v456 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
  *((unsigned char *)v274 + v456[5]) = *((unsigned char *)v275 + v456[5]);
  uint64_t v457 = v456[6];
  v458 = *(void **)((char *)v274 + v457);
  v459 = *(void **)((char *)v275 + v457);
  *(void **)((char *)v274 + v457) = v459;
  id v460 = v459;

  *(void **)((char *)v274 + v456[7]) = *(void **)((char *)v275 + v456[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v274 + v456[8]) = *(void **)((char *)v275 + v456[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((unsigned char *)v274 + v456[9]) = *((unsigned char *)v275 + v456[9]);
  *(void **)((char *)v274 + *(int *)(v276 + 48)) = *(void **)((char *)v275 + *(int *)(v276 + 48));
LABEL_311:
  uint64_t v461 = a3[19];
  v462 = *(void **)(a1 + v461);
  v463 = *(void **)(a2 + v461);
  *(void *)(a1 + v461) = v463;
  id v464 = v463;

  uint64_t v465 = a3[20];
  v466 = (void *)(a1 + v465);
  v467 = (void *)(a2 + v465);
  void *v466 = *v467;
  v466[1] = v467[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v468 = a3[22];
  v469 = (void *)(a1 + v468);
  v470 = (void *)(a2 + v468);
  void *v469 = *v470;
  v469[1] = v470[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v471 = a3[23];
  v472 = (void *)(a1 + v471);
  v473 = (void *)(a2 + v471);
  void *v472 = *v473;
  v472[1] = v473[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v474 = a3[24];
  v475 = *(void **)(a1 + v474);
  v476 = *(void **)(a2 + v474);
  *(void *)(a1 + v474) = v476;
  id v477 = v476;

  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v478 = a3[26];
  v479 = (void *)(a1 + v478);
  v480 = (void *)(a2 + v478);
  v481 = *(void **)(a1 + v478);
  v482 = *(void **)(a2 + v478);
  void *v479 = v482;
  id v483 = v482;

  v479[1] = v480[1];
  v479[2] = v480[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v484 = v480[3];
  if (v479[3])
  {
    if (v484)
    {
      uint64_t v485 = v480[4];
      v479[3] = v484;
      v479[4] = v485;
      swift_retain();
      swift_release();
      goto LABEL_318;
    }
    swift_release();
  }
  else if (v484)
  {
    uint64_t v486 = v480[4];
    v479[3] = v484;
    v479[4] = v486;
    swift_retain();
    goto LABEL_318;
  }
  *(_OWORD *)(v479 + 3) = *(_OWORD *)(v480 + 3);
LABEL_318:
  uint64_t v487 = a3[27];
  v488 = (void *)(a1 + v487);
  v489 = (void *)(a2 + v487);
  v490 = *(void **)(a1 + v487);
  v491 = *(void **)(a2 + v487);
  void *v488 = v491;
  id v492 = v491;

  v488[1] = v489[1];
  v488[2] = v489[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v493 = v489[3];
  if (v488[3])
  {
    if (v493)
    {
      uint64_t v494 = v489[4];
      v488[3] = v493;
      v488[4] = v494;
      swift_retain();
      swift_release();
      goto LABEL_325;
    }
    swift_release();
  }
  else if (v493)
  {
    uint64_t v495 = v489[4];
    v488[3] = v493;
    v488[4] = v495;
    swift_retain();
    goto LABEL_325;
  }
  *(_OWORD *)(v488 + 3) = *(_OWORD *)(v489 + 3);
LABEL_325:
  uint64_t v496 = a3[28];
  uint64_t v497 = a1 + v496;
  v498 = (unsigned char *)(a2 + v496);
  uint64_t v499 = *(void *)(a2 + v496 + 8);
  *(void *)(a1 + v496) = *(void *)(a2 + v496);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  *(void *)(v497 + 8) = v499;
  __dstd = v498;
  uint64_t v900 = sub_10003B754(&qword_100794B50);
  uint64_t v500 = *(int *)(v900 + 28);
  uint64_t v501 = (void **)(v497 + v500);
  uint64_t v502 = (void **)&v498[v500];
  uint64_t v503 = sub_10003B754(&qword_100794B68);
  uint64_t v504 = *(void *)(v503 - 8);
  uint64_t v505 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v504 + 48);
  int v506 = v505(v501, 1, v503);
  uint64_t v874 = v503;
  int v507 = v505(v502, 1, v503);
  if (v506)
  {
    if (!v507)
    {
      uint64_t v508 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v509 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v603 = *v502;
              char *v501 = *v502;
              id v604 = v603;
              goto LABEL_386;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v602 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v602 - 8) + 16))(v501, v502, v602);
LABEL_386:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v501, v502, *(void *)(*(void *)(v509 - 8) + 64));
              break;
          }
          v605 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v606 = v605[5];
          v607 = (char *)v501 + v606;
          v608 = (char *)v502 + v606;
          if (!*(void **)((char *)v502 + v606 + 8)) {
            goto LABEL_400;
          }
          v724 = v605;
          *(void *)v607 = *(void *)v608;
          *((void *)v607 + 1) = *((void *)v608 + 1);
          v609 = (void *)*((void *)v608 + 2);
          uint64_t v716 = *((void *)v608 + 3);
          uint64_t v611 = *((void *)v608 + 4);
          uint64_t v610 = *((void *)v608 + 5);
          uint64_t v771 = *((void *)v608 + 7);
          v808 = (void *)*((void *)v608 + 6);
          unsigned __int8 v748 = v608[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v609, v716, v611, v610, (uint64_t)v808, v771, v748);
          *((void *)v607 + 2) = v609;
          *((void *)v607 + 3) = v716;
          *((void *)v607 + 4) = v611;
          *((void *)v607 + 5) = v610;
          *((void *)v607 + 6) = v808;
          *((void *)v607 + 7) = v771;
          v607[64] = v748;
          v607[65] = v608[65];
          v607[66] = v608[66];
          v607[67] = v608[67];
          v607[68] = v608[68];
          int v612 = v608[120];
          if (v612 == 255)
          {
            long long v613 = *(_OWORD *)(v608 + 72);
            long long v614 = *(_OWORD *)(v608 + 88);
            long long v615 = *(_OWORD *)(v608 + 104);
            v607[120] = v608[120];
            *(_OWORD *)(v607 + 88) = v614;
            *(_OWORD *)(v607 + 104) = v615;
            *(_OWORD *)(v607 + 72) = v613;
          }
          else
          {
            char v809 = v612 & 1;
            v616 = (void *)*((void *)v608 + 9);
            uint64_t v617 = *((void *)v608 + 10);
            uint64_t v618 = *((void *)v608 + 11);
            uint64_t v749 = *((void *)v608 + 13);
            uint64_t v772 = *((void *)v608 + 12);
            uint64_t v717 = *((void *)v608 + 14);
            sub_10003BED8(v616, v617, v618, v772, v749, v717, v612 & 1);
            *((void *)v607 + 9) = v616;
            *((void *)v607 + 10) = v617;
            *((void *)v607 + 11) = v618;
            *((void *)v607 + 12) = v772;
            *((void *)v607 + 13) = v749;
            *((void *)v607 + 14) = v717;
            v607[120] = v809;
          }
          v607[121] = v608[121];
          v605 = v724;
          goto LABEL_403;
        case 1u:
          uint64_t v513 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v620 = *v502;
              char *v501 = *v502;
              id v621 = v620;
              goto LABEL_396;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v619 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v619 - 8) + 16))(v501, v502, v619);
LABEL_396:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v501, v502, *(void *)(*(void *)(v513 - 8) + 64));
              break;
          }
          v605 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v622 = v605[5];
          v607 = (char *)v501 + v622;
          v608 = (char *)v502 + v622;
          if (*(void **)((char *)v502 + v622 + 8))
          {
            v725 = v605;
            *(void *)v607 = *(void *)v608;
            *((void *)v607 + 1) = *((void *)v608 + 1);
            v623 = (void *)*((void *)v608 + 2);
            uint64_t v624 = *((void *)v608 + 3);
            uint64_t v625 = *((void *)v608 + 5);
            uint64_t v718 = *((void *)v608 + 4);
            uint64_t v773 = *((void *)v608 + 7);
            v810 = (void *)*((void *)v608 + 6);
            unsigned __int8 v750 = v608[64];
            swift_bridgeObjectRetain();
            sub_100050F84(v623, v624, v718, v625, (uint64_t)v810, v773, v750);
            *((void *)v607 + 2) = v623;
            *((void *)v607 + 3) = v624;
            *((void *)v607 + 4) = v718;
            *((void *)v607 + 5) = v625;
            *((void *)v607 + 6) = v810;
            *((void *)v607 + 7) = v773;
            v607[64] = v750;
            v607[65] = v608[65];
            v607[66] = v608[66];
            v607[67] = v608[67];
            v607[68] = v608[68];
            int v626 = v608[120];
            if (v626 == 255)
            {
              long long v627 = *(_OWORD *)(v608 + 72);
              long long v628 = *(_OWORD *)(v608 + 88);
              long long v629 = *(_OWORD *)(v608 + 104);
              v607[120] = v608[120];
              *(_OWORD *)(v607 + 88) = v628;
              *(_OWORD *)(v607 + 104) = v629;
              *(_OWORD *)(v607 + 72) = v627;
            }
            else
            {
              char v811 = v626 & 1;
              v636 = (void *)*((void *)v608 + 9);
              uint64_t v637 = *((void *)v608 + 10);
              uint64_t v638 = *((void *)v608 + 11);
              uint64_t v751 = *((void *)v608 + 13);
              uint64_t v774 = *((void *)v608 + 12);
              uint64_t v719 = *((void *)v608 + 14);
              sub_10003BED8(v636, v637, v638, v774, v751, v719, v626 & 1);
              *((void *)v607 + 9) = v636;
              *((void *)v607 + 10) = v637;
              *((void *)v607 + 11) = v638;
              *((void *)v607 + 12) = v774;
              *((void *)v607 + 13) = v751;
              *((void *)v607 + 14) = v719;
              v607[120] = v811;
            }
            v607[121] = v608[121];
            v605 = v725;
          }
          else
          {
LABEL_400:
            long long v630 = *(_OWORD *)v608;
            long long v631 = *((_OWORD *)v608 + 1);
            long long v632 = *((_OWORD *)v608 + 3);
            *((_OWORD *)v607 + 2) = *((_OWORD *)v608 + 2);
            *((_OWORD *)v607 + 3) = v632;
            *(_OWORD *)v607 = v630;
            *((_OWORD *)v607 + 1) = v631;
            long long v633 = *((_OWORD *)v608 + 4);
            long long v634 = *((_OWORD *)v608 + 5);
            long long v635 = *((_OWORD *)v608 + 6);
            *(_OWORD *)(v607 + 106) = *(_OWORD *)(v608 + 106);
            *((_OWORD *)v607 + 5) = v634;
            *((_OWORD *)v607 + 6) = v635;
            *((_OWORD *)v607 + 4) = v633;
          }
LABEL_403:
          *((unsigned char *)v501 + v605[6]) = *((unsigned char *)v502 + v605[6]);
          *((unsigned char *)v501 + v605[7]) = *((unsigned char *)v502 + v605[7]);
          *((unsigned char *)v501 + v605[8]) = *((unsigned char *)v502 + v605[8]);
          *((unsigned char *)v501 + v605[9]) = *((unsigned char *)v502 + v605[9]);
          *((unsigned char *)v501 + v605[10]) = *((unsigned char *)v502 + v605[10]);
          uint64_t v639 = v605[11];
          v640 = *(void **)((char *)v502 + v639);
          *(void **)((char *)v501 + v639) = v640;
          id v641 = v640;
          goto LABEL_404;
        case 2u:
          v514 = *v502;
          char *v501 = *v502;
          uint64_t v515 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v766 = (void **)((char *)v502 + v515);
          v803 = (void **)((char *)v501 + v515);
          uint64_t v516 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v517 = *(void *)(v516 - 8);
          v518 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v517 + 48);
          id v519 = v514;
          if (v518(v766, 1, v516))
          {
            uint64_t v520 = sub_10003B754(&qword_10078C890);
            memcpy(v803, v766, *(void *)(*(void *)(v520 - 8) + 64));
            uint64_t v521 = v874;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v692 = *v766;
                *v803 = *v766;
                id v693 = v692;
                goto LABEL_431;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v691 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v691 - 8) + 16))(v803, v766, v691);
LABEL_431:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v803, v766, *(void *)(v517 + 64));
                break;
            }
            uint64_t v694 = v516;
            uint64_t v521 = v874;
            (*(void (**)(void **, void, uint64_t, uint64_t))(v517 + 56))(v803, 0, 1, v694);
          }
          goto LABEL_443;
        case 3u:
          v522 = *v502;
          char *v501 = *v502;
          uint64_t v523 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v767 = (void **)((char *)v502 + v523);
          v804 = (void **)((char *)v501 + v523);
          uint64_t v524 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v525 = *(void *)(v524 - 8);
          v526 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v525 + 48);
          id v527 = v522;
          v528 = v767;
          if (v526(v767, 1, v524)) {
            goto LABEL_341;
          }
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v697 = *v767;
              *v804 = *v767;
              id v698 = v697;
              goto LABEL_436;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v695 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v695 - 8) + 16))(v804, v767, v695);
LABEL_436:
              swift_storeEnumTagMultiPayload();
              uint64_t v521 = v874;
              uint64_t v696 = v525;
              break;
            default:
              memcpy(v804, v767, *(void *)(v525 + 64));
              uint64_t v696 = v525;
              uint64_t v521 = v874;
              break;
          }
          goto LABEL_442;
        case 4u:
          v529 = *v502;
          char *v501 = *v502;
          uint64_t v530 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          v768 = (void **)((char *)v502 + v530);
          v804 = (void **)((char *)v501 + v530);
          uint64_t v524 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v531 = *(void *)(v524 - 8);
          v532 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v531 + 48);
          id v533 = v529;
          v528 = v768;
          if (v532(v768, 1, v524))
          {
LABEL_341:
            uint64_t v534 = sub_10003B754(&qword_10078C890);
            memcpy(v804, v528, *(void *)(*(void *)(v534 - 8) + 64));
            uint64_t v521 = v874;
          }
          else
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                v700 = *v768;
                *v804 = *v768;
                id v701 = v700;
                goto LABEL_441;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v699 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v699 - 8) + 16))(v804, v768, v699);
LABEL_441:
                swift_storeEnumTagMultiPayload();
                uint64_t v521 = v874;
                uint64_t v696 = v531;
                break;
              default:
                memcpy(v804, v768, *(void *)(v531 + 64));
                uint64_t v696 = v531;
                uint64_t v521 = v874;
                break;
            }
LABEL_442:
            (*(void (**)(void **, void, uint64_t, uint64_t))(v696 + 56))(v804, 0, 1, v524);
          }
LABEL_443:
          swift_storeEnumTagMultiPayload();
          goto LABEL_406;
        case 5u:
          char *v501 = *v502;
          *((unsigned char *)v501 + 8) = *((unsigned char *)v502 + 8);
          *((unsigned char *)v501 + 9) = *((unsigned char *)v502 + 9);
          *((unsigned char *)v501 + 10) = *((unsigned char *)v502 + 10);
          v535 = v502[2];
          v501[2] = v535;
          id v536 = v535;
          goto LABEL_404;
        case 6u:
          v544 = *v502;
          char *v501 = *v502;
          id v545 = v544;
          goto LABEL_404;
        case 7u:
          uint64_t v537 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v538 = *(void *)(v537 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v538 + 48))(v502, 1, v537))
          {
            uint64_t v539 = sub_10003B754(&qword_10078C518);
            memcpy(v501, v502, *(void *)(*(void *)(v539 - 8) + 64));
          }
          else
          {
            char *v501 = *v502;
            uint64_t v577 = *(int *)(v537 + 20);
            v769 = (char *)v502 + v577;
            v806 = (char *)v501 + v577;
            uint64_t v578 = type metadata accessor for REMHashtagLabelSpecifier();
            v746 = *(void (**)(char *, char *, uint64_t))(*(void *)(v578 - 8) + 16);
            swift_bridgeObjectRetain();
            v746(v806, v769, v578);
            (*(void (**)(void **, void, uint64_t, uint64_t))(v538 + 56))(v501, 0, 1, v537);
          }
          uint64_t v579 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          v580 = (void **)((char *)v501 + v579);
          v581 = (void **)((char *)v502 + v579);
          uint64_t v521 = v874;
          if (v581[1])
          {
            void *v580 = *v581;
            v580[1] = v581[1];
            v582 = (void *)v581[2];
            v580[2] = v582;
            swift_bridgeObjectRetain();
            id v583 = v582;
          }
          else
          {
            long long v584 = *(_OWORD *)v581;
            v580[2] = v581[2];
            *(_OWORD *)v580 = v584;
          }
          goto LABEL_443;
        case 8u:
          uint64_t v546 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v547 = *(void *)(v546 - 8);
          if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v547 + 48))(v502, 1, v546))
          {
            uint64_t v548 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v501, v502, *(void *)(*(void *)(v548 - 8) + 64));
          }
          else
          {
            uint64_t v590 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v590 - 8) + 16))(v501, v502, v590);
            *((unsigned char *)v501 + *(int *)(v546 + 20)) = *((unsigned char *)v502 + *(int *)(v546 + 20));
            (*(void (**)(void **, void, uint64_t, uint64_t))(v547 + 56))(v501, 0, 1, v546);
          }
          uint64_t v521 = v503;
          uint64_t v591 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void **)((char *)v501 + *(int *)(v591 + 20)) = *(void **)((char *)v502 + *(int *)(v591 + 20));
          swift_storeEnumTagMultiPayload();
          goto LABEL_406;
        case 9u:
          *(unsigned char *)uint64_t v501 = *(unsigned char *)v502;
          uint64_t v540 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          v541 = (char *)v501 + v540;
          v542 = (char *)v502 + v540;
          uint64_t v543 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v543 - 8) + 16))(v541, v542, v543);
LABEL_404:
          swift_storeEnumTagMultiPayload();
          goto LABEL_405;
        default:
          memcpy(v501, v502, *(void *)(*(void *)(v508 - 8) + 64));
LABEL_405:
          uint64_t v521 = v874;
LABEL_406:
          v642 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
          *((unsigned char *)v501 + v642[5]) = *((unsigned char *)v502 + v642[5]);
          uint64_t v643 = v642[6];
          v644 = (void **)((char *)v501 + v643);
          v645 = (void **)((char *)v502 + v643);
          void *v644 = *v645;
          v644[1] = v645[1];
          *(void **)((char *)v501 + v642[7]) = *(void **)((char *)v502 + v642[7]);
          *(void **)((char *)v501 + *(int *)(v521 + 48)) = *(void **)((char *)v502 + *(int *)(v521 + 48));
          v646 = *(void (**)(void **, void, uint64_t, uint64_t))(v504 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v646(v501, 0, 1, v521);
          break;
      }
      goto LABEL_461;
    }
LABEL_331:
    uint64_t v510 = sub_10003B754(&qword_1007A2550);
    memcpy(v501, v502, *(void *)(*(void *)(v510 - 8) + 64));
    goto LABEL_461;
  }
  if (v507)
  {
    sub_10003B6F8((uint64_t)v501, &qword_100794B68);
    goto LABEL_331;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)v501);
    uint64_t v511 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v512 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v648 = *v502;
            char *v501 = *v502;
            id v649 = v648;
            goto LABEL_410;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v647 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v647 - 8) + 16))(v501, v502, v647);
LABEL_410:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v501, v502, *(void *)(*(void *)(v512 - 8) + 64));
            break;
        }
        v650 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v651 = v650[5];
        v652 = (char *)v501 + v651;
        v653 = (char *)v502 + v651;
        if (!*(void **)((char *)v502 + v651 + 8)) {
          goto LABEL_414;
        }
        v752 = v650;
        *(void *)v652 = *(void *)v653;
        *((void *)v652 + 1) = *((void *)v653 + 1);
        v655 = (void *)*((void *)v653 + 2);
        uint64_t v654 = *((void *)v653 + 3);
        v812 = (void *)*((void *)v653 + 4);
        uint64_t v656 = *((void *)v653 + 6);
        uint64_t v726 = *((void *)v653 + 5);
        uint64_t v657 = *((void *)v653 + 7);
        unsigned __int8 v775 = v653[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v655, v654, (uint64_t)v812, v726, v656, v657, v775);
        *((void *)v652 + 2) = v655;
        *((void *)v652 + 3) = v654;
        *((void *)v652 + 4) = v812;
        *((void *)v652 + 5) = v726;
        *((void *)v652 + 6) = v656;
        *((void *)v652 + 7) = v657;
        v652[64] = v775;
        v652[65] = v653[65];
        v652[66] = v653[66];
        v652[67] = v653[67];
        v652[68] = v653[68];
        int v658 = v653[120];
        if (v658 == 255)
        {
          long long v659 = *(_OWORD *)(v653 + 72);
          long long v660 = *(_OWORD *)(v653 + 88);
          long long v661 = *(_OWORD *)(v653 + 104);
          v652[120] = v653[120];
          *(_OWORD *)(v652 + 88) = v660;
          *(_OWORD *)(v652 + 104) = v661;
          *(_OWORD *)(v652 + 72) = v659;
        }
        else
        {
          char v813 = v658 & 1;
          v668 = (void *)*((void *)v653 + 9);
          uint64_t v669 = *((void *)v653 + 10);
          uint64_t v670 = *((void *)v653 + 11);
          uint64_t v671 = *((void *)v653 + 12);
          uint64_t v776 = *((void *)v653 + 13);
          uint64_t v727 = *((void *)v653 + 14);
          sub_10003BED8(v668, v669, v670, v671, v776, v727, v658 & 1);
          *((void *)v652 + 9) = v668;
          *((void *)v652 + 10) = v669;
          *((void *)v652 + 11) = v670;
          *((void *)v652 + 12) = v671;
          *((void *)v652 + 13) = v776;
          *((void *)v652 + 14) = v727;
          v652[120] = v813;
        }
        v652[121] = v653[121];
        v650 = v752;
        goto LABEL_417;
      case 1u:
        uint64_t v549 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v676 = *v502;
            char *v501 = *v502;
            id v677 = v676;
            goto LABEL_421;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v675 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v675 - 8) + 16))(v501, v502, v675);
LABEL_421:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v501, v502, *(void *)(*(void *)(v549 - 8) + 64));
            break;
        }
        v650 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v678 = v650[5];
        v652 = (char *)v501 + v678;
        v653 = (char *)v502 + v678;
        if (*(void **)((char *)v502 + v678 + 8))
        {
          v753 = v650;
          *(void *)v652 = *(void *)v653;
          *((void *)v652 + 1) = *((void *)v653 + 1);
          v679 = (void *)*((void *)v653 + 2);
          uint64_t v680 = *((void *)v653 + 3);
          uint64_t v681 = *((void *)v653 + 5);
          uint64_t v728 = *((void *)v653 + 4);
          uint64_t v682 = *((void *)v653 + 6);
          v814 = (void *)*((void *)v653 + 7);
          unsigned __int8 v777 = v653[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v679, v680, v728, v681, v682, (uint64_t)v814, v777);
          *((void *)v652 + 2) = v679;
          *((void *)v652 + 3) = v680;
          *((void *)v652 + 4) = v728;
          *((void *)v652 + 5) = v681;
          *((void *)v652 + 6) = v682;
          *((void *)v652 + 7) = v814;
          v652[64] = v777;
          v652[65] = v653[65];
          v652[66] = v653[66];
          v652[67] = v653[67];
          v652[68] = v653[68];
          int v683 = v653[120];
          if (v683 == 255)
          {
            long long v684 = *(_OWORD *)(v653 + 72);
            long long v685 = *(_OWORD *)(v653 + 88);
            long long v686 = *(_OWORD *)(v653 + 104);
            v652[120] = v653[120];
            *(_OWORD *)(v652 + 88) = v685;
            *(_OWORD *)(v652 + 104) = v686;
            *(_OWORD *)(v652 + 72) = v684;
          }
          else
          {
            char v815 = v683 & 1;
            v687 = (void *)*((void *)v653 + 9);
            uint64_t v688 = *((void *)v653 + 10);
            uint64_t v689 = *((void *)v653 + 11);
            uint64_t v690 = *((void *)v653 + 12);
            uint64_t v778 = *((void *)v653 + 13);
            uint64_t v729 = *((void *)v653 + 14);
            sub_10003BED8(v687, v688, v689, v690, v778, v729, v683 & 1);
            *((void *)v652 + 9) = v687;
            *((void *)v652 + 10) = v688;
            *((void *)v652 + 11) = v689;
            *((void *)v652 + 12) = v690;
            *((void *)v652 + 13) = v778;
            *((void *)v652 + 14) = v729;
            v652[120] = v815;
          }
          v652[121] = v653[121];
          v650 = v753;
        }
        else
        {
LABEL_414:
          long long v662 = *(_OWORD *)v653;
          long long v663 = *((_OWORD *)v653 + 1);
          long long v664 = *((_OWORD *)v653 + 3);
          *((_OWORD *)v652 + 2) = *((_OWORD *)v653 + 2);
          *((_OWORD *)v652 + 3) = v664;
          *(_OWORD *)v652 = v662;
          *((_OWORD *)v652 + 1) = v663;
          long long v665 = *((_OWORD *)v653 + 4);
          long long v666 = *((_OWORD *)v653 + 5);
          long long v667 = *((_OWORD *)v653 + 6);
          *(_OWORD *)(v652 + 106) = *(_OWORD *)(v653 + 106);
          *((_OWORD *)v652 + 5) = v666;
          *((_OWORD *)v652 + 6) = v667;
          *((_OWORD *)v652 + 4) = v665;
        }
LABEL_417:
        *((unsigned char *)v501 + v650[6]) = *((unsigned char *)v502 + v650[6]);
        *((unsigned char *)v501 + v650[7]) = *((unsigned char *)v502 + v650[7]);
        *((unsigned char *)v501 + v650[8]) = *((unsigned char *)v502 + v650[8]);
        *((unsigned char *)v501 + v650[9]) = *((unsigned char *)v502 + v650[9]);
        *((unsigned char *)v501 + v650[10]) = *((unsigned char *)v502 + v650[10]);
        uint64_t v672 = v650[11];
        v673 = *(void **)((char *)v502 + v672);
        *(void **)((char *)v501 + v672) = v673;
        id v674 = v673;
        goto LABEL_459;
      case 2u:
        v550 = *v502;
        char *v501 = *v502;
        uint64_t v551 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v805 = (void **)((char *)v501 + v551);
        v552 = (void **)((char *)v502 + v551);
        uint64_t v553 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v554 = *(void *)(v553 - 8);
        v555 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v554 + 48);
        id v556 = v550;
        if (v555(v552, 1, v553)) {
          goto LABEL_356;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v703 = *v552;
            *v805 = *v552;
            id v704 = v703;
            goto LABEL_447;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v702 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v702 - 8) + 16))(v805, v552, v702);
LABEL_447:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v805, v552, *(void *)(v554 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v554 + 56))(v805, 0, 1, v553);
        goto LABEL_459;
      case 3u:
        v557 = *v502;
        char *v501 = *v502;
        uint64_t v558 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v805 = (void **)((char *)v501 + v558);
        v552 = (void **)((char *)v502 + v558);
        uint64_t v559 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v560 = *(void *)(v559 - 8);
        v561 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v560 + 48);
        id v562 = v557;
        if (v561(v552, 1, v559)) {
          goto LABEL_356;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            v706 = *v552;
            *v805 = *v552;
            id v707 = v706;
            goto LABEL_452;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v705 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v705 - 8) + 16))(v805, v552, v705);
LABEL_452:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v805, v552, *(void *)(v560 + 64));
            break;
        }
        goto LABEL_458;
      case 4u:
        v563 = *v502;
        char *v501 = *v502;
        uint64_t v564 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        v805 = (void **)((char *)v501 + v564);
        v552 = (void **)((char *)v502 + v564);
        uint64_t v559 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v560 = *(void *)(v559 - 8);
        v565 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v560 + 48);
        id v566 = v563;
        if (v565(v552, 1, v559))
        {
LABEL_356:
          uint64_t v567 = sub_10003B754(&qword_10078C890);
          memcpy(v805, v552, *(void *)(*(void *)(v567 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              v709 = *v552;
              *v805 = *v552;
              id v710 = v709;
              goto LABEL_457;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v708 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v708 - 8) + 16))(v805, v552, v708);
LABEL_457:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v805, v552, *(void *)(v560 + 64));
              break;
          }
LABEL_458:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v560 + 56))(v805, 0, 1, v559);
        }
LABEL_459:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        char *v501 = *v502;
        *((unsigned char *)v501 + 8) = *((unsigned char *)v502 + 8);
        *((unsigned char *)v501 + 9) = *((unsigned char *)v502 + 9);
        *((unsigned char *)v501 + 10) = *((unsigned char *)v502 + 10);
        v568 = v502[2];
        v501[2] = v568;
        id v569 = v568;
        goto LABEL_459;
      case 6u:
        v585 = *v502;
        char *v501 = *v502;
        id v586 = v585;
        goto LABEL_459;
      case 7u:
        uint64_t v570 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v571 = *(void *)(v570 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v571 + 48))(v502, 1, v570))
        {
          uint64_t v572 = sub_10003B754(&qword_10078C518);
          memcpy(v501, v502, *(void *)(*(void *)(v572 - 8) + 64));
        }
        else
        {
          char *v501 = *v502;
          uint64_t v592 = *(int *)(v570 + 20);
          v770 = (char *)v502 + v592;
          v807 = (char *)v501 + v592;
          uint64_t v593 = type metadata accessor for REMHashtagLabelSpecifier();
          v747 = *(void (**)(char *, char *, uint64_t))(*(void *)(v593 - 8) + 16);
          swift_bridgeObjectRetain();
          v747(v807, v770, v593);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v571 + 56))(v501, 0, 1, v570);
        }
        uint64_t v594 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        v595 = (void **)((char *)v501 + v594);
        v596 = (void **)((char *)v502 + v594);
        if (v596[1])
        {
          void *v595 = *v596;
          v595[1] = v596[1];
          v597 = (void *)v596[2];
          v595[2] = v597;
          swift_bridgeObjectRetain();
          id v598 = v597;
        }
        else
        {
          long long v599 = *(_OWORD *)v596;
          v595[2] = v596[2];
          *(_OWORD *)v595 = v599;
        }
        goto LABEL_459;
      case 8u:
        uint64_t v587 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v588 = *(void *)(v587 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v588 + 48))(v502, 1, v587))
        {
          uint64_t v589 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v501, v502, *(void *)(*(void *)(v589 - 8) + 64));
        }
        else
        {
          uint64_t v600 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v600 - 8) + 16))(v501, v502, v600);
          *((unsigned char *)v501 + *(int *)(v587 + 20)) = *((unsigned char *)v502 + *(int *)(v587 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v588 + 56))(v501, 0, 1, v587);
        }
        uint64_t v601 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)v501 + *(int *)(v601 + 20)) = *(void **)((char *)v502 + *(int *)(v601 + 20));
        goto LABEL_459;
      case 9u:
        *(unsigned char *)uint64_t v501 = *(unsigned char *)v502;
        uint64_t v573 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        v574 = (char *)v501 + v573;
        v575 = (char *)v502 + v573;
        uint64_t v576 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v576 - 8) + 16))(v574, v575, v576);
        goto LABEL_459;
      default:
        memcpy(v501, v502, *(void *)(*(void *)(v511 - 8) + 64));
        break;
    }
  }
  v711 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  *((unsigned char *)v501 + v711[5]) = *((unsigned char *)v502 + v711[5]);
  uint64_t v712 = v711[6];
  v713 = (void **)((char *)v501 + v712);
  v714 = (void **)((char *)v502 + v712);
  void *v713 = *v714;
  v713[1] = v714[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v501 + v711[7]) = *(void **)((char *)v502 + v711[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void **)((char *)v501 + *(int *)(v874 + 48)) = *(void **)((char *)v502 + *(int *)(v874 + 48));
LABEL_461:
  *(unsigned char *)(v497 + *(int *)(v900 + 32)) = __dstd[*(int *)(v900 + 32)];
  return a1;
}

uint64_t sub_1005CCFFC(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v7;
  long long v8 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v8;
  long long v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  long long v10 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v10;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  uint64_t v11 = a3[17];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  uint64_t v14 = *(int *)(sub_10003B754(&qword_100794B60) + 28);
  id v15 = (void *)(v12 + v14);
  id v16 = (void *)(v13 + v14);
  uint64_t v17 = sub_10003B754(&qword_100794BB0);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10003B754(&qword_100794BA8);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v51 - 8) + 32))(v15, v16, v51);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
            break;
        }
        goto LABEL_27;
      case 1u:
        uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v60 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v60 - 8) + 32))(v15, v16, v60);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
            break;
        }
LABEL_27:
        uint64_t v52 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v53 = v52[5];
        uint64_t v54 = (_OWORD *)((char *)v15 + v53);
        uint64_t v55 = (_OWORD *)((char *)v16 + v53);
        long long v56 = v55[3];
        v54[2] = v55[2];
        v54[3] = v56;
        long long v57 = v55[1];
        _OWORD *v54 = *v55;
        v54[1] = v57;
        *(_OWORD *)((char *)v54 + 106) = *(_OWORD *)((char *)v55 + 106);
        long long v58 = v55[6];
        long long v59 = v55[4];
        v54[5] = v55[5];
        v54[6] = v58;
        v54[4] = v59;
        *((unsigned char *)v15 + v52[6]) = *((unsigned char *)v16 + v52[6]);
        *((unsigned char *)v15 + v52[7]) = *((unsigned char *)v16 + v52[7]);
        *((unsigned char *)v15 + v52[8]) = *((unsigned char *)v16 + v52[8]);
        *((unsigned char *)v15 + v52[9]) = *((unsigned char *)v16 + v52[9]);
        *((unsigned char *)v15 + v52[10]) = *((unsigned char *)v16 + v52[10]);
        *(void *)((char *)v15 + v52[11]) = *(void *)((char *)v16 + v52[11]);
        goto LABEL_39;
      case 2u:
        *id v15 = *v16;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dst = (char *)v15 + v23;
        id v24 = (char *)v16 + v23;
        uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v26 = *(void *)(v25 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25)) {
          goto LABEL_9;
        }
        long long v214 = (void *)v25;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v63 = type metadata accessor for Date();
            uint64_t v61 = __dst;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(__dst, v24, v63);
            uint64_t v62 = v214;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v61 = __dst;
            memcpy(__dst, v24, *(void *)(v26 + 64));
            uint64_t v62 = v214;
            break;
        }
        goto LABEL_33;
      case 3u:
        *id v15 = *v16;
        uint64_t v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dst = (char *)v15 + v27;
        id v24 = (char *)v16 + v27;
        uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v26 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v28)) {
          goto LABEL_9;
        }
        long long v215 = (void *)v28;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v64 = type metadata accessor for Date();
            uint64_t v61 = __dst;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(__dst, v24, v64);
            uint64_t v62 = v215;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v61 = __dst;
            memcpy(__dst, v24, *(void *)(v26 + 64));
            uint64_t v62 = v215;
            break;
        }
LABEL_33:
        (*(void (**)(char *, void, uint64_t, void *))(v26 + 56))(v61, 0, 1, v62);
        goto LABEL_39;
      case 4u:
        *id v15 = *v16;
        uint64_t v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dst = (char *)v15 + v30;
        id v24 = (char *)v16 + v30;
        uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v24, 1, v31))
        {
LABEL_9:
          uint64_t v29 = sub_10003B754(&qword_10078C890);
          memcpy(__dst, v24, *(void *)(*(void *)(v29 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v65 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 32))(__dst, v24, v65);
              swift_storeEnumTagMultiPayload();
              uint64_t v66 = v31;
              uint64_t v67 = __dst;
              break;
            default:
              memcpy(__dst, v24, *(void *)(v32 + 64));
              uint64_t v67 = __dst;
              uint64_t v66 = v31;
              break;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v67, 0, 1, v66);
        }
        goto LABEL_39;
      case 7u:
        uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v34 + 48))(v16, 1, v33))
        {
          uint64_t v35 = sub_10003B754(&qword_10078C518);
          memcpy(v15, v16, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          *id v15 = *v16;
          uint64_t v43 = *(int *)(v33 + 20);
          __dste = (char *)v15 + v43;
          uint64_t v44 = (char *)v16 + v43;
          uint64_t v45 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 32))(__dste, v44, v45);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v34 + 56))(v15, 0, 1, v33);
        }
        uint64_t v46 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v47 = (char *)v15 + v46;
        id v48 = (char *)v16 + v46;
        *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
        *((void *)v47 + 2) = *((void *)v48 + 2);
        goto LABEL_39;
      case 8u:
        uint64_t v36 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v37 = *(void *)(v36 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v37 + 48))(v16, 1, v36))
        {
          uint64_t v38 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v15, v16, *(void *)(*(void *)(v38 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v49 - 8) + 32))(v15, v16, v49);
          *((unsigned char *)v15 + *(int *)(v36 + 20)) = *((unsigned char *)v16 + *(int *)(v36 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v37 + 56))(v15, 0, 1, v36);
        }
        uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)v15 + *(int *)(v50 + 20)) = *(void *)((char *)v16 + *(int *)(v50 + 20));
        goto LABEL_39;
      case 9u:
        *(unsigned char *)id v15 = *(unsigned char *)v16;
        uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v40 = (char *)v15 + v39;
        uint64_t v41 = (char *)v16 + v39;
        uint64_t v42 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 32))(v40, v41, v42);
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
        break;
    }
    uint64_t v68 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
    *((unsigned char *)v15 + v68[5]) = *((unsigned char *)v16 + v68[5]);
    *(void *)((char *)v15 + v68[6]) = *(void *)((char *)v16 + v68[6]);
    *(void *)((char *)v15 + v68[7]) = *(void *)((char *)v16 + v68[7]);
    *((unsigned char *)v15 + v68[8]) = *((unsigned char *)v16 + v68[8]);
    uint64_t v69 = v68[9];
    uint64_t v70 = (char *)v15 + v69;
    uint64_t v71 = (char *)v16 + v69;
    *(void *)uint64_t v70 = *(void *)v71;
    v70[8] = v71[8];
    *(void *)((char *)v15 + v68[10]) = *(void *)((char *)v16 + v68[10]);
    *(void *)((char *)v15 + v68[11]) = *(void *)((char *)v16 + v68[11]);
    *(void *)((char *)v15 + *(int *)(v17 + 48)) = *(void *)((char *)v16 + *(int *)(v17 + 48));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v72 = a3[18];
  uint64_t v73 = a1 + v72;
  uint64_t v74 = a2 + v72;
  *(unsigned char *)uint64_t v73 = *(unsigned char *)(a2 + v72);
  *(_OWORD *)(v73 + 8) = *(_OWORD *)(a2 + v72 + 8);
  uint64_t v75 = *(int *)(sub_10003B754(&qword_100794B58) + 40);
  id v76 = (void *)(v73 + v75);
  uint64_t v77 = (void *)(v74 + v75);
  uint64_t v78 = sub_10003B754(&qword_100794B98);
  uint64_t v79 = *(void *)(v78 - 8);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78))
  {
    uint64_t v80 = sub_10003B754(&qword_100794B90);
    memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
  }
  else
  {
    uint64_t v81 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v82 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v112 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v112 - 8) + 32))(v76, v77, v112);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v76, v77, *(void *)(*(void *)(v82 - 8) + 64));
            break;
        }
        goto LABEL_67;
      case 1u:
        uint64_t v83 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v121 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v121 - 8) + 32))(v76, v77, v121);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v76, v77, *(void *)(*(void *)(v83 - 8) + 64));
            break;
        }
LABEL_67:
        uint64_t v113 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v114 = v113[5];
        id v115 = (_OWORD *)((char *)v76 + v114);
        char v116 = (_OWORD *)((char *)v77 + v114);
        long long v117 = v116[3];
        v115[2] = v116[2];
        v115[3] = v117;
        long long v118 = v116[1];
        *id v115 = *v116;
        v115[1] = v118;
        *(_OWORD *)((char *)v115 + 106) = *(_OWORD *)((char *)v116 + 106);
        long long v119 = v116[6];
        long long v120 = v116[4];
        v115[5] = v116[5];
        v115[6] = v119;
        v115[4] = v120;
        *((unsigned char *)v76 + v113[6]) = *((unsigned char *)v77 + v113[6]);
        *((unsigned char *)v76 + v113[7]) = *((unsigned char *)v77 + v113[7]);
        *((unsigned char *)v76 + v113[8]) = *((unsigned char *)v77 + v113[8]);
        *((unsigned char *)v76 + v113[9]) = *((unsigned char *)v77 + v113[9]);
        *((unsigned char *)v76 + v113[10]) = *((unsigned char *)v77 + v113[10]);
        *(void *)((char *)v76 + v113[11]) = *(void *)((char *)v77 + v113[11]);
        goto LABEL_79;
      case 2u:
        *id v76 = *v77;
        uint64_t v84 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dsta = (char *)v76 + v84;
        uint64_t v85 = (char *)v77 + v84;
        uint64_t v86 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v87 = *(void *)(v86 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86)) {
          goto LABEL_49;
        }
        uint64_t v216 = (void *)v86;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v124 = type metadata accessor for Date();
            uint64_t v122 = __dsta;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v124 - 8) + 32))(__dsta, v85, v124);
            id v123 = v216;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v122 = __dsta;
            memcpy(__dsta, v85, *(void *)(v87 + 64));
            id v123 = v216;
            break;
        }
        goto LABEL_73;
      case 3u:
        *id v76 = *v77;
        uint64_t v88 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dsta = (char *)v76 + v88;
        uint64_t v85 = (char *)v77 + v88;
        uint64_t v89 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v87 = *(void *)(v89 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v89)) {
          goto LABEL_49;
        }
        uint64_t v217 = (void *)v89;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v125 = type metadata accessor for Date();
            uint64_t v122 = __dsta;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 32))(__dsta, v85, v125);
            id v123 = v217;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v122 = __dsta;
            memcpy(__dsta, v85, *(void *)(v87 + 64));
            id v123 = v217;
            break;
        }
LABEL_73:
        (*(void (**)(char *, void, uint64_t, void *))(v87 + 56))(v122, 0, 1, v123);
        goto LABEL_79;
      case 4u:
        *id v76 = *v77;
        uint64_t v91 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dsta = (char *)v76 + v91;
        uint64_t v85 = (char *)v77 + v91;
        uint64_t v92 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v93 = *(void *)(v92 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v85, 1, v92))
        {
LABEL_49:
          uint64_t v90 = sub_10003B754(&qword_10078C890);
          memcpy(__dsta, v85, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v126 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v126 - 8) + 32))(__dsta, v85, v126);
              swift_storeEnumTagMultiPayload();
              uint64_t v127 = v92;
              long long v128 = __dsta;
              break;
            default:
              memcpy(__dsta, v85, *(void *)(v93 + 64));
              long long v128 = __dsta;
              uint64_t v127 = v92;
              break;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v93 + 56))(v128, 0, 1, v127);
        }
        goto LABEL_79;
      case 7u:
        uint64_t v94 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v95 = *(void *)(v94 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v95 + 48))(v77, 1, v94))
        {
          uint64_t v96 = sub_10003B754(&qword_10078C518);
          memcpy(v76, v77, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          *id v76 = *v77;
          uint64_t v104 = *(int *)(v94 + 20);
          __dstf = (char *)v76 + v104;
          id v105 = (char *)v77 + v104;
          uint64_t v106 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v106 - 8) + 32))(__dstf, v105, v106);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v76, 0, 1, v94);
        }
        uint64_t v107 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v108 = (char *)v76 + v107;
        id v109 = (char *)v77 + v107;
        *(_OWORD *)uint64_t v108 = *(_OWORD *)v109;
        *((void *)v108 + 2) = *((void *)v109 + 2);
        goto LABEL_79;
      case 8u:
        uint64_t v97 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v98 = *(void *)(v97 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v98 + 48))(v77, 1, v97))
        {
          uint64_t v99 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v76, v77, *(void *)(*(void *)(v99 - 8) + 64));
        }
        else
        {
          uint64_t v110 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v110 - 8) + 32))(v76, v77, v110);
          *((unsigned char *)v76 + *(int *)(v97 + 20)) = *((unsigned char *)v77 + *(int *)(v97 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v98 + 56))(v76, 0, 1, v97);
        }
        uint64_t v111 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)v76 + *(int *)(v111 + 20)) = *(void *)((char *)v77 + *(int *)(v111 + 20));
        goto LABEL_79;
      case 9u:
        *(unsigned char *)id v76 = *(unsigned char *)v77;
        uint64_t v100 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v101 = (char *)v76 + v100;
        uint64_t v102 = (char *)v77 + v100;
        uint64_t v103 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v103 - 8) + 32))(v101, v102, v103);
LABEL_79:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v76, v77, *(void *)(*(void *)(v81 - 8) + 64));
        break;
    }
    long long v129 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
    *((unsigned char *)v76 + v129[5]) = *((unsigned char *)v77 + v129[5]);
    *(void *)((char *)v76 + v129[6]) = *(void *)((char *)v77 + v129[6]);
    *(void *)((char *)v76 + v129[7]) = *(void *)((char *)v77 + v129[7]);
    *(void *)((char *)v76 + v129[8]) = *(void *)((char *)v77 + v129[8]);
    *((unsigned char *)v76 + v129[9]) = *((unsigned char *)v77 + v129[9]);
    *(void *)((char *)v76 + *(int *)(v78 + 48)) = *(void *)((char *)v77 + *(int *)(v78 + 48));
    (*(void (**)(void *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
  }
  uint64_t v130 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v130) = *(_OWORD *)(a2 + v130);
  uint64_t v131 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(_OWORD *)(a1 + v131) = *(_OWORD *)(a2 + v131);
  uint64_t v132 = a3[24];
  *(_OWORD *)(a1 + a3[23]) = *(_OWORD *)(a2 + a3[23]);
  *(void *)(a1 + v132) = *(void *)(a2 + v132);
  uint64_t v133 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  uint64_t v134 = a1 + v133;
  uint64_t v135 = a2 + v133;
  long long v136 = *(_OWORD *)(v135 + 16);
  *(_OWORD *)uint64_t v134 = *(_OWORD *)v135;
  *(_OWORD *)(v134 + 16) = v136;
  *(void *)(v134 + 32) = *(void *)(v135 + 32);
  uint64_t v137 = a3[27];
  uint64_t v138 = a3[28];
  uint64_t v139 = a1 + v137;
  uint64_t v140 = a2 + v137;
  long long v141 = *(_OWORD *)(v140 + 16);
  *(_OWORD *)uint64_t v139 = *(_OWORD *)v140;
  *(_OWORD *)(v139 + 16) = v141;
  *(void *)(v139 + 32) = *(void *)(v140 + 32);
  uint64_t v142 = a1 + v138;
  uint64_t v143 = a2 + v138;
  *(_OWORD *)(a1 + v138) = *(_OWORD *)(a2 + v138);
  uint64_t v144 = sub_10003B754(&qword_100794B50);
  uint64_t v145 = *(int *)(v144 + 28);
  id v146 = (void *)(v142 + v145);
  long long v147 = (void *)(v143 + v145);
  uint64_t v148 = sub_10003B754(&qword_100794B68);
  uint64_t v149 = *(void **)(v148 - 8);
  if ((*((unsigned int (**)(void *, uint64_t, uint64_t))v149 + 6))(v147, 1, v148))
  {
    uint64_t v150 = sub_10003B754(&qword_1007A2550);
    memcpy(v146, v147, *(void *)(*(void *)(v150 - 8) + 64));
  }
  else
  {
    uint64_t v151 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v152 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v186 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v186 - 8) + 32))(v146, v147, v186);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v146, v147, *(void *)(*(void *)(v152 - 8) + 64));
            break;
        }
        goto LABEL_107;
      case 1u:
        uint64_t v153 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v195 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v195 - 8) + 32))(v146, v147, v195);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v146, v147, *(void *)(*(void *)(v153 - 8) + 64));
            break;
        }
LABEL_107:
        uint64_t v187 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v188 = v187[5];
        uint64_t v189 = (_OWORD *)((char *)v146 + v188);
        uint64_t v190 = (_OWORD *)((char *)v147 + v188);
        long long v191 = v190[3];
        v189[2] = v190[2];
        v189[3] = v191;
        long long v192 = v190[1];
        _OWORD *v189 = *v190;
        v189[1] = v192;
        *(_OWORD *)((char *)v189 + 106) = *(_OWORD *)((char *)v190 + 106);
        long long v193 = v190[6];
        long long v194 = v190[4];
        v189[5] = v190[5];
        v189[6] = v193;
        v189[4] = v194;
        *((unsigned char *)v146 + v187[6]) = *((unsigned char *)v147 + v187[6]);
        *((unsigned char *)v146 + v187[7]) = *((unsigned char *)v147 + v187[7]);
        *((unsigned char *)v146 + v187[8]) = *((unsigned char *)v147 + v187[8]);
        *((unsigned char *)v146 + v187[9]) = *((unsigned char *)v147 + v187[9]);
        *((unsigned char *)v146 + v187[10]) = *((unsigned char *)v147 + v187[10]);
        *(void *)((char *)v146 + v187[11]) = *(void *)((char *)v147 + v187[11]);
        goto LABEL_119;
      case 2u:
        __dstb = (void *)v144;
        *id v146 = *v147;
        uint64_t v154 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        id v221 = (char *)v146 + v154;
        id v155 = (char *)v147 + v154;
        uint64_t v156 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v157 = *(void *)(v156 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v157 + 48))(v155, 1, v156))
        {
          uint64_t v158 = sub_10003B754(&qword_10078C890);
          memcpy(v221, v155, *(void *)(*(void *)(v158 - 8) + 64));
          uint64_t v144 = (uint64_t)__dstb;
        }
        else
        {
          __src = (void *)v156;
          uint64_t v220 = (void (**)(char *, void, uint64_t, void *))v157;
          id v208 = v155;
          uint64_t v144 = (uint64_t)__dstb;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v198 = type metadata accessor for Date();
              long long v196 = v221;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v198 - 8) + 32))(v221, v208, v198);
              long long v197 = __src;
              swift_storeEnumTagMultiPayload();
              break;
            default:
              long long v196 = v221;
              memcpy(v221, v208, *(void *)(v157 + 64));
              long long v197 = __src;
              uint64_t v144 = (uint64_t)__dstb;
              break;
          }
          v220[7](v196, 0, 1, v197);
        }
        goto LABEL_119;
      case 3u:
        uint64_t v222 = v149;
        *id v146 = *v147;
        uint64_t v159 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v218 = (char *)v146 + v159;
        long long v160 = (char *)v147 + v159;
        uint64_t v161 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v162 = *(void *)(v161 - 8);
        __dstc = v160;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v160, 1, v161))
        {
          uint64_t v163 = sub_10003B754(&qword_10078C890);
          memcpy(v218, v160, *(void *)(*(void *)(v163 - 8) + 64));
          uint64_t v149 = v222;
        }
        else
        {
          uint64_t v209 = (void *)v161;
          __srca = (void (**)(char *, void, uint64_t, void *))v162;
          uint64_t v149 = v222;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v201 = type metadata accessor for Date();
              long long v199 = v218;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v201 - 8) + 32))(v218, __dstc, v201);
              long long v200 = v209;
              swift_storeEnumTagMultiPayload();
              break;
            default:
              long long v199 = v218;
              memcpy(v218, __dstc, *(void *)(v162 + 64));
              long long v200 = v209;
              uint64_t v149 = v222;
              break;
          }
          __srca[7](v199, 0, 1, v200);
        }
        goto LABEL_119;
      case 4u:
        __dstd = (void *)v144;
        *id v146 = *v147;
        uint64_t v164 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v219 = (char *)v146 + v164;
        long long v165 = (char *)v147 + v164;
        uint64_t v166 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v167 = *(void *)(v166 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
        {
          uint64_t v168 = sub_10003B754(&qword_10078C890);
          memcpy(v219, v165, *(void *)(*(void *)(v168 - 8) + 64));
          uint64_t v144 = (uint64_t)__dstd;
        }
        else
        {
          uint64_t v210 = (void (**)(char *, void, uint64_t, void *))v167;
          __srcb = (void *)v166;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v202 = type metadata accessor for Date();
              uint64_t v203 = v219;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v202 - 8) + 32))(v219, v165, v202);
              uint64_t v204 = __srcb;
              swift_storeEnumTagMultiPayload();
              id v205 = v210;
              break;
            default:
              uint64_t v203 = v219;
              memcpy(v219, v165, *(void *)(v167 + 64));
              id v205 = (void (**)(char *, void, uint64_t, void *))v167;
              uint64_t v204 = __srcb;
              break;
          }
          uint64_t v144 = (uint64_t)__dstd;
          v205[7](v203, 0, 1, v204);
        }
        goto LABEL_119;
      case 7u:
        uint64_t v169 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v170 = *(void *)(v169 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v170 + 48))(v147, 1, v169))
        {
          uint64_t v171 = sub_10003B754(&qword_10078C518);
          memcpy(v146, v147, *(void *)(*(void *)(v171 - 8) + 64));
        }
        else
        {
          *id v146 = *v147;
          uint64_t v179 = *(int *)(v169 + 20);
          uint64_t v223 = (char *)v147 + v179;
          __dstg = (char *)v146 + v179;
          uint64_t v180 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(__dstg, v223, v180);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v170 + 56))(v146, 0, 1, v169);
        }
        uint64_t v181 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v182 = (char *)v146 + v181;
        id v183 = (char *)v147 + v181;
        *(_OWORD *)uint64_t v182 = *(_OWORD *)v183;
        *((void *)v182 + 2) = *((void *)v183 + 2);
        goto LABEL_119;
      case 8u:
        uint64_t v172 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v173 = *(void *)(v172 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v173 + 48))(v147, 1, v172))
        {
          uint64_t v174 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v146, v147, *(void *)(*(void *)(v174 - 8) + 64));
        }
        else
        {
          uint64_t v184 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v184 - 8) + 32))(v146, v147, v184);
          *((unsigned char *)v146 + *(int *)(v172 + 20)) = *((unsigned char *)v147 + *(int *)(v172 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v146, 0, 1, v172);
        }
        uint64_t v185 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)v146 + *(int *)(v185 + 20)) = *(void *)((char *)v147 + *(int *)(v185 + 20));
        goto LABEL_119;
      case 9u:
        *(unsigned char *)id v146 = *(unsigned char *)v147;
        uint64_t v175 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v176 = (char *)v146 + v175;
        int v177 = (char *)v147 + v175;
        uint64_t v178 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v178 - 8) + 32))(v176, v177, v178);
LABEL_119:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v146, v147, *(void *)(*(void *)(v151 - 8) + 64));
        break;
    }
    uint64_t v206 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
    *((unsigned char *)v146 + v206[5]) = *((unsigned char *)v147 + v206[5]);
    *(_OWORD *)((char *)v146 + v206[6]) = *(_OWORD *)((char *)v147 + v206[6]);
    *(void *)((char *)v146 + v206[7]) = *(void *)((char *)v147 + v206[7]);
    *(void *)((char *)v146 + *(int *)(v148 + 48)) = *(void *)((char *)v147 + *(int *)(v148 + 48));
    (*((void (**)(void *, void, uint64_t, uint64_t))v149 + 7))(v146, 0, 1, v148);
  }
  *(unsigned char *)(v142 + *(int *)(v144 + 32)) = *(unsigned char *)(v143 + *(int *)(v144 + 32));
  return a1;
}

uint64_t sub_1005D0994(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  long long v6 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);

  long long v7 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  long long v8 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  long long v9 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  long long v10 = *(void **)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);

  uint64_t v11 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v11)
    {
      uint64_t v12 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v11;
      *(void *)(a1 + 72) = v12;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v11)
  {
    uint64_t v13 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v13;
    goto LABEL_8;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
LABEL_8:
  uint64_t v14 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  id v15 = *(void **)(a1 + 88);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);

  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  id v16 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);

  uint64_t v17 = *(void *)(a2 + 128);
  if (*(void *)(a1 + 128))
  {
    if (v17)
    {
      uint64_t v18 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = v17;
      *(void *)(a1 + 136) = v18;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v17)
  {
    uint64_t v19 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = v17;
    *(void *)(a1 + 136) = v19;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
LABEL_15:
  uint64_t v20 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  uint64_t v22 = *(void *)(a2 + 168);
  if (*(void *)(a1 + 168))
  {
    if (v22)
    {
      uint64_t v23 = *(void *)(a2 + 176);
      *(void *)(a1 + 168) = v22;
      *(void *)(a1 + 176) = v23;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v22)
  {
    uint64_t v24 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = v22;
    *(void *)(a1 + 176) = v24;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
LABEL_22:
  uint64_t v25 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v25;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(a2 + 200);
  if (*(void *)(a1 + 200))
  {
    if (v26)
    {
      uint64_t v27 = *(void *)(a2 + 208);
      *(void *)(a1 + 200) = v26;
      *(void *)(a1 + 208) = v27;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v26)
  {
    uint64_t v28 = *(void *)(a2 + 208);
    *(void *)(a1 + 200) = v26;
    *(void *)(a1 + 208) = v28;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
LABEL_29:
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  *(unsigned char *)(a1 + 224) = *(unsigned char *)(a2 + 224);
  uint64_t v29 = *(void **)(a1 + 232);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);

  uint64_t v30 = *(void *)(a2 + 240);
  if (*(void *)(a1 + 240))
  {
    if (v30)
    {
      uint64_t v31 = *(void *)(a2 + 248);
      *(void *)(a1 + 240) = v30;
      *(void *)(a1 + 248) = v31;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v30)
  {
    uint64_t v32 = *(void *)(a2 + 248);
    *(void *)(a1 + 240) = v30;
    *(void *)(a1 + 248) = v32;
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
LABEL_36:
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(a2 + 264);
  if (*(void *)(a1 + 264))
  {
    if (v33)
    {
      uint64_t v34 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = v33;
      *(void *)(a1 + 272) = v34;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v33)
  {
    uint64_t v35 = *(void *)(a2 + 272);
    *(void *)(a1 + 264) = v33;
    *(void *)(a1 + 272) = v35;
    goto LABEL_43;
  }
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_43:
  uint64_t v36 = a3[17];
  uint64_t v37 = a1 + v36;
  uint64_t v38 = a2 + v36;
  uint64_t v39 = *(void *)(a2 + v36 + 8);
  *(void *)(a1 + v36) = *(void *)(a2 + v36);
  swift_unknownObjectRelease();
  *(void *)(v37 + 8) = v39;
  uint64_t v40 = *(int *)(sub_10003B754(&qword_100794B60) + 28);
  uint64_t v41 = (void *)(v37 + v40);
  uint64_t v42 = (void *)(v38 + v40);
  uint64_t v43 = sub_10003B754(&qword_100794BB0);
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (v46)
  {
    if (!v47)
    {
      uint64_t v48 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v49 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v108 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v108 - 8) + 32))(v41, v42, v108);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v41, v42, *(void *)(*(void *)(v49 - 8) + 64));
              break;
          }
          goto LABEL_88;
        case 1u:
          uint64_t v53 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v117 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v117 - 8) + 32))(v41, v42, v117);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v41, v42, *(void *)(*(void *)(v53 - 8) + 64));
              break;
          }
LABEL_88:
          id v109 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v110 = v109[5];
          uint64_t v111 = (_OWORD *)((char *)v41 + v110);
          uint64_t v112 = (_OWORD *)((char *)v42 + v110);
          long long v113 = v112[3];
          v111[2] = v112[2];
          v111[3] = v113;
          long long v114 = v112[1];
          *uint64_t v111 = *v112;
          v111[1] = v114;
          *(_OWORD *)((char *)v111 + 106) = *(_OWORD *)((char *)v112 + 106);
          long long v115 = v112[6];
          long long v116 = v112[4];
          v111[5] = v112[5];
          v111[6] = v115;
          v111[4] = v116;
          *((unsigned char *)v41 + v109[6]) = *((unsigned char *)v42 + v109[6]);
          *((unsigned char *)v41 + v109[7]) = *((unsigned char *)v42 + v109[7]);
          *((unsigned char *)v41 + v109[8]) = *((unsigned char *)v42 + v109[8]);
          *((unsigned char *)v41 + v109[9]) = *((unsigned char *)v42 + v109[9]);
          *((unsigned char *)v41 + v109[10]) = *((unsigned char *)v42 + v109[10]);
          *(void *)((char *)v41 + v109[11]) = *(void *)((char *)v42 + v109[11]);
          goto LABEL_114;
        case 2u:
          *uint64_t v41 = *v42;
          uint64_t v54 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (char *)v41 + v54;
          uint64_t v55 = (char *)v42 + v54;
          uint64_t v56 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v57 = *(void *)(v56 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56)) {
            goto LABEL_55;
          }
          uint64_t v430 = v57;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v139 = type metadata accessor for Date();
              long long v136 = __dst;
              (*(void (**)(void))(*(void *)(v139 - 8) + 32))();
              uint64_t v138 = v56;
              swift_storeEnumTagMultiPayload();
              uint64_t v137 = v430;
              break;
            default:
              long long v136 = __dst;
              memcpy(__dst, v55, *(void *)(v430 + 64));
              uint64_t v137 = v430;
              uint64_t v138 = v56;
              break;
          }
          goto LABEL_107;
        case 3u:
          *uint64_t v41 = *v42;
          uint64_t v59 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dsta = (char *)v41 + v59;
          uint64_t v60 = (char *)v42 + v59;
          uint64_t v61 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v62 = *(void *)(v61 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
          {
            uint64_t v63 = sub_10003B754(&qword_10078C890);
            memcpy(__dsta, v60, *(void *)(*(void *)(v63 - 8) + 64));
          }
          else
          {
            uint64_t v431 = v62;
            uint64_t v435 = v61;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v140 = type metadata accessor for Date();
                long long v136 = __dsta;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v140 - 8) + 32))(__dsta, v60, v140);
                uint64_t v138 = v435;
                swift_storeEnumTagMultiPayload();
                uint64_t v137 = v431;
                break;
              default:
                long long v136 = __dsta;
                memcpy(__dsta, v60, *(void *)(v62 + 64));
                uint64_t v137 = v62;
                uint64_t v138 = v435;
                break;
            }
LABEL_107:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v137 + 56))(v136, 0, 1, v138);
          }
LABEL_114:
          swift_storeEnumTagMultiPayload();
LABEL_115:
          uint64_t v144 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
          *((unsigned char *)v41 + v144[5]) = *((unsigned char *)v42 + v144[5]);
          *(void *)((char *)v41 + v144[6]) = *(void *)((char *)v42 + v144[6]);
          *(void *)((char *)v41 + v144[7]) = *(void *)((char *)v42 + v144[7]);
          *((unsigned char *)v41 + v144[8]) = *((unsigned char *)v42 + v144[8]);
          uint64_t v145 = v144[9];
          id v146 = (char *)v41 + v145;
          long long v147 = (char *)v42 + v145;
          *(void *)id v146 = *(void *)v147;
          v146[8] = v147[8];
          *(void *)((char *)v41 + v144[10]) = *(void *)((char *)v42 + v144[10]);
          *(void *)((char *)v41 + v144[11]) = *(void *)((char *)v42 + v144[11]);
          *(void *)((char *)v41 + *(int *)(v43 + 48)) = *(void *)((char *)v42 + *(int *)(v43 + 48));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
          break;
        case 4u:
          *uint64_t v41 = *v42;
          uint64_t v64 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dst = (char *)v41 + v64;
          uint64_t v55 = (char *)v42 + v64;
          uint64_t v65 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v66 = *(void *)(v65 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v55, 1, v65))
          {
LABEL_55:
            uint64_t v58 = sub_10003B754(&qword_10078C890);
            memcpy(__dst, v55, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            uint64_t v436 = v65;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v143 = type metadata accessor for Date();
                long long v141 = __dst;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 32))(__dst, v55, v143);
                uint64_t v142 = v436;
                swift_storeEnumTagMultiPayload();
                break;
              default:
                long long v141 = __dst;
                memcpy(__dst, v55, *(void *)(v66 + 64));
                uint64_t v142 = v436;
                break;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v141, 0, 1, v142);
          }
          goto LABEL_114;
        case 7u:
          uint64_t v67 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v68 = *(void *)(v67 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v68 + 48))(v42, 1, v67))
          {
            uint64_t v69 = sub_10003B754(&qword_10078C518);
            memcpy(v41, v42, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            *uint64_t v41 = *v42;
            uint64_t v101 = *(int *)(v67 + 20);
            __dste = (char *)v42 + v101;
            uint64_t v451 = (char *)v41 + v101;
            uint64_t v102 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 32))(v451, __dste, v102);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v68 + 56))(v41, 0, 1, v67);
          }
          uint64_t v103 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v104 = (char *)v41 + v103;
          id v105 = (char *)v42 + v103;
          *(_OWORD *)uint64_t v104 = *(_OWORD *)v105;
          *((void *)v104 + 2) = *((void *)v105 + 2);
          goto LABEL_114;
        case 8u:
          uint64_t v70 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v71 = *(void *)(v70 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v71 + 48))(v42, 1, v70))
          {
            uint64_t v72 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v41, v42, *(void *)(*(void *)(v72 - 8) + 64));
          }
          else
          {
            uint64_t v106 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v106 - 8) + 32))(v41, v42, v106);
            *((unsigned char *)v41 + *(int *)(v70 + 20)) = *((unsigned char *)v42 + *(int *)(v70 + 20));
            (*(void (**)(void *, void, uint64_t, uint64_t))(v71 + 56))(v41, 0, 1, v70);
          }
          uint64_t v107 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void *)((char *)v41 + *(int *)(v107 + 20)) = *(void *)((char *)v42 + *(int *)(v107 + 20));
          goto LABEL_114;
        case 9u:
          *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
          uint64_t v73 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v74 = (char *)v41 + v73;
          uint64_t v75 = (char *)v42 + v73;
          uint64_t v76 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v76 - 8) + 32))(v74, v75, v76);
          goto LABEL_114;
        default:
          memcpy(v41, v42, *(void *)(*(void *)(v48 - 8) + 64));
          goto LABEL_115;
      }
      goto LABEL_127;
    }
LABEL_49:
    uint64_t v50 = sub_10003B754(&qword_100794BA8);
    memcpy(v41, v42, *(void *)(*(void *)(v50 - 8) + 64));
    goto LABEL_127;
  }
  if (v47)
  {
    sub_10003B6F8((uint64_t)v41, &qword_100794BB0);
    goto LABEL_49;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)v41);
    uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v52 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v126 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v126 - 8) + 32))(v41, v42, v126);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v41, v42, *(void *)(*(void *)(v52 - 8) + 64));
            break;
        }
        goto LABEL_101;
      case 1u:
        uint64_t v77 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v135 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v135 - 8) + 32))(v41, v42, v135);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v41, v42, *(void *)(*(void *)(v77 - 8) + 64));
            break;
        }
LABEL_101:
        uint64_t v127 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v128 = v127[5];
        long long v129 = (_OWORD *)((char *)v41 + v128);
        uint64_t v130 = (_OWORD *)((char *)v42 + v128);
        long long v131 = v130[3];
        v129[2] = v130[2];
        v129[3] = v131;
        long long v132 = v130[1];
        *long long v129 = *v130;
        v129[1] = v132;
        *(_OWORD *)((char *)v129 + 106) = *(_OWORD *)((char *)v130 + 106);
        long long v133 = v130[6];
        long long v134 = v130[4];
        v129[5] = v130[5];
        v129[6] = v133;
        v129[4] = v134;
        *((unsigned char *)v41 + v127[6]) = *((unsigned char *)v42 + v127[6]);
        *((unsigned char *)v41 + v127[7]) = *((unsigned char *)v42 + v127[7]);
        *((unsigned char *)v41 + v127[8]) = *((unsigned char *)v42 + v127[8]);
        *((unsigned char *)v41 + v127[9]) = *((unsigned char *)v42 + v127[9]);
        *((unsigned char *)v41 + v127[10]) = *((unsigned char *)v42 + v127[10]);
        *(void *)((char *)v41 + v127[11]) = *(void *)((char *)v42 + v127[11]);
        goto LABEL_125;
      case 2u:
        *uint64_t v41 = *v42;
        uint64_t v78 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v79 = (char *)v41 + v78;
        uint64_t v80 = (char *)v42 + v78;
        uint64_t v81 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v82 = *(void *)(v81 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81)) {
          goto LABEL_68;
        }
        uint64_t v437 = v81;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v150 = type metadata accessor for Date();
            uint64_t v148 = v79;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v150 - 8) + 32))(v79, v80, v150);
            uint64_t v149 = v437;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v148 = v79;
            memcpy(v79, v80, *(void *)(v82 + 64));
            uint64_t v149 = v437;
            break;
        }
        goto LABEL_124;
      case 3u:
        *uint64_t v41 = *v42;
        uint64_t v84 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v79 = (char *)v41 + v84;
        uint64_t v80 = (char *)v42 + v84;
        uint64_t v85 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v82 = *(void *)(v85 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v80, 1, v85))
        {
LABEL_68:
          uint64_t v83 = sub_10003B754(&qword_10078C890);
          memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
          goto LABEL_125;
        }
        uint64_t v438 = v85;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v151 = type metadata accessor for Date();
            uint64_t v148 = v79;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v151 - 8) + 32))(v79, v80, v151);
            uint64_t v149 = v438;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v148 = v79;
            memcpy(v79, v80, *(void *)(v82 + 64));
            uint64_t v149 = v438;
            break;
        }
        goto LABEL_124;
      case 4u:
        *uint64_t v41 = *v42;
        uint64_t v86 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v87 = (char *)v41 + v86;
        uint64_t v88 = (char *)v42 + v86;
        uint64_t v89 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v82 = *(void *)(v89 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v88, 1, v89))
        {
          uint64_t v90 = sub_10003B754(&qword_10078C890);
          memcpy(v87, v88, *(void *)(*(void *)(v90 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v153 = type metadata accessor for Date();
              uint64_t v154 = v88;
              uint64_t v148 = v87;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 32))(v87, v154, v153);
              uint64_t v149 = v89;
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v152 = v88;
              uint64_t v148 = v87;
              memcpy(v87, v152, *(void *)(v82 + 64));
              uint64_t v149 = v89;
              break;
          }
LABEL_124:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v148, 0, 1, v149);
        }
LABEL_125:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v91 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v92 = *(void *)(v91 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v92 + 48))(v42, 1, v91))
        {
          uint64_t v93 = sub_10003B754(&qword_10078C518);
          memcpy(v41, v42, *(void *)(*(void *)(v93 - 8) + 64));
        }
        else
        {
          *uint64_t v41 = *v42;
          uint64_t v118 = *(int *)(v91 + 20);
          id v452 = (char *)v41 + v118;
          long long v119 = (char *)v42 + v118;
          uint64_t v120 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v120 - 8) + 32))(v452, v119, v120);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v41, 0, 1, v91);
        }
        uint64_t v121 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v122 = (char *)v41 + v121;
        id v123 = (char *)v42 + v121;
        *(_OWORD *)uint64_t v122 = *(_OWORD *)v123;
        *((void *)v122 + 2) = *((void *)v123 + 2);
        goto LABEL_125;
      case 8u:
        uint64_t v94 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v95 = *(void *)(v94 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v95 + 48))(v42, 1, v94))
        {
          uint64_t v96 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v41, v42, *(void *)(*(void *)(v96 - 8) + 64));
        }
        else
        {
          uint64_t v124 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v124 - 8) + 32))(v41, v42, v124);
          *((unsigned char *)v41 + *(int *)(v94 + 20)) = *((unsigned char *)v42 + *(int *)(v94 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v95 + 56))(v41, 0, 1, v94);
        }
        uint64_t v125 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)v41 + *(int *)(v125 + 20)) = *(void *)((char *)v42 + *(int *)(v125 + 20));
        goto LABEL_125;
      case 9u:
        *(unsigned char *)uint64_t v41 = *(unsigned char *)v42;
        uint64_t v97 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v98 = (char *)v41 + v97;
        uint64_t v99 = (char *)v42 + v97;
        uint64_t v100 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 32))(v98, v99, v100);
        goto LABEL_125;
      default:
        memcpy(v41, v42, *(void *)(*(void *)(v51 - 8) + 64));
        break;
    }
  }
  id v155 = (int *)type metadata accessor for TTRReminderCellTitleViewModel();
  *((unsigned char *)v41 + v155[5]) = *((unsigned char *)v42 + v155[5]);
  uint64_t v156 = v155[6];
  uint64_t v157 = *(void **)((char *)v41 + v156);
  *(void *)((char *)v41 + v156) = *(void *)((char *)v42 + v156);

  uint64_t v158 = v155[7];
  uint64_t v159 = *(void **)((char *)v41 + v158);
  *(void *)((char *)v41 + v158) = *(void *)((char *)v42 + v158);

  *((unsigned char *)v41 + v155[8]) = *((unsigned char *)v42 + v155[8]);
  uint64_t v160 = v155[9];
  uint64_t v161 = (char *)v41 + v160;
  uint64_t v162 = (char *)v42 + v160;
  *(void *)uint64_t v161 = *(void *)v162;
  v161[8] = v162[8];
  *(void *)((char *)v41 + v155[10]) = *(void *)((char *)v42 + v155[10]);
  swift_bridgeObjectRelease();
  uint64_t v163 = v155[11];
  uint64_t v164 = *(void **)((char *)v41 + v163);
  *(void *)((char *)v41 + v163) = *(void *)((char *)v42 + v163);

  *(void *)((char *)v41 + *(int *)(v43 + 48)) = *(void *)((char *)v42 + *(int *)(v43 + 48));
LABEL_127:
  uint64_t v165 = a3[18];
  uint64_t v166 = a1 + v165;
  uint64_t v167 = a2 + v165;
  *(unsigned char *)uint64_t v166 = *(unsigned char *)(a2 + v165);
  uint64_t v168 = *(void *)(a2 + v165 + 16);
  *(void *)(v166 + 8) = *(void *)(a2 + v165 + 8);
  swift_unknownObjectRelease();
  *(void *)(v166 + 16) = v168;
  uint64_t v169 = *(int *)(sub_10003B754(&qword_100794B58) + 40);
  uint64_t v170 = (void *)(v166 + v169);
  uint64_t v171 = (void *)(v167 + v169);
  uint64_t v172 = sub_10003B754(&qword_100794B98);
  uint64_t v173 = *(void *)(v172 - 8);
  uint64_t v174 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v173 + 48);
  int v175 = v174(v170, 1, v172);
  int v176 = v174(v171, 1, v172);
  if (v175)
  {
    if (!v176)
    {
      uint64_t v177 = type metadata accessor for TTRRemindersListViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v178 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v237 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v237 - 8) + 32))(v170, v171, v237);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v170, v171, *(void *)(*(void *)(v178 - 8) + 64));
              break;
          }
          goto LABEL_172;
        case 1u:
          uint64_t v182 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v246 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v246 - 8) + 32))(v170, v171, v246);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v170, v171, *(void *)(*(void *)(v182 - 8) + 64));
              break;
          }
LABEL_172:
          id v238 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
          uint64_t v239 = v238[5];
          id v240 = (_OWORD *)((char *)v170 + v239);
          id v241 = (_OWORD *)((char *)v171 + v239);
          long long v242 = v241[3];
          v240[2] = v241[2];
          v240[3] = v242;
          long long v243 = v241[1];
          *id v240 = *v241;
          v240[1] = v243;
          *(_OWORD *)((char *)v240 + 106) = *(_OWORD *)((char *)v241 + 106);
          long long v244 = v241[6];
          long long v245 = v241[4];
          v240[5] = v241[5];
          v240[6] = v244;
          v240[4] = v245;
          *((unsigned char *)v170 + v238[6]) = *((unsigned char *)v171 + v238[6]);
          *((unsigned char *)v170 + v238[7]) = *((unsigned char *)v171 + v238[7]);
          *((unsigned char *)v170 + v238[8]) = *((unsigned char *)v171 + v238[8]);
          *((unsigned char *)v170 + v238[9]) = *((unsigned char *)v171 + v238[9]);
          *((unsigned char *)v170 + v238[10]) = *((unsigned char *)v171 + v238[10]);
          *(void *)((char *)v170 + v238[11]) = *(void *)((char *)v171 + v238[11]);
          goto LABEL_198;
        case 2u:
          *uint64_t v170 = *v171;
          uint64_t v183 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dstb = (char *)v170 + v183;
          uint64_t v184 = (char *)v171 + v183;
          uint64_t v185 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v186 = *(void *)(v185 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185)) {
            goto LABEL_139;
          }
          uint64_t v432 = v186;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v268 = type metadata accessor for Date();
              uint64_t v265 = __dstb;
              (*(void (**)(void))(*(void *)(v268 - 8) + 32))();
              uint64_t v267 = v185;
              swift_storeEnumTagMultiPayload();
              uint64_t v266 = v432;
              break;
            default:
              uint64_t v265 = __dstb;
              memcpy(__dstb, v184, *(void *)(v432 + 64));
              uint64_t v266 = v432;
              uint64_t v267 = v185;
              break;
          }
          goto LABEL_191;
        case 3u:
          *uint64_t v170 = *v171;
          uint64_t v188 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dstc = (char *)v170 + v188;
          uint64_t v189 = (char *)v171 + v188;
          uint64_t v190 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v191 = *(void *)(v190 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
          {
            uint64_t v192 = sub_10003B754(&qword_10078C890);
            memcpy(__dstc, v189, *(void *)(*(void *)(v192 - 8) + 64));
          }
          else
          {
            uint64_t v433 = v191;
            uint64_t v439 = v190;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v269 = type metadata accessor for Date();
                uint64_t v265 = __dstc;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v269 - 8) + 32))(__dstc, v189, v269);
                uint64_t v267 = v439;
                swift_storeEnumTagMultiPayload();
                uint64_t v266 = v433;
                break;
              default:
                uint64_t v265 = __dstc;
                memcpy(__dstc, v189, *(void *)(v191 + 64));
                uint64_t v266 = v191;
                uint64_t v267 = v439;
                break;
            }
LABEL_191:
            (*(void (**)(char *, void, uint64_t, uint64_t))(v266 + 56))(v265, 0, 1, v267);
          }
LABEL_198:
          swift_storeEnumTagMultiPayload();
LABEL_199:
          uint64_t v273 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
          *((unsigned char *)v170 + v273[5]) = *((unsigned char *)v171 + v273[5]);
          *(void *)((char *)v170 + v273[6]) = *(void *)((char *)v171 + v273[6]);
          *(void *)((char *)v170 + v273[7]) = *(void *)((char *)v171 + v273[7]);
          *(void *)((char *)v170 + v273[8]) = *(void *)((char *)v171 + v273[8]);
          *((unsigned char *)v170 + v273[9]) = *((unsigned char *)v171 + v273[9]);
          *(void *)((char *)v170 + *(int *)(v172 + 48)) = *(void *)((char *)v171 + *(int *)(v172 + 48));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v173 + 56))(v170, 0, 1, v172);
          break;
        case 4u:
          *uint64_t v170 = *v171;
          uint64_t v193 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
          __dstb = (char *)v170 + v193;
          uint64_t v184 = (char *)v171 + v193;
          uint64_t v194 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          uint64_t v195 = *(void *)(v194 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v184, 1, v194))
          {
LABEL_139:
            uint64_t v187 = sub_10003B754(&qword_10078C890);
            memcpy(__dstb, v184, *(void *)(*(void *)(v187 - 8) + 64));
          }
          else
          {
            uint64_t v440 = v194;
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v272 = type metadata accessor for Date();
                uint64_t v270 = __dstb;
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v272 - 8) + 32))(__dstb, v184, v272);
                uint64_t v271 = v440;
                swift_storeEnumTagMultiPayload();
                break;
              default:
                uint64_t v270 = __dstb;
                memcpy(__dstb, v184, *(void *)(v195 + 64));
                uint64_t v271 = v440;
                break;
            }
            (*(void (**)(char *, void, uint64_t, uint64_t))(v195 + 56))(v270, 0, 1, v271);
          }
          goto LABEL_198;
        case 7u:
          uint64_t v196 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
          uint64_t v197 = *(void *)(v196 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v197 + 48))(v171, 1, v196))
          {
            uint64_t v198 = sub_10003B754(&qword_10078C518);
            memcpy(v170, v171, *(void *)(*(void *)(v198 - 8) + 64));
          }
          else
          {
            *uint64_t v170 = *v171;
            uint64_t v230 = *(int *)(v196 + 20);
            __dstf = (char *)v171 + v230;
            uint64_t v453 = (char *)v170 + v230;
            uint64_t v231 = type metadata accessor for REMHashtagLabelSpecifier();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v231 - 8) + 32))(v453, __dstf, v231);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v197 + 56))(v170, 0, 1, v196);
          }
          uint64_t v232 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
          uint64_t v233 = (char *)v170 + v232;
          char v234 = (char *)v171 + v232;
          *(_OWORD *)uint64_t v233 = *(_OWORD *)v234;
          *((void *)v233 + 2) = *((void *)v234 + 2);
          goto LABEL_198;
        case 8u:
          uint64_t v199 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
          uint64_t v200 = *(void *)(v199 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v200 + 48))(v171, 1, v199))
          {
            uint64_t v201 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
            memcpy(v170, v171, *(void *)(*(void *)(v201 - 8) + 64));
          }
          else
          {
            uint64_t v235 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v235 - 8) + 32))(v170, v171, v235);
            *((unsigned char *)v170 + *(int *)(v199 + 20)) = *((unsigned char *)v171 + *(int *)(v199 + 20));
            (*(void (**)(void *, void, uint64_t, uint64_t))(v200 + 56))(v170, 0, 1, v199);
          }
          uint64_t v236 = type metadata accessor for TTRTemplatePublicLinkData();
          *(void *)((char *)v170 + *(int *)(v236 + 20)) = *(void *)((char *)v171 + *(int *)(v236 + 20));
          goto LABEL_198;
        case 9u:
          *(unsigned char *)uint64_t v170 = *(unsigned char *)v171;
          uint64_t v202 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
          uint64_t v203 = (char *)v170 + v202;
          uint64_t v204 = (char *)v171 + v202;
          uint64_t v205 = type metadata accessor for AnyTip();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v205 - 8) + 32))(v203, v204, v205);
          goto LABEL_198;
        default:
          memcpy(v170, v171, *(void *)(*(void *)(v177 - 8) + 64));
          goto LABEL_199;
      }
      goto LABEL_211;
    }
LABEL_133:
    uint64_t v179 = sub_10003B754(&qword_100794B90);
    memcpy(v170, v171, *(void *)(*(void *)(v179 - 8) + 64));
    goto LABEL_211;
  }
  if (v176)
  {
    sub_10003B6F8((uint64_t)v170, &qword_100794B98);
    goto LABEL_133;
  }
  if (a1 != a2)
  {
    sub_10005FD1C((uint64_t)v170);
    uint64_t v180 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v181 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v255 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v255 - 8) + 32))(v170, v171, v255);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v170, v171, *(void *)(*(void *)(v181 - 8) + 64));
            break;
        }
        goto LABEL_185;
      case 1u:
        uint64_t v206 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v264 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v264 - 8) + 32))(v170, v171, v264);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v170, v171, *(void *)(*(void *)(v206 - 8) + 64));
            break;
        }
LABEL_185:
        id v256 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v257 = v256[5];
        id v258 = (_OWORD *)((char *)v170 + v257);
        uint64_t v259 = (_OWORD *)((char *)v171 + v257);
        long long v260 = v259[3];
        v258[2] = v259[2];
        v258[3] = v260;
        long long v261 = v259[1];
        *id v258 = *v259;
        v258[1] = v261;
        *(_OWORD *)((char *)v258 + 106) = *(_OWORD *)((char *)v259 + 106);
        long long v262 = v259[6];
        long long v263 = v259[4];
        v258[5] = v259[5];
        v258[6] = v262;
        v258[4] = v263;
        *((unsigned char *)v170 + v256[6]) = *((unsigned char *)v171 + v256[6]);
        *((unsigned char *)v170 + v256[7]) = *((unsigned char *)v171 + v256[7]);
        *((unsigned char *)v170 + v256[8]) = *((unsigned char *)v171 + v256[8]);
        *((unsigned char *)v170 + v256[9]) = *((unsigned char *)v171 + v256[9]);
        *((unsigned char *)v170 + v256[10]) = *((unsigned char *)v171 + v256[10]);
        *(void *)((char *)v170 + v256[11]) = *(void *)((char *)v171 + v256[11]);
        goto LABEL_209;
      case 2u:
        *uint64_t v170 = *v171;
        uint64_t v207 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        id v208 = (char *)v170 + v207;
        uint64_t v209 = (char *)v171 + v207;
        uint64_t v210 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v211 = *(void *)(v210 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48))(v209, 1, v210)) {
          goto LABEL_152;
        }
        uint64_t v441 = v210;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v276 = type metadata accessor for Date();
            id v274 = v208;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v276 - 8) + 32))(v208, v209, v276);
            uint64_t v275 = v441;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            id v274 = v208;
            memcpy(v208, v209, *(void *)(v211 + 64));
            uint64_t v275 = v441;
            break;
        }
        goto LABEL_208;
      case 3u:
        *uint64_t v170 = *v171;
        uint64_t v213 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        id v208 = (char *)v170 + v213;
        uint64_t v209 = (char *)v171 + v213;
        uint64_t v214 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v211 = *(void *)(v214 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48))(v209, 1, v214))
        {
LABEL_152:
          uint64_t v212 = sub_10003B754(&qword_10078C890);
          memcpy(v208, v209, *(void *)(*(void *)(v212 - 8) + 64));
          goto LABEL_209;
        }
        uint64_t v442 = v214;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v277 = type metadata accessor for Date();
            id v274 = v208;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v277 - 8) + 32))(v208, v209, v277);
            uint64_t v275 = v442;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            id v274 = v208;
            memcpy(v208, v209, *(void *)(v211 + 64));
            uint64_t v275 = v442;
            break;
        }
        goto LABEL_208;
      case 4u:
        *uint64_t v170 = *v171;
        uint64_t v215 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v216 = (char *)v170 + v215;
        uint64_t v217 = (char *)v171 + v215;
        uint64_t v218 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v211 = *(void *)(v218 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v211 + 48))(v217, 1, v218))
        {
          uint64_t v219 = sub_10003B754(&qword_10078C890);
          memcpy(v216, v217, *(void *)(*(void *)(v219 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v279 = type metadata accessor for Date();
              uint64_t v280 = v217;
              id v274 = v216;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v279 - 8) + 32))(v216, v280, v279);
              uint64_t v275 = v218;
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v278 = v217;
              id v274 = v216;
              memcpy(v216, v278, *(void *)(v211 + 64));
              uint64_t v275 = v218;
              break;
          }
LABEL_208:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v211 + 56))(v274, 0, 1, v275);
        }
LABEL_209:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v220 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v221 = *(void *)(v220 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v221 + 48))(v171, 1, v220))
        {
          uint64_t v222 = sub_10003B754(&qword_10078C518);
          memcpy(v170, v171, *(void *)(*(void *)(v222 - 8) + 64));
        }
        else
        {
          *uint64_t v170 = *v171;
          uint64_t v247 = *(int *)(v220 + 20);
          uint64_t v454 = (char *)v170 + v247;
          id v248 = (char *)v171 + v247;
          uint64_t v249 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v249 - 8) + 32))(v454, v248, v249);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v221 + 56))(v170, 0, 1, v220);
        }
        uint64_t v250 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        id v251 = (char *)v170 + v250;
        long long v252 = (char *)v171 + v250;
        *(_OWORD *)id v251 = *(_OWORD *)v252;
        *((void *)v251 + 2) = *((void *)v252 + 2);
        goto LABEL_209;
      case 8u:
        uint64_t v223 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v224 = *(void *)(v223 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v224 + 48))(v171, 1, v223))
        {
          uint64_t v225 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v170, v171, *(void *)(*(void *)(v225 - 8) + 64));
        }
        else
        {
          uint64_t v253 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v253 - 8) + 32))(v170, v171, v253);
          *((unsigned char *)v170 + *(int *)(v223 + 20)) = *((unsigned char *)v171 + *(int *)(v223 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v224 + 56))(v170, 0, 1, v223);
        }
        uint64_t v254 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)v170 + *(int *)(v254 + 20)) = *(void *)((char *)v171 + *(int *)(v254 + 20));
        goto LABEL_209;
      case 9u:
        *(unsigned char *)uint64_t v170 = *(unsigned char *)v171;
        uint64_t v226 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v227 = (char *)v170 + v226;
        uint64_t v228 = (char *)v171 + v226;
        uint64_t v229 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v229 - 8) + 32))(v227, v228, v229);
        goto LABEL_209;
      default:
        memcpy(v170, v171, *(void *)(*(void *)(v180 - 8) + 64));
        break;
    }
  }
  uint64_t v281 = (int *)type metadata accessor for TTRIReminderCellNotesViewModel();
  *((unsigned char *)v170 + v281[5]) = *((unsigned char *)v171 + v281[5]);
  uint64_t v282 = v281[6];
  uint64_t v283 = *(void **)((char *)v170 + v282);
  *(void *)((char *)v170 + v282) = *(void *)((char *)v171 + v282);

  *(void *)((char *)v170 + v281[7]) = *(void *)((char *)v171 + v281[7]);
  swift_bridgeObjectRelease();
  *(void *)((char *)v170 + v281[8]) = *(void *)((char *)v171 + v281[8]);
  swift_bridgeObjectRelease();
  *((unsigned char *)v170 + v281[9]) = *((unsigned char *)v171 + v281[9]);
  *(void *)((char *)v170 + *(int *)(v172 + 48)) = *(void *)((char *)v171 + *(int *)(v172 + 48));
LABEL_211:
  uint64_t v284 = a3[19];
  uint64_t v285 = *(void **)(a1 + v284);
  *(void *)(a1 + v284) = *(void *)(a2 + v284);

  uint64_t v286 = a3[20];
  uint64_t v287 = (void *)(a1 + v286);
  uint64_t v288 = (uint64_t *)(a2 + v286);
  uint64_t v290 = *v288;
  uint64_t v289 = v288[1];
  void *v287 = v290;
  v287[1] = v289;
  swift_bridgeObjectRelease();
  uint64_t v291 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  uint64_t v292 = (void *)(a1 + v291);
  uint64_t v293 = (uint64_t *)(a2 + v291);
  uint64_t v295 = *v293;
  uint64_t v294 = v293[1];
  *uint64_t v292 = v295;
  v292[1] = v294;
  swift_bridgeObjectRelease();
  uint64_t v296 = a3[23];
  uint64_t v297 = (void *)(a1 + v296);
  id v298 = (uint64_t *)(a2 + v296);
  uint64_t v300 = *v298;
  uint64_t v299 = v298[1];
  *uint64_t v297 = v300;
  v297[1] = v299;
  swift_bridgeObjectRelease();
  uint64_t v301 = a3[24];
  uint64_t v302 = *(void **)(a1 + v301);
  *(void *)(a1 + v301) = *(void *)(a2 + v301);

  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  swift_bridgeObjectRelease();
  uint64_t v303 = a3[26];
  uint64_t v304 = (void *)(a1 + v303);
  uint64_t v305 = (void *)(a2 + v303);
  uint64_t v306 = *(void **)(a1 + v303);
  void *v304 = *v305;

  uint64_t v307 = v305[2];
  v304[1] = v305[1];
  v304[2] = v307;
  swift_bridgeObjectRelease();
  uint64_t v308 = v305[3];
  if (v304[3])
  {
    if (v308)
    {
      uint64_t v309 = v305[4];
      v304[3] = v308;
      v304[4] = v309;
      swift_release();
      goto LABEL_218;
    }
    swift_release();
  }
  else if (v308)
  {
    uint64_t v310 = v305[4];
    v304[3] = v308;
    v304[4] = v310;
    goto LABEL_218;
  }
  *(_OWORD *)(v304 + 3) = *(_OWORD *)(v305 + 3);
LABEL_218:
  uint64_t v311 = a3[27];
  uint64_t v312 = (void *)(a1 + v311);
  uint64_t v313 = (void *)(a2 + v311);
  uint64_t v314 = *(void **)(a1 + v311);
  *uint64_t v312 = *v313;

  uint64_t v315 = v313[2];
  v312[1] = v313[1];
  v312[2] = v315;
  swift_bridgeObjectRelease();
  uint64_t v316 = v313[3];
  if (v312[3])
  {
    if (v316)
    {
      uint64_t v317 = v313[4];
      v312[3] = v316;
      v312[4] = v317;
      swift_release();
      goto LABEL_225;
    }
    swift_release();
  }
  else if (v316)
  {
    uint64_t v318 = v313[4];
    v312[3] = v316;
    v312[4] = v318;
    goto LABEL_225;
  }
  *(_OWORD *)(v312 + 3) = *(_OWORD *)(v313 + 3);
LABEL_225:
  uint64_t v319 = a3[28];
  uint64_t v320 = a1 + v319;
  uint64_t v321 = a2 + v319;
  uint64_t v322 = *(void *)(a2 + v319 + 8);
  *(void *)(a1 + v319) = *(void *)(a2 + v319);
  swift_unknownObjectRelease();
  *(void *)(v320 + 8) = v322;
  __dstd = (int *)sub_10003B754(&qword_100794B50);
  uint64_t v455 = v321;
  uint64_t v323 = __dstd[7];
  id v324 = (void *)(v320 + v323);
  uint64_t v325 = (void *)(v321 + v323);
  uint64_t v326 = sub_10003B754(&qword_100794B68);
  uint64_t v327 = *(void *)(v326 - 8);
  uint64_t v328 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v327 + 48);
  int v329 = v328(v324, 1, v326);
  uint64_t v443 = v326;
  int v330 = v328(v325, 1, v326);
  if (!v329)
  {
    if (!v330)
    {
      if (a1 != a2)
      {
        sub_10005FD1C((uint64_t)v324);
        uint64_t v336 = type metadata accessor for TTRRemindersListViewModel.Item();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            uint64_t v337 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v406 = type metadata accessor for Date();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v406 - 8) + 32))(v324, v325, v406);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v324, v325, *(void *)(*(void *)(v337 - 8) + 64));
                break;
            }
            goto LABEL_285;
          case 1u:
            uint64_t v359 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v415 = type metadata accessor for Date();
                (*(void (**)(void *, void *, uint64_t))(*(void *)(v415 - 8) + 32))(v324, v325, v415);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v324, v325, *(void *)(*(void *)(v359 - 8) + 64));
                break;
            }
LABEL_285:
            long long v407 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
            uint64_t v408 = v407[5];
            long long v409 = (_OWORD *)((char *)v324 + v408);
            long long v410 = (_OWORD *)((char *)v325 + v408);
            long long v411 = v410[3];
            v409[2] = v410[2];
            v409[3] = v411;
            long long v412 = v410[1];
            *long long v409 = *v410;
            v409[1] = v412;
            *(_OWORD *)((char *)v409 + 106) = *(_OWORD *)((char *)v410 + 106);
            long long v413 = v410[6];
            long long v414 = v410[4];
            v409[5] = v410[5];
            v409[6] = v413;
            v409[4] = v414;
            *((unsigned char *)v324 + v407[6]) = *((unsigned char *)v325 + v407[6]);
            *((unsigned char *)v324 + v407[7]) = *((unsigned char *)v325 + v407[7]);
            *((unsigned char *)v324 + v407[8]) = *((unsigned char *)v325 + v407[8]);
            *((unsigned char *)v324 + v407[9]) = *((unsigned char *)v325 + v407[9]);
            *((unsigned char *)v324 + v407[10]) = *((unsigned char *)v325 + v407[10]);
            *(void *)((char *)v324 + v407[11]) = *(void *)((char *)v325 + v407[11]);
            goto LABEL_310;
          case 2u:
            *id v324 = *v325;
            uint64_t v360 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
            long long v361 = (char *)v324 + v360;
            uint64_t v362 = (char *)v325 + v360;
            uint64_t v363 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            uint64_t v364 = *(void *)(v363 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v362, 1, v363)) {
              goto LABEL_254;
            }
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v421 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v421 - 8) + 32))(v361, v362, v421);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v361, v362, *(void *)(v364 + 64));
                break;
            }
            goto LABEL_309;
          case 3u:
            *id v324 = *v325;
            uint64_t v365 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
            long long v361 = (char *)v324 + v365;
            uint64_t v362 = (char *)v325 + v365;
            uint64_t v363 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            uint64_t v364 = *(void *)(v363 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v362, 1, v363)) {
              goto LABEL_254;
            }
            switch(swift_getEnumCaseMultiPayload())
            {
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v422 = type metadata accessor for Date();
                (*(void (**)(char *, char *, uint64_t))(*(void *)(v422 - 8) + 32))(v361, v362, v422);
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v361, v362, *(void *)(v364 + 64));
                break;
            }
            goto LABEL_309;
          case 4u:
            *id v324 = *v325;
            uint64_t v367 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
            long long v361 = (char *)v324 + v367;
            uint64_t v362 = (char *)v325 + v367;
            uint64_t v363 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            uint64_t v364 = *(void *)(v363 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v364 + 48))(v362, 1, v363))
            {
LABEL_254:
              uint64_t v366 = sub_10003B754(&qword_10078C890);
              memcpy(v361, v362, *(void *)(*(void *)(v366 - 8) + 64));
            }
            else
            {
              switch(swift_getEnumCaseMultiPayload())
              {
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  uint64_t v423 = type metadata accessor for Date();
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v423 - 8) + 32))(v361, v362, v423);
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(v361, v362, *(void *)(v364 + 64));
                  break;
              }
LABEL_309:
              (*(void (**)(char *, void, uint64_t, uint64_t))(v364 + 56))(v361, 0, 1, v363);
            }
LABEL_310:
            swift_storeEnumTagMultiPayload();
            break;
          case 7u:
            uint64_t v368 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
            uint64_t v369 = *(void *)(v368 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v369 + 48))(v325, 1, v368))
            {
              uint64_t v370 = sub_10003B754(&qword_10078C518);
              memcpy(v324, v325, *(void *)(*(void *)(v370 - 8) + 64));
            }
            else
            {
              *id v324 = *v325;
              uint64_t v397 = *(int *)(v368 + 20);
              id v398 = (char *)v324 + v397;
              uint64_t v399 = (char *)v325 + v397;
              uint64_t v400 = type metadata accessor for REMHashtagLabelSpecifier();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v400 - 8) + 32))(v398, v399, v400);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v369 + 56))(v324, 0, 1, v368);
            }
            uint64_t v401 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
            uint64_t v402 = (char *)v324 + v401;
            v403 = (char *)v325 + v401;
            *(_OWORD *)uint64_t v402 = *(_OWORD *)v403;
            *((void *)v402 + 2) = *((void *)v403 + 2);
            goto LABEL_310;
          case 8u:
            uint64_t v371 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
            uint64_t v372 = *(void *)(v371 - 8);
            if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v372 + 48))(v325, 1, v371))
            {
              uint64_t v373 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
              memcpy(v324, v325, *(void *)(*(void *)(v373 - 8) + 64));
            }
            else
            {
              uint64_t v404 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v404 - 8) + 32))(v324, v325, v404);
              *((unsigned char *)v324 + *(int *)(v371 + 20)) = *((unsigned char *)v325 + *(int *)(v371 + 20));
              (*(void (**)(void *, void, uint64_t, uint64_t))(v372 + 56))(v324, 0, 1, v371);
            }
            uint64_t v405 = type metadata accessor for TTRTemplatePublicLinkData();
            *(void *)((char *)v324 + *(int *)(v405 + 20)) = *(void *)((char *)v325 + *(int *)(v405 + 20));
            goto LABEL_310;
          case 9u:
            *(unsigned char *)id v324 = *(unsigned char *)v325;
            uint64_t v374 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
            long long v375 = (char *)v324 + v374;
            long long v376 = (char *)v325 + v374;
            uint64_t v377 = type metadata accessor for AnyTip();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v377 - 8) + 32))(v375, v376, v377);
            goto LABEL_310;
          default:
            memcpy(v324, v325, *(void *)(*(void *)(v336 - 8) + 64));
            break;
        }
      }
      uint64_t v424 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
      *((unsigned char *)v324 + v424[5]) = *((unsigned char *)v325 + v424[5]);
      uint64_t v425 = v424[6];
      int v426 = (void *)((char *)v324 + v425);
      long long v427 = (void *)((char *)v325 + v425);
      uint64_t v429 = *v427;
      uint64_t v428 = v427[1];
      *int v426 = v429;
      v426[1] = v428;
      swift_bridgeObjectRelease();
      *(void *)((char *)v324 + v424[7]) = *(void *)((char *)v325 + v424[7]);
      swift_bridgeObjectRelease();
      *(void *)((char *)v324 + *(int *)(v443 + 48)) = *(void *)((char *)v325 + *(int *)(v443 + 48));
      goto LABEL_232;
    }
    sub_10003B6F8((uint64_t)v324, &qword_100794B68);
LABEL_231:
    uint64_t v334 = sub_10003B754(&qword_1007A2550);
    memcpy(v324, v325, *(void *)(*(void *)(v334 - 8) + 64));
LABEL_232:
    uint64_t v335 = __dstd;
    goto LABEL_300;
  }
  if (v330) {
    goto LABEL_231;
  }
  uint64_t v331 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v332 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v333 = v326;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v387 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v387 - 8) + 32))(v324, v325, v387);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v324, v325, *(void *)(*(void *)(v332 - 8) + 64));
          uint64_t v333 = v326;
          break;
      }
      goto LABEL_272;
    case 1u:
      uint64_t v338 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v333 = v326;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v396 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v396 - 8) + 32))(v324, v325, v396);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v324, v325, *(void *)(*(void *)(v338 - 8) + 64));
          uint64_t v333 = v326;
          break;
      }
LABEL_272:
      id v388 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v389 = v388[5];
      char v390 = (_OWORD *)((char *)v324 + v389);
      int v391 = (_OWORD *)((char *)v325 + v389);
      long long v392 = v391[3];
      v390[2] = v391[2];
      v390[3] = v392;
      long long v393 = v391[1];
      *char v390 = *v391;
      v390[1] = v393;
      *(_OWORD *)((char *)v390 + 106) = *(_OWORD *)((char *)v391 + 106);
      long long v394 = v391[6];
      long long v395 = v391[4];
      v390[5] = v391[5];
      v390[6] = v394;
      v390[4] = v395;
      *((unsigned char *)v324 + v388[6]) = *((unsigned char *)v325 + v388[6]);
      *((unsigned char *)v324 + v388[7]) = *((unsigned char *)v325 + v388[7]);
      *((unsigned char *)v324 + v388[8]) = *((unsigned char *)v325 + v388[8]);
      *((unsigned char *)v324 + v388[9]) = *((unsigned char *)v325 + v388[9]);
      *((unsigned char *)v324 + v388[10]) = *((unsigned char *)v325 + v388[10]);
      *(void *)((char *)v324 + v388[11]) = *(void *)((char *)v325 + v388[11]);
      goto LABEL_298;
    case 2u:
      *id v324 = *v325;
      uint64_t v339 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v340 = (char *)v324 + v339;
      uint64_t v341 = (char *)v325 + v339;
      uint64_t v342 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v343 = *(void *)(v342 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v343 + 48))(v341, 1, v342)) {
        goto LABEL_240;
      }
      uint64_t v434 = v343;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v416 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v416 - 8) + 32))(v340, v341, v416);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v340, v341, *(void *)(v343 + 64));
          break;
      }
      goto LABEL_297;
    case 3u:
      *id v324 = *v325;
      uint64_t v344 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v340 = (char *)v324 + v344;
      uint64_t v341 = (char *)v325 + v344;
      uint64_t v342 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v345 = *(void *)(v342 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v345 + 48))(v341, 1, v342)) {
        goto LABEL_240;
      }
      uint64_t v434 = v345;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v417 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v417 - 8) + 32))(v340, v341, v417);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v340, v341, *(void *)(v345 + 64));
          break;
      }
      goto LABEL_297;
    case 4u:
      *id v324 = *v325;
      uint64_t v347 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v340 = (char *)v324 + v347;
      uint64_t v341 = (char *)v325 + v347;
      uint64_t v342 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v348 = *(void *)(v342 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v348 + 48))(v341, 1, v342))
      {
LABEL_240:
        uint64_t v346 = sub_10003B754(&qword_10078C890);
        memcpy(v340, v341, *(void *)(*(void *)(v346 - 8) + 64));
        uint64_t v333 = v443;
      }
      else
      {
        uint64_t v434 = v348;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v418 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v418 - 8) + 32))(v340, v341, v418);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v340, v341, *(void *)(v348 + 64));
            break;
        }
LABEL_297:
        uint64_t v333 = v443;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v434 + 56))(v340, 0, 1, v342);
      }
LABEL_298:
      swift_storeEnumTagMultiPayload();
      uint64_t v335 = __dstd;
      break;
    case 7u:
      uint64_t v349 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v350 = *(void *)(v349 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v350 + 48))(v325, 1, v349))
      {
        uint64_t v351 = sub_10003B754(&qword_10078C518);
        memcpy(v324, v325, *(void *)(*(void *)(v351 - 8) + 64));
      }
      else
      {
        *id v324 = *v325;
        uint64_t v378 = *(int *)(v349 + 20);
        long long v379 = (char *)v324 + v378;
        long long v380 = (char *)v325 + v378;
        uint64_t v381 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v381 - 8) + 32))(v379, v380, v381);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v350 + 56))(v324, 0, 1, v349);
      }
      uint64_t v333 = v443;
      uint64_t v382 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v383 = (char *)v324 + v382;
      v384 = (char *)v325 + v382;
      *(_OWORD *)uint64_t v383 = *(_OWORD *)v384;
      *((void *)v383 + 2) = *((void *)v384 + 2);
      goto LABEL_298;
    case 8u:
      uint64_t v352 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v353 = *(void *)(v352 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v353 + 48))(v325, 1, v352))
      {
        uint64_t v354 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v324, v325, *(void *)(*(void *)(v354 - 8) + 64));
      }
      else
      {
        uint64_t v385 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v385 - 8) + 32))(v324, v325, v385);
        *((unsigned char *)v324 + *(int *)(v352 + 20)) = *((unsigned char *)v325 + *(int *)(v352 + 20));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v353 + 56))(v324, 0, 1, v352);
      }
      uint64_t v333 = v326;
      uint64_t v386 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void *)((char *)v324 + *(int *)(v386 + 20)) = *(void *)((char *)v325 + *(int *)(v386 + 20));
      goto LABEL_298;
    case 9u:
      *(unsigned char *)id v324 = *(unsigned char *)v325;
      uint64_t v355 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v356 = (char *)v324 + v355;
      uint64_t v357 = (char *)v325 + v355;
      uint64_t v358 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v358 - 8) + 32))(v356, v357, v358);
      swift_storeEnumTagMultiPayload();
      goto LABEL_249;
    default:
      memcpy(v324, v325, *(void *)(*(void *)(v331 - 8) + 64));
LABEL_249:
      uint64_t v333 = v326;
      uint64_t v335 = __dstd;
      break;
  }
  id v419 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  *((unsigned char *)v324 + v419[5]) = *((unsigned char *)v325 + v419[5]);
  *(_OWORD *)((char *)v324 + v419[6]) = *(_OWORD *)((char *)v325 + v419[6]);
  *(void *)((char *)v324 + v419[7]) = *(void *)((char *)v325 + v419[7]);
  *(void *)((char *)v324 + *(int *)(v333 + 48)) = *(void *)((char *)v325 + *(int *)(v333 + 48));
  (*(void (**)(void *, void, uint64_t, uint64_t))(v327 + 56))(v324, 0, 1, v333);
LABEL_300:
  *(unsigned char *)(v320 + v335[8]) = *(unsigned char *)(v455 + v335[8]);
  return a1;
}

uint64_t sub_1005D7C1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1005D7C30);
}

uint64_t sub_1005D7C30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10003B754(&qword_100794B60);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[17];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_10003B754(&qword_100794B58);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[18];
    goto LABEL_5;
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v13 = *(void *)(a1 + a3[25]);
    if (v13 >= 0xFFFFFFFF) {
      LODWORD(v13) = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = sub_10003B754(&qword_100794B50);
    id v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[28];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_1005D7DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005D7DCC);
}

uint64_t sub_1005D7DCC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10003B754(&qword_100794B60);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[17];
LABEL_5:
    unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  uint64_t result = sub_10003B754(&qword_100794B58);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[18];
    goto LABEL_5;
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[25]) = (a2 - 1);
  }
  else
  {
    uint64_t v14 = sub_10003B754(&qword_100794B50);
    id v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a4[28];
    return v15(v17, a2, a2, v16);
  }
  return result;
}

uint64_t type metadata accessor for TTRIBoardReminderCellContentConfiguration()
{
  uint64_t result = qword_1007A9650;
  if (!qword_1007A9650) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005D7FA0()
{
  sub_1005D81E8(319, &qword_1007A9660, &qword_1007A2418, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for TTRBoardReminderCellTitleConfiguration);
  if (v0 <= 0x3F)
  {
    sub_1005D817C();
    if (v1 <= 0x3F)
    {
      sub_1005D81E8(319, (unint64_t *)&unk_1007A9670, &qword_1007A2438, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for TTRIBoardReminderCellAutoCompleteConfiguration);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

void sub_1005D817C()
{
  if (!qword_1007A9668)
  {
    sub_100039710(&qword_1007A2428);
    type metadata accessor for TTRIReminderCellNotesViewModel();
    unint64_t v0 = type metadata accessor for TTRBoardReminderCellNotesConfiguration();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007A9668);
    }
  }
}

void sub_1005D81E8(uint64_t a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = sub_100039710(a3);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

_UNKNOWN **sub_1005D8248()
{
  return &off_1007518F0;
}

uint64_t sub_1005D8254@<X0>(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 1;
  *(unsigned char *)(a1 + 2) = 0;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0;
  *(void *)(a1 + 8) = 0;
  TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)();
  *(_OWORD *)(a1 + 32) = v23;
  *(_OWORD *)(a1 + 48) = v24;
  *(_OWORD *)(a1 + 64) = v25;
  *(void *)(a1 + 80) = TTRBoardReminderCellLocationConfiguration.init(icon:attributedDescription:)();
  *(void *)(a1 + 88) = v2;
  TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)();
  *(_OWORD *)(a1 + 96) = v26;
  *(_OWORD *)(a1 + 112) = v27;
  *(_OWORD *)(a1 + 128) = v28;
  TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCountString:tintColor:onSubtaskCountPressed:)();
  *(_OWORD *)(a1 + 144) = v29;
  *(_OWORD *)(a1 + 160) = v30;
  *(void *)(a1 + 176) = v31;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_WORD *)(a1 + 216) = 514;
  *(unsigned char *)(a1 + 224) = TTRBoardReminderCellInfoButtonConfiguration.init(infoButtonState:tintColor:onInfoPressed:)();
  *(void *)(a1 + 232) = v3;
  *(void *)(a1 + 240) = v4;
  *(void *)(a1 + 248) = v5;
  uint64_t v6 = (int *)type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  *(void *)(a1 + 264) = 0;
  *(void *)(a1 + 272) = 0;
  *(void *)(a1 + 256) = 0;
  uint64_t v7 = (void *)(a1 + v6[17]);
  unint64_t v8 = (char *)v7 + *(int *)(sub_10003B754(&qword_100794B60) + 28);
  uint64_t v9 = sub_10003B754(&qword_100794BB0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *uint64_t v7 = 0;
  v7[1] = 0;
  uint64_t v10 = a1 + v6[18];
  uint64_t v11 = v10 + *(int *)(sub_10003B754(&qword_100794B58) + 40);
  uint64_t v12 = sub_10003B754(&qword_100794B98);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(unsigned char *)uint64_t v10 = 1;
  *(void *)(v10 + 8) = 0;
  *(void *)(v10 + 16) = 0;
  *(void *)(a1 + v6[19]) = 0;
  unint64_t v13 = (void *)(a1 + v6[20]);
  void *v13 = 0;
  v13[1] = 0;
  *(unsigned char *)(a1 + v6[21]) = 2;
  uint64_t v14 = (void *)(a1 + v6[22]);
  *uint64_t v14 = 0;
  v14[1] = 0;
  id v15 = (void *)(a1 + v6[23]);
  *id v15 = 0;
  v15[1] = 0;
  *(void *)(a1 + v6[24]) = 0;
  *(void *)(a1 + v6[25]) = _swiftEmptyArrayStorage;
  uint64_t v16 = a1 + v6[26];
  TTRBoardReminderCellAssigneeConfiguration.init(contact:name:onAssigneePress:)();
  *(_OWORD *)uint64_t v16 = v32;
  *(_OWORD *)(v16 + 16) = v33;
  *(void *)(v16 + 32) = v34;
  uint64_t v17 = a1 + v6[27];
  TTRBoardReminderCellAppLinkConfiguration.init(icon:name:onAppLinkPress:)();
  *(_OWORD *)uint64_t v17 = v35;
  *(_OWORD *)(v17 + 16) = v36;
  *(void *)(v17 + 32) = v37;
  uint64_t v18 = (void *)(a1 + v6[28]);
  uint64_t v19 = sub_10003B754(&qword_100794B50);
  uint64_t v20 = (char *)v18 + *(int *)(v19 + 28);
  uint64_t v21 = sub_10003B754(&qword_100794B68);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *((unsigned char *)v18 + *(int *)(v19 + 32)) = 1;
  *uint64_t v18 = 0;
  v18[1] = 0;
  return result;
}

uint64_t sub_1005D8594()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005D859C(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v1 = a1;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D85C8())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

BOOL sub_1005D85E8()
{
  return !*(void *)v0 || *(void *)(*(void *)v0 + 16) == 0;
}

uint64_t sub_1005D8608()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_1005D8610(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8618())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8638()
{
  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t sub_1005D8640(uint64_t result)
{
  *(unsigned char *)(v1 + 2) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8648())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8668@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 32);
  uint64_t v4 = *(void **)(v1 + 40);
  char v5 = *(unsigned char *)(v1 + 48);
  uint64_t v7 = *(void **)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v8 = *(void *)(v1 + 72);
  id v9 = v7;
  id v10 = v4;
  uint64_t result = sub_10006C140(v6);
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v8;
  return result;
}

__n128 sub_1005D86DC(uint64_t a1)
{
  sub_1000499C4(*(void *)(v1 + 64));
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 64) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8724())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8744@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003B694(v2 + *(int *)(a1 + 68), a2, &qword_100794B60);
}

uint64_t sub_1005D8770(uint64_t a1, uint64_t a2)
{
  return sub_10000A550(a1, v2 + *(int *)(a2 + 68), &qword_100794B60);
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8798())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D87BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10003B694(v2 + *(int *)(a1 + 72), a2, &qword_100794B58);
}

uint64_t sub_1005D87E8(uint64_t a1, uint64_t a2)
{
  return sub_10000A550(a1, v2 + *(int *)(a2 + 72), &qword_100794B58);
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8810())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

void *sub_1005D8834()
{
  uint64_t v1 = *(void **)(v0 + 80);
  uint64_t v2 = *(void **)(v0 + 88);
  id v3 = v1;
  id v4 = v2;
  return v1;
}

void sub_1005D8864(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 80) = a1;
  *(void *)(v2 + 88) = a2;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D88A4())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D88C4@<X0>(uint64_t a1@<X8>)
{
  char v3 = *(unsigned char *)(v1 + 96);
  uint64_t v4 = *(void *)(v1 + 104);
  char v5 = *(unsigned char *)(v1 + 112);
  uint64_t v7 = *(void **)(v1 + 120);
  uint64_t v6 = *(void *)(v1 + 128);
  uint64_t v8 = *(void *)(v1 + 136);
  id v9 = v7;
  uint64_t result = sub_10006C140(v6);
  *(unsigned char *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v8;
  return result;
}

__n128 sub_1005D8934(uint64_t a1)
{
  sub_1000499C4(*(void *)(v1 + 128));
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 96) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 112) = v3;
  __n128 result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 128) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8974())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8994@<X0>(void *a1@<X8>)
{
  uint64_t v4 = v1[18];
  uint64_t v3 = v1[19];
  uint64_t v6 = (void *)v1[20];
  uint64_t v5 = v1[21];
  uint64_t v7 = v1[22];
  id v8 = v6;
  swift_bridgeObjectRetain();
  uint64_t result = sub_10006C140(v5);
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v6;
  a1[3] = v5;
  a1[4] = v7;
  return result;
}

__n128 sub_1005D89F4(uint64_t a1)
{
  swift_bridgeObjectRelease();

  sub_1000499C4(*(void *)(v1 + 168));
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 144) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 160) = v4;
  *(void *)(v1 + 176) = *(void *)(a1 + 32);
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8A3C())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8A5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = *(void *)(v1 + 184);
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v5 = *(void *)(v1 + 200);
  uint64_t v6 = *(void *)(v1 + 208);
  __int16 v7 = *(_WORD *)(v1 + 216);
  swift_bridgeObjectRetain();
  uint64_t result = sub_10006C140(v5);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(_WORD *)(a1 + 32) = v7;
  return result;
}

__n128 sub_1005D8AB8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  sub_1000499C4(*(void *)(v1 + 200));
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 200) = v4;
  *(_WORD *)(v1 + 216) = *(_WORD *)(a1 + 32);
  return result;
}

uint64_t sub_1005D8AFC()
{
  uint64_t v1 = *(void **)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 224);
  id v4 = v1;
  sub_10006C140(v2);
  return v3;
}

uint64_t sub_1005D8B4C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1000499C4(*(void *)(v4 + 240));
  *(unsigned char *)(v4 + 224) = a1;
  *(void *)(v4 + 232) = a2;
  *(void *)(v4 + 240) = a3;
  *(void *)(v4 + 248) = a4;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8BA4())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8BC4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[32];
  uint64_t v3 = v1[33];
  uint64_t v4 = v1[34];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  swift_bridgeObjectRetain();

  return sub_10006C140(v3);
}

__n128 sub_1005D8C0C(__n128 *a1)
{
  __n128 v4 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  swift_bridgeObjectRelease();
  sub_1000499C4(v1[16].n128_i64[1]);
  __n128 result = v4;
  v1[16] = v4;
  v1[17].n128_u64[0] = v2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8C58())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

void *sub_1005D8C78(uint64_t a1)
{
  unint64_t v2 = *(void **)(v1 + *(int *)(a1 + 76));
  id v3 = v2;
  return v2;
}

void sub_1005D8CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 76);

  *(void *)(v2 + v4) = a1;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8CDC())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8D00(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 80));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1005D8D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 80));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8D78())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8D9C(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 84));
}

uint64_t sub_1005D8DA8(uint64_t result, uint64_t a2)
{
  *(unsigned char *)(v2 + *(int *)(a2 + 84)) = result;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8DB4())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8DD8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 88));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1005D8E10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 88));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8E50())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8E74(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 92));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1005D8EAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 92));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8EEC())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

void *sub_1005D8F10(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + *(int *)(a1 + 96));
  id v3 = v2;
  return v2;
}

void sub_1005D8F3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 96);

  *(void *)(v2 + v4) = a1;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8F74())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D8F98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1005D8FA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 100);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D8FDC())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D9000@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 104);
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  id v10 = v5;
  uint64_t result = sub_10006C140(v8);
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  return result;
}

__n128 sub_1005D9068(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 104);

  swift_bridgeObjectRelease();
  sub_1000499C4(*(void *)(v4 + 24));
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = *(void *)(a1 + 32);
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D90B8())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D90DC@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 108);
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(v4 + 24);
  uint64_t v9 = *(void *)(v4 + 32);
  swift_bridgeObjectRetain();
  id v10 = v5;
  uint64_t result = sub_10006C140(v8);
  *a2 = v5;
  a2[1] = v6;
  a2[2] = v7;
  a2[3] = v8;
  a2[4] = v9;
  return result;
}

__n128 sub_1005D9144(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 108);

  swift_bridgeObjectRelease();
  sub_1000499C4(*(void *)(v4 + 24));
  __n128 result = *(__n128 *)a1;
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)a1;
  *(_OWORD *)(v4 + 16) = v6;
  *(void *)(v4 + 32) = *(void *)(a1 + 32);
  return result;
}

Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *sub_1005D9194())(Swift::OpaquePointer reminders)
{
  return TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:);
}

uint64_t sub_1005D91B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754(&qword_1007A2DA8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = type metadata accessor for UICellConfigurationState();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v18[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1005D9470(v3, a2);
  sub_1000145EC(a1, (uint64_t)v18);
  sub_10003B754(&qword_1007A2DB0);
  int v13 = swift_dynamicCast();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v13)
  {
    v14(v8, 0, 1, v9);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      *(unsigned char *)(a2 + 1) = UICellConfigurationState.isSelected.getter() & 1;
      char v15 = UICellConfigurationState.isEditing.getter();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      *(unsigned char *)(a2 + 217) = v15 & 1;
      return result;
    }
  }
  else
  {
    v14(v8, 1, 1, v9);
  }
  return sub_10003B6F8((uint64_t)v8, &qword_1007A2DA8);
}

id sub_1005D93D4(uint64_t a1)
{
  __chkstk_darwin(a1 - 8);
  uint64_t v3 = (unsigned __int8 *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRIBoardReminderCellContentView();
  sub_1005D9470(v1, (uint64_t)v3);
  id v4 = sub_1004F898C(v3);
  sub_1005D94D4();
  return v4;
}

uint64_t sub_1005D9470(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIBoardReminderCellContentConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1005D94D4()
{
  unint64_t result = qword_1007A9910;
  if (!qword_1007A9910)
  {
    type metadata accessor for TTRIBoardReminderCellContentView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A9910);
  }
  return result;
}

uint64_t destroy for TTRIBoardReminderCellImageAttachmentsConfiguration(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 8))
  {
    return swift_release();
  }
  return result;
}

void *_s9Reminders50TTRIBoardReminderCellImageAttachmentsConfigurationVwCP_0(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t v5 = a2 + 1;
  uint64_t v4 = a2[1];
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

void *assignWithCopy for TTRIBoardReminderCellImageAttachmentsConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for TTRIBoardReminderCellImageAttachmentsConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIBoardReminderCellImageAttachmentsConfiguration(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIBoardReminderCellImageAttachmentsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIBoardReminderCellImageAttachmentsConfiguration()
{
  return &type metadata for TTRIBoardReminderCellImageAttachmentsConfiguration;
}

id sub_1005D97D8(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts] = _swiftEmptyArrayStorage;
  int v4 = &v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  *(void *)int v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarViewControllers] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews] = _swiftEmptyArrayStorage;
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super initWithCoder:a1];
  id v6 = v5;
  if (v5)
  {
    id v7 = v5;
    sub_10002C958();
  }
  return v6;
}

void sub_1005D9904()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  swift_beginAccess();
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize + 8];
  char v4 = v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize + 16];
  id v5 = [v0 traitCollection];
  sub_1005DA154(v2, v3, v4, v5);
}

void sub_1005D9A18()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_unscaledAvatarSize];
  uint64_t v4 = *((void *)v2 + 1);
  char v5 = v2[16];
  id v6 = [v1 traitCollection];
  double v47 = sub_1005DA154(v3, v4, v5, v6);
  CGFloat rect = v7;

  uint64_t v8 = &v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_contacts];
  swift_beginAccess();
  if (*(void *)v8 >> 62) {
    goto LABEL_29;
  }
  uint64_t v9 = *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v10 = sub_1005DA640(v9);
  swift_bridgeObjectRetain();
  [v1 bounds];
  CGRectGetWidth(v49);
  if (*(void *)v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v11 < 0)
    {
      __break(1u);
      goto LABEL_32;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((*(void *)v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v11)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v46 = v10 & 0xC000000000000001;
  if ((v10 & 0xC000000000000001) != 0
    || (unint64_t)(v11 - 1) < *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v12 = &v1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews];
    uint64_t v45 = -v11;
    double v13 = 0.0;
    uint64_t v14 = 4;
    uint64_t v15 = v10;
    while (1)
    {
      unint64_t v16 = v14 - 4;
      if (v46) {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v17 = *(id *)(v10 + 8 * v14);
      }
      uint64_t v18 = v17;
      swift_beginAccess();
      uint64_t v19 = *(void *)v12;
      if ((*(void *)v12 & 0xC000000000000001) != 0)
      {
        id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v16 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_26:
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
        if (v16 >= *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_26;
        }
        id v20 = *(id *)(v19 + 8 * v14);
      }
      uint64_t v21 = v20;
      swift_endAccess();
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_10066D470;
      swift_beginAccess();
      uint64_t v23 = *(void *)v8;
      if ((*(void *)v8 & 0xC000000000000001) != 0)
      {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v16 & 0x8000000000000000) != 0) {
          goto LABEL_27;
        }
        if (v16 >= *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_28;
        }
        id v24 = *(id *)(v23 + 8 * v14);
      }
      *(void *)(v22 + 32) = v24;
      swift_endAccess();
      specialized Array._endMutation()();
      sub_1000368FC(0, (unint64_t *)&qword_10078A130);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v18 setContacts:isa];

      [v1 effectiveUserInterfaceLayoutDirection];
      CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)();
      double v27 = v26;
      double v29 = v28;
      double v31 = v30;
      double v33 = v32;
      id v34 = [v18 view];
      [v34 setFrame:v27, v29, v31, v33];

      id v35 = [v1 traitCollection];
      sub_1005DAB6C(v35);

      id v36 = [v1 traitCollection];
      [v36 displayScale];

      UIFloorToScale();
      CGFloat v38 = -v37;
      v50.origin.CGFloat x = v27;
      v50.origin.CGFloat y = v29;
      v50.size.CGFloat width = v31;
      v50.size.CGFloat height = v33;
      CGRect v51 = CGRectInset(v50, v38, v38);
      CGFloat x = v51.origin.x;
      CGFloat y = v51.origin.y;
      CGFloat width = v51.size.width;
      CGFloat height = v51.size.height;
      [v21 setFrame:];
      id v43 = [v21 layer];
      v52.origin.CGFloat x = x;
      v52.origin.CGFloat y = y;
      v52.size.CGFloat width = width;
      v52.size.CGFloat height = height;
      [v43 setCornerRadius:CGRectGetWidth(v52) * 0.5];

      v53.origin.CGFloat y = 0.0;
      v53.origin.CGFloat x = v13;
      v53.size.CGFloat width = v47;
      v53.size.CGFloat height = rect;
      double v44 = CGRectGetWidth(v53);

      double v13 = v13 + v44 * 0.75;
      ++v14;
      uint64_t v10 = v15;
      if (v45 + v14 == 4) {
        goto LABEL_24;
      }
    }
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_1005D9FB0(uint64_t result, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    a3 = a2;
    if (!(*v3 >> 62))
    {
      uint64_t v5 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v6 = -v5;
      if (!__OFSUB__(0, v5)) {
        goto LABEL_5;
      }
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  uint64_t v9 = a3;
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  a3 = v9;
  uint64_t v6 = -v5;
  if (__OFSUB__(0, v5)) {
    goto LABEL_19;
  }
LABEL_5:
  uint64_t v7 = -v4;
  if (v6 <= 0 && v6 > v7) {
    goto LABEL_22;
  }
  uint64_t result = v5 - v4;
  if (__OFADD__(v5, v7)) {
    goto LABEL_20;
  }
  if (v5 < result)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    return result;
  }

  return a3();
}

id sub_1005DA0FC(unsigned char *a1)
{
  a1[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarsNeedUpdate] = 1;
  [a1 invalidateIntrinsicContentSize];

  return [a1 setNeedsLayout];
}

double sub_1005DA154(uint64_t a1, int a2, char a3, id a4)
{
  id v6 = [a4 preferredContentSizeCategory];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v9 = v8;
  if (v7 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v9 == v10) {
    goto LABEL_14;
  }
  char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v12)
  {
LABEL_15:

    uint64_t v23 = 1;
    goto LABEL_16;
  }
  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v15 = v14;
  if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v18) {
    goto LABEL_15;
  }
  uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v21 = v20;
  if (v19 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v21 == v22) {
    goto LABEL_13;
  }
  char v25 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v25) {
    goto LABEL_23;
  }
  uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v28 = v27;
  if (v26 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v28 == v29)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
LABEL_23:

    uint64_t v23 = 2;
    goto LABEL_16;
  }
  char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v30) {
    goto LABEL_23;
  }
  uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v33 = v32;
  if (v31 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v33 == v34)
  {

    uint64_t v23 = 2;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v35) {
      uint64_t v23 = 2;
    }
    else {
      uint64_t v23 = 0;
    }
  }
LABEL_16:
  if (a3) {
    return dbl_10067E340[v23];
  }
  else {
    return dbl_10067E340[v23] / 24.0 * *(double *)&a1;
  }
}

uint64_t sub_1005DA424(uint64_t result, unint64_t a2, unint64_t *a3)
{
  if (result < 0)
  {
    __break(1u);
LABEL_30:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v8 = -v7;
    if (!__OFSUB__(0, v7)) {
      goto LABEL_4;
    }
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v5 = a3;
  unint64_t v3 = a2;
  uint64_t v4 = result;
  unint64_t v6 = a2 >> 62;
  if (a2 >> 62) {
    goto LABEL_30;
  }
  uint64_t v7 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v8 = -v7;
  if (__OFSUB__(0, v7)) {
    goto LABEL_32;
  }
LABEL_4:
  uint64_t v9 = -v4;
  if (v8 > 0 || v8 <= v9)
  {
    Swift::Int v10 = v7 - v4;
    if (__OFADD__(v7, v9))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v7 < v10)
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6)
    {
LABEL_8:
      uint64_t v11 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_13;
    }
  }
  else
  {
    if (v7 < 0)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    Swift::Int v10 = 0;
    if (!v6) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_13:
  if (v11 < v10)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v10 < 0)
  {
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v12 < v7) {
    goto LABEL_35;
  }
  if (v7 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if ((v3 & 0xC000000000000001) != 0 && v10 != v7)
  {
    if (v10 < (unint64_t)v7)
    {
      sub_1000368FC(0, v5);
      Swift::Int v13 = v10;
      do
      {
        Swift::Int v14 = v13 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v13);
        Swift::Int v13 = v14;
      }
      while (v7 != v14);
      goto LABEL_25;
    }
LABEL_40:
    __break(1u);
    return result;
  }
LABEL_25:
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = _CocoaArrayWrapper.subscript.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v15 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  return v15;
}

uint64_t sub_1005DA640(uint64_t a1)
{
  unint64_t v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarViewControllers);
  uint64_t result = swift_beginAccess();
  if (*v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v6 = v5 <= a1;
    if (v5 < a1) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v6 = v5 <= a1;
    if (v5 < a1)
    {
LABEL_3:
      BOOL v7 = __OFSUB__(a1, v5);
      uint64_t v8 = a1 - v5;
      if (v7)
      {
        __break(1u);
      }
      else if ((v8 & 0x8000000000000000) == 0)
      {
        if (v8)
        {
          id v46 = self;
          uint64_t v9 = &v47[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews];
          do
          {
            id v10 = [objc_allocWithZone((Class)CNAvatarViewController) init];
            [v10 setThreeDTouchEnabled:0];
            id v11 = [v10 view];
            [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v12 = [objc_allocWithZone((Class)UIView) init];
            [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v13 = [v46 whiteColor];
            [v12 setBackgroundColor:v13];

            id v14 = [v12 layer];
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v15 = objc_allocWithZone((Class)CAFilter);
            NSString v16 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            id v17 = [v15 initWithType:v16];

            [v14 setCompositingFilter:v17];
            [v47 insertSubview:v11 atIndex:0];
            [v47 insertSubview:v12 atIndex:0];
            swift_beginAccess();
            id v18 = v10;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();
            swift_beginAccess();
            id v19 = v12;
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((*(void *)v9 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v9 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_endAccess();

            --v8;
          }
          while (v8);
        }
        return *v3;
      }
      __break(1u);
      goto LABEL_28;
    }
  }
  if (v6) {
    return *v3;
  }
  BOOL v7 = __OFSUB__(v5, a1);
  uint64_t v20 = v5 - a1;
  if (v7)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  unint64_t v21 = *v3;
  swift_bridgeObjectRetain();
  sub_1005DA424(v20, v21, &qword_1007A59C8);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  unint64_t v27 = v26;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v28 = (v27 >> 1) - v25;
  if (v27 >> 1 != v25)
  {
    if ((uint64_t)(v27 >> 1) <= v25)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v29 = (void **)(v23 + 8 * v25);
    do
    {
      char v30 = *v29++;
      id v31 = v30;
      id v32 = [v31 viewIfLoaded];
      [v32 removeFromSuperview];

      --v28;
    }
    while (v28);
  }
  swift_unknownObjectRelease();
  uint64_t v33 = (unint64_t *)&v47[OBJC_IVAR____TtC9Reminders22TTRIStackedAvatarsView_avatarBorderViews];
  swift_beginAccess();
  unint64_t v34 = *v33;
  swift_bridgeObjectRetain();
  sub_1005DA424(v20, v34, (unint64_t *)&qword_100788600);
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  unint64_t v40 = v39;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v41 = (v40 >> 1) - v38;
  if (v40 >> 1 == v38)
  {
LABEL_24:
    swift_unknownObjectRelease();
    swift_beginAccess();
    sub_1005D9FB0(v20, (uint64_t (*)(void))sub_10054F190, v44);
    swift_endAccess();
    swift_beginAccess();
    sub_1005D9FB0(v20, (uint64_t (*)(void))sub_10054F1A4, v45);
    swift_endAccess();
    return *v3;
  }
  if ((uint64_t)(v40 >> 1) > v38)
  {
    uint64_t v42 = (void **)(v36 + 8 * v38);
    do
    {
      id v43 = *v42++;
      [v43 removeFromSuperview];
      --v41;
    }
    while (v41);
    goto LABEL_24;
  }
LABEL_30:
  __break(1u);
  return result;
}

double sub_1005DAB6C(void *a1)
{
  id v1 = [a1 preferredContentSizeCategory];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;
  if (v2 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v4 == v5) {
    goto LABEL_14;
  }
  char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
LABEL_15:

    return 2.0;
  }
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;
  if (v8 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v10 == v11)
  {
LABEL_14:
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13) {
    goto LABEL_15;
  }
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;
  if (v14 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v16 == v17) {
    goto LABEL_13;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19) {
    goto LABEL_20;
  }
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;
  if (v20 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v22 == v23)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
LABEL_20:

    return 3.0;
  }
  char v24 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v24) {
    goto LABEL_20;
  }
  uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v27 = v26;
  if (v25 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v27 == v28)
  {

    swift_bridgeObjectRelease_n();
    return 3.0;
  }
  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  double result = 1.5;
  if (v29) {
    return 3.0;
  }
  return result;
}

uint64_t sub_1005DADEC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A9968);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A9968);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_1005DAEB4(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  BOOL result = ((unint64_t)*a1 | (unint64_t)*a2) == 0;
  if (v2) {
    BOOL v5 = v3 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    id v6 = v2;
    id v7 = v3;
    char v8 = static NSObject.== infix(_:_:)();

    return v8 & 1;
  }
  return result;
}

uint64_t sub_1005DAF40()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1005DAF98();
    return swift_release();
  }
  return result;
}

void sub_1005DAF98()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)(v0 + 72);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 96);
  if (v3)
  {
    sub_100038D28(v2, v3);
    swift_retain();
    CurrentValueSubject.value.getter();
    swift_release();
    uint64_t v4 = v7;
    if (v7)
    {
      unsigned int v5 = [v7 canUndo];
      unsigned int v6 = [v7 canRedo];
    }
    else
    {
      unsigned int v6 = 0;
      unsigned int v5 = 0;
    }
  }
  else
  {
    unsigned int v6 = 0;
    unsigned int v5 = 0;
    uint64_t v4 = 0;
  }
  if (v5 != *(unsigned __int8 *)(v1 + 112) || ((v6 ^ *(unsigned __int8 *)(v1 + 113)) & 1) != 0)
  {
    *(unsigned char *)(v1 + 112) = v5;
    *(unsigned char *)(v1 + 113) = v6;
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100062DC8(0xD00000000000001CLL, 0x80000001006BFD00);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1005DB0B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)(v1 + 72);
  swift_beginAccess();
  sub_1005DBD98(a1, (uint64_t)v4);
  swift_endAccess();
  uint64_t v5 = *(void *)(v2 + 96);
  if (v5)
  {
    sub_100038D28(v4, v5);
    swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_10003B754(&qword_1007A7340);
    sub_1005DBEA0();
    uint64_t v6 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v6 = 0;
  }
  *(void *)(v2 + 152) = v6;
  swift_release();
  return sub_1005DBE00(a1);
}

uint64_t sub_1005DB1CC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v2 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v2 + 112) = 0;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 136) = xmmword_10066C910;
  *(void *)(v2 + 152) = 0;
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = a2;
  return v2;
}

void sub_1005DB240(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void *)v1[18];
  if (v4)
  {
    if (v4 != (void *)1 && a1 != 0)
    {
      sub_1000368FC(0, (unint64_t *)&qword_100797210);
      id v6 = a1;
      sub_1005DBD88(v4);
      char v7 = static NSObject.== infix(_:_:)();

      sub_100065730(v4);
      if (v7) {
        return;
      }
    }
  }
  else
  {
    sub_100065730(0);
    if (!a1) {
      return;
    }
  }
  if (v2[17])
  {
    swift_retain();
    TTRDataViewMonitor.pause()();
    swift_release();
    v2[17] = 0;
    swift_release();
  }
  char v8 = (void *)v2[18];
  v2[18] = 1;
  sub_100065730(v8);
  uint64_t v9 = (void *)v2[8];
  v2[8] = 0;

  uint64_t v10 = (void *)v2[18];
  v2[18] = a1;
  sub_100065730(v10);
  id v11 = a1;

  sub_1005DB35C((uint64_t)a1);
}

uint64_t sub_1005DB35C(uint64_t result)
{
  if (!v1[17])
  {
    uint64_t v2 = v1;
    uint64_t v3 = (void *)result;
    if (qword_100785710 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_1007A9968);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      char v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRIRemindersListNavigationBarInteractor start fetching and monitoring default list", v7, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = (void *)v2[15];
    char v8 = (void *)v2[16];
    type metadata accessor for TTRIRemindersListNavigationBarDefaultListDataView();
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = v9;
    void v10[3] = v8;
    v10[4] = v3;
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    id v11 = v3;
    id v12 = v9;
    sub_100057BB8(v8);
    swift_retain();
    swift_retain();
    static OS_dispatch_queue.main.getter();
    type metadata accessor for RDIDispatchQueue();
    static RDIDispatchQueue.utilityQueue.getter();
    static RDIDispatchQueue.storeUserInteractiveQueue.getter();
    TTRDataViewMonitorEnvironmentInfo.init()();
    sub_10003B754(&qword_1007A9B70);
    swift_allocObject();
    v2[17] = TTRDataViewMonitor.init<A>(initialData:dataView:delegate:queue:backgroundQueue:userInteractiveBackgroundQueue:environmentInfo:)();
    swift_retain();
    swift_release();
    TTRDataViewMonitor.resume(userInteractive:)(1);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1005DB5B4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  os_log_type_t v6 = *(void **)(v3 + 144);
  if (v6)
  {
    if (v6 == (void *)1 || a2 == 0) {
      return;
    }
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    id v8 = a2;
    sub_1005DBD88(v6);
    char v9 = static NSObject.== infix(_:_:)();

    sub_100065730(v6);
    if ((v9 & 1) == 0) {
      return;
    }
  }
  else
  {
    sub_100065730(0);
    if (a2) {
      return;
    }
  }
  uint64_t v10 = *(void **)(v3 + 64);
  if (v10)
  {
    if (a1)
    {
      sub_1000368FC(0, &qword_100791CF0);
      id v11 = a1;
      id v12 = v10;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13) {
        return;
      }
      uint64_t v10 = *(void **)(v3 + 64);
    }
  }
  else
  {
    if (!a1) {
      return;
    }
    uint64_t v10 = 0;
  }
  *(void *)(v3 + 64) = a1;
  id v14 = a1;

  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100062DC8(0xD000000000000012, 0x80000001006BFD40);
    swift_unknownObjectRelease();
  }
}

id *sub_1005DB720()
{
  sub_1000499D4((uint64_t)(v0 + 2));
  sub_1000499D4((uint64_t)(v0 + 4));
  swift_unknownObjectRelease();

  sub_1005DBE00((uint64_t)(v0 + 9));
  sub_100057BC8(v0[16]);
  swift_release();
  sub_100065730(v0[18]);
  swift_release();
  return v0;
}

uint64_t sub_1005DB788()
{
  sub_1005DB720();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarInteractor()
{
  return self;
}

uint64_t sub_1005DB7E0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  swift_unknownObjectRelease();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t result = swift_unknownObjectRetain();
  if (Strong)
  {
    sub_100062DC8(0xD00000000000001FLL, 0x80000001006BFD20);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1005DB860(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  uint64_t v8 = v7;
  char v9 = (void *)(v2 + 48);
  if (*(void *)(v2 + 48))
  {
    uint64_t v10 = v6;
    uint64_t v11 = *(void *)(v2 + 56);
    uint64_t v12 = swift_getObjectType();
    char v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 24);
    swift_unknownObjectRetain();
    uint64_t v14 = v13(v12, v11);
    uint64_t v16 = v15;
    swift_unknownObjectRelease();
    if (v10 == v14 && v8 == v16)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if ((v18 & 1) == 0) {
        return result;
      }
    }
    void *v9 = 0;
    *(void *)(v3 + 56) = 0;
    swift_unknownObjectRelease();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_100062DC8(0xD00000000000001FLL, 0x80000001006BFD20);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005DBA04()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1005DBA4C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 40) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1005DBAB0(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 40);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_1005DBB30;
}

void sub_1005DBB30(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 40) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_1005DBBB8()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100062DC8(0xD00000000000001FLL, 0x80000001006BFD20);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1005DBC24(uint64_t a1, void **a2)
{
}

void sub_1005DBC2C()
{
}

uint64_t sub_1005DBC34()
{
  sub_100057BC8(v0[3]);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarDefaultListDataView()
{
  return self;
}

void **initializeBufferWithCopyOfBuffer for TTRIRemindersListNavigationBarListFetchingTarget(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void **assignWithCopy for TTRIRemindersListNavigationBarListFetchingTarget(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for TTRIRemindersListNavigationBarListFetchingTarget(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarListFetchingTarget()
{
  return &type metadata for TTRIRemindersListNavigationBarListFetchingTarget;
}

id sub_1005DBD4C(void *a1)
{
  id result = sub_1005DC0F0();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
  }
  return result;
}

_UNKNOWN **sub_1005DBD7C()
{
  return &off_1007A9B20;
}

id sub_1005DBD88(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_1005DBD98(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A9B78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005DBE00(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007A9B78);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005DBE60()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005DBE98()
{
  return sub_1005DAF40();
}

unint64_t sub_1005DBEA0()
{
  unint64_t result = qword_1007A9B80;
  if (!qword_1007A9B80)
  {
    sub_100039710(&qword_1007A7340);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A9B80);
  }
  return result;
}

void sub_1005DBEFC()
{
  if (qword_100785710 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_1007A9968);
  swift_errorRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    *(_DWORD *)uint64_t v2 = 136315138;
    swift_getErrorValue();
    uint64_t v3 = Error.rem_errorDescription.getter();
    sub_1000385A8(v3, v4, &v6);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "TTRIRemindersListNavigationBarDefaultListDataView: did hit error {error: %s}", v2, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

id sub_1005DC0F0()
{
  os_log_type_t v1 = (void *)v0[4];
  if (!v1)
  {
    uint64_t v8 = (void *)v0[3];
    if (v8)
    {
      if (v8 != (void *)1)
      {
        uint64_t v12 = (void *)v0[2];
        id v14 = 0;
        id v5 = [v12 fetchDefaultListRequiringCloudKitAccountWithAccountID:v8 error:&v14];
        if (v14)
        {
          v14;

          swift_willThrow();
          sub_100057BC8(v8);
          return v5;
        }
        sub_100057BC8(v8);
        goto LABEL_4;
      }
      char v9 = (void *)v0[2];
      id v14 = 0;
      id v10 = [v9 fetchDefaultListRequiringCloudKitWithError:&v14];
    }
    else
    {
      uint64_t v11 = (void *)v0[2];
      id v14 = 0;
      id v10 = [v11 fetchDefaultListWithError:&v14];
    }
    id v5 = v10;
    if (v14)
    {
      v14;

      swift_willThrow();
      return v5;
    }
    goto LABEL_4;
  }
  uint64_t v2 = (void *)v0[2];
  id v14 = 0;
  id v3 = v1;
  id v4 = [v2 fetchListWithObjectID:v3 error:&v14];
  if (!v4)
  {
    id v5 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    return v5;
  }
  id v5 = v4;
  id v6 = v14;

LABEL_4:
  id v7 = v1;
  return v5;
}

uint64_t *sub_1005DC2B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    uint64_t v6 = type metadata accessor for IndexPath();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005DC438(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 2)
  {
    uint64_t v3 = type metadata accessor for IndexPath();
    id v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

uint64_t sub_1005DC4B4(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005DC544(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005DCC38(a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for IndexPath();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A9BF8);
}

uint64_t sub_1005DC618(uint64_t a1, uint64_t a2)
{
  swift_getEnumCaseMultiPayload();
  uint64_t v4 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1005DC6A8(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1005DCC38(a1, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    swift_getEnumCaseMultiPayload();
    uint64_t v4 = type metadata accessor for IndexPath();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1005DC75C()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1005DC7E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = sub_10003B754(&qword_1007AC6A0);
      *((unsigned char *)a1 + *(int *)(v9 + 48)) = *((unsigned char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005DC950(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = type metadata accessor for IndexPath();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1005DC9CC(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = sub_10003B754(&qword_1007AC6A0);
    *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005DCAF0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005DCC38((uint64_t)a1, type metadata accessor for TTRICollectionViewDropIntent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for IndexPath();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for IndexPath();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_10003B754(&qword_1007AC6A0);
      *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005DCC38(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for TTRICollectionViewDropIntent(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007A9CA0);
}

void *sub_1005DCCB8(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v9 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    uint64_t v8 = sub_10003B754(&qword_1007AC6A0);
    *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1005DCDDC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1005DCC38((uint64_t)a1, type metadata accessor for TTRICollectionViewDropIntent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v9 = type metadata accessor for IndexPath();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = type metadata accessor for IndexPath();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = sub_10003B754(&qword_1007AC6A0);
      *((unsigned char *)a1 + *(int *)(v8 + 48)) = *((unsigned char *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1005DCF24()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1005DCFCC()
{
  uint64_t v1 = type metadata accessor for TTRUnadjustedIndexPath();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRAdjustedIndexPath();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005DD99C(v0, (uint64_t)v9, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1005DD4E4((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
      uint64_t v11 = 0x2865726F666562;
      unint64_t v12 = 0xE700000000000000;
    }
    else
    {
      sub_1005DD4E4((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
      uint64_t v11 = 0x287265746661;
      unint64_t v12 = 0xE600000000000000;
    }
    uint64_t v21 = v11;
    unint64_t v22 = v12;
    v18._countAndFlagsBits = TTRUnadjustedIndexPath.description.getter();
    String.append(_:)(v18);
    swift_bridgeObjectRelease();
    v19._countAndFlagsBits = 41;
    v19._object = (void *)0xE100000000000000;
    String.append(_:)(v19);
    uint64_t v15 = v21;
    uint64_t v16 = &type metadata accessor for TTRUnadjustedIndexPath;
    uint64_t v17 = (uint64_t)v3;
  }
  else
  {
    sub_1005DD4E4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    uint64_t v21 = 2651233;
    unint64_t v22 = 0xE300000000000000;
    v13._countAndFlagsBits = TTRAdjustedIndexPath.description.getter();
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._countAndFlagsBits = 41;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    uint64_t v15 = v21;
    uint64_t v16 = &type metadata accessor for TTRAdjustedIndexPath;
    uint64_t v17 = (uint64_t)v6;
  }
  sub_1005DCC38(v17, (uint64_t (*)(void))v16);
  return v15;
}

uint64_t sub_1005DD248()
{
  uint64_t v1 = type metadata accessor for TTRUnadjustedIndexPath();
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRAdjustedIndexPath();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1005DD99C(v0, (uint64_t)v9, type metadata accessor for TTRICollectionViewDropIntent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int v16 = v9[*(int *)(sub_10003B754(&qword_1007AC6A0) + 48)];
    sub_1005DD4E4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    uint64_t v21 = 2643009;
    unint64_t v22 = 0xE300000000000000;
    v17._countAndFlagsBits = TTRAdjustedIndexPath.description.getter();
    String.append(_:)(v17);
    swift_bridgeObjectRelease();
    if (v16 == 1)
    {
      uint64_t v18 = 692396076;
      unint64_t v19 = 0xE400000000000000;
    }
    else
    {
      uint64_t v18 = 41;
      unint64_t v19 = 0xE100000000000000;
    }
    String.append(_:)(*(Swift::String *)&v18);
    uint64_t v13 = v21;
    Swift::String v14 = &type metadata accessor for TTRAdjustedIndexPath;
    uint64_t v15 = (uint64_t)v6;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1005DD4E4((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    uint64_t v21 = 0x284F544E49;
    unint64_t v22 = 0xE500000000000000;
    v11._countAndFlagsBits = TTRUnadjustedIndexPath.description.getter();
    String.append(_:)(v11);
    swift_bridgeObjectRelease();
    v12._countAndFlagsBits = 41;
    v12._object = (void *)0xE100000000000000;
    String.append(_:)(v12);
    uint64_t v13 = v21;
    Swift::String v14 = &type metadata accessor for TTRUnadjustedIndexPath;
    uint64_t v15 = (uint64_t)v3;
LABEL_9:
    sub_1005DCC38(v15, (uint64_t (*)(void))v14);
    return v13;
  }
  return 1347636821;
}

uint64_t sub_1005DD4E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005DD54C(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for TTRUnadjustedIndexPath();
  __chkstk_darwin(v3 - 8);
  uint64_t v33 = (uint64_t)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v33 - v6;
  uint64_t v8 = type metadata accessor for TTRAdjustedIndexPath();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  int v16 = (char *)&v33 - v15;
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v33 - v18;
  uint64_t v20 = sub_10003B754(&qword_1007A9CD8);
  __chkstk_darwin(v20 - 8);
  unint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (uint64_t)&v22[*(int *)(v23 + 56)];
  sub_1005DD99C(a1, (uint64_t)v22, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  sub_1005DD99C(v34, v24, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1005DD99C((uint64_t)v22, (uint64_t)v16, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1005DD4E4(v24, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
        char v26 = static TTRUnadjustedIndexPath.__derived_struct_equals(_:_:)();
        sub_1005DCC38((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
        uint64_t v27 = (uint64_t)v16;
LABEL_9:
        id v31 = &type metadata accessor for TTRUnadjustedIndexPath;
LABEL_14:
        sub_1005DCC38(v27, (uint64_t (*)(void))v31);
        sub_1005DCC38((uint64_t)v22, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
        return v26 & 1;
      }
      uint64_t v28 = &type metadata accessor for TTRUnadjustedIndexPath;
      uint64_t v29 = (uint64_t)v16;
    }
    else
    {
      sub_1005DD99C((uint64_t)v22, (uint64_t)v13, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v30 = v33;
        sub_1005DD4E4(v24, v33, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
        char v26 = static TTRUnadjustedIndexPath.__derived_struct_equals(_:_:)();
        sub_1005DCC38(v30, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
        uint64_t v27 = (uint64_t)v13;
        goto LABEL_9;
      }
      uint64_t v28 = &type metadata accessor for TTRUnadjustedIndexPath;
      uint64_t v29 = (uint64_t)v13;
    }
  }
  else
  {
    sub_1005DD99C((uint64_t)v22, (uint64_t)v19, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1005DD4E4(v24, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
      char v26 = static TTRAdjustedIndexPath.__derived_struct_equals(_:_:)();
      sub_1005DCC38((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
      uint64_t v27 = (uint64_t)v19;
      id v31 = &type metadata accessor for TTRAdjustedIndexPath;
      goto LABEL_14;
    }
    uint64_t v28 = &type metadata accessor for TTRAdjustedIndexPath;
    uint64_t v29 = (uint64_t)v19;
  }
  sub_1005DCC38(v29, (uint64_t (*)(void))v28);
  sub_1005DDA04((uint64_t)v22);
  char v26 = 0;
  return v26 & 1;
}

uint64_t sub_1005DD99C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005DDA04(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007A9CD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1005DDA74()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIReminderPrintingController()
{
  return self;
}

uint64_t sub_1005DDAD0(uint64_t a1)
{
  uint64_t v30 = a1;
  uint64_t v41 = *v1;
  uint64_t v3 = type metadata accessor for TTRRemindersPrintingHTMLResult();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v33 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_1007A9DB0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10003B754(&qword_1007A9DB8);
  uint64_t v36 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  id v31 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_10003B754(&qword_1007A9DC0);
  uint64_t v39 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  id v32 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10003B754(&qword_1007A9DC8);
  uint64_t v40 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v35 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = 1;
  Just.init(_:)();
  uint64_t v42 = (uint64_t)[self mainRunLoop];
  uint64_t v16 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 1, 1, v16);
  sub_1000368FC(0, (unint64_t *)&qword_10078AC90);
  sub_100037EA0(&qword_1007A9DD0, &qword_1007A9DB0);
  sub_1000C7F30();
  Publisher.receive<A>(on:options:)();
  sub_1000C7F98((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v17 = v33;
  sub_10027D4C8(a1, v33);
  unint64_t v18 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v19 = swift_allocObject();
  sub_10027D52C(v17, v19 + v18);
  static Subscribers.Demand.unlimited.getter();
  sub_10003B754(&qword_1007A9DD8);
  sub_100037EA0(&qword_1007A9DE0, &qword_1007A9DB8);
  sub_100037EA0(&qword_1007A9DE8, &qword_1007A9DD8);
  uint64_t v20 = v32;
  uint64_t v21 = v34;
  unint64_t v22 = v31;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v22, v21);
  sub_10027D4C8(v30, v17);
  uint64_t v23 = swift_allocObject();
  sub_10027D52C(v17, v23 + v18);
  *(void *)(v23 + ((v18 + v5 + 7) & 0xFFFFFFFFFFFFFFF8)) = v41;
  sub_1000368FC(0, &qword_1007A9DF0);
  sub_100037EA0(&qword_1007A9DF8, &qword_1007A9DC0);
  uint64_t v24 = v35;
  uint64_t v25 = v37;
  Publisher.map<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v20, v25);
  sub_100037EA0(&qword_1007A9E00, &qword_1007A9DC8);
  uint64_t v26 = v38;
  uint64_t v27 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v24, v26);
  return v27;
}

uint64_t sub_1005DE168@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRWebViewLoadingStateHelper.HTMLSource();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = [objc_allocWithZone((Class)type metadata accessor for TTRWebViewLoadingStateHelper()) init];
  uint64_t v8 = (char *)v6 + *(int *)(sub_10003B754(&qword_1007A05B0) + 48);
  uint64_t v9 = *(void *)(a1 + 24);
  *uint64_t v6 = *(void *)(a1 + 16);
  v6[1] = v9;
  uint64_t v10 = a1 + *(int *)(type metadata accessor for TTRRemindersPrintingHTMLResult() + 24);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v8, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1004552BC((uint64_t)v6);

  uint64_t result = sub_100456868((uint64_t)v6);
  *a2 = v13;
  return result;
}

uint64_t sub_1005DE2F4()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRRemindersPrintingHTMLResult() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_1005DE400@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersPrintingHTMLResult() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1005DE168(v4, a1);
}

uint64_t sub_1005DE480@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  type metadata accessor for TTRRemindersPrintingHTMLResult();
  uint64_t result = sub_1005DE6A8(v3);
  *a2 = result;
  return result;
}

uint64_t sub_1005DE4E4()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRRemindersPrintingHTMLResult() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = ((*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v6 + v1[8];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v5, v4);
}

uint64_t sub_1005DE5FC@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for TTRRemindersPrintingHTMLResult();

  return sub_1005DE480(a1, a2);
}

uint64_t sub_1005DE6A8(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchPredicate();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (uint64_t *)((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t *v5 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v3 + 104))(v5, enum case for DispatchPredicate.onQueue(_:), v2);
  char v6 = _dispatchPreconditionTest(_:)();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    id v8 = [self printInfo];
    NSString v9 = String._bridgeToObjectiveC()();
    [v8 setJobName:v9];

    [v8 setOutputType:0];
    id v10 = [self sharedPrintController];
    [v10 setPrintInfo:v8];
    uint64_t v11 = self;
    swift_bridgeObjectRetain();
    id v12 = [v11 sharedApplication];
    [v12 userInterfaceLayoutDirection];

    id v13 = objc_allocWithZone((Class)type metadata accessor for TTRIReminderPrintPageRenderer());
    id v14 = sub_1005ED824();
    id v15 = [a1 viewPrintFormatter];
    [v14 addPrintFormatter:v15 startingAtPageAtIndex:0];

    [v10 setPrintPageRenderer:v14];
    return (uint64_t)v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

char *sub_1005DE950(uint64_t *a1, void **a2, void *a3, uint64_t a4, uint64_t a5, int a6)
{
  int v101 = a6;
  uint64_t v102 = a1;
  uint64_t v103 = a4;
  uint64_t v8 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v92 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v93 = (char *)&v89 - v11;
  uint64_t v98 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v98);
  uint64_t v104 = (uint64_t)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v95);
  id v14 = (char *)&v89 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v89 - v20;
  uint64_t v22 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v25 - 8);
  uint64_t v27 = (void **)((char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10035A878((uint64_t)a2, (uint64_t)v27, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
  sub_100055D48(v27, (uint64_t)v24, 0, (uint64_t)v109);
  if (a3)
  {
    *((void *)&v106 + 1) = sub_1005DF614();
    *(void *)&long long v107 = &protocol witness table for REMList;
    *(void *)&long long v105 = a3;
  }
  else
  {
    *(void *)&long long v107 = 0;
    long long v105 = 0u;
    long long v106 = 0u;
  }
  id v28 = a3;
  static REMRemindersListDataView.SortingStyle.fallbackForREMList.getter();
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
  uint64_t v96 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v97 = v16 + 8;
  v96(v19, v15);
  sub_10050BC9C((uint64_t)&v105);
  uint64_t v94 = a2;
  uint64_t v29 = *a2;
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
  uint64_t v99 = v21;
  uint64_t v100 = v15;
  v30(v19, v21, v15);
  id v31 = v28;
  id v32 = v29;
  uint64_t v33 = (void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  uint64_t v34 = *v33;
  uint64_t v35 = type metadata accessor for TTRUserDefaults();
  *((void *)&v106 + 1) = v35;
  *(void *)&long long v107 = &protocol witness table for TTRUserDefaults;
  *(void *)&long long v105 = v34;
  type metadata accessor for TTRShowRemindersInListWithSectionsDataModelSource();
  swift_allocObject();
  id v36 = v34;
  uint64_t v37 = TTRShowRemindersInListWithSectionsDataModelSource.init(store:list:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)();
  id v38 = v109[0];
  *id v14 = 1;
  swift_storeEnumTagMultiPayload();
  uint64_t v39 = *v33;
  *((void *)&v106 + 1) = v35;
  *(void *)&long long v107 = &off_10074EE68;
  *(void *)&long long v105 = v39;
  type metadata accessor for TTRShowRemindersInListViewModelSource();
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = sub_100038E88((uint64_t)&v105, v35);
  __chkstk_darwin(v41);
  id v43 = (uint64_t *)((char *)&v89 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v44 + 16))(v43);
  uint64_t v45 = *v43;
  id v46 = v39;
  swift_retain();
  uint64_t v47 = sub_1005DF498(v37, (uint64_t)v38, (uint64_t)v14, v45, v40);
  sub_100038CD8((uint64_t)&v105);

  sub_10035A878((uint64_t)v94, (uint64_t)v27, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100057134((uint64_t)v109, (uint64_t)&v105);
  swift_retain();
  uint64_t v95 = v47;
  sub_100056B24((uint64_t)v27, (uint64_t)&v105, v47, (uint64_t)&off_1007512D8, v104);
  uint64_t v48 = (uint64_t)v93;
  sub_100056CAC((uint64_t)v93);
  uint64_t v94 = (void *)type metadata accessor for TTRIShowRemindersInListPresenter();
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_listSharingController) = 0;
  *(unsigned char *)(v49
           + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_shouldShowReminderDeletePrivacyWarningIfNeeded) = 0;
  CGRect v50 = (uint64_t *)(v49 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource);
  uint64_t *v50 = v37;
  v50[1] = (uint64_t)&protocol witness table for TTRShowRemindersInListWithSectionsDataModelSource;
  uint64_t v51 = (uint64_t)v92;
  sub_10035A878(v48, (uint64_t)v92, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v91 = v37;
  swift_retain();
  uint64_t v52 = v103;
  swift_unknownObjectRetain();
  uint64_t v53 = sub_1003585DC(v51, v52, v49);
  sub_1002F21D4(v48, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v54 = *(void *)(v53 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 104);
  swift_retain();
  if (v56(ObjectType, v54))
  {
    uint64_t v58 = v57;
    uint64_t v59 = swift_getObjectType();
    LOBYTE(v58) = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 16))(v59, v58);
    swift_release();
    swift_unknownObjectRelease();
    char v60 = v58 & 1;
  }
  else
  {
    swift_release();
    char v60 = 0;
  }
  uint64_t v61 = sub_1001D0C84(v60, v53);
  uint64_t v92 = v62;
  uint64_t v64 = v63;
  uint64_t v66 = v65;
  uint64_t v90 = swift_getObjectType();
  *(void *)(v53 + 24) = *(void *)(v66 + 8);
  uint64_t v103 = v64;
  swift_unknownObjectWeakAssign();
  uint64_t v67 = *(void *)(v53 + 144);
  uint64_t v68 = swift_getObjectType();
  uint64_t v69 = *(uint64_t (**)(uint64_t, uint64_t))(v67 + 104);
  swift_retain_n();
  uint64_t v70 = v61;
  if (v69(v68, v67))
  {
    uint64_t v72 = v71;
    uint64_t v73 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v72 + 16))(v73, v72);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v74 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v93 = v70;
  uint64_t v75 = (void *)sub_10035A06C(v53);
  swift_release();

  uint64_t v76 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v66 + 32);
  uint64_t v92 = v75;
  v76(v75, &off_1007464D0, v90, v66);
  uint64_t v77 = (char *)v109[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v77 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v78 = (char *)v109[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v78 + 1) = &protocol witness table for TTRShowRemindersInListWithSectionsDataModelSource;
  uint64_t v79 = v91;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v80 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v79 + 432);
  uint64_t v81 = swift_retain();
  v80(v81, &off_10074EF70);
  swift_retain();
  uint64_t v82 = swift_retain();
  sub_1005B1F9C(v82, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v83 = v104;
  *(void *)(*(void *)(v104 + *(int *)(v98 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v110, (uint64_t)&v105);
  long long v107 = v111;
  long long v108 = v112;
  *(void *)(v111 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)&v105);
  sub_100038DC0((uint64_t)&v113, (uint64_t)&v105);
  uint64_t v84 = *((void *)&v114 + 1);
  long long v107 = v114;
  uint64_t v85 = swift_getObjectType();
  uint64_t v86 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v84 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v86(v53, &off_10073CA90, v85, v84);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)&v105);
  (*(void (**)(void))(*(void *)v79 + 480))(v101 & 1);
  uint64_t v87 = v102;
  v102[3] = (uint64_t)v94;
  v87[4] = (uint64_t)&off_100750458;
  *uint64_t v87 = v53;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v83, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  v96(v99, v100);
  sub_100057B44(v109);
  return v92;
}

id TTRIShowRemindersInListAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowRemindersInListAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowRemindersInListAssembly()
{
  return self;
}

id TTRIShowRemindersInListAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowRemindersInListAssembly();
  return [super dealloc];
}

uint64_t sub_1005DF498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v18[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TTRUserDefaults();
  *(void *)(a5
            + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  *(void *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_list) = 0;
  uint64_t v14 = a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_remindersCount;
  *(void *)uint64_t v14 = 0;
  *(void *)(v14 + 8) = 0;
  *(unsigned char *)(v14 + 16) = 1;
  *(unsigned char *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_hasIncompleteOrCompletedReminders) = 2;
  *(unsigned char *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_showLargeAttachmentsValue) = 1;
  v18[3] = v13;
  v18[4] = &off_10074EE68;
  v18[0] = a4;
  *(void *)(a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_sectionsContextInstance) = 0;
  *(void *)(a5
            + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource____lazy_storage___groceryTipFetchHelper) = 0;
  sub_1000145EC((uint64_t)v18, a5 + OBJC_IVAR____TtC9Reminders37TTRShowRemindersInListViewModelSource_userDefaults);
  sub_10035A878(a3, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  uint64_t v15 = sub_100359DC4(a1, a2, (uint64_t)v12, a5);
  sub_100038CD8((uint64_t)v18);
  sub_1002F21D4(a3, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  return v15;
}

unint64_t sub_1005DF614()
{
  unint64_t result = qword_100791CF0;
  if (!qword_100791CF0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_100791CF0);
  }
  return result;
}

uint64_t sub_1005DF654(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = a2;
  unint64_t v5 = *(void (**)(void *, unint64_t, void *))(a1 + 32);
  if (a2)
  {
    swift_retain();
    id v6 = v4;
    uint64_t v4 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v8 = v7;
  }
  else
  {
    swift_retain();
    unint64_t v8 = 0xF000000000000000;
  }
  id v9 = a3;
  v5(v4, v8, a3);

  sub_100522A64((uint64_t)v4, v8);

  return swift_release();
}

void sub_1005DF700()
{
  uint64_t v0 = (uint64_t *)TTRAppBundleIdentifier.unsafeMutableAddressor();
  uint64_t v2 = *v0;
  uint64_t v3 = v0[1];
  swift_bridgeObjectRetain();
  v1._countAndFlagsBits = 0x6E6F69746365732ELL;
  v1._object = (void *)0xE800000000000000;
  String.append(_:)(v1);
  qword_1007A9E30 = v2;
  *(void *)algn_1007A9E38 = v3;
}

uint64_t type metadata accessor for TTRIRemindersListDragSection()
{
  return self;
}

id sub_1005DFA30(uint64_t a1, void *a2, uint64_t a3, void (**a4)(void, void, void))
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a4;
  _Block_copy(a4);
  if (qword_100785718 != -1) {
    swift_once();
  }
  BOOL v8 = qword_1007A9E30 == a1 && *(void *)algn_1007A9E38 == (void)a2;
  if (v8 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    id v9 = self;
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    uint64_t v10 = qword_1007A9E30;
    uint64_t v11 = *(void **)algn_1007A9E38;
    swift_bridgeObjectRetain();
    v12._countAndFlagsBits = v10;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v9 internalErrorWithDebugDescription:v13];
  }
  else
  {
    sub_1003AA938();
    if (static NSItemProviderWriting.canWriteTypeIdentifier(_:)())
    {
      TTRSection.displayName.getter();
      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      NSString v19 = String._bridgeToObjectiveC()();
      v24[4] = sub_1001E1B9C;
      v24[5] = v7;
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 1107296256;
      v24[2] = sub_1005DF654;
      v24[3] = &unk_100751B68;
      uint64_t v20 = _Block_copy(v24);
      swift_retain();
      swift_release();
      id v16 = [v18 loadDataWithTypeIdentifier:v19 forItemProviderCompletionHandler:v20];
      _Block_release(v20);
      swift_release();

      return v16;
    }
    uint64_t v21 = self;
    _StringGuts.grow(_:)(30);
    swift_bridgeObjectRelease();
    v22._countAndFlagsBits = a1;
    v22._object = a2;
    String.append(_:)(v22);
    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v14 = [v21 internalErrorWithDebugDescription:v23];
  }
  uint64_t v15 = (void *)_convertErrorToNSError(_:)();
  ((void (**)(void, void, void *))a4)[2](a4, 0, v15);
  swift_release();

  return 0;
}

uint64_t sub_1005DFD90()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1005DFDC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = objc_allocWithZone((Class)type metadata accessor for TTRIInsetTextField());
  BOOL v8 = v3;
  id v9 = [v7 initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v10 = self;
  uint64_t v11 = (char *)v9;
  id v12 = [v10 quaternarySystemFillColor];
  [v11 setBackgroundColor:v12];

  NSString v13 = &v11[direct field offset for TTRIInsetTextField.horizontalInset];
  swift_beginAccess();
  *(void *)NSString v13 = 0x4030000000000000;
  [v11 _setContinuousCornerRadius:12.0];
  id v14 = v11;
  UIAccessibilityIsBoldTextEnabled();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v15 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  [v14 setFont:v15];

  [v14 setTextAlignment:1];
  [v14 setClearButtonMode:1];
  *(void *)&v8[OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_nameTextField] = v14;
  id v16 = objc_allocWithZone((Class)type metadata accessor for TTRITextCellTextFieldTextArea());
  uint64_t v17 = v14;
  NSString v18 = (void *)TTRITextCellTextFieldTextArea.init(textField:)();
  NSString v19 = &v8[OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea];
  *(void *)NSString v19 = v18;
  *((void *)v19 + 1) = &protocol witness table for TTRITextCellTextFieldTextArea;
  id v46 = v18;

  if (a3)
  {
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v20 = 0;
  }
  v47.receiver = v8;
  v47.super_class = ObjectType;
  [super initWithStyle:a1 reuseIdentifier:v20];

  id v22 = v21;
  [v17 addTarget:v22 action:"textFieldEditingDidBegin" forControlEvents:0x10000];
  [v17 addTarget:v22 action:"textFieldEditingDidEnd" forControlEvents:0x40000];
  id v23 = [v22 contentView];
  [v23 addSubview:v17];

  uint64_t v24 = self;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100671100;
  id v26 = [v22 contentView];
  id v27 = [v26 leadingAnchor];

  id v28 = [v17 leadingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28 constant:-16.0];

  *(void *)(v25 + 32) = v29;
  id v30 = [v22 contentView];
  id v31 = [v30 trailingAnchor];

  id v32 = [v17 trailingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32 constant:16.0];

  *(void *)(v25 + 40) = v33;
  id v34 = [v22 contentView];
  id v35 = [v34 topAnchor];

  id v36 = [v17 topAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v25 + 48) = v37;
  id v38 = [v22 contentView];
  id v39 = [v38 bottomAnchor];

  id v40 = [v17 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40 constant:16.0];

  *(void *)(v25 + 56) = v41;
  id v42 = [v17 heightAnchor];
  id v43 = [v42 constraintEqualToConstant:56.0];

  *(void *)(v25 + 64) = v43;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 activateConstraints:isa];

  return v22;
}

void sub_1005E0434()
{
  unsigned int v1 = [*(id *)&v0[OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_nameTextField] isEditing];
  uint64_t v2 = self;
  uint64_t v3 = &selRef_systemFillColor;
  if (!v1) {
    uint64_t v3 = &selRef_quaternarySystemFillColor;
  }
  id v4 = [v2 *v3];
  unint64_t v5 = self;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v0;
  *(void *)(v6 + 24) = v4;
  v10[4] = sub_1005E0738;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  void v10[2] = sub_10000AD88;
  void v10[3] = &unk_100751BD8;
  id v7 = _Block_copy(v10);
  BOOL v8 = v0;
  id v9 = v4;
  swift_release();
  [v5 animateWithDuration:v7 animations:0.2];

  _Block_release(v7);
}

uint64_t type metadata accessor for TTRIListDetailNameTableCell()
{
  return self;
}

unint64_t sub_1005E06A8()
{
  return 0xD000000000000012;
}

uint64_t sub_1005E06C4()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1005E06F8()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1005E0738()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_nameTextField) setBackgroundColor:*(void *)(v0 + 24)];
}

uint64_t sub_1005E0754()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007A9EB0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007A9EB0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005E081C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)&v1[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list];
  id v8 = [v7 account];
  id v9 = [v8 accountTypeHost];

  LODWORD(v8) = [v9 isCloudKit];
  if (v8)
  {
    id v10 = [v7 account];
    id v11 = [v10 remObjectID];

    id v12 = [v11 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v13 = UUID.uuidString.getter();
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    id v16 = [v7 store];
    NSString v17 = String._bridgeToObjectiveC()();
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    NSString v18 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v13;
    *(void *)(v19 + 24) = v15;
    id v37 = sub_1005E2984;
    uint64_t v38 = v19;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009ADC;
    id v36 = &unk_100751C78;
    NSString v20 = _Block_copy(aBlock);
    swift_release();
    [v16 addCKShareObserverIfNeededForAccountID:v17 queue:v18 completion:v20];
    _Block_release(v20);
  }
  id v21 = self;
  id v22 = [v7 account];
  id v23 = [v21 newCloudContainerForAccount:v22];

  REMList.ttrGroceryContext.getter();
  uint64_t v24 = v36;
  if (v36)
  {
    uint64_t v25 = v37;
    sub_100038D28(aBlock, (uint64_t)v36);
    char v26 = (*((uint64_t (**)(void *, void (*)(uint64_t)))v25 + 2))(v24, v25);
    sub_100038CD8((uint64_t)aBlock);
  }
  else
  {
    sub_1002BF068((uint64_t)aBlock);
    char v26 = 0;
  }
  id v27 = sub_1005E0FB8(v1, v23);
  [v27 setAvailablePermissions:10];
  id v28 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v29 = TTRUserDefaults.publicSharingEnabled.getter();

  if (v29) {
    [v27 setAvailablePermissions:[v27 availablePermissions] | 1];
  }
  static TTRLocalizableStrings.Sharing.Notifications.sectionHeaderTitle.getter();
  NSString v30 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v27 _setSectionTitleForAuxiliarySwitches:v30];

  sub_100422650((uint64_t)_swiftEmptyArrayStorage);
  sub_1000368FC(0, &qword_1007A9FC8);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 _setParticipantDetails:isa];

  if (v26) {
    static TTRLocalizableStrings.Sharing.Notifications.enableAddedItemNotifications.getter();
  }
  else {
    static TTRLocalizableStrings.Sharing.Notifications.enableAddedReminderNotifications.getter();
  }
  NSString v32 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v27 _setPrimaryAuxiliarySwitchTitle:v32];

  [v27 _setPrimaryAuxiliarySwitchState:sub_1005E1654()];
  if (v26) {
    static TTRLocalizableStrings.Sharing.Notifications.enableCompletedItemNotifications.getter();
  }
  else {
    static TTRLocalizableStrings.Sharing.Notifications.enableCompletedReminderNotifications.getter();
  }
  NSString v33 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v27 _setSecondaryAuxiliarySwitchTitle:v33];

  [v27 _setSecondaryAuxiliarySwitchState:sub_1005E1970()];
  [v27 setModalPresentationStyle:2];
  [v27 setDelegate:v1];

  return v27;
}

void sub_1005E0D44(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100785720 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100018BF8(v5, (uint64_t)qword_1007A9EB0);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v11 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      swift_bridgeObjectRetain();
      sub_1000385A8(a2, a3, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v8 = Error.localizedDescription.getter();
      sub_1000385A8(v8, v9, &v11);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Could not add share observer for {accountID: %s, error: %s}", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

id sub_1005E0FB8(char *a1, void *a2)
{
  double v4 = *(void **)&a1[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list];
  id v5 = [v4 store];
  id v6 = [v4 objectID];
  *(void *)&long long aBlock = 0;
  id v7 = [v5 fetchShareForListWithID:v6 error:&aBlock];

  if ((void)aBlock)
  {
    id v8 = (id)aBlock;

    swift_willThrow();
LABEL_3:
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = sub_1005E29CC;
    *(void *)(v10 + 24) = v9;
    id v11 = objc_allocWithZone((Class)UICloudSharingController);
    uint64_t v25 = sub_1005E2A0C;
    uint64_t v26 = v10;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v24 = sub_1005E252C;
    *((void *)&v24 + 1) = &unk_100751CF0;
    id v12 = _Block_copy(&aBlock);
    uint64_t v13 = a1;
    id v14 = a2;
    id v15 = [v11 initWithPreparationHandler:v12];
    _Block_release(v12);
    swift_release();
    return v15;
  }
  if (!v7) {
    goto LABEL_3;
  }
  static CKShare.SystemFieldKey.thumbnailImageData.getter();
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  type metadata accessor for RemindersUICoreBundleLookupObject();
  id v16 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
  NSString v17 = (UIImage *)static UIImage.ttr_image(named:in:)();

  if (v17 && (NSString v18 = UIImagePNGRepresentation(v17), v17, v18))
  {
    uint64_t v19 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    *((void *)&v24 + 1) = &type metadata for Data;
    uint64_t v25 = (uint64_t (*)())&protocol witness table for Data;
    *(void *)&long long aBlock = v19;
    *((void *)&aBlock + 1) = v21;
  }
  else
  {
    uint64_t v25 = 0;
    long long aBlock = 0u;
    long long v24 = 0u;
  }
  sub_1000368FC(0, &qword_1007A9FD0);
  CKRecordKeyValueSetting.subscript.setter();
  id v15 = [objc_allocWithZone((Class)UICloudSharingController) initWithShare:v7 container:a2];

  return v15;
}

void sub_1005E12D0(uint64_t a1, void (*a2)(void, void, void), uint64_t a3, char *a4, uint64_t a5)
{
  id v8 = *(void **)&a4[OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list];
  id v9 = [v8 store];
  id v10 = [v8 objectID];
  id v31 = 0;
  id v11 = [v9 createShareForListWithID:v10 appIconData:0 error:&v31];

  id v12 = v31;
  if (v31)
  {
    id v13 = v31;

    swift_willThrow();
    if (qword_100785720 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100018BF8(v14, (uint64_t)qword_1007A9EB0);
    id v15 = v13;
    id v16 = a4;
    id v17 = v15;
    NSString v18 = v16;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      NSString v30 = a2;
      uint64_t v21 = swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      id v31 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 138412546;
      id v23 = v8;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v22 = v8;

      *(_WORD *)(v21 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v24 = Error.localizedDescription.getter();
      sub_1000385A8(v24, v25, (uint64_t *)&v31);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Failed to create share for list {list: %@, error: %s}", (uint8_t *)v21, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v30;
      swift_slowDealloc();
    }
    else
    {
    }
    id v26 = v17;
    id v27 = 0;
    uint64_t v28 = 0;
    id v29 = v12;
  }
  else
  {
    if (!v11) {
      return;
    }
    id v26 = v11;
    id v27 = v11;
    uint64_t v28 = a5;
    id v29 = 0;
  }
  a2(v27, v28, v29);
}

BOOL sub_1005E1654()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list), "remObjectID"));
  NSString v2 = [v1 stringRepresentation];

  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v3 = [self daemonUserDefaults];
  unsigned __int8 v4 = [v3 muteNotificationOptionsForSharedList:v2];

  return (v4 & 1) == 0;
}

void sub_1005E1720(char a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list);
  id v4 = [v3 remObjectID];
  NSString v5 = [v4 stringRepresentation];

  if (a1)
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v6 = self;
    id v7 = [v6 daemonUserDefaults];
    unint64_t v8 = (unint64_t)[v7 muteNotificationOptionsForSharedList:v5];

    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFELL;
    id v10 = [v3 remObjectID];
    NSString v15 = [v10 stringRepresentation];

    if (!v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v6 = self;
    id v11 = [v6 daemonUserDefaults];
    unint64_t v12 = (unint64_t)[v11 muteNotificationOptionsForSharedList:v5];

    unint64_t v9 = v12 | 1;
    id v13 = [v3 remObjectID];
    NSString v15 = [v13 stringRepresentation];

    if (!v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
  }
  id v14 = [v6 daemonUserDefaults];
  [v14 setMuteNotificationOptions:v9 forSharedList:v15];
}

BOOL sub_1005E1970()
{
  id v1 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                             + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list), "remObjectID"));
  NSString v2 = [v1 stringRepresentation];

  if (!v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v2 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  id v3 = [self daemonUserDefaults];
  unsigned __int8 v4 = [v3 muteNotificationOptionsForSharedList:v2];

  return (v4 & 2) == 0;
}

void sub_1005E1A3C(char a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list);
  id v4 = [v3 remObjectID];
  NSString v5 = [v4 stringRepresentation];

  if (a1)
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v6 = self;
    id v7 = [v6 daemonUserDefaults];
    unint64_t v8 = (unint64_t)[v7 muteNotificationOptionsForSharedList:v5];

    unint64_t v9 = v8 & 0xFFFFFFFFFFFFFFFDLL;
    id v10 = [v3 remObjectID];
    NSString v15 = [v10 stringRepresentation];

    if (!v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (!v5)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v5 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    id v6 = self;
    id v11 = [v6 daemonUserDefaults];
    unint64_t v12 = (unint64_t)[v11 muteNotificationOptionsForSharedList:v5];

    unint64_t v9 = v12 | 2;
    id v13 = [v3 remObjectID];
    NSString v15 = [v13 stringRepresentation];

    if (!v15)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v15 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
  }
  id v14 = [v6 daemonUserDefaults];
  [v14 setMuteNotificationOptions:v9 forSharedList:v15];
}

id sub_1005E1CBC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIListSharingController();
  return [super dealloc];
}

uint64_t type metadata accessor for TTRIListSharingController()
{
  return self;
}

void sub_1005E1DD0(uint64_t a1)
{
}

void sub_1005E1E68(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  double v11 = __chkstk_darwin(v9);
  id v13 = (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [a1 share:v11];
  if (v14)
  {
    NSString v15 = v14;
    id v16 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_list);
    id v17 = [v16 account];
    id v18 = [v17 remObjectID];

    id v19 = [v18 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    UUID.uuidString.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    id v20 = [v16 store];
    NSString v21 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    id v22 = (void *)static OS_dispatch_queue.main.getter();
    aBlock[4] = a2;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100009ADC;
    void aBlock[3] = a3;
    id v23 = _Block_copy(aBlock);
    [v20 *a4:v15, v21, v22, v23];
    _Block_release(v23);
  }
}

void sub_1005E20C8(uint64_t a1)
{
}

void sub_1005E20D4(uint64_t a1, const char *a2)
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_100785720 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_1007A9EB0);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v4))
    {
      NSString v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)NSString v5 = 136315138;
      swift_getErrorValue();
      uint64_t v6 = Error.localizedDescription.getter();
      sub_1000385A8(v6, v7, &v9);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v4, a2, v5, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1005E252C(uint64_t a1, void *a2, void *aBlock)
{
  os_log_type_t v4 = *(void (**)(void))(a1 + 32);
  NSString v5 = _Block_copy(aBlock);
  *(void *)(swift_allocObject() + 16) = v5;
  swift_retain();
  id v6 = a2;
  v4();
  swift_release();
  swift_release();
}

void sub_1005E25E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);
}

uint64_t sub_1005E2664(uint64_t a1)
{
  if (qword_100785720 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100018BF8(v3, (uint64_t)qword_1007A9EB0);
  swift_errorRetain();
  swift_errorRetain();
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v6 = 136315138;
    swift_getErrorValue();
    uint64_t v7 = Error.localizedDescription.getter();
    sub_1000385A8(v7, v8, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to save share with error %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v9 = v1 + OBJC_IVAR____TtC9Reminders25TTRIListSharingController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v11 = *(void *)(v9 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 16))(v1, a1, ObjectType, v11);
    return swift_unknownObjectRelease();
  }
  return result;
}

UIImage *sub_1005E2884()
{
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  type metadata accessor for RemindersUICoreBundleLookupObject();
  uint64_t v0 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
  uint64_t v1 = (UIImage *)static UIImage.ttr_image(named:in:)();

  if (v1)
  {
    objc_super v2 = UIImagePNGRepresentation(v1);

    if (v2)
    {
      uint64_t v1 = (UIImage *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

uint64_t sub_1005E294C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005E2984(uint64_t a1)
{
  sub_1005E0D44(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1005E298C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005E29CC(uint64_t a1, void (*a2)(void, void, void), uint64_t a3)
{
  sub_1005E12D0(a1, a2, a3, *(char **)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_1005E29D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E2A0C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1005E2A34()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1005E2A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1005E25E4(a1, a2, a3, *(void *)(v3 + 16));
}

id TTRIWhatsNewAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWhatsNewAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIWhatsNewAssembly()
{
  return self;
}

id TTRIWhatsNewAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWhatsNewAssembly();
  return [super dealloc];
}

id sub_1005E2B50(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TTRIWhatsNewRouter();
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16[3] = v3;
  v16[4] = &off_100736D50;
  v16[0] = v4;
  type metadata accessor for TTRIWhatsNewPresenter();
  os_log_type_t v5 = (void *)swift_allocObject();
  uint64_t v6 = sub_100038E88((uint64_t)v16, v3);
  __chkstk_darwin(v6);
  unint64_t v8 = (void *)((char *)&v16[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v9 + 16))(v8);
  uint64_t v10 = *v8;
  v5[9] = v3;
  v5[10] = &off_100736D50;
  v5[6] = v10;
  v5[3] = 0;
  swift_unknownObjectWeakInit();
  v5[5] = 0;
  swift_unknownObjectWeakInit();
  swift_retain();
  sub_100038CD8((uint64_t)v16);
  id v11 = objc_allocWithZone((Class)type metadata accessor for TTRIWhatsNewViewController());
  uint64_t v12 = swift_retain();
  id v13 = sub_1004335F4(v12);
  v5[5] = a2;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v13;
}

uint64_t sub_1005E2D10()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AA000);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AA000);
  if (qword_100785508 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAF8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005E2DD8()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_100788DF0);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  os_log_type_t v5 = (char *)&v19 - v4;
  URL.init(string:)();
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v7 = result;
    sub_10025274C((uint64_t)v5, (uint64_t)v3);
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void *)(v8 - 8);
    id v11 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v3, 1, v8) != 1)
    {
      URL._bridgeToObjectiveC()(v10);
      id v11 = v12;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v3, v8);
    }
    sub_10003D820((uint64_t)&_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    unsigned __int8 v14 = [v7 openSensitiveURL:v11 withOptions:isa];

    if ((v14 & 1) == 0)
    {
      if (qword_100785728 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100018BF8(v15, (uint64_t)qword_1007AA000);
      id v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v16, v17))
      {
        id v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "TTRICloudIsOffProvider: Failed to open Settings to turn on iCloud for Reminders", v18, 2u);
        swift_slowDealloc();
      }
    }
    return (id)sub_1002527B4((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005E3070()
{
  uint64_t v0 = sub_1005E30F8();
  uint64_t v1 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60));
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();

  return v2;
}

void *sub_1005E30F8()
{
  uint64_t v1 = qword_1007AA020;
  uint64_t v2 = *(void **)(v0 + qword_1007AA020);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + qword_1007AA020);
  }
  else
  {
    uint64_t v4 = sub_1005E39AC();
    os_log_type_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    uint64_t v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_1005E315C()
{
  uint64_t v0 = sub_1005E30F8();
  uint64_t v1 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x70));
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();

  return v2;
}

void sub_1005E31D8(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1005E30F8();
  uint64_t v3 = (char *)v2 + *(void *)((swift_isaMask & *v2) + 0x78);
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Optional();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

void (*sub_1005E32B4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = type metadata accessor for Optional();
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  sub_1005E31D8((uint64_t)v7);
  return sub_1005E33A0;
}

void sub_1005E33A0(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  uint64_t v5 = *(void *)(*(void *)a1 + 8);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_1005E3F4C((uint64_t)v3);
    uint64_t v7 = *(void (**)(void *, uint64_t))(v6 + 8);
    v7(v3, v5);
    v7(v4, v5);
  }
  else
  {
    sub_1005E3F4C(*(void *)(*(void *)a1 + 32));
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

void sub_1005E347C()
{
  uint64_t v0 = sub_1005E30F8();
  id v1 = [v0 text];

  if (v1)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    __break(1u);
  }
}

uint64_t (*sub_1005E34E8(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  sub_1005E347C();
  *a1 = v3;
  a1[1] = v4;
  return sub_1005E3530;
}

uint64_t sub_1005E3530(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = (void *)a1[1];
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1005E30F8();
    v5._countAndFlagsBits = v3;
    v5._object = v2;
    TTRIInlineButtonAttachmentTextView.applyText(_:)(v5);

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = sub_1005E30F8();
    v7._countAndFlagsBits = v3;
    v7._object = v2;
    TTRIInlineButtonAttachmentTextView.applyText(_:)(v7);
  }

  return swift_bridgeObjectRelease();
}

void sub_1005E35B8()
{
  uint64_t v0 = sub_1005E30F8();
  id v1 = [v0 attributedText];

  if (!v1) {
    __break(1u);
  }
}

void sub_1005E3604(void *a1)
{
  id v1 = sub_1005E30F8();
  TTRIInlineButtonAttachmentTextView.applyAttributedText(_:forceUpdate:)((NSAttributedString)a1, 0);
}

void (*sub_1005E3658(void *a1))(void **a1, char a2)
{
  a1[1] = v1;
  sub_1005E35B8();
  *a1 = v3;
  return sub_1005E36A0;
}

void sub_1005E36A0(void **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    sub_1005E3604(v3);
  }
  else
  {
    sub_1005E3604(v2);
  }
}

uint64_t sub_1005E3708()
{
  sub_1005E3730();

  return swift_getObjCClassFromMetadata();
}

uint64_t sub_1005E3730()
{
  return type metadata accessor for TTRIMarginTransferringContainerBoxView(0);
}

id sub_1005E3738(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[qword_1007AA018 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[qword_1007AA020] = 0;
  if (a3)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  v15.receiver = v3;
  v15.super_class = ObjectType;
  [super initWithStyle:a1 reuseIdentifier:v7];

  id v9 = v8;
  id v10 = [v9 containerView];
  [v10 setLayoutMarginsRelativeArrangement:1];
  [v10 setPreservesSuperviewLayoutMargins:1];
  [v10 setHorizontalAlignment:0];
  [v10 setVerticalAlignment:0];
  [v10 setDebugBoundingBoxesEnabled:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_10066D470;
  id v12 = v10;
  *(void *)(v11 + 32) = sub_1005E30F8();
  specialized Array._endMutation()();
  sub_1001141B8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 setArrangedSubviews:isa];

  [v9 setSelectionStyle:0];
  [v9 setSeparatorInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  return v9;
}

id sub_1005E3938(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1005E3738(a3, a4, v6);
}

void sub_1005E3984(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1005E40AC();
}

void *sub_1005E39AC()
{
  type metadata accessor for TTRIInlineButtonAttachmentTextView();
  uint64_t v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v1 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x80);
  swift_beginAccess();
  *((void *)v1 + 1) = &off_100751DF8;
  swift_unknownObjectWeakAssign();
  return v0;
}

void sub_1005E3A88(uint64_t a1)
{
  sub_1000499D4(a1 + qword_1007AA018);
  uint64_t v2 = *(void **)(a1 + qword_1007AA020);
}

uint64_t sub_1005E3AD4()
{
  return sub_1005E3070();
}

uint64_t sub_1005E3AF8()
{
  return sub_1005E315C();
}

void sub_1005E3B1C(uint64_t a1@<X8>)
{
}

uint64_t sub_1005E3B40(uint64_t a1)
{
  sub_1005E3F4C(a1);
  uint64_t v2 = type metadata accessor for Optional();
  id v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void (*sub_1005E3BBC(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1005E32B4(v2);
  return sub_1005E3C18;
}

void sub_1005E3C1C()
{
}

uint64_t sub_1005E3C40(uint64_t a1, void *a2)
{
  sub_1005E4048(a1, a2);

  return swift_bridgeObjectRelease();
}

void (*sub_1005E3C7C(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1005E34E8(v2);
  return sub_1005E3C18;
}

void sub_1005E3CD8()
{
}

void sub_1005E3CFC(void *a1)
{
}

void (*sub_1005E3D20(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1005E3658(v2);
  return sub_1005E3C18;
}

uint64_t sub_1005E3D7C(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100086D38(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

Class sub_1005E3DDC()
{
  swift_getObjectType();
  type metadata accessor for TTRIInlineButtonAttachmentTextViewButton();
  uint64_t v0 = (void *)UIView.firstDescendantView<A>(ofType:passing:)();
  if (v0
    && (v1 = v0, id v2 = [v0 accessibilityLabel], v1, v2))
  {
    uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v5 = v4;

    sub_1005E35B8();
    Class isa = v6.super.isa;
    v8._countAndFlagsBits = v3;
    v8._object = v5;
    v9.super.Class isa = TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)(v6, v8).super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1005E35B8();
    return (Class)v10;
  }
  return v9.super.isa;
}

uint64_t sub_1005E3EB0()
{
  uint64_t v0 = *(void *)TTRAccesibility.General.Hint.AnyOrAllMenuHint.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

NSAttributedString sub_1005E3EE4(NSAttributedString a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  uint64_t v6 = a2;
  uint64_t v7 = a3;

  return TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)(a1, *(Swift::String *)&v6);
}

void sub_1005E3F4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Optional();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - v4;
  uint64_t v6 = sub_1005E30F8();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  TTRIInlineButtonAttachmentTextView.selectedItem.setter();
}

void sub_1005E4048(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_1005E30F8();
  v4._countAndFlagsBits = a1;
  v4._object = a2;
  TTRIInlineButtonAttachmentTextView.applyText(_:)(v4);
}

void sub_1005E40AC()
{
  *(void *)&v0[qword_1007AA018 + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[qword_1007AA020] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t type metadata accessor for TTRIAboutYourDevicesRouter()
{
  return self;
}

uint64_t sub_1005E4154()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005E4198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a1;
  uint64_t v7 = type metadata accessor for TTRIMenuItem();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  v28[0] = (char *)v28 - v9;
  v28[1] = a3;
  void v28[2] = a4;
  uint64_t v10 = type metadata accessor for TTRIFilterOperationCellContentState.Option();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v31 = (char *)v28 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = *(void *)(TupleTypeMetadata2 - 8);
  double v15 = __chkstk_darwin(TupleTypeMetadata2);
  os_log_type_t v17 = (char *)v28 - v16;
  uint64_t v19 = (char *)v28 + *(int *)(v18 + 48) - v16;
  uint64_t v29 = v11;
  id v20 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  v20((char *)v28 - v16, v30, v10, v15);
  ((void (*)(char *, uint64_t, uint64_t))v20)(v19, a2, v10);
  uint64_t v30 = v8;
  NSString v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  if (v21(v17, 1, v7) == 1)
  {
    char v22 = 1;
    if (v21(v19, 1, v7) == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    ((void (*)(char *, char *, uint64_t))v20)(v31, v17, v10);
    if (v21(v19, 1, v7) != 1)
    {
      uint64_t v23 = v30;
      uint64_t v24 = v28[0];
      (*(void (**)(void, char *, uint64_t))(v30 + 32))(v28[0], v19, v7);
      unint64_t v25 = v31;
      char v22 = static TTRIMenuItem.== infix(_:_:)();
      id v26 = *(void (**)(uint64_t, uint64_t))(v23 + 8);
      v26(v24, v7);
      v26((uint64_t)v25, v7);
LABEL_8:
      uint64_t v14 = v29;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v7);
  }
  char v22 = 0;
  uint64_t v10 = TupleTypeMetadata2;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v10);
  return v22 & 1;
}

uint64_t sub_1005E44EC(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (!v2 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for TTRIFilterOperationCellContentState.Option();
  swift_getWitnessTable();
  if ((static Array<A>.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  type metadata accessor for TTRIFilterOperationCellContentState();
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1005E45D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1005E4198(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1005E45E4(void *a1, void *a2)
{
  return sub_1005E44EC(a1, a2);
}

uint64_t sub_1005E45F0(uint64_t a1)
{
  *(void *)(a1 + qword_1007AA238 + 8) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1005E4608(uint64_t a1)
{
  *(void *)(a1 + qword_1007AA238 + 8) = &off_100752098;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1005E4628(uint64_t a1)
{
  v2[2] = a1;
  return sub_1005E48F0((uint64_t)sub_1005E77D4, (uint64_t)v2);
}

void sub_1005E4674(void *a1, void *a2)
{
  uint64_t v4 = swift_isaMask;
  uint64_t v5 = *(void *)((swift_isaMask & *a1) + 0x50);
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - v8;
  uint64_t v10 = (void *)((char *)a2 + *(void *)((*a2 & v4) + 0x78));
  swift_beginAccess();
  uint64_t v11 = (char *)v10 + *(int *)(type metadata accessor for TTRIFilterOperationCellContentState() + 40);
  uint64_t v12 = *(void *)(v5 - 8);
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v11, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v5);
  sub_1005E75F8((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)((char *)a1 + qword_1007AA240) = v10[2];
  swift_bridgeObjectRetain();
  sub_1005E4F7C();
  swift_bridgeObjectRelease();
  uint64_t v14 = *v10;
  unint64_t v13 = v10[1];
  swift_bridgeObjectRetain();
  sub_1005E4878(v14, v13);
}

void sub_1005E4878(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = sub_1005E4F18();
  if (a2) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (!a2) {
    a2 = 0xE000000000000000;
  }
  unint64_t v5 = a2;
  TTRIInlineButtonAttachmentTextView.applyText(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_1005E48F0(uint64_t a1, uint64_t a2)
{
  id v5 = [v2 containerView];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  v9[4] = sub_1000218B0;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_100021888;
  v9[3] = &unk_1007520D0;
  uint64_t v7 = _Block_copy(v9);
  swift_retain();
  swift_release();
  [v5 performBatchUpdates:v7];

  _Block_release(v7);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

void sub_1005E4A28()
{
}

uint64_t sub_1005E4A58()
{
  return sub_1000499C4(*(void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0xF8)));
}

uint64_t sub_1005E4A88(void *a1)
{
  return sub_1000499C4(*(void *)((char *)a1 + *(void *)((swift_isaMask & *a1) + 0xF8)));
}

uint64_t type metadata accessor for TTRIFilterOperationCellContent()
{
  return sub_10003BC54();
}

uint64_t sub_1005E4AD0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1005E4B2C(uint64_t a1)
{
  uint64_t v3 = *(void *)((swift_isaMask & *v1) + 0xE8);
  uint64_t v4 = type metadata accessor for TTRIFilterOperationCellContentState();
  uint64_t v22 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = v23 - v5 + 16;
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = v23 - v9 + 16;
  uint64_t v11 = *(void *)(v3 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = v23 - v13 + 16;
  sub_100038DC0(a1, (uint64_t)v23);
  int v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v15)
  {
    v16(v10, 0, 1, v3);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, v3);
    os_log_type_t v17 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78);
    swift_beginAccess();
    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
    v18(v6, v17, v4);
    (*(void (**)(char *, char *, uint64_t))(v11 + 24))(&v6[*(int *)(v4 + 40)], v14, v3);
    TTRITableCellContent.state.setter();
    uint64_t v19 = (void (**)(char *))((char *)v1 + *(void *)((swift_isaMask & *v1) + 0xF8));
    swift_beginAccess();
    id v20 = *v19;
    if (*v19)
    {
      swift_endAccess();
      v18(v6, v17, v4);
      swift_retain();
      v20(v6);
      sub_1000499C4((uint64_t)v20);
      (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v3);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v3);
      return swift_endAccess();
    }
  }
  else
  {
    v16(v10, 1, 1, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

void *sub_1005E4F18()
{
  uint64_t v1 = qword_1007AA248;
  BOOL v2 = *(void **)(v0 + qword_1007AA248);
  if (v2)
  {
    uint64_t v3 = *(void **)(v0 + qword_1007AA248);
  }
  else
  {
    uint64_t v4 = sub_1005E5788();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    uint64_t v3 = v4;

    BOOL v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1005E4F7C()
{
  uint64_t v1 = qword_1007AA240;
  uint64_t v2 = *(void *)((swift_isaMask & *v0) + 0x50);
  uint64_t v3 = *(void *)((swift_isaMask & *v0) + 0x58);
  type metadata accessor for TTRIFilterOperationCellContentState.Option();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v4 = static Array<A>.== infix(_:_:)();
  swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = sub_1005E4F18();
    v10[5] = *(void *)((char *)v0 + v1);
    __chkstk_darwin(v5);
    void v10[2] = v2;
    void v10[3] = v3;
    uint64_t v6 = type metadata accessor for Array();
    uint64_t v7 = type metadata accessor for TTRIInlineButtonAttachmentTextView.Option();
    swift_bridgeObjectRetain();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_100065920((void (*)(char *, char *))sub_1005E77EC, (uint64_t)v10, v6, v7, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v9);
    swift_bridgeObjectRelease();
    TTRIInlineButtonAttachmentTextView.menuOptions.setter();
  }
}

uint64_t sub_1005E5140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v26 = a4;
  uint64_t v25 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRIMenuItem();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v24 - v12;
  uint64_t v14 = type metadata accessor for TTRIFilterOperationCellContentState.Option();
  double v15 = __chkstk_darwin(v14);
  os_log_type_t v17 = (char *)v24 - v16;
  (*(void (**)(char *, uint64_t, double))(v18 + 16))((char *)v24 - v16, a1, v15);
  uint64_t v19 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v17, v10);
    v24[1] = *(void *)v13;
    v24[2] = v4;
    id v20 = (void *)*((void *)v13 + 2);
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v9, &v13[*(int *)(v10 + 40)], a2);
    uint64_t v25 = a3;
    NSString v21 = *(void (**)(char *, uint64_t))(v11 + 8);
    swift_bridgeObjectRetain();
    id v22 = v20;
    v21(v13, v10);
    TTRIMenuItem.init(title:image:item:selectedTitle:)();
    uint64_t v19 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v26, v19, 1, v10);
}

uint64_t sub_1005E5408()
{
  sub_1005E3730();

  return swift_getObjCClassFromMetadata();
}

id sub_1005E5430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[qword_1007AA238 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = qword_1007AA240;
  type metadata accessor for TTRIFilterOperationCellContentState.Option();
  uint64_t v9 = v4;
  *(void *)&v4[v8] = Array.init()();
  *(void *)&v9[qword_1007AA248] = 0;

  if (a3)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v23.receiver = v9;
  v23.super_class = ObjectType;
  id v11 = [super initWithStyle:a1 reuseIdentifier:v10];

  uint64_t v12 = self;
  id v13 = v11;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [v12 textAttachmentViewProviderClassForFileType:v14];

  if (!v15)
  {
    type metadata accessor for TTRIMenuButtonAttachmentProvider();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    NSString v17 = String._bridgeToObjectiveC()();
    [v12 registerTextAttachmentViewProviderClass:ObjCClassFromMetadata forFileType:v17];
  }
  id v18 = [v13 containerView];
  [v18 setLayoutMarginsRelativeArrangement:1];
  [v18 setPreservesSuperviewLayoutMargins:1];
  [v18 setHorizontalAlignment:0];
  [v18 setVerticalAlignment:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_10066D470;
  id v20 = v18;
  *(void *)(v19 + 32) = sub_1005E4F18();
  specialized Array._endMutation()();
  sub_1001141B8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 setArrangedSubviews:isa];

  [v13 setSeparatorInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  return v13;
}

id sub_1005E5714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1005E5430(a3, a4, v6);
}

void sub_1005E5760(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1005E76F4();
}

void *sub_1005E5788()
{
  type metadata accessor for TTRIInlineButtonAttachmentTextView();
  uint64_t v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v1 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60));
  swift_beginAccess();
  *uint64_t v1 = 0xD000000000000020;
  v1[1] = 0x80000001006C0080;
  swift_bridgeObjectRelease();
  uint64_t v2 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x80);
  swift_beginAccess();
  *((void *)v2 + 1) = &off_100752068;
  swift_unknownObjectWeakAssign();
  return v0;
}

void sub_1005E58BC(uint64_t a1)
{
  sub_1000499D4(a1 + qword_1007AA238);
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + qword_1007AA248);
}

uint64_t type metadata accessor for TTRIFilterOperationTableCell()
{
  return sub_10003BC54();
}

uint64_t sub_1005E5930()
{
  uint64_t result = type metadata accessor for TTRIMenuItem();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1005E59AC(void *__dst, void *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64) + 7;
  size_t v9 = ((v8 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v7 <= 7 && (*(_DWORD *)(v6 + 80) & 0x100000) == 0 && v9 <= 0x18)
  {
    uint64_t v13 = ~v7;
    if ((*(_DWORD *)(v6 + 84) & 0x80000000) != 0)
    {
      if ((*(unsigned int (**)(unint64_t))(v6 + 48))(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                       + v7
                                                                       + 8) & v13))
      {
LABEL_14:
        memcpy(__dst, __src, v9);
        return __dst;
      }
    }
    else
    {
      unint64_t v14 = __src[1];
      if (v14 >= 0xFFFFFFFF) {
        LODWORD(v14) = -1;
      }
      if (v14 != -1) {
        goto LABEL_14;
      }
    }
    uint64_t v15 = __src[1];
    char *__dst = *__src;
    __dst[1] = v15;
    uint64_t v16 = (void *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    NSString v17 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    id v18 = *v17;
    *uint64_t v16 = *v17;
    uint64_t v19 = ((unint64_t)v16 + v7 + 8) & v13;
    uint64_t v20 = ((unint64_t)v17 + v7 + 8) & v13;
    NSString v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    id v22 = v18;
    v21(v19, v20, v5);
    objc_super v23 = (void *)((v8 + v19) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((v8 + v20) & 0xFFFFFFFFFFFFFFF8);
    void *v23 = *v24;
    v23[1] = v24[1];
    swift_bridgeObjectRetain();
    return __dst;
  }
  uint64_t v12 = *__src;
  char *__dst = *__src;
  __dst = (void *)(v12 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
  swift_retain();
  return __dst;
}

uint64_t sub_1005E5B78(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = ~v5;
  if ((*(_DWORD *)(v4 + 84) & 0x80000000) != 0)
  {
    uint64_t result = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v5 + 8) & v6);
    if (result) {
      return result;
    }
    goto LABEL_7;
  }
  unint64_t v7 = *(void *)(a1 + 8);
  if (v7 >= 0xFFFFFFFF) {
    LODWORD(v7) = -1;
  }
  uint64_t result = (v7 + 1);
  if (v7 == -1)
  {
LABEL_7:
    swift_bridgeObjectRelease();
    size_t v9 = (id *)((a1 + 23) & 0xFFFFFFFFFFFFFFF8);

    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(((unint64_t)v9 + v5 + 8) & v6, v3);
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1005E5CB8(void *__dst, void *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) == 0)
  {
    unint64_t v10 = __src[1];
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    uint64_t v11 = v9 + 7;
    if (v10 != -1) {
      goto LABEL_5;
    }
LABEL_7:
    uint64_t v12 = __src[1];
    char *__dst = *__src;
    __dst[1] = v12;
    uint64_t v13 = (void *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v14 = (void **)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = *v14;
    void *v13 = *v14;
    uint64_t v16 = ((unint64_t)v13 + v7 + 8) & v8;
    uint64_t v17 = ((unint64_t)v14 + v7 + 8) & v8;
    id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    id v19 = v15;
    v18(v16, v17, v5);
    uint64_t v20 = (void *)((v11 + v16) & 0xFFFFFFFFFFFFFFF8);
    NSString v21 = (void *)((v11 + v17) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v20 = *v21;
    v20[1] = v21[1];
    swift_bridgeObjectRetain();
    return __dst;
  }
  uint64_t v11 = v9 + 7;
  if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 8) & v8))
    goto LABEL_7;
LABEL_5:
  memcpy(__dst, __src, ((v11 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16);
  return __dst;
}

void *sub_1005E5E44(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = v10 + 7;
  size_t v12 = ((v10 + 7 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if ((v7 & 0x80000000) != 0)
  {
    uint64_t v39 = v10 + 7;
    uint64_t v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    int v18 = v17(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    int v15 = v17(((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    uint64_t v11 = v39;
    if (!v18)
    {
LABEL_5:
      if (!v15)
      {
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v28 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v29 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v30 = *v29;
        id v31 = *v28;
        *uint64_t v28 = *v29;
        id v32 = v30;

        NSString v33 = (char *)v29 + v8;
        uint64_t v34 = ((unint64_t)v28 + v8 + 8) & v9;
        uint64_t v35 = (unint64_t)(v33 + 8) & v9;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v34, v35, v5);
        id v36 = (void *)((v11 + v34) & 0xFFFFFFFFFFFFFFF8);
        id v37 = (void *)((v11 + v35) & 0xFFFFFFFFFFFFFFF8);
        *id v36 = *v37;
        v36[1] = v37[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = (id *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);

      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v16 + v8 + 8) & v9, v5);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v13 = a1[1];
    unint64_t v14 = a2[1];
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 + 1;
    if (v13 > 0xFFFFFFFE) {
      goto LABEL_5;
    }
  }
  if (!v15)
  {
    *a1 = *a2;
    a1[1] = a2[1];
    id v19 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    NSString v21 = *v20;
    *id v19 = *v20;
    uint64_t v22 = ((unint64_t)v19 + v8 + 8) & v9;
    uint64_t v23 = ((unint64_t)v20 + v8 + 8) & v9;
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    swift_bridgeObjectRetain();
    id v25 = v21;
    v24(v22, v23, v5);
    uint64_t v26 = (void *)((v11 + v22) & 0xFFFFFFFFFFFFFFF8);
    id v27 = (void *)((v11 + v23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    v26[1] = v27[1];
    swift_bridgeObjectRetain();
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v12);
  return a1;
}

_OWORD *sub_1005E6130(_OWORD *__dst, void *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(v6 + 64);
  if ((*(_DWORD *)(v6 + 84) & 0x80000000) == 0)
  {
    unint64_t v10 = __src[1];
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    uint64_t v11 = v9 + 7;
    if (v10 != -1) {
      goto LABEL_5;
    }
LABEL_7:
    char *__dst = *(_OWORD *)__src;
    size_t v12 = (void *)(((unint64_t)__dst + 23) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v13 = (void *)(((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8);
    *size_t v12 = *v13;
    uint64_t v14 = ((unint64_t)v12 + v7 + 8) & v8;
    uint64_t v15 = ((unint64_t)v13 + v7 + 8) & v8;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v14, v15, v5);
    *(_OWORD *)((v11 + v14) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v11 + v15) & 0xFFFFFFFFFFFFFFF8);
    return __dst;
  }
  uint64_t v11 = v9 + 7;
  if (!(*(unsigned int (**)(unint64_t))(v6 + 48))(((((unint64_t)__src + 23) & 0xFFFFFFFFFFFFFFF8)
                                                                    + v7
                                                                    + 8) & v8))
    goto LABEL_7;
LABEL_5:
  memcpy(__dst, __src, ((v11 + ((v7 + 24) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 16);
  return __dst;
}

void *sub_1005E62A8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = v10 + 7;
  size_t v12 = ((v10 + 7 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if ((v7 & 0x80000000) != 0)
  {
    unint64_t v33 = ((v10 + 7 + ((v8 + 24) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v34 = v10 + 7;
    uint64_t v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v6 + 48);
    int v18 = v17(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    int v15 = v17(((((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & v9, v7, v5);
    size_t v12 = v33;
    uint64_t v11 = v34;
    if (!v18)
    {
LABEL_5:
      if (!v15)
      {
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        swift_bridgeObjectRelease();
        uint64_t v24 = (void **)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
        id v25 = (void **)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v26 = *v24;
        *uint64_t v24 = *v25;

        id v27 = (char *)v25 + v8;
        uint64_t v28 = ((unint64_t)v24 + v8 + 8) & v9;
        uint64_t v29 = (unint64_t)(v27 + 8) & v9;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v28, v29, v5);
        uint64_t v30 = (void *)((v11 + v28) & 0xFFFFFFFFFFFFFFF8);
        id v31 = (void *)((v11 + v29) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v30 = *v31;
        v30[1] = v31[1];
        swift_bridgeObjectRelease();
        return a1;
      }
      swift_bridgeObjectRelease();
      uint64_t v16 = (id *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);

      (*(void (**)(unint64_t, uint64_t))(v6 + 8))(((unint64_t)v16 + v8 + 8) & v9, v5);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v13 = a1[1];
    unint64_t v14 = a2[1];
    if (v14 >= 0xFFFFFFFF) {
      LODWORD(v14) = -1;
    }
    int v15 = v14 + 1;
    if (v13 > 0xFFFFFFFE) {
      goto LABEL_5;
    }
  }
  if (!v15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    id v19 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *id v19 = *v20;
    uint64_t v21 = ((unint64_t)v19 + v8 + 8) & v9;
    uint64_t v22 = ((unint64_t)v20 + v8 + 8) & v9;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v21, v22, v5);
    *(_OWORD *)((v11 + v21) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v11 + v22) & 0xFFFFFFFFFFFFFFF8);
    return a1;
  }
LABEL_9:
  memcpy(a1, a2, v12);
  return a1;
}

uint64_t sub_1005E655C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    int v7 = 0x7FFFFFFF;
  }
  else {
    int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 - 1 < a2)
  {
    unint64_t v8 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 24) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    unsigned int v11 = v9 + 2;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *(unsigned __int8 *)(a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v14 = *(unsigned __int16 *)(a1 + v8);
        if (v14) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1005E66E8);
      case 4:
        int v14 = *(_DWORD *)(a1 + v8);
        if (!v14) {
          break;
        }
LABEL_21:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *(_DWORD *)a1;
        }
        return (v10 | v16) + v7;
      default:
        break;
    }
  }
  if ((v5 & 0x80000000) != 0)
  {
    unsigned int v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v6 + 8) & ~v6);
  }
  else
  {
    unint64_t v17 = *(void *)(a1 + 8);
    if (v17 >= 0xFFFFFFFF) {
      LODWORD(v17) = -1;
    }
    unsigned int v18 = v17 + 1;
  }
  if (v18 >= 2) {
    return v18 - 1;
  }
  else {
    return 0;
  }
}

void sub_1005E66FC(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v9 = v8 - 1;
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  size_t v11 = ((*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v8 - 1 >= a3)
  {
    int v14 = 0;
    if (v9 >= a2)
    {
LABEL_16:
      switch(v14)
      {
        case 1:
          a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_29;
        case 2:
          *(_WORD *)&a1[v11] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_29;
        case 3:
          goto LABEL_45;
        case 4:
          *(_DWORD *)&a1[v11] = 0;
          goto LABEL_28;
        default:
LABEL_28:
          if (a2)
          {
LABEL_29:
            if (a2 + 1 <= v8)
            {
              if (a2 != -1)
              {
                if ((v7 & 0x80000000) != 0)
                {
                  unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v10 + 8) & ~v10;
                  id v19 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
                  uint64_t v20 = a2 + 1;
                  v19(v18, v20);
                }
                else if (((a2 + 1) & 0x80000000) != 0)
                {
                  *(void *)a1 = a2 - 0x7FFFFFFF;
                  *((void *)a1 + 1) = 0;
                }
                else
                {
                  *((void *)a1 + 1) = a2;
                }
              }
            }
            else if (v11)
            {
              unsigned int v17 = a2 - v8;
              bzero(a1, v11);
              *(_DWORD *)a1 = v17;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = a3 - v8 + 2;
    if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0) {
      unsigned int v12 = 2;
    }
    if (v12 >= 0x10000) {
      int v13 = 4;
    }
    else {
      int v13 = 2;
    }
    if (v12 < 0x100) {
      int v13 = 1;
    }
    if (v12 >= 2) {
      int v14 = v13;
    }
    else {
      int v14 = 0;
    }
    if (v9 >= a2) {
      goto LABEL_16;
    }
  }
  unsigned int v15 = a2 - v8;
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v16 = v15 + 1;
  }
  else {
    int v16 = 1;
  }
  if (((*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v10 + 24) & ~v10) + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    bzero(a1, v11);
    *(_DWORD *)a1 = v15;
  }
  switch(v14)
  {
    case 1:
      a1[v11] = v16;
      break;
    case 2:
      *(_WORD *)&a1[v11] = v16;
      break;
    case 3:
LABEL_45:
      __break(1u);
      JUMPOUT(0x1005E6934);
    case 4:
      *(_DWORD *)&a1[v11] = v16;
      break;
    default:
      return;
  }
}

uint64_t sub_1005E695C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  if ((*(_DWORD *)(v2 + 84) & 0x80000000) != 0) {
    return (*(uint64_t (**)(unint64_t))(v2 + 48))((((a1 + 23) & 0xFFFFFFFFFFFFFFF8)
  }
                                                                  + *(unsigned __int8 *)(v2 + 80)
                                                                  + 8) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  return (v3 + 1);
}

void sub_1005E69D4(void *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v6 = 0x7FFFFFFF;
  }
  else {
    unsigned int v6 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v7 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = ~v7;
  if (v6 >= a2)
  {
    if (a2)
    {
      if ((v5 & 0x80000000) != 0)
      {
        unint64_t v11 = ((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & v8;
        unsigned int v12 = *(void (**)(unint64_t))(v4 + 56);
        v12(v11);
      }
      else if ((a2 & 0x80000000) != 0)
      {
        *a1 = a2 ^ 0x80000000;
        a1[1] = 0;
      }
      else
      {
        a1[1] = a2 - 1;
      }
    }
  }
  else
  {
    size_t v9 = ((((v7 + 24) & v8) + *(_DWORD *)(v4 + 64) + 7) & 0xFFFFFFF8) + 16;
    if (v9)
    {
      int v10 = ~v6 + a2;
      bzero(a1, v9);
      *(_DWORD *)a1 = v10;
    }
  }
}

uint64_t type metadata accessor for TTRIFilterOperationCellContentState.Option()
{
  return sub_10003BC54();
}

uint64_t sub_1005E6AF4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1005E6B9C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 24) & (unint64_t)~v6) + *(void *)(v5 + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = a2[1];
    *a1 = *a2;
    a1[1] = v10;
    unint64_t v11 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v12 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v11 = *v12;
    uint64_t v13 = ((unint64_t)v11 + v6 + 8) & ~v6;
    uint64_t v14 = ((unint64_t)v12 + v6 + 8) & ~v6;
    unsigned int v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v15(v13, v14, v4);
  }
  return a1;
}

uint64_t sub_1005E6CD0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (((a1 + 23) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1005E6D54(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v5 = *v6;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = ((unint64_t)v5 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)v6 + v9 + 8) & ~v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8(v10, v11, v7);
  return a1;
}

void *sub_1005E6E0C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

_OWORD *sub_1005E6ED4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))(((unint64_t)v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

void *sub_1005E6F5C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = (void *)(((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)(((unint64_t)a2 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1005E7004(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 24) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 23) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 8) & ~v6);
      unint64_t v15 = *((void *)a1 + 1);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1005E71AC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 24) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1005E7414);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (((unint64_t)(a1 + 23) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          id v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TTRIFilterOperationCellContentState()
{
  return sub_10003BC54();
}

uint64_t sub_1005E7454(uint64_t a1)
{
  uint64_t v3 = v1 + qword_1007AA238;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1005E74E4()
{
  swift_getObjectType();
  type metadata accessor for TTRIInlineButtonAttachmentTextViewButton();
  uint64_t v0 = (void *)UIView.firstDescendantView<A>(ofType:passing:)();
  if (!v0
    || (v1 = v0, id v2 = [v0 accessibilityLabel], v1, !v2))
  {
    unsigned int v7 = sub_1005E4F18();
    [v7 attributedText];
    goto LABEL_6;
  }
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  uint64_t v6 = sub_1005E4F18();
  unsigned int v7 = [v6 attributedText];

  if (v7)
  {
    v8._countAndFlagsBits = v3;
    v8._object = v5;
    TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)((NSAttributedString)v7, v8);
    swift_bridgeObjectRelease();
LABEL_6:

    return;
  }
  __break(1u);
}

void sub_1005E75F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Optional();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - v4;
  uint64_t v6 = sub_1005E4F18();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  TTRIInlineButtonAttachmentTextView.selectedItem.setter();
}

void sub_1005E76F4()
{
  *(void *)&v0[qword_1007AA238 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = qword_1007AA240;
  type metadata accessor for TTRIFilterOperationCellContentState.Option();
  *(void *)&v0[v1] = Array.init()();
  *(void *)&v0[qword_1007AA248] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1005E77D4()
{
  sub_1005E4674(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1005E77DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005E77EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005E5140(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005E780C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AA3D0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AA3D0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

double sub_1005E78D4(uint64_t a1)
{
  sub_10003B754(&qword_1007A13F8);
  uint64_t v2 = swift_allocObject();
  *(void *)&double result = 2;
  *(_OWORD *)(v2 + 16) = xmmword_10066C680;
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(v2 + 32) = v4;
  *(unsigned char *)(v2 + 40) = 0;
  *(void *)(v2 + 48) = v4;
  *(unsigned char *)(v2 + 56) = 1;
  return result;
}

uint64_t sub_1005E7934()
{
  return 9;
}

uint64_t sub_1005E793C()
{
  sub_10003B754(&qword_1007907A0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10066C680;
  *(unsigned char *)(v0 + 32) = 1;
  *(unsigned char *)(v0 + 72) = 0;
  sub_1005E9A50();
  AnyHashable.init<A>(_:)();
  *(unsigned char *)(v0 + 120) = 1;
  return v0;
}

uint64_t sub_1005E79B8()
{
  AnyHashable.base.getter();
  if (!swift_dynamicCast()) {
    return 0;
  }
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self _systemImageNamed:v0];

  sub_1002F0E48();
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
  swift_allocObject();
  swift_weakInit();
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_1005E7AEC()
{
  uint64_t v0 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (void *)swift_allocObject();
    _OWORD v6[2] = 0;
    v6[3] = 0;
    v6[4] = v4;
    sub_10022F74C((uint64_t)v2, (uint64_t)&unk_1007AAD78, (uint64_t)v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1005E7C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v5;
  void *v5 = v4;
  v5[1] = sub_1005E7C98;
  return sub_1005E8644();
}

uint64_t sub_1005E7C98(char a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(unsigned char *)(v4 + 72) = a1 & 1;
    return _swift_task_switch(sub_1005E7DE8, 0, 0);
  }
}

uint64_t sub_1005E7DE8()
{
  if (*(unsigned char *)(v0 + 72) == 1)
  {
    uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource;
    *(void *)(v0 + 32) = *(void *)(*(void *)(v0 + 16) + 104);
    *(void *)(v0 + 40) = v1;
    type metadata accessor for MainActor();
    *(void *)(v0 + 48) = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_1005E7ED0, v3, v2);
  }
  else
  {
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1005E7ED0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[2];
  swift_release();
  v0[7] = *(void *)(v2 + v1);
  v0[8] = *(void *)(v2 + v1 + 8);
  return _swift_task_switch(sub_1005E7F50, 0, 0);
}

uint64_t sub_1005E7F50()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
  sub_100225428(v3);

  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1005E7FEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  if (qword_100785730 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_1007AA3D0);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertTitle.getter();
  static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertMessage.getter();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v21[0] = [self alertControllerWithTitle:v6 message:v7 preferredStyle:1];

  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1005E83DC;
  uint64_t v27 = 0;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1001077FC;
  id v25 = &unk_1007520F8;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  size_t v10 = self;
  id v11 = [v10 actionWithTitle:v8 style:1 handler:v9];
  _Block_release(v9);

  static TTRLocalizableStrings.Common.recoverButton.getter();
  sub_10005FCB8(a1, (uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v21[1];
  sub_1000AA9AC((uint64_t)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v13 + v12);
  swift_retain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_1005E9888;
  uint64_t v27 = v13;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v23 = 1107296256;
  uint64_t v24 = sub_1001077FC;
  id v25 = &unk_100752148;
  int v15 = _Block_copy(&aBlock);
  swift_release();
  id v16 = [v10 actionWithTitle:v14 style:0 handler:v15];
  int v17 = v15;
  unint64_t v18 = (void *)v21[0];
  _Block_release(v17);

  [v18 addAction:v11];
  [v18 addAction:v16];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = Strong;
    [Strong presentViewController:v18 animated:1 completion:0];

    id v11 = v16;
    id v16 = v20;
  }
}

uint64_t sub_1005E83DC()
{
  if (qword_100785730 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_1007AA3D0);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005E847C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10003B754(&qword_100791B78);
  __chkstk_darwin(v4 - 8);
  NSString v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754((uint64_t *)&unk_10078E960);
  uint64_t v7 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_10066C6F0;
  sub_10005FCB8(a3, v9 + v8);
  uint64_t v10 = enum case for REMRDLUserOperationDetail.rdl_tapToRecover(_:);
  uint64_t v11 = type metadata accessor for REMRDLUserOperationDetail();
  uint64_t v12 = *(void *)(v11 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 104))(v6, v10, v11);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  sub_10021DB0C((void *)v9, 0, (uint64_t)v6);
  swift_bridgeObjectRelease();
  return sub_10003B6F8((uint64_t)v6, &qword_100791B78);
}

uint64_t sub_1005E8644()
{
  v1[13] = v0;
  sub_10003B754(&qword_100786F00);
  v1[14] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  v1[15] = v2;
  v1[16] = *(void *)(v2 - 8);
  v1[17] = swift_task_alloc();
  sub_10003B754(&qword_1007AAD88);
  v1[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for REMRemindersListDataView.FlatModel();
  v1[19] = v3;
  v1[20] = *(void *)(v3 - 8);
  v1[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[22] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[23] = v5;
  v1[24] = v4;
  return _swift_task_switch(sub_1005E87F4, v5, v4);
}

uint64_t sub_1005E87F4()
{
  if (qword_100785730 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 160);
  uint64_t v3 = *(void *)(v0 + 144);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = type metadata accessor for Logger();
  *(void *)(v0 + 200) = sub_100018BF8(v5, (uint64_t)qword_1007AA3D0);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v4 + OBJC_IVAR____TtC9Reminders32TTRIShowRecentlyDeletedPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(ObjectType, v6);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v8 = *(void *)(v0 + 144);
    swift_release();
    uint64_t v9 = (uint64_t *)&unk_1007AAD88;
    uint64_t v10 = v8;
LABEL_7:
    sub_10003B6F8(v10, v9);
    int v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v15, v16))
    {
      int v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "TTRIShowRecentlyDeletedPresenter: failed to fetch reminder count for dataModelSource", v17, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
    return v18(0);
  }
  uint64_t v11 = *(void *)(v0 + 120);
  uint64_t v12 = *(void *)(v0 + 128);
  uint64_t v13 = *(void *)(v0 + 112);
  (*(void (**)(void, void, void))(*(void *)(v0 + 160) + 32))(*(void *)(v0 + 168), *(void *)(v0 + 144), *(void *)(v0 + 152));
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v13, 1, v11) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 112);
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_release();
    uint64_t v9 = &qword_100786F00;
    uint64_t v10 = v14;
    goto LABEL_7;
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 136), *(void *)(v0 + 112), *(void *)(v0 + 120));
  uint64_t v20 = REMRemindersListDataView.CountByCompleted.completed.getter();
  uint64_t result = REMRemindersListDataView.CountByCompleted.incomplete.getter();
  if (__OFADD__(v20, result))
  {
    __break(1u);
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 104);
    uint64_t v22 = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter();
    uint64_t v24 = v23;
    *(void *)(v0 + 208) = v23;
    uint64_t v25 = static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)();
    uint64_t v27 = v26;
    *(void *)(v0 + 216) = v26;
    sub_10003B754(&qword_1007927F0);
    uint64_t v28 = swift_allocObject();
    *(void *)(v0 + 224) = v28;
    *(_OWORD *)(v28 + 16) = xmmword_10066C680;
    *(void *)(v28 + 32) = static TTRLocalizableStrings.Common.alertCancelButton.getter();
    *(void *)(v28 + 40) = v29;
    *(_WORD *)(v28 + 48) = 1;
    *(void *)(v28 + 56) = static TTRLocalizableStrings.Common.alertDeleteButton.getter();
    *(void *)(v28 + 64) = v30;
    *(_WORD *)(v28 + 72) = 258;
    *(void *)(v0 + 16) = v22;
    *(void *)(v0 + 24) = v24;
    *(void *)(v0 + 32) = v25;
    *(void *)(v0 + 40) = v27;
    *(void *)(v0 + 48) = v28;
    *(unsigned char *)(v0 + 56) = 3;
    uint64_t v31 = *(void *)(v21 + 96);
    uint64_t v32 = swift_getObjectType();
    uint64_t v33 = *(void *)(v31 + 8);
    uint64_t v35 = (uint64_t (*)(uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(v33 + 8) + **(int **)(v33 + 8));
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_1005E8C4C;
    return v35(v0 + 57, v0 + 16, &type metadata for Bool, v32, v33);
  }
  return result;
}

uint64_t sub_1005E8C4C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 240) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v5 = sub_1005E8EC4;
  }
  else {
    uint64_t v5 = sub_1005E8DE4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1005E8DE4()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = *(void *)(v0 + 152);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 136);
  uint64_t v6 = *(void *)(v0 + 120);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 57);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v7);
}

uint64_t sub_1005E8EC4()
{
  uint64_t v21 = v0;
  swift_release();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v18 = v0[19];
    uint64_t v19 = v0[21];
    uint64_t v16 = v0[17];
    uint64_t v17 = v0[20];
    uint64_t v14 = v0[16];
    uint64_t v15 = v0[15];
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = Error.rem_errorDescription.getter();
    v0[12] = sub_1000385A8(v4, v5, &v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "TTRIShowRecentlyDeletedPresenter: failed to present delete all alert {error: %s}", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v16, v15);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v19, v18);
  }
  else
  {
    uint64_t v7 = v0[20];
    uint64_t v6 = v0[21];
    uint64_t v8 = v0[19];
    uint64_t v10 = v0[16];
    uint64_t v9 = v0[17];
    uint64_t v11 = v0[15];

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12(0);
}

uint64_t sub_1005E9170()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1005E9180()
{
  sub_10019B470();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1005E91F4()
{
  return type metadata accessor for TTRIShowRecentlyDeletedPresenter();
}

uint64_t type metadata accessor for TTRIShowRecentlyDeletedPresenter()
{
  uint64_t result = qword_1007AA418;
  if (!qword_1007AA418) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005E9248()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1005E928C()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1005E9888(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1005E847C(a1, v4, v5);
}

uint64_t sub_1005E98FC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005E9934()
{
  return sub_1005E7AEC();
}

uint64_t sub_1005E993C()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005E997C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10000C2D4;
  v3[2] = v2;
  uint64_t v4 = (void *)swift_task_alloc();
  v3[3] = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_1005E7C98;
  return sub_1005E8644();
}

unint64_t sub_1005E9A50()
{
  unint64_t result = qword_1007AAD80;
  if (!qword_1007AAD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AAD80);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1005E9B40);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowRecentlyDeletedPresenter.ActionMenuCustomItem;
}

unint64_t sub_1005E9B7C()
{
  unint64_t result = qword_1007AAD90;
  if (!qword_1007AAD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AAD90);
  }
  return result;
}

uint64_t sub_1005E9BD8()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for UUID();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_1005E9C98, v0, 0);
}

uint64_t sub_1005E9C98()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  int v3 = (void *)v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v3[17];
  uint64_t v6 = v3[18];
  sub_100038D28(v3 + 14, v5);
  uint64_t v7 = (void *)v3[19];
  id v8 = [v7 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = UUID.uuidString.getter();
  uint64_t v11 = v10;
  uint64_t v12 = v4;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v13(v1, v12);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 8))(v9, v11, v5, v6);
  v0[6] = v14;
  swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v15 = (void *)swift_task_alloc();
    v0[7] = v15;
    *uint64_t v15 = v0;
    v15[1] = sub_1005E9F4C;
    uint64_t v16 = v0[2];
    v15[15] = v14;
    unsigned char v15[16] = v16;
    return _swift_task_switch(sub_1005EA1D0, v16, 0);
  }
  else
  {
    uint64_t v17 = v0[5];
    uint64_t v18 = v0[3];
    uint64_t v19 = self;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    id v20 = [v7 uuid:0xD000000000000025, 0x80000001006C0260];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = UUID.uuidString.getter();
    uint64_t v23 = v22;
    v13(v17, v18);
    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 internalErrorWithDebugDescription:v25];

    swift_willThrow();
    swift_task_dealloc();
    uint64_t v26 = (uint64_t (*)(void))v0[1];
    return v26();
  }
}

uint64_t sub_1005E9F4C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[8] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[2];
  if (v1)
  {
    uint64_t v6 = sub_1005EA144;
  }
  else
  {
    v4[9] = a1;
    uint64_t v6 = sub_1005EA088;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_1005EA088()
{
  uint64_t v1 = (void *)v0[6];
  uint64_t v2 = v0[2];
  uint64_t v3 = sub_1005EA78C(v0[9]);
  __int16 v5 = v4;

  uint64_t v6 = v5 & 0x101;
  *(void *)(v2 + 160) = v3;
  *(_WORD *)(v2 + 168) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v7(v3, v6);
}

uint64_t sub_1005EA144()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1005EA1B0(uint64_t a1)
{
  *(void *)(v2 + 120) = a1;
  *(void *)(v2 + 128) = v1;
  return _swift_task_switch(sub_1005EA1D0, v1, 0);
}

uint64_t sub_1005EA1D0()
{
  id v1 = [objc_allocWithZone((Class)ICDeviceListRequest) initWithAccount:v0[15]];
  v0[17] = v1;
  if (v1)
  {
    v0[2] = v0;
    v0[3] = sub_1005EA328;
    uint64_t v2 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1005EA66C;
    v0[13] = &unk_100752308;
    v0[14] = v2;
    [v1 fetchWithCompletionBlock:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    uint64_t v3 = (uint64_t (*)(void *))v0[1];
    return v3(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1005EA328()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 128);
  return _swift_task_switch(sub_1005EA41C, v1, 0);
}

id sub_1005EA41C()
{
  id v1 = [*(id *)(v0 + 136) devices];
  if (!v1)
  {

LABEL_17:
    id v20 = *(uint64_t (**)(void *))(v0 + 8);
    return (id)v20(_swiftEmptyArrayStorage);
  }
  uint64_t v2 = v1;
  sub_1005EA74C();
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_16;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
LABEL_16:
    uint64_t v19 = *(void **)(v0 + 136);
    swift_bridgeObjectRelease();

    goto LABEL_17;
  }
LABEL_4:
  id result = (id)sub_1004D3C2C(0, v4 & ~(v4 >> 63), 0);
  if (v4 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v21 = v0;
    while (1)
    {
      id v7 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v6 + 32);
      uint64_t v8 = v7;
      id result = [v7 name:v21];
      if (!result) {
        break;
      }
      uint64_t v9 = result;
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      unsigned __int8 v13 = [v8 upgradedToSydneyRomeKincaid];
      unsigned __int8 v14 = [v8 upgradableToSydneyRomeKincaid];

      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_1004D3C2C(v15 > 1, v16 + 1, 1);
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[3 * v16];
      v17[4] = v10;
      v17[5] = v12;
      *((unsigned char *)v17 + 48) = v13;
      *((unsigned char *)v17 + 49) = v14;
      if (v4 == v6)
      {
        uint64_t v0 = v21;
        uint64_t v18 = *(void **)(v21 + 136);
        swift_bridgeObjectRelease();

        goto LABEL_17;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1005EA66C(uint64_t a1)
{
  return _swift_continuation_resume(*(void *)(a1 + 32));
}

uint64_t sub_1005EA674()
{
  sub_100038CD8(v0 + 112);

  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1005EA6BC()
{
  return v0;
}

id sub_1005EA6C8()
{
  id v1 = *v0;
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 unsafeUntilSystemReady_icloudACAccountMatchingAccountIdentifier:v2];

  return v3;
}

uint64_t type metadata accessor for TTRListDetailDeviceInfoProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for TTRListDetailDeviceInfoProvider.DeviceInfoCache()
{
  return &type metadata for TTRListDetailDeviceInfoProvider.DeviceInfoCache;
}

unint64_t sub_1005EA74C()
{
  unint64_t result = qword_10078A9E8;
  if (!qword_10078A9E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078A9E8);
  }
  return result;
}

uint64_t sub_1005EA78C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    if (*(unsigned char *)(result + 48) == 1)
    {
      if (v1 == 1) {
        return result;
      }
      NSString v2 = (unsigned char *)(result + 72);
      uint64_t v3 = 1;
      do
      {
        uint64_t v4 = v3 + 1;
        if (__OFADD__(v3, 1))
        {
          __break(1u);
          goto LABEL_21;
        }
        if ((*v2 & 1) == 0) {
          goto LABEL_12;
        }
        ++v3;
        v2 += 24;
      }
      while (v4 != v1);
      if ((*(unsigned char *)(result + 49) & 1) == 0) {
        return result;
      }
    }
    else
    {
LABEL_12:
      if ((*(unsigned char *)(result + 49) & 1) == 0) {
        return result;
      }
    }
    if (v1 != 1)
    {
      uint64_t v5 = (unsigned char *)(result + 73);
      uint64_t v6 = 1;
      while (1)
      {
        uint64_t v7 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          break;
        }
        if (*v5 == 1)
        {
          ++v6;
          v5 += 24;
          if (v7 != v1) {
            continue;
          }
        }
        return result;
      }
LABEL_21:
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1005EA864(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRListDetailDeviceInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t assignWithTake for TTRListDetailDeviceInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

ValueMetadata *type metadata accessor for TTRListDetailDeviceInfo()
{
  return &type metadata for TTRListDetailDeviceInfo;
}

uint64_t TTRListDetailCreationEditor.__allocating_init(changeItem:smartListVersionWarningInteractor:undoManager:userDefaults:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(a4 + 32);
  uint64_t v11 = sub_100038E88(a4, v9);
  double v12 = __chkstk_darwin(v11);
  unsigned __int8 v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = sub_1005ED47C(a1, a2, a3, (uint64_t)v14, v8, v9, v10);
  sub_100038CD8(a4);
  return v16;
}

uint64_t sub_1005EAA78()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AAEA0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AAEA0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *TTRListDetailCreationEditor.undoManager.getter()
{
  uint64_t v1 = *(void **)(v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t TTRListDetailCreationEditor.filterEditingContext.getter@<X0>(void *a1@<X8>)
{
  a1[3] = *v1;
  a1[4] = &protocol witness table for TTRListDetailCreationEditor;
  *a1 = v1;
  return swift_retain();
}

void TTRListDetailCreationEditor.listTypeEditingContext.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = [*(id *)(v1[2] + 24) capabilities];
  unsigned int v5 = [v4 supportsGroceriesList];

  if (v5)
  {
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = &protocol witness table for TTRListDetailCreationEditor;
    swift_retain();
  }
  else
  {
    uint64_t v1 = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  *(void *)a1 = v1;
}

double TTRListDetailCreationEditor.sectionsEditingContext.getter@<D0>(uint64_t a1@<X8>)
{
  if (qword_100785738 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_1007AAEA0);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    unsigned int v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unsigned int v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRListDetailCreationEditor#sectionsEditingContext : Not implemented because not expected to be called", v5, 2u);
    swift_slowDealloc();
  }

  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t TTRListDetailCreationEditor.init(changeItem:smartListVersionWarningInteractor:undoManager:userDefaults:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(a4 + 24);
  uint64_t v10 = *(void *)(a4 + 32);
  uint64_t v11 = sub_100038E88(a4, v9);
  double v12 = __chkstk_darwin(v11);
  unsigned __int8 v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v15 + 16))(v14, v12);
  uint64_t v16 = sub_1005ED47C(a1, a2, a3, (uint64_t)v14, v4, v9, v10);
  sub_100038CD8(a4);
  return v16;
}

Swift::Void __swiftcall TTRListDetailCreationEditor.edit(name:)(Swift::String name)
{
  uint64_t v2 = v1;
  object = name._object;
  uint64_t countAndFlagsBits = name._countAndFlagsBits;
  unsigned int v5 = *(void **)(v1 + 16);
  swift_beginAccess();
  uint64_t v7 = v5[5];
  uint64_t v6 = (void *)v5[6];
  BOOL v8 = v7 == countAndFlagsBits && v6 == object;
  if (!v8 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v9 = qword_100785738;
    swift_bridgeObjectRetain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_1007AAEA0);
    swift_retain_n();
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412290;
      swift_beginAccess();
      uint64_t v18 = (void *)v5[4];
      id v14 = v18;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v17 = v18;
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Updating list name {listID: %@}", v13, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    v5[5] = countAndFlagsBits;
    v5[6] = object;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    if (*(void *)(v2 + 24))
    {
      uint64_t v15 = swift_allocObject();
      swift_weakInit();
      uint64_t v16 = (void *)swift_allocObject();
      v16[2] = v15;
      v16[3] = v7;
      v16[4] = v6;
      swift_retain();
      NSUndoManager.registerUndo(handler:)();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

uint64_t sub_1005EB124(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    v6._uint64_t countAndFlagsBits = a2;
    v6._object = a3;
    TTRListDetailCreationEditor.edit(name:)(v6);
    return swift_release();
  }
  return result;
}

void TTRListDetailCreationEditor.edit(color:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void **)(*(void *)(v1 + 16) + 56);
  swift_beginAccess();
  unsigned int v5 = *v4;
  if (!a1)
  {
    if (!v5) {
      return;
    }
    id v9 = v5;
    goto LABEL_7;
  }
  if (!v5
    || (sub_1000368FC(0, &qword_10079E6B8),
        id v6 = v5,
        id v7 = a1,
        char v8 = static NSObject.== infix(_:_:)(),
        v7,
        v6,
        (v8 & 1) == 0))
  {
LABEL_7:
    if (qword_100785738 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_1007AAEA0);
    id v11 = a1;
    id v12 = v5;
    id v13 = v11;
    id v6 = v12;
    id v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      os_log_type_t v30 = v15;
      uint64_t v31 = v2;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      if (v5)
      {
        id v17 = [v6 hexString];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v20 = v19;
      }
      else
      {
        unint64_t v20 = 0xE300000000000000;
        uint64_t v18 = 7104878;
      }
      uint64_t v29 = v4;
      sub_1000385A8(v18, v20, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      if (a1)
      {
        id v21 = [v13 hexString];
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v24 = v23;
      }
      else
      {
        unint64_t v24 = 0xE300000000000000;
        uint64_t v22 = 7104878;
      }
      sub_1000385A8(v22, v24, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v30, "Changing list color {from: %s, to: %s}", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v2 = v31;
      uint64_t v4 = v29;
    }
    else
    {
    }
    NSString v25 = *v4;
    *uint64_t v4 = a1;
    id v26 = v13;

    if (*(void *)(v2 + 24))
    {
      uint64_t v27 = swift_allocObject();
      swift_weakInit();
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v27;
      *(void *)(v28 + 24) = v5;
      id v6 = v6;
      swift_retain();
      NSUndoManager.registerUndo(handler:)();
      swift_release();
      swift_release();
    }
  }
}

Swift::Void __swiftcall TTRListDetailCreationEditor.edit(badgeEmblem:)(__C::REMListBadgeEmblem badgeEmblem)
{
  id v1 = [objc_allocWithZone((Class)REMListBadge) initWithEmblem:badgeEmblem._rawValue];
  TTRListDetailCreationEditor.edit(badge:)(v1);
}

void TTRListDetailCreationEditor.edit(badge:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  unsigned int v5 = (void **)(v4 + 64);
  swift_beginAccess();
  id v6 = *(void **)(v4 + 64);
  if (v6)
  {
    if (a1)
    {
      sub_1000368FC(0, &qword_10079E6B0);
      id v7 = v6;
      id v8 = a1;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
LABEL_15:

        return;
      }
    }
    else
    {
      id v10 = v6;
    }
LABEL_8:
    if (qword_100785738 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_1007AAEA0);
    id v12 = a1;
    id v13 = v6;
    id v14 = v12;
    id v7 = v13;
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v26 = v2;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_10003B754(&qword_1007AAEB8);
      uint64_t v18 = Optional.descriptionOrNil.getter();
      sub_1000385A8(v18, v19, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      unsigned int v5 = (void **)(v4 + 64);
      uint64_t v20 = Optional.descriptionOrNil.getter();
      sub_1000385A8(v20, v21, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Changing list badge {from: %s, to: %s}", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v26;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v22 = *v5;
    void *v5 = a1;
    id v23 = v14;

    if (*(void *)(v2 + 24))
    {
      uint64_t v24 = swift_allocObject();
      swift_weakInit();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = v6;
      id v7 = v7;
      swift_retain();
      NSUndoManager.registerUndo(handler:)();
      swift_release();
      swift_release();
    }
    goto LABEL_15;
  }
  if (a1) {
    goto LABEL_8;
  }
}

Swift::Void __swiftcall TTRListDetailCreationEditor.edit(badgeEmoji:)(Swift::String badgeEmoji)
{
  id v1 = objc_allocWithZone((Class)REMListBadge);
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v3 = [v1 initWithEmoji:v2];

  TTRListDetailCreationEditor.edit(badge:)(v3);
}

void TTRListDetailCreationEditor.edit(filter:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  unsigned int v5 = (void **)(v4 + 72);
  swift_beginAccess();
  id v6 = *(void **)(v4 + 72);
  if (v6)
  {
    if (a1)
    {
      type metadata accessor for REMCustomSmartListFilterDescriptor();
      id v7 = v6;
      id v8 = a1;
      char v9 = static NSObject.== infix(_:_:)();

      if (v9)
      {
LABEL_15:

        return;
      }
    }
    else
    {
      id v10 = v6;
    }
LABEL_8:
    if (qword_100785738 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_1007AAEA0);
    id v12 = a1;
    id v13 = v6;
    id v14 = v12;
    id v7 = v13;
    os_log_type_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v26 = v2;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_10003B754(&qword_100789A50);
      uint64_t v18 = Optional.descriptionOrNil.getter();
      sub_1000385A8(v18, v19, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2080;
      unsigned int v5 = (void **)(v4 + 72);
      uint64_t v20 = Optional.descriptionOrNil.getter();
      sub_1000385A8(v20, v21, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "Changing smart list filter {from: %s, to: %s}", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v26;
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v22 = *v5;
    void *v5 = a1;
    id v23 = v14;

    if (*(void *)(v2 + 24))
    {
      uint64_t v24 = swift_allocObject();
      swift_weakInit();
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = v24;
      *(void *)(v25 + 24) = v6;
      id v7 = v7;
      swift_retain();
      NSUndoManager.registerUndo(handler:)();
      swift_release();
      swift_release();
    }
    goto LABEL_15;
  }
  if (a1) {
    goto LABEL_8;
  }
}

uint64_t sub_1005EBCE0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3(a2);
    return swift_release();
  }
  return result;
}

uint64_t TTRListDetailCreationEditor.edit(listType:)(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (unsigned __int8 *)(*(void *)(v2 + 16) + 80);
  uint64_t result = swift_beginAccess();
  int v6 = *v4;
  if (v6 != a1)
  {
    *uint64_t v4 = a1;
    if (*(void *)(v2 + 24))
    {
      uint64_t v7 = swift_allocObject();
      swift_weakInit();
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v7;
      *(unsigned char *)(v8 + 24) = v6;
      swift_retain();
      NSUndoManager.registerUndo(handler:)();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1005EBE34(uint64_t a1, unsigned __int8 a2)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = *(void *)(result + 16);
    swift_beginAccess();
    int v6 = *(unsigned __int8 *)(v5 + 80);
    if (v6 != a2)
    {
      *(unsigned char *)(v5 + 80) = a2;
      if (*(void *)(v4 + 24))
      {
        uint64_t v7 = swift_allocObject();
        swift_weakInit();
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = v7;
        *(unsigned char *)(v8 + 24) = v6;
        swift_retain();
        NSUndoManager.registerUndo(handler:)();
        swift_release();
        swift_release();
      }
    }
    return swift_release();
  }
  return result;
}

id TTRListDetailCreationEditor.listDetailSave(completion:)(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v123 = a2;
  uint64_t v122 = a1;
  uint64_t v124 = *v2;
  uint64_t v4 = type metadata accessor for Locale();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  char v9 = (char *)v112 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3[2];
  uint64_t v11 = *(void **)(v10 + 16);
  swift_beginAccess();
  id v12 = *(void **)(v10 + 72);
  id v121 = v11;
  if (v12)
  {
    id v13 = v3;
    id v14 = v9;
    swift_beginAccess();
    uint64_t v15 = *(void *)(v10 + 24);
    os_log_type_t v16 = *(void **)(v10 + 32);
    id v17 = v11;
    id v118 = v16;
    id v18 = v12;
    id v19 = [v17 updateAccount:v15];
    swift_beginAccess();
    swift_bridgeObjectRetain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v117 = v19;
    id v21 = [v17 addCustomSmartListWithName:v20 toAccountChangeItem:v19 smartListObjectID:0];

    id v22 = [v21 customContext];
    if (v22)
    {
      id v23 = v22;
      swift_beginAccess();
      [v23 setColor:*(void *)(v10 + 56)];
      swift_beginAccess();
      [v23 setBadge:*(void *)(v10 + 64)];
      id v24 = v18;
      REMSmartListCustomContextChangeItem.filter.setter();
    }
    id v114 = [v21 objectID];
    uint64_t v25 = v21;
    id v116 = v21;
    uint64_t v26 = v13;
    sub_1000145EC((uint64_t)(v13 + 4), (uint64_t)aBlock);
    id v115 = v18;
    uint64_t v27 = v126;
    uint64_t v28 = v127;
    sub_100038D28(aBlock, (uint64_t)v126);
    id v29 = [v25 objectID];
    id v30 = v118;
    (*((void (**)(id, id, void *, void (*)(uint64_t)))v28 + 3))(v118, v29, v27, v28);

    sub_100038CD8((uint64_t)aBlock);
    type metadata accessor for REMAnalyticsManager();
    static REMAnalyticsManager.shared.getter();
    uint64_t v31 = sub_10003B754(&qword_1007AAEC0);
    uint64_t v32 = &v14[*(int *)(v31 + 48)];
    uint64_t v33 = (uint64_t *)&v14[*(int *)(v31 + 80)];
    uint64_t v34 = enum case for REMRemindersCreateListUserOperation.customSmartList(_:);
    uint64_t ListUserOperation = type metadata accessor for REMRemindersCreateListUserOperation();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(ListUserOperation - 8) + 104))(v14, v34, ListUserOperation);
    swift_beginAccess();
    uint64_t v37 = v26[12];
    uint64_t v36 = v26[13];
    sub_100038D28(v26 + 9, v37);
    *(void *)uint64_t v32 = (*(uint64_t (**)(uint64_t))(*(void *)(v36 + 8) + 8))(v37);
    *((void *)v32 + 1) = v38;
    uint64_t v40 = v26[12];
    uint64_t v39 = v26[13];
    sub_100038D28(v26 + 9, v40);
    (*(void (**)(uint64_t))(*(void *)(v39 + 8) + 32))(v40);
    swift_endAccess();
    *uint64_t v33 = _typeName(_:qualified:)();
    v33[1] = v41;
    id v42 = v114;
    uint64_t v43 = v119;
    uint64_t v44 = v120;
    (*(void (**)(char *, void, uint64_t))(v119 + 104))(v14, enum case for REMAnalyticsEvent.createListUserOperation(_:), v120);
    REMAnalyticsManager.post(event:)();

    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
    goto LABEL_22;
  }
  uint64_t v45 = *(void *)(v10 + 24);
  id v46 = v11;
  id v47 = [v46 updateAccount:v45];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  NSString v48 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v118 = v47;
  id v49 = [v46 addListWithName:v48 toAccountChangeItem:v47];

  swift_beginAccess();
  BOOL v50 = *(unsigned char *)(v10 + 80) == 1;
  id v117 = v49;
  if (v50)
  {
    id v51 = [v49 groceryContextChangeItem];
    if (v51)
    {
      uint64_t v52 = v51;
      [v51 setShouldCategorizeGroceryItems:1];
      id v53 = [self daemonUserDefaults];
      id v54 = [v53 preferredLocalizations];

      if (v54)
      {
        uint64_t v55 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (*(void *)(v55 + 16))
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
LABEL_14:
          NSString v69 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v52 setGroceryLocaleID:v69];

          if (qword_100785738 != -1) {
            swift_once();
          }
          id v116 = v52;
          uint64_t v70 = type metadata accessor for Logger();
          sub_100018BF8(v70, (uint64_t)qword_1007AAEA0);
          uint64_t v71 = Logger.logObject.getter();
          os_log_type_t v72 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v71, v72))
          {
            uint64_t v73 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v73 = 0;
            _os_log_impl((void *)&_mh_execute_header, v71, v72, "TTRUserDefault hasCreatedGroceryList set to true after creating a new grocery list", v73, 2u);
            swift_slowDealloc();
          }

          swift_beginAccess();
          uint64_t v74 = v3[12];
          uint64_t v75 = v3[13];
          sub_100038E88((uint64_t)(v3 + 9), v74);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 24))(1, v74, v75);
          swift_endAccess();
          id v115 = (id)type metadata accessor for REMAnalyticsManager();
          uint64_t v113 = (char *)static REMAnalyticsManager.shared.getter();
          uint64_t v76 = sub_10003B754(&qword_100791F78);
          uint64_t v77 = &v9[*(int *)(v76 + 48)];
          uint64_t v78 = (uint64_t *)&v9[*(int *)(v76 + 80)];
          uint64_t v79 = enum case for REMUserOperation.createGroceryList(_:);
          uint64_t v80 = type metadata accessor for REMUserOperation();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 104))(v9, v79, v80);
          swift_beginAccess();
          uint64_t v82 = v3[12];
          uint64_t v81 = v3[13];
          sub_100038D28(v3 + 9, v82);
          *(void *)uint64_t v77 = (*(uint64_t (**)(uint64_t))(*(void *)(v81 + 8) + 8))(v82);
          *((void *)v77 + 1) = v83;
          uint64_t v85 = v3[12];
          uint64_t v84 = v3[13];
          sub_100038D28(v3 + 9, v85);
          (*(void (**)(uint64_t))(*(void *)(v84 + 8) + 32))(v85);
          swift_endAccess();
          *uint64_t v78 = _typeName(_:qualified:)();
          v78[1] = v86;
          uint64_t v87 = v119;
          id v114 = *(id *)(v119 + 104);
          uint64_t v88 = v120;
          ((void (*)(char *, void, uint64_t))v114)(v9, enum case for REMAnalyticsEvent.userOperation(_:), v120);
          REMAnalyticsManager.post(event:)();
          swift_release();
          uint64_t v119 = *(void *)(v87 + 8);
          ((void (*)(char *, uint64_t))v119)(v9, v88);
          id v115 = (id)static REMAnalyticsManager.shared.getter();
          uint64_t v89 = (int *)sub_10003B754(&qword_1007AAEC0);
          uint64_t v90 = &v9[v89[12]];
          v112[1] = &v9[v89[16]];
          uint64_t v113 = &v9[v89[20]];
          uint64_t v91 = enum case for REMRemindersCreateListUserOperation.groceryList(_:);
          uint64_t v92 = type metadata accessor for REMRemindersCreateListUserOperation();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v9, v91, v92);
          swift_beginAccess();
          uint64_t v94 = v3[12];
          uint64_t v93 = v3[13];
          sub_100038D28(v3 + 9, v94);
          *(void *)uint64_t v90 = (*(uint64_t (**)(uint64_t))(*(void *)(v93 + 8) + 8))(v94);
          *((void *)v90 + 1) = v95;
          uint64_t v97 = v3[12];
          uint64_t v96 = v3[13];
          sub_100038D28(v3 + 9, v97);
          (*(void (**)(uint64_t))(*(void *)(v96 + 8) + 32))(v97);
          swift_endAccess();
          uint64_t v98 = _typeName(_:qualified:)();
          uint64_t v99 = v113;
          *(void *)uint64_t v113 = v98;
          *((void *)v99 + 1) = v100;
          ((void (*)(char *, void, uint64_t))v114)(v9, enum case for REMAnalyticsEvent.createListUserOperation(_:), v88);
          REMAnalyticsManager.post(event:)();

          swift_release();
          ((void (*)(char *, uint64_t))v119)(v9, v88);
          goto LABEL_19;
        }
        swift_bridgeObjectRelease();
      }
      static Locale.current.getter();
      Locale.identifier.getter();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      goto LABEL_14;
    }
  }
  type metadata accessor for REMAnalyticsManager();
  static REMAnalyticsManager.shared.getter();
  uint64_t v56 = sub_10003B754(&qword_1007AAEC0);
  uint64_t v57 = &v9[*(int *)(v56 + 48)];
  uint64_t v58 = (uint64_t *)&v9[*(int *)(v56 + 80)];
  uint64_t v59 = enum case for REMRemindersCreateListUserOperation.list(_:);
  uint64_t v60 = type metadata accessor for REMRemindersCreateListUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v60 - 8) + 104))(v9, v59, v60);
  swift_beginAccess();
  uint64_t v62 = v3[12];
  uint64_t v61 = v3[13];
  sub_100038D28(v3 + 9, v62);
  *(void *)uint64_t v57 = (*(uint64_t (**)(uint64_t))(*(void *)(v61 + 8) + 8))(v62);
  *((void *)v57 + 1) = v63;
  uint64_t v65 = v3[12];
  uint64_t v64 = v3[13];
  sub_100038D28(v3 + 9, v65);
  (*(void (**)(uint64_t))(*(void *)(v64 + 8) + 32))(v65);
  swift_endAccess();
  *uint64_t v58 = _typeName(_:qualified:)();
  v58[1] = v66;
  uint64_t v67 = v119;
  uint64_t v68 = v120;
  (*(void (**)(char *, void, uint64_t))(v119 + 104))(v9, enum case for REMAnalyticsEvent.createListUserOperation(_:), v120);
  REMAnalyticsManager.post(event:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v9, v68);
LABEL_19:
  swift_beginAccess();
  id v101 = v117;
  [v117 setColor:*(void *)(v10 + 56)];
  id v102 = [v101 appearanceContext];
  if (v102)
  {
    uint64_t v103 = v102;
    swift_beginAccess();
    id v104 = *(id *)(v10 + 64);
    [v103 setBadge:v104];
  }
  id v42 = [v101 objectID];

LABEL_22:
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  long long v105 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v106 = swift_allocObject();
  uint64_t v107 = v122;
  uint64_t v108 = v123;
  *(void *)(v106 + 16) = v122;
  *(void *)(v106 + 24) = v108;
  uint64_t v127 = sub_1005ED6CC;
  uint64_t v128 = v106;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009ADC;
  uint64_t v126 = &unk_1007524C0;
  id v109 = _Block_copy(aBlock);
  sub_10006C140(v107);
  swift_release();
  id v110 = v121;
  [v121 saveWithQueue:v105 completion:v109];

  _Block_release(v109);
  return v42;
}

void sub_1005ECDF0(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1)
  {
    if (qword_100785738 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_1007AAEA0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = Error.localizedDescription.getter();
      sub_1000385A8(v7, v8, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error saving list: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a2) {
        return;
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      if (!a2) {
        return;
      }
    }
    goto LABEL_12;
  }
  if (qword_100785738 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_1007AAEA0);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "List saved!", v13, 2u);
    swift_slowDealloc();
  }

  if (a2) {
LABEL_12:
  }
    a2(v9);
}

uint64_t TTRListDetailCreationEditor.deinit()
{
  swift_release();

  sub_100038CD8(v0 + 32);
  sub_100038CD8(v0 + 72);
  return v0;
}

uint64_t TTRListDetailCreationEditor.__deallocating_deinit()
{
  swift_release();

  sub_100038CD8(v0 + 32);
  sub_100038CD8(v0 + 72);

  return swift_deallocClassInstance();
}

uint64_t sub_1005ED11C()
{
  return swift_retain();
}

void *sub_1005ED128()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 24);
  id v2 = v1;
  return v1;
}

uint64_t sub_1005ED154@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
  return swift_retain();
}

uint64_t sub_1005ED164@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *v2;
  a2[3] = a1;
  a2[4] = &protocol witness table for TTRListDetailCreationEditor;
  *a2 = v3;
  return swift_retain();
}

void sub_1005ED180(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  id v6 = [*(id *)(*(void *)(v5 + 16) + 24) capabilities];
  unsigned int v7 = [v6 supportsGroceriesList];

  if (v7)
  {
    *(void *)(a2 + 24) = a1;
    *(void *)(a2 + 32) = &protocol witness table for TTRListDetailCreationEditor;
    swift_retain();
  }
  else
  {
    uint64_t v5 = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 8) = 0u;
  }
  *(void *)a2 = v5;
}

void sub_1005ED21C(uint64_t a1, uint64_t a2)
{
}

void sub_1005ED240(void *a1)
{
}

void sub_1005ED264(uint64_t a1)
{
  id v1 = [objc_allocWithZone((Class)REMListBadge) initWithEmblem:a1];
  TTRListDetailCreationEditor.edit(badge:)(v1);
}

void sub_1005ED2C8()
{
  id v0 = objc_allocWithZone((Class)REMListBadge);
  swift_bridgeObjectRetain();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v2 = [v0 initWithEmoji:v1];

  TTRListDetailCreationEditor.edit(badge:)(v2);
}

id sub_1005ED368(uint64_t a1, uint64_t a2)
{
  return TTRListDetailCreationEditor.listDetailSave(completion:)(a1, a2);
}

void sub_1005ED38C(void *a1)
{
}

uint64_t sub_1005ED3B0(unsigned __int8 a1)
{
  return TTRListDetailCreationEditor.edit(listType:)(a1);
}

uint64_t sub_1005ED3D4()
{
  return TTRUserDefaults.hasCreatedGroceryList.getter() & 1;
}

uint64_t sub_1005ED3FC()
{
  return TTRUserDefaults.hasCreatedGroceryList.setter();
}

void (*sub_1005ED420(void *a1))(void *a1)
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTRUserDefaults.hasCreatedGroceryList.modify();
  return sub_1001157EC;
}

uint64_t sub_1005ED47C(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v16 = a6;
  uint64_t v17 = a7;
  id v13 = sub_1000394A8((uint64_t *)&v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(v13, a4, a6);
  *(void *)(a5 + 16) = a1;
  sub_100038ED8(a2, a5 + 32);
  *(void *)(a5 + 24) = a3;
  sub_100038ED8(&v15, a5 + 72);
  return a5;
}

uint64_t sub_1005ED528()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005ED560()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005ED5A0()
{
  return sub_1005EB124(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1005ED5B0()
{
  return sub_1005EBCE0(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))TTRListDetailCreationEditor.edit(color:));
}

uint64_t sub_1005ED5E4()
{
  return sub_1005EBCE0(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))TTRListDetailCreationEditor.edit(badge:));
}

uint64_t sub_1005ED618()
{
  return sub_1005EBCE0(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))TTRListDetailCreationEditor.edit(filter:));
}

uint64_t sub_1005ED648()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1005ED680()
{
  return sub_1005EBE34(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1005ED68C()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1005ED6CC(uint64_t a1)
{
  sub_1005ECDF0(a1, *(void (**)(uint64_t))(v1 + 16));
}

unint64_t sub_1005ED6D8()
{
  unint64_t result = qword_1007AAEE8;
  if (!qword_1007AAEE8)
  {
    type metadata accessor for TTRListDetailCreationChangeItem();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AAEE8);
  }
  return result;
}

uint64_t type metadata accessor for TTRListDetailCreationEditor()
{
  return self;
}

uint64_t sub_1005ED75C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AB008);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AB008);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1005ED824()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  uint64_t v3 = self;
  uint64_t v4 = v0;
  id v5 = [v3 traitCollectionWithUserInterfaceStyle:1];
  id v6 = [self secondaryLabelColor];
  id v7 = [v6 resolvedColorWithTraitCollection:v5];

  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  static UIFont.roundedSystemFont(ofSize:weight:)();
  type metadata accessor for TTRRemindersPrintingPageRenderingUtilities();
  swift_allocObject();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_renderingUtils] = TTRRemindersPrintingPageRenderingUtilities.init(footerText:footerFont:footerTextColor:isFlipped:isRightToLeft:)();
  id v8 = v7;

  v11.receiver = v4;
  v11.super_class = ObjectType;
  id v9 = [super init];

  return v9;
}

void sub_1005ED9E8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (qword_100785740 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_1007AB008);
  id v3 = v0;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  id v6 = &selRef_loadDataWithTypeIdentifier_forItemProviderCompletionHandler_;
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    [v3 paperRect];
    type metadata accessor for CGRect(0);
    uint64_t v8 = String.init<A>(describing:)();
    sub_1000385A8(v8, v9, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    [v3 printableRect];
    uint64_t v10 = String.init<A>(describing:)();
    sub_1000385A8(v10, v11, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    id v6 = &selRef_loadDataWithTypeIdentifier_forItemProviderCompletionHandler_;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRIReminderPrintPageRenderer: computing number of pages {paperRect: %s, printableRect: %s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v12 = [v3 printFormatters];
  if (!v12) {
    goto LABEL_16;
  }
  id v13 = v12;
  sub_1000368FC(0, &qword_1007AB058);
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v14 >> 62))
  {
    if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_9;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v18)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor();
    uint64_t v16 = 0;
LABEL_17:
    [v3 v6[129]];
    CGRectGetHeight(v24);
    [v3 printableRect];
    CGRectGetMaxY(v25);
    type metadata accessor for TTRRemindersPrintingPageRenderingUtilities();
    static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)();
    double v20 = v19;
    TTRRemindersPrintingPageRenderingUtilities.footerHeight.getter();
    [v3 setFooterHeight:v20 + v21];
    v23.receiver = v3;
    v23.super_class = ObjectType;
    [super numberOfPages];

    return;
  }
LABEL_9:
  if ((v14 & 0xC000000000000001) != 0)
  {
    id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
    uint64_t v16 = v15;
    swift_bridgeObjectRelease();
    double v17 = *(double *)TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor();
    if (v16) {
      [v16 setPerPageContentInsets:v17, v17, v17, v17];
    }
    goto LABEL_17;
  }
  if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v15 = *(id *)(v14 + 32);
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_1005EDEBC(uint64_t a1, double a2, double a3, double a4, double a5)
{
  TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor();
  type metadata accessor for TTRRemindersPrintingPageRenderingUtilities();
  [v5 printableRect];
  CGRectGetMinX(v15);
  static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)();
  double v12 = v11;
  [v5 paperRect];
  CGRectGetWidth(v16);
  [v5 printableRect];
  CGRectGetMaxX(v17);
  uint64_t result = static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)();
  if (__OFADD__(a1, 1))
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = *(void *)&v5[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange];
    if (v5[OBJC_IVAR____TtC9Reminders29TTRIReminderPrintPageRenderer_pageRange + 16]) {
      uint64_t v14 = 0;
    }
    if (!__OFSUB__(a1 + 1, v14))
    {
      sub_10004980C(a2, a3, a4, a5, 0.0, v12);
      return TTRRemindersPrintingPageRenderingUtilities.drawFooter(pageNumber:pageCount:in:)();
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRIReminderPrintPageRenderer()
{
  return self;
}

_UNKNOWN **sub_1005EE0E8()
{
  return &off_100734CD0;
}

uint64_t sub_1005EE0F8()
{
  sub_10019B470();

  return swift_deallocClassInstance();
}

uint64_t sub_1005EE14C()
{
  return type metadata accessor for TTRIShowCompletedPresenter();
}

uint64_t type metadata accessor for TTRIShowCompletedPresenter()
{
  uint64_t result = qword_1007AB088;
  if (!qword_1007AB088) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1005EE1A0()
{
  return swift_updateClassMetadata2();
}

void sub_1005EE1D8(void *a1)
{
}

void sub_1005EE218(void *a1)
{
}

void sub_1005EE258(void *a1)
{
}

void sub_1005EE298(void *a1)
{
}

void sub_1005EE2D8(void *a1)
{
}

void sub_1005EE318(void *a1)
{
}

void sub_1005EE358(void *a1)
{
}

void sub_1005EE398(void *a1)
{
}

void sub_1005EE3D8(void *a1)
{
}

void sub_1005EE418(void *a1)
{
}

void sub_1005EE458(void *a1)
{
}

void sub_1005EE498(void *a1)
{
}

void sub_1005EE4D8(void *a1)
{
}

void sub_1005EE518(void *a1)
{
}

void sub_1005EE558(void *a1)
{
}

void sub_1005EE598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  void v10[3] = a5;
  v10[4] = a6;
  swift_retain();
  id v11 = a6;
  swift_retain();
  TTRModuleState.readyPromise.getter();
  swift_release();
  double v12 = (void *)swift_allocObject();
  v12[2] = a1;
  void v12[3] = sub_1005FB2E8;
  v12[4] = v10;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1005FB344;
  *(void *)(v13 + 24) = v12;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

void sub_1005EE6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  void v10[3] = a5;
  v10[4] = a6;
  swift_retain();
  id v11 = a6;
  swift_retain();
  TTRModuleState.readyPromise.getter();
  swift_release();
  double v12 = (void *)swift_allocObject();
  v12[2] = a1;
  void v12[3] = sub_1005FB498;
  v12[4] = v10;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1005FCC98;
  *(void *)(v13 + 24) = v12;
  swift_unknownObjectRetain();
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

void sub_1005EE850(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100018BF8(v14, (uint64_t)qword_1007AB9C0);
  CGRect v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    CGRect v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGRect v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "SCROLLVIEW TEST START", v17, 2u);
    swift_slowDealloc();
  }

  a5(0);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  double v19 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v20 = [objc_allocWithZone((Class)UIScrollTestParameters) init];
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setTestName:v21];

  [v20 setDelta:18.0];
  [v20 setIterations:1];
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a2;
  *(void *)(v22 + 24) = a3;
  v25[4] = a7;
  v25[5] = v22;
  v25[0] = _NSConcreteStackBlock;
  v25[1] = 1107296256;
  void v25[2] = sub_1005EEF84;
  v25[3] = a8;
  objc_super v23 = _Block_copy(v25);
  id v24 = v20;
  swift_retain();
  swift_release();
  [a1 _performScrollTestWithParameters:v24 completionBlock:v23];

  _Block_release(v23);
}

void sub_1005EEAAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100018BF8(v14, (uint64_t)qword_1007AB9C0);
  CGRect v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    CGRect v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGRect v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "SCROLLVIEW TEST START", v17, 2u);
    swift_slowDealloc();
  }

  a5(0);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  double v19 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  id v20 = [objc_allocWithZone((Class)UIScrollTestParameters) init];
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setTestName:v21];

  [v20 setDelta:18.0];
  [v20 setIterations:1];
  [a1 contentSize];
  double v23 = v22 * 0.25;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a2;
  *(void *)(v24 + 24) = a3;
  id v25 = objc_allocWithZone((Class)RPTScrollViewTestParameters);
  id v26 = a1;
  swift_retain();
  NSString v27 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v32[4] = a7;
  v32[5] = v24;
  v32[0] = _NSConcreteStackBlock;
  v32[1] = 1107296256;
  v32[2] = sub_10000AD88;
  v32[3] = a8;
  uint64_t v28 = _Block_copy(v32);
  swift_release();
  id v29 = [v25 initWithTestName:v27 scrollView:v26 completionHandler:v28];

  _Block_release(v28);
  [v29 setScrollingContentLength:v23];
  id v30 = self;
  id v31 = v29;
  [v30 runTestWithParameters:v31];
}

uint64_t sub_1005EED9C(uint64_t (*a1)(void))
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_1007AB9C0);
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "SCROLLVIEW TEST END", v5, 2u);
    swift_slowDealloc();
  }

  return a1();
}

uint64_t sub_1005EEE90(uint64_t a1, uint64_t (*a2)(void))
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100018BF8(v3, (uint64_t)qword_1007AB9C0);
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "SCROLLVIEW TEST END", v6, 2u);
    swift_slowDealloc();
  }

  return a2();
}

uint64_t sub_1005EEF84(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2) {
    uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v3 = 0;
  }
  swift_retain();
  v2(v3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1005EF014(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t), uint64_t a4, void (*a5)(void))
{
  a5(0);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v8 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v9];

  uint64_t v10 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v13 = v12;

  sub_1005EF104(v11, v13);
  uint64_t v14 = swift_bridgeObjectRelease();
  return a3(v14);
}

void sub_1005EF104(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (void *)_convertErrorToNSError(_:)();
  id v11 = [v10 userInfo];
  uint64_t v12 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  if (!*(void *)(v12 + 16) || (unint64_t v15 = sub_100009B88(v13, v14), (v16 & 1) == 0))
  {
    long long v49 = 0u;
    long long v50 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  sub_100038DC0(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v50 + 1))
  {
LABEL_7:
    sub_10003B6F8((uint64_t)&v49, &qword_100788D60);
    goto LABEL_8;
  }
  if (swift_dynamicCast())
  {
    CGRect v17 = v52;
    uint64_t v46 = v6;
    uint64_t v47 = (uint64_t)v51;
    id v18 = [v10 domain];
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v20 = a2;
    NSString v21 = v9;
    uint64_t v22 = v7;
    uint64_t v23 = a1;
    uint64_t v24 = v10;
    uint64_t v26 = v25;

    *(void *)&long long v49 = v19;
    *((void *)&v49 + 1) = v26;
    uint64_t v10 = v24;
    a1 = v23;
    uint64_t v7 = v22;
    NSString v9 = v21;
    a2 = v20;
    v27._uint64_t countAndFlagsBits = 91;
    v27._object = (void *)0xE100000000000000;
    String.append(_:)(v27);
    id v51 = [v10 code];
    v28._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v28);
    swift_bridgeObjectRelease();
    v29._uint64_t countAndFlagsBits = 539828317;
    v29._object = (void *)0xE400000000000000;
    String.append(_:)(v29);
    uint64_t v6 = v46;
    v30._uint64_t countAndFlagsBits = v47;
    v30._object = v17;
    String.append(_:)(v30);
    swift_bridgeObjectRelease();
    uint64_t v32 = (void *)*((void *)&v49 + 1);
    uint64_t v31 = v49;
    goto LABEL_9;
  }
LABEL_8:
  swift_getErrorValue();
  uint64_t v31 = Error.localizedDescription.getter();
LABEL_9:
  id v51 = (id)v31;
  uint64_t v52 = v32;
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v33 = sub_100018BF8(v6, (uint64_t)qword_1007AB9C0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v33, v6);
  uint64_t v34 = v9;
  unint64_t v35 = (unint64_t)v52;
  uint64_t v47 = (uint64_t)v51;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v36 = Logger.logObject.getter();
  os_log_type_t v37 = static os_log_type_t.error.getter();
  if (!os_log_type_enabled(v36, v37))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v34, v6);
    if (!a2)
    {
      NSString v39 = 0;
      goto LABEL_16;
    }
LABEL_15:
    NSString v39 = String._bridgeToObjectiveC()();
LABEL_16:
    swift_beginAccess();
    NSString v40 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v3 failedTest:v39 withFailure:v40];

    return;
  }
  id v42 = v34;
  uint64_t v43 = v7;
  uint64_t v45 = v3;
  uint64_t v46 = v6;
  uint64_t v44 = v10;
  uint64_t v38 = swift_slowAlloc();
  *(void *)&long long v49 = swift_slowAlloc();
  *(_DWORD *)uint64_t v38 = 136446466;
  if (a2)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1000385A8(a1, a2, (uint64_t *)&v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v38 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1000385A8(v47, v35, (uint64_t *)&v49);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Test failed {name: %{public}s, error: %{public}s}", (uint8_t *)v38, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v46);
    uint64_t v10 = v44;
    uint64_t v3 = v45;
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  __break(1u);
}

uint64_t sub_1005EF660@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  a5(0);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  aBlock[4] = a6;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AD88;
  void aBlock[3] = a7;
  CGRect v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [a2 finishedTest:v15 waitForCommit:0 extraResults:0 withTeardownBlock:v17];
  _Block_release(v17);

  return sub_1000145EC(a1, a8);
}

uint64_t sub_1005EF7B0(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  a3(0);
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  os_log_type_t v4 = NSStringFromClass(ObjCClassFromMetadata);
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  sub_1005EF104(v5, v7);

  return swift_bridgeObjectRelease();
}

void sub_1005EF838(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for PPTTask_CreateReminder();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v9 = a2;
  swift_retain();
  uint64_t v10 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 startedTest:v11];

  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_100038D28(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v12, v13);
  id v14 = UIKeyboardPrivateDidShowNotification;
  NSString v15 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  sub_100422BFC((uint64_t)_swiftEmptyArrayStorage);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  v21[4] = sub_10003F248;
  v21[5] = v19;
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 1107296256;
  void v21[2] = sub_10000AD88;
  v21[3] = &unk_100754268;
  unint64_t v20 = _Block_copy(v21);
  swift_retain();
  swift_release();
  [v9 finishedTest:v16 extraResults:isa waitForNotification:v18 withTeardownBlock:v20];
  _Block_release(v20);

  swift_release();
}

void sub_1005EFAB4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v7 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PPTTask_ModifyReminder();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v11 = a2;
  uint64_t v35 = a4;
  swift_retain();
  uint64_t v12 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = v11;
  [v11 startedTest:v13];

  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_100038D28(a1, v14);
  UUID.init(uuidString:)();
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16) == 1)
  {
    swift_release();
    id v30 = v33;

    __break(1u);
  }
  else
  {
    NSString v18 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    id v20 = [v18 objectIDWithUUID:isa];

    (*(void (**)(id, uint64_t, uint64_t))(v15 + 80))(v20, v14, v15);
    swift_release();

    id v21 = UIKeyboardPrivateDidShowNotification;
    uint64_t v22 = NSStringFromClass(ObjCClassFromMetadata);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v23 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_100422BFC((uint64_t)_swiftEmptyArrayStorage);
    Class v24 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v35;
    *(void *)(v26 + 16) = v32;
    *(void *)(v26 + 24) = v27;
    aBlock[4] = sub_10003F248;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10000AD88;
    void aBlock[3] = &unk_1007543F8;
    Swift::String v28 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    id v29 = v33;
    [v33 finishedTest:v23 extraResults:v24 waitForNotification:v25 withTeardownBlock:v28];
    _Block_release(v28);
    swift_release();
  }
}

void sub_1005EFE8C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (void *)swift_allocObject();
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  type metadata accessor for PPTTask_MarkAsCompleted();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v13 = a2;
  swift_retain();
  uint64_t v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v27 = v13;
  [v13 startedTest:v15];

  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  sub_100038D28(a1, v16);
  UUID.init(uuidString:)();
  uint64_t v18 = type metadata accessor for UUID();
  uint64_t v19 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v10, 1, v18) == 1)
  {

    __break(1u);
  }
  else
  {
    id v20 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v10, v18);
    id v22 = [v20 objectIDWithUUID:isa];

    (*(void (**)(id, uint64_t, uint64_t))(v17 + 128))(v22, v16, v17);
    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = sub_1005FC974;
    *(void *)(v23 + 24) = v11;
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = sub_1005FC980;
    *(void *)(v24 + 24) = v23;
    swift_retain();
    NSString v25 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_1005F01AC(uint64_t a1, void *a2, void *a3, void (*a4)(uint64_t), uint64_t a5)
{
  if (a1)
  {
    type metadata accessor for PPTTask_MarkAsCompleted();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    swift_errorRetain();
    uint64_t v9 = NSStringFromClass(ObjCClassFromMetadata);
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    sub_1005EF104(v10, v12);
    uint64_t v13 = swift_bridgeObjectRelease();
    a4(v13);
    swift_errorRelease();
  }
  else if (a2)
  {
    type metadata accessor for PPTTask_MarkAsCompleted();
    NSString v15 = (objc_class *)swift_getObjCClassFromMetadata();
    id v16 = a2;
    uint64_t v17 = NSStringFromClass(v15);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_100422BFC((uint64_t)_swiftEmptyArrayStorage);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a4;
    *(void *)(v21 + 24) = a5;
    id v33 = sub_10003F248;
    uint64_t v34 = v21;
    id v29 = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    uint64_t v31 = sub_10000AD88;
    uint64_t v32 = &unk_1007540D8;
    id v22 = _Block_copy(&v29);
    swift_retain();
    swift_release();
    [a3 finishedTest:v18 extraResults:isa waitForNotification:v20 withTeardownBlock:v22];
    _Block_release(v22);
  }
  else
  {
    type metadata accessor for PPTTask_MarkAsCompleted();
    uint64_t v23 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v24 = NSStringFromClass(v23);
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    sub_100422BFC((uint64_t)_swiftEmptyArrayStorage);
    Class v26 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = a4;
    *(void *)(v27 + 24) = a5;
    id v33 = sub_1000218B8;
    uint64_t v34 = v27;
    id v29 = _NSConcreteStackBlock;
    uint64_t v30 = 1107296256;
    uint64_t v31 = sub_10000AD88;
    uint64_t v32 = &unk_100754088;
    Swift::String v28 = _Block_copy(&v29);
    swift_retain();
    swift_release();
    [a3 finishedTest:v25 waitForCommit:1 extraResults:v26 withTeardownBlock:v28];
    _Block_release(v28);
  }
}

uint64_t sub_1005F0548(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F0974(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F0DA0()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005F0DB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F11E4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F1610(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F1A3C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F1E68(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F2294(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F26C0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F2AEC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F2F18(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F3344(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F3770(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F3B9C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v47 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v47 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v42 - v13;
  sub_1000145EC(a1, (uint64_t)v48);
  NSString v15 = *(void **)(a1 + 40);
  uint64_t result = sub_100038ED8(v48, (uint64_t)v49);
  uint64_t v17 = (void *)UIApp;
  if (UIApp)
  {
    uint64_t v46 = a3;
    id v18 = v15;
    if ([v17 launchedToTest])
    {
      uint64_t v19 = sub_100038D28(v49, v49[3]);
      id v44 = v18;
      uint64_t v20 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
      uint64_t v21 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
      id v22 = v14;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v14, v20, v21);
      uint64_t v23 = *(void (**)(char *, void, uint64_t))(v10 + 104);
      uint64_t v43 = v14;
      uint64_t v24 = v47;
      v23(v14, enum case for REMNavigationSpecifier.root(_:), v47);
      v42[1] = *v19;
      uint64_t v25 = swift_allocObject();
      swift_weakInit();
      Class v26 = v45;
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v45, v22, v24);
      uint64_t v27 = a4;
      unint64_t v28 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      id v29 = a2;
      uint64_t v30 = a5;
      unint64_t v31 = (v11 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      unint64_t v33 = v32 + v28;
      a4 = v27;
      uint64_t v34 = v26;
      uint64_t v35 = v47;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v33, v34, v47);
      *(void *)(v32 + v31) = 0;
      a5 = v30;
      a2 = v29;
      uint64_t v36 = swift_allocObject();
      *(void *)(v36 + 16) = sub_10003F9F0;
      *(void *)(v36 + 24) = v32;
      swift_retain();
      swift_retain();
      sub_10003B754(&qword_100799F40);
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      id v18 = v44;
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v43, v35);
    }
    else
    {
      sub_1000145EC((uint64_t)v49, (uint64_t)v48);
      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      Promise.init(value:)();
    }
    os_log_type_t v37 = (void *)swift_allocObject();
    v37[2] = a2;
    v37[3] = v18;
    v37[4] = v46;
    v37[5] = a4;
    v37[6] = a5;
    id v38 = v18;
    id v39 = a2;
    swift_bridgeObjectRetain();
    id v40 = a5;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v49);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F3FC8(void *a1, void *a2, void *a3, id a4, unint64_t a5, void *a6)
{
  uint64_t v57 = a6;
  uint64_t v11 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  uint64_t v12 = *(void *)(v55 + 64);
  __chkstk_darwin(v11);
  id v54 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v52 - v14;
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_1007AB9C0);
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  id v59 = a4;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v19, 2u);
    a4 = v59;
    swift_slowDealloc();
  }

  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Default setup", v22, 2u);
    a4 = v59;
    swift_slowDealloc();
  }

  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "TEST SETUP END", v25, 2u);
    a4 = v59;
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain_n();
  Class v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v52 = a1;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v53 = v12;
    id v29 = (uint8_t *)v28;
    v60[0] = swift_slowAlloc();
    *(_DWORD *)id v29 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1000385A8((uint64_t)v59, a5, v60);
    a1 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "TEST RUN START {testName: %{public}s}", v29, 0xCu);
    swift_arrayDestroy();
    a4 = v59;
    swift_slowDealloc();
    uint64_t v12 = v53;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = a4;
  v30[3] = a5;
  v30[4] = a2;
  v30[5] = a3;
  uint64_t v31 = *sub_100038D28(a1, a1[3]);
  uint64_t v61 = type metadata accessor for TTRIRootPresenter();
  uint64_t v62 = &off_100743718;
  v60[0] = v31;
  sub_100038D28(v60, v61);
  swift_bridgeObjectRetain();
  id v59 = a2;
  id v32 = a3;
  uint64_t v33 = swift_retain();
  uint64_t v34 = v58;
  sub_100505204(v33);
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v37 = v54;
  uint64_t v36 = v55;
  uint64_t v38 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v34, v56);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v39, v37, v38);
  *(void *)(v40 + ((v12 + v39 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_1005FB23C;
  *(void *)(v41 + 24) = v40;
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F38);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v58, v38);
  id v42 = (void *)swift_allocObject();
  id v43 = v59;
  void v42[2] = v59;
  v42[3] = sub_10003D964;
  id v44 = v57;
  v42[4] = v30;
  v42[5] = v44;
  id v45 = v43;
  swift_retain();
  id v46 = v44;
  uint64_t v47 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v48 = (void *)swift_allocObject();
  v48[2] = v46;
  long long v48[3] = sub_10003D964;
  v48[4] = v30;
  swift_retain();
  id v49 = v46;
  long long v50 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  sub_100038CD8((uint64_t)v60);
  return swift_release();
}

uint64_t sub_1005F468C(void *a1, void *a2, void *a3, id a4, unint64_t a5, void *a6)
{
  uint64_t v53 = a6;
  uint64_t v11 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  uint64_t v12 = *(void *)(v51 + 64);
  __chkstk_darwin(v11);
  long long v50 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v54 = (void **)((char *)&v48 - v14);
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_1007AB9C0);
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  id v55 = a4;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v19, 2u);
    a4 = v55;
    swift_slowDealloc();
  }

  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Default setup", v22, 2u);
    a4 = v55;
    swift_slowDealloc();
  }

  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "TEST SETUP END", v25, 2u);
    a4 = v55;
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain_n();
  Class v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v48 = a1;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v49 = v12;
    id v29 = (uint8_t *)v28;
    v56[0] = swift_slowAlloc();
    *(_DWORD *)id v29 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v59 = sub_1000385A8((uint64_t)v55, a5, v56);
    a1 = v48;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "TEST RUN START {testName: %{public}s}", v29, 0xCu);
    swift_arrayDestroy();
    a4 = v55;
    swift_slowDealloc();
    uint64_t v12 = v49;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = a4;
  v30[3] = a5;
  v30[4] = a2;
  v30[5] = a3;
  uint64_t v31 = *sub_100038D28(a1, a1[3]);
  uint64_t v57 = type metadata accessor for TTRIRootPresenter();
  uint64_t v58 = &off_100743718;
  v56[0] = v31;
  sub_100038D28(v56, v57);
  swift_bridgeObjectRetain();
  id v55 = a2;
  id v32 = a3;
  swift_retain();
  uint64_t v33 = v54;
  sub_100505638(v54);
  uint64_t v34 = swift_allocObject();
  swift_weakInit();
  uint64_t v36 = v50;
  uint64_t v35 = v51;
  uint64_t v37 = v52;
  (*(void (**)(char *, void *, uint64_t))(v51 + 16))(v50, v33, v52);
  unint64_t v38 = (*(unsigned __int8 *)(v35 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v34;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v39 + v38, v36, v37);
  *(void *)(v39 + ((v12 + v38 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = sub_1005FB5C8;
  *(void *)(v40 + 24) = v39;
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100791C48);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(void *, uint64_t))(v35 + 8))(v54, v37);
  uint64_t v41 = (void *)swift_allocObject();
  id v42 = v53;
  v41[2] = v53;
  v41[3] = sub_10003D964;
  id v43 = v55;
  v41[4] = v30;
  v41[5] = v43;
  id v44 = v43;
  id v45 = v42;
  swift_retain();
  id v46 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  sub_100038CD8((uint64_t)v56);
  return swift_release();
}

uint64_t sub_1005F4CDC(void *a1, void *a2, void *a3, id a4, unint64_t a5, void *a6)
{
  uint64_t v57 = a6;
  uint64_t v11 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v55 = *(void *)(v11 - 8);
  uint64_t v56 = v11;
  uint64_t v12 = *(void *)(v55 + 64);
  __chkstk_darwin(v11);
  id v54 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v58 = (char *)&v52 - v14;
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_1007AB9C0);
  id v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  BOOL v18 = os_log_type_enabled(v16, v17);
  id v59 = a4;
  if (v18)
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v19, 2u);
    a4 = v59;
    swift_slowDealloc();
  }

  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v20, v21))
  {
    id v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Default setup", v22, 2u);
    a4 = v59;
    swift_slowDealloc();
  }

  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "TEST SETUP END", v25, 2u);
    a4 = v59;
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain_n();
  Class v26 = Logger.logObject.getter();
  os_log_type_t v27 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v52 = a1;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v53 = v12;
    id v29 = (uint8_t *)v28;
    v60[0] = swift_slowAlloc();
    *(_DWORD *)id v29 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v63 = sub_1000385A8((uint64_t)v59, a5, v60);
    a1 = v52;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "TEST RUN START {testName: %{public}s}", v29, 0xCu);
    swift_arrayDestroy();
    a4 = v59;
    swift_slowDealloc();
    uint64_t v12 = v53;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = a4;
  v30[3] = a5;
  v30[4] = a2;
  v30[5] = a3;
  uint64_t v31 = *sub_100038D28(a1, a1[3]);
  uint64_t v61 = type metadata accessor for TTRIRootPresenter();
  uint64_t v62 = &off_100743718;
  v60[0] = v31;
  sub_100038D28(v60, v61);
  swift_bridgeObjectRetain();
  id v59 = a2;
  id v32 = a3;
  uint64_t v33 = swift_retain();
  uint64_t v34 = v58;
  sub_100505204(v33);
  uint64_t v35 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = v54;
  uint64_t v36 = v55;
  uint64_t v38 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v34, v56);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v35;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v40 + v39, v37, v38);
  *(void *)(v40 + ((v12 + v39 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = sub_1005FB23C;
  *(void *)(v41 + 24) = v40;
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F38);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v58, v38);
  id v42 = (void *)swift_allocObject();
  id v43 = v59;
  void v42[2] = v59;
  v42[3] = sub_10003D964;
  id v44 = v57;
  v42[4] = v30;
  v42[5] = v44;
  id v45 = v43;
  swift_retain();
  id v46 = v44;
  uint64_t v47 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v48 = (void *)swift_allocObject();
  v48[2] = v46;
  long long v48[3] = sub_10003D964;
  v48[4] = v30;
  swift_retain();
  id v49 = v46;
  long long v50 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  sub_100038CD8((uint64_t)v60);
  return swift_release();
}

uint64_t sub_1005F53A0(void *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t, uint64_t, uint64_t, void *, id))
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v14 = type metadata accessor for Logger();
  sub_100018BF8(v14, (uint64_t)qword_1007AB9C0);
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v17 = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "TEST SETUP START", v17, 2u);
    swift_slowDealloc();
  }

  BOOL v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "Default setup", v20, 2u);
    swift_slowDealloc();
  }

  os_log_type_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v23 = 0;
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "TEST SETUP END", v23, 2u);
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain_n();
  os_log_type_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v24, v25))
  {
    id v32 = a3;
    Class v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)Class v26 = 136446210;
    swift_bridgeObjectRetain();
    sub_1000385A8(a4, a5, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "TEST RUN START {testName: %{public}s}", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a3 = v32;
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v27 = (void *)swift_allocObject();
  v27[2] = a4;
  v27[3] = a5;
  v27[4] = a2;
  v27[5] = a3;
  uint64_t v28 = *sub_100038D28(a1, a1[3]);
  swift_bridgeObjectRetain();
  id v29 = a2;
  id v30 = a3;
  a9(a6, v28, a8, v27, v29);
  return swift_release();
}

uint64_t sub_1005F5730(void *a1, void *a2, void *a3, uint64_t a4, unint64_t a5, void *a6, uint64_t (*a7)(void *), uint64_t a8, uint64_t a9, void (*a10)(id, void *, uint64_t, uint64_t, void *, id))
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_1007AB9C0);
  os_log_type_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    BOOL v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "TEST SETUP START", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = a7(a3);
  if (v10)
  {
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v41 = (void *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000385A8(a4, a5, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2114;
      uint64_t v45 = _convertErrorToNSError(_:)();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v41 = v45;
      uint64_t v23 = a4;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "TEST END ERROR {testName: %{public}s, error: %{public}@}", (uint8_t *)v22, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();

      uint64_t v23 = a4;
    }
    NSString v32 = String._bridgeToObjectiveC()();
    [a6 startedTest:v32];

    sub_1005EF104(v23, a5);
    return swift_errorRelease();
  }
  else
  {
    os_log_type_t v24 = (void *)v19;
    os_log_type_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    uint64_t v40 = a6;
    if (os_log_type_enabled(v25, v26))
    {
      os_log_type_t v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "TEST SETUP END", v27, 2u);
      swift_slowDealloc();
    }
    unint64_t v39 = a3;

    swift_bridgeObjectRetain_n();
    uint64_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v28, v29))
    {
      id v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      *(_DWORD *)id v30 = 136446210;
      swift_bridgeObjectRetain();
      uint64_t v31 = a4;
      sub_1000385A8(a4, a5, &v46);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "TEST RUN START {testName: %{public}s}", v30, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v31 = a4;
    }
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = v31;
    v34[3] = a5;
    v34[4] = a2;
    v34[5] = v24;
    v34[6] = v39;
    uint64_t v35 = *sub_100038D28(a1, a1[3]);
    swift_bridgeObjectRetain();
    id v36 = a2;
    id v37 = v24;
    id v38 = v39;
    a10(v37, v40, v35, a9, v34, v36);

    return swift_release();
  }
}

uint64_t sub_1005F5CE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005F5D1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  void v10[3] = a5;
  v10[4] = a6;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_100038D28(a1, v11);
  uint64_t v13 = *(void (**)(void (*)(void *), void *, uint64_t, uint64_t))(v12 + 120);
  swift_retain();
  id v14 = a6;
  v13(sub_1005FB804, v10, v11, v12);
  return swift_release();
}

uint64_t sub_1005F5DF0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v39 = a5;
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v6 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v38 - v14);
  uint64_t v44 = type metadata accessor for TTRIRootPresenter();
  uint64_t v45 = &off_100743718;
  v43[0] = a2;
  id v38 = sub_100038D28(v43, v44);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
    id v21 = [v19 objectIDWithUUID:isa];

    sub_10003B754((uint64_t *)&unk_10078AC20);
    *uint64_t v15 = v21;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v15, enum case for REMNavigationSpecifier.reminder(_:), v9);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v12, v15, v9);
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v23, v12, v9);
    *(void *)(v25 + v24) = 0;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1005FB5C8;
    *(void *)(v26 + 24) = v25;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v15, v9);
    os_log_type_t v27 = (void *)swift_allocObject();
    uint64_t v28 = v39;
    os_log_type_t v29 = v40;
    uint64_t v31 = v41;
    uint64_t v30 = v42;
    v27[2] = v39;
    v27[3] = v31;
    v27[4] = v30;
    v27[5] = v29;
    id v32 = v28;
    swift_retain();
    id v33 = v29;
    uint64_t v34 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v33;
    v35[3] = v31;
    uint64_t v35[4] = v30;
    swift_retain();
    id v36 = v33;
    id v37 = (void *)zalgo.getter();
    dispatch thunk of Promise.error(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v43);
  }
  return result;
}

uint64_t sub_1005F62B0()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1005F62E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = a4;
  void v10[3] = a5;
  v10[4] = a6;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_100038D28(a1, v11);
  uint64_t v13 = *(void (**)(void (*)(void *), void *, uint64_t, uint64_t))(v12 + 120);
  swift_retain();
  id v14 = a6;
  v13(sub_1005FB668, v10, v11, v12);
  return swift_release();
}

uint64_t sub_1005F63BC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  unint64_t v39 = a5;
  uint64_t v40 = a1;
  uint64_t v41 = a3;
  uint64_t v42 = a4;
  uint64_t v6 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v38 - v14);
  uint64_t v44 = type metadata accessor for TTRIRootPresenter();
  uint64_t v45 = &off_100743718;
  v43[0] = a2;
  id v38 = sub_100038D28(v43, v44);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v8, 1, v16);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v16);
    id v21 = [v19 objectIDWithUUID:isa];

    sub_10003B754((uint64_t *)&unk_10078AC20);
    *uint64_t v15 = v21;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v15, enum case for REMNavigationSpecifier.reminder(_:), v9);
    uint64_t v22 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v12, v15, v9);
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v23, v12, v9);
    *(void *)(v25 + v24) = 0;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1005FB5C8;
    *(void *)(v26 + 24) = v25;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v15, v9);
    os_log_type_t v27 = (void *)swift_allocObject();
    uint64_t v28 = v39;
    os_log_type_t v29 = v40;
    uint64_t v31 = v41;
    uint64_t v30 = v42;
    v27[2] = v39;
    v27[3] = v31;
    v27[4] = v30;
    v27[5] = v29;
    id v32 = v28;
    swift_retain();
    id v33 = v29;
    uint64_t v34 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = v33;
    v35[3] = v31;
    uint64_t v35[4] = v30;
    swift_retain();
    id v36 = v33;
    id v37 = (void *)zalgo.getter();
    dispatch thunk of Promise.error(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v43);
  }
  return result;
}

uint64_t sub_1005F6884(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v38 = a4;
  unint64_t v39 = a5;
  uint64_t v36 = a3;
  id v37 = a1;
  uint64_t v6 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v35 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (void *)((char *)v34 - v13);
  uint64_t v41 = type metadata accessor for TTRIRootPresenter();
  uint64_t v42 = &off_100743718;
  v40[0] = a2;
  v34[1] = sub_100038D28(v40, v41);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v15 = type metadata accessor for UUID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10003B754((uint64_t *)&unk_10078AC20);
    BOOL v18 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v16 + 8))(v8, v15);
    id v20 = [v18 objectIDWithUUID:isa];

    *uint64_t v14 = v20;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v14, enum case for REMNavigationSpecifier.reminder(_:), v9);
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    uint64_t v22 = v35;
    (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v35, v14, v9);
    unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v21;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v23, v22, v9);
    *(void *)(v25 + v24) = 0;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1005FB5C8;
    *(void *)(v26 + 24) = v25;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v14, v9);
    os_log_type_t v27 = (void *)swift_allocObject();
    uint64_t v29 = v36;
    uint64_t v28 = v37;
    v27[2] = v37;
    v27[3] = v29;
    uint64_t v30 = v39;
    v27[4] = v38;
    v27[5] = v30;
    id v31 = v28;
    swift_retain();
    id v32 = v30;
    id v33 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v40);
  }
  return result;
}

uint64_t sub_1005F6CE0(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v41 = a1;
  uint64_t v42 = a6;
  unint64_t v39 = a2;
  uint64_t v40 = a5;
  uint64_t v38 = a4;
  uint64_t v7 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v37 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v37);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (void **)((char *)&v36 - v14);
  uint64_t v44 = type metadata accessor for TTRIRootPresenter();
  uint64_t v45 = &off_100743718;
  v43[0] = a3;
  uint64_t v36 = sub_100038D28(v43, v44);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, v16);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_10003B754((uint64_t *)&unk_10078AC20);
    uint64_t v19 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v9, v16);
    id v21 = [v19 objectIDWithUUID:isa];

    *uint64_t v15 = v21;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
    uint64_t v22 = v37;
    (*(void (**)(void *, void, uint64_t))(v10 + 104))(v15, enum case for REMNavigationSpecifier.reminder(_:), v37);
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, void *, uint64_t))(v10 + 16))(v12, v15, v22);
    unint64_t v24 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v23;
    (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v25 + v24, v12, v22);
    *(void *)(v25 + ((v11 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_1005FB5C8;
    *(void *)(v26 + 24) = v25;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v10 + 8))(v15, v22);
    os_log_type_t v27 = (void *)swift_allocObject();
    uint64_t v29 = v38;
    uint64_t v28 = v39;
    v27[2] = v39;
    v27[3] = v29;
    uint64_t v30 = v41;
    id v31 = v42;
    v27[4] = v40;
    v27[5] = v31;
    v27[6] = v30;
    id v32 = v28;
    swift_retain();
    id v33 = v31;
    id v34 = v30;
    uint64_t v35 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v43);
  }
  return result;
}

uint64_t sub_1005F7148(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  id v34 = a5;
  uint64_t v35 = a4;
  id v32 = a1;
  uint64_t v33 = a3;
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v37 = type metadata accessor for TTRIRootPresenter();
  uint64_t v38 = &off_100743718;
  v36[0] = a2;
  sub_100038D28(v36, v37);
  uint64_t v13 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for REMNavigationSpecifier.root(_:), v6);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, v6);
  *(void *)(v18 + v17) = 0;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_10003F9F0;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F40);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  sub_10007CD0C();
  id v20 = (void *)static OS_dispatch_queue.main.getter();
  id v21 = (void *)swift_allocObject();
  uint64_t v22 = v32;
  uint64_t v23 = v33;
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  void v21[2] = v32;
  v21[3] = v25;
  v21[4] = v23;
  v21[5] = v24;
  id v26 = v22;
  id v27 = v25;
  swift_retain();
  sub_10003B754(&qword_10079B158);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
  swift_release();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v26;
  id v28 = v26;
  uint64_t v29 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  return sub_100038CD8((uint64_t)v36);
}

uint64_t sub_1005F7520(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v33 = a2;
  id v34 = a1;
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v39 = type metadata accessor for TTRIRootPresenter();
  uint64_t v40 = &off_100743718;
  v38[0] = a3;
  sub_100038D28(v38, v39);
  uint64_t v14 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v15 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, enum case for REMNavigationSpecifier.root(_:), v7);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  *(void *)(v19 + v18) = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10003F9F0;
  *(void *)(v20 + 24) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F40);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  sub_10007CD0C();
  id v21 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v22 = (void *)swift_allocObject();
  uint64_t v23 = v33;
  uint64_t v24 = v34;
  id v26 = v35;
  uint64_t v25 = v36;
  v22[2] = v33;
  v22[3] = v26;
  v22[4] = v24;
  v22[5] = v25;
  v22[6] = v37;
  id v27 = v23;
  id v28 = v26;
  id v29 = v24;
  swift_retain();
  sub_10003B754(&qword_10079B1B0);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
  swift_release();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v27;
  id v30 = v27;
  uint64_t v31 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  return sub_100038CD8((uint64_t)v38);
}

uint64_t sub_1005F7908@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t result = sub_1005FB060(*a1, a1[1], a2, a3, a4);
  if (!v5)
  {
    *a5 = result;
    a5[1] = v8;
    return swift_unknownObjectRetain();
  }
  return result;
}

uint64_t sub_1005F794C(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v46 = a6;
  uint64_t v47 = a5;
  uint64_t v43 = a4;
  uint64_t v44 = a2;
  uint64_t v45 = a1;
  uint64_t v7 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (void *)((char *)v42 - v15);
  uint64_t v49 = type metadata accessor for TTRIRootPresenter();
  long long v50 = &off_100743718;
  v48[0] = a3;
  v42[1] = sub_100038D28(v48, v49);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v9, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v9, v17);
    id v22 = [v20 objectIDWithUUID:isa];

    uint64_t v23 = (char *)v16 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    *uint64_t v16 = v22;
    uint64_t v24 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
    uint64_t v25 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
    (*(void (**)(void *, void, uint64_t))(v11 + 104))(v16, enum case for REMNavigationSpecifier.list(_:), v10);
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, void *, uint64_t))(v11 + 16))(v13, v16, v10);
    unint64_t v27 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v28 + v27, v13, v10);
    *(void *)(v28 + ((v12 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1005FB5C8;
    *(void *)(v29 + 24) = v28;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v11 + 8))(v16, v10);
    sub_10007CD0C();
    id v30 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v31 = (void *)swift_allocObject();
    id v32 = v44;
    uint64_t v33 = v45;
    uint64_t v35 = v46;
    uint64_t v34 = v47;
    long long v31[2] = v44;
    v31[3] = v35;
    uint64_t v36 = v43;
    v31[4] = v33;
    void v31[5] = v36;
    v31[6] = v34;
    id v37 = v32;
    id v38 = v35;
    id v39 = v33;
    swift_retain();
    sub_10003B754(&qword_1007AB9E8);
    dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
    swift_release();

    swift_release();
    *(void *)(swift_allocObject() + 16) = v37;
    id v40 = v37;
    uint64_t v41 = (void *)zalgo.getter();
    dispatch thunk of Promise.error(on:closure:)();
    swift_release();
    swift_release();
    swift_release();

    return sub_100038CD8((uint64_t)v48);
  }
  return result;
}

uint64_t sub_1005F7E70(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v39 = type metadata accessor for TTRIRootPresenter();
  id v40 = &off_100743718;
  v38[0] = a3;
  sub_100038D28(v38, v39);
  uint64_t v14 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v15 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, enum case for REMNavigationSpecifier.root(_:), v7);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  *(void *)(v19 + v18) = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10003F9F0;
  *(void *)(v20 + 24) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F40);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  sub_10007CD0C();
  id v21 = (void *)static OS_dispatch_queue.main.getter();
  id v22 = (void *)swift_allocObject();
  uint64_t v23 = v33;
  uint64_t v24 = v34;
  uint64_t v26 = v35;
  uint64_t v25 = v36;
  v22[2] = v33;
  v22[3] = v26;
  v22[4] = v24;
  v22[5] = v25;
  v22[6] = v37;
  id v27 = v23;
  id v28 = v26;
  id v29 = v24;
  swift_retain();
  sub_10003B754(&qword_10079B1C8);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
  swift_release();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v27;
  id v30 = v27;
  uint64_t v31 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  return sub_100038CD8((uint64_t)v38);
}

uint64_t sub_1005F8258(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v34 = a5;
  uint64_t v35 = a4;
  id v32 = a1;
  uint64_t v33 = a3;
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v37 = type metadata accessor for TTRIRootPresenter();
  id v38 = &off_100743718;
  v36[0] = a2;
  sub_100038D28(v36, v37);
  uint64_t v13 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for REMNavigationSpecifier.root(_:), v6);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v16, v9, v6);
  *(void *)(v18 + v17) = 0;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_10003F9F0;
  *(void *)(v19 + 24) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F40);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  sub_10007CD0C();
  uint64_t v20 = (void *)static OS_dispatch_queue.main.getter();
  id v21 = (void *)swift_allocObject();
  id v22 = v32;
  uint64_t v23 = v33;
  uint64_t v25 = v34;
  uint64_t v24 = v35;
  void v21[2] = v32;
  v21[3] = v25;
  v21[4] = v23;
  v21[5] = v24;
  id v26 = v22;
  id v27 = v25;
  swift_retain();
  sub_10003B754(&qword_10079B158);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
  swift_release();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v26;
  id v28 = v26;
  id v29 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  return sub_100038CD8((uint64_t)v36);
}

uint64_t sub_1005F8630(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v39 = type metadata accessor for TTRIRootPresenter();
  id v40 = &off_100743718;
  v38[0] = a3;
  sub_100038D28(v38, v39);
  uint64_t v14 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v15 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, enum case for REMNavigationSpecifier.root(_:), v7);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  *(void *)(v19 + v18) = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10003F9F0;
  *(void *)(v20 + 24) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F40);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  sub_10007CD0C();
  id v21 = (void *)static OS_dispatch_queue.main.getter();
  id v22 = (void *)swift_allocObject();
  uint64_t v23 = v33;
  uint64_t v24 = v34;
  id v26 = v35;
  uint64_t v25 = v36;
  v22[2] = v33;
  v22[3] = v26;
  v22[4] = v24;
  v22[5] = v25;
  v22[6] = v37;
  id v27 = v23;
  id v28 = v26;
  id v29 = v24;
  swift_retain();
  sub_10003B754(&qword_10079B1E0);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
  swift_release();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v27;
  id v30 = v27;
  uint64_t v31 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  return sub_100038CD8((uint64_t)v38);
}

uint64_t sub_1005F8A18(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = a5;
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v33 - v12;
  uint64_t v39 = type metadata accessor for TTRIRootPresenter();
  id v40 = &off_100743718;
  v38[0] = a3;
  sub_100038D28(v38, v39);
  uint64_t v14 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
  uint64_t v15 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v13, enum case for REMNavigationSpecifier.root(_:), v7);
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, v13, v7);
  unint64_t v17 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v18 = (v9 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v16;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v19 + v17, v10, v7);
  *(void *)(v19 + v18) = 0;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_10003F9F0;
  *(void *)(v20 + 24) = v19;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_100799F40);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  sub_10007CD0C();
  id v21 = (void *)static OS_dispatch_queue.main.getter();
  id v22 = (void *)swift_allocObject();
  uint64_t v23 = v33;
  uint64_t v24 = v34;
  id v26 = v35;
  uint64_t v25 = v36;
  v22[2] = v33;
  v22[3] = v26;
  v22[4] = v24;
  v22[5] = v25;
  v22[6] = v37;
  id v27 = v23;
  id v28 = v26;
  id v29 = v24;
  swift_retain();
  sub_10003B754(&qword_10079B1F8);
  dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
  swift_release();

  swift_release();
  *(void *)(swift_allocObject() + 16) = v27;
  id v30 = v27;
  uint64_t v31 = (void *)zalgo.getter();
  dispatch thunk of Promise.error(on:closure:)();
  swift_release();
  swift_release();
  swift_release();

  return sub_100038CD8((uint64_t)v38);
}

uint64_t sub_1005F8E00(uint64_t a1, unint64_t a2, uint64_t a3)
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_1007AB9C0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    v27[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)&v24[0] = sub_1000385A8(a1, a2, v27);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "TEST START {testName: %{public}s}", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v10 = (NSString *)String._bridgeToObjectiveC()();
  Class v11 = NSClassFromString(v10);

  if (!v11)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v17 = Logger.logObject.getter();
    uint64_t v18 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v27[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)&v24[0] = sub_1000385A8(a1, a2, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v20 = "TEST END ERROR -- No class for test name {testName: %{public}s}";
LABEL_17:
      _os_log_impl((void *)&_mh_execute_header, v17, (os_log_type_t)v18, v20, v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }
LABEL_18:

    swift_bridgeObjectRelease_n();
    return 0;
  }
  swift_getObjCClassMetadata();
  type metadata accessor for PPTTestClass();
  uint64_t v12 = (objc_class *)swift_dynamicCastMetatype();
  if (!v12)
  {
    swift_bridgeObjectRetain_n();
    unint64_t v17 = Logger.logObject.getter();
    LOBYTE(v18) = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v17, (os_log_type_t)v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      v27[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)&v24[0] = sub_1000385A8(a1, a2, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v20 = "TEST END ERROR -- testClass is not a pptTestClass subclass {testName: %{public}s}";
      goto LABEL_17;
    }
    goto LABEL_18;
  }
  id v26 = [objc_allocWithZone(v12) init];
  id v13 = v26;
  sub_10003B754(&qword_1007ABA00);
  if (!swift_dynamicCast())
  {
    uint64_t v25 = 0;
    memset(v24, 0, sizeof(v24));
    sub_10003B6F8((uint64_t)v24, &qword_1007ABA08);
    swift_bridgeObjectRetain_n();
    id v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      v27[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446210;
      swift_bridgeObjectRetain();
      *(void *)&v24[0] = sub_1000385A8(a1, a2, v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "TEST END ERROR -- pptInstance does not confrom to PPTITest. Did you forget to provide a concrete implementation in TTRITests {testName: %{public}s}", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return 0;
  }
  sub_100038ED8(v24, (uint64_t)v27);
  uint64_t v14 = v28;
  uint64_t v15 = v29;
  sub_100038D28(v27, v28);
  if (qword_100785750 != -1) {
    swift_once();
  }
  uint64_t result = DeferredPromise.promise.getter();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8))(a3, result, v14, v15);
    swift_release();

    sub_100038CD8((uint64_t)v27);
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005F940C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v45 = a4;
  uint64_t v43 = a3;
  uint64_t v42 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v6 = *(void *)(v42 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v39 - v9);
  uint64_t v11 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PPTNavigation_List_Simple();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v15 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v44 = a2;
  [a2 startedTest:v16];

  uint64_t v46 = *sub_100038D28(a1, a1[3]);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v20 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    id v22 = [v20 objectIDWithUUID:isa];
    id v40 = v22;

    uint64_t v23 = (char *)v10 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    *uint64_t v10 = v22;
    uint64_t v24 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
    uint64_t v25 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v23, v24, v25);
    uint64_t v26 = v42;
    (*(void (**)(void *, void, uint64_t))(v6 + 104))(v10, enum case for REMNavigationSpecifier.list(_:), v42);
    uint64_t v27 = swift_allocObject();
    swift_weakInit();
    uint64_t v28 = v41;
    (*(void (**)(char *, void *, uint64_t))(v6 + 16))(v41, v10, v26);
    unint64_t v29 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v30 + v29, v28, v26);
    *(void *)(v30 + ((v7 + v29 + 7) & 0xFFFFFFFFFFFFFFF8)) = 1;
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_1005FB5C8;
    *(void *)(v31 + 24) = v30;
    id v32 = v40;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v26);
    swift_release();
    uint64_t v33 = (void *)swift_allocObject();
    uint64_t v35 = v43;
    uint64_t v34 = v44;
    v33[2] = v44;
    v33[3] = v35;
    v33[4] = v45;
    id v36 = v34;
    swift_retain();
    uint64_t v37 = (void *)zalgo.getter();
    uint64_t v38 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    return v38;
  }
  return result;
}

uint64_t sub_1005F9914(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v36 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - v11;
  type metadata accessor for PPTNavigation_Smartlist_All();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v15];

  sub_100038D28(a1, a1[3]);
  uint64_t v16 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  uint64_t v17 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v12, v16, v17);
  uint64_t v18 = v36;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for REMNavigationSpecifier.allReminders(_:), v36);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v18);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v18);
  *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = 1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1005FBD00;
  *(void *)(v22 + 24) = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_10079B1A0);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v38;
  *(void *)(v23 + 16) = v38;
  id v25 = v24;
  uint64_t v26 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v18);
  swift_release();
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  uint64_t v30 = v40;
  v27[2] = v37;
  uint64_t v27[3] = v29;
  v27[4] = v30;
  id v31 = v28;
  swift_retain();
  id v32 = (void *)zalgo.getter();
  uint64_t v33 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v33;
}

uint64_t sub_1005F9D28(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PPTNavigation_ReminderDetails();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v13 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v14];

  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_100038D28(a1, v15);
  uint64_t v17 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection.none(_:);
  uint64_t v18 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 104))(v11, v17, v18);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for REMNavigationSpecifier.ReminderPathSpecifier.showDetail(_:), v8);
  uint64_t v19 = sub_10003B754(&qword_1007AB9F0);
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 40))(a3, v11, v19, v19, v15, v16);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  unint64_t v20 = (void *)swift_allocObject();
  uint64_t v21 = v27;
  uint64_t v22 = v28;
  v20[2] = a2;
  v20[3] = v21;
  v20[4] = v22;
  id v23 = a2;
  swift_retain();
  uint64_t v24 = (void *)zalgo.getter();
  uint64_t v25 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v25;
}

uint64_t sub_1005F9FAC(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v32 = a3;
  uint64_t v33 = a4;
  id v31 = a2;
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v30 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  type metadata accessor for PPTNavigation_SmartList_Today();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v13 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v14];

  sub_100038D28(a1, a1[3]);
  swift_retain();
  id v15 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.todayListIsGrouped.setter();

  uint64_t v16 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  uint64_t v17 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v11, v16, v17);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v11, enum case for REMNavigationSpecifier.today(_:), v6);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  uint64_t v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v30, v11, v6);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v19, v6);
  *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = 1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1005FBEB4;
  *(void *)(v22 + 24) = v21;
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_10079B1B8);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
  swift_release();
  id v23 = (void *)swift_allocObject();
  uint64_t v24 = v31;
  uint64_t v25 = v32;
  v23[2] = v31;
  v23[3] = v25;
  v23[4] = v33;
  id v26 = v24;
  swift_retain();
  uint64_t v27 = (void *)zalgo.getter();
  uint64_t v28 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v28;
}

uint64_t sub_1005FA378(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v41 = a4;
  uint64_t v39 = a3;
  uint64_t v38 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v6 = *(void *)(v38 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (id *)((char *)&v36 - v9);
  uint64_t v11 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for PPTNavigation_List_MixedContent();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v15 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v40 = a2;
  [a2 startedTest:v16];

  sub_100038D28(a1, a1[3]);
  swift_retain();
  UUID.init(uuidString:)();
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v20 = self;
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v17);
    id v22 = [v20 objectIDWithUUID:isa];

    sub_10003B754((uint64_t *)&unk_10078AC20);
    *uint64_t v10 = v22;
    id v36 = v22;
    static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
    uint64_t v23 = v38;
    (*(void (**)(void *, void, uint64_t))(v6 + 104))(v10, enum case for REMNavigationSpecifier.reminder(_:), v38);
    uint64_t v24 = swift_allocObject();
    swift_weakInit();
    uint64_t v25 = v37;
    (*(void (**)(char *, void *, uint64_t))(v6 + 16))(v37, v10, v23);
    unint64_t v26 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v27 = (v7 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v24;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v28 + v26, v25, v23);
    *(void *)(v28 + v27) = 1;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = sub_1005FB5C8;
    *(void *)(v29 + 24) = v28;
    swift_retain();
    swift_retain();
    sub_10003B754(&qword_100791C48);
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v10, v23);
    swift_release();
    uint64_t v30 = (void *)swift_allocObject();
    uint64_t v32 = v39;
    id v31 = v40;
    void v30[2] = v40;
    v30[3] = v32;
    v30[4] = v41;
    id v33 = v31;
    swift_retain();
    uint64_t v34 = (void *)zalgo.getter();
    uint64_t v35 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    return v35;
  }
  return result;
}

uint64_t sub_1005FA838(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v36 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - v11;
  type metadata accessor for PPTNavigation_SmartList_Flagged();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  NSString v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v15];

  sub_100038D28(a1, a1[3]);
  uint64_t v16 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  uint64_t v17 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v12, v16, v17);
  uint64_t v18 = v36;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for REMNavigationSpecifier.flagged(_:), v36);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v18);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v18);
  *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = 1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1005FC044;
  *(void *)(v22 + 24) = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_10079B1D0);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v38;
  *(void *)(v23 + 16) = v38;
  id v25 = v24;
  unint64_t v26 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v18);
  swift_release();
  unint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  uint64_t v30 = v40;
  v27[2] = v37;
  uint64_t v27[3] = v29;
  v27[4] = v30;
  id v31 = v28;
  swift_retain();
  uint64_t v32 = (void *)zalgo.getter();
  uint64_t v33 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v33;
}

uint64_t sub_1005FAC4C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v36 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - v11;
  type metadata accessor for PPTNavigation_SmartList_Scheduled();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  NSString v14 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [a2 startedTest:v15];

  sub_100038D28(a1, a1[3]);
  uint64_t v16 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  uint64_t v17 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 104))(v12, v16, v17);
  uint64_t v18 = v36;
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for REMNavigationSpecifier.scheduled(_:), v36);
  uint64_t v19 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v18);
  unint64_t v20 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v21 + v20, v9, v18);
  *(void *)(v21 + ((v8 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = 1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1005FC1F0;
  *(void *)(v22 + 24) = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10003B754(&qword_10079B1E8);
  TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v38;
  *(void *)(v23 + 16) = v38;
  id v25 = v24;
  unint64_t v26 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v18);
  swift_release();
  unint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v37;
  uint64_t v29 = v39;
  uint64_t v30 = v40;
  v27[2] = v37;
  uint64_t v27[3] = v29;
  v27[4] = v30;
  id v31 = v28;
  swift_retain();
  uint64_t v32 = (void *)zalgo.getter();
  uint64_t v33 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v33;
}

uint64_t sub_1005FB060(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for PPTNavigation_ReminderDetails();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v10 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  *(void *)(v12 + 24) = a5;
  v15[4] = sub_10003F248;
  v15[5] = v12;
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 1107296256;
  _OWORD v15[2] = sub_10000AD88;
  v15[3] = &unk_100753E80;
  id v13 = _Block_copy(v15);
  swift_retain();
  swift_release();
  [a3 finishedTest:v11 waitForCommit:0 extraResults:0 withTeardownBlock:v13];
  _Block_release(v13);

  return a1;
}

uint64_t sub_1005FB1C8()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FB1E0(uint64_t a1)
{
  return sub_1005F0DB8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FB204(uint64_t a1)
{
  return sub_10003D984(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005F3FC8);
}

uint64_t sub_1005FB23C()
{
  return sub_10003F954((uint64_t (*)(void, unint64_t, void))sub_100309068);
}

uint64_t sub_1005FB268()
{
  return sub_100007FF4((void (*)(void))&_swift_release);
}

uint64_t sub_1005FB280(void *a1)
{
  return sub_1005FB42C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1005EE598);
}

uint64_t sub_1005FB2B0(uint64_t a1)
{
  return sub_1005EF014(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (void (*)(void))type metadata accessor for PPTScroll_AccountsList);
}

void sub_1005FB2E8(void *a1)
{
  sub_1005EE850(a1, v1[2], v1[3], v1[4], (void (*)(void))type metadata accessor for PPTScroll_AccountsList, (uint64_t)&unk_100752900, (uint64_t)sub_1005FB36C, (uint64_t)&unk_100752918);
}

BOOL sub_1005FB344()
{
  return sub_10040F980(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_1005FB350@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001CF4C4(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1005FB36C(uint64_t a1)
{
  return sub_1005EEE90(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1005FB374()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FB38C(uint64_t a1)
{
  return sub_1005F26C0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FB3B0(uint64_t a1)
{
  return sub_10003D984(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005F4CDC);
}

uint64_t sub_1005FB3E8()
{
  return sub_100007FF4((void (*)(void))&_swift_release);
}

uint64_t sub_1005FB400(void *a1)
{
  return sub_1005FB42C(a1, (uint64_t (*)(void, void, void, void, void, void))sub_1005EE6F4);
}

uint64_t sub_1005FB42C(void *a1, uint64_t (*a2)(void, void, void, void, void, void))
{
  return a2(*a1, a1[1], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_1005FB460(uint64_t a1)
{
  return sub_1005EF014(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (void (*)(void))type metadata accessor for PPTScroll_AccountsListGlitch);
}

void sub_1005FB498(void *a1)
{
  sub_1005EEAAC(a1, v1[2], v1[3], v1[4], (void (*)(void))type metadata accessor for PPTScroll_AccountsListGlitch, (uint64_t)&unk_100752B30, (uint64_t)sub_1005FB4F4, (uint64_t)&unk_100752B48);
}

uint64_t sub_1005FB4F4()
{
  return sub_1005EED9C(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1005FB4FC()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FB514(uint64_t a1)
{
  return sub_1005F0974(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FB538(void *a1)
{
  return sub_1005FB580(a1, (uint64_t)&unk_100752C20, (uint64_t)sub_10003D964, (void (*)(uint64_t, uint64_t, uint64_t, void *, id))sub_1005F63BC);
}

uint64_t sub_1005FB580(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t, void *, id))
{
  return sub_1005F53A0(a1, *(void **)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), a2, a3, a4);
}

uint64_t sub_1005FB5C8()
{
  return sub_10003F954((uint64_t (*)(void, unint64_t, void))sub_100309034);
}

uint64_t sub_1005FB5F4()
{
  return sub_100007FF4((void (*)(void))&_swift_release);
}

uint64_t sub_1005FB60C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005F62E8(a1, *(void *)(v3 + 16), a3, *(void *)(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1005FB630(uint64_t a1)
{
  return sub_1005EF014(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (void (*)(void))type metadata accessor for PPTScroll_RemindersList);
}

void sub_1005FB668(void *a1)
{
  sub_1005EE850(a1, v1[2], v1[3], v1[4], (void (*)(void))type metadata accessor for PPTScroll_RemindersList, (uint64_t)&unk_100752D10, (uint64_t)sub_1005FCC9C, (uint64_t)&unk_100752D28);
}

uint64_t sub_1005FB6C0()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FB6D8(uint64_t a1)
{
  return sub_1005F0548(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FB6FC(void *a1)
{
  return sub_1005FB580(a1, (uint64_t)&unk_100752E00, (uint64_t)sub_10003D968, (void (*)(uint64_t, uint64_t, uint64_t, void *, id))sub_1005F5DF0);
}

uint64_t sub_1005FB750()
{
  return sub_100007FF4((void (*)(void))&_swift_release);
}

uint64_t sub_1005FB768(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1005F5D1C(a1, *(void *)(v3 + 16), a3, *(void *)(v3 + 24), *(void *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_1005FB78C(uint64_t a1)
{
  return sub_1005EF014(a1, *(void **)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32), (void (*)(void))type metadata accessor for PPTScroll_RemindersListGlitch);
}

uint64_t sub_1005FB7C4()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1005FB804(void *a1)
{
  sub_1005EEAAC(a1, v1[2], v1[3], v1[4], (void (*)(void))type metadata accessor for PPTScroll_RemindersListGlitch, (uint64_t)&unk_100752EF0, (uint64_t)sub_1005FCAFC, (uint64_t)&unk_100752F08);
}

uint64_t sub_1005FB85C()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FB874(uint64_t a1)
{
  return sub_1005F3344(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FB898(void *a1)
{
  return sub_1005FB580(a1, (uint64_t)&unk_100752FE0, (uint64_t)sub_10003D964, (void (*)(uint64_t, uint64_t, uint64_t, void *, id))sub_1005F8258);
}

uint64_t sub_1005FB8F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005FBAEC(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1005FA378, a2);
}

uint64_t sub_1005FB91C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1005FB954(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_List_MixedContent);
}

uint64_t sub_1005FB98C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005EF660(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (void (*)(void))type metadata accessor for PPTNavigation_List_MixedContent, (uint64_t)sub_10003F248, (uint64_t)&unk_100753138, a2);
}

uint64_t sub_1005FB9E4()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FB9FC(uint64_t a1)
{
  return sub_1005F1E68(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FBA20(void *a1)
{
  return sub_1005FB580(a1, (uint64_t)&unk_100753210, (uint64_t)sub_10003D964, (void (*)(uint64_t, uint64_t, uint64_t, void *, id))sub_1005F7148);
}

uint64_t sub_1005FBA78()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005FBAC0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005FBAEC(a1, (uint64_t (*)(uint64_t, void, void, void))sub_1005F940C, a2);
}

uint64_t sub_1005FBAEC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, v3[2], v3[4], v3[5]);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1005FBB28(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_List_Simple);
}

uint64_t sub_1005FBB60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005EF660(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (void (*)(void))type metadata accessor for PPTNavigation_List_Simple, (uint64_t)sub_10003F248, (uint64_t)&unk_100753368, a2);
}

uint64_t sub_1005FBBB8()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FBBD0(uint64_t a1)
{
  return sub_1005F2294(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FBBF4(void *a1)
{
  return sub_1005FBC50(a1, (uint64_t (*)(void *))sub_100505834, (uint64_t)&unk_100753440, (uint64_t)sub_1005FCB00, (void (*)(id, void *, uint64_t, uint64_t, void *, id))sub_1005F7520);
}

uint64_t sub_1005FBC50(void *a1, uint64_t (*a2)(void *), uint64_t a3, uint64_t a4, void (*a5)(id, void *, uint64_t, uint64_t, void *, id))
{
  return sub_1005F5730(a1, *(void **)(v5 + 16), *(void **)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void **)(v5 + 48), a2, a3, a4, a5);
}

uint64_t sub_1005FBCA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005FC774(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1005F9914, a2);
}

uint64_t sub_1005FBCCC(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_Smartlist_All);
}

uint64_t sub_1005FBD00()
{
  return sub_10003F954((uint64_t (*)(void, unint64_t, void))sub_10030909C);
}

uint64_t sub_1005FBD2C(void *a1)
{
  return sub_100505464(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005FBD4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005EF660(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (void (*)(void))type metadata accessor for PPTNavigation_Smartlist_All, (uint64_t)sub_10003F248, (uint64_t)&unk_1007535C0, a2);
}

uint64_t sub_1005FBDA4()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FBDBC(uint64_t a1)
{
  return sub_1005F2F18(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FBDE0(void *a1)
{
  return sub_1005FBC50(a1, (uint64_t (*)(void *))sub_100505890, (uint64_t)&unk_100753698, (uint64_t)sub_1005FCB00, (void (*)(id, void *, uint64_t, uint64_t, void *, id))sub_1005F7E70);
}

uint64_t sub_1005FBE4C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1005F9FAC(a1, *(void **)(v2 + 16), *(void *)(v2 + 40), *(void *)(v2 + 48));
  if (!v3) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1005FBE80(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_SmartList_Today);
}

uint64_t sub_1005FBEB4()
{
  return sub_10003F954((uint64_t (*)(void, unint64_t, void))sub_1003090D0);
}

uint64_t sub_1005FBEE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005EF660(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (void (*)(void))type metadata accessor for PPTNavigation_SmartList_Today, (uint64_t)sub_10003F248, (uint64_t)&unk_1007537F0, a2);
}

uint64_t sub_1005FBF3C()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FBF54(uint64_t a1)
{
  return sub_1005F3770(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FBF78(void *a1)
{
  return sub_1005FBC50(a1, (uint64_t (*)(void *))sub_1005058EC, (uint64_t)&unk_1007538C8, (uint64_t)sub_1005FCB00, (void (*)(id, void *, uint64_t, uint64_t, void *, id))sub_1005F8630);
}

uint64_t sub_1005FBFE4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005FC774(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1005FA838, a2);
}

uint64_t sub_1005FC010(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_SmartList_Flagged);
}

uint64_t sub_1005FC044()
{
  return sub_10003F954((uint64_t (*)(void, unint64_t, void))sub_100309104);
}

uint64_t sub_1005FC070(void *a1)
{
  return sub_100505484(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005FC090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005EF660(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (void (*)(void))type metadata accessor for PPTNavigation_SmartList_Flagged, (uint64_t)sub_10003F248, (uint64_t)&unk_100753A48, a2);
}

uint64_t sub_1005FC0E8()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FC100(uint64_t a1)
{
  return sub_1005F3B9C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FC124(void *a1)
{
  return sub_1005FBC50(a1, (uint64_t (*)(void *))sub_100505890, (uint64_t)&unk_100753B20, (uint64_t)sub_1005FCB00, (void (*)(id, void *, uint64_t, uint64_t, void *, id))sub_1005F8A18);
}

uint64_t sub_1005FC190@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005FC774(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1005FAC4C, a2);
}

uint64_t sub_1005FC1BC(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_SmartList_Scheduled);
}

uint64_t sub_1005FC1F0()
{
  return sub_10003F954((uint64_t (*)(void, unint64_t, void))sub_100309138);
}

uint64_t sub_1005FC21C(void *a1)
{
  return sub_1005054A4(a1, *(void *)(v1 + 16));
}

uint64_t sub_1005FC23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005EF660(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), (void (*)(void))type metadata accessor for PPTNavigation_SmartList_Scheduled, (uint64_t)sub_10003F248, (uint64_t)&unk_100753CA0, a2);
}

void sub_1005FC294(uint64_t a1, unint64_t a2)
{
  if (qword_100785748 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100018BF8(v3, (uint64_t)qword_1007AB9C0);
  swift_bridgeObjectRetain_n();
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446210;
    swift_bridgeObjectRetain();
    sub_1000385A8(a1, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "TEST RUN END {testName: %{public}s}", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "TEST TEARDOWN START", v9, 2u);
    swift_slowDealloc();
  }

  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "TEST TEARDOWN END", v12, 2u);
    swift_slowDealloc();
  }

  swift_bridgeObjectRetain_n();
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    NSString v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)NSString v15 = 136446210;
    swift_bridgeObjectRetain();
    sub_1000385A8(a1, a2, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "TEST END {testName: %{public}s}", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1005FC634()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FC64C(uint64_t a1)
{
  return sub_1005F2AEC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FC670(void *a1)
{
  return sub_1005FBC50(a1, (uint64_t (*)(void *))sub_100505B34, (uint64_t)&unk_100753D78, (uint64_t)sub_1005FC6D4, (void (*)(id, void *, uint64_t, uint64_t, void *, id))sub_1005F794C);
}

void sub_1005FC6D4()
{
  sub_1005FC294(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1005FC6F8()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005FC748@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005FC774(a1, (uint64_t (*)(uint64_t, void, void, void, void))sub_1005F9D28, a2);
}

uint64_t sub_1005FC774@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, void, void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = a2(a1, v3[2], v3[4], v3[5], v3[6]);
  if (!v4) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1005FC7B4(uint64_t a1)
{
  return sub_1005EF7B0(a1, *(void *)(v1 + 16), (void (*)(void))type metadata accessor for PPTNavigation_ReminderDetails);
}

uint64_t sub_1005FC7E8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005F7908(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_1005FC808()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FC820(uint64_t a1)
{
  return sub_1005F1A3C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FC844(void *a1)
{
  return sub_1005FBC50(a1, sub_100505D28, (uint64_t)&unk_100753F58, (uint64_t)sub_1005FCB00, (void (*)(id, void *, uint64_t, uint64_t, void *, id))sub_1005F6CE0);
}

uint64_t sub_1005FC8A8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1005FC8FC()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1005FC94C(void *a1)
{
  sub_1005EFE8C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1005FC974(uint64_t a1, void *a2)
{
  sub_1005F01AC(a1, a2, *(void **)(v2 + 16), *(void (**)(uint64_t))(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_1005FC980()
{
  return sub_100505604(*(uint64_t (**)(void, void))(v0 + 16));
}

uint64_t sub_1005FC988()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FC9A0(uint64_t a1)
{
  return sub_1005F11E4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FC9C4(uint64_t a1)
{
  return sub_10003D984(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005F468C);
}

uint64_t sub_1005FC9FC()
{
  return sub_100007FF4((void (*)(void))&_swift_release);
}

void sub_1005FCA14(void *a1)
{
  sub_1005EF838(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005FCA34()
{
  return sub_100007FF4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1005FCA4C(uint64_t a1)
{
  return sub_1005F1610(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_1005FCA70(void *a1)
{
  return sub_1005FB580(a1, (uint64_t)&unk_100754340, (uint64_t)sub_10003D964, (void (*)(uint64_t, uint64_t, uint64_t, void *, id))sub_1005F6884);
}

uint64_t sub_1005FCAC4()
{
  return sub_100007FF4((void (*)(void))&_swift_release);
}

void sub_1005FCADC(void *a1)
{
  sub_1005EFAB4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1005FCC44@<X0>(unsigned char *a1@<X8>)
{
  return sub_1005FB350(a1);
}

id TTRIListSharingAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIListSharingAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIListSharingAssembly()
{
  return self;
}

id TTRIListSharingAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIListSharingAssembly();
  return [super dealloc];
}

unsigned char *storeEnumTagSinglePayload for TTRIListSharingPresentationStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005FCE38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListSharingPresentationStyle()
{
  return &type metadata for TTRIListSharingPresentationStyle;
}

unint64_t sub_1005FCE74()
{
  unint64_t result = qword_1007ABA38;
  if (!qword_1007ABA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007ABA38);
  }
  return result;
}

id sub_1005FD110()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRITreeTableView();
  return [super dealloc];
}

uint64_t sub_1005FD154()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
  uint64_t v5 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_1007ABB30);
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v0
                  + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidScrollPassthroughSubject);
  swift_retain();
  static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
  id v19 = [self mainRunLoop];
  uint64_t v11 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
  sub_10003B754((uint64_t *)&unk_1007ABB38);
  sub_1000368FC(0, (unint64_t *)&qword_10078AC90);
  sub_100037EA0((unint64_t *)&unk_1007ABB48, (uint64_t *)&unk_1007ABB38);
  sub_1000C7F30();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10003B6F8((uint64_t)v4, &qword_100791B80);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  swift_release();
  sub_100037EA0(&qword_1007ABB58, &qword_1007ABB30);
  uint64_t v12 = v17;
  uint64_t v13 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v12);
  *(void *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidStopScrollingCancellable) = v13;
  return swift_release();
}

uint64_t sub_1005FD4B4(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_1007ABB10);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v23[-v7];
  uint64_t v9 = sub_10003B754(&qword_1007ABB18);
  __chkstk_darwin(v9);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem;
  swift_beginAccess();
  sub_1005FE86C(v12, (uint64_t)v8);
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_1007ABB00);
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, v13) == 1)
  {
    sub_10003B6F8((uint64_t)v8, &qword_1007ABB10);
  }
  else
  {
    uint64_t v15 = *(void *)&v8[*(int *)(v13 + 48)];
    uint64_t v16 = *(int *)(v9 + 48);
    sub_1000AA9AC((uint64_t)v8, (uint64_t)v11);
    *(void *)&v11[v16] = v15;
    sub_1000346E4((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v17 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v18, enum case for PromiseError.cancelled(_:), v17);
    DeferredPromise.reject(_:)();
    swift_errorRelease();
    swift_release();
  }
  sub_10003B754((uint64_t *)&unk_1007ABB20);
  swift_allocObject();
  uint64_t v19 = DeferredPromise.init()();
  uint64_t v20 = *(int *)(v13 + 48);
  sub_10005FCB8(a1, (uint64_t)v5);
  *(void *)&v5[v20] = v19;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v5, 0, 1, v13);
  swift_beginAccess();
  swift_retain();
  sub_1005FE8D4((uint64_t)v5, v12);
  swift_endAccess();
  uint64_t result = DeferredPromise.promise.getter();
  if (result)
  {
    uint64_t v22 = result;
    swift_release();
    return v22;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1005FD7B8()
{
}

uint64_t sub_1005FD7DC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_itemsPendingUpdate;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    uint64_t v3 = *(void *)(*(void *)(v0
                               + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_scrollSessionController)
                   + 24);
    if (!v3 || (*(unsigned char *)(v3 + 24) & 1) == 0)
    {
      uint64_t result = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                         + qword_1007A59E8);
      if (result)
      {
        uint64_t result = (uint64_t)[(id)result hasActiveDrop];
        if ((result & 1) == 0)
        {
          uint64_t v4 = *(void (**)(void *))(v0
                                               + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_reloadItemsImmediately);
          uint64_t v5 = swift_bridgeObjectRetain();
          uint64_t v6 = sub_10035EA24(v5);
          swift_bridgeObjectRelease();
          v4(v6);
          swift_release();
          *(void *)uint64_t v1 = &_swiftEmptySetSingleton;
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

id sub_1005FD8DC(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v8 = (char *)Strong;
  uint64_t v9 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView;
  id v10 = *(id *)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView);
  sub_1003F928C(a1, a4, a2 & 1);

  id result = *(id *)(*(void *)&v8[v9] + qword_1007A59E8);
  if (result)
  {
    id v12 = [result _isAnimatingScroll];

    return v12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005FD9A8()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - v4;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = *(char **)(*(void *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                  + qword_1007A59F0);
    if (v8)
    {
      uint64_t v9 = *(void **)&v8[qword_10078DEA0];
      id v10 = v8;
      id v11 = [v9 indexPathsForVisibleRows];
      if (v11)
      {
        id v12 = v11;
        type metadata accessor for IndexPath();
        uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v14 = v10;
        uint64_t v15 = (void *)sub_10038F1D8(v13, (uint64_t)v14);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v15 = _swiftEmptyArrayStorage;
      }

      uint64_t v16 = v15[2];
      if (v16)
      {
        uint64_t v17 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
        uint64_t v18 = (char *)v15
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        uint64_t v19 = *(void *)(v17 + 72);
        swift_bridgeObjectRetain();
        while (1)
        {
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          char v20 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
          sub_1000346E4((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          sub_1000346E4((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
          if (v20) {
            break;
          }
          v18 += v19;
          if (!--v16)
          {

            swift_bridgeObjectRelease_n();
            return 0;
          }
        }

        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
        swift_bridgeObjectRelease();

        return 0;
      }
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1005FDC30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1005FD7DC();
  }
}

void *sub_1005FDC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[2] = a3;
  v4[3] = a1;
  return sub_100596ECC((void (*)(_OWORD *__return_ptr, char *))sub_1005FE850, (uint64_t)v4, a2);
}

uint64_t sub_1005FDCD4@<X0>(unsigned __int8 *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = *a1;
  sub_100038D28(a2, v6);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(v10, v8, a3, v6, v7);
  return sub_100347954((uint64_t)v10, a4);
}

void sub_1005FDD68(uint64_t (*a1)(id), uint64_t a2, char a3)
{
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView);
  uint64_t v5 = qword_1007A59E8;
  uint64_t v6 = *(void **)(v4 + qword_1007A59E8);
  if (!v6)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v9 = v6;
  id v15 = v9;
  if (a3)
  {
    v10._rawValue = (void *)a1(v9);
    UIScrollView.scrollRectToFullyVisibleAnimated(_:)(v10);

    swift_bridgeObjectRelease();
    *(unsigned char *)(v3
             + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation) = 1;
    return;
  }
  UIScrollView.iterativelyScrollRectToFullyVisible(with:)();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  id v12 = *(void **)(v4 + v5);
  if (!v12)
  {
LABEL_11:
    __break(1u);
    return;
  }
  uint64_t v13 = (void *)Strong;
  id v14 = v12;
  UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)((UIScrollView)v14, 0, 1);

LABEL_7:
}

void sub_1005FDE90()
{
  uint64_t v1 = sub_10003B754(&qword_1007ABB10);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - v5;
  uint64_t v7 = sub_10003B754(&qword_1007ABB18);
  __chkstk_darwin(v7);
  id v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem;
  swift_beginAccess();
  sub_1005FE86C(v13, (uint64_t)v6);
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_1007ABB00);
  uint64_t v15 = *(void *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v6, 1, v14) == 1)
  {
    sub_10003B6F8((uint64_t)v6, &qword_1007ABB10);
    return;
  }
  uint64_t v30 = v3;
  uint64_t v16 = *(void *)&v6[*(int *)(v14 + 48)];
  uint64_t v17 = *(int *)(v7 + 48);
  sub_1000AA9AC((uint64_t)v6, (uint64_t)v9);
  *(void *)&v9[v17] = v16;
  sub_1000AA9AC((uint64_t)v9, (uint64_t)v12);
  uint64_t v18 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                 + qword_1007A59F0);
  if (v18)
  {
    id v19 = v18;
    uint64_t v20 = sub_1000890D8();
    uint64_t v24 = (void *)sub_10008E820((uint64_t)v12, v20, v22, v23, v21 & 1);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v24)
    {
      swift_getObjectType();
      uint64_t v25 = swift_conformsToProtocol2();
      if (v25) {
        uint64_t v26 = v25;
      }
      else {
        uint64_t v26 = 0;
      }
      if (v25) {
        unint64_t v27 = v24;
      }
      else {
        unint64_t v27 = 0;
      }
      if (v27)
      {
        uint64_t v28 = (uint64_t)v30;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v30, 1, 1, v14);
        swift_beginAccess();
        sub_1005FE8D4(v28, v13);
        swift_endAccess();
        id v31 = v27;
        uint64_t v32 = v26;
        DeferredPromise.resolve(_:)();
        swift_release();
        sub_1000346E4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);

        return;
      }
    }
    swift_release();
    sub_1000346E4((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005FE2F4()
{
  return type metadata accessor for TTRIRemindersListScrollingController();
}

uint64_t type metadata accessor for TTRIRemindersListScrollingController()
{
  uint64_t result = qword_1007ABAE8;
  if (!qword_1007ABAE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1005FE348()
{
  sub_1005FE430();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1005FE430()
{
  if (!qword_1007ABAF8)
  {
    sub_100039710((uint64_t *)&unk_1007ABB00);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007ABAF8);
    }
  }
}

void sub_1005FE5FC()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                + qword_1007A59E8);
  if (v1)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    id v2 = v1;
    char v3 = static NSObject.== infix(_:_:)();

    if (v3)
    {
      swift_retain();
      PassthroughSubject.send(_:)();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1005FE730()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                + qword_1007A59E8);
  if (v1)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100797210);
    id v2 = v1;
    char v3 = static NSObject.== infix(_:_:)();

    if (v3)
    {
      swift_retain();
      PassthroughSubject.send(_:)();
      swift_release();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1005FE850@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1005FDCD4(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005FE86C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007ABB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005FE8D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007ABB10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

id sub_1005FE93C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v8 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_scrollSessionController;
  type metadata accessor for TTRIRemindersListScrollSessionController();
  uint64_t v9 = swift_allocObject();
  sub_10003B754(&qword_10078EF00);
  swift_allocObject();
  uint64_t v10 = v4;
  *(void *)(v9 + 16) = PassthroughSubject.init()();
  *(void *)(v9 + 24) = 0;
  *(void *)&v4[v8] = v9;
  uint64_t v11 = &v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_pendingStartEditingItem];
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_1007ABB00);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  *(void *)&v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_itemsPendingUpdate] = &_swiftEmptySetSingleton;
  v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation] = 0;
  uint64_t v13 = OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidScrollPassthroughSubject;
  sub_10003B754((uint64_t *)&unk_1007ABB38);
  swift_allocObject();
  *(void *)&v10[v13] = PassthroughSubject.init()();
  *(void *)&v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeViewDidStopScrollingCancellable] = 0;
  swift_unknownObjectWeakAssign();
  *(void *)&v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView] = a2;
  uint64_t v14 = &v10[OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_reloadItemsImmediately];
  *(void *)uint64_t v14 = a3;
  *((void *)v14 + 1) = a4;
  id v15 = a2;
  swift_retain();

  v18.receiver = v10;
  v18.super_class = ObjectType;
  return [super init];
}

void sub_1005FEB14()
{
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation) == 1)
  {
    *(unsigned char *)(v0
             + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_contentScrollViewNeedsAdjustmentAfterScrollingAnimation) = 0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC9Reminders36TTRIRemindersListScrollingController_treeView)
                    + qword_1007A59E8);
      if (!v2)
      {
        __break(1u);
        return;
      }
      char v3 = (void *)Strong;
      id v4 = v2;
      UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)((UIScrollView)v4, 1, 0);
    }
  }
  sub_1005FD7DC();

  sub_1005FDE90();
}

uint64_t sub_1005FEBC0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007ABB60);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007ABB60);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t type metadata accessor for TTRIEditSectionsRouter()
{
  return self;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.keepExistingSectionConfirmationTitle(listLayout:)(char a1)
{
  if (a1)
  {
    unint64_t v2 = 0x80000001006A77A0;
    uint64_t v3 = 0x6C6F43207065654BLL;
    unint64_t v4 = 0xED00003F736E6D75;
    unint64_t v1 = 0xD000000000000082;
  }
  else
  {
    unint64_t v1 = 0xD000000000000083;
    unint64_t v2 = 0x80000001006A75D0;
    uint64_t v3 = 0x636553207065654BLL;
    unint64_t v4 = 0xEE003F736E6F6974;
  }
  return TTRLocalizedString(_:comment:)(*(Swift::String *)&v3, *(Swift::String *)&v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.keepExistingSectionConfirmationMessage(listLayout:)(char a1)
{
  if (a1)
  {
    unint64_t v2 = 0xD000000000000084;
    unint64_t v3 = 0x80000001006A7830;
    unint64_t v4 = 0x80000001006A7850;
    unint64_t v1 = 0xD00000000000001ELL;
  }
  else
  {
    unint64_t v1 = 0xD00000000000001FLL;
    unint64_t v2 = 0xD000000000000085;
    unint64_t v3 = 0x80000001006A7660;
    unint64_t v4 = 0x80000001006A7680;
  }
  return TTRLocalizedString(_:comment:)(*(Swift::String *)&v1, *(Swift::String *)&v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.keepExistingSectionsButton.getter()
{
  v0._object = (void *)0x80000001006A7710;
  v1._uint64_t countAndFlagsBits = 1885693259;
  v1._object = (void *)0xE400000000000000;
  v0._uint64_t countAndFlagsBits = 0xD000000000000084;
  return TTRLocalizedString(_:comment:)(v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert.removeExistingSectionsButton.getter()
{
  v0._object = (void *)0x80000001006A7710;
  v1._uint64_t countAndFlagsBits = 0x65766F6D6552;
  v1._object = (void *)0xE600000000000000;
  v0._uint64_t countAndFlagsBits = 0xD000000000000084;
  return TTRLocalizedString(_:comment:)(v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.hashtags.getter()
{
  v0._object = (void *)0x80000001006AE850;
  v0._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v1._uint64_t countAndFlagsBits = 1936154964;
  v1._object = (void *)0xE400000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.date.getter()
{
  v0._object = (void *)0x80000001006AEC00;
  v0._uint64_t countAndFlagsBits = 0xD000000000000017;
  v1._uint64_t countAndFlagsBits = 1702125892;
  v1._object = (void *)0xE400000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.time.getter()
{
  v0._object = (void *)0x80000001006AF600;
  v0._uint64_t countAndFlagsBits = 0xD000000000000017;
  v1._uint64_t countAndFlagsBits = 1701669204;
  v1._object = (void *)0xE400000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.priorities.getter()
{
  v0._object = (void *)0x80000001006AF260;
  v0._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v1._uint64_t countAndFlagsBits = 0x797469726F697250;
  v1._object = (void *)0xE800000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.location.getter()
{
  v0._object = (void *)0x80000001006AEDD0;
  v0._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v1._uint64_t countAndFlagsBits = 0x6E6F697461636F4CLL;
  v1._object = (void *)0xE800000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.lists.getter()
{
  v0._object = (void *)0x80000001006AEF00;
  v0._uint64_t countAndFlagsBits = 0xD000000000000018;
  v1._uint64_t countAndFlagsBits = 0x737473694CLL;
  v1._object = (void *)0xE500000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.includedFiltersMessage.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000045;
  v1._uint64_t countAndFlagsBits = 0xD000000000000194;
  v0._object = (void *)0x80000001006AF700;
  v2._object = (void *)0x80000001006AF750;
  v1._object = (void *)0x80000001006AF7A0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000044;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.enabledFiltersSectionTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v1._object = (void *)0x80000001006AEF20;
  v0._object = (void *)0x80000001006AEF50;
  v1._uint64_t countAndFlagsBits = 0xD000000000000029;
  v2._uint64_t countAndFlagsBits = 0x2064656C62616E45;
  v2._object = (void *)0xEF737265746C6946;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.makeIntoGroceryListSubtitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._uint64_t countAndFlagsBits = 0xD000000000000034;
  v2._object = (void *)0x80000001006B2010;
  v1._object = (void *)0x80000001006B2040;
  v0._object = (void *)0x80000001006B2080;
  v2._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  return TTRLocalizedString(_:value:comment:)(v2, v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.makeIntoSmartListSubtitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000029;
  v1._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v0._object = (void *)0x80000001006B1F80;
  v2._object = (void *)0x80000001006B1FB0;
  v1._object = (void *)0x80000001006B1FE0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000026;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionsRelativeRangeOrder.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000050;
  v1._uint64_t countAndFlagsBits = 0xD000000000000201;
  v0._object = (void *)0x80000001006B49A0;
  v2._object = (void *)0x80000001006B4A00;
  v1._object = (void *)0x80000001006B4A20;
  v2._uint64_t countAndFlagsBits = 0xD000000000000019;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.newListTitle.getter()
{
  v0._object = (void *)0x80000001006B60E0;
  v1._object = (void *)0x80000001006B6100;
  v0._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v2._uint64_t countAndFlagsBits = 0x7473694C2077654ELL;
  v2._object = (void *)0xE800000000000000;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.templatesTab.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x80000001006B64A0;
  v0._object = (void *)0x80000001006A8330;
  v1._uint64_t countAndFlagsBits = 0xD000000000000019;
  v2._uint64_t countAndFlagsBits = 0x6574616C706D6554;
  v2._object = (void *)0xE900000000000073;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.filterOperatorChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._uint64_t countAndFlagsBits = 0xD000000000000042;
  v0._object = (void *)0x80000001006B8340;
  v2._object = (void *)0x80000001006B8370;
  v1._object = (void *)0x80000001006B8390;
  v2._uint64_t countAndFlagsBits = 0xD000000000000016;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.dateChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000023;
  v1._uint64_t countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x80000001006B7EB0;
  v2._object = (void *)0x80000001006B7EE0;
  v1._object = (void *)0x80000001006B7F00;
  v2._uint64_t countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.timeChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000023;
  v1._uint64_t countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x80000001006B8270;
  v2._object = (void *)0x80000001006B82A0;
  v1._object = (void *)0x80000001006B82C0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.prioritiesChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000029;
  v1._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
  v0._object = (void *)0x80000001006B8130;
  v2._object = (void *)0x80000001006B8160;
  v1._object = (void *)0x80000001006B8180;
  v2._uint64_t countAndFlagsBits = 0xD000000000000018;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.flaggedChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000026;
  v1._uint64_t countAndFlagsBits = 0xD00000000000003ALL;
  v0._object = (void *)0x80000001006B81E0;
  v2._object = (void *)0x80000001006B8210;
  v1._object = (void *)0x80000001006B8230;
  v2._uint64_t countAndFlagsBits = 0xD000000000000015;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.locationChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000027;
  v1._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v0._object = (void *)0x80000001006B7FA0;
  v2._object = (void *)0x80000001006B7FD0;
  v1._object = (void *)0x80000001006B7FF0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000016;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.hashtagsChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000023;
  v1._uint64_t countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x80000001006B7D40;
  v2._object = (void *)0x80000001006B7D70;
  v1._object = (void *)0x80000001006B7D90;
  v2._uint64_t countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.listsChanged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000025;
  v1._uint64_t countAndFlagsBits = 0xD000000000000039;
  v0._object = (void *)0x80000001006B8070;
  v2._object = (void *)0x80000001006B80A0;
  v1._object = (void *)0x80000001006B80C0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000012;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.smartListHiddenTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000023;
  v1._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  v0._object = (void *)0x80000001006B7C70;
  v2._object = (void *)0x80000001006B7CA0;
  v1._object = (void *)0x80000001006B7CD0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.UndoAction.addTag.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x80000001006B7DF0;
  v0._object = (void *)0x80000001006B7E10;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x67615420646441;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listInfoTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x80000001006B8B00;
  v0._object = (void *)0x80000001006B8B20;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 0x666E49207473694CLL;
  v2._object = (void *)0xE90000000000006FLL;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listTypeTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000020;
  v1._object = (void *)0x80000001006B89D0;
  v0._object = (void *)0x80000001006B89F0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 0x707954207473694CLL;
  v2._object = (void *)0xE900000000000065;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.manageSmartListTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000023;
  v1._uint64_t countAndFlagsBits = 0xD000000000000028;
  v0._object = (void *)0x80000001006B8A20;
  v2._object = (void *)0x80000001006B8A50;
  v1._object = (void *)0x80000001006B8A70;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.smartListInfoTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000026;
  v1._object = (void *)0x80000001006B8AA0;
  v0._object = (void *)0x80000001006B8AD0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000021;
  v2._uint64_t countAndFlagsBits = 0x694C207472616D53;
  v2._object = (void *)0xEF6F666E49207473;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.makeIntoSmartListTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000026;
  v1._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v0._object = (void *)0x80000001006B88F0;
  v2._object = (void *)0x80000001006B8920;
  v1._object = (void *)0x80000001006B8940;
  v2._uint64_t countAndFlagsBits = 0xD000000000000014;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.newSmartListTitle.getter()
{
  v0._object = (void *)0x80000001006B8970;
  v1._object = (void *)0x80000001006B89A0;
  v0._uint64_t countAndFlagsBits = 0xD000000000000020;
  v2._uint64_t countAndFlagsBits = 0x72616D532077654ELL;
  v2._object = (void *)0xEE007473694C2074;
  v1._uint64_t countAndFlagsBits = 0xD000000000000020;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.templateInfoTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000024;
  v1._object = (void *)0x80000001006B88A0;
  v0._object = (void *)0x80000001006B88C0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x6574616C706D6554;
  v2._object = (void *)0xED00006F666E4920;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateRangeFromLabel.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001006BC880;
  v0._object = (void *)0x80000001006BC8A0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 1836020294;
  v2._object = (void *)0xE400000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateRangeToLabel.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x80000001006BC8E0;
  v0._object = (void *)0x80000001006BC900;
  v1._uint64_t countAndFlagsBits = 0xD000000000000019;
  v2._uint64_t countAndFlagsBits = 28500;
  v2._object = (void *)0xE200000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.anyIncludedFiltersOption.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000045;
  v1._object = (void *)0x80000001006AF620;
  v0._object = (void *)0x80000001006AF640;
  v1._uint64_t countAndFlagsBits = 0xD000000000000016;
  v2._uint64_t countAndFlagsBits = 7958113;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.allIncludedFiltersOption.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000044;
  v1._object = (void *)0x80000001006AF690;
  v0._object = (void *)0x80000001006AF6B0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000016;
  v2._uint64_t countAndFlagsBits = 7105633;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000029;
  v1._object = (void *)0x80000001006AE640;
  v0._object = (void *)0x80000001006AE660;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionAny.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x80000001006AE690;
  v0._object = (void *)0x80000001006AE6B0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v2._uint64_t countAndFlagsBits = 0x67615420796E41;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionAnySelected.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000023;
  v1._uint64_t countAndFlagsBits = 0xD000000000000037;
  v0._object = (void *)0x80000001006AE6E0;
  v2._object = (void *)0x80000001006AE710;
  v1._object = (void *)0x80000001006AE730;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionAllSelected.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000022;
  v1._uint64_t countAndFlagsBits = 0xD000000000000038;
  v0._object = (void *)0x80000001006AE770;
  v2._object = (void *)0x80000001006AE7A0;
  v1._object = (void *)0x80000001006AE7C0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.hashtagOptionUntagged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x80000001006AE800;
  v0._object = (void *)0x80000001006AE820;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x73676154206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x80000001006AE8A0;
  v0._object = (void *)0x80000001006AE8C0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionAny.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x80000001006AE8F0;
  v0._object = (void *)0x80000001006AE910;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionToday.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x80000001006AE940;
  v0._object = (void *)0x80000001006AE960;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v2._uint64_t countAndFlagsBits = 0x7961646F54;
  v2._object = (void *)0xE500000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionOnDate.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001006AE990;
  v0._object = (void *)0x80000001006AE9B0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x7461442061206E4FLL;
  v2._object = (void *)0xE900000000000065;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionBeforeDate.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000034;
  v1._object = (void *)0x80000001006AE9F0;
  v0._object = (void *)0x80000001006AEA20;
  v1._uint64_t countAndFlagsBits = 0xD000000000000023;
  v2._uint64_t countAndFlagsBits = 0x612065726F666542;
  v2._object = (void *)0xED00006574614420;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionAfterDate.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000033;
  v1._object = (void *)0x80000001006AEA60;
  v0._object = (void *)0x80000001006AEA90;
  v1._uint64_t countAndFlagsBits = 0xD000000000000022;
  v2._uint64_t countAndFlagsBits = 0x2061207265746641;
  v2._object = (void *)0xEC00000065746144;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionSpecifiedRange.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x80000001006AEAD0;
  v0._object = (void *)0x80000001006AEB00;
  v1._uint64_t countAndFlagsBits = 0xD000000000000027;
  v2._uint64_t countAndFlagsBits = 0x6569666963657053;
  v2._object = (void *)0xEF65676E61522064;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionRelativeRange.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000035;
  v1._object = (void *)0x80000001006AEB40;
  v0._object = (void *)0x80000001006AEB70;
  v1._uint64_t countAndFlagsBits = 0xD000000000000026;
  v2._uint64_t countAndFlagsBits = 0x65766974616C6552;
  v2._object = (void *)0xEE0065676E615220;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.dateOptionNoDate.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x80000001006AEBB0;
  v0._object = (void *)0x80000001006AEBD0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x65746144206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x80000001006AF3B0;
  v0._object = (void *)0x80000001006AF3D0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionAny.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v1._object = (void *)0x80000001006AF400;
  v0._object = (void *)0x80000001006AF420;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v2._uint64_t countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionMorning.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x80000001006AF450;
  v0._object = (void *)0x80000001006AF470;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x676E696E726F4DLL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionAfternoon.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001006AF4A0;
  v0._object = (void *)0x80000001006AF4D0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000021;
  v2._uint64_t countAndFlagsBits = 0x6F6F6E7265746641;
  v2._object = (void *)0xE90000000000006ELL;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionEvening.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x80000001006AF510;
  v0._object = (void *)0x80000001006AF530;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 0x676E696E657645;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionNight.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x80000001006AF560;
  v0._object = (void *)0x80000001006AF580;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v2._uint64_t countAndFlagsBits = 0x746867694ELL;
  v2._object = (void *)0xE500000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.timeOptionNoTime.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x80000001006AF5B0;
  v0._object = (void *)0x80000001006AF5D0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v2._uint64_t countAndFlagsBits = 0x656D6954206F4ELL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001006AEFC0;
  v0._object = (void *)0x80000001006AEFF0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000021;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionAny.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001006AF030;
  v0._object = (void *)0x80000001006AF060;
  v1._uint64_t countAndFlagsBits = 0xD000000000000021;
  v2._uint64_t countAndFlagsBits = 7958081;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionLow.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v1._object = (void *)0x80000001006AF0A0;
  v0._object = (void *)0x80000001006AF0D0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000021;
  v2._uint64_t countAndFlagsBits = 7827276;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionMedium.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000033;
  v1._object = (void *)0x80000001006AF110;
  v0._object = (void *)0x80000001006AF140;
  v1._uint64_t countAndFlagsBits = 0xD000000000000024;
  v2._uint64_t countAndFlagsBits = 0x6D756964654DLL;
  v2._object = (void *)0xE600000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionHigh.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000031;
  v1._object = (void *)0x80000001006AF180;
  v0._object = (void *)0x80000001006AF1B0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000022;
  v2._uint64_t countAndFlagsBits = 1751607624;
  v2._object = (void *)0xE400000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.prioritiesOptionNoPriority.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000038;
  v1._object = (void *)0x80000001006AF1F0;
  v0._object = (void *)0x80000001006AF220;
  v1._uint64_t countAndFlagsBits = 0xD000000000000029;
  v2._uint64_t countAndFlagsBits = 0x726F697250206F4ELL;
  v2._object = (void *)0xEB00000000797469;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.flaggedOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v1._object = (void *)0x80000001006AF280;
  v0._object = (void *)0x80000001006AF2A0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.flaggedOptionFlagged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000031;
  v1._object = (void *)0x80000001006AF2D0;
  v0._object = (void *)0x80000001006AF300;
  v1._uint64_t countAndFlagsBits = 0xD000000000000022;
  v2._uint64_t countAndFlagsBits = 0x64656767616C46;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.flaggedOptionNotFlagged.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000035;
  v1._object = (void *)0x80000001006AF340;
  v0._object = (void *)0x80000001006AF370;
  v1._uint64_t countAndFlagsBits = 0xD000000000000026;
  v2._uint64_t countAndFlagsBits = 0x67616C4620746F4ELL;
  v2._object = (void *)0xEB00000000646567;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
  v1._object = (void *)0x80000001006AECA0;
  v0._object = (void *)0x80000001006AECC0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationOptionSpecific.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000033;
  v1._object = (void *)0x80000001006AECF0;
  v0._object = (void *)0x80000001006AED20;
  v1._uint64_t countAndFlagsBits = 0xD000000000000024;
  v2._uint64_t countAndFlagsBits = 0x6369666963657053;
  v2._object = (void *)0xE800000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationOptionNoLocation.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000036;
  v1._object = (void *)0x80000001006AED60;
  v0._object = (void *)0x80000001006AED90;
  v1._uint64_t countAndFlagsBits = 0xD000000000000027;
  v2._uint64_t countAndFlagsBits = 0x7461636F4C206F4ELL;
  v2._object = (void *)0xEB000000006E6F69;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listsOptionOff.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v1._object = (void *)0x80000001006AEDF0;
  v0._object = (void *)0x80000001006AEE10;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v2._uint64_t countAndFlagsBits = 6710863;
  v2._object = (void *)0xE300000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listsOptionInclude.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v1._object = (void *)0x80000001006AEE40;
  v0._object = (void *)0x80000001006AEE70;
  v1._uint64_t countAndFlagsBits = 0xD000000000000020;
  v2._uint64_t countAndFlagsBits = 0x6564756C636E49;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.listsOptionExclude.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v1._object = (void *)0x80000001006AEEA0;
  v0._object = (void *)0x80000001006AEED0;
  v1._uint64_t countAndFlagsBits = 0xD000000000000020;
  v2._uint64_t countAndFlagsBits = 0x6564756C637845;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationArriving.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x80000001006C06A0;
  v0._object = (void *)0x80000001006C06C0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v2._uint64_t countAndFlagsBits = 0x676E697669727241;
  v2._object = (void *)0xE800000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.locationLeaving.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
  v1._object = (void *)0x80000001006C06F0;
  v0._object = (void *)0x80000001006C0710;
  v1._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  v2._uint64_t countAndFlagsBits = 0x676E697661654CLL;
  v2._object = (void *)0xE700000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.newInfoTitle(name:)(uint64_t a1, uint64_t a2)
{
  v4._object = (void *)0x80000001006C0740;
  v5._object = (void *)0x80000001006C0760;
  v4._uint64_t countAndFlagsBits = 0xD000000000000016;
  v6._uint64_t countAndFlagsBits = 0x9D80E240259C80E2;
  v6._object = (void *)0xAD00006F666E4920;
  v5._uint64_t countAndFlagsBits = 0xD000000000000016;
  TTRLocalizedString(_:value:comment:)(v4, v6, v5);
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10066C6F0;
  *(void *)(v7 + 56) = &type metadata for String;
  *(void *)(v7 + 64) = sub_1000965C8();
  *(void *)(v7 + 32) = a1;
  *(void *)(v7 + 40) = a2;
  swift_bridgeObjectRetain();
  uint64_t v8 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO22enabledFiltersSubtitle5countSSSi_tFZ_0(uint64_t a1)
{
  id v2 = *(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
  v3._uint64_t countAndFlagsBits = 0xD000000000000012;
  v4._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v9._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v9._object = (void *)0x80000001006C12A0;
  v4._object = (void *)0x80000001006C1260;
  v5.value._object = (void *)0x80000001006C0BC0;
  v3._object = (void *)0x80000001006C1280;
  v5.value._uint64_t countAndFlagsBits = 0xD000000000000011;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, v5, (NSBundle)v2, v3, v9);

  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10066C6F0;
  *(void *)(v6 + 56) = &type metadata for Int;
  *(void *)(v6 + 64) = &protocol witness table for Int;
  *(void *)(v6 + 32) = a1;
  uint64_t v7 = static String.localizedStringWithFormat(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO30dateOptionRelativeRangeDetailsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_1007ABC20);
  __chkstk_darwin(v0);
  id v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter();
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter();
  uint64_t v11 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v2, v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v6, v3);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v7);
  if (v12 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:))
  {
    int v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v11, v3);
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      objc_super v18 = "In the Past %d Hours";
LABEL_7:
      unint64_t v20 = (unint64_t)(v18 - 32) | 0x8000000000000000;
      unint64_t v21 = 0xD000000000000014;
      v22.super.Class isa = v14;
      unint64_t v23 = 0xD000000000000014;
LABEL_13:
      unint64_t v25 = v20;
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v21, *(Swift::String_optional *)&v15, v22, *(Swift::String *)&v23, *(Swift::String *)&v16);

      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10066C6F0;
      uint64_t v27 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter();
      *(void *)(v26 + 56) = &type metadata for Int;
      *(void *)(v26 + 64) = &protocol witness table for Int;
      *(void *)(v26 + 32) = v27;
      uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v28;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v21 = 0xD000000000000013;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      uint64_t v24 = "In the Past %d Days";
LABEL_12:
      unint64_t v20 = (unint64_t)(v24 - 32) | 0x8000000000000000;
      v22.super.Class isa = v14;
      unint64_t v23 = v21;
      goto LABEL_13;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      objc_super v18 = "In the Past %d Weeks";
      goto LABEL_7;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v21 = 0xD000000000000015;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      uint64_t v24 = "In the Past %d Months";
      goto LABEL_12;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      objc_super v18 = "In the Past %d Years";
      goto LABEL_7;
    }
  }
  else if (v12 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    int v19 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v11, v3);
    if (v19 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      objc_super v18 = "In the Next %d Hours";
      goto LABEL_7;
    }
    if (v19 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v21 = 0xD000000000000013;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      uint64_t v24 = "In the Next %d Days";
      goto LABEL_12;
    }
    if (v19 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      objc_super v18 = "In the Next %d Weeks";
      goto LABEL_7;
    }
    if (v19 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v21 = 0xD000000000000015;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      uint64_t v24 = "In the Next %d Months";
      goto LABEL_12;
    }
    if (v19 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0xD000000000000022;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = 0x80000001006C0BC0;
      objc_super v18 = "In the Next %d Years";
      goto LABEL_7;
    }
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

id _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO05smartE14VersionWarningSo18NSAttributedStringCvgZ_0()
{
  v0._object = (void *)0x80000001006C1120;
  v1._object = (void *)0x80000001006C1170;
  v0._uint64_t countAndFlagsBits = 0x1000000000000047;
  v1._uint64_t countAndFlagsBits = 0xD000000000000056;
  TTRLocalizedString(_:comment:)(v0, v1);
  v2._uint64_t countAndFlagsBits = 0x100000000000008ELL;
  v2._object = (void *)0x80000001006C11D0;
  v3._uint64_t countAndFlagsBits = 0x6F6D206E7261654CLL;
  v3._object = (void *)0xAD0000A680E26572;
  Swift::String v4 = TTRLocalizedString(_:comment:)(v3, v2);
  id v5 = objc_allocWithZone((Class)NSMutableAttributedString);
  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithString:v6];

  __C::_NSRange_optional v12 = String.nsRange(of:)(v4);
  Swift::Int location = v12.value.location;
  Swift::Int length = v12.value.length;
  LOBYTE(v6) = v12.is_nil;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    [v7 addAttribute:NSLinkAttributeName value:v10 range:location, length];
  }
  return v7;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO32dateOptionRelativeRangeDirectionySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_1007ABC20);
  __chkstk_darwin(v0);
  Swift::String v2 = (char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  NSString v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter();
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter();
  uint64_t v11 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v2, v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v6, v3);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v7);
  if (v12 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:))
  {
    int v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v11, v3);
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002ALL;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d HOURS";
LABEL_21:
      unint64_t v21 = (unint64_t)(v17 - 32) | 0x8000000000000000;
      unint64_t v22 = 0x80000001006C0D60;
      v23.super.Class isa = v14;
      uint64_t v24 = 0x5020656874206E49;
      unint64_t v19 = 0xEB00000000747361;
LABEL_25:
      unint64_t v25 = 0xD000000000000022;
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v16, *(Swift::String_optional *)&v15, v23, *(Swift::String *)(&v19 - 1), *(Swift::String *)(&v30 - 1));

      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_10066C6F0;
      uint64_t v27 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter();
      *(void *)(v26 + 56) = &type metadata for Int;
      *(void *)(v26 + 64) = &protocol witness table for Int;
      *(void *)(v26 + 32) = v27;
      uint64_t v28 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v28;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD000000000000029;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d DAYS";
      goto LABEL_21;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002ALL;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d WEEKS";
      goto LABEL_21;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002BLL;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d MONTHS";
      goto LABEL_21;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002ALL;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_DIRECTION_IN_THE_PAST %d YEARS";
      goto LABEL_21;
    }
  }
  else if (v12 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v11, v3);
    if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002ALL;
      unint64_t v19 = 0xEB00000000747865;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v20 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d HOURS";
    }
    else if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD000000000000029;
      unint64_t v19 = 0xEB00000000747865;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v20 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d DAYS";
    }
    else if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002ALL;
      unint64_t v19 = 0xEB00000000747865;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v20 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d WEEKS";
    }
    else if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002BLL;
      unint64_t v19 = 0xEB00000000747865;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v20 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d MONTHS";
    }
    else
    {
      if (v18 != enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:)) {
        goto LABEL_26;
      }
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000027;
      unint64_t v16 = 0xD00000000000002ALL;
      unint64_t v19 = 0xEB00000000747865;
      unint64_t v30 = 0x80000001006C0BE0;
      unint64_t v20 = "LIST_DETAIL_DIRECTION_IN_THE_NEXT %d YEARS";
    }
    unint64_t v21 = (unint64_t)(v20 - 32) | 0x8000000000000000;
    unint64_t v22 = 0x80000001006C0D60;
    v23.super.Class isa = v14;
    uint64_t v24 = 0x4E20656874206E49;
    goto LABEL_25;
  }
LABEL_26:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO28dateOptionRelativeRangeUnitsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_1007ABC20);
  __chkstk_darwin(v0);
  Swift::String v2 = (char *)&v35 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  NSString v6 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  NSString v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter();
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter();
  uint64_t v11 = &v2[*(int *)(v0 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v2, v10, v7);
  (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v11, v6, v3);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v8 + 88))(v2, v7);
  if (v12 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:))
  {
    int v13 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v11, v3);
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000026;
      unint64_t v34 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_UNITS_IN_THE_PAST %d HOURS";
LABEL_7:
      unint64_t v19 = (unint64_t)(v17 - 32) | 0x8000000000000000;
      unint64_t v20 = 0x80000001006C0D60;
      unint64_t v21 = 0xD000000000000027;
      v22.super.Class isa = v14;
      uint64_t v23 = 1920298824;
LABEL_8:
      unint64_t v24 = v23 & 0xFFFF0000FFFFFFFFLL | 0x7300000000;
      unint64_t v25 = 0xE500000000000000;
LABEL_14:
      NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v16, *(Swift::String_optional *)&v21, v22, *(Swift::String *)&v24, *(Swift::String *)&v15);

      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_10066C6F0;
      uint64_t v28 = REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter();
      *(void *)(v27 + 56) = &type metadata for Int;
      *(void *)(v27 + 64) = &protocol witness table for Int;
      *(void *)(v27 + 32) = v28;
      uint64_t v29 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v29;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000025;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v26 = "LIST_DETAIL_UNITS_IN_THE_PAST %d DAYS";
LABEL_13:
      unint64_t v19 = (unint64_t)(v26 - 32) | 0x8000000000000000;
      unint64_t v20 = 0x80000001006C0D60;
      unint64_t v21 = 0xD000000000000027;
      v22.super.Class isa = v14;
      unint64_t v24 = 1937334596;
      unint64_t v25 = 0xE400000000000000;
      goto LABEL_14;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000026;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v31 = "LIST_DETAIL_UNITS_IN_THE_PAST %d WEEKS";
LABEL_19:
      unint64_t v19 = (unint64_t)(v31 - 32) | 0x8000000000000000;
      unint64_t v20 = 0x80000001006C0D60;
      unint64_t v21 = 0xD000000000000027;
      v22.super.Class isa = v14;
      uint64_t v23 = 1801807191;
      goto LABEL_8;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v32 = "LIST_DETAIL_UNITS_IN_THE_PAST %d MONTHS";
LABEL_24:
      unint64_t v19 = (unint64_t)(v32 - 32) | 0x8000000000000000;
      unint64_t v20 = 0x80000001006C0D60;
      unint64_t v16 = 0xD000000000000027;
      unint64_t v21 = 0xD000000000000027;
      v22.super.Class isa = v14;
      unint64_t v24 = 0x7368746E6F4DLL;
      unint64_t v25 = 0xE600000000000000;
      goto LABEL_14;
    }
    if (v13 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000026;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v33 = "LIST_DETAIL_UNITS_IN_THE_PAST %d YEARS";
LABEL_29:
      unint64_t v19 = (unint64_t)(v33 - 32) | 0x8000000000000000;
      unint64_t v20 = 0x80000001006C0D60;
      unint64_t v21 = 0xD000000000000027;
      v22.super.Class isa = v14;
      uint64_t v23 = 1918985561;
      goto LABEL_8;
    }
  }
  else if (v12 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    int v18 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v11, v3);
    if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000026;
      unint64_t v34 = 0x80000001006C0BE0;
      unint64_t v17 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d HOURS";
      goto LABEL_7;
    }
    if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000025;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v26 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d DAYS";
      goto LABEL_13;
    }
    if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000026;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v31 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d WEEKS";
      goto LABEL_19;
    }
    if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v32 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d MONTHS";
      goto LABEL_24;
    }
    if (v18 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:))
    {
      uint64_t v14 = (objc_class *)*(id *)NSBundle.remindersUICoreResource.unsafeMutableAddressor();
      unint64_t v15 = 0xD000000000000022;
      unint64_t v16 = 0xD000000000000026;
      unint64_t v34 = 0x80000001006C0BE0;
      uint64_t v33 = "LIST_DETAIL_UNITS_IN_THE_NEXT %d YEARS";
      goto LABEL_29;
    }
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO05smartE21HiddenInformativeText7devicesSSSaySS4name_Sb15cannotBeUpdatedtG_tFZ_0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    sub_1004D35AC(0, v2, 0);
    uint64_t v3 = (unsigned __int8 *)(a1 + 48);
    int64_t v34 = v2;
    int64_t v4 = v2;
    do
    {
      uint64_t v6 = *((void *)v3 - 2);
      uint64_t v5 = *((void *)v3 - 1);
      int v7 = *v3;
      swift_bridgeObjectRetain();
      if (v7 == 1)
      {
        v8._uint64_t countAndFlagsBits = 0xD000000000000060;
        v9._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
        v9._object = (void *)0x80000001006C0AF0;
        v10._uint64_t countAndFlagsBits = 2768933;
        v10._object = (void *)0xE300000000000000;
        v8._object = (void *)0x80000001006C0B30;
        TTRLocalizedString(_:value:comment:)(v9, v10, v8);
        sub_10003B754((uint64_t *)&unk_100788EE0);
        uint64_t v11 = swift_allocObject();
        *(_OWORD *)(v11 + 16) = xmmword_10066C6F0;
        *(void *)(v11 + 56) = &type metadata for String;
        *(void *)(v11 + 64) = sub_1000965C8();
        *(void *)(v11 + 32) = v6;
        *(void *)(v11 + 40) = v5;
        swift_bridgeObjectRetain();
        uint64_t v6 = static String.localizedStringWithFormat(_:_:)();
        uint64_t v13 = v12;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v5 = v13;
      }
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      unint64_t v16 = v15 + 1;
      if (v15 >= v14 >> 1) {
        sub_1004D35AC(v14 > 1, v15 + 1, 1);
      }
      v3 += 24;
      _swiftEmptyArrayStorage[2] = v16;
      unint64_t v17 = &_swiftEmptyArrayStorage[2 * v15];
      v17[4] = v6;
      v17[5] = v5;
      --v4;
    }
    while (v4);
    int64_t v2 = v34;
  }
  else
  {
    unint64_t v16 = _swiftEmptyArrayStorage[2];
  }
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v18 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v20 = v19;
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    goto LABEL_19;
  }
  if (*(unsigned char *)(a1 + 48))
  {
LABEL_12:
    if (v16 == 1)
    {
      uint64_t v22 = 0x1000000000000087;
      unint64_t v23 = 0xD000000000000049;
      unint64_t v24 = 0x80000001006C0A10;
      unint64_t v25 = "To view this Smart List everywhere, you’ll need to install the latest OS on the following device:\n"
            "\n"
            "%@\n"
            "\n"
            "* Device can’t be upgraded.\n";
    }
    else
    {
      uint64_t v22 = 0x1000000000000088;
      unint64_t v23 = 0xD000000000000047;
      unint64_t v24 = 0x80000001006C0930;
      unint64_t v25 = "To view this Smart List everywhere, you’ll need to install the latest OS on the following devices:\n"
            "\n"
            "%@\n"
            "\n"
            "* Device can’t be upgraded.\n";
    }
    goto LABEL_23;
  }
  if (v2 == 1)
  {
LABEL_19:
    if (v16 == 1)
    {
      unint64_t v23 = 0xD000000000000037;
      unint64_t v24 = 0x80000001006C0880;
      unint64_t v29 = 0x80000001006C08C0;
      unint64_t v30 = 0x80000001006C0830;
      uint64_t v22 = 0x1000000000000068;
LABEL_24:
      unint64_t v31 = 0xD000000000000046;
      TTRLocalizedString(_:value:comment:)(*(Swift::String *)&v23, *(Swift::String *)&v22, *(Swift::String *)(&v30 - 1));
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_10066C6F0;
      *(void *)(v32 + 56) = &type metadata for String;
      *(void *)(v32 + 64) = sub_1000965C8();
      *(void *)(v32 + 32) = v18;
      *(void *)(v32 + 40) = v20;
      uint64_t v33 = static String.localizedStringWithFormat(_:_:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v33;
    }
    uint64_t v22 = 0x1000000000000069;
    unint64_t v23 = 0xD000000000000035;
    unint64_t v24 = 0x80000001006C0780;
    unint64_t v25 = "To view this Smart List everywhere, you’ll need to install the latest OS on the following devices:\n\n%@\n";
LABEL_23:
    unint64_t v29 = (unint64_t)(v25 - 32) | 0x8000000000000000;
    unint64_t v30 = 0x80000001006C0830;
    goto LABEL_24;
  }
  uint64_t v26 = (unsigned char *)(a1 + 72);
  uint64_t v27 = 1;
  while (1)
  {
    uint64_t v28 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (*v26) {
      goto LABEL_12;
    }
    ++v27;
    v26 += 24;
    if (v28 == v2) {
      goto LABEL_19;
    }
  }
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail()
{
  return &type metadata for TTRLocalizableStrings.ListDetail;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail.UndoAction()
{
  return &type metadata for TTRLocalizableStrings.ListDetail.UndoAction;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail.Filters()
{
  return &type metadata for TTRLocalizableStrings.ListDetail.Filters;
}

ValueMetadata *type metadata accessor for TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert()
{
  return &type metadata for TTRLocalizableStrings.ListDetail.ConvertGroceryListToRegularListAlert;
}

uint64_t sub_100602034(uint64_t a1, uint64_t a2)
{
  return sub_100603D0C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)a2, *(unsigned char *)(a2 + 8), *(void *)(a2 + 16), *(void *)(a2 + 24));
}

unint64_t sub_100602060(uint64_t a1)
{
  uint64_t v3 = *(char **)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView);
  id v4 = [v3 subviews];
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v6) {
    sub_100602278(a1);
  }
  int v7 = (char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78);
  swift_beginAccess();
  char v8 = v7[8];
  Swift::String v9 = &v3[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
  *(void *)Swift::String v9 = *(void *)v7;
  v9[8] = v8;
  unint64_t result = (unint64_t)sub_1002DD2A8();
  unint64_t v11 = result;
  if (!(result >> 62))
  {
    uint64_t v12 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v12) {
      goto LABEL_7;
    }
    return swift_bridgeObjectRelease();
  }
  unint64_t result = _CocoaArrayWrapper.endIndex.getter();
  uint64_t v12 = result;
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_7:
  if (v12 >= 1)
  {
    for (uint64_t i = 0; i != v12; ++i)
    {
      if ((v11 & 0xC000000000000001) != 0) {
        unint64_t v14 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unint64_t v14 = *(id *)(v11 + 8 * i + 32);
      }
      unint64_t v15 = v14;
      (*(void (**)(void))((swift_isaMask & *v14) + 0x1B8))((i == *(void *)v9) & ~v9[8]);
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

void sub_100602278(uint64_t a1)
{
  id v2 = [self quaternarySystemFillColor];
  uint64_t v3 = *(void **)TTRCommonAsset.Color.emblemPickerForeground.unsafeMutableAddressor();
  id v4 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView);
  *(void *)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView) = 0;
  id v5 = v3;

  uint64_t v6 = a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex;
  *(void *)uint64_t v6 = 0;
  *(unsigned char *)(v6 + 8) = 1;
  v9[2] = v2;
  v9[3] = v5;
  v9[4] = a1;
  uint64_t v7 = swift_bridgeObjectRetain();
  unint64_t v8 = (unint64_t)sub_100603D98(v7, (void (*)(uint64_t, id, uint64_t, uint64_t, id))sub_100604044, (uint64_t)v9);
  swift_bridgeObjectRelease();
  if (v8 >> 62)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    swift_bridgeObjectRetain();
    _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
  }
  swift_bridgeObjectRelease();
  TTRListAppearanceGridView.arrangedSubviews.setter();
}

uint64_t sub_100602404(uint64_t a1)
{
  *(void *)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate + 8) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_10060241C(uint64_t a1)
{
  *(void *)(a1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate + 8) = &off_1007545E0;
  return swift_unknownObjectWeakAssign();
}

void *sub_10060243C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8)
{
  unint64_t v15 = [objc_allocWithZone((Class)type metadata accessor for TTRListBadgeView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  unint64_t v16 = v15;
  if (a5)
  {
    [v15 setTintColor:a6];
  }
  else
  {
    unint64_t v17 = (void *)UIColor.emojiBadgeSelectionBackgroundColor.unsafeMutableAddressor();
    swift_beginAccess();
    [v16 setTintColor:*v17];

    uint64_t v18 = (void **)UIColor.emojiBadgeHighlightColor.unsafeMutableAddressor();
    swift_beginAccess();
    a7 = *v18;
  }
  uint64_t v19 = *(void (**)(void *))((swift_isaMask & *v16) + 0x188);
  id v20 = a7;
  v19(a7);
  unint64_t v21 = *(void (**)(void *))((swift_isaMask & *v16) + 0x140);
  id v22 = a2;
  v21(a2);
  unint64_t v23 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v16) + 0x390);
  swift_bridgeObjectRetain();
  v23(a3, a4);
  (*(void (**)(uint64_t))((swift_isaMask & *v16) + 0x3C0))(1);
  TTRListBadgeView.enableCursorInteraction()();
  if (qword_100785760 != -1) {
    swift_once();
  }
  TTRListBadgeView.enableHoverEffectIfApplicable(padding:)();
  unint64_t v24 = *(void **)(a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView);
  v32[3] = type metadata accessor for TTRListAppearanceBadgeGridView();
  v32[4] = &off_100742580;
  v32[0] = v24;
  unint64_t v25 = *(void (**)(void *))((swift_isaMask & *v16) + 0x3E8);
  id v26 = v24;
  v25(v32);
  if (!a5)
  {
    uint64_t v27 = *(void **)(a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView);
    *(void *)(a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView) = v16;
    uint64_t v28 = v16;

    uint64_t v29 = a8 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex;
    *(void *)uint64_t v29 = a1;
    *(unsigned char *)(v29 + 8) = 0;
  }
  return v16;
}

uint64_t sub_100602748()
{
  sub_1000499C4(*(void *)(v0 + qword_1007ABC30));
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t sub_10060279C(uint64_t a1)
{
  sub_1000499C4(*(void *)(a1 + qword_1007ABC30));
  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

uint64_t type metadata accessor for TTRIListDetailEmblemsContent()
{
  uint64_t result = qword_1007ABC70;
  if (!qword_1007ABC70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100602848()
{
  return swift_initClassMetadata2();
}

void sub_1006028A4()
{
}

uint64_t sub_1006028D4()
{
  return type metadata accessor for TTRIListDetailEmblemsContent();
}

void sub_1006028DC()
{
  qword_1007BBD38 = 0x4024000000000000;
}

id sub_1006028EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView] = 0;
  uint64_t v7 = &v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  *(void *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField] = 0;
  swift_unknownObjectWeakInit();
  v3[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected] = 0;
  id v8 = objc_allocWithZone((Class)type metadata accessor for TTRListAppearanceBadgeGridView());
  Swift::String v9 = v3;
  id v10 = [v8 initWithFrame:0.0, 0.0, 0.0, 0.0];
  TTRListAppearanceGridView.badgeSize.setter();
  id v11 = v10;
  TTRListAppearanceGridView.horizontalMargins.setter();

  id v12 = v11;
  TTRListAppearanceGridView.topMargin.setter();

  uint64_t v13 = qword_100785760;
  id v14 = v12;
  if (v13 != -1) {
    swift_once();
  }
  TTRListAppearanceGridView.minimumGap.setter();

  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v9[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView] = v14;
  unint64_t v15 = (char *)v14;

  if (a3)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v44.receiver = v9;
  v44.super_class = ObjectType;
  id v17 = [super initWithStyle:a1 reuseIdentifier:v16];

  *(void *)&v15[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate + 8] = &off_1007545C8;
  swift_unknownObjectWeakAssign();
  id v18 = v17;
  id v19 = [v18 contentView];
  [v19 addSubview:v15];

  id v20 = self;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_10066C4F0;
  id v22 = [v18 contentView];
  id v23 = [v22 leadingAnchor];

  id v24 = [v15 leadingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v21 + 32) = v25;
  id v26 = [v18 contentView];
  id v27 = [v26 trailingAnchor];

  id v28 = [v15 trailingAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v21 + 40) = v29;
  id v30 = [v18 contentView];
  id v31 = [v30 topAnchor];

  id v32 = [v15 topAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  *(void *)(v21 + 48) = v33;
  id v34 = [v18 contentView];
  id v35 = [v34 bottomAnchor];

  id v36 = [v15 bottomAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  *(void *)(v21 + 56) = v37;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v20 activateConstraints:isa];

  [v15 setAccessibilityContainerType:4];
  uint64_t v39 = v15;
  v40._object = (void *)0x80000001006C1490;
  v41._uint64_t countAndFlagsBits = 0x736E6F6349;
  v41._object = (void *)0xE500000000000000;
  v40._uint64_t countAndFlagsBits = 0xD000000000000040;
  TTRLocalizedString(_:comment:)(v41, v40);
  NSString v42 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v39 setAccessibilityLabel:v42];

  return v18;
}

id sub_100602EF0()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField);
  }
  else
  {
    id v4 = sub_100602F54(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_100602F54(uint64_t a1)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t Strong = 0;
  }
  id v3 = [objc_allocWithZone((Class)type metadata accessor for EmojiTextField()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v3 setDelegate:a1];
  if (Strong) {
    [Strong addSubview:v3];
  }
  [v3 setKeyboardType:124];
  [v3 setBorderStyle:0];
  [v3 setAlpha:0.0];
  [v3 setBackgroundColor:0];
  [v3 setForceDisableDictation:1];
  [v3 setTextAlignment:1];

  return v3;
}

void sub_10060308C()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    if (Strong)
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected) = 0;
      id v2 = (void *)swift_unknownObjectWeakLoadStrong();
      if (!v2) {
        id v2 = sub_100603218(Strong, v0);
      }
      id v3 = sub_100602EF0();
      [Strong insertSubview:v3 belowSubview:v2];

      id v4 = sub_100602EF0();
      [v4 setHidden:0];

      sub_1006033A0();
      id v5 = sub_100602EF0();
      NSString v6 = String._bridgeToObjectiveC()();
      [v5 setText:v6];

      id v7 = sub_100602EF0();
      type metadata accessor for EmojiTextField();
      UITextInput<>.ttrBeginEditing()();

      LODWORD(v7) = UIAccessibilityLayoutChangedNotification;
      id v8 = (id)TTRIAccessibilityKeyboardWindow();
      UIAccessibilityPostNotification((UIAccessibilityNotifications)v7, v8);
    }
  }
}

id sub_100603218(void *a1, uint64_t a2)
{
  [a1 bounds];
  id v8 = [objc_allocWithZone((Class)UIView) initWithFrame:v4, v5, v6, v7];
  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v8 setBackgroundColor:0];
  id v9 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:a2 action:"cancelEmojiSelection"];
  [v8 addGestureRecognizer:v9];
  [a1 addSubview:v8];
  id v10 = self;
  UIView.constraintsEqualTo(_:edges:)();
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 activateConstraints:isa];

  swift_unknownObjectWeakAssign();
  return v8;
}

void sub_1006033A0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView);
  if (v1)
  {
    id v25 = v1;
    id v2 = sub_100602EF0();
    unsigned __int8 v3 = [v2 isHidden];

    if ((v3 & 1) == 0)
    {
      id v4 = sub_100602EF0();
      id v5 = [v4 superview];

      if (v5)
      {
        [v25 bounds];
        [v5 convertRect:v25 fromCoordinateSpace:];
        CGFloat v7 = v6;
        CGFloat v9 = v8;
        CGFloat v11 = v10;
        CGFloat v13 = v12;

        id v14 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v25) + 0x210))();
        double v16 = v15;

        v27.origin.double x = v7;
        v27.origin.double y = v9;
        v27.size.double width = v11;
        v27.size.double height = v13;
        CGRect v28 = CGRectInset(v27, -(v16 + 3.0), -(v16 + 3.0));
        double x = v28.origin.x;
        double y = v28.origin.y;
        double width = v28.size.width;
        double height = v28.size.height;
        id v21 = sub_100602EF0();
        [v21 setFrame:x, y, width, height];

        id v22 = sub_100602EF0();
        id v23 = self;
        v29.origin.double x = x;
        v29.origin.double y = y;
        v29.size.double width = width;
        v29.size.double height = height;
        id v24 = [v23 systemFontOfSize:round(CGRectGetHeight(v29))];
        [v22 setFont:v24];
      }
    }
  }
}

unint64_t sub_1006035DC()
{
  id v1 = sub_100602EF0();
  [v1 resignFirstResponder];

  id v2 = sub_100602EF0();
  [v2 setHidden:1];

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = Strong;
    [Strong removeFromSuperview];
  }
  swift_unknownObjectWeakAssign();
  unint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    double v6 = (void *)result;
    CGFloat v7 = *(char **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_gridView);
    id v8 = [v7 subviews];
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (!v10) {
      sub_100602278(v0);
    }
    CGFloat v11 = (char *)v6 + *(void *)((swift_isaMask & *v6) + 0x78);
    swift_beginAccess();
    char v12 = v11[8];
    CGFloat v13 = &v7[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
    *(void *)CGFloat v13 = *(void *)v11;
    v13[8] = v12;
    unint64_t result = (unint64_t)sub_1002DD2A8();
    unint64_t v14 = result;
    if (result >> 62)
    {
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v15 = result;
      if (result) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v15 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v15)
      {
LABEL_10:
        if (v15 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v15; ++i)
        {
          if ((v14 & 0xC000000000000001) != 0) {
            id v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v17 = *(id *)(v14 + 8 * i + 32);
          }
          id v18 = v17;
          (*(void (**)(void))((swift_isaMask & *v17) + 0x1B8))((i == *(void *)v13) & ~v13[8]);
        }
      }
    }
    swift_unknownObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TTRIListDetailEmblemsTableCell()
{
  return self;
}

void sub_100603A7C(uint64_t a1, uint64_t a2)
{
}

uint64_t type metadata accessor for EmojiTextField()
{
  return self;
}

uint64_t destroy for TTRIListDetailEmblemsContentState()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRIListDetailEmblemsContentState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIListDetailEmblemsContentState(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRIListDetailEmblemsContentState(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIListDetailEmblemsContentState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailEmblemsContentState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailEmblemsContentState()
{
  return &type metadata for TTRIListDetailEmblemsContentState;
}

uint64_t sub_100603D0C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  if (a2)
  {
    if ((a6 & 1) == 0) {
      return 0;
    }
LABEL_6:
    if (a4)
    {
      if (a8)
      {
        if (a3 == a7 && a4 == a8) {
          return 1;
        }
        if (_stringCompareWithSmolCheck(_:_:expecting:)()) {
          return 1;
        }
      }
    }
    else if (!a8)
    {
      return 1;
    }
    return 0;
  }
  uint64_t result = 0;
  if ((a6 & 1) == 0 && a1 == a5) {
    goto LABEL_6;
  }
  return result;
}

void *sub_100603D98(uint64_t a1, void (*a2)(uint64_t, id, uint64_t, uint64_t, id), uint64_t a3)
{
  specialized ContiguousArray.reserveCapacity(_:)();
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = 0;
    id v8 = (id *)(a1 + 56);
    do
    {
      uint64_t v10 = (uint64_t)*(v8 - 1);
      id v9 = *v8;
      uint64_t v11 = a3;
      char v12 = *(v8 - 3);
      uint64_t v13 = (uint64_t)*(v8 - 2);
      id v14 = *v8;
      id v15 = v12;
      swift_bridgeObjectRetain();
      uint64_t v16 = v13;
      a3 = v11;
      a2(v7, v15, v16, v10, v9);

      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v8 += 4;
      ++v7;
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void sub_100603EE0(uint64_t a1)
{
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex + 8) & 1) != 0
    || *(void *)(v1 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex) != a1)
  {
    id v3 = sub_100602EF0();
    [v3 resignFirstResponder];

    id v4 = sub_100602EF0();
    [v4 setHidden:1];

    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v6 = Strong;
      [Strong removeFromSuperview];
    }
    swift_unknownObjectWeakAssign();
    uint64_t v7 = swift_unknownObjectWeakLoadStrong();
    if (v7)
    {
      id v8 = *(void (**)(uint64_t, void, void, void))(v7 + qword_1007ABC30);
      if (v8)
      {
        swift_retain();
        v8(a1, 0, 0, 0);
        sub_1000499C4((uint64_t)v8);
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    sub_10060308C();
  }
}

void *sub_100604044(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_10060243C(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(void **)(v5 + 24), *(void *)(v5 + 32));
}

void sub_100604050()
{
  *(void *)&v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeView] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiBadgeViewIndex];
  *(void *)uint64_t v1 = 0;
  v1[8] = 1;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell____lazy_storage___emojiTextField] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100604118(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  NSString v6 = String._bridgeToObjectiveC()();
  IsSingleEmojuint64_t i = CEMStringIsSingleEmoji();

  if (IsSingleEmoji)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v9 = *(void (**)(void, uint64_t, uint64_t, uint64_t))(Strong + qword_1007ABC30);
      if (v9)
      {
        sub_10006C140(*(void *)(Strong + qword_1007ABC30));
        swift_bridgeObjectRetain();
        v9(0, 1, a1, a2);
        sub_1000499C4((uint64_t)v9);
        swift_unknownObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    *(unsigned char *)(v3 + OBJC_IVAR____TtC9Reminders30TTRIListDetailEmblemsTableCell_emojiWasSelected) = 1;
  }
  id v10 = sub_100602EF0();
  [v10 resignFirstResponder];

  id v11 = sub_100602EF0();
  [v11 setHidden:1];

  char v12 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 removeFromSuperview];
  }
  swift_unknownObjectWeakAssign();
  return 1;
}

uint64_t sub_100604280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  uint64_t v5 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  uint64_t v33 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v32 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v31 = (uint64_t)&v29 - v9;
  __chkstk_darwin(v8);
  id v11 = (char *)&v29 - v10;
  uint64_t v12 = type metadata accessor for TTRIRemindersBoardDragItemSources.Source(0);
  __chkstk_darwin(v12);
  id v15 = (id *)((char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v16 = *(void *)(a3 + 16);
  if (!v16) {
    return swift_unknownObjectRetain();
  }
  uint64_t v17 = a3 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v18 = *(void *)(v13 + 72);
  uint64_t v30 = a2;
  swift_unknownObjectRetain();
  uint64_t v29 = a3;
  swift_bridgeObjectRetain();
  id v19 = _swiftEmptyArrayStorage;
  id v20 = _swiftEmptyArrayStorage;
  id v35 = v15;
  do
  {
    sub_100605300(v17, (uint64_t)v15, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v23 = *v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    else
    {
      sub_100605368((uint64_t)v15, (uint64_t)v11, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      if (static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)())
      {
        sub_100605300((uint64_t)v11, v31, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v20 = (void *)sub_1005702C8(0, v20[2] + 1, 1, (unint64_t)v20);
        }
        unint64_t v25 = v20[2];
        unint64_t v24 = v20[3];
        if (v25 >= v24 >> 1) {
          id v20 = (void *)sub_1005702C8(v24 > 1, v25 + 1, 1, (unint64_t)v20);
        }
        v20[2] = v25 + 1;
        uint64_t v22 = (uint64_t)v20
            + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
            + *(void *)(v33 + 72) * v25;
        uint64_t v21 = v31;
      }
      else
      {
        sub_100605300((uint64_t)v11, v32, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v19 = (void *)sub_1005702C8(0, v19[2] + 1, 1, (unint64_t)v19);
        }
        unint64_t v27 = v19[2];
        unint64_t v26 = v19[3];
        if (v27 >= v26 >> 1) {
          id v19 = (void *)sub_1005702C8(v26 > 1, v27 + 1, 1, (unint64_t)v19);
        }
        id v19[2] = v27 + 1;
        uint64_t v21 = v32;
        uint64_t v22 = (uint64_t)v19
            + ((*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80))
            + *(void *)(v33 + 72) * v27;
      }
      sub_100605368(v21, v22, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      sub_1006053D0((uint64_t)v11, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
    }
    v17 += v18;
    --v16;
    id v15 = v35;
  }
  while (v16);
  swift_bridgeObjectRelease();
  return v30;
}

uint64_t (*sub_1006046FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>))(unsigned char *, void)
{
  uint64_t v6 = type metadata accessor for TTRAdjustedIndexPath();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v9);
  id v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100605300(a1, (uint64_t)v11, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      return (uint64_t (*)(unsigned char *, void))sub_100605368((uint64_t)v11, a3, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    }
    else
    {
      sub_100605368((uint64_t)v11, a3, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
      uint64_t result = (uint64_t (*)(unsigned char *, void))IndexPath.item.modify();
      if (__OFADD__(*v14, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v14;
        return (uint64_t (*)(unsigned char *, void))result(v15, 0);
      }
    }
  }
  else
  {
    sub_100605368((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    sub_100604B58(a2);
    TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)();
    swift_bridgeObjectRelease();
    return (uint64_t (*)(unsigned char *, void))sub_1006053D0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
  }
  return result;
}

void (*sub_1006048E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>))(unsigned char *, void)
{
  uint64_t v6 = type metadata accessor for TTRUnadjustedIndexPath();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  id v11 = &v19[-v10];
  uint64_t v12 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v12);
  uint64_t v14 = &v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100605300(a1, (uint64_t)v14, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload) {
    return (void (*)(unsigned char *, void))sub_100605368((uint64_t)v14, a3, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_100605368((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    sub_100604B58(a2);
    TTRUnadjustedIndexPath.adjusted(forOriginalItemIndexPaths:)();
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t)v11;
  }
  else
  {
    sub_100605368((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    uint64_t result = (void (*)(unsigned char *, void))IndexPath.item.modify();
    if (__OFADD__(*v18, 1))
    {
      __break(1u);
      return result;
    }
    ++*v18;
    result(v19, 0);
    sub_100605300((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    sub_100604B58(a2);
    TTRUnadjustedIndexPath.adjusted(forOriginalItemIndexPaths:)();
    swift_bridgeObjectRelease();
    sub_1006053D0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    uint64_t v16 = (uint64_t)v11;
  }
  return (void (*)(unsigned char *, void))sub_1006053D0(v16, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
}

void *sub_100604B58(uint64_t a1)
{
  uint64_t v17 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  uint64_t v2 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004D3698(0, v9, 0);
    uint64_t v11 = a1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v16 = *(void *)(v2 + 72);
    v15[1] = a1;
    _OWORD v15[2] = v6 + 32;
    do
    {
      sub_100605300(v11, (uint64_t)v4, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v4[*(int *)(v17 + 20)], v5);
      sub_1006053D0((uint64_t)v4, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      uint64_t v10 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3698(0, v10[2] + 1, 1);
        uint64_t v10 = v18;
      }
      unint64_t v13 = v10[2];
      unint64_t v12 = v10[3];
      if (v13 >= v12 >> 1)
      {
        sub_1004D3698(v12 > 1, v13 + 1, 1);
        uint64_t v10 = v18;
      }
      void v10[2] = v13 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))((unint64_t)v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v13, v8, v5);
      uint64_t v18 = v10;
      v11 += v16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t sub_100604DFC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v56 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  uint64_t v6 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v53 = a2;
    unint64_t v54 = a3;
    uint64_t v58 = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004D35AC(0, v9, 0);
    uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v55 = a1;
    uint64_t v12 = a1 + ((v11 + 32) & ~v11);
    uint64_t v13 = *(void *)(v6 + 72);
    uint64_t v14 = v58;
    do
    {
      sub_100605300(v12, (uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      uint64_t v15 = IndexPath.description.getter();
      uint64_t v17 = v16;
      sub_1006053D0((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D35AC(0, *(void *)(v14 + 16) + 1, 1);
        uint64_t v14 = v58;
      }
      unint64_t v19 = *(void *)(v14 + 16);
      unint64_t v18 = *(void *)(v14 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1004D35AC(v18 > 1, v19 + 1, 1);
        uint64_t v14 = v58;
      }
      *(void *)(v14 + 16) = v19 + 1;
      unint64_t v20 = v14 + 16 * v19;
      *(void *)(v20 + 32) = v15;
      *(void *)(v20 + 40) = v17;
      v12 += v13;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    uint64_t v58 = v14;
    sub_10003B754(&qword_10078E670);
    sub_1000B542C();
    uint64_t v21 = BidirectionalCollection<>.joined(separator:)();
    id v23 = v22;
    swift_release();
    uint64_t v58 = 0x202D206C61636F6CLL;
    unint64_t v59 = 0xE800000000000000;
    v24._uint64_t countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    uint64_t v25 = v58;
    unint64_t v26 = v59;
    unint64_t v27 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    uint64_t v10 = v27;
    unint64_t v29 = *((void *)v27 + 2);
    unint64_t v28 = *((void *)v27 + 3);
    if (v29 >= v28 >> 1) {
      uint64_t v10 = sub_100022F98((char *)(v28 > 1), v29 + 1, 1, v27);
    }
    a2 = v53;
    a3 = v54;
    *((void *)v10 + 2) = v29 + 1;
    uint64_t v30 = &v10[16 * v29];
    *((void *)v30 + 4) = v25;
    *((void *)v30 + 5) = v26;
  }
  uint64_t v31 = *(void *)(a2 + 16);
  if (v31)
  {
    uint64_t v58 = 0;
    unint64_t v59 = 0xE000000000000000;
    _StringGuts.grow(_:)(18);
    uint64_t v57 = v31;
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v34 = v33;
    swift_bridgeObjectRelease();
    uint64_t v58 = v32;
    unint64_t v59 = v34;
    v35._object = (void *)0x80000001006C1510;
    v35._uint64_t countAndFlagsBits = 0xD000000000000010;
    String.append(_:)(v35);
    uint64_t v36 = v58;
    unint64_t v37 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_100022F98(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v39 = *((void *)v10 + 2);
    unint64_t v38 = *((void *)v10 + 3);
    if (v39 >= v38 >> 1) {
      uint64_t v10 = sub_100022F98((char *)(v38 > 1), v39 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v39 + 1;
    Swift::String v40 = &v10[16 * v39];
    *((void *)v40 + 4) = v36;
    *((void *)v40 + 5) = v37;
  }
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v51) {
      goto LABEL_24;
    }
    swift_bridgeObjectRetain();
    uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v41) {
      goto LABEL_24;
    }
  }
  uint64_t v57 = v41;
  uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
  unint64_t v59 = v42;
  v43._uint64_t countAndFlagsBits = 0x726568746F207820;
  v43._object = (void *)0xE900000000000073;
  String.append(_:)(v43);
  uint64_t v44 = v58;
  unint64_t v45 = v59;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v10 = sub_100022F98(0, *((void *)v10 + 2) + 1, 1, v10);
  }
  unint64_t v47 = *((void *)v10 + 2);
  unint64_t v46 = *((void *)v10 + 3);
  if (v47 >= v46 >> 1) {
    uint64_t v10 = sub_100022F98((char *)(v46 > 1), v47 + 1, 1, v10);
  }
  *((void *)v10 + 2) = v47 + 1;
  uint64_t v48 = &v10[16 * v47];
  *((void *)v48 + 4) = v44;
  *((void *)v48 + 5) = v45;
LABEL_24:
  uint64_t v58 = (uint64_t)v10;
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v49 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v49;
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007ABF48);
}

uint64_t sub_100605300(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100605368(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1006053D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemSources.Source(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007ABEB8);
}

uint64_t destroy for TTRIRemindersBoardDragItemSources()
{
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9Reminders33TTRIRemindersBoardDragItemSourcesVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TTRIRemindersBoardDragItemSources(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for TTRIRemindersBoardDragItemSources(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardDragItemSources()
{
  return &type metadata for TTRIRemindersBoardDragItemSources;
}

void **sub_100605578(void **a1, void **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = *a2;
      *a1 = *a2;
      id v7 = v6;
LABEL_46:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = *a2;
      *a1 = *a2;
      id v13 = v12;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v59 = v9;
      uint64_t v14 = *a2;
      *a1 = *a2;
      uint64_t v15 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v16 = (void **)((char *)a1 + v15);
      uint64_t v17 = (void **)((char *)a2 + v15);
      uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v19 = *(void *)(v18 - 8);
      unint64_t v20 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v19 + 48);
      id v21 = v14;
      uint64_t v22 = v17;
      if (v20(v17, 1, v18))
      {
        uint64_t v23 = sub_10003B754(&qword_10078C890);
        memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
        uint64_t v9 = v59;
      }
      else
      {
        uint64_t v9 = v59;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            unint64_t v28 = *v22;
            *uint64_t v16 = *v22;
            id v29 = v28;
            goto LABEL_22;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v27 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v16, v22, v27);
LABEL_22:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v16, v22, *(void *)(v19 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        goto LABEL_25;
      }
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v25 = *a2;
          *a1 = *a2;
          id v26 = v25;
          goto LABEL_17;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v24 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_25:
    uint64_t v30 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    uint64_t v31 = v30[5];
    uint64_t v32 = (char *)a1 + v31;
    unint64_t v33 = (char *)a2 + v31;
    uint64_t v34 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = v30[6];
    uint64_t v36 = (void **)((char *)a1 + v35);
    unint64_t v37 = (void **)((char *)a2 + v35);
    int v38 = swift_getEnumCaseMultiPayload();
    if (v38 == 2)
    {
      Swift::String v40 = *v37;
      *uint64_t v36 = *v37;
      id v41 = v40;
    }
    else if (v38 == 1)
    {
      uint64_t v58 = v30;
      unint64_t v42 = *v37;
      *uint64_t v36 = *v37;
      uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v44 = (void **)((char *)v36 + v43);
      unint64_t v45 = (void **)((char *)v37 + v43);
      uint64_t v46 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v47 = *(void *)(v46 - 8);
      uint64_t v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
      id v49 = v42;
      if (v48(v45, 1, v46))
      {
        uint64_t v50 = sub_10003B754(&qword_10078C890);
        memcpy(v44, v45, *(void *)(*(void *)(v50 - 8) + 64));
        uint64_t v30 = v58;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v55 = *v45;
            void *v44 = *v45;
            id v56 = v55;
            goto LABEL_42;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v54 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v54 - 8) + 16))(v44, v45, v54);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v44, v45, *(void *)(v47 + 64));
            break;
        }
        uint64_t v30 = v58;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
      }
    }
    else
    {
      if (v38)
      {
        memcpy(v36, v37, *(void *)(*(void *)(v9 - 8) + 64));
LABEL_45:
        *((unsigned char *)a1 + v30[7]) = *((unsigned char *)a2 + v30[7]);
        goto LABEL_46;
      }
      uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v52 = *v37;
          *uint64_t v36 = *v37;
          id v53 = v52;
          goto LABEL_37;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v51 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(v36, v37, v51);
LABEL_37:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v36, v37, *(void *)(*(void *)(v39 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_45;
  }
  uint64_t v8 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v8[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_1006062D0(id *a1)
{
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_2;
  }
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_10:
      id v5 = *a1;
LABEL_11:

      break;
    case 1:

      uint64_t v6 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v5 = *v6;
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v8 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
            break;
          default:
            goto LABEL_15;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_10;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v4 = type metadata accessor for Date();
          (*(void (**)(id *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          break;
        default:
          goto LABEL_15;
      }
      break;
  }
LABEL_15:
  uint64_t v9 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  uint64_t v10 = (char *)a1 + *(int *)(v9 + 20);
  uint64_t v11 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  a1 = (id *)((char *)a1 + *(int *)(v9 + 24));
  int v12 = swift_getEnumCaseMultiPayload();
  switch(v12)
  {
    case 2:
LABEL_2:
      id v2 = *a1;

      break;
    case 1:

      a1 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(a1, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_2;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_22:
            uint64_t v14 = type metadata accessor for Date();
            uint64_t v15 = *(void (**)(id *, uint64_t))(*(void *)(v14 - 8) + 8);
            v15(a1, v14);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_2;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_22;
        default:
          return;
      }
  }
}

void **sub_1006066D0(void **a1, void **a2)
{
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = *a2;
      *a1 = *a2;
      id v10 = v9;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *a2;
      *a1 = *a2;
      uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v13 = (void **)((char *)a1 + v12);
      uint64_t v14 = (void **)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
      id v18 = v11;
      if (v17(v14, 1, v15))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C890);
        memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v24 = *v14;
            void *v13 = *v14;
            id v25 = v24;
            goto LABEL_20;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v23 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v14, v23);
LABEL_20:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v21 = *a2;
          *a1 = *a2;
          id v22 = v21;
          goto LABEL_15;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    id v26 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    uint64_t v27 = v26[5];
    unint64_t v28 = (char *)a1 + v27;
    id v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = v26[6];
    uint64_t v32 = (void **)((char *)a1 + v31);
    unint64_t v33 = (void **)((char *)a2 + v31);
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      uint64_t v36 = *v33;
      char *v32 = *v33;
      id v37 = v36;
    }
    else if (v34 == 1)
    {
      int v38 = *v33;
      char *v32 = *v33;
      uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      Swift::String v40 = (void **)((char *)v32 + v39);
      id v41 = (void **)((char *)v33 + v39);
      uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
      id v45 = v38;
      if (v44(v41, 1, v42))
      {
        uint64_t v46 = sub_10003B754(&qword_10078C890);
        memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v51 = *v41;
            *Swift::String v40 = *v41;
            id v52 = v51;
            goto LABEL_40;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v50 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
LABEL_40:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v40, v41, *(void *)(v43 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
    }
    else
    {
      if (v34)
      {
        memcpy(v32, v33, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_43:
        *((unsigned char *)a1 + v26[7]) = *((unsigned char *)a2 + v26[7]);
        goto LABEL_44;
      }
      uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v48 = *v33;
          char *v32 = *v33;
          id v49 = v48;
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(v32, v33, v47);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  uint64_t v4 = *a2;
  *a1 = *a2;
  id v5 = v4;
LABEL_44:
  swift_storeEnumTagMultiPayload();
  return a1;
}

void **sub_1006073C0(void **a1, void **a2)
{
  if (a1 != a2)
  {
    sub_1006053D0((uint64_t)a1, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = *a2;
      *a1 = *a2;
      id v5 = v4;
LABEL_45:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = *a2;
      *a1 = *a2;
      id v10 = v9;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *a2;
      *a1 = *a2;
      uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v13 = (void **)((char *)a1 + v12);
      uint64_t v14 = (void **)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
      id v18 = v11;
      if (v17(v14, 1, v15))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C890);
        memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v24 = *v14;
            void *v13 = *v14;
            id v25 = v24;
            goto LABEL_21;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v23 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v14, v23);
LABEL_21:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_24;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v21 = *a2;
          *a1 = *a2;
          id v22 = v21;
          goto LABEL_16;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_24:
    id v26 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    uint64_t v27 = v26[5];
    unint64_t v28 = (char *)a1 + v27;
    id v29 = (char *)a2 + v27;
    uint64_t v30 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = v26[6];
    uint64_t v32 = (void **)((char *)a1 + v31);
    unint64_t v33 = (void **)((char *)a2 + v31);
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 2)
    {
      uint64_t v36 = *v33;
      char *v32 = *v33;
      id v37 = v36;
    }
    else if (v34 == 1)
    {
      uint64_t v55 = v26;
      int v38 = *v33;
      char *v32 = *v33;
      uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      Swift::String v40 = (void **)((char *)v32 + v39);
      id v41 = (void **)((char *)v33 + v39);
      uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
      id v45 = v38;
      if (v44(v41, 1, v42))
      {
        uint64_t v46 = sub_10003B754(&qword_10078C890);
        memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
        id v26 = v55;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v52 = *v41;
            uint64_t v51 = v40;
            *Swift::String v40 = *v41;
            id v53 = v52;
            goto LABEL_41;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v50 = type metadata accessor for Date();
            uint64_t v51 = v40;
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
LABEL_41:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v51 = v40;
            memcpy(v40, v41, *(void *)(v43 + 64));
            break;
        }
        id v26 = v55;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(v51, 0, 1, v42);
      }
    }
    else
    {
      if (v34)
      {
        memcpy(v32, v33, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_44:
        *((unsigned char *)a1 + v26[7]) = *((unsigned char *)a2 + v26[7]);
        goto LABEL_45;
      }
      uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v48 = *v33;
          char *v32 = *v33;
          id v49 = v48;
          goto LABEL_36;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(v32, v33, v47);
LABEL_36:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_44;
  }
  return a1;
}

void *sub_1006080FC(void *a1, void *a2, uint64_t a3)
{
  if (!swift_getEnumCaseMultiPayload())
  {
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v16 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v15 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    uint64_t v17 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    uint64_t v22 = v17[6];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 1)
    {
      void *v23 = *v24;
      uint64_t v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      unint64_t v28 = (char *)v23 + v27;
      id v29 = (char *)v24 + v27;
      uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_10003B754(&qword_10078C890);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v34 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v28, v29, v34);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(void *)(v31 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
    }
    else
    {
      if (v25)
      {
        memcpy(v23, v24, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_31:
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(v23, v24, v33);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_100608BF8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1006053D0((uint64_t)a1, type metadata accessor for TTRIRemindersBoardDragItemSources.Source);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      return a1;
    }
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v16 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_18;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v15 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_18:
    uint64_t v17 = (int *)type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
    uint64_t v18 = v17[5];
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
    uint64_t v22 = v17[6];
    uint64_t v23 = (void *)((char *)a1 + v22);
    uint64_t v24 = (void *)((char *)a2 + v22);
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 1)
    {
      void *v23 = *v24;
      uint64_t v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      unint64_t v28 = (char *)v23 + v27;
      id v29 = (char *)v24 + v27;
      uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_10003B754(&qword_10078C890);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v34 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v28, v29, v34);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(void *)(v31 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
    }
    else
    {
      if (v25)
      {
        memcpy(v23, v24, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_32:
        *((unsigned char *)a1 + v17[7]) = *((unsigned char *)a2 + v17[7]);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(v23, v24, v33);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v23, v24, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_32;
  }
  return a1;
}

uint64_t sub_100609718()
{
  uint64_t result = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void **sub_1006097AC(void **a1, void **a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = *a2;
      *a1 = *a2;
      id v12 = v11;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v57 = v6;
      uint64_t v13 = *a2;
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v15 = (void **)((char *)a1 + v14);
      uint64_t v16 = (void **)((char *)a2 + v14);
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48);
      id v20 = v13;
      uint64_t v21 = v16;
      if (v19(v16, 1, v17))
      {
        uint64_t v22 = sub_10003B754(&qword_10078C890);
        memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
        uint64_t v6 = v57;
      }
      else
      {
        uint64_t v6 = v57;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v27 = *v21;
            *uint64_t v15 = *v21;
            id v28 = v27;
            goto LABEL_20;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v26 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v15, v21, v26);
LABEL_20:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v15, v21, *(void *)(v18 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v24 = *a2;
          *a1 = *a2;
          id v25 = v24;
          goto LABEL_15;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v23 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    uint64_t v29 = v6[5];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    uint64_t v32 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
    uint64_t v33 = v6[6];
    uint64_t v34 = (void **)((char *)a1 + v33);
    uint64_t v35 = (void **)((char *)a2 + v33);
    int v36 = swift_getEnumCaseMultiPayload();
    if (v36 == 2)
    {
      int v38 = *v35;
      *uint64_t v34 = *v35;
      id v39 = v38;
    }
    else if (v36 == 1)
    {
      Swift::String v40 = *v35;
      *uint64_t v34 = *v35;
      uint64_t v41 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v42 = (void **)((char *)v34 + v41);
      uint64_t v43 = (void **)((char *)v35 + v41);
      uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v45 = *(void *)(v44 - 8);
      uint64_t v46 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v45 + 48);
      id v47 = v40;
      if (v46(v43, 1, v44))
      {
        uint64_t v48 = sub_10003B754(&qword_10078C890);
        memcpy(v42, v43, *(void *)(*(void *)(v48 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v54 = *v43;
            id v53 = v42;
            *uint64_t v42 = *v43;
            id v55 = v54;
            goto LABEL_40;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v52 = type metadata accessor for Date();
            id v53 = v42;
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v52 - 8) + 16))(v42, v43, v52);
LABEL_40:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            id v53 = v42;
            memcpy(v42, v43, *(void *)(v45 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v45 + 56))(v53, 0, 1, v44);
      }
    }
    else
    {
      if (v36)
      {
        memcpy(v34, v35, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_43:
        *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
        return a1;
      }
      uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v50 = *v35;
          *uint64_t v34 = *v35;
          id v51 = v50;
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v49 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v49 - 8) + 16))(v34, v35, v49);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v34, v35, *(void *)(*(void *)(v37 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  id v10 = (char *)*a2;
  *a1 = *a2;
  a1 = (void **)&v10[(v5 + 16) & ~(unint64_t)v5];
  swift_retain();
  return a1;
}

void sub_10060A4D4(id *a1, uint64_t a2)
{
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_6:
      id v6 = *a1;
LABEL_7:

      break;
    case 1:

      uint64_t v7 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v6 = *v7;
            goto LABEL_7;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v9 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
            break;
          default:
            goto LABEL_11;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_6;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v5 = type metadata accessor for Date();
          (*(void (**)(id *, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
          break;
        default:
          goto LABEL_11;
      }
      break;
  }
LABEL_11:
  id v10 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v11 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  id v12 = (id *)((char *)a1 + *(int *)(a2 + 24));
  int v13 = swift_getEnumCaseMultiPayload();
  switch(v13)
  {
    case 2:
LABEL_21:
      id v17 = *v12;

      break;
    case 1:

      id v12 = (id *)((char *)v12 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v12, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_21;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_18:
            uint64_t v15 = type metadata accessor for Date();
            uint64_t v16 = *(void (**)(id *, uint64_t))(*(void *)(v15 - 8) + 8);
            v16(v12, v15);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_18;
        default:
          return;
      }
  }
}

void **sub_10060A8D0(void **a1, void **a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    id v10 = v9;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    id v55 = a3;
    uint64_t v11 = v6;
    id v12 = *a2;
    *a1 = *a2;
    uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v14 = (void **)((char *)a1 + v13);
    uint64_t v15 = (void **)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
    id v19 = v12;
    if (v18(v15, 1, v16))
    {
      uint64_t v20 = sub_10003B754(&qword_10078C890);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
      uint64_t v6 = v11;
      a3 = v55;
    }
    else
    {
      uint64_t v6 = v11;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v25 = *v15;
          *uint64_t v14 = *v15;
          id v26 = v25;
          goto LABEL_18;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v24 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(v17 + 64));
          break;
      }
      a3 = v55;
      (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_21;
    }
    uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 8u:
      case 9u:
        uint64_t v22 = *a2;
        *a1 = *a2;
        id v23 = v22;
        goto LABEL_13;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v21 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_21:
  uint64_t v27 = a3[5];
  id v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = a3[6];
  uint64_t v32 = (void **)((char *)a1 + v31);
  uint64_t v33 = (void **)((char *)a2 + v31);
  int v34 = swift_getEnumCaseMultiPayload();
  switch(v34)
  {
    case 2:
      int v36 = *v33;
      char *v32 = *v33;
      id v37 = v36;
LABEL_40:
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    case 1:
      uint64_t v54 = a2;
      id v56 = a3;
      int v38 = *v33;
      char *v32 = *v33;
      uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      Swift::String v40 = (void **)((char *)v32 + v39);
      uint64_t v41 = (void **)((char *)v33 + v39);
      uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
      id v45 = v38;
      if (v44(v41, 1, v42))
      {
        uint64_t v46 = sub_10003B754(&qword_10078C890);
        memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
        a2 = v54;
        a3 = v56;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v51 = *v41;
            *Swift::String v40 = *v41;
            id v52 = v51;
            goto LABEL_38;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v50 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
LABEL_38:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v40, v41, *(void *)(v43 + 64));
            break;
        }
        a2 = v54;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        a3 = v56;
      }
      goto LABEL_40;
    case 0:
      uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v48 = *v33;
          char *v32 = *v33;
          id v49 = v48;
          goto LABEL_33;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(v32, v33, v47);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          break;
      }
      goto LABEL_40;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_41:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void **sub_10060B58C(void **a1, void **a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1006053D0((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = *a2;
      *a1 = *a2;
      id v10 = v9;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *a2;
      *a1 = *a2;
      uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v13 = (void **)((char *)a1 + v12);
      uint64_t v14 = (void **)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
      id v18 = v11;
      if (v17(v14, 1, v15))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C890);
        memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v24 = *v14;
            void *v13 = *v14;
            id v25 = v24;
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v23 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v14, v23);
LABEL_19:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_22;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v21 = *a2;
          *a1 = *a2;
          id v22 = v21;
          goto LABEL_14;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_22:
  uint64_t v26 = a3[5];
  uint64_t v27 = (char *)a1 + v26;
  id v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  if (a1 != a2)
  {
    uint64_t v30 = a3[6];
    uint64_t v31 = (void **)((char *)a1 + v30);
    uint64_t v32 = (void **)((char *)a2 + v30);
    sub_1006053D0((uint64_t)a1 + v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v34 = swift_getEnumCaseMultiPayload();
    switch(v34)
    {
      case 2:
        int v36 = *v32;
        *uint64_t v31 = *v32;
        id v37 = v36;
LABEL_42:
        swift_storeEnumTagMultiPayload();
        goto LABEL_43;
      case 1:
        id v55 = a3;
        int v38 = *v32;
        *uint64_t v31 = *v32;
        uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        Swift::String v40 = (void **)((char *)v31 + v39);
        uint64_t v41 = (void **)((char *)v32 + v39);
        uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v43 = *(void *)(v42 - 8);
        uint64_t v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
        id v45 = v38;
        if (v44(v41, 1, v42))
        {
          uint64_t v46 = sub_10003B754(&qword_10078C890);
          memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
          a3 = v55;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v52 = *v41;
              id v51 = v40;
              *Swift::String v40 = *v41;
              id v53 = v52;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v50 = type metadata accessor for Date();
              id v51 = v40;
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
LABEL_40:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              id v51 = v40;
              memcpy(v40, v41, *(void *)(v43 + 64));
              break;
          }
          a3 = v55;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(v51, 0, 1, v42);
        }
        goto LABEL_42;
      case 0:
        uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v48 = *v32;
            *uint64_t v31 = *v32;
            id v49 = v48;
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(v31, v32, v47);
LABEL_35:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
            break;
        }
        goto LABEL_42;
    }
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
LABEL_43:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_10060C2B8(void *a1, void *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    id v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10003B754(&qword_10078C890);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v17 = a3[5];
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[6];
  id v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  int v24 = swift_getEnumCaseMultiPayload();
  if (v24 == 1)
  {
    *id v22 = *v23;
    uint64_t v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v27 = (char *)v22 + v26;
    id v28 = (char *)v23 + v26;
    uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_10003B754(&qword_10078C890);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v27, v28, v33);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v27, v28, *(void *)(v30 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    goto LABEL_28;
  }
  if (!v24)
  {
    uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v32 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(v22, v23, v32);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        break;
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    goto LABEL_29;
  }
  memcpy(v22, v23, *(void *)(*(void *)(v6 - 8) + 64));
LABEL_29:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

void *sub_10060CD64(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_1006053D0((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v16 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v15 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  uint64_t v17 = a3[5];
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  if (a1 != a2)
  {
    uint64_t v21 = a3[6];
    id v22 = (void *)((char *)a1 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    sub_1006053D0((uint64_t)a1 + v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 1)
    {
      *id v22 = *v23;
      uint64_t v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v28 = (char *)v22 + v27;
      uint64_t v29 = (char *)v23 + v27;
      uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_10003B754(&qword_10078C890);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v34 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v28, v29, v34);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(void *)(v31 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      goto LABEL_30;
    }
    if (!v25)
    {
      uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(v22, v23, v33);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
LABEL_30:
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
    }
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
LABEL_31:
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  return a1;
}

uint64_t sub_10060D860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10060D874);
}

uint64_t sub_10060D874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for IndexPath();
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      unsigned int v14 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
      if (v14 >= 2) {
        return ((v14 + 2147483646) & 0x7FFFFFFF) + 1;
      }
      else {
        return 0;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_10060D998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10060D9AC);
}

uint64_t sub_10060D9AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = type metadata accessor for IndexPath();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t sub_10060DABC()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.ItemID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IndexPath();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for TTRIRemindersBoardDragItemSourcesRelativeToColumn()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TTRIRemindersBoardDragItemSourcesRelativeToColumn(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TTRIRemindersBoardDragItemSourcesRelativeToColumn(void *a1, void *a2)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for TTRIRemindersBoardDragItemSourcesRelativeToColumn(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardDragItemSourcesRelativeToColumn(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardDragItemSourcesRelativeToColumn(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardDragItemSourcesRelativeToColumn()
{
  return &type metadata for TTRIRemindersBoardDragItemSourcesRelativeToColumn;
}

uint64_t sub_10060DDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation();
  *(void *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t sub_10060DE30()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007ABF88);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007ABF88);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

BOOL sub_10060DEF8(uint64_t a1, uint64_t a2)
{
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation();
  return *(void *)(a1 + *(int *)(v4 + 36)) == *(void *)(a2 + *(int *)(v4 + 36));
}

BOOL sub_10060DF60(uint64_t a1, uint64_t a2)
{
  return sub_10060DEF8(a1, a2);
}

uint64_t sub_10060DF6C(void *a1)
{
  uint64_t v87 = sub_10003B754(qword_10078A138);
  uint64_t v2 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v67 - v5;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v82 = *(void (***)(char *, uint64_t))(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v79 = (char *)v67 - v11;
  __chkstk_darwin(v12);
  uint64_t v86 = (char *)v67 - v13;
  __chkstk_darwin(v14);
  uint64_t v89 = (char *)v67 - v15;
  uint64_t v78 = sub_10003B754(&qword_100787558);
  uint64_t v16 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v84 = (uint64_t)v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754((uint64_t *)&unk_10078E2B0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = a1;
  uint64_t v21 = a1[7];
  uint64_t v22 = *(void *)(v21 + 16);
  if (!v22) {
    return 0;
  }
  uint64_t v23 = v90[6];
  uint64_t v24 = *(void *)(v23 + 16);
  if (!v24) {
    return 0;
  }
  unint64_t v25 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v26 = *(void *)(v2 + 72);
  uint64_t v27 = (void *)(v23 + *(int *)(v87 + 36) + v25);
  id v28 = v79;
  while (*v27 == 5)
  {
    uint64_t v27 = (void *)((char *)v27 + v26);
    if (!--v24) {
      return 0;
    }
  }
  uint64_t v30 = v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
  uint64_t v71 = *(void *)(v16 + 72);
  uint64_t v76 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v77 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v88 = (void (**)(char *, uint64_t, uint64_t))(v82 + 2);
  ++v82;
  uint64_t v83 = v26;
  v67[0] = v21;
  swift_bridgeObjectRetain();
  uint64_t v31 = v30;
  *(void *)&long long v32 = 136315394;
  long long v68 = v32;
  v67[1] = &type metadata for Any[8];
  uint64_t v74 = v9;
  uint64_t v75 = v6;
  uint64_t v33 = v86;
  unint64_t v72 = v25;
  uint64_t v73 = v20;
  while (1)
  {
    uint64_t v81 = v31;
    sub_10003B694(v31, (uint64_t)v20, &qword_100787558);
    uint64_t v34 = v78;
    uint64_t v70 = *v77;
    v70(v20, 0, 1, v78);
    if ((*v76)(v20, 1, v34) == 1) {
      break;
    }
    uint64_t v80 = v22;
    uint64_t v35 = v84;
    sub_100028C3C((uint64_t)v20, v84, &qword_100787558);
    int v36 = v89;
    id v37 = *v88;
    (*v88)(v89, v35, v7);
    v37(v33, v35 + *(int *)(v34 + 36), v7);
    if (qword_100785768 != -1) {
      swift_once();
    }
    uint64_t v38 = type metadata accessor for Logger();
    sub_100018BF8(v38, (uint64_t)qword_1007ABF88);
    v37(v28, (uint64_t)v36, v7);
    v37(v9, (uint64_t)v33, v7);
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = v9;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      v91[0] = v69;
      *(_DWORD *)uint64_t v42 = v68;
      sub_100612AF0((unint64_t *)&qword_10078C820, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v42 + 4) = sub_1000385A8(v43, v44, v91);
      swift_bridgeObjectRelease();
      id v45 = v28;
      uint64_t v46 = *v82;
      (*v82)(v45, v7);
      *(_WORD *)(v42 + 12) = 2080;
      uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v42 + 14) = sub_1000385A8(v47, v48, v91);
      swift_bridgeObjectRelease();
      v46(v41, v7);
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "TTRITreeViewTableUpdates: move potentially conflicts with hard reload, convert it to delete+insert {from: %s, to: %s}", (uint8_t *)v42, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      id v49 = v28;
      uint64_t v46 = *v82;
      (*v82)(v49, v7);
      v46(v9, v7);
    }

    uint64_t v50 = v80;
    uint64_t v51 = (uint64_t)v75;
    v37(v75, (uint64_t)v89, v7);
    *(void *)(v51 + *(int *)(v87 + 36)) = 0;
    unint64_t v52 = v90[5];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v54 = v72;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v52 = sub_10056FDD0(0, *(void *)(v52 + 16) + 1, 1, v52);
    }
    unint64_t v56 = *(void *)(v52 + 16);
    unint64_t v55 = *(void *)(v52 + 24);
    uint64_t v57 = v83;
    if (v56 >= v55 >> 1)
    {
      uint64_t v64 = sub_10056FDD0(v55 > 1, v56 + 1, 1, v52);
      uint64_t v57 = v83;
      unint64_t v52 = v64;
    }
    *(void *)(v52 + 16) = v56 + 1;
    sub_100028C3C(v51, v52 + v54 + v56 * v57, qword_10078A138);
    uint64_t v58 = v90;
    v90[5] = v52;
    uint64_t v59 = (uint64_t)v85;
    v37(v85, (uint64_t)v86, v7);
    *(void *)(v59 + *(int *)(v87 + 36)) = 0;
    unint64_t v60 = v58[4];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v60 = sub_10056FDD0(0, *(void *)(v60 + 16) + 1, 1, v60);
    }
    uint64_t v20 = v73;
    unint64_t v62 = *(void *)(v60 + 16);
    unint64_t v61 = *(void *)(v60 + 24);
    uint64_t v63 = v83;
    if (v62 >= v61 >> 1)
    {
      uint64_t v65 = sub_10056FDD0(v61 > 1, v62 + 1, 1, v60);
      uint64_t v63 = v83;
      unint64_t v60 = v65;
    }
    *(void *)(v60 + 16) = v62 + 1;
    sub_100028C3C((uint64_t)v85, v60 + v54 + v62 * v63, qword_10078A138);
    v90[4] = v60;
    uint64_t v33 = v86;
    v46(v86, v7);
    v46(v89, v7);
    sub_10003B6F8(v84, &qword_100787558);
    uint64_t v31 = v81 + v71;
    uint64_t v22 = v50 - 1;
    uint64_t v9 = v74;
    id v28 = v79;
    if (!v22)
    {
      v70(v20, 1, 1, v78);
      break;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v66 = v90;
  swift_bridgeObjectRelease();
  v66[7] = _swiftEmptyArrayStorage;
  return 1;
}

void sub_10060E7EC()
{
  uint64_t v1 = sub_10003B754(qword_10078A138);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v46 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = *v0;
  uint64_t v12 = *(void *)(*v0 + 16);
  if (v12)
  {
    if (*(void *)(v11 + 40) != 5) {
      return;
    }
    if (v12 != 1)
    {
      uint64_t v13 = (void *)(v11 + 56);
      uint64_t v14 = 1;
      while (1)
      {
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (*v13 != 5) {
          return;
        }
        v13 += 2;
        ++v14;
        if (v15 == v12) {
          goto LABEL_8;
        }
      }
      __break(1u);
      goto LABEL_52;
    }
  }
LABEL_8:
  uint64_t v16 = (void *)v0[1];
  uint64_t v17 = v16[2];
  if (v17)
  {
    if (v16[5] != 5) {
      return;
    }
    if (v17 != 1)
    {
      uint64_t v18 = v16 + 7;
      uint64_t v19 = 1;
      while (1)
      {
        uint64_t v20 = v19 + 1;
        if (__OFADD__(v19, 1)) {
          break;
        }
        if (*v18 != 5) {
          return;
        }
        v18 += 2;
        ++v19;
        if (v20 == v17) {
          goto LABEL_15;
        }
      }
LABEL_52:
      __break(1u);
LABEL_53:
      __break(1u);
      return;
    }
  }
LABEL_15:
  uint64_t v21 = (void *)v0[2];
  uint64_t v22 = v21[2];
  if (v22)
  {
    if (v21[5] != 5) {
      return;
    }
    if (v22 != 1)
    {
      uint64_t v23 = v21 + 7;
      uint64_t v24 = 1;
      do
      {
        uint64_t v25 = v24 + 1;
        if (__OFADD__(v24, 1)) {
          goto LABEL_53;
        }
        if (*v23 != 5) {
          return;
        }
        v23 += 2;
        ++v24;
      }
      while (v25 != v22);
    }
  }
  if (!*(void *)(v0[3] + 16))
  {
    uint64_t v26 = v0[4];
    uint64_t v53 = v26;
    uint64_t v27 = *(void *)(v26 + 16);
    if (v27)
    {
      uint64_t v28 = v26 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      uint64_t v47 = v2;
      uint64_t v29 = *(void *)(v2 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10003B694(v28, (uint64_t)v10, qword_10078A138);
        uint64_t v30 = *(void *)&v10[*(int *)(v1 + 36)];
        sub_10003B6F8((uint64_t)v10, qword_10078A138);
        if (v30 != 5) {
          break;
        }
        v28 += v29;
        if (!--v27)
        {
          sub_10006A2C4((uint64_t)&v53);
          uint64_t v2 = v47;
          goto LABEL_28;
        }
      }
      id v45 = &v53;
      goto LABEL_49;
    }
LABEL_28:
    uint64_t v31 = v0[5];
    uint64_t v52 = v31;
    uint64_t v32 = *(void *)(v31 + 16);
    if (v32)
    {
      uint64_t v33 = v31 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      uint64_t v34 = *(void *)(v2 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10003B694(v33, (uint64_t)v7, qword_10078A138);
        uint64_t v35 = *(void *)&v7[*(int *)(v1 + 36)];
        sub_10003B6F8((uint64_t)v7, qword_10078A138);
        if (v35 != 5) {
          break;
        }
        v33 += v34;
        if (!--v32)
        {
          sub_10006A2C4((uint64_t)&v52);
          goto LABEL_33;
        }
      }
      id v45 = &v52;
      goto LABEL_49;
    }
LABEL_33:
    uint64_t v36 = v0[6];
    uint64_t v51 = v36;
    uint64_t v37 = *(void *)(v36 + 16);
    if (v37)
    {
      uint64_t v38 = v36 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
      uint64_t v39 = *(void *)(v2 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10003B694(v38, (uint64_t)v4, qword_10078A138);
        uint64_t v40 = *(void *)&v4[*(int *)(v1 + 36)];
        sub_10003B6F8((uint64_t)v4, qword_10078A138);
        if (v40 != 5) {
          break;
        }
        v38 += v39;
        if (!--v37)
        {
          sub_10006A2C4((uint64_t)&v51);
          goto LABEL_38;
        }
      }
      id v45 = &v51;
      goto LABEL_49;
    }
LABEL_38:
    if (!*(void *)(v0[7] + 16))
    {
      uint64_t v41 = v0[8];
      uint64_t v50 = v41;
      uint64_t v42 = *(void *)(v41 + 16);
      if (v42)
      {
        uint64_t v43 = v41 + 32;
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_10003B694(v43, (uint64_t)v48, &qword_100787568);
          uint64_t v44 = v49;
          sub_10003B6F8((uint64_t)v48, &qword_100787568);
          if (v44 != 5) {
            break;
          }
          v43 += 48;
          if (!--v42)
          {
            sub_10006A2C4((uint64_t)&v50);
            return;
          }
        }
        id v45 = &v50;
LABEL_49:
        sub_10006A2C4((uint64_t)v45);
      }
    }
  }
}

uint64_t sub_10060EBD4()
{
  sub_10003B754(&qword_1007ABFD8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100671360;
  *(void *)(inited + 32) = 73;
  *(void *)(inited + 40) = 0xE100000000000000;
  uint64_t v2 = v0[5];
  *(void *)(inited + 48) = *(void *)(v0[4] + 16);
  *(void *)(inited + 56) = 68;
  *(void *)(inited + 64) = 0xE100000000000000;
  *(void *)(inited + 72) = *(void *)(v2 + 16);
  *(void *)(inited + 80) = 82;
  *(void *)(inited + 88) = 0xE100000000000000;
  uint64_t v3 = v0[7];
  *(void *)(inited + 96) = *(void *)(v0[6] + 16);
  *(void *)(inited + 104) = 77;
  *(void *)(inited + 112) = 0xE100000000000000;
  *(void *)(inited + 120) = *(void *)(v3 + 16);
  uint64_t v4 = swift_initStackObject();
  *(_OWORD *)(v4 + 16) = xmmword_100671360;
  *(void *)(v4 + 32) = 73;
  *(void *)(v4 + 40) = 0xE100000000000000;
  uint64_t v5 = v0[1];
  *(void *)(v4 + 48) = *(void *)(*v0 + 16);
  *(void *)(v4 + 56) = 68;
  *(void *)(v4 + 64) = 0xE100000000000000;
  *(void *)(v4 + 72) = *(void *)(v5 + 16);
  *(void *)(v4 + 80) = 82;
  *(void *)(v4 + 88) = 0xE100000000000000;
  uint64_t v6 = v0[3];
  *(void *)(v4 + 96) = *(void *)(v0[2] + 16);
  *(void *)(v4 + 104) = 77;
  *(void *)(v4 + 112) = 0xE100000000000000;
  *(void *)(v4 + 120) = *(void *)(v6 + 16);
  uint64_t v7 = sub_10060F010(inited);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_10060F010(v4);
  swift_setDeallocating();
  sub_10003B754(qword_1007ABFE0);
  swift_arrayDestroy();
  if (*((void *)v8 + 2))
  {
    sub_10003B754(&qword_10078E670);
    sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
    uint64_t v9 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v12._uint64_t countAndFlagsBits = v9;
    v12._object = v11;
    String.append(_:)(v12);
    swift_bridgeObjectRelease();
    v13._uint64_t countAndFlagsBits = 125;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    uint64_t v14 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v16 = *((void *)v14 + 2);
    unint64_t v15 = *((void *)v14 + 3);
    if (v16 >= v15 >> 1) {
      uint64_t v14 = sub_100022F98((char *)(v15 > 1), v16 + 1, 1, v14);
    }
    *((void *)v14 + 2) = v16 + 1;
    uint64_t v17 = &v14[16 * v16];
    *((void *)v17 + 4) = 0x3A6E6F6974636573;
    *((void *)v17 + 5) = 0xEA00000000007B20;
    if (*((void *)v7 + 2)) {
      goto LABEL_5;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = (char *)_swiftEmptyArrayStorage;
    if (*((void *)v7 + 2))
    {
LABEL_5:
      sub_10003B754(&qword_10078E670);
      sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
      uint64_t v18 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v20 = v19;
      swift_bridgeObjectRelease();
      v21._uint64_t countAndFlagsBits = v18;
      v21._object = v20;
      String.append(_:)(v21);
      swift_bridgeObjectRelease();
      v22._uint64_t countAndFlagsBits = 125;
      v22._object = (void *)0xE100000000000000;
      String.append(_:)(v22);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v14 = sub_100022F98(0, *((void *)v14 + 2) + 1, 1, v14);
      }
      unint64_t v24 = *((void *)v14 + 2);
      unint64_t v23 = *((void *)v14 + 3);
      if (v24 >= v23 >> 1) {
        uint64_t v14 = sub_100022F98((char *)(v23 > 1), v24 + 1, 1, v14);
      }
      *((void *)v14 + 2) = v24 + 1;
      uint64_t v25 = &v14[16 * v24];
      *((void *)v25 + 4) = 0x7B203A776F72;
      *((void *)v25 + 5) = 0xE600000000000000;
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRelease();
  if (!*((void *)v14 + 2))
  {
    swift_bridgeObjectRelease();
    return 0x61647075206F6E28;
  }
LABEL_12:
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v26 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v26;
}

char *sub_10060F010(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v2 = (char *)_swiftEmptyArrayStorage;
  uint64_t v3 = swift_bridgeObjectRetain() + 48;
  uint64_t v4 = (uint64_t *)v3;
  do
  {
    uint64_t v6 = *v4;
    v4 += 3;
    if (v6 >= 1)
    {
      uint64_t v12 = *(void *)(v3 - 16);
      uint64_t v13 = *(void *)(v3 - 8);
      swift_bridgeObjectRetain_n();
      v7._uint64_t countAndFlagsBits = 8250;
      v7._object = (void *)0xE200000000000000;
      String.append(_:)(v7);
      v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v2 = sub_100022F98(0, *((void *)v2 + 2) + 1, 1, v2);
      }
      unint64_t v10 = *((void *)v2 + 2);
      unint64_t v9 = *((void *)v2 + 3);
      if (v10 >= v9 >> 1) {
        uint64_t v2 = sub_100022F98((char *)(v9 > 1), v10 + 1, 1, v2);
      }
      *((void *)v2 + 2) = v10 + 1;
      uint64_t v5 = &v2[16 * v10];
      *((void *)v5 + 4) = v12;
      *((void *)v5 + 5) = v13;
    }
    uint64_t v3 = (uint64_t)v4;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_10060F178(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_100610CA4((uint64_t)v7, (uint64_t)v9) & 1;
}

uint64_t sub_10060F1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  sub_10060E7EC();
  if (v16)
  {
    id v26 = self;
    uint64_t v17 = swift_allocObject();
    long long v18 = *(_OWORD *)(a1 + 48);
    *(_OWORD *)(v17 + 56) = *(_OWORD *)(a1 + 32);
    *(_OWORD *)(v17 + 72) = v18;
    *(_OWORD *)(v17 + 88) = *(_OWORD *)(a1 + 64);
    long long v19 = *(_OWORD *)(a1 + 16);
    *(_OWORD *)(v17 + 24) = *(_OWORD *)a1;
    *(void *)(v17 + 16) = v8;
    uint64_t v20 = *(void *)(a1 + 80);
    *(_OWORD *)(v17 + 40) = v19;
    *(void *)(v17 + 104) = v20;
    *(void *)(v17 + 112) = a2;
    *(void *)(v17 + 120) = a3;
    *(void *)(v17 + 128) = a4;
    *(void *)(v17 + 136) = a5;
    *(void *)(v17 + 144) = a6;
    *(void *)(v17 + 152) = a7;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_100610A48;
    *(void *)(v21 + 24) = v17;
    aBlock[4] = sub_1000218B0;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100021888;
    void aBlock[3] = &unk_100754788;
    Swift::String v22 = _Block_copy(aBlock);
    id v23 = v8;
    sub_100610A90(a1);
    swift_retain();
    sub_10006C140(a4);
    sub_10006C140(a6);
    swift_retain();
    swift_release();
    [v26 performWithoutAnimation:v22];
    _Block_release(v22);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  else
  {
    return sub_10060F42C(a1, a2, a3, a4, a5, a6, a7);
  }
  return result;
}

uint64_t sub_10060F42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v13 = swift_allocObject();
  long long v14 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v13 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v13 + 64) = v14;
  *(_OWORD *)(v13 + 80) = *(_OWORD *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 80);
  long long v16 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v13 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v13 + 32) = v16;
  *(void *)(v13 + 96) = v15;
  *(void *)(v13 + 104) = a4;
  *(void *)(v13 + 112) = a5;
  *(void *)(v13 + 120) = v7;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_100610BD0;
  *(void *)(v17 + 24) = v13;
  uint64_t v33 = sub_1000499FC;
  uint64_t v34 = v17;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_100021888;
  uint64_t v32 = &unk_100754800;
  id v26 = _Block_copy(&aBlock);
  sub_100610A90(a1);
  sub_10006C140(a4);
  id v18 = v7;
  swift_retain();
  swift_release();
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v19 + 64) = v20;
  *(_OWORD *)(v19 + 80) = *(_OWORD *)(a1 + 64);
  uint64_t v21 = *(void *)(a1 + 80);
  long long v22 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)a1;
  *(_OWORD *)(v19 + 32) = v22;
  *(void *)(v19 + 96) = v21;
  *(void *)(v19 + 104) = a2;
  *(void *)(v19 + 112) = a3;
  *(void *)(v19 + 120) = a6;
  *(void *)(v19 + 128) = a7;
  *(void *)(v19 + 136) = v18;
  uint64_t v33 = sub_100610C90;
  uint64_t v34 = v19;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  uint64_t v31 = sub_100106858;
  uint64_t v32 = &unk_100754850;
  id v23 = _Block_copy(&aBlock);
  sub_100610A90(a1);
  id v24 = v18;
  swift_retain();
  sub_10006C140(a6);
  swift_release();
  [v24 performBatchUpdates:v26 completion:v23];
  _Block_release(v23);
  _Block_release(v26);
  swift_release();
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v13) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10060F6BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v79 = a4;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v13 = &v70[-v12];
  uint64_t v78 = sub_10003B754(&qword_100787558);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_100785768 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_100018BF8(v16, (uint64_t)qword_1007ABF88);
  sub_100610A90(a1);
  sub_100610A90(a1);
  uint64_t v74 = v17;
  id v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v73 = (uint64_t)v10;
    uint64_t v76 = v15;
    uint64_t v22 = v21;
    uint64_t v72 = swift_slowAlloc();
    *(void *)&v88[0] = v72;
    *(_DWORD *)uint64_t v22 = 136315394;
    int v71 = v20;
    uint64_t v23 = a2;
    uint64_t v75 = a3;
    id v24 = v13;
    uint64_t v25 = v7;
    uint64_t v26 = v8;
    uint64_t v28 = *(void *)(a1 + 72);
    unint64_t v27 = *(void *)(a1 + 80);
    swift_bridgeObjectRetain();
    *(void *)&long long v82 = sub_1000385A8(v28, v27, (uint64_t *)v88);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v29 = sub_10060EBD4();
    *(void *)&long long v82 = sub_1000385A8(v29, v30, (uint64_t *)v88);
    a2 = v23;
    uint64_t v8 = v26;
    uint64_t v7 = v25;
    uint64_t v13 = v24;
    a3 = v75;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100611024(a1);
    sub_100611024(a1);
    _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v71, "Performing table updates for %s: %s", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v15 = v76;
    uint64_t v10 = (unsigned char *)v73;
    swift_slowDealloc();
  }
  else
  {
    sub_100611024(a1);
    sub_100611024(a1);
  }

  long long v31 = *(_OWORD *)(a1 + 48);
  long long v84 = *(_OWORD *)(a1 + 32);
  long long v85 = v31;
  long long v86 = *(_OWORD *)(a1 + 64);
  unint64_t v87 = *(void *)(a1 + 80);
  long long v32 = *(_OWORD *)(a1 + 16);
  long long v82 = *(_OWORD *)a1;
  long long v83 = v32;
  sub_100610A90(a1);
  if (a2 && (sub_10060DF6C(&v82) & 1) != 0)
  {
    uint64_t v76 = v15;
    uint64_t v88[2] = v84;
    v88[3] = v85;
    long long v89 = v86;
    unint64_t v90 = v87;
    v88[0] = v82;
    v88[1] = v83;
    sub_100610A90((uint64_t)v88);
    sub_100610A90((uint64_t)v88);
    uint64_t v33 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v74 = a2;
      uint64_t v36 = v35;
      uint64_t v73 = swift_slowAlloc();
      v81[0] = v73;
      *(_DWORD *)uint64_t v36 = 136315394;
      uint64_t v75 = a3;
      uint64_t v37 = v8;
      uint64_t v39 = *((void *)&v89 + 1);
      unint64_t v38 = v90;
      swift_bridgeObjectRetain();
      uint64_t v80 = sub_1000385A8(v39, v38, v81);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      uint64_t v40 = sub_10060EBD4();
      uint64_t v80 = sub_1000385A8(v40, v41, v81);
      uint64_t v8 = v37;
      a3 = v75;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100611024((uint64_t)v88);
      sub_100611024((uint64_t)v88);
      _os_log_impl((void *)&_mh_execute_header, v33, v34, "Table updates adjusted for %s: %s", (uint8_t *)v36, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      a2 = v74;
      swift_slowDealloc();
    }
    else
    {
      sub_100611024((uint64_t)v88);
      sub_100611024((uint64_t)v88);
    }

    uint64_t v15 = v76;
  }
  swift_beginAccess();
  id v42 = v79;
  uint64_t v43 = swift_bridgeObjectRetain();
  sub_10061110C(v43, v42, (SEL *)&selRef_insertRowsAtIndexPaths_withRowAnimation_);
  swift_bridgeObjectRelease();

  id v44 = v42;
  uint64_t v45 = swift_bridgeObjectRetain();
  sub_10061110C(v45, v44, (SEL *)&selRef_deleteRowsAtIndexPaths_withRowAnimation_);
  swift_bridgeObjectRelease();

  id v46 = v44;
  sub_10006C140(a2);
  uint64_t v47 = swift_bridgeObjectRetain();
  sub_1006117C4(v47, a2, a3, v46);

  sub_1000499C4(a2);
  swift_bridgeObjectRelease();
  uint64_t v48 = *((void *)&v85 + 1);
  uint64_t v49 = *(void *)(*((void *)&v85 + 1) + 16);
  if (v49)
  {
    uint64_t v78 = (uint64_t)&v15[*(int *)(v78 + 36)];
    uint64_t v50 = *((void *)&v85 + 1)
        + ((*(unsigned __int8 *)(v77 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v77 + 80));
    uint64_t v77 = *(void *)(v77 + 72);
    uint64_t v51 = v13;
    uint64_t v52 = (void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v53 = (void (**)(unsigned char *, uint64_t))(v8 + 8);
    uint64_t v76 = v46;
    id v79 = v46;
    uint64_t v75 = v48;
    swift_bridgeObjectRetain();
    do
    {
      sub_10003B694(v50, (uint64_t)v15, &qword_100787558);
      unint64_t v54 = *v52;
      (*v52)(v51, (uint64_t)v15, v7);
      v54(v10, v78, v7);
      sub_10003B6F8((uint64_t)v15, &qword_100787558);
      unint64_t v55 = v15;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      Class v57 = IndexPath._bridgeToObjectiveC()().super.isa;
      [v79 moveRowAtIndexPath:isa toIndexPath:v57];

      uint64_t v15 = v55;
      uint64_t v58 = *v53;
      (*v53)(v10, v7);
      v58(v51, v7);
      v50 += v77;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();

    id v46 = v76;
  }
  id v59 = v46;
  int64_t v60 = swift_bridgeObjectRetain();
  sub_100611EF8(v60, v59, (SEL *)&selRef_insertSections_withRowAnimation_);
  swift_bridgeObjectRelease();

  id v61 = v59;
  int64_t v62 = swift_bridgeObjectRetain();
  sub_100611EF8(v62, v61, (SEL *)&selRef_deleteSections_withRowAnimation_);
  swift_bridgeObjectRelease();

  id v63 = v61;
  int64_t v64 = swift_bridgeObjectRetain();
  sub_100611EF8(v64, v63, (SEL *)&selRef_reloadSections_withRowAnimation_);
  swift_bridgeObjectRelease();

  uint64_t v65 = *((void *)&v83 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v66 = *(void *)(v65 + 16);
  if (v66)
  {
    id v67 = v63;
    swift_bridgeObjectRetain();
    long long v68 = (void *)(v65 + 40);
    do
    {
      [v67 moveSection:*(v68 - 1) toSection:*v68];
      v68 += 2;
      --v66;
    }
    while (v66);

    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100610000(int a1, uint64_t a2, uint64_t (*a3)(uint64_t *), uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  int v37 = a1;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = type metadata accessor for DispatchQoS();
  uint64_t v38 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v15 = &v36[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_retain();
  uint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_100610D9C(v16, a3);
  swift_bridgeObjectRelease();
  swift_release();
  if (*((void *)v17 + 2))
  {
    uint64_t v18 = swift_allocObject();
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(v18 + 48) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(v18 + 64) = v19;
    *(_OWORD *)(v18 + 80) = *(_OWORD *)(a2 + 64);
    uint64_t v20 = *(void *)(a2 + 80);
    long long v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(v18 + 16) = *(_OWORD *)a2;
    *(_OWORD *)(v18 + 32) = v21;
    *(void *)(v18 + 96) = v20;
    *(void *)(v18 + 104) = v17;
    *(void *)(v18 + 112) = a7;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_100610F40;
    *(void *)(v22 + 24) = v18;
    id v46 = sub_1000499FC;
    uint64_t v47 = (void *)v22;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    id v44 = sub_100021888;
    uint64_t v45 = &unk_1007548C8;
    uint64_t v23 = _Block_copy(&aBlock);
    sub_100610A90(a2);
    id v24 = a7;
    swift_release();
    uint64_t v25 = (void *)swift_allocObject();
    uint64_t v27 = v40;
    uint64_t v26 = v41;
    void v25[2] = v24;
    v25[3] = v27;
    v25[4] = v26;
    id v46 = sub_100610FA4;
    uint64_t v47 = v25;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    id v44 = sub_100106858;
    uint64_t v45 = &unk_100754918;
    uint64_t v28 = _Block_copy(&aBlock);
    sub_10006C140(v27);
    id v29 = v24;
    swift_release();
    [v29 performBatchUpdates:v23 completion:v28];
    _Block_release(v28);
    _Block_release(v23);
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10007CD0C();
    long long v31 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v32 = swift_allocObject();
    uint64_t v34 = v40;
    uint64_t v33 = v41;
    *(void *)(v32 + 16) = v40;
    *(void *)(v32 + 24) = v33;
    *(unsigned char *)(v32 + 32) = v37 & 1;
    id v46 = sub_100610FF0;
    uint64_t v47 = (void *)v32;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    id v44 = sub_10000AD88;
    uint64_t v45 = &unk_100754968;
    uint64_t v35 = _Block_copy(&aBlock);
    sub_10006C140(v34);
    swift_release();
    static DispatchQoS.unspecified.getter();
    long long aBlock = (void **)_swiftEmptyArrayStorage;
    sub_100612AF0((unint64_t *)&qword_10078C6E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10003B754((uint64_t *)&unk_100788E50);
    sub_100037EA0((unint64_t *)&qword_10078C6F0, (uint64_t *)&unk_100788E50);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v35);

    (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v12, v10);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v38 + 8))(v15, v13);
  }
}

uint64_t sub_100610500(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_100785768 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_1007ABF88);
  sub_100610A90(a1);
  swift_bridgeObjectRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    uint64_t v10 = *(void *)(a1 + 72);
    unint64_t v11 = *(void *)(a1 + 80);
    swift_bridgeObjectRetain();
    sub_1000385A8(v10, v11, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100611024(a1);
    *(_WORD *)(v9 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Reloading section header footer for %s: count=%ld", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_100611024(a1);

    swift_bridgeObjectRelease();
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  swift_retain();
  id v13 = a3;
  sub_100612498(a2, sub_100611104, v12);
  return swift_release_n();
}

void sub_10061073C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_10003B754(&qword_1007ABFD0);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v8, &qword_1007ABFD0);
  uint64_t v9 = type metadata accessor for IndexSet();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
  {
    IndexSet._bridgeToObjectiveC()(v11);
    uint64_t v12 = v13;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
  }
  [a3 _reloadSectionHeaderFooters:v12 withRowAnimation:a2];
}

void sub_100610874(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    v6[4] = a3;
    v6[5] = a4;
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 1107296256;
    _OWORD v6[2] = sub_100106858;
    v6[3] = &unk_100754990;
    long long v5 = _Block_copy(v6);
    swift_retain();
    swift_release();
  }
  else
  {
    long long v5 = 0;
  }
  [a2 performBatchUpdates:0 completion:v5];
  _Block_release(v5);
}

id sub_10061093C()
{
  return [*v0 beginUpdates];
}

id sub_10061094C()
{
  return [*v0 endUpdates];
}

uint64_t sub_10061095C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_10060F1E4(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t type metadata accessor for TTRITreeViewTableUpdates.IndexAndAnimation()
{
  return sub_10003BC54();
}

uint64_t sub_100610998()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 128)) {
    swift_release();
  }
  if (*(void *)(v0 + 144)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 160, 7);
}

uint64_t sub_100610A48()
{
  return sub_10060F42C((uint64_t)(v0 + 3), v0[14], v0[15], v0[16], v0[17], v0[18], v0[19]);
}

uint64_t sub_100610A80()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100610A90(uint64_t a1)
{
  return a1;
}

uint64_t sub_100610B38()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 104)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 128, 7);
}

uint64_t sub_100610BD0()
{
  return sub_10060F6BC(v0 + 16, *(void *)(v0 + 104), *(void *)(v0 + 112), *(void **)(v0 + 120));
}

uint64_t sub_100610BE0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100610BF0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(void *)(v0 + 120)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 144, 7);
}

uint64_t sub_100610C90(int a1)
{
  return sub_100610000(a1, v1 + 16, *(uint64_t (**)(uint64_t *))(v1 + 104), *(void *)(v1 + 112), *(void *)(v1 + 120), *(void *)(v1 + 128), *(void **)(v1 + 136));
}

uint64_t sub_100610CA4(uint64_t a1, uint64_t a2)
{
  if (!sub_1000B98D8(*(void **)a1, *(void **)a2)) {
    return 0;
  }
  if (!sub_1000B98D8(*(void **)(a1 + 8), *(void **)(a2 + 8))) {
    return 0;
  }
  if (!sub_1000B98D8(*(void **)(a1 + 16), *(void **)(a2 + 16))) {
    return 0;
  }
  sub_1000B995C(*(int64x2_t **)(a1 + 24), *(int64x2_t **)(a2 + 24));
  if ((v4 & 1) == 0
    || !sub_1000B99DC(*(void *)(a1 + 32), *(void *)(a2 + 32))
    || !sub_1000B99DC(*(void *)(a1 + 40), *(void *)(a2 + 40))
    || !sub_1000B99DC(*(void *)(a1 + 48), *(void *)(a2 + 48))
    || (sub_1000B9BF0(*(void *)(a1 + 56), *(void *)(a2 + 56)) & 1) == 0
    || !sub_1000B9E10(*(void *)(a1 + 64), *(void *)(a2 + 64)))
  {
    return 0;
  }
  if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

char *sub_100610D9C(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (char *)_swiftEmptyArrayStorage;
  }
  char v4 = (uint64_t *)(swift_bridgeObjectRetain() + 72);
  long long v5 = (char *)_swiftEmptyArrayStorage;
  do
  {
    uint64_t v7 = v4 - 5;
    uint64_t v9 = *v4;
    v4 += 6;
    uint64_t v8 = v9;
    uint64_t v10 = a2(v7);
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v5 = sub_10056FDE4(0, *((void *)v5 + 2) + 1, 1, v5);
      }
      unint64_t v14 = *((void *)v5 + 2);
      unint64_t v13 = *((void *)v5 + 3);
      if (v14 >= v13 >> 1) {
        long long v5 = sub_10056FDE4((char *)(v13 > 1), v14 + 1, 1, v5);
      }
      *((void *)v5 + 2) = v14 + 1;
      uint64_t v6 = &v5[16 * v14];
      *((void *)v6 + 4) = v12;
      *((void *)v6 + 5) = v8;
    }
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100610EB0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

uint64_t sub_100610F40()
{
  return sub_100610500(v0 + 16, *(void *)(v0 + 104), *(void **)(v0 + 112));
}

uint64_t sub_100610F4C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100610F5C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100610FA4(uint64_t a1)
{
  sub_100610874(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100610FB0()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_100610FF0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 16);
  if (v1) {
    return v1(*(unsigned __int8 *)(v0 + 32));
  }
  return result;
}

uint64_t sub_100611024(uint64_t a1)
{
  return a1;
}

uint64_t sub_1006110CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100611104(uint64_t a1, uint64_t a2)
{
  sub_10061073C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10061110C(uint64_t a1, void *a2, SEL *a3)
{
  uint64_t v75 = a3;
  id v76 = a2;
  uint64_t v80 = sub_10003B754(qword_10078A138);
  uint64_t v4 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v79 = (uint64_t)v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v81 = (uint64_t)v69 - v7;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v69 - v9;
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)v69 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _swiftEmptyDictionarySingleton;
  long long v82 = v14;
  long long v83 = _swiftEmptyDictionarySingleton;
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v71 = v4;
  if (v16)
  {
    uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v18 = (v17 + 32) & ~v17;
    uint64_t v19 = a1 + v18;
    uint64_t v20 = *(void *)(v4 + 72);
    unint64_t v78 = v18;
    int64_t v73 = v17 | 7;
    uint64_t v74 = (void *)(v20 + v18);
    v69[1] = a1;
    swift_bridgeObjectRetain();
    long long v21 = _swiftEmptyDictionarySingleton;
    long long v72 = xmmword_10066C6F0;
    uint64_t v77 = v20;
    do
    {
      uint64_t v24 = v81;
      sub_10003B694(v19, v81, qword_10078A138);
      Swift::UInt v25 = *(void *)(v24 + *(int *)(v80 + 36));
      unint64_t v27 = sub_10035C8DC(v25);
      uint64_t v28 = v21[2];
      BOOL v29 = (v26 & 1) == 0;
      uint64_t v30 = v28 + v29;
      if (__OFADD__(v28, v29))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      long long v31 = v21;
      char v32 = v26;
      if (v21[3] < v30)
      {
        sub_10057898C(v30, 1);
        uint64_t v33 = v83;
        unint64_t v34 = sub_10035C8DC(v25);
        if ((v32 & 1) != (v35 & 1)) {
          goto LABEL_50;
        }
        unint64_t v27 = v34;
        long long v31 = v33;
      }
      if (v32)
      {
        long long v21 = v31;
        uint64_t v36 = v31[7];
        sub_100028C3C(v81, v79, qword_10078A138);
        unint64_t v37 = *(void *)(v36 + 8 * v27);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v36 + 8 * v27) = v37;
        uint64_t v70 = v36;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v37 = sub_10056FDD0(0, *(void *)(v37 + 16) + 1, 1, v37);
          *(void *)(v36 + 8 * v27) = v37;
        }
        unint64_t v40 = *(void *)(v37 + 16);
        unint64_t v39 = *(void *)(v37 + 24);
        if (v40 >= v39 >> 1)
        {
          unint64_t v37 = sub_10056FDD0(v39 > 1, v40 + 1, 1, v37);
          *(void *)(v70 + 8 * v27) = v37;
        }
        *(void *)(v37 + 16) = v40 + 1;
        unint64_t v22 = v37 + v78;
        uint64_t v23 = v77;
        sub_100028C3C(v79, v22 + v40 * v77, qword_10078A138);
        unint64_t v14 = v82;
      }
      else
      {
        long long v21 = v31;
        sub_10003B754(&qword_1007A75A0);
        uint64_t v41 = swift_allocObject();
        *(_OWORD *)(v41 + 16) = v72;
        sub_100028C3C(v81, v41 + v78, qword_10078A138);
        v21[(v27 >> 6) + 8] |= 1 << v27;
        uint64_t v42 = 8 * v27;
        *(void *)(v21[6] + v42) = v25;
        *(void *)(v21[7] + v42) = v41;
        uint64_t v43 = v21[2];
        BOOL v44 = __OFADD__(v43, 1);
        uint64_t v45 = v43 + 1;
        if (v44) {
          goto LABEL_48;
        }
        void v21[2] = v45;
        uint64_t v23 = v77;
      }
      v19 += v23;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v15 = v21;
  }
  uint64_t v46 = 0;
  uint64_t v47 = v15[8];
  *(void *)&long long v72 = v15 + 8;
  uint64_t v48 = 1 << *((unsigned char *)v15 + 32);
  uint64_t v49 = -1;
  if (v48 < 64) {
    uint64_t v49 = ~(-1 << v48);
  }
  unint64_t v50 = v49 & v47;
  int64_t v73 = (unint64_t)(v48 + 63) >> 6;
  uint64_t v74 = v15;
  uint64_t v81 = v12 + 32;
  while (1)
  {
    if (v50)
    {
      unint64_t v52 = __clz(__rbit64(v50));
      v50 &= v50 - 1;
      unint64_t v53 = v52 | (v46 << 6);
      goto LABEL_36;
    }
    int64_t v54 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      goto LABEL_47;
    }
    if (v54 >= v73) {
      return swift_release();
    }
    unint64_t v55 = *(void *)(v72 + 8 * v54);
    ++v46;
    if (!v55)
    {
      uint64_t v46 = v54 + 1;
      if (v54 + 1 >= v73) {
        return swift_release();
      }
      unint64_t v55 = *(void *)(v72 + 8 * v46);
      if (!v55)
      {
        uint64_t v46 = v54 + 2;
        if (v54 + 2 >= v73) {
          return swift_release();
        }
        unint64_t v55 = *(void *)(v72 + 8 * v46);
        if (!v55)
        {
          int64_t v56 = v54 + 3;
          if (v56 >= v73) {
            return swift_release();
          }
          unint64_t v55 = *(void *)(v72 + 8 * v56);
          uint64_t v46 = v56;
          if (!v55) {
            break;
          }
        }
      }
    }
LABEL_35:
    unint64_t v50 = (v55 - 1) & v55;
    unint64_t v53 = __clz(__rbit64(v55)) + (v46 << 6);
LABEL_36:
    uint64_t v57 = 8 * v53;
    uint64_t v58 = v15[7];
    uint64_t v80 = *(void *)(v15[6] + v57);
    uint64_t v59 = *(void *)(v58 + v57);
    int64_t v60 = *(void *)(v59 + 16);
    if (v60)
    {
      unint64_t v78 = v50;
      uint64_t v79 = v46;
      long long v83 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004D3698(0, v60, 0);
      uint64_t v61 = *(unsigned __int8 *)(v71 + 80);
      uint64_t v77 = v59;
      uint64_t v62 = v59 + ((v61 + 32) & ~v61);
      uint64_t v63 = *(void *)(v71 + 72);
      do
      {
        sub_10003B694(v62, (uint64_t)v10, qword_10078A138);
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, v10, v11);
        sub_10003B6F8((uint64_t)v10, qword_10078A138);
        int64_t v64 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D3698(0, v64[2] + 1, 1);
          int64_t v64 = v83;
        }
        unint64_t v66 = v64[2];
        unint64_t v65 = v64[3];
        if (v66 >= v65 >> 1)
        {
          sub_1004D3698(v65 > 1, v66 + 1, 1);
          int64_t v64 = v83;
        }
        v64[2] = v66 + 1;
        unint64_t v67 = (unint64_t)v64
            + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
            + *(void *)(v12 + 72) * v66;
        unint64_t v14 = v82;
        (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v67, v82, v11);
        long long v83 = v64;
        v62 += v63;
        --v60;
      }
      while (v60);
      swift_bridgeObjectRelease();
      unint64_t v50 = v78;
      uint64_t v46 = v79;
    }
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v76 *v75 isa:v80];
    swift_bridgeObjectRelease();

    uint64_t v15 = v74;
  }
  while (1)
  {
    uint64_t v46 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      break;
    }
    if (v46 >= v73) {
      return swift_release();
    }
    unint64_t v55 = *(void *)(v72 + 8 * v46);
    ++v56;
    if (v55) {
      goto LABEL_35;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:

  type metadata accessor for RowAnimation(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1006117C4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v70[1] = a3;
  id v71 = a4;
  int64_t v73 = (void (*)(void *))a2;
  uint64_t v5 = sub_10003B754(qword_10078A138);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v80 = (uint64_t)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v82 = (uint64_t)v70 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v70 - v11;
  uint64_t v81 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v15 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = _swiftEmptyDictionarySingleton;
  long long v83 = v15;
  long long v84 = _swiftEmptyDictionarySingleton;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v72 = v6;
  if (v17)
  {
    uint64_t v18 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v19 = (v18 + 32) & ~v18;
    uint64_t v20 = a1 + v19;
    uint64_t v21 = *(void *)(v6 + 72);
    uint64_t v79 = v19;
    uint64_t v76 = v18 | 7;
    uint64_t v77 = v21 + v19;
    v70[0] = a1;
    swift_bridgeObjectRetain();
    unint64_t v22 = _swiftEmptyDictionarySingleton;
    long long v75 = xmmword_10066C6F0;
    unint64_t v78 = v5;
    do
    {
      uint64_t v23 = v82;
      sub_10003B694(v20, v82, qword_10078A138);
      Swift::UInt v24 = *(void *)(v23 + *(int *)(v5 + 36));
      unint64_t v26 = sub_10035C8DC(v24);
      uint64_t v27 = v22[2];
      BOOL v28 = (v25 & 1) == 0;
      uint64_t v29 = v27 + v28;
      if (__OFADD__(v27, v28))
      {
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
        goto LABEL_53;
      }
      uint64_t v30 = v22;
      char v31 = v25;
      if (v22[3] < v29)
      {
        sub_10057898C(v29, 1);
        char v32 = v84;
        unint64_t v33 = sub_10035C8DC(v24);
        if ((v31 & 1) != (v34 & 1)) {
          goto LABEL_54;
        }
        unint64_t v26 = v33;
        uint64_t v30 = v32;
      }
      if (v31)
      {
        unint64_t v22 = v30;
        char v35 = (void *)v30[7];
        sub_100028C3C(v82, v80, qword_10078A138);
        unint64_t v36 = v35[v26];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v35[v26] = v36;
        uint64_t v74 = v35;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v36 = sub_10056FDD0(0, *(void *)(v36 + 16) + 1, 1, v36);
          v35[v26] = v36;
        }
        unint64_t v39 = *(void *)(v36 + 16);
        unint64_t v38 = *(void *)(v36 + 24);
        if (v39 >= v38 >> 1)
        {
          unint64_t v36 = sub_10056FDD0(v38 > 1, v39 + 1, 1, v36);
          v74[v26] = v36;
        }
        *(void *)(v36 + 16) = v39 + 1;
        sub_100028C3C(v80, v36 + v79 + v39 * v21, qword_10078A138);
        uint64_t v5 = v78;
      }
      else
      {
        unint64_t v22 = v30;
        sub_10003B754(&qword_1007A75A0);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = v75;
        sub_100028C3C(v82, v40 + v79, qword_10078A138);
        v22[(v26 >> 6) + 8] |= 1 << v26;
        uint64_t v41 = 8 * v26;
        *(void *)(v22[6] + v41) = v24;
        *(void *)(v22[7] + v41) = v40;
        uint64_t v42 = v22[2];
        BOOL v43 = __OFADD__(v42, 1);
        uint64_t v44 = v42 + 1;
        if (v43) {
          goto LABEL_52;
        }
        v22[2] = v44;
      }
      v20 += v21;
      --v17;
    }
    while (v17);
    swift_bridgeObjectRelease();
    uint64_t v15 = v83;
    uint64_t v16 = v22;
    uint64_t v6 = v72;
  }
  uint64_t v45 = 0;
  uint64_t v46 = v16[8];
  uint64_t v74 = v16 + 8;
  uint64_t v47 = 1 << *((unsigned char *)v16 + 32);
  uint64_t v48 = -1;
  if (v47 < 64) {
    uint64_t v48 = ~(-1 << v47);
  }
  unint64_t v49 = v48 & v46;
  *(void *)&long long v75 = (unint64_t)(v47 + 63) >> 6;
  uint64_t v82 = v13 + 32;
  unint64_t v50 = v73;
  uint64_t v76 = (uint64_t)v16;
  while (1)
  {
    if (v49)
    {
      unint64_t v52 = __clz(__rbit64(v49));
      v49 &= v49 - 1;
      unint64_t v53 = v52 | (v45 << 6);
      goto LABEL_37;
    }
    uint64_t v54 = v45 + 1;
    if (__OFADD__(v45, 1)) {
      goto LABEL_51;
    }
    if (v54 >= (uint64_t)v75) {
      return swift_release();
    }
    unint64_t v55 = v74[v54];
    ++v45;
    if (!v55)
    {
      uint64_t v45 = v54 + 1;
      if (v54 + 1 >= (uint64_t)v75) {
        return swift_release();
      }
      unint64_t v55 = v74[v45];
      if (!v55)
      {
        uint64_t v45 = v54 + 2;
        if (v54 + 2 >= (uint64_t)v75) {
          return swift_release();
        }
        unint64_t v55 = v74[v45];
        if (!v55)
        {
          uint64_t v56 = v54 + 3;
          if (v56 >= (uint64_t)v75) {
            return swift_release();
          }
          unint64_t v55 = v74[v56];
          uint64_t v45 = v56;
          if (!v55) {
            break;
          }
        }
      }
    }
LABEL_36:
    unint64_t v49 = (v55 - 1) & v55;
    unint64_t v53 = __clz(__rbit64(v55)) + (v45 << 6);
LABEL_37:
    uint64_t v57 = 8 * v53;
    uint64_t v58 = v16[7];
    uint64_t v79 = *(void *)(v16[6] + v57);
    uint64_t v80 = v45;
    uint64_t v59 = *(void *)(v58 + v57);
    int64_t v60 = *(void *)(v59 + 16);
    if (v60)
    {
      unint64_t v78 = v49;
      long long v84 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004D3698(0, v60, 0);
      uint64_t v61 = *(unsigned __int8 *)(v6 + 80);
      uint64_t v77 = v59;
      uint64_t v62 = v59 + ((v61 + 32) & ~v61);
      uint64_t v63 = *(void *)(v6 + 72);
      uint64_t v64 = v81;
      do
      {
        sub_10003B694(v62, (uint64_t)v12, qword_10078A138);
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v12, v64);
        sub_10003B6F8((uint64_t)v12, qword_10078A138);
        unint64_t v65 = v84;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1004D3698(0, v65[2] + 1, 1);
          uint64_t v64 = v81;
          unint64_t v65 = v84;
        }
        unint64_t v67 = v65[2];
        unint64_t v66 = v65[3];
        if (v67 >= v66 >> 1)
        {
          sub_1004D3698(v66 > 1, v67 + 1, 1);
          uint64_t v64 = v81;
          unint64_t v65 = v84;
        }
        v65[2] = v67 + 1;
        uint64_t v15 = v83;
        (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))((unint64_t)v65+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v67, v83, v64);
        long long v84 = v65;
        v62 += v63;
        --v60;
      }
      while (v60);
      swift_bridgeObjectRelease();
      uint64_t v6 = v72;
      unint64_t v50 = v73;
      unint64_t v49 = v78;
      uint64_t v68 = v79;
      if (!v73)
      {
LABEL_20:
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        [v71 reloadRowsAtIndexPaths:isa withRowAnimation:v68];
        swift_bridgeObjectRelease();

        goto LABEL_21;
      }
    }
    else
    {
      unint64_t v65 = _swiftEmptyArrayStorage;
      uint64_t v68 = v79;
      if (!v50) {
        goto LABEL_20;
      }
    }
    if (v68 != 5) {
      goto LABEL_20;
    }
    swift_retain();
    v50(v65);
    sub_1000499C4((uint64_t)v50);
    swift_bridgeObjectRelease();
LABEL_21:
    uint64_t v16 = (void *)v76;
    uint64_t v45 = v80;
  }
  while (1)
  {
    uint64_t v45 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      break;
    }
    if (v45 >= (uint64_t)v75) {
      return swift_release();
    }
    unint64_t v55 = v74[v45];
    ++v56;
    if (v55) {
      goto LABEL_36;
    }
  }
LABEL_53:
  __break(1u);
LABEL_54:
  type metadata accessor for RowAnimation(0);
  sub_1000499C4((uint64_t)v73);

  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100611EF8(int64_t a1, void *a2, SEL *a3)
{
  unint64_t v66 = a3;
  id v67 = a2;
  uint64_t v4 = type metadata accessor for IndexSet();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v65 = (char *)&v60 - v9;
  uint64_t v10 = _swiftEmptyDictionarySingleton;
  uint64_t v72 = _swiftEmptyDictionarySingleton;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v64 = v8;
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
    long long v68 = xmmword_10066C6F0;
    int64_t v69 = a1;
    do
    {
      long long v70 = *(_OWORD *)(a1 + 16 * v12 + 32);
      Swift::UInt v13 = *((void *)&v70 + 1);
      unint64_t v15 = sub_10035C8DC(*((Swift::UInt *)&v70 + 1));
      uint64_t v16 = v10[2];
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      char v19 = v14;
      if (v10[3] < v18)
      {
        sub_100578980(v18, 1);
        uint64_t v10 = v72;
        unint64_t v20 = sub_10035C8DC(v13);
        if ((v19 & 1) != (v21 & 1)) {
          goto LABEL_52;
        }
        unint64_t v15 = v20;
      }
      if (v19)
      {
        uint64_t v22 = v10[7];
        uint64_t v23 = *(char **)(v22 + 8 * v15);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v22 + 8 * v15) = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v23 = sub_10056FDE4(0, *((void *)v23 + 2) + 1, 1, v23);
          *(void *)(v22 + 8 * v15) = v23;
        }
        unint64_t v26 = *((void *)v23 + 2);
        unint64_t v25 = *((void *)v23 + 3);
        if (v26 >= v25 >> 1)
        {
          uint64_t v23 = sub_10056FDE4((char *)(v25 > 1), v26 + 1, 1, v23);
          *(void *)(v22 + 8 * v15) = v23;
        }
        *((void *)v23 + 2) = v26 + 1;
        *(_OWORD *)&v23[16 * v26 + 32] = v70;
        a1 = v69;
      }
      else
      {
        sub_10003B754(&qword_1007A75A8);
        uint64_t v27 = swift_allocObject();
        long long v28 = v70;
        *(_OWORD *)(v27 + 16) = v68;
        *(_OWORD *)(v27 + 32) = v28;
        v10[(v15 >> 6) + 8] |= 1 << v15;
        uint64_t v29 = 8 * v15;
        *(void *)(v10[6] + v29) = v13;
        *(void *)(v10[7] + v29) = v27;
        uint64_t v30 = v10[2];
        BOOL v31 = __OFADD__(v30, 1);
        uint64_t v32 = v30 + 1;
        if (v31) {
          goto LABEL_50;
        }
        void v10[2] = v32;
      }
      ++v12;
    }
    while (v11 != v12);
    swift_bridgeObjectRelease();
    uint64_t v8 = v64;
  }
  int64_t v33 = 0;
  uint64_t v34 = v10[8];
  int64_t v60 = v10 + 8;
  uint64_t v35 = 1 << *((unsigned char *)v10 + 32);
  uint64_t v36 = -1;
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  unint64_t v37 = v36 & v34;
  uint64_t v63 = (void (**)(char *, char *, uint64_t))(v8 + 4);
  uint64_t v64 = v10;
  int64_t v61 = (unint64_t)(v35 + 63) >> 6;
  uint64_t v62 = (void (**)(char *, uint64_t))(v8 + 1);
  while (1)
  {
    if (v37)
    {
      unint64_t v42 = __clz(__rbit64(v37));
      v37 &= v37 - 1;
      unint64_t v43 = v42 | (v33 << 6);
      goto LABEL_36;
    }
    int64_t v44 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      goto LABEL_49;
    }
    if (v44 >= v61) {
      return swift_release();
    }
    unint64_t v45 = v60[v44];
    ++v33;
    if (!v45)
    {
      int64_t v33 = v44 + 1;
      if (v44 + 1 >= v61) {
        return swift_release();
      }
      unint64_t v45 = v60[v33];
      if (!v45)
      {
        int64_t v33 = v44 + 2;
        if (v44 + 2 >= v61) {
          return swift_release();
        }
        unint64_t v45 = v60[v33];
        if (!v45)
        {
          int64_t v46 = v44 + 3;
          if (v46 >= v61) {
            return swift_release();
          }
          unint64_t v45 = v60[v46];
          int64_t v33 = v46;
          if (!v45) {
            break;
          }
        }
      }
    }
LABEL_35:
    unint64_t v37 = (v45 - 1) & v45;
    unint64_t v43 = __clz(__rbit64(v45)) + (v33 << 6);
LABEL_36:
    uint64_t v47 = 8 * v43;
    uint64_t v48 = v10[7];
    *(void *)&long long v70 = *(void *)(v10[6] + v47);
    uint64_t v49 = *(void *)(v48 + v47);
    int64_t v50 = *(void *)(v49 + 16);
    if (v50)
    {
      *(void *)&long long v68 = v37;
      int64_t v69 = v33;
      uint64_t v72 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004D335C(0, v50, 0);
      uint64_t v51 = v72;
      unint64_t v52 = v72[2];
      uint64_t v53 = 32;
      do
      {
        uint64_t v54 = *(void *)(v49 + v53);
        uint64_t v72 = v51;
        unint64_t v55 = v51[3];
        if (v52 >= v55 >> 1)
        {
          sub_1004D335C(v55 > 1, v52 + 1, 1);
          uint64_t v51 = v72;
        }
        v51[2] = v52 + 1;
        v51[v52 + 4] = v54;
        v53 += 16;
        ++v52;
        --v50;
      }
      while (v50);
      swift_bridgeObjectRelease();
      int64_t v33 = v69;
      unint64_t v37 = v68;
    }
    else
    {
      uint64_t v51 = _swiftEmptyArrayStorage;
    }
    sub_100612AF0((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of SetAlgebra.init()();
    uint64_t v56 = v51[2];
    if (v56)
    {
      uint64_t v57 = v51 + 4;
      do
      {
        uint64_t v58 = *v57++;
        uint64_t v71 = v58;
        dispatch thunk of SetAlgebra.insert(_:)();
        --v56;
      }
      while (v56);
    }
    swift_bridgeObjectRelease();
    unint64_t v38 = v65;
    (*v63)(v65, v6, v4);
    IndexSet._bridgeToObjectiveC()(v39);
    uint64_t v41 = v40;
    [v67 *v66:v40:v70];

    (*v62)(v38, v4);
    uint64_t v10 = v64;
  }
  while (1)
  {
    int64_t v33 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      break;
    }
    if (v33 >= v61) {
      return swift_release();
    }
    unint64_t v45 = v60[v33];
    ++v46;
    if (v45) {
      goto LABEL_35;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:

  type metadata accessor for RowAnimation(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100612498(uint64_t a1, void (*a2)(uint64_t, void), uint64_t a3)
{
  uint64_t v71 = a2;
  uint64_t v72 = a3;
  uint64_t v4 = sub_10003B754(&qword_1007ABFD0);
  __chkstk_darwin(v4 - 8);
  long long v70 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IndexSet();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int64_t v69 = (char *)&v61 - v11;
  uint64_t v12 = _swiftEmptyDictionarySingleton;
  uint64_t v77 = _swiftEmptyDictionarySingleton;
  int64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    long long v68 = v10;
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    long long v73 = xmmword_10066C6F0;
    int64_t v74 = v13;
    do
    {
      long long v75 = *(_OWORD *)(a1 + 16 * v14 + 32);
      Swift::UInt v15 = *((void *)&v75 + 1);
      unint64_t v17 = sub_10035C8DC(*((Swift::UInt *)&v75 + 1));
      uint64_t v18 = v12[2];
      BOOL v19 = (v16 & 1) == 0;
      uint64_t v20 = v18 + v19;
      if (__OFADD__(v18, v19))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
        goto LABEL_51;
      }
      char v21 = v16;
      if (v12[3] < v20)
      {
        sub_100578980(v20, 1);
        uint64_t v12 = v77;
        unint64_t v22 = sub_10035C8DC(v15);
        if ((v21 & 1) != (v23 & 1)) {
          goto LABEL_52;
        }
        unint64_t v17 = v22;
      }
      if (v21)
      {
        uint64_t v24 = v12[7];
        unint64_t v25 = *(char **)(v24 + 8 * v17);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v24 + 8 * v17) = v25;
        uint64_t v27 = v12;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v25 = sub_10056FDE4(0, *((void *)v25 + 2) + 1, 1, v25);
          *(void *)(v24 + 8 * v17) = v25;
        }
        unint64_t v29 = *((void *)v25 + 2);
        unint64_t v28 = *((void *)v25 + 3);
        if (v29 >= v28 >> 1)
        {
          unint64_t v25 = sub_10056FDE4((char *)(v28 > 1), v29 + 1, 1, v25);
          *(void *)(v24 + 8 * v17) = v25;
        }
        *((void *)v25 + 2) = v29 + 1;
        *(_OWORD *)&v25[16 * v29 + 32] = v75;
        uint64_t v12 = v27;
        int64_t v13 = v74;
      }
      else
      {
        sub_10003B754(&qword_1007A75A8);
        uint64_t v30 = swift_allocObject();
        long long v31 = v75;
        *(_OWORD *)(v30 + 16) = v73;
        *(_OWORD *)(v30 + 32) = v31;
        v12[(v17 >> 6) + 8] |= 1 << v17;
        uint64_t v32 = 8 * v17;
        *(void *)(v12[6] + v32) = v15;
        *(void *)(v12[7] + v32) = v30;
        uint64_t v33 = v12[2];
        BOOL v34 = __OFADD__(v33, 1);
        uint64_t v35 = v33 + 1;
        if (v34) {
          goto LABEL_50;
        }
        v12[2] = v35;
      }
      ++v14;
    }
    while (v13 != v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = v68;
  }
  int64_t v36 = 0;
  uint64_t v37 = v12[8];
  uint64_t v62 = v12;
  uint64_t v63 = v12 + 8;
  uint64_t v38 = 1 << *((unsigned char *)v12 + 32);
  uint64_t v39 = -1;
  if (v38 < 64) {
    uint64_t v39 = ~(-1 << v38);
  }
  unint64_t v40 = v39 & v37;
  id v67 = v10 + 2;
  long long v68 = v10 + 4;
  unint64_t v66 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 7);
  int64_t v64 = (unint64_t)(v38 + 63) >> 6;
  for (uint64_t i = (void (**)(char *, uint64_t))(v10 + 1); ; (*i)(v41, v6))
  {
    if (v40)
    {
      unint64_t v43 = __clz(__rbit64(v40));
      v40 &= v40 - 1;
      unint64_t v44 = v43 | (v36 << 6);
      goto LABEL_36;
    }
    int64_t v45 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      goto LABEL_49;
    }
    if (v45 >= v64) {
      return swift_release();
    }
    unint64_t v46 = v63[v45];
    ++v36;
    if (!v46)
    {
      int64_t v36 = v45 + 1;
      if (v45 + 1 >= v64) {
        return swift_release();
      }
      unint64_t v46 = v63[v36];
      if (!v46)
      {
        int64_t v36 = v45 + 2;
        if (v45 + 2 >= v64) {
          return swift_release();
        }
        unint64_t v46 = v63[v36];
        if (!v46)
        {
          int64_t v47 = v45 + 3;
          if (v47 >= v64) {
            return swift_release();
          }
          unint64_t v46 = v63[v47];
          int64_t v36 = v47;
          if (!v46) {
            break;
          }
        }
      }
    }
LABEL_35:
    unint64_t v40 = (v46 - 1) & v46;
    unint64_t v44 = __clz(__rbit64(v46)) + (v36 << 6);
LABEL_36:
    uint64_t v48 = 8 * v44;
    uint64_t v49 = v12[7];
    *(void *)&long long v75 = *(void *)(v12[6] + v48);
    uint64_t v50 = *(void *)(v49 + v48);
    int64_t v51 = *(void *)(v50 + 16);
    if (v51)
    {
      *(void *)&long long v73 = v40;
      int64_t v74 = v36;
      uint64_t v77 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_1004D335C(0, v51, 0);
      unint64_t v52 = v77;
      unint64_t v53 = v77[2];
      uint64_t v54 = 32;
      do
      {
        uint64_t v55 = *(void *)(v50 + v54);
        uint64_t v77 = v52;
        unint64_t v56 = v52[3];
        if (v53 >= v56 >> 1)
        {
          sub_1004D335C(v56 > 1, v53 + 1, 1);
          unint64_t v52 = v77;
        }
        v52[2] = v53 + 1;
        v52[v53 + 4] = v55;
        v54 += 16;
        ++v53;
        --v51;
      }
      while (v51);
      swift_bridgeObjectRelease();
      uint64_t v12 = v62;
      int64_t v36 = v74;
      unint64_t v40 = v73;
    }
    else
    {
      unint64_t v52 = _swiftEmptyArrayStorage;
    }
    sub_100612AF0((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of SetAlgebra.init()();
    uint64_t v57 = v52[2];
    if (v57)
    {
      uint64_t v58 = v52 + 4;
      do
      {
        uint64_t v59 = *v58++;
        uint64_t v76 = v59;
        dispatch thunk of SetAlgebra.insert(_:)();
        --v57;
      }
      while (v57);
    }
    swift_bridgeObjectRelease();
    uint64_t v41 = v69;
    (*v68)(v69, v8, v6);
    uint64_t v42 = (uint64_t)v70;
    (*v67)(v70, v41, v6);
    (*v66)(v42, 0, 1, v6);
    v71(v42, v75);
    sub_10003B6F8(v42, &qword_1007ABFD0);
  }
  while (1)
  {
    int64_t v36 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v36 >= v64) {
      return swift_release();
    }
    unint64_t v46 = v63[v36];
    ++v47;
    if (v46) {
      goto LABEL_35;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  swift_release();
  type metadata accessor for RowAnimation(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_100612AF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for TTRITreeViewTableUpdates()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for TTRITreeViewTableUpdates(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TTRITreeViewTableUpdates(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRITreeViewTableUpdates(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTRITreeViewTableUpdates()
{
  return &type metadata for TTRITreeViewTableUpdates;
}

uint64_t sub_100612E54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_100612EF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_100612FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 48) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 48) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_100613064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 40) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 40) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1006130E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_10061315C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1006131D8(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  if (v5 < a2)
  {
    unint64_t v6 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v7 = a2 - v5;
    uint64_t v8 = v6 & 0xFFFFFFF8;
    if ((v6 & 0xFFFFFFF8) != 0) {
      unsigned int v9 = 2;
    }
    else {
      unsigned int v9 = v7 + 1;
    }
    if (v9 >= 0x10000) {
      unsigned int v10 = 4;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v9 < 0x100) {
      unsigned int v10 = 1;
    }
    if (v9 >= 2) {
      uint64_t v11 = v10;
    }
    else {
      uint64_t v11 = 0;
    }
    switch(v11)
    {
      case 1:
        int v12 = *((unsigned __int8 *)a1 + v6);
        if (!v12) {
          break;
        }
        goto LABEL_18;
      case 2:
        int v12 = *(unsigned __int16 *)((char *)a1 + v6);
        if (v12) {
          goto LABEL_18;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1006132ECLL);
      case 4:
        int v12 = *(_DWORD *)((char *)a1 + v6);
        if (!v12) {
          break;
        }
LABEL_18:
        int v13 = v12 - 1;
        if (v8)
        {
          int v13 = 0;
          LODWORD(v8) = *a1;
        }
        return v5 + (v8 | v13) + 1;
      default:
        break;
    }
  }
  if (v5) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  else {
    return 0;
  }
}

void sub_100613300(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v7 >= a3)
  {
    int v12 = 0;
    int v13 = a2 - v7;
    if (a2 <= v7)
    {
LABEL_14:
      switch(v12)
      {
        case 1:
          a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 2:
          *(_WORD *)&a1[v8] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_27;
        case 3:
          goto LABEL_34;
        case 4:
          *(_DWORD *)&a1[v8] = 0;
          goto LABEL_26;
        default:
LABEL_26:
          if (a2)
          {
LABEL_27:
            char v16 = *(void (**)(void))(v6 + 56);
            v16();
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v9 = a3 - v7;
    if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      int v11 = 4;
    }
    else {
      int v11 = 2;
    }
    if (v10 < 0x100) {
      int v11 = 1;
    }
    if (v10 >= 2) {
      int v12 = v11;
    }
    else {
      int v12 = 0;
    }
    int v13 = a2 - v7;
    if (a2 <= v7) {
      goto LABEL_14;
    }
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v14 = v13;
  }
  else {
    int v14 = 1;
  }
  if (((*(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v15 = ~v7 + a2;
    bzero(a1, v8);
    *(_DWORD *)a1 = v15;
  }
  switch(v12)
  {
    case 1:
      a1[v8] = v14;
      break;
    case 2:
      *(_WORD *)&a1[v8] = v14;
      break;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1006134ACLL);
    case 4:
      *(_DWORD *)&a1[v8] = v14;
      break;
    default:
      return;
  }
}

id sub_1006134FC()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIImageView) init];
    LODWORD(v5) = 1148846080;
    LODWORD(v6) = 1148846080;
    [v4 setLayoutSize:NUIContainerViewSizeUseDefault[0] withHorizontalContentPriority:NUIContainerViewSizeUseDefault[1] verticalContentPriority:v5 v6];
    unsigned int v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_100613598()
{
  id v1 = sub_100613688();
  uint64_t v2 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText;
  id v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText);
  if (v3)
  {
    id v4 = [v3 string];
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v7 = v6;

    swift_bridgeObjectRelease();
    uint64_t v8 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v9 = v8 == 0;
  }
  else
  {
    BOOL v9 = 1;
  }
  [v1 setHidden:v9];

  id v11 = sub_100613688();
  id v10 = *(id *)(v0 + v2);
  [v11 setAttributedText:v10];
}

id sub_100613688()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UILabel) init];
    [v4 setNumberOfLines:0];
    [v4 setTextAlignment:4];
    [v4 setLineBreakMode:0];
    [v4 setAdjustsFontForContentSizeCategory:1];
    LODWORD(v5) = 1144750080;
    LODWORD(v6) = 1144750080;
    [v4 setLayoutSize:NUIContainerViewSizeUseDefault[0] withHorizontalContentPriority:NUIContainerViewSizeUseDefault[1] verticalContentPriority:v5 v6];
    unint64_t v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v8 = v2;
  return v3;
}

id sub_100613794(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel] = 0;
  v12.receiver = v4;
  v12.super_class = ObjectType;
  [super initWithFrame:a1, a2, a3, a4];
  sub_100613854();

  return v10;
}

uint64_t sub_100613854()
{
  [v0 setAxis:0];
  [v0 setDistribution:6];
  [v0 setAlignment:2];
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100613C98;
  *(void *)(v2 + 24) = v1;
  v6[4] = sub_1000218B0;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  _OWORD v6[2] = sub_100021888;
  v6[3] = &unk_100754B28;
  id v3 = _Block_copy(v6);
  id v4 = v0;
  swift_retain();
  swift_release();
  [v4 performBatchUpdates:v3];
  _Block_release(v3);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

void sub_100613A30(void *a1)
{
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10066C430;
  *(void *)(v2 + 32) = sub_1006134FC();
  *(void *)(v2 + 40) = sub_100613688();
  specialized Array._endMutation()();
  sub_1001141B8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setArrangedSubviews:isa];
}

uint64_t type metadata accessor for TTRILocationIndicator()
{
  return self;
}

void sub_100613BC4()
{
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_icon] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_attributedLocationText] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator_textColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___iconImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRILocationIndicator____lazy_storage___textLabel] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100613C60()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100613C98()
{
  sub_100613A30(*(void **)(v0 + 16));
}

uint64_t sub_100613CA0()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100613CB0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AC0B8);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AC0B8);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100613D78(void *a1, char a2)
{
  uint64_t v4 = type metadata accessor for UTType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    if ([a1 canLoadObjectOfClass:swift_getObjCClassFromMetadata()]) {
      return sub_10061622C(a1);
    }
    static UTType.image.getter();
    UTType.identifier.getter();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v10 = [a1 hasItemConformingToTypeIdentifier:v9];

    if (v10) {
      return sub_10061622C(a1);
    }
  }
  if ((a2 & 2) != 0)
  {
    sub_1000368FC(0, (unint64_t *)&unk_100791B60);
    if ([a1 canLoadObjectOfClass:swift_getObjCClassFromMetadata()]) {
      return sub_10061411C(a1);
    }
  }
  if ((a2 & 4) != 0)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    if ([a1 canLoadObjectOfClass:ObjCClassFromMetadata])
    {
      if ([a1 canLoadObjectOfClass:ObjCClassFromMetadata]) {
        goto LABEL_15;
      }
      goto LABEL_17;
    }
  }
  if ((a2 & 8) == 0
    || (sub_1000368FC(0, (unint64_t *)&qword_100791B70),
        uint64_t v12 = swift_getObjCClassFromMetadata(),
        ![a1 canLoadObjectOfClass:v12]))
  {
    sub_1006140C8();
    swift_allocError();
    *unsigned int v15 = 1;
LABEL_18:
    sub_10003B754(&qword_100789638);
    swift_allocObject();
    return Promise.init(error:)();
  }
  if (![a1 canLoadObjectOfClass:v12])
  {
LABEL_17:
    sub_1006140C8();
    swift_allocError();
    *char v16 = 0;
    goto LABEL_18;
  }
LABEL_15:
  NSItemProvider.loadObject<A>(ofType:)();
  int v13 = (void *)zalgo.getter();
  uint64_t v14 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();

  return v14;
}

unint64_t sub_1006140C8()
{
  unint64_t result = qword_1007AC0D0;
  if (!qword_1007AC0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AC0D0);
  }
  return result;
}

uint64_t sub_10061411C(void *a1)
{
  uint64_t v2 = v1;
  sub_1000368FC(0, (unint64_t *)&unk_100791B60);
  if ([a1 canLoadObjectOfClass:swift_getObjCClassFromMetadata()])
  {
    NSItemProvider.loadObject<A>(ofType:)();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v2;
    *(void *)(v4 + 24) = a1;
    id v5 = a1;
    uint64_t v6 = (void *)zalgo.getter();
    uint64_t v7 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    return v7;
  }
  else
  {
    sub_1006140C8();
    swift_allocError();
    unsigned char *v9 = 0;
    sub_10003B754(&qword_100789638);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_10061424C@<X0>(char *a1@<X8>)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100791E40);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UTType();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  NSString v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v18 - v11;
  swift_bridgeObjectRetain();
  UTType.init(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100791E40);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, 1, 1, v6);
  }
  else
  {
    v18[1] = v1;
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    v14(v12, v5, v6);
    static UTType.image.getter();
    char v15 = UTType.conforms(to:)();
    char v16 = *(void (**)(char *, uint64_t))(v7 + 8);
    v16(v9, v6);
    unint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
    if (v15)
    {
      v14(a1, v12, v6);
      return (*v17)(a1, 0, 1, v6);
    }
    else
    {
      v16(v12, v6);
      return (*v17)(a1, 1, 1, v6);
    }
  }
}

void sub_1006144B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  UTType.identifier.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  v11[5] = a4;
  v14[4] = sub_10061686C;
  v14[5] = v11;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100614E9C;
  void v14[3] = &unk_100754B78;
  uint64_t v12 = _Block_copy(v14);
  swift_retain();
  swift_retain();
  swift_release();
  id v13 = [a5 loadInPlaceFileRepresentationForTypeIdentifier:v10 completionHandler:v12];
  _Block_release(v12);
}

void sub_1006145EC(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, void (*a6)(id), uint64_t a7)
{
  unint64_t v56 = a6;
  uint64_t v50 = a4;
  uint64_t v51 = a5;
  int v53 = a2;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v13);
  char v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v47 - v17;
  if (qword_100785770 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100018BF8(v19, (uint64_t)qword_1007AC0B8);
  uint64_t v54 = a1;
  sub_10003B694(a1, (uint64_t)v18, (uint64_t *)&unk_100788DF0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v48 = v11;
    uint64_t v49 = a7;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v47 = swift_slowAlloc();
    uint64_t v57 = v47;
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v23 = Optional.descriptionOrNil.getter();
    uint64_t aBlock = sub_1000385A8(v23, v24, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_10003B6F8((uint64_t)v18, (uint64_t *)&unk_100788DF0);
    *(_WORD *)(v22 + 12) = 2080;
    if (v53) {
      uint64_t v25 = 1702195828;
    }
    else {
      uint64_t v25 = 0x65736C6166;
    }
    if (v53) {
      unint64_t v26 = 0xE400000000000000;
    }
    else {
      unint64_t v26 = 0xE500000000000000;
    }
    uint64_t aBlock = sub_1000385A8(v25, v26, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2080;
    uint64_t v52 = v10;
    if (a3)
    {
      swift_getErrorValue();
      uint64_t v27 = Error.rem_errorDescription.getter();
      uint64_t v29 = v28;
    }
    else
    {
      uint64_t v27 = 0;
      uint64_t v29 = 0;
    }
    uint64_t aBlock = v27;
    uint64_t v59 = v29;
    sub_10003B754(&qword_10078E3C8);
    uint64_t v30 = Optional.descriptionOrNil.getter();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t aBlock = sub_1000385A8(v30, v32, &v57);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRRemindersListImportedContent: finish loading in place file representation {url: %s, isInPlace: %s, error: %s}", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v11 = v48;
    a7 = v49;
    uint64_t v10 = v52;
  }
  else
  {
    sub_10003B6F8((uint64_t)v18, (uint64_t *)&unk_100788DF0);
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_10003B694(v54, (uint64_t)v15, (uint64_t *)&unk_100788DF0);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v15, 1, v10);
  BOOL v34 = v55;
  if (v33 == 1)
  {
    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_100788DF0);
    if (!a3)
    {
      uint64_t v35 = self;
      NSString v36 = String._bridgeToObjectiveC()();
      id v37 = [v35 internalErrorWithDebugDescription:v36];

      v56(v37);
      return;
    }
    goto LABEL_20;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v55, v15, v10);
  if (a3)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v34, v10);
LABEL_20:
    swift_errorRetain();
    v56(a3);
    swift_errorRelease();
    return;
  }
  id v38 = [objc_allocWithZone((Class)NSFileCoordinator) initWithFilePresenter:0];
  URL._bridgeToObjectiveC()(v39);
  uint64_t v41 = v40;
  uint64_t v42 = (void *)swift_allocObject();
  uint64_t v52 = v10;
  unint64_t v43 = v42;
  uint64_t v44 = v51;
  void v42[2] = v50;
  v42[3] = v44;
  v42[4] = v56;
  v42[5] = a7;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_10061687C;
  *(void *)(v45 + 24) = v43;
  uint64_t v62 = sub_100616898;
  uint64_t v63 = v45;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v59 = 1107296256;
  int64_t v60 = sub_100614DB8;
  uint64_t v61 = &unk_100754BF0;
  unint64_t v46 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v38 coordinateReadingItemAtURL:v41 options:1 error:0 byAccessor:v46];
  _Block_release(v46);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v34, v52);
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v38) {
    __break(1u);
  }
}

uint64_t sub_100614CA8(uint64_t a1, void (*a2)(char *))
{
  uint64_t v3 = type metadata accessor for TTRDirectlySavableImageData();
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = Data.init(contentsOf:options:)();
  unint64_t v8 = v7;
  sub_1001E1BA4(v6, v7);
  TTRDirectlySavableImageData.init(data:)();
  a2(v5);
  sub_1000C7ED8(v6, v8);
  return sub_1006168C0((uint64_t)v5);
}

uint64_t sub_100614DB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100614E9C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
  }
  swift_retain();
  id v14 = a4;
  v11(v10, a3, a4);
  swift_release();

  return sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100788DF0);
}

char *sub_100614FF0(void **a1)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100791E40);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRDirectlySavableImageData();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v16 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = type metadata accessor for UTType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v5, 1, 1, v13);
  id v14 = v12;
  TTRDirectlySavableImageData.init(image:sourceUTI:)();
  if (!v1)
  {
    sub_10061691C((uint64_t)v11, (uint64_t)v8);
    sub_10003B754(&qword_1007AC0D8);
    swift_allocObject();
    uint64_t v8 = (char *)Promise.init(value:)();
    sub_1006168C0((uint64_t)v11);
  }
  return v8;
}

uint64_t sub_100615180(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007AC0E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8._uint64_t countAndFlagsBits = 0xD00000000000004ELL;
  v9._object = (void *)0x80000001006C16D0;
  v8._object = (void *)0x80000001006C16F0;
  v9._uint64_t countAndFlagsBits = 0xD000000000000013;
  TTRLocalizedString(_:comment:)(v9, v8);
  uint64_t v10 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
  sub_10061691C(a1, (uint64_t)v4);
  uint64_t v11 = type metadata accessor for TTRDirectlySavableImageData();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
  id v12 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent());
  v14[1] = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)();
  sub_10003B754(&qword_100789638);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_100615378(void **a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_10003B754(&qword_1007AC0E0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DF0);
  double v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = *a1;
  id v13 = [v12 absoluteString:v9];
  if (v13 && (v14 = v13, unsigned int v15 = [v13 isMailURL], v14, v15))
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    if ([a3 canLoadObjectOfClass:swift_getObjCClassFromMetadata()])
    {
      NSItemProvider.loadObject<A>(ofType:)();
      uint64_t v16 = (void *)zalgo.getter();
      type metadata accessor for TTRRemindersListImportedContent();
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
    }
    else
    {
      sub_1006140C8();
      swift_allocError();
      *uint64_t v30 = 0;
      sub_10003B754(&qword_100789638);
      swift_allocObject();
      Promise.init(error:)();
    }
    *(void *)(swift_allocObject() + 16) = v12;
    id v31 = v12;
    unint64_t v32 = (void *)zalgo.getter();
    type metadata accessor for TTRRemindersListImportedContent();
    uint64_t v33 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    return v33;
  }
  else
  {
    id v17 = [v12 _title];
    if (v17)
    {
      uint64_t v18 = v17;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      id v23 = [v12 resourceSpecifier];
      if (v23)
      {
        unint64_t v24 = v23;
        unint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v27 = v26;

        v28._uint64_t countAndFlagsBits = 12079;
        v28._object = (void *)0xE200000000000000;
        if (String.hasPrefix(_:)(v28))
        {
          sub_10061617C(2uLL, v25, v27, v29);
          swift_bridgeObjectRelease();
          static String._fromSubstring(_:)();
          swift_bridgeObjectRelease();
        }
      }
    }
    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = type metadata accessor for URL();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
    uint64_t v20 = type metadata accessor for TTRDirectlySavableImageData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v7, 1, 1, v20);
    id v21 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent());
    v34[1] = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)();
    sub_10003B754(&qword_100789638);
    swift_allocObject();
    return Promise.init(value:)();
  }
}

uint64_t sub_1006157AC()
{
  uint64_t v0 = sub_10003B754(&qword_1007AC0E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = objc_allocWithZone((Class)REMUserActivity);
  URL._bridgeToObjectiveC()(v11);
  id v13 = v12;
  id v14 = [v10 initWithUniversalLink:v12];

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
  uint64_t v15 = type metadata accessor for TTRDirectlySavableImageData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v2, 1, 1, v15);
  objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent());
  swift_bridgeObjectRetain();
  id v16 = v14;
  v19[3] = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)();
  sub_10003B754(&qword_100789638);
  swift_allocObject();
  uint64_t v17 = Promise.init(value:)();

  return v17;
}

uint64_t sub_100615A58(void *a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007AC0E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v48 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v45 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v45 - v14;
  id v16 = (void *)*a1;
  id v47 = [objc_allocWithZone((Class)REMUserActivity) initWithUserActivity:*a1];
  id v17 = [v16 title];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    object = v20;
    uint64_t countAndFlagsBits = v19;
  }
  else
  {
    v21._object = (void *)0x80000001006C1740;
    v22._uint64_t countAndFlagsBits = 0x7265646E696D6552;
    v22._object = (void *)0xE800000000000000;
    v21._uint64_t countAndFlagsBits = 0xD00000000000006ELL;
    Swift::String v23 = TTRLocalizedString(_:comment:)(v22, v21);
    object = v23._object;
    uint64_t countAndFlagsBits = v23._countAndFlagsBits;
  }
  id v24 = [v16 contentAttributeSet];
  if (v24)
  {
    unint64_t v25 = v24;
    id v26 = [v24 textSelected];

    if (v26)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();

LABEL_21:
      uint64_t v35 = v48;
      goto LABEL_22;
    }
  }
  unint64_t v46 = v4;
  id v27 = [v16 activityType];
  uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v30 = v29;

  if (v28 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v30 == v31)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v32 & 1) == 0)
    {
      id v37 = [v16 contentAttributeSet];
      id v38 = v37;
      if (v37)
      {
        id v39 = [v37 contentDescription];

        if (v39)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
        }
      }
      uint64_t v4 = v46;
      goto LABEL_21;
    }
  }
  id v33 = [v16 webpageURL];
  if (v33)
  {
    BOOL v34 = v33;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v12, 0, 1, v5);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v12, 1, 1, v5);
  }
  uint64_t v4 = v46;
  uint64_t v35 = v48;
  sub_10007C178((uint64_t)v12, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v15, 1, v5))
  {
    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_100788DF0);
  }
  else
  {
    NSString v36 = v45;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v45, v15, v5);
    sub_10003B6F8((uint64_t)v15, (uint64_t *)&unk_100788DF0);
    URL.host.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v36, v5);
  }
LABEL_22:
  unint64_t v40 = v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v35, 1, 1, v5);
  uint64_t v41 = type metadata accessor for TTRDirectlySavableImageData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v4, 1, 1, v41);
  id v42 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent());
  uint64_t v51 = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)();
  sub_10003B754(&qword_100789638);
  swift_allocObject();
  uint64_t v43 = Promise.init(value:)();

  return v43;
}

uint64_t sub_100615FC4()
{
  uint64_t v0 = sub_10003B754(&qword_1007AC0E0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = type metadata accessor for TTRDirectlySavableImageData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  id v8 = objc_allocWithZone((Class)type metadata accessor for TTRRemindersListImportedContent());
  v10[1] = TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)();
  sub_10003B754(&qword_100789638);
  swift_allocObject();
  return Promise.init(value:)();
}

uint64_t sub_10061617C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return String.subscript.getter(a1, a2, a3, a4);
  }
  unint64_t v4 = a3;
  unint64_t v5 = a2;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v7 = 11;
  }
  unint64_t v8 = v7 | (v6 << 16);
  a1 = String.index(_:offsetBy:limitedBy:)();
  if (a2) {
    a1 = v8;
  }
  if (4 * v6 < a1 >> 14) {
    goto LABEL_14;
  }
  a2 = v8;
  a3 = v5;
  a4 = v4;

  return String.subscript.getter(a1, a2, a3, a4);
}

uint64_t sub_10061622C(void *a1)
{
  uint64_t v2 = type metadata accessor for UTType();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v40 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v36 - v6;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100791E40);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - v13;
  id v15 = [a1 registeredTypeIdentifiers];
  uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v42 = v16;
  sub_10003B754(&qword_10078E670);
  sub_100616804();
  Sequence.firstMap<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10003B694((uint64_t)v14, (uint64_t)v10, (uint64_t *)&unk_100791E40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v10, 1, v2) == 1)
  {
    sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100791E40);
    sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    if ([a1 canLoadObjectOfClass:swift_getObjCClassFromMetadata()])
    {
      NSItemProvider.loadObject<A>(ofType:)();
      id v17 = (void *)zalgo.getter();
      type metadata accessor for TTRDirectlySavableImageData();
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
    }
    else
    {
      uint64_t v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_1007AC0D8);
      swift_allocObject();
      Promise.init(error:)();
    }
  }
  else
  {
    uint64_t v39 = (uint64_t)a1;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v7, v10, v2);
    if (qword_100785770 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100018BF8(v18, (uint64_t)qword_1007AC0B8);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
    uint64_t v20 = v40;
    id v38 = v7;
    v19(v40, v7, v2);
    Swift::String v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      id v37 = v14;
      id v24 = (uint8_t *)v23;
      uint64_t v42 = swift_slowAlloc();
      *(_DWORD *)id v24 = 136315138;
      uint64_t v25 = UTType.identifier.getter();
      uint64_t v41 = sub_1000385A8(v25, v26, &v42);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v27 = *(void (**)(char *, uint64_t))(v3 + 8);
      v27(v20, v2);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "TTRRemindersListImportedContent: loading in place file representation from NSItemProvider {UTI: %s}", v24, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v14 = v37;
      swift_slowDealloc();
    }
    else
    {
      id v27 = *(void (**)(char *, uint64_t))(v3 + 8);
      v27(v20, v2);
    }

    __chkstk_darwin(v31);
    char v32 = v38;
    *(&v36 - 2) = v39;
    *(&v36 - 1) = (uint64_t)v32;
    sub_10003B754(&qword_1007AC0D8);
    swift_allocObject();
    Promise.init(resolver:)();
    v27(v32, v2);
  }
  id v33 = (void *)zalgo.getter();
  type metadata accessor for TTRRemindersListImportedContent();
  uint64_t v34 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();

  sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100791E40);
  return v34;
}

unint64_t sub_100616804()
{
  unint64_t result = qword_10079D020;
  if (!qword_10079D020)
  {
    sub_100039710(&qword_10078E670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079D020);
  }
  return result;
}

void sub_100616860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1006144B0(a1, a2, a3, a4, *(void **)(v4 + 16));
}

void sub_10061686C(uint64_t a1, int a2, void *a3)
{
  sub_1006145EC(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24), *(void (**)(id))(v3 + 32), *(void *)(v3 + 40));
}

uint64_t sub_10061687C(uint64_t a1)
{
  return sub_100614CA8(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_100616888()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100616898()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1006168C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRDirectlySavableImageData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10061691C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRDirectlySavableImageData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100616980()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006169B8(void **a1)
{
  return sub_100615378(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1006169D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100616A0C()
{
  return sub_1006157AC();
}

unsigned char *_s11ImportErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100616AF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11ImportErrorOMa()
{
  return &_s11ImportErrorON;
}

unint64_t sub_100616B30()
{
  unint64_t result = qword_1007AC0E8;
  if (!qword_1007AC0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AC0E8);
  }
  return result;
}

void sub_100616B8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  int v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  if (v3)
  {
    swift_getObjectType();
    unsigned int v4 = &v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
    uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
    uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 8];
    __int16 v7 = *((_WORD *)v4 + 8);
    char v8 = v4[18];
    uint64_t v9 = *((void *)v4 + 3);
    uint64_t v10 = *((void *)v4 + 4);
    uint64_t v11 = *((void *)v4 + 5);
    uint64_t v12 = *((void *)v4 + 6);
    *((void *)&v22 + 1) = &type metadata for TTRIRemindersListCompletedCellContentConfiguration;
    *(void *)&long long v23 = sub_100397FD4();
    uint64_t v13 = swift_allocObject();
    *(void *)&long long v21 = v13;
    *(void *)(v13 + 16) = v6;
    *(void *)(v13 + 24) = v5;
    *(_WORD *)(v13 + 32) = v7;
    *(unsigned char *)(v13 + 34) = v8;
    *(void *)(v13 + 40) = v9;
    *(void *)(v13 + 48) = v10;
    *(void *)(v13 + 56) = v11;
    *(void *)(v13 + 64) = v12;
    id v14 = v3;
    swift_bridgeObjectRetain();
    sub_10006C140(v9);
    sub_10006C140(v11);
    dispatch thunk of UIContentView.configuration.setter();
  }
  else
  {
    long long v15 = *(_OWORD *)&v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 16];
    long long v21 = *(_OWORD *)&v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
    long long v22 = v15;
    long long v23 = *(_OWORD *)&v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 32];
    uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration + 48];
    id v16 = objc_allocWithZone((Class)type metadata accessor for CompletedCellContentView());
    sub_10050AB9C((uint64_t)&v21);
    sub_10050AB9C((uint64_t)&v21);
    sub_100508BF8((uint64_t)&v21);
    uint64_t v18 = v17;
    unint64_t v19 = sub_100617604();
    sub_10050ACB8((uint64_t)&v21);
    uint64_t v20 = *(void **)v2;
    *(void *)uint64_t v2 = v18;
    *((void *)v2 + 1) = v19;
    id v14 = v18;

    [v1 insertArrangedSubview:v14 atIndex:1];
    [v1 setAlignment:3 forView:v14 inAxis:1];
  }
}

uint64_t sub_100616D44(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v10 = &v4[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0xE000000000000000;
  *((_WORD *)v10 + 8) = 0;
  v10[18] = 1;
  *(_OWORD *)(v10 + 24) = 0u;
  *(_OWORD *)(v10 + 40) = 0u;
  uint64_t v11 = &v4[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  *(void *)uint64_t v11 = 0;
  *((void *)v11 + 1) = 0;
  uint64_t v12 = OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_viewHeightSubject;
  sub_10003B754(&qword_100787768);
  swift_allocObject();
  uint64_t v13 = v4;
  *(void *)&v4[v12] = PassthroughSubject.init()();
  id v14 = [objc_allocWithZone((Class)UIView) init];
  id v15 = [self systemBackgroundColor];
  [v14 setBackgroundColor:v15];

  *(void *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_backgroundView] = v14;
  id v16 = objc_allocWithZone((Class)type metadata accessor for TTRISeparator());
  id v17 = v14;
  uint64_t v18 = (void *)TTRISeparator.init(axis:)();
  [v18 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  *(void *)&v13[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_separator] = v18;
  id v19 = v18;

  v30.receiver = v13;
  v30.super_class = ObjectType;
  id v20 = [super initWithFrame:a1, a2, a3, a4];
  long long v21 = (void *)swift_allocObject();
  void v21[2] = v20;
  v21[3] = v17;
  v21[4] = v19;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1006177D0;
  *(void *)(v22 + 24) = v21;
  v29[4] = sub_1000218B0;
  v29[5] = v22;
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 1107296256;
  v29[2] = sub_100021888;
  v29[3] = &unk_100754D70;
  long long v23 = _Block_copy(v29);
  id v24 = v20;
  id v25 = v17;
  id v26 = v19;
  id v27 = v24;
  swift_retain();
  swift_release();
  [v27 performBatchUpdates:v23];

  _Block_release(v23);
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v23 & 1) == 0) {
    return (uint64_t)v27;
  }
  __break(1u);
  return result;
}

void sub_10061705C(void *a1, void *a2, void *a3)
{
  [a1 setHorizontalAlignment:0];
  [a1 setVerticalAlignment:0];
  [a1 setDirectionalLayoutMargins:8.0, 16.0, 8.0, 16.0];
  [a1 setLayoutMarginsRelativeArrangement:0];
  [a1 setDebugBoundingBoxesEnabled:0];
  [a1 setEdgesPreservingSuperviewLayoutMargins:10];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10066C430;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  specialized Array._endMutation()();
  sub_1001141B8();
  id v7 = a2;
  id v8 = a3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setArrangedSubviews:isa];

  [a1 setAlignment:4 forView:v8 inAxis:1];
  sub_100616B8C();
}

uint64_t sub_10061720C()
{
  v5.receiver = v0;
  v5.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  id v1 = [v0 traitCollection];
  id v2 = [v1 layoutDirection];

  if (v2 == (id)1) {
    uint64_t v3 = 8;
  }
  else {
    uint64_t v3 = 2;
  }
  [*(id *)&v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_separator] setEdgesPreservingSuperviewLayoutMargins:v3];
  [v0 bounds];
  CGRectGetHeight(v6);
  return PassthroughSubject.send(_:)();
}

uint64_t sub_1006173A0()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 accessibilityElements];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t sub_100617488()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 accessibilityLabel];
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

uint64_t type metadata accessor for TTRIRemindersBoardCompletedHeaderView()
{
  return self;
}

unint64_t sub_100617604()
{
  unint64_t result = qword_1007A2DB8;
  if (!qword_1007A2DB8)
  {
    type metadata accessor for CompletedCellContentView();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007A2DB8);
  }
  return result;
}

uint64_t sub_10061765C()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1006176B4()
{
  id v1 = &v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_configuration];
  *(void *)id v1 = 0;
  *((void *)v1 + 1) = 0xE000000000000000;
  *((_WORD *)v1 + 8) = 0;
  v1[18] = 1;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  id v2 = &v0[OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_contentView];
  *(void *)id v2 = 0;
  *((void *)v2 + 1) = 0;
  uint64_t v3 = OBJC_IVAR____TtC9Reminders37TTRIRemindersBoardCompletedHeaderView_viewHeightSubject;
  sub_10003B754(&qword_100787768);
  swift_allocObject();
  *(void *)&v0[v3] = PassthroughSubject.init()();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100617788()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1006177D0()
{
  sub_10061705C(v0[2], v0[3], v0[4]);
}

uint64_t sub_1006177DC()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1006177EC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AC140);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AC140);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1006178B4(void *a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTRIActivityAlertRouterCapability();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  *(void *)(v2 + 96) = v5;
  swift_unknownObjectWeakAssign();
  sub_1000C77A4(a2, v2 + 32);
  sub_100617CC0(a2, (void (*)(void, void, void, void, void, void, void, void))sub_1000CD730);
  id v6 = [a1 viewIfLoaded];
  id v7 = [v6 window];
  sub_100617CC0(a2, (void (*)(void, void, void, void, void, void, void, void))sub_1000A74BC);

  swift_unknownObjectWeakAssign();
  return v2;
}

id sub_1006179C4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong) {
    return (id)Strong;
  }
  uint64_t v3 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = v3;
    id v1 = [v3 rootViewController];

    if (v1) {
      return v1;
    }
  }
  id result = (id)UIApp;
  if (UIApp)
  {
    id v5 = [UIApp connectedScenes];
    sub_1000368FC(0, &qword_100799F48);
    sub_10042D248();
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10003B754(&qword_100799F58);
    sub_1000368FC(0, &qword_1007A7368);
    sub_100617C64();
    Sequence.firstMap<A>(_:)();
    swift_bridgeObjectRelease();
    if (!v6) {
      return 0;
    }
    id v1 = [v6 rootViewController];

    return v1;
  }
  __break(1u);
  return result;
}

void sub_100617B40(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  self;
  id v4 = (id)swift_dynamicCastObjCClass();
  if (v4)
  {
    id v5 = v3;
    if ([v4 _isKeyWindowScene])
    {
      id v4 = [v4 keyWindow];
    }
    else
    {

      id v4 = 0;
    }
  }
  *a2 = v4;
}

uint64_t sub_100617BE0()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  sub_1000A74BC(*(id *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIHashtagAssociationRouter()
{
  return self;
}

unint64_t sub_100617C64()
{
  unint64_t result = qword_100799F60;
  if (!qword_100799F60)
  {
    sub_100039710(&qword_100799F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100799F60);
  }
  return result;
}

uint64_t sub_100617CC0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void))
{
  return a1;
}

void sub_100617D04()
{
  type metadata accessor for Optional();
  if (v0 <= 0x3F)
  {
    sub_100627BF8();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_100617DD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v222 = *(void *)(a3 + 16);
  uint64_t v3 = *(void *)(v222 - 8);
  uint64_t v221 = v3;
  if (*(_DWORD *)(v3 + 84)) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v4 = *(void *)(v3 + 64) + 1;
  }
  size_t __n = v4;
  uint64_t v214 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v214 - 8);
  uint64_t v6 = v5;
  int v218 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v218 & 0xF8;
  uint64_t v8 = v7 | 7;
  uint64_t v210 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v9 = *(void *)(v210 - 8);
  uint64_t v10 = v9;
  int v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = type metadata accessor for AnyTip();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = v5;
  unint64_t v15 = *(_DWORD *)(v13 + 80);
  uint64_t v16 = v11 | v15 | v7 | 7;
  unint64_t v17 = *(void *)(v14 + 64);
  uint64_t v18 = 25;
  if (v17 > 0x19) {
    uint64_t v18 = *(void *)(v14 + 64);
  }
  size_t v19 = v18 + 1;
  uint64_t v216 = v18;
  uint64_t v217 = v218 & 0xF8 | 7;
  unint64_t v20 = (((v18 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v209 = v11 + 8;
  uint64_t v212 = v11;
  unint64_t v21 = *(void *)(v9 + 64) + (v209 & ~(unint64_t)v11);
  uint64_t v215 = v6;
  unint64_t v22 = v21 + 7;
  if (v19 + ((v7 + 15) & ~v8) > v20) {
    unint64_t v20 = v19 + ((v7 + 15) & ~v8);
  }
  if (v20 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v20 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  uint64_t v213 = *(void *)(v14 + 64);
  if (v20 <= (v17 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v20 = (v17 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v211 = v15 + 1;
  unint64_t v23 = *(void *)(*(void *)(v12 - 8) + 64) + ((v15 + 1) & ~v15);
  if (v20 > v23) {
    unint64_t v23 = v20;
  }
  if (v23 <= 0x18) {
    uint64_t v24 = 24;
  }
  else {
    uint64_t v24 = v23;
  }
  if (v24 > 3) {
    goto LABEL_21;
  }
  unsigned int v25 = ((1 << (8 * v24)) + 1) >> (8 * v24);
  uint64_t v26 = 2;
  if (v25 > 0xFFF5) {
    uint64_t v26 = 4;
  }
  if (v25 <= 0xF5) {
LABEL_21:
  }
    uint64_t v26 = 1;
  uint64_t v27 = v16 | *(_DWORD *)(v221 + 80);
  if (v27 == 7 && ((v11 | v218 | *(_DWORD *)(v13 + 80) | *(_DWORD *)(v221 + 80)) & 0x100000) == 0)
  {
    size_t v28 = v16 + __n;
    if (((v16 + __n) & ~v16)
       + ((((((v26 + v24) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 9 <= 0x18)
    {
      unsigned int v206 = *(_DWORD *)(v6 + 84);
      uint64_t v29 = *(unsigned int *)(v10 + 84);
      uint64_t v30 = *(_DWORD *)(v13 + 80);
      uint64_t v207 = *(void *)(v12 - 8);
      uint64_t v208 = v12;
      size_t v205 = v21;
      size_t v219 = v19;
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v221 + 48))(a2, 1, v222))
      {
        memcpy(a1, a2, __n);
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v221 + 16))(a1, a2, v222);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v221 + 56))(a1, 0, 1, v222);
      }
      uint64_t v33 = v7 + 15;
      uint64_t v34 = v30;
      uint64_t v35 = ~v16;
      if (v24 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v24)) + 1) >> (8 * v24);
        if (v42 > 0xFFF5)
        {
          unint64_t v41 = v22;
          unsigned int v39 = 0x7FFFFFFF;
          goto LABEL_41;
        }
        int v36 = v42 + 10;
        if (v42 > 0xF5)
        {
          char v37 = 16;
LABEL_32:
          unsigned int v38 = (1 << v37) - v36;
          unsigned int v39 = 0x7FFFFFFF;
          if (v38 <= 0x7FFFFFFF) {
            int v40 = 0x7FFFFFFF;
          }
          else {
            int v40 = v38;
          }
          unint64_t v41 = v22;
          if ((v38 & 0x80000000) == 0) {
            unsigned int v39 = v40;
          }
LABEL_41:
          uint64_t v43 = (void *)(((unint64_t)a1 + v28) & v35);
          uint64_t v44 = (_DWORD *)(((unint64_t)a2 + v28) & v35);
          if (v24 <= 3)
          {
            unsigned int v51 = ((1 << (8 * v24)) + 1) >> (8 * v24);
            if (v51 > 0xFFF5) {
              goto LABEL_55;
            }
            int v45 = v51 + 10;
            if (v51 > 0xF5)
            {
              char v46 = 16;
LABEL_44:
              int v47 = (1 << v46) - v45;
              if ((v47 & 0x80000000) == 0)
              {
                if (v47 == v39) {
                  goto LABEL_46;
                }
                goto LABEL_56;
              }
LABEL_55:
              if (v39 == 0x7FFFFFFF)
              {
LABEL_46:
                if (v24 <= 3)
                {
                  unsigned int v55 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v55 > 0xFFF5) {
                    goto LABEL_68;
                  }
                  int v48 = v55 + 10;
                  if (v55 > 0xF5)
                  {
                    char v49 = 16;
LABEL_49:
                    unsigned int v50 = (1 << v49) - v48;
                    if ((v50 & 0x80000000) == 0)
                    {
                      if (v24 > 3) {
                        goto LABEL_72;
                      }
LABEL_69:
                      unsigned int v56 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                      uint64_t v57 = 2;
                      if (v56 > 0xFFF5) {
                        uint64_t v57 = 4;
                      }
                      if (v56 > 0xF5)
                      {
LABEL_73:
                        unsigned int v58 = v39 - v50;
                        if (v39 <= v50) {
                          goto LABEL_90;
                        }
                        uint64_t v59 = v57 + v24;
                        char v60 = 8 * (v57 + v24);
                        if (v59 > 3)
                        {
LABEL_75:
                          int v61 = *((unsigned __int8 *)v44 + v59);
                          if (!*((unsigned char *)v44 + v59)) {
                            goto LABEL_90;
                          }
                          goto LABEL_82;
                        }
                        unsigned int v62 = ((v58 + ~(-1 << v60)) >> v60) + 1;
                        if (HIWORD(v62))
                        {
                          int v61 = *(_DWORD *)((char *)v44 + v59);
                          if (!v61) {
                            goto LABEL_90;
                          }
                        }
                        else
                        {
                          if (v62 <= 0xFF)
                          {
                            if (v62 < 2)
                            {
LABEL_90:
                              if (!v50) {
                                goto LABEL_103;
                              }
                              if (v24 <= 3)
                              {
                                unsigned int v69 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                                if (v69 > 0xFFF5)
                                {
                                  unsigned int v65 = *(_DWORD *)((char *)v44 + v24);
                                  unsigned int v66 = ~v65;
                                  goto LABEL_101;
                                }
                                int v68 = v69 + 10;
                                if (v69 > 0xF5)
                                {
                                  int v71 = *(unsigned __int16 *)((char *)v44 + v24);
                                  unsigned int v65 = v71 | 0xFFFF0000;
                                  unsigned int v66 = v71 ^ 0xFFFF;
                                  char v67 = 16;
                                }
                                else
                                {
                                  int v70 = *((unsigned __int8 *)v44 + v24);
                                  unsigned int v65 = v70 | 0xFFFFFF00;
                                  unsigned int v66 = v70 ^ 0xFF;
                                  char v67 = 8;
                                }
                              }
                              else
                              {
                                int v64 = *((unsigned __int8 *)v44 + v24);
                                unsigned int v65 = v64 | 0xFFFFFF00;
                                unsigned int v66 = v64 ^ 0xFF;
                                char v67 = 8;
                                int v68 = 11;
                              }
                              unsigned int v72 = (1 << v67) - v68;
                              if ((v72 & 0x80000000) == 0)
                              {
                                if (v72 <= v66) {
                                  goto LABEL_103;
                                }
                                goto LABEL_102;
                              }
LABEL_101:
                              if (v66 >= 0x7FFFFFFF) {
                                goto LABEL_103;
                              }
LABEL_102:
                              if (!v65) {
                                goto LABEL_103;
                              }
LABEL_184:
                              if (v24 > 3) {
                                goto LABEL_188;
                              }
                              unsigned int v115 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                              uint64_t v116 = 2;
                              if (v115 > 0xFFF5) {
                                uint64_t v116 = 4;
                              }
                              if (v115 <= 0xF5) {
LABEL_188:
                              }
                                uint64_t v116 = 1;
                              char v32 = a1;
                              memcpy(v43, v44, ((((((v116 + v24) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                              if (v24 <= 3)
                              {
LABEL_332:
                                unsigned int v201 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                                uint64_t v202 = 2;
                                if (v201 > 0xFFF5) {
                                  uint64_t v202 = 4;
                                }
                                if (v201 > 0xF5) {
                                  goto LABEL_336;
                                }
                              }
LABEL_335:
                              uint64_t v202 = 1;
LABEL_336:
                              unint64_t v203 = ((((((v202 + v24) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 8;
                              *((unsigned char *)v43 + v203) = *((unsigned char *)v44 + v203);
                              return v32;
                            }
                            goto LABEL_75;
                          }
                          int v61 = *(unsigned __int16 *)((char *)v44 + v59);
                          if (!*(_WORD *)((char *)v44 + v59)) {
                            goto LABEL_90;
                          }
                        }
LABEL_82:
                        int v63 = (v61 - 1) << v60;
                        if (v59 > 3) {
                          int v63 = 0;
                        }
                        if (v59)
                        {
                          if (v59 > 3) {
                            LODWORD(v59) = 4;
                          }
                          switch((int)v59)
                          {
                            case 2:
                              LODWORD(v59) = *(unsigned __int16 *)v44;
                              break;
                            case 3:
                              LODWORD(v59) = *(unsigned __int16 *)v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                              break;
                            case 4:
                              LODWORD(v59) = *v44;
                              break;
                            default:
                              LODWORD(v59) = *(unsigned __int8 *)v44;
                              break;
                          }
                        }
                        if (v50 + (v59 | v63) != -1) {
                          goto LABEL_184;
                        }
                        goto LABEL_103;
                      }
LABEL_72:
                      uint64_t v57 = 1;
                      goto LABEL_73;
                    }
LABEL_68:
                    unsigned int v50 = 0x7FFFFFFF;
                    if (v24 > 3) {
                      goto LABEL_72;
                    }
                    goto LABEL_69;
                  }
                }
                else
                {
                  int v48 = 11;
                }
                char v49 = 8;
                goto LABEL_49;
              }
LABEL_56:
              if (v24 > 3) {
                goto LABEL_60;
              }
              unsigned int v52 = ((1 << (8 * v24)) + 1) >> (8 * v24);
              uint64_t v53 = 2;
              if (v52 > 0xFFF5) {
                uint64_t v53 = 4;
              }
              if (v52 <= 0xF5) {
LABEL_60:
              }
                uint64_t v53 = 1;
              unint64_t v54 = *(void *)(((((unint64_t)v44 + v24 + v53) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
              if (v54 >= 0xFFFFFFFF) {
                LODWORD(v54) = -1;
              }
              if (v54 != -1) {
                goto LABEL_184;
              }
LABEL_103:
              if (v24 > 3)
              {
LABEL_104:
                unsigned int v73 = *((unsigned __int8 *)v44 + v24);
                goto LABEL_109;
              }
              unsigned int v74 = ((1 << (8 * v24)) + 1) >> (8 * v24);
              if (v74 > 0xFFF5)
              {
                unsigned int v73 = *(_DWORD *)((char *)v44 + v24);
              }
              else
              {
                if (v74 <= 0xF5) {
                  goto LABEL_104;
                }
                unsigned int v73 = *(unsigned __int16 *)((char *)v44 + v24);
              }
LABEL_109:
              unsigned int v75 = v73 - 10;
              if (v73 >= 0xA)
              {
                if (v24 <= 3) {
                  uint64_t v76 = v24;
                }
                else {
                  uint64_t v76 = 4;
                }
                switch(v76)
                {
                  case 1:
                    int v77 = *(unsigned __int8 *)v44;
                    goto LABEL_118;
                  case 2:
                    int v77 = *(unsigned __int16 *)v44;
                    goto LABEL_118;
                  case 3:
                    int v77 = *(unsigned __int16 *)v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                    goto LABEL_118;
                  case 4:
                    int v77 = *v44;
LABEL_118:
                    if (v24 < 4) {
                      v77 |= v75 << (8 * v24);
                    }
                    unsigned int v73 = v77 + 10;
                    break;
                  default:
                    break;
                }
              }
              uint64_t v78 = ~v217;
              switch(v73)
              {
                case 0u:
                  unsigned int v79 = *((unsigned __int8 *)v44 + v216);
                  unsigned int v80 = v79 - 10;
                  if (v79 < 0xA)
                  {
                    char v32 = a1;
                  }
                  else
                  {
                    if (v216 <= 3) {
                      uint64_t v81 = v216;
                    }
                    else {
                      uint64_t v81 = 4;
                    }
                    char v32 = a1;
                    switch(v81)
                    {
                      case 1:
                        int v82 = *(unsigned __int8 *)v44;
                        goto LABEL_213;
                      case 2:
                        int v82 = *(unsigned __int16 *)v44;
                        goto LABEL_213;
                      case 3:
                        int v82 = *(unsigned __int16 *)v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                        goto LABEL_213;
                      case 4:
                        int v82 = *v44;
LABEL_213:
                        if (v216 < 4) {
                          unsigned int v79 = (v82 | (v80 << (8 * v216))) + 10;
                        }
                        else {
                          unsigned int v79 = v82 + 10;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v79)
                  {
                    case 1u:
                      uint64_t v124 = *(void **)v44;
                      *uint64_t v43 = *(void *)v44;
                      char v125 = 1;
                      goto LABEL_242;
                    case 2u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 2;
                      break;
                    case 3u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 3;
                      break;
                    case 4u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 4;
                      break;
                    case 5u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 5;
                      break;
                    case 6u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 6;
                      break;
                    case 7u:
                      long long v126 = *(_OWORD *)v44;
                      *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v44 + 9);
                      *(_OWORD *)uint64_t v43 = v126;
                      *((unsigned char *)v43 + v216) = 7;
                      break;
                    case 8u:
                      uint64_t v124 = *(void **)v44;
                      *uint64_t v43 = *(void *)v44;
                      char v125 = 8;
                      goto LABEL_242;
                    case 9u:
                      uint64_t v124 = *(void **)v44;
                      *uint64_t v43 = *(void *)v44;
                      char v125 = 9;
LABEL_242:
                      *((unsigned char *)v43 + v216) = v125;
                      id v130 = v124;
                      break;
                    default:
                      *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
                      *((unsigned char *)v43 + v216) = 0;
                      break;
                  }
                  unint64_t v131 = ((unint64_t)v43 + v216 + 8) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v132 = ((unint64_t)v44 + v216 + 8) & 0xFFFFFFFFFFFFFFF8;
                  if (*(void *)(v132 + 8) < 0xFFFFFFFFuLL)
                  {
                    long long v142 = *(_OWORD *)v132;
                    long long v143 = *(_OWORD *)(v132 + 16);
                    long long v144 = *(_OWORD *)(v132 + 48);
                    *(_OWORD *)(v131 + 32) = *(_OWORD *)(v132 + 32);
                    *(_OWORD *)(v131 + 48) = v144;
                    *(_OWORD *)unint64_t v131 = v142;
                    *(_OWORD *)(v131 + 16) = v143;
                    long long v145 = *(_OWORD *)(v132 + 64);
                    long long v146 = *(_OWORD *)(v132 + 80);
                    long long v147 = *(_OWORD *)(v132 + 96);
                    *(_OWORD *)(v131 + 106) = *(_OWORD *)(v132 + 106);
                    *(_OWORD *)(v131 + 80) = v146;
                    *(_OWORD *)(v131 + 96) = v147;
                    *(_OWORD *)(v131 + 64) = v145;
                  }
                  else
                  {
                    *(void *)unint64_t v131 = *(void *)v132;
                    *(void *)(v131 + 8) = *(void *)(v132 + 8);
                    long long v133 = *(void **)(v132 + 16);
                    uint64_t v134 = *(void *)(v132 + 24);
                    uint64_t v135 = *(void *)(v132 + 32);
                    uint64_t v136 = *(void *)(v132 + 40);
                    uint64_t v137 = *(void *)(v132 + 56);
                    uint64_t v223 = *(void *)(v132 + 48);
                    unsigned __int8 v228 = *(unsigned char *)(v132 + 64);
                    swift_bridgeObjectRetain();
                    sub_100050F84(v133, v134, v135, v136, v223, v137, v228);
                    *(void *)(v131 + 16) = v133;
                    *(void *)(v131 + 24) = v134;
                    *(void *)(v131 + 32) = v135;
                    *(void *)(v131 + 40) = v136;
                    *(void *)(v131 + 48) = v223;
                    *(void *)(v131 + 56) = v137;
                    *(unsigned char *)(v131 + 64) = v228;
                    *(unsigned char *)(v131 + 65) = *(unsigned char *)(v132 + 65);
                    *(unsigned char *)(v131 + 66) = *(unsigned char *)(v132 + 66);
                    *(unsigned char *)(v131 + 67) = *(unsigned char *)(v132 + 67);
                    *(unsigned char *)(v131 + 68) = *(unsigned char *)(v132 + 68);
                    int v138 = *(unsigned __int8 *)(v132 + 120);
                    if (v138 == 255)
                    {
                      long long v139 = *(_OWORD *)(v132 + 72);
                      long long v140 = *(_OWORD *)(v132 + 88);
                      long long v141 = *(_OWORD *)(v132 + 104);
                      *(unsigned char *)(v131 + 120) = *(unsigned char *)(v132 + 120);
                      *(_OWORD *)(v131 + 88) = v140;
                      *(_OWORD *)(v131 + 104) = v141;
                      *(_OWORD *)(v131 + 72) = v139;
                    }
                    else
                    {
                      char v229 = v138 & 1;
                      uint64_t v148 = *(void **)(v132 + 72);
                      uint64_t v149 = *(void *)(v132 + 80);
                      uint64_t v150 = *(void *)(v132 + 88);
                      uint64_t v151 = *(void *)(v132 + 96);
                      uint64_t v152 = *(void *)(v132 + 104);
                      uint64_t v224 = *(void *)(v132 + 112);
                      sub_10003BED8(v148, v149, v150, v151, v152, v224, v138 & 1);
                      *(void *)(v131 + 72) = v148;
                      *(void *)(v131 + 80) = v149;
                      *(void *)(v131 + 88) = v150;
                      *(void *)(v131 + 96) = v151;
                      *(void *)(v131 + 104) = v152;
                      *(void *)(v131 + 112) = v224;
                      *(unsigned char *)(v131 + 120) = v229;
                    }
                    char v32 = a1;
                    *(unsigned char *)(v131 + 121) = *(unsigned char *)(v132 + 121);
                  }
                  *(unsigned char *)(v131 + 122) = *(unsigned char *)(v132 + 122);
                  *(unsigned char *)(v131 + 123) = *(unsigned char *)(v132 + 123);
                  *(unsigned char *)(v131 + 124) = *(unsigned char *)(v132 + 124);
                  *(unsigned char *)(v131 + 125) = *(unsigned char *)(v132 + 125);
                  *(unsigned char *)(v131 + 126) = *(unsigned char *)(v132 + 126);
                  uint64_t v153 = *(void **)((v132 + 134) & 0xFFFFFFFFFFFFFFF8);
                  *(void *)((v131 + 134) & 0xFFFFFFFFFFFFFFF8) = v153;
                  id v154 = v153;
                  if (v24 > 3) {
                    goto LABEL_250;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    *(_DWORD *)((char *)v43 + v24) = 0;
                  }
                  else
                  {
                    if (v112 <= 0xF5)
                    {
LABEL_250:
                      *((unsigned char *)v43 + v24) = 0;
                      goto LABEL_314;
                    }
                    *(_WORD *)((char *)v43 + v24) = 0;
                  }
                  goto LABEL_324;
                case 1u:
                  unsigned int v83 = *((unsigned __int8 *)v44 + v216);
                  unsigned int v84 = v83 - 10;
                  if (v83 < 0xA)
                  {
                    char v32 = a1;
                  }
                  else
                  {
                    if (v216 <= 3) {
                      uint64_t v85 = v216;
                    }
                    else {
                      uint64_t v85 = 4;
                    }
                    char v32 = a1;
                    switch(v85)
                    {
                      case 1:
                        int v86 = *(unsigned __int8 *)v44;
                        goto LABEL_221;
                      case 2:
                        int v86 = *(unsigned __int16 *)v44;
                        goto LABEL_221;
                      case 3:
                        int v86 = *(unsigned __int16 *)v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                        goto LABEL_221;
                      case 4:
                        int v86 = *v44;
LABEL_221:
                        if (v216 < 4) {
                          unsigned int v83 = (v86 | (v84 << (8 * v216))) + 10;
                        }
                        else {
                          unsigned int v83 = v86 + 10;
                        }
                        break;
                      default:
                        break;
                    }
                  }
                  switch(v83)
                  {
                    case 1u:
                      uint64_t v127 = *(void **)v44;
                      *uint64_t v43 = *(void *)v44;
                      char v128 = 1;
                      goto LABEL_257;
                    case 2u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 2;
                      break;
                    case 3u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 3;
                      break;
                    case 4u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 4;
                      break;
                    case 5u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 5;
                      break;
                    case 6u:
                      (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                      *((unsigned char *)v43 + v216) = 6;
                      break;
                    case 7u:
                      long long v129 = *(_OWORD *)v44;
                      *(_OWORD *)((char *)v43 + 9) = *(_OWORD *)((char *)v44 + 9);
                      *(_OWORD *)uint64_t v43 = v129;
                      *((unsigned char *)v43 + v216) = 7;
                      break;
                    case 8u:
                      uint64_t v127 = *(void **)v44;
                      *uint64_t v43 = *(void *)v44;
                      char v128 = 8;
                      goto LABEL_257;
                    case 9u:
                      uint64_t v127 = *(void **)v44;
                      *uint64_t v43 = *(void *)v44;
                      char v128 = 9;
LABEL_257:
                      *((unsigned char *)v43 + v216) = v128;
                      id v155 = v127;
                      break;
                    default:
                      *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
                      *((unsigned char *)v43 + v216) = 0;
                      break;
                  }
                  unint64_t v156 = ((unint64_t)v43 + v216 + 8) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v157 = ((unint64_t)v44 + v216 + 8) & 0xFFFFFFFFFFFFFFF8;
                  if (*(void *)(v157 + 8) < 0xFFFFFFFFuLL)
                  {
                    long long v167 = *(_OWORD *)v157;
                    long long v168 = *(_OWORD *)(v157 + 16);
                    long long v169 = *(_OWORD *)(v157 + 48);
                    *(_OWORD *)(v156 + 32) = *(_OWORD *)(v157 + 32);
                    *(_OWORD *)(v156 + 48) = v169;
                    *(_OWORD *)unint64_t v156 = v167;
                    *(_OWORD *)(v156 + 16) = v168;
                    long long v170 = *(_OWORD *)(v157 + 64);
                    long long v171 = *(_OWORD *)(v157 + 80);
                    long long v172 = *(_OWORD *)(v157 + 96);
                    *(_OWORD *)(v156 + 106) = *(_OWORD *)(v157 + 106);
                    *(_OWORD *)(v156 + 80) = v171;
                    *(_OWORD *)(v156 + 96) = v172;
                    *(_OWORD *)(v156 + 64) = v170;
                  }
                  else
                  {
                    *(void *)unint64_t v156 = *(void *)v157;
                    *(void *)(v156 + 8) = *(void *)(v157 + 8);
                    uint64_t v158 = *(void **)(v157 + 16);
                    uint64_t v159 = *(void *)(v157 + 24);
                    uint64_t v160 = *(void *)(v157 + 32);
                    uint64_t v161 = *(void *)(v157 + 40);
                    uint64_t v162 = *(void *)(v157 + 56);
                    uint64_t v225 = *(void *)(v157 + 48);
                    unsigned __int8 v230 = *(unsigned char *)(v157 + 64);
                    swift_bridgeObjectRetain();
                    sub_100050F84(v158, v159, v160, v161, v225, v162, v230);
                    *(void *)(v156 + 16) = v158;
                    *(void *)(v156 + 24) = v159;
                    *(void *)(v156 + 32) = v160;
                    *(void *)(v156 + 40) = v161;
                    *(void *)(v156 + 48) = v225;
                    *(void *)(v156 + 56) = v162;
                    *(unsigned char *)(v156 + 64) = v230;
                    *(unsigned char *)(v156 + 65) = *(unsigned char *)(v157 + 65);
                    *(unsigned char *)(v156 + 66) = *(unsigned char *)(v157 + 66);
                    *(unsigned char *)(v156 + 67) = *(unsigned char *)(v157 + 67);
                    *(unsigned char *)(v156 + 68) = *(unsigned char *)(v157 + 68);
                    int v163 = *(unsigned __int8 *)(v157 + 120);
                    if (v163 == 255)
                    {
                      long long v164 = *(_OWORD *)(v157 + 72);
                      long long v165 = *(_OWORD *)(v157 + 88);
                      long long v166 = *(_OWORD *)(v157 + 104);
                      *(unsigned char *)(v156 + 120) = *(unsigned char *)(v157 + 120);
                      *(_OWORD *)(v156 + 88) = v165;
                      *(_OWORD *)(v156 + 104) = v166;
                      *(_OWORD *)(v156 + 72) = v164;
                    }
                    else
                    {
                      char v231 = v163 & 1;
                      uint64_t v173 = *(void **)(v157 + 72);
                      uint64_t v174 = *(void *)(v157 + 80);
                      uint64_t v175 = *(void *)(v157 + 88);
                      uint64_t v176 = *(void *)(v157 + 96);
                      uint64_t v177 = *(void *)(v157 + 104);
                      uint64_t v226 = *(void *)(v157 + 112);
                      sub_10003BED8(v173, v174, v175, v176, v177, v226, v163 & 1);
                      *(void *)(v156 + 72) = v173;
                      *(void *)(v156 + 80) = v174;
                      *(void *)(v156 + 88) = v175;
                      *(void *)(v156 + 96) = v176;
                      *(void *)(v156 + 104) = v177;
                      *(void *)(v156 + 112) = v226;
                      *(unsigned char *)(v156 + 120) = v231;
                    }
                    char v32 = a1;
                    *(unsigned char *)(v156 + 121) = *(unsigned char *)(v157 + 121);
                  }
                  *(unsigned char *)(v156 + 122) = *(unsigned char *)(v157 + 122);
                  *(unsigned char *)(v156 + 123) = *(unsigned char *)(v157 + 123);
                  *(unsigned char *)(v156 + 124) = *(unsigned char *)(v157 + 124);
                  *(unsigned char *)(v156 + 125) = *(unsigned char *)(v157 + 125);
                  *(unsigned char *)(v156 + 126) = *(unsigned char *)(v157 + 126);
                  uint64_t v178 = *(void **)((v157 + 134) & 0xFFFFFFFFFFFFFFF8);
                  *(void *)((v156 + 134) & 0xFFFFFFFFFFFFFFF8) = v178;
                  id v179 = v178;
                  if (v24 > 3) {
                    goto LABEL_265;
                  }
                  int v123 = 1;
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5) {
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_265:
                    char v104 = 1;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 1;
                  goto LABEL_324;
                case 2u:
                  unint64_t v87 = *(void **)v44;
                  *uint64_t v43 = *(void *)v44;
                  uint64_t v88 = (char *)(((unint64_t)v43 + v33) & v78);
                  long long v89 = (unsigned __int8 *)(((unint64_t)v44 + v33) & v78);
                  int v90 = v89[v216];
                  id v91 = v87;
                  switch(v90)
                  {
                    case 0:
                      *uint64_t v88 = *v89;
                      v88[v216] = 0;
                      break;
                    case 1:
                      uint64_t v180 = *(void **)v89;
                      *(void *)uint64_t v88 = *(void *)v89;
                      char v181 = 1;
                      goto LABEL_278;
                    case 2:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v88, v89, v214);
                      v88[v216] = 2;
                      break;
                    case 3:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v88, v89, v214);
                      v88[v216] = 3;
                      break;
                    case 4:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v88, v89, v214);
                      v88[v216] = 4;
                      break;
                    case 5:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v88, v89, v214);
                      v88[v216] = 5;
                      break;
                    case 6:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v88, v89, v214);
                      v88[v216] = 6;
                      break;
                    case 7:
                      long long v182 = *(_OWORD *)v89;
                      *(_OWORD *)(v88 + 9) = *(_OWORD *)(v89 + 9);
                      *(_OWORD *)uint64_t v88 = v182;
                      v88[v216] = 7;
                      break;
                    case 8:
                      uint64_t v180 = *(void **)v89;
                      *(void *)uint64_t v88 = *(void *)v89;
                      char v181 = 8;
                      goto LABEL_278;
                    case 9:
                      uint64_t v180 = *(void **)v89;
                      *(void *)uint64_t v88 = *(void *)v89;
                      char v181 = 9;
LABEL_278:
                      v88[v216] = v181;
                      id v183 = v180;
                      break;
                    default:
                      memcpy(v88, v89, v219);
                      break;
                  }
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_280;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 2;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_280:
                    char v104 = 2;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 2;
                  goto LABEL_324;
                case 3u:
                  uint64_t v92 = *(void **)v44;
                  *uint64_t v43 = *(void *)v44;
                  uint64_t v93 = (char *)(((unint64_t)v43 + v33) & v78);
                  uint64_t v94 = (unsigned __int8 *)(((unint64_t)v44 + v33) & v78);
                  int v95 = v94[v216];
                  id v96 = v92;
                  switch(v95)
                  {
                    case 0:
                      *uint64_t v93 = *v94;
                      v93[v216] = 0;
                      break;
                    case 1:
                      uint64_t v184 = *(void **)v94;
                      *(void *)uint64_t v93 = *(void *)v94;
                      char v185 = 1;
                      goto LABEL_294;
                    case 2:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v93, v94, v214);
                      v93[v216] = 2;
                      break;
                    case 3:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v93, v94, v214);
                      v93[v216] = 3;
                      break;
                    case 4:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v93, v94, v214);
                      v93[v216] = 4;
                      break;
                    case 5:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v93, v94, v214);
                      v93[v216] = 5;
                      break;
                    case 6:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v93, v94, v214);
                      v93[v216] = 6;
                      break;
                    case 7:
                      long long v186 = *(_OWORD *)v94;
                      *(_OWORD *)(v93 + 9) = *(_OWORD *)(v94 + 9);
                      *(_OWORD *)uint64_t v93 = v186;
                      v93[v216] = 7;
                      break;
                    case 8:
                      uint64_t v184 = *(void **)v94;
                      *(void *)uint64_t v93 = *(void *)v94;
                      char v185 = 8;
                      goto LABEL_294;
                    case 9:
                      uint64_t v184 = *(void **)v94;
                      *(void *)uint64_t v93 = *(void *)v94;
                      char v185 = 9;
LABEL_294:
                      v93[v216] = v185;
                      id v187 = v184;
                      break;
                    default:
                      memcpy(v93, v94, v219);
                      break;
                  }
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_296;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 3;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_296:
                    char v104 = 3;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 3;
                  goto LABEL_324;
                case 4u:
                  uint64_t v97 = *(void **)v44;
                  *uint64_t v43 = *(void *)v44;
                  uint64_t v98 = (char *)(((unint64_t)v43 + v33) & v78);
                  uint64_t v99 = (unsigned __int8 *)(((unint64_t)v44 + v33) & v78);
                  int v100 = v99[v216];
                  id v101 = v97;
                  switch(v100)
                  {
                    case 0:
                      *uint64_t v98 = *v99;
                      v98[v216] = 0;
                      break;
                    case 1:
                      uint64_t v188 = *(void **)v99;
                      *(void *)uint64_t v98 = *(void *)v99;
                      char v189 = 1;
                      goto LABEL_310;
                    case 2:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v98, v99, v214);
                      v98[v216] = 2;
                      break;
                    case 3:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v98, v99, v214);
                      v98[v216] = 3;
                      break;
                    case 4:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v98, v99, v214);
                      v98[v216] = 4;
                      break;
                    case 5:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v98, v99, v214);
                      v98[v216] = 5;
                      break;
                    case 6:
                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v215 + 16))(v98, v99, v214);
                      v98[v216] = 6;
                      break;
                    case 7:
                      long long v190 = *(_OWORD *)v99;
                      *(_OWORD *)(v98 + 9) = *(_OWORD *)(v99 + 9);
                      *(_OWORD *)uint64_t v98 = v190;
                      v98[v216] = 7;
                      break;
                    case 8:
                      uint64_t v188 = *(void **)v99;
                      *(void *)uint64_t v98 = *(void *)v99;
                      char v189 = 8;
                      goto LABEL_310;
                    case 9:
                      uint64_t v188 = *(void **)v99;
                      *(void *)uint64_t v98 = *(void *)v99;
                      char v189 = 9;
LABEL_310:
                      v98[v216] = v189;
                      id v191 = v188;
                      break;
                    default:
                      memcpy(v98, v99, v219);
                      break;
                  }
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_312;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 4;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_312:
                    char v104 = 4;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 4;
                  goto LABEL_324;
                case 5u:
                  *uint64_t v43 = *(void *)v44;
                  *((unsigned char *)v43 + 8) = *((unsigned char *)v44 + 8);
                  *((unsigned char *)v43 + 9) = *((unsigned char *)v44 + 9);
                  *((unsigned char *)v43 + 10) = *((unsigned char *)v44 + 10);
                  id v102 = (void *)*((void *)v44 + 2);
                  v43[2] = v102;
                  id v103 = v102;
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_141;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 5;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_141:
                    char v104 = 5;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 5;
                  goto LABEL_324;
                case 6u:
                  id v110 = *(void **)v44;
                  *uint64_t v43 = *(void *)v44;
                  id v111 = v110;
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_157;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 6;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_157:
                    char v104 = 6;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 6;
                  goto LABEL_324;
                case 7u:
                  uint64_t v105 = ~v212;
                  if ((v29 & 0x80000000) != 0)
                  {
                    int v107 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48))(((unint64_t)v44 + v209) & v105, v29, v210);
                  }
                  else
                  {
                    uint64_t v106 = *(void *)v44;
                    if (*(void *)v44 >= 0xFFFFFFFFuLL) {
                      LODWORD(v106) = -1;
                    }
                    int v107 = v106 + 1;
                  }
                  if (v107)
                  {
                    memcpy(v43, v44, v205);
                  }
                  else
                  {
                    *uint64_t v43 = *(void *)v44;
                    id v117 = *(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16);
                    swift_bridgeObjectRetain();
                    v117(((unint64_t)v43 + v209) & v105, ((unint64_t)v44 + v209) & v105, v210);
                  }
                  unint64_t v118 = ((unint64_t)v43 + v41) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v119 = ((unint64_t)v44 + v41) & 0xFFFFFFFFFFFFFFF8;
                  if (*(void *)(v119 + 8) < 0xFFFFFFFFuLL)
                  {
                    long long v122 = *(_OWORD *)v119;
                    *(void *)(v118 + 16) = *(void *)(v119 + 16);
                    *(_OWORD *)unint64_t v118 = v122;
                  }
                  else
                  {
                    *(void *)unint64_t v118 = *(void *)v119;
                    *(void *)(v118 + 8) = *(void *)(v119 + 8);
                    uint64_t v120 = *(void **)(v119 + 16);
                    *(void *)(v118 + 16) = v120;
                    swift_bridgeObjectRetain();
                    id v121 = v120;
                  }
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_199;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 7;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_199:
                    char v104 = 7;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 7;
                  goto LABEL_324;
                case 8u:
                  if (v206 < 0xFD)
                  {
                    unsigned int v114 = *((unsigned __int8 *)v44 + v213);
                    char v32 = a1;
                    if (v114 < 3) {
                      goto LABEL_175;
                    }
                    unsigned int v113 = v114 - 2;
                  }
                  else
                  {
                    unsigned int v113 = (*(uint64_t (**)(_DWORD *))(v215 + 48))(v44);
                    char v32 = a1;
                  }
                  if (v113)
                  {
                    memcpy(v43, v44, v213 + 1);
                    goto LABEL_176;
                  }
LABEL_175:
                  (*(void (**)(void *, _DWORD *, uint64_t))(v215 + 16))(v43, v44, v214);
                  *((unsigned char *)v43 + v213) = *((unsigned char *)v44 + v213);
LABEL_176:
                  *(void *)(((unint64_t)v43 + v213 + 8) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v44 + v213 + 8) & 0xFFFFFFFFFFFFFFF8);
                  if (v24 > 3) {
                    goto LABEL_179;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 8;
                    goto LABEL_323;
                  }
                  if (v112 <= 0xF5)
                  {
LABEL_179:
                    char v104 = 8;
                    goto LABEL_313;
                  }
                  *(_WORD *)((char *)v43 + v24) = 8;
                  goto LABEL_324;
                case 9u:
                  *(unsigned char *)uint64_t v43 = *(unsigned char *)v44;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v207 + 16))(((unint64_t)v43 + v211) & ~v34, ((unint64_t)v44 + v211) & ~v34, v208);
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_147;
                  }
                  unsigned int v112 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  if (v112 > 0xFFF5)
                  {
                    int v123 = 9;
LABEL_323:
                    *(_DWORD *)((char *)v43 + v24) = v123;
                    goto LABEL_324;
                  }
                  if (v112 > 0xF5)
                  {
                    *(_WORD *)((char *)v43 + v24) = 9;
LABEL_324:
                    BOOL v194 = v112 > 0xFFF5;
                    uint64_t v193 = 2;
                    if (v194) {
                      uint64_t v193 = 4;
                    }
                    goto LABEL_326;
                  }
LABEL_147:
                  char v104 = 9;
LABEL_313:
                  *((unsigned char *)v43 + v24) = v104;
LABEL_314:
                  if (v24 > 3) {
                    goto LABEL_318;
                  }
                  unsigned int v192 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  uint64_t v193 = 2;
                  if (v192 > 0xFFF5) {
                    uint64_t v193 = 4;
                  }
                  if (v192 <= 0xF5) {
LABEL_318:
                  }
                    uint64_t v193 = 1;
LABEL_326:
                  uint64_t v195 = v193 + v24;
                  unint64_t v196 = (unint64_t)v43 + v195;
                  unint64_t v197 = (unint64_t)v44 + v195;
                  *(unsigned char *)unint64_t v196 = *(unsigned char *)v197;
                  v196 &= 0xFFFFFFFFFFFFFFF8;
                  v197 &= 0xFFFFFFFFFFFFFFF8;
                  *(void *)(v196 + 8) = *(void *)(v197 + 8);
                  *(void *)(v196 + 16) = *(void *)(v197 + 16);
                  *(void *)((v196 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v197 + 31) & 0xFFFFFFFFFFFFFFF8);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v24 > 3) {
                    goto LABEL_330;
                  }
                  unsigned int v198 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  uint64_t v199 = 2;
                  if (v198 > 0xFFF5) {
                    uint64_t v199 = 4;
                  }
                  if (v198 <= 0xF5) {
LABEL_330:
                  }
                    uint64_t v199 = 1;
                  unint64_t v200 = ((((v199 + v24) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
                  *(void *)(((unint64_t)v43 + v200) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v44
                                                                                                  + v200) & 0xFFFFFFFFFFFFFFF8);
                  if (v24 <= 3) {
                    goto LABEL_332;
                  }
                  goto LABEL_335;
                default:
                  char v32 = a1;
                  if (v24 > 3) {
                    goto LABEL_152;
                  }
                  unsigned int v108 = ((1 << (8 * v24)) + 1) >> (8 * v24);
                  uint64_t v109 = 2;
                  if (v108 > 0xFFF5) {
                    uint64_t v109 = 4;
                  }
                  if (v108 <= 0xF5) {
LABEL_152:
                  }
                    uint64_t v109 = 1;
                  memcpy(v43, v44, v109 + v24);
                  goto LABEL_314;
              }
            }
          }
          else
          {
            int v45 = 11;
          }
          char v46 = 8;
          goto LABEL_44;
        }
      }
      else
      {
        int v36 = 11;
      }
      char v37 = 8;
      goto LABEL_32;
    }
  }
  uint64_t v31 = *a2;
  *a1 = *a2;
  char v32 = (uint64_t *)(v31 + ((v27 + 16) & ~v27));
  swift_retain();
  return v32;
}

uint64_t sub_100619A88(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3)) {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
  }
  int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v90 = *(void *)(v4 + 64);
  uint64_t v89 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v89 - 8);
  uint64_t v7 = v6;
  int v8 = *(_DWORD *)(v6 + 80);
  uint64_t v88 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v9 = *(void *)(v88 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = type metadata accessor for AnyTip();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = v8 & 0xF8;
  uint64_t v14 = v13 | 7;
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  uint64_t result = v10 | v15;
  if (v5) {
    uint64_t v17 = v90 + a1;
  }
  else {
    uint64_t v17 = v90 + a1 + 1;
  }
  unint64_t v18 = *(void *)(v6 + 64);
  if (v18 <= 0x19) {
    uint64_t v19 = 25;
  }
  else {
    uint64_t v19 = *(void *)(v6 + 64);
  }
  uint64_t v20 = v19 + 1;
  unint64_t v21 = (((v19 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v22 = (v13 + 15) & ~v14;
  uint64_t v91 = v9;
  int v23 = *(_DWORD *)(v9 + 84);
  uint64_t v24 = v10;
  uint64_t v25 = *(void *)(v9 + 64) + ((v10 + 8) & ~v10);
  if (v19 + 1 + v22 > v21) {
    unint64_t v21 = v19 + 1 + v22;
  }
  if (v21 <= ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v21 = ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v21 <= (v18 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v26 = (v18 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v26 = v21;
  }
  unint64_t v27 = *(void *)(*(void *)(v11 - 8) + 64) + ((v15 + 1) & ~v15);
  if (v26 > v27) {
    unint64_t v27 = v26;
  }
  if (v27 <= 0x18) {
    uint64_t v28 = 24;
  }
  else {
    uint64_t v28 = v27;
  }
  char v29 = 8 * v28;
  uint64_t v30 = result | v14;
  uint64_t v31 = v17 + (result | v14);
  if (v28 > 3)
  {
    int v32 = 11;
LABEL_23:
    char v33 = 8;
    goto LABEL_24;
  }
  unsigned int v36 = ((1 << v29) + 1) >> v29;
  if (v36 > 0xFFF5)
  {
    unsigned int v34 = 0x7FFFFFFF;
    goto LABEL_33;
  }
  int v32 = v36 + 10;
  if (v36 <= 0xF5) {
    goto LABEL_23;
  }
  char v33 = 16;
LABEL_24:
  uint64_t result = ((1 << v33) - v32);
  unsigned int v34 = 0x7FFFFFFF;
  if (result <= 0x7FFFFFFF) {
    int v35 = 0x7FFFFFFF;
  }
  else {
    int v35 = result;
  }
  if ((result & 0x80000000) == 0) {
    unsigned int v34 = v35;
  }
LABEL_33:
  char v37 = (unsigned __int16 *)(v31 & ~v30);
  if (v28 > 3)
  {
    int v38 = 11;
LABEL_35:
    char v39 = 8;
    goto LABEL_36;
  }
  unsigned int v42 = ((1 << v29) + 1) >> v29;
  if (v42 > 0xFFF5) {
    goto LABEL_43;
  }
  int v38 = v42 + 10;
  if (v42 <= 0xF5) {
    goto LABEL_35;
  }
  char v39 = 16;
LABEL_36:
  int v40 = (1 << v39) - v38;
  if ((v40 & 0x80000000) == 0)
  {
    if (v40 == v34) {
      goto LABEL_38;
    }
LABEL_44:
    if (v28 > 3) {
      goto LABEL_48;
    }
    unsigned int v43 = ((1 << v29) + 1) >> v29;
    uint64_t v44 = 2;
    if (v43 > 0xFFF5) {
      uint64_t v44 = 4;
    }
    if (v43 <= 0xF5) {
LABEL_48:
    }
      uint64_t v44 = 1;
    unint64_t v45 = *(void *)(((((unint64_t)v37 + v28 + v44) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v45 >= 0xFFFFFFFF) {
      LODWORD(v45) = -1;
    }
    if (v45 != -1) {
      return result;
    }
    goto LABEL_96;
  }
LABEL_43:
  if (v34 != 0x7FFFFFFF) {
    goto LABEL_44;
  }
LABEL_38:
  if (v28 > 3)
  {
    int v41 = 11;
LABEL_55:
    char v47 = 8;
    goto LABEL_56;
  }
  unsigned int v46 = ((1 << v29) + 1) >> v29;
  if (v46 > 0xFFF5) {
    goto LABEL_59;
  }
  int v41 = v46 + 10;
  if (v46 <= 0xF5) {
    goto LABEL_55;
  }
  char v47 = 16;
LABEL_56:
  unsigned int v48 = (1 << v47) - v41;
  if ((v48 & 0x80000000) == 0)
  {
    if (v28 > 3) {
      goto LABEL_63;
    }
LABEL_60:
    unsigned int v49 = ((1 << v29) + 1) >> v29;
    uint64_t v50 = 2;
    uint64_t result = 4;
    if (v49 > 0xFFF5) {
      uint64_t v50 = 4;
    }
    if (v49 > 0xF5) {
      goto LABEL_64;
    }
    goto LABEL_63;
  }
LABEL_59:
  unsigned int v48 = 0x7FFFFFFF;
  if (v28 <= 3) {
    goto LABEL_60;
  }
LABEL_63:
  uint64_t v50 = 1;
LABEL_64:
  unsigned int v51 = v34 - v48;
  if (v34 <= v48) {
    goto LABEL_83;
  }
  uint64_t v52 = v50 + v28;
  char v53 = 8 * (v50 + v28);
  if (v52 > 3) {
    goto LABEL_66;
  }
  unsigned int v55 = ((v51 + ~(-1 << v53)) >> v53) + 1;
  uint64_t result = HIWORD(v55);
  if (result)
  {
    int v54 = *(_DWORD *)((char *)v37 + v52);
    if (!v54) {
      goto LABEL_83;
    }
    goto LABEL_74;
  }
  if (v55 > 0xFF)
  {
    int v54 = *(unsigned __int16 *)((char *)v37 + v52);
    if (!*(unsigned __int16 *)((char *)v37 + v52)) {
      goto LABEL_83;
    }
    goto LABEL_74;
  }
  if (v55 >= 2)
  {
LABEL_66:
    int v54 = *((unsigned __int8 *)v37 + v52);
    if (!*((unsigned char *)v37 + v52)) {
      goto LABEL_83;
    }
LABEL_74:
    unsigned int v56 = (v54 - 1) << v53;
    if (v52 <= 3) {
      uint64_t result = v56;
    }
    else {
      uint64_t result = 0;
    }
    if (v52)
    {
      if (v52 > 3) {
        LODWORD(v52) = 4;
      }
      switch((int)v52)
      {
        case 2:
          LODWORD(v52) = *v37;
          break;
        case 3:
          LODWORD(v52) = *v37 | (*((unsigned __int8 *)v37 + 2) << 16);
          break;
        case 4:
          LODWORD(v52) = *(_DWORD *)v37;
          break;
        default:
          LODWORD(v52) = *(unsigned __int8 *)v37;
          break;
      }
    }
    if (v48 + (v52 | result) != -1) {
      return result;
    }
    goto LABEL_96;
  }
LABEL_83:
  if (!v48) {
    goto LABEL_96;
  }
  if (v28 > 3)
  {
    int v57 = *((unsigned __int8 *)v37 + v28);
    unsigned int v58 = v57 | 0xFFFFFF00;
    unsigned int v59 = v57 ^ 0xFF;
    char v60 = 8;
    int v61 = 11;
    goto LABEL_91;
  }
  unsigned int v62 = ((1 << v29) + 1) >> v29;
  if (v62 <= 0xFFF5)
  {
    int v61 = v62 + 10;
    if (v62 > 0xF5)
    {
      int v64 = *(unsigned __int16 *)((char *)v37 + v28);
      unsigned int v58 = v64 | 0xFFFF0000;
      unsigned int v59 = v64 ^ 0xFFFF;
      char v60 = 16;
    }
    else
    {
      int v63 = *((unsigned __int8 *)v37 + v28);
      unsigned int v58 = v63 | 0xFFFFFF00;
      unsigned int v59 = v63 ^ 0xFF;
      char v60 = 8;
    }
LABEL_91:
    uint64_t result = 1;
    unsigned int v65 = (1 << v60) - v61;
    if ((v65 & 0x80000000) == 0)
    {
      if (v65 <= v59) {
        goto LABEL_96;
      }
LABEL_95:
      if (v58) {
        return result;
      }
      goto LABEL_96;
    }
    goto LABEL_94;
  }
  unsigned int v58 = *(_DWORD *)((char *)v37 + v28);
  unsigned int v59 = ~v58;
LABEL_94:
  if (v59 < 0x7FFFFFFF) {
    goto LABEL_95;
  }
LABEL_96:
  if (v28 > 3) {
    goto LABEL_97;
  }
  unsigned int v67 = ((1 << v29) + 1) >> v29;
  if (v67 > 0xFFF5)
  {
    unsigned int v66 = *(_DWORD *)((char *)v37 + v28);
    goto LABEL_102;
  }
  if (v67 <= 0xF5) {
LABEL_97:
  }
    unsigned int v66 = *((unsigned __int8 *)v37 + v28);
  else {
    unsigned int v66 = *(unsigned __int16 *)((char *)v37 + v28);
  }
LABEL_102:
  unsigned int v68 = v66 - 10;
  if (v66 >= 0xA)
  {
    if (v28 <= 3) {
      uint64_t v69 = v28;
    }
    else {
      uint64_t v69 = 4;
    }
    switch(v69)
    {
      case 1:
        int v70 = *(unsigned __int8 *)v37;
        if (v28 < 4) {
          goto LABEL_114;
        }
        goto LABEL_115;
      case 2:
        int v70 = *v37;
        if (v28 >= 4) {
          goto LABEL_115;
        }
        goto LABEL_114;
      case 3:
        int v70 = *v37 | (*((unsigned __int8 *)v37 + 2) << 16);
        if (v28 >= 4) {
          goto LABEL_115;
        }
        goto LABEL_114;
      case 4:
        int v70 = *(_DWORD *)v37;
        if (v28 < 4) {
LABEL_114:
        }
          v70 |= v68 << v29;
LABEL_115:
        unsigned int v66 = v70 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v71 = ~v14;
  switch(v66)
  {
    case 0u:
      unsigned int v72 = *((unsigned __int8 *)v37 + v19);
      unsigned int v73 = v72 - 10;
      if (v72 >= 0xA)
      {
        if (v19 <= 3) {
          uint64_t v74 = v19;
        }
        else {
          uint64_t v74 = 4;
        }
        switch(v74)
        {
          case 1:
            int v75 = *(unsigned __int8 *)v37;
            goto LABEL_160;
          case 2:
            int v75 = *v37;
            goto LABEL_160;
          case 3:
            int v75 = *v37 | (*((unsigned __int8 *)v37 + 2) << 16);
            goto LABEL_160;
          case 4:
            int v75 = *(_DWORD *)v37;
LABEL_160:
            if (v19 < 4) {
              unsigned int v72 = (v75 | (v73 << (8 * v19))) + 10;
            }
            else {
              unsigned int v72 = v75 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v72)
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_172;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_171;
        default:
          goto LABEL_174;
      }
      goto LABEL_174;
    case 1u:
      unsigned int v76 = *((unsigned __int8 *)v37 + v19);
      unsigned int v77 = v76 - 10;
      if (v76 >= 0xA)
      {
        if (v19 <= 3) {
          uint64_t v78 = v19;
        }
        else {
          uint64_t v78 = 4;
        }
        switch(v78)
        {
          case 1:
            int v79 = *(unsigned __int8 *)v37;
            goto LABEL_167;
          case 2:
            int v79 = *v37;
            goto LABEL_167;
          case 3:
            int v79 = *v37 | (*((unsigned __int8 *)v37 + 2) << 16);
            goto LABEL_167;
          case 4:
            int v79 = *(_DWORD *)v37;
LABEL_167:
            if (v19 < 4) {
              unsigned int v76 = (v79 | (v77 << (8 * v19))) + 10;
            }
            else {
              unsigned int v76 = v79 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v76)
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_172:
          uint64_t v85 = v19 + 1;

          goto LABEL_173;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_171:
          uint64_t v85 = v19 + 1;
          (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v37, v89);
LABEL_173:
          uint64_t v20 = v85;
          break;
        default:
          break;
      }
LABEL_174:
      unint64_t v86 = (((unint64_t)v37 | 7) + v20) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v86 + 8) >= 0xFFFFFFFFuLL)
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v86 + 16), *(void *)(v86 + 24), *(void *)(v86 + 32), *(void *)(v86 + 40), *(void *)(v86 + 48), *(void *)(v86 + 56), *(unsigned char *)(v86 + 64));
        int v87 = *(unsigned __int8 *)(v86 + 120);
        if (v87 != 255) {
          sub_10003B9C0(*(void **)(v86 + 72), *(void *)(v86 + 80), *(void *)(v86 + 88), *(void *)(v86 + 96), *(void *)(v86 + 104), *(void *)(v86 + 112), v87 & 1);
        }
      }
      id v84 = *(id *)((v86 + 134) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_178;
    case 2u:

      unsigned int v80 = (id *)(((unint64_t)v37 + v14 + 8) & v71);
      switch(*((unsigned char *)v80 + v19))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_153;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_132;
        default:
          goto LABEL_179;
      }
      goto LABEL_179;
    case 3u:

      unsigned int v80 = (id *)(((unint64_t)v37 + v14 + 8) & v71);
      switch(*((unsigned char *)v80 + v19))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_153;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_132;
        default:
          goto LABEL_179;
      }
      goto LABEL_179;
    case 4u:

      unsigned int v80 = (id *)(((unint64_t)v37 + v14 + 8) & v71);
      switch(*((unsigned char *)v80 + v19))
      {
        case 1:
        case 8:
        case 9:
LABEL_153:

          break;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_132:
          (*(void (**)(id *, uint64_t))(v7 + 8))(v80, v89);
          break;
        default:
          goto LABEL_179;
      }
      goto LABEL_179;
    case 5u:
      id v84 = (id)*((void *)v37 + 2);
      goto LABEL_178;
    case 6u:
      id v84 = *(id *)v37;
      goto LABEL_178;
    case 7u:
      uint64_t v81 = ~v24;
      if (v23 < 0)
      {
        if (!(*(unsigned int (**)(unint64_t))(v91 + 48))(((unint64_t)v37 + v24 + 8) & v81))
        {
LABEL_137:
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v91 + 8))(((unint64_t)v37 + v24 + 8) & v81, v88);
        }
      }
      else
      {
        id v82 = *(id *)v37;
        if (*(void *)v37 >= 0xFFFFFFFFuLL) {
          LODWORD(v82) = -1;
        }
        if (v82 == -1) {
          goto LABEL_137;
        }
      }
      unint64_t v83 = (((unint64_t)v37 | 7) + v25) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v83 + 8) >= 0xFFFFFFFFuLL)
      {
        swift_bridgeObjectRelease();
        id v84 = *(id *)(v83 + 16);
LABEL_178:
      }
LABEL_179:
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 8u:
      if (*(_DWORD *)(v7 + 84) < 0xFDu)
      {
        if (*((unsigned __int8 *)v37 + v18) >= 3u) {
          goto LABEL_179;
        }
      }
      else if ((*(unsigned int (**)(unsigned __int16 *, void, uint64_t))(v7 + 48))(v37, *(unsigned int *)(v7 + 84), v89))
      {
        goto LABEL_179;
      }
      (*(void (**)(unsigned __int16 *, uint64_t))(v7 + 8))(v37, v89);
      goto LABEL_179;
    case 9u:
      (*(void (**)(unint64_t, uint64_t))(v12 + 8))(((unint64_t)v37 + v15 + 1) & ~v15, v11);
      goto LABEL_179;
    default:
      goto LABEL_179;
  }
  return result;
}

void *sub_10061A770(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    int v7 = *(_DWORD *)(v6 + 84);
    size_t v8 = *(void *)(v6 + 64);
    if (v7) {
      size_t v9 = v8;
    }
    else {
      size_t v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    uint64_t v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    int v7 = *(_DWORD *)(v10 + 28);
    size_t v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    size_t v12 = v8;
  }
  else {
    size_t v12 = v8 + 1;
  }
  size_t v244 = v12;
  uint64_t v234 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v234 - 8);
  uint64_t v14 = v13;
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v233 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v16 = *(void *)(v233 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = type metadata accessor for AnyTip();
  uint64_t v19 = v15 | 7;
  uint64_t v20 = v18;
  uint64_t v21 = *(void *)(v18 - 8);
  uint64_t v22 = v21;
  uint64_t v23 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v24 = v17 | v23 | v15 | 7;
  unint64_t v25 = *(void *)(v13 + 64);
  if (v25 <= 0x19) {
    uint64_t v26 = 25;
  }
  else {
    uint64_t v26 = *(void *)(v13 + 64);
  }
  uint64_t v27 = v26 + 1;
  unint64_t v28 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v29 = v15 + 15;
  uint64_t v30 = (v15 + 15) & ~(v15 | 7);
  uint64_t v232 = v16;
  int v31 = *(_DWORD *)(v16 + 84);
  uint64_t v32 = v17 + 8;
  size_t v33 = *(void *)(v16 + 64) + ((v17 + 8) & ~v17);
  uint64_t v239 = v13;
  if (v26 + 1 + v30 > v28) {
    unint64_t v28 = v26 + 1 + v30;
  }
  if (v28 <= ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v28 = ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v28 <= (v25 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v34 = (v25 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v34 = v28;
  }
  unint64_t v35 = *(void *)(v21 + 64) + ((v23 + 1) & ~v23);
  if (v34 > v35) {
    unint64_t v35 = v34;
  }
  if (v35 <= 0x18) {
    uint64_t v36 = 24;
  }
  else {
    uint64_t v36 = v35;
  }
  char v37 = 8 * v36;
  int v38 = a1;
  unint64_t v39 = (unint64_t)&a2[v24 + v244];
  if (v36 > 3)
  {
    int v40 = 11;
LABEL_27:
    char v41 = 8;
    goto LABEL_28;
  }
  unsigned int v45 = ((1 << v37) + 1) >> v37;
  if (v45 > 0xFFF5)
  {
    unsigned int v43 = 0x7FFFFFFF;
    goto LABEL_37;
  }
  int v40 = v45 + 10;
  if (v45 <= 0xF5) {
    goto LABEL_27;
  }
  char v41 = 16;
LABEL_28:
  unsigned int v42 = (1 << v41) - v40;
  unsigned int v43 = 0x7FFFFFFF;
  if (v42 <= 0x7FFFFFFF) {
    int v44 = 0x7FFFFFFF;
  }
  else {
    int v44 = v42;
  }
  if ((v42 & 0x80000000) == 0) {
    unsigned int v43 = v44;
  }
LABEL_37:
  unint64_t v46 = ((unint64_t)a1 + v24 + v244) & ~v24;
  uint64_t v47 = v39 & ~v24;
  if (v36 > 3)
  {
    int v48 = 11;
LABEL_39:
    char v49 = 8;
    goto LABEL_40;
  }
  unsigned int v54 = ((1 << v37) + 1) >> v37;
  if (v54 > 0xFFF5) {
    goto LABEL_51;
  }
  int v48 = v54 + 10;
  if (v54 <= 0xF5) {
    goto LABEL_39;
  }
  char v49 = 16;
LABEL_40:
  int v50 = (1 << v49) - v48;
  if ((v50 & 0x80000000) == 0)
  {
    if (v50 == v43) {
      goto LABEL_42;
    }
    goto LABEL_52;
  }
LABEL_51:
  if (v43 == 0x7FFFFFFF)
  {
LABEL_42:
    if (v36 <= 3)
    {
      unsigned int v58 = ((1 << v37) + 1) >> v37;
      if (v58 > 0xFFF5) {
        goto LABEL_64;
      }
      int v51 = v58 + 10;
      if (v58 > 0xF5)
      {
        char v52 = 16;
LABEL_45:
        unsigned int v53 = (1 << v52) - v51;
        if ((v53 & 0x80000000) == 0)
        {
          if (v36 > 3) {
            goto LABEL_68;
          }
LABEL_65:
          unsigned int v59 = ((1 << v37) + 1) >> v37;
          uint64_t v60 = 2;
          if (v59 > 0xFFF5) {
            uint64_t v60 = 4;
          }
          if (v59 > 0xF5)
          {
LABEL_69:
            unsigned int v61 = v43 - v53;
            if (v43 <= v53) {
              goto LABEL_86;
            }
            uint64_t v62 = v60 + v36;
            char v63 = 8 * (v60 + v36);
            if (v62 > 3)
            {
LABEL_71:
              int v64 = *(unsigned __int8 *)(v47 + v62);
              if (!*(unsigned char *)(v47 + v62)) {
                goto LABEL_86;
              }
              goto LABEL_78;
            }
            unsigned int v65 = ((v61 + ~(-1 << v63)) >> v63) + 1;
            if (HIWORD(v65))
            {
              int v64 = *(_DWORD *)(v47 + v62);
              if (!v64) {
                goto LABEL_86;
              }
            }
            else
            {
              if (v65 <= 0xFF)
              {
                if (v65 < 2)
                {
LABEL_86:
                  if (!v53) {
                    goto LABEL_99;
                  }
                  if (v36 <= 3)
                  {
                    unsigned int v72 = ((1 << v37) + 1) >> v37;
                    if (v72 > 0xFFF5)
                    {
                      unsigned int v68 = *(_DWORD *)(v47 + v36);
                      unsigned int v69 = ~v68;
                      goto LABEL_97;
                    }
                    int v71 = v72 + 10;
                    if (v72 > 0xF5)
                    {
                      int v74 = *(unsigned __int16 *)(v47 + v36);
                      unsigned int v68 = v74 | 0xFFFF0000;
                      unsigned int v69 = v74 ^ 0xFFFF;
                      char v70 = 16;
                    }
                    else
                    {
                      int v73 = *(unsigned __int8 *)(v47 + v36);
                      unsigned int v68 = v73 | 0xFFFFFF00;
                      unsigned int v69 = v73 ^ 0xFF;
                      char v70 = 8;
                    }
                  }
                  else
                  {
                    int v67 = *(unsigned __int8 *)(v47 + v36);
                    unsigned int v68 = v67 | 0xFFFFFF00;
                    unsigned int v69 = v67 ^ 0xFF;
                    char v70 = 8;
                    int v71 = 11;
                  }
                  unsigned int v75 = (1 << v70) - v71;
                  if ((v75 & 0x80000000) == 0)
                  {
                    if (v75 <= v69) {
                      goto LABEL_99;
                    }
                    goto LABEL_98;
                  }
LABEL_97:
                  if (v69 >= 0x7FFFFFFF) {
                    goto LABEL_99;
                  }
LABEL_98:
                  if (!v68) {
                    goto LABEL_99;
                  }
LABEL_181:
                  if (v36 > 3) {
                    goto LABEL_185;
                  }
                  unsigned int v121 = ((1 << v37) + 1) >> v37;
                  uint64_t v122 = 2;
                  if (v121 > 0xFFF5) {
                    uint64_t v122 = 4;
                  }
                  if (v121 <= 0xF5) {
LABEL_185:
                  }
                    uint64_t v122 = 1;
                  memcpy((void *)v46, (const void *)v47, ((((((v122 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                  if (v36 > 3) {
                    goto LABEL_330;
                  }
                  goto LABEL_327;
                }
                goto LABEL_71;
              }
              int v64 = *(unsigned __int16 *)(v47 + v62);
              if (!*(_WORD *)(v47 + v62)) {
                goto LABEL_86;
              }
            }
LABEL_78:
            int v66 = (v64 - 1) << v63;
            if (v62 > 3) {
              int v66 = 0;
            }
            if (v62)
            {
              if (v62 > 3) {
                LODWORD(v62) = 4;
              }
              switch((int)v62)
              {
                case 2:
                  LODWORD(v62) = *(unsigned __int16 *)v47;
                  break;
                case 3:
                  LODWORD(v62) = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
                  break;
                case 4:
                  LODWORD(v62) = *(_DWORD *)v47;
                  break;
                default:
                  LODWORD(v62) = *(unsigned __int8 *)v47;
                  break;
              }
            }
            if (v53 + (v62 | v66) != -1) {
              goto LABEL_181;
            }
            goto LABEL_99;
          }
LABEL_68:
          uint64_t v60 = 1;
          goto LABEL_69;
        }
LABEL_64:
        unsigned int v53 = 0x7FFFFFFF;
        if (v36 > 3) {
          goto LABEL_68;
        }
        goto LABEL_65;
      }
    }
    else
    {
      int v51 = 11;
    }
    char v52 = 8;
    goto LABEL_45;
  }
LABEL_52:
  if (v36 > 3) {
    goto LABEL_56;
  }
  unsigned int v55 = ((1 << v37) + 1) >> v37;
  uint64_t v56 = 2;
  if (v55 > 0xFFF5) {
    uint64_t v56 = 4;
  }
  if (v55 <= 0xF5) {
LABEL_56:
  }
    uint64_t v56 = 1;
  unint64_t v57 = *(void *)((((v36 + v47 + v56) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v57 >= 0xFFFFFFFF) {
    LODWORD(v57) = -1;
  }
  if (v57 != -1) {
    goto LABEL_181;
  }
LABEL_99:
  if (v36 > 3)
  {
LABEL_100:
    unsigned int v76 = *(unsigned __int8 *)(v47 + v36);
    goto LABEL_105;
  }
  unsigned int v77 = ((1 << v37) + 1) >> v37;
  if (v77 > 0xFFF5)
  {
    unsigned int v76 = *(_DWORD *)(v47 + v36);
  }
  else
  {
    if (v77 <= 0xF5) {
      goto LABEL_100;
    }
    unsigned int v76 = *(unsigned __int16 *)(v47 + v36);
  }
LABEL_105:
  unsigned int v78 = v76 - 10;
  if (v76 >= 0xA)
  {
    if (v36 <= 3) {
      uint64_t v79 = v36;
    }
    else {
      uint64_t v79 = 4;
    }
    switch(v79)
    {
      case 1:
        int v80 = *(unsigned __int8 *)v47;
        if (v36 < 4) {
          goto LABEL_117;
        }
        goto LABEL_118;
      case 2:
        int v80 = *(unsigned __int16 *)v47;
        if (v36 >= 4) {
          goto LABEL_118;
        }
        goto LABEL_117;
      case 3:
        int v80 = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
        if (v36 >= 4) {
          goto LABEL_118;
        }
        goto LABEL_117;
      case 4:
        int v80 = *(_DWORD *)v47;
        if (v36 < 4) {
LABEL_117:
        }
          v80 |= v78 << v37;
LABEL_118:
        unsigned int v76 = v80 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v81 = ~v19;
  switch(v76)
  {
    case 0u:
      unsigned int v82 = *(unsigned __int8 *)(v47 + v26);
      unsigned int v83 = v82 - 10;
      if (v82 >= 0xA)
      {
        if (v26 <= 3) {
          uint64_t v84 = v26;
        }
        else {
          uint64_t v84 = 4;
        }
        switch(v84)
        {
          case 1:
            int v85 = *(unsigned __int8 *)v47;
            goto LABEL_208;
          case 2:
            int v85 = *(unsigned __int16 *)v47;
            goto LABEL_208;
          case 3:
            int v85 = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
            goto LABEL_208;
          case 4:
            int v85 = *(_DWORD *)v47;
LABEL_208:
            if (v26 < 4) {
              unsigned int v82 = (v85 | (v83 << (8 * v26))) + 10;
            }
            else {
              unsigned int v82 = v85 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v82)
      {
        case 1u:
          long long v133 = *(void **)v47;
          *(void *)unint64_t v46 = *(void *)v47;
          char v134 = 1;
          goto LABEL_237;
        case 2u:
          uint64_t v135 = v26;
          uint64_t v136 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v136;
          *(unsigned char *)(v46 + v135) = 2;
          break;
        case 3u:
          uint64_t v137 = v26;
          uint64_t v138 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v138;
          *(unsigned char *)(v46 + v137) = 3;
          break;
        case 4u:
          uint64_t v139 = v26;
          uint64_t v140 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v140;
          *(unsigned char *)(v46 + v139) = 4;
          break;
        case 5u:
          uint64_t v141 = v26;
          uint64_t v142 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v142;
          *(unsigned char *)(v46 + v141) = 5;
          break;
        case 6u:
          uint64_t v155 = v26;
          uint64_t v156 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v156;
          *(unsigned char *)(v46 + v155) = 6;
          break;
        case 7u:
          long long v143 = *(_OWORD *)v47;
          *(_OWORD *)(v46 + 9) = *(_OWORD *)(v47 + 9);
          *(_OWORD *)unint64_t v46 = v143;
          *(unsigned char *)(v46 + v26) = 7;
          break;
        case 8u:
          long long v133 = *(void **)v47;
          *(void *)unint64_t v46 = *(void *)v47;
          char v134 = 8;
          goto LABEL_237;
        case 9u:
          long long v133 = *(void **)v47;
          *(void *)unint64_t v46 = *(void *)v47;
          char v134 = 9;
LABEL_237:
          *(unsigned char *)(v46 + v26) = v134;
          uint64_t v157 = v26 + 1;
          id v158 = v133;
          uint64_t v27 = v157;
          break;
        default:
          *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
          *(unsigned char *)(v46 + v26) = 0;
          break;
      }
      unint64_t v159 = ((v46 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = ((v47 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v160 + 8) < 0xFFFFFFFFuLL)
      {
        long long v169 = *(_OWORD *)v160;
        long long v170 = *(_OWORD *)(v160 + 16);
        long long v171 = *(_OWORD *)(v160 + 48);
        *(_OWORD *)(v159 + 32) = *(_OWORD *)(v160 + 32);
        *(_OWORD *)(v159 + 48) = v171;
        *(_OWORD *)unint64_t v159 = v169;
        *(_OWORD *)(v159 + 16) = v170;
        long long v172 = *(_OWORD *)(v160 + 64);
        long long v173 = *(_OWORD *)(v160 + 80);
        long long v174 = *(_OWORD *)(v160 + 96);
        *(_OWORD *)(v159 + 106) = *(_OWORD *)(v160 + 106);
        *(_OWORD *)(v159 + 80) = v173;
        *(_OWORD *)(v159 + 96) = v174;
        *(_OWORD *)(v159 + 64) = v172;
      }
      else
      {
        *(void *)unint64_t v159 = *(void *)v160;
        *(void *)(v159 + 8) = *(void *)(v160 + 8);
        uint64_t v161 = *(void **)(v160 + 16);
        uint64_t v162 = *(void *)(v160 + 24);
        uint64_t v163 = *(void *)(v160 + 32);
        uint64_t v164 = *(void *)(v160 + 40);
        uint64_t v235 = *(void *)(v160 + 48);
        uint64_t v245 = *(void *)(v160 + 56);
        unsigned __int8 v240 = *(unsigned char *)(v160 + 64);
        swift_bridgeObjectRetain();
        sub_100050F84(v161, v162, v163, v164, v235, v245, v240);
        *(void *)(v159 + 16) = v161;
        *(void *)(v159 + 24) = v162;
        *(void *)(v159 + 32) = v163;
        *(void *)(v159 + 40) = v164;
        *(void *)(v159 + 48) = v235;
        *(void *)(v159 + 56) = v245;
        *(unsigned char *)(v159 + 64) = v240;
        *(unsigned char *)(v159 + 65) = *(unsigned char *)(v160 + 65);
        *(unsigned char *)(v159 + 66) = *(unsigned char *)(v160 + 66);
        *(unsigned char *)(v159 + 67) = *(unsigned char *)(v160 + 67);
        *(unsigned char *)(v159 + 68) = *(unsigned char *)(v160 + 68);
        int v165 = *(unsigned __int8 *)(v160 + 120);
        if (v165 == 255)
        {
          long long v166 = *(_OWORD *)(v160 + 72);
          long long v167 = *(_OWORD *)(v160 + 88);
          long long v168 = *(_OWORD *)(v160 + 104);
          *(unsigned char *)(v159 + 120) = *(unsigned char *)(v160 + 120);
          *(_OWORD *)(v159 + 88) = v167;
          *(_OWORD *)(v159 + 104) = v168;
          *(_OWORD *)(v159 + 72) = v166;
        }
        else
        {
          char v246 = v165 & 1;
          uint64_t v175 = *(void **)(v160 + 72);
          uint64_t v176 = *(void *)(v160 + 80);
          uint64_t v177 = *(void *)(v160 + 88);
          uint64_t v178 = *(void *)(v160 + 96);
          uint64_t v236 = *(void *)(v160 + 112);
          uint64_t v241 = *(void *)(v160 + 104);
          sub_10003BED8(v175, v176, v177, v178, v241, v236, v165 & 1);
          *(void *)(v159 + 72) = v175;
          *(void *)(v159 + 80) = v176;
          *(void *)(v159 + 88) = v177;
          *(void *)(v159 + 96) = v178;
          *(void *)(v159 + 104) = v241;
          *(void *)(v159 + 112) = v236;
          *(unsigned char *)(v159 + 120) = v246;
        }
        *(unsigned char *)(v159 + 121) = *(unsigned char *)(v160 + 121);
      }
      *(unsigned char *)(v159 + 122) = *(unsigned char *)(v160 + 122);
      *(unsigned char *)(v159 + 123) = *(unsigned char *)(v160 + 123);
      *(unsigned char *)(v159 + 124) = *(unsigned char *)(v160 + 124);
      *(unsigned char *)(v159 + 125) = *(unsigned char *)(v160 + 125);
      *(unsigned char *)(v159 + 126) = *(unsigned char *)(v160 + 126);
      id v179 = *(void **)((v160 + 134) & 0xFFFFFFFFFFFFFFF8);
      *(void *)((v159 + 134) & 0xFFFFFFFFFFFFFFF8) = v179;
      id v180 = v179;
      if (v36 <= 3)
      {
        unsigned int v120 = ((1 << v37) + 1) >> v37;
        if (v120 > 0xFFF5)
        {
          *(_DWORD *)(v46 + v36) = 0;
          goto LABEL_319;
        }
        if (v120 > 0xF5)
        {
          *(_WORD *)(v46 + v36) = 0;
          goto LABEL_319;
        }
      }
      *(unsigned char *)(v46 + v36) = 0;
      if (v36 <= 3) {
        goto LABEL_310;
      }
      goto LABEL_313;
    case 1u:
      unsigned int v86 = *(unsigned __int8 *)(v47 + v26);
      unsigned int v87 = v86 - 10;
      if (v86 >= 0xA)
      {
        if (v26 <= 3) {
          uint64_t v88 = v26;
        }
        else {
          uint64_t v88 = 4;
        }
        switch(v88)
        {
          case 1:
            int v89 = *(unsigned __int8 *)v47;
            goto LABEL_216;
          case 2:
            int v89 = *(unsigned __int16 *)v47;
            goto LABEL_216;
          case 3:
            int v89 = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
            goto LABEL_216;
          case 4:
            int v89 = *(_DWORD *)v47;
LABEL_216:
            if (v26 < 4) {
              unsigned int v86 = (v89 | (v87 << (8 * v26))) + 10;
            }
            else {
              unsigned int v86 = v89 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v86)
      {
        case 1u:
          long long v144 = *(void **)v47;
          *(void *)unint64_t v46 = *(void *)v47;
          char v145 = 1;
          goto LABEL_253;
        case 2u:
          uint64_t v146 = v26;
          uint64_t v147 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v147;
          *(unsigned char *)(v46 + v146) = 2;
          break;
        case 3u:
          uint64_t v148 = v26;
          uint64_t v149 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v149;
          *(unsigned char *)(v46 + v148) = 3;
          break;
        case 4u:
          uint64_t v150 = v26;
          uint64_t v151 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v151;
          *(unsigned char *)(v46 + v150) = 4;
          break;
        case 5u:
          uint64_t v152 = v26;
          uint64_t v153 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v153;
          *(unsigned char *)(v46 + v152) = 5;
          break;
        case 6u:
          uint64_t v181 = v26;
          uint64_t v182 = v26 + 1;
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
          uint64_t v27 = v182;
          *(unsigned char *)(v46 + v181) = 6;
          break;
        case 7u:
          long long v154 = *(_OWORD *)v47;
          *(_OWORD *)(v46 + 9) = *(_OWORD *)(v47 + 9);
          *(_OWORD *)unint64_t v46 = v154;
          *(unsigned char *)(v46 + v26) = 7;
          break;
        case 8u:
          long long v144 = *(void **)v47;
          *(void *)unint64_t v46 = *(void *)v47;
          char v145 = 8;
          goto LABEL_253;
        case 9u:
          long long v144 = *(void **)v47;
          *(void *)unint64_t v46 = *(void *)v47;
          char v145 = 9;
LABEL_253:
          *(unsigned char *)(v46 + v26) = v145;
          uint64_t v183 = v26 + 1;
          id v184 = v144;
          uint64_t v27 = v183;
          break;
        default:
          *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
          *(unsigned char *)(v46 + v26) = 0;
          break;
      }
      unint64_t v185 = ((v46 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v186 = ((v47 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v186 + 8) < 0xFFFFFFFFuLL)
      {
        long long v195 = *(_OWORD *)v186;
        long long v196 = *(_OWORD *)(v186 + 16);
        long long v197 = *(_OWORD *)(v186 + 48);
        *(_OWORD *)(v185 + 32) = *(_OWORD *)(v186 + 32);
        *(_OWORD *)(v185 + 48) = v197;
        *(_OWORD *)unint64_t v185 = v195;
        *(_OWORD *)(v185 + 16) = v196;
        long long v198 = *(_OWORD *)(v186 + 64);
        long long v199 = *(_OWORD *)(v186 + 80);
        long long v200 = *(_OWORD *)(v186 + 96);
        *(_OWORD *)(v185 + 106) = *(_OWORD *)(v186 + 106);
        *(_OWORD *)(v185 + 80) = v199;
        *(_OWORD *)(v185 + 96) = v200;
        *(_OWORD *)(v185 + 64) = v198;
      }
      else
      {
        *(void *)unint64_t v185 = *(void *)v186;
        *(void *)(v185 + 8) = *(void *)(v186 + 8);
        id v187 = *(void **)(v186 + 16);
        uint64_t v188 = *(void *)(v186 + 24);
        uint64_t v189 = *(void *)(v186 + 32);
        uint64_t v190 = *(void *)(v186 + 40);
        uint64_t v237 = *(void *)(v186 + 48);
        uint64_t v247 = *(void *)(v186 + 56);
        unsigned __int8 v242 = *(unsigned char *)(v186 + 64);
        swift_bridgeObjectRetain();
        sub_100050F84(v187, v188, v189, v190, v237, v247, v242);
        *(void *)(v185 + 16) = v187;
        *(void *)(v185 + 24) = v188;
        *(void *)(v185 + 32) = v189;
        *(void *)(v185 + 40) = v190;
        *(void *)(v185 + 48) = v237;
        *(void *)(v185 + 56) = v247;
        *(unsigned char *)(v185 + 64) = v242;
        *(unsigned char *)(v185 + 65) = *(unsigned char *)(v186 + 65);
        *(unsigned char *)(v185 + 66) = *(unsigned char *)(v186 + 66);
        *(unsigned char *)(v185 + 67) = *(unsigned char *)(v186 + 67);
        *(unsigned char *)(v185 + 68) = *(unsigned char *)(v186 + 68);
        int v191 = *(unsigned __int8 *)(v186 + 120);
        if (v191 == 255)
        {
          long long v192 = *(_OWORD *)(v186 + 72);
          long long v193 = *(_OWORD *)(v186 + 88);
          long long v194 = *(_OWORD *)(v186 + 104);
          *(unsigned char *)(v185 + 120) = *(unsigned char *)(v186 + 120);
          *(_OWORD *)(v185 + 88) = v193;
          *(_OWORD *)(v185 + 104) = v194;
          *(_OWORD *)(v185 + 72) = v192;
        }
        else
        {
          char v248 = v191 & 1;
          unsigned int v201 = *(void **)(v186 + 72);
          uint64_t v202 = *(void *)(v186 + 80);
          uint64_t v203 = *(void *)(v186 + 88);
          uint64_t v204 = *(void *)(v186 + 96);
          uint64_t v238 = *(void *)(v186 + 112);
          uint64_t v243 = *(void *)(v186 + 104);
          sub_10003BED8(v201, v202, v203, v204, v243, v238, v191 & 1);
          *(void *)(v185 + 72) = v201;
          *(void *)(v185 + 80) = v202;
          *(void *)(v185 + 88) = v203;
          *(void *)(v185 + 96) = v204;
          *(void *)(v185 + 104) = v243;
          *(void *)(v185 + 112) = v238;
          *(unsigned char *)(v185 + 120) = v248;
        }
        *(unsigned char *)(v185 + 121) = *(unsigned char *)(v186 + 121);
      }
      *(unsigned char *)(v185 + 122) = *(unsigned char *)(v186 + 122);
      *(unsigned char *)(v185 + 123) = *(unsigned char *)(v186 + 123);
      *(unsigned char *)(v185 + 124) = *(unsigned char *)(v186 + 124);
      *(unsigned char *)(v185 + 125) = *(unsigned char *)(v186 + 125);
      *(unsigned char *)(v185 + 126) = *(unsigned char *)(v186 + 126);
      size_t v205 = *(void **)((v186 + 134) & 0xFFFFFFFFFFFFFFF8);
      *(void *)((v185 + 134) & 0xFFFFFFFFFFFFFFF8) = v205;
      id v206 = v205;
      if (v36 > 3) {
        goto LABEL_261;
      }
      int v132 = 1;
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5) {
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_261:
        char v113 = 1;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 1;
      goto LABEL_319;
    case 2u:
      size_t v90 = v26 + 1;
      uint64_t v91 = *(void **)v47;
      *(void *)unint64_t v46 = *(void *)v47;
      uint64_t v92 = (char *)((v29 + v46) & v81);
      uint64_t v93 = (unsigned __int8 *)((v29 + v47) & v81);
      uint64_t v94 = v26;
      int v95 = v93[v26];
      id v96 = v91;
      switch(v95)
      {
        case 0:
          *uint64_t v92 = *v93;
          v92[v94] = 0;
          break;
        case 1:
          uint64_t v207 = *(void **)v93;
          *(void *)uint64_t v92 = *(void *)v93;
          char v208 = 1;
          goto LABEL_274;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v92, v93, v234);
          v92[v94] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v92, v93, v234);
          v92[v94] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v92, v93, v234);
          v92[v94] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v92, v93, v234);
          v92[v94] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v92, v93, v234);
          v92[v94] = 6;
          break;
        case 7:
          long long v209 = *(_OWORD *)v93;
          *(_OWORD *)(v92 + 9) = *(_OWORD *)(v93 + 9);
          *(_OWORD *)uint64_t v92 = v209;
          v92[v94] = 7;
          break;
        case 8:
          uint64_t v207 = *(void **)v93;
          *(void *)uint64_t v92 = *(void *)v93;
          char v208 = 8;
          goto LABEL_274;
        case 9:
          uint64_t v207 = *(void **)v93;
          *(void *)uint64_t v92 = *(void *)v93;
          char v208 = 9;
LABEL_274:
          v92[v94] = v208;
          id v210 = v207;
          break;
        default:
          memcpy(v92, v93, v90);
          break;
      }
      if (v36 > 3) {
        goto LABEL_276;
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 2;
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_276:
        char v113 = 2;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 2;
      goto LABEL_319;
    case 3u:
      size_t v97 = v26 + 1;
      uint64_t v98 = *(void **)v47;
      *(void *)unint64_t v46 = *(void *)v47;
      uint64_t v99 = (char *)((v29 + v46) & v81);
      int v100 = (unsigned __int8 *)((v29 + v47) & v81);
      uint64_t v101 = v26;
      int v102 = v100[v26];
      id v103 = v98;
      switch(v102)
      {
        case 0:
          *uint64_t v99 = *v100;
          v99[v101] = 0;
          break;
        case 1:
          unint64_t v211 = *(void **)v100;
          *(void *)uint64_t v99 = *(void *)v100;
          char v212 = 1;
          goto LABEL_290;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v99, v100, v234);
          v99[v101] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v99, v100, v234);
          v99[v101] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v99, v100, v234);
          v99[v101] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v99, v100, v234);
          v99[v101] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v99, v100, v234);
          v99[v101] = 6;
          break;
        case 7:
          long long v213 = *(_OWORD *)v100;
          *(_OWORD *)(v99 + 9) = *(_OWORD *)(v100 + 9);
          *(_OWORD *)uint64_t v99 = v213;
          v99[v101] = 7;
          break;
        case 8:
          unint64_t v211 = *(void **)v100;
          *(void *)uint64_t v99 = *(void *)v100;
          char v212 = 8;
          goto LABEL_290;
        case 9:
          unint64_t v211 = *(void **)v100;
          *(void *)uint64_t v99 = *(void *)v100;
          char v212 = 9;
LABEL_290:
          v99[v101] = v212;
          id v214 = v211;
          break;
        default:
          memcpy(v99, v100, v97);
          break;
      }
      if (v36 > 3) {
        goto LABEL_292;
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 3;
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_292:
        char v113 = 3;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 3;
      goto LABEL_319;
    case 4u:
      size_t v104 = v26 + 1;
      uint64_t v105 = *(void **)v47;
      *(void *)unint64_t v46 = *(void *)v47;
      uint64_t v106 = (char *)((v29 + v46) & v81);
      int v107 = (unsigned __int8 *)((v29 + v47) & v81);
      uint64_t v108 = v26;
      int v109 = v107[v26];
      id v110 = v105;
      switch(v109)
      {
        case 0:
          *uint64_t v106 = *v107;
          v106[v108] = 0;
          break;
        case 1:
          uint64_t v215 = *(void **)v107;
          *(void *)uint64_t v106 = *(void *)v107;
          char v216 = 1;
          goto LABEL_306;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v106, v107, v234);
          v106[v108] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v106, v107, v234);
          v106[v108] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v106, v107, v234);
          v106[v108] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v106, v107, v234);
          v106[v108] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v239 + 16))(v106, v107, v234);
          v106[v108] = 6;
          break;
        case 7:
          long long v217 = *(_OWORD *)v107;
          *(_OWORD *)(v106 + 9) = *(_OWORD *)(v107 + 9);
          *(_OWORD *)uint64_t v106 = v217;
          v106[v108] = 7;
          break;
        case 8:
          uint64_t v215 = *(void **)v107;
          *(void *)uint64_t v106 = *(void *)v107;
          char v216 = 8;
          goto LABEL_306;
        case 9:
          uint64_t v215 = *(void **)v107;
          *(void *)uint64_t v106 = *(void *)v107;
          char v216 = 9;
LABEL_306:
          v106[v108] = v216;
          id v218 = v215;
          break;
        default:
          memcpy(v106, v107, v104);
          break;
      }
      if (v36 > 3) {
        goto LABEL_308;
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 4;
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_308:
        char v113 = 4;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 4;
      goto LABEL_319;
    case 5u:
      *(void *)unint64_t v46 = *(void *)v47;
      *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
      *(unsigned char *)(v46 + 9) = *(unsigned char *)(v47 + 9);
      *(unsigned char *)(v46 + 10) = *(unsigned char *)(v47 + 10);
      id v111 = *(void **)(v47 + 16);
      *(void *)(v46 + 16) = v111;
      id v112 = v111;
      if (v36 > 3) {
        goto LABEL_139;
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 5;
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_139:
        char v113 = 5;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 5;
      goto LABEL_319;
    case 6u:
      unint64_t v118 = *(void **)v47;
      *(void *)unint64_t v46 = *(void *)v47;
      id v119 = v118;
      if (v36 > 3) {
        goto LABEL_157;
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 6;
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_157:
        char v113 = 6;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 6;
      goto LABEL_319;
    case 7u:
      uint64_t v114 = ~v17;
      if (v31 < 0)
      {
        int v123 = (*(uint64_t (**)(uint64_t))(v232 + 48))((v47 + v17 + 8) & v114);
        uint64_t v32 = v17 + 8;
        if (v123)
        {
LABEL_144:
          memcpy((void *)v46, (const void *)v47, v33);
          goto LABEL_190;
        }
      }
      else
      {
        uint64_t v115 = *(void *)v47;
        if (*(void *)v47 >= 0xFFFFFFFFuLL) {
          LODWORD(v115) = -1;
        }
        if (v115 != -1) {
          goto LABEL_144;
        }
      }
      *(void *)unint64_t v46 = *(void *)v47;
      unint64_t v124 = (v32 + v46) & v114;
      uint64_t v125 = (v47 + v17 + 8) & v114;
      long long v126 = *(void (**)(unint64_t, uint64_t, uint64_t))(v232 + 16);
      swift_bridgeObjectRetain();
      v126(v124, v125, v233);
LABEL_190:
      unint64_t v127 = ((v46 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v128 = ((v47 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v128 + 8) < 0xFFFFFFFFuLL)
      {
        long long v131 = *(_OWORD *)v128;
        *(void *)(v127 + 16) = *(void *)(v128 + 16);
        *(_OWORD *)unint64_t v127 = v131;
        if (v36 > 3)
        {
LABEL_196:
          char v113 = 7;
          goto LABEL_309;
        }
      }
      else
      {
        *(void *)unint64_t v127 = *(void *)v128;
        *(void *)(v127 + 8) = *(void *)(v128 + 8);
        long long v129 = *(void **)(v128 + 16);
        *(void *)(v127 + 16) = v129;
        swift_bridgeObjectRetain();
        id v130 = v129;
        if (v36 > 3) {
          goto LABEL_196;
        }
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 7;
        goto LABEL_318;
      }
      if (v120 <= 0xF5) {
        goto LABEL_196;
      }
      *(_WORD *)(v46 + v36) = 7;
      goto LABEL_319;
    case 8u:
      if (*(_DWORD *)(v14 + 84) >= 0xFDu)
      {
        if (!(*(unsigned int (**)(uint64_t, void, uint64_t))(v14 + 48))(v47, *(unsigned int *)(v14 + 84), v234))goto LABEL_172; {
LABEL_171:
        }
        memcpy((void *)v46, (const void *)v47, v25 + 1);
        goto LABEL_173;
      }
      if (*(unsigned __int8 *)(v47 + v25) >= 3u) {
        goto LABEL_171;
      }
LABEL_172:
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v46, v47, v234);
      *(unsigned char *)(v46 + v25) = *(unsigned char *)(v47 + v25);
LABEL_173:
      *(void *)(((v46 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v47 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8);
      if (v36 <= 3)
      {
        unsigned int v120 = ((1 << v37) + 1) >> v37;
        if (v120 > 0xFFF5)
        {
          int v132 = 8;
LABEL_318:
          *(_DWORD *)(v46 + v36) = v132;
        }
        else
        {
          if (v120 <= 0xF5) {
            goto LABEL_176;
          }
          *(_WORD *)(v46 + v36) = 8;
        }
LABEL_319:
        BOOL v221 = v120 > 0xFFF5;
        uint64_t v220 = 2;
        if (v221) {
          uint64_t v220 = 4;
        }
        goto LABEL_321;
      }
LABEL_176:
      char v113 = 8;
LABEL_309:
      *(unsigned char *)(v46 + v36) = v113;
      if (v36 > 3) {
        goto LABEL_313;
      }
LABEL_310:
      unsigned int v219 = ((1 << v37) + 1) >> v37;
      uint64_t v220 = 2;
      if (v219 > 0xFFF5) {
        uint64_t v220 = 4;
      }
      if (v219 <= 0xF5) {
LABEL_313:
      }
        uint64_t v220 = 1;
LABEL_321:
      uint64_t v222 = v220 + v36;
      unint64_t v223 = v222 + v46;
      unint64_t v224 = v222 + v47;
      *(unsigned char *)unint64_t v223 = *(unsigned char *)v224;
      v223 &= 0xFFFFFFFFFFFFFFF8;
      v224 &= 0xFFFFFFFFFFFFFFF8;
      *(void *)(v223 + 8) = *(void *)(v224 + 8);
      *(void *)(v223 + 16) = *(void *)(v224 + 16);
      *(void *)((v223 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v224 + 31) & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v36 > 3) {
        goto LABEL_325;
      }
      unsigned int v225 = ((1 << v37) + 1) >> v37;
      uint64_t v226 = 2;
      if (v225 > 0xFFF5) {
        uint64_t v226 = 4;
      }
      if (v225 <= 0xF5) {
LABEL_325:
      }
        uint64_t v226 = 1;
      int v38 = a1;
      unint64_t v227 = ((((v226 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(void *)((v46 + v227) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v47 + v227) & 0xFFFFFFFFFFFFFFF8);
      if (v36 > 3) {
        goto LABEL_330;
      }
LABEL_327:
      unsigned int v228 = ((1 << v37) + 1) >> v37;
      uint64_t v229 = 2;
      if (v228 > 0xFFF5) {
        uint64_t v229 = 4;
      }
      if (v228 <= 0xF5) {
LABEL_330:
      }
        uint64_t v229 = 1;
      unint64_t v230 = ((((((v229 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
      *(unsigned char *)(v230 + v46) = *(unsigned char *)(v230 + v47);
      return v38;
    case 9u:
      *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 16))((v23 + 1 + v46) & ~v23, (v23 + 1 + v47) & ~v23, v20);
      if (v36 > 3) {
        goto LABEL_146;
      }
      unsigned int v120 = ((1 << v37) + 1) >> v37;
      if (v120 > 0xFFF5)
      {
        int v132 = 9;
        goto LABEL_318;
      }
      if (v120 <= 0xF5)
      {
LABEL_146:
        char v113 = 9;
        goto LABEL_309;
      }
      *(_WORD *)(v46 + v36) = 9;
      goto LABEL_319;
    default:
      if (v36 > 3) {
        goto LABEL_151;
      }
      unsigned int v116 = ((1 << v37) + 1) >> v37;
      uint64_t v117 = 2;
      if (v116 > 0xFFF5) {
        uint64_t v117 = 4;
      }
      if (v116 <= 0xF5) {
LABEL_151:
      }
        uint64_t v117 = 1;
      memcpy((void *)v46, (const void *)v47, v117 + v36);
      if (v36 > 3) {
        goto LABEL_313;
      }
      goto LABEL_310;
  }
}

void *sub_10061C348(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  uint64_t v537 = a1;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 24))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v529 = v13;
  uint64_t v519 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v519 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v518 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v16 = *(void *)(v518 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = type metadata accessor for AnyTip();
  uint64_t v19 = v15 | 7;
  uint64_t v20 = v17;
  uint64_t v21 = v18;
  uint64_t v22 = *(void *)(v18 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v17 | v23 | v15 | 7;
  unint64_t v25 = *(void *)(v14 + 64);
  if (v25 <= 0x19) {
    uint64_t v26 = 25;
  }
  else {
    uint64_t v26 = *(void *)(v14 + 64);
  }
  size_t v27 = v26 + 1;
  unint64_t v28 = (((v26 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v29 = v15 + 15;
  uint64_t v517 = v16;
  int v30 = *(_DWORD *)(v16 + 84);
  size_t v31 = *(void *)(v16 + 64) + ((v17 + 8) & ~v17);
  uint64_t v520 = v14;
  uint64_t v32 = *(unsigned int *)(v14 + 84);
  if (v26 + 1 + ((v15 + 15) & (unint64_t)~v19) > v28) {
    unint64_t v28 = v26 + 1 + ((v15 + 15) & ~v19);
  }
  if (v28 <= ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v28 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v28 <= (v25 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v28 = (v25 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v33 = v23 + 1;
  unint64_t v34 = *(void *)(*(void *)(v18 - 8) + 64) + ((v23 + 1) & ~v23);
  if (v28 > v34) {
    unint64_t v34 = v28;
  }
  if (v34 <= 0x18) {
    uint64_t v35 = 24;
  }
  else {
    uint64_t v35 = v34;
  }
  uint64_t v36 = v537;
  unint64_t v37 = (unint64_t)&a2[v24 + v529];
  if (v35 > 3)
  {
    int v38 = 11;
LABEL_31:
    char v39 = 8;
    goto LABEL_32;
  }
  unsigned int v43 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  if (v43 > 0xFFF5)
  {
    unsigned int v41 = 0x7FFFFFFF;
    goto LABEL_41;
  }
  int v38 = v43 + 10;
  if (v43 <= 0xF5) {
    goto LABEL_31;
  }
  char v39 = 16;
LABEL_32:
  unsigned int v40 = (1 << v39) - v38;
  unsigned int v41 = 0x7FFFFFFF;
  if (v40 <= 0x7FFFFFFF) {
    int v42 = 0x7FFFFFFF;
  }
  else {
    int v42 = v40;
  }
  if ((v40 & 0x80000000) == 0) {
    unsigned int v41 = v42;
  }
LABEL_41:
  int v44 = (unsigned __int16 *)(((unint64_t)v537 + v24 + v529) & ~v24);
  unsigned int v45 = (unsigned __int8 *)(v37 & ~v24);
  if (v35 > 3)
  {
    int v46 = 11;
    goto LABEL_43;
  }
  unsigned int v49 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  if (v49 <= 0xFFF5)
  {
    int v46 = v49 + 10;
    if (v49 > 0xF5)
    {
      char v47 = 16;
LABEL_44:
      int v48 = (1 << v47) - v46;
      if ((v48 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_49;
    }
LABEL_43:
    char v47 = 8;
    goto LABEL_44;
  }
LABEL_49:
  int v48 = 0x7FFFFFFF;
LABEL_50:
  uint64_t v50 = ~v19;
  uint64_t v51 = ~v17;
  uint64_t v52 = ~v23;
  if (v48 == v41)
  {
    if (v35 <= 3)
    {
      unsigned int v59 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v59 > 0xFFF5) {
        goto LABEL_69;
      }
      int v53 = v59 + 10;
      if (v59 > 0xF5)
      {
        char v54 = 16;
LABEL_54:
        unsigned int v55 = (1 << v54) - v53;
        if ((v55 & 0x80000000) == 0)
        {
          if (v35 > 3) {
            goto LABEL_73;
          }
LABEL_70:
          unsigned int v60 = ((1 << (8 * v35)) + 1) >> (8 * v35);
          uint64_t v61 = 2;
          if (v60 > 0xFFF5) {
            uint64_t v61 = 4;
          }
          if (v60 > 0xF5)
          {
LABEL_74:
            unsigned int v62 = v41 - v55;
            if (v41 <= v55) {
              goto LABEL_91;
            }
            uint64_t v63 = v61 + v35;
            char v64 = 8 * (v61 + v35);
            if (v63 > 3)
            {
LABEL_76:
              int v65 = *((unsigned __int8 *)v44 + v63);
              if (!*((unsigned char *)v44 + v63)) {
                goto LABEL_91;
              }
              goto LABEL_83;
            }
            unsigned int v66 = ((v62 + ~(-1 << v64)) >> v64) + 1;
            if (HIWORD(v66))
            {
              int v65 = *(_DWORD *)((char *)v44 + v63);
              if (!v65) {
                goto LABEL_91;
              }
            }
            else
            {
              if (v66 <= 0xFF)
              {
                if (v66 < 2)
                {
LABEL_91:
                  if (!v55) {
                    goto LABEL_103;
                  }
                  if (v35 <= 3)
                  {
                    unsigned int v74 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                    if (v74 > 0xFFF5)
                    {
                      unsigned int v69 = *(_DWORD *)((char *)v44 + v35);
                      unsigned int v70 = ~v69;
                      goto LABEL_101;
                    }
                    int v72 = v74 + 10;
                    if (v74 > 0xF5)
                    {
                      int v101 = *(unsigned __int16 *)((char *)v44 + v35);
                      unsigned int v69 = v101 | 0xFFFF0000;
                      unsigned int v70 = v101 ^ 0xFFFF;
                      char v71 = 16;
                    }
                    else
                    {
                      int v75 = *((unsigned __int8 *)v44 + v35);
                      unsigned int v69 = v75 | 0xFFFFFF00;
                      unsigned int v70 = v75 ^ 0xFF;
                      char v71 = 8;
                    }
                  }
                  else
                  {
                    int v68 = *((unsigned __int8 *)v44 + v35);
                    unsigned int v69 = v68 | 0xFFFFFF00;
                    unsigned int v70 = v68 ^ 0xFF;
                    char v71 = 8;
                    int v72 = 11;
                  }
                  unsigned int v73 = (1 << v71) - v72;
                  if ((v73 & 0x80000000) == 0)
                  {
                    if (v73 <= v70) {
                      goto LABEL_103;
                    }
                    goto LABEL_102;
                  }
LABEL_101:
                  if (v70 >= 0x7FFFFFFF) {
                    goto LABEL_103;
                  }
LABEL_102:
                  if (!v69) {
                    goto LABEL_103;
                  }
LABEL_168:
                  if (v35 <= 3)
                  {
                    unsigned int v103 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                    if (v103 > 0xFFF5)
                    {
                      unsigned int v106 = 0x7FFFFFFF;
                      if (v35 > 3)
                      {
LABEL_179:
                        int v108 = 11;
                        goto LABEL_183;
                      }
LABEL_181:
                      unsigned int v109 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                      if (v109 > 0xFFF5) {
                        goto LABEL_188;
                      }
                      int v108 = v109 + 10;
                      if (v109 > 0xF5)
                      {
                        char v110 = 16;
LABEL_184:
                        int v111 = (1 << v110) - v108;
                        if ((v111 & 0x80000000) == 0)
                        {
                          if (v111 == v106) {
                            goto LABEL_186;
                          }
                          goto LABEL_189;
                        }
LABEL_188:
                        if (v106 == 0x7FFFFFFF)
                        {
LABEL_186:
                          if (v35 <= 3)
                          {
                            unsigned int v116 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                            if (v116 > 0xFFF5) {
                              goto LABEL_204;
                            }
                            int v112 = v116 + 10;
                            if (v116 > 0xF5)
                            {
                              char v117 = 16;
LABEL_201:
                              unsigned int v118 = (1 << v117) - v112;
                              if ((v118 & 0x80000000) == 0)
                              {
                                if (v35 > 3) {
                                  goto LABEL_208;
                                }
LABEL_205:
                                unsigned int v119 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                uint64_t v120 = 2;
                                if (v119 > 0xFFF5) {
                                  uint64_t v120 = 4;
                                }
                                if (v119 > 0xF5)
                                {
LABEL_209:
                                  unsigned int v121 = v106 - v118;
                                  if (v106 <= v118) {
                                    goto LABEL_288;
                                  }
                                  uint64_t v122 = v120 + v35;
                                  char v123 = 8 * (v120 + v35);
                                  if (v122 <= 3)
                                  {
                                    unsigned int v125 = ((v121 + ~(-1 << v123)) >> v123) + 1;
                                    if (HIWORD(v125))
                                    {
                                      int v124 = *(_DWORD *)&v45[v122];
                                      if (!v124) {
                                        goto LABEL_288;
                                      }
                                      goto LABEL_221;
                                    }
                                    if (v125 > 0xFF)
                                    {
                                      int v124 = *(unsigned __int16 *)&v45[v122];
                                      if (!*(_WORD *)&v45[v122]) {
                                        goto LABEL_288;
                                      }
                                      goto LABEL_221;
                                    }
                                    if (v125 < 2)
                                    {
LABEL_288:
                                      if (!v118) {
                                        goto LABEL_300;
                                      }
                                      if (v35 <= 3)
                                      {
                                        unsigned int v166 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                        if (v166 > 0xFFF5)
                                        {
                                          unsigned int v161 = *(_DWORD *)&v45[v35];
                                          unsigned int v162 = ~v161;
LABEL_298:
                                          if (v162 < 0x7FFFFFFF) {
                                            goto LABEL_299;
                                          }
                                          if (v35 > 3) {
                                            goto LABEL_303;
                                          }
LABEL_300:
                                          unsigned int v168 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                          if (v168 > 0xFFF5)
                                          {
                                            unsigned int v169 = *(_DWORD *)&v45[v35];
                                            unsigned int v170 = v169 - 10;
                                            if (v169 < 0xA) {
                                              goto LABEL_320;
                                            }
                                            goto LABEL_308;
                                          }
                                          if (v168 > 0xF5)
                                          {
                                            unsigned int v169 = *(unsigned __int16 *)&v45[v35];
                                            unsigned int v170 = v169 - 10;
                                            if (v169 < 0xA)
                                            {
LABEL_320:
                                              switch(v169)
                                              {
                                                case 0u:
                                                  unsigned int v173 = v45[v26];
                                                  unsigned int v174 = v173 - 10;
                                                  if (v173 >= 0xA)
                                                  {
                                                    if (v26 <= 3) {
                                                      uint64_t v175 = v26;
                                                    }
                                                    else {
                                                      uint64_t v175 = 4;
                                                    }
                                                    switch(v175)
                                                    {
                                                      case 1:
                                                        int v176 = *v45;
                                                        goto LABEL_482;
                                                      case 2:
                                                        int v176 = *(unsigned __int16 *)v45;
                                                        goto LABEL_482;
                                                      case 3:
                                                        int v176 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                                        goto LABEL_482;
                                                      case 4:
                                                        int v176 = *(_DWORD *)v45;
LABEL_482:
                                                        if (v26 < 4) {
                                                          unsigned int v173 = (v176 | (v174 << (8 * v26))) + 10;
                                                        }
                                                        else {
                                                          unsigned int v173 = v176 + 10;
                                                        }
                                                        break;
                                                      default:
                                                        break;
                                                    }
                                                  }
                                                  switch(v173)
                                                  {
                                                    case 1u:
                                                      long long v262 = *(void **)v45;
                                                      *(void *)int v44 = *(void *)v45;
                                                      char v263 = 1;
                                                      goto LABEL_532;
                                                    case 2u:
                                                      uint64_t v264 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v264;
                                                      *((unsigned char *)v44 + v264) = 2;
                                                      break;
                                                    case 3u:
                                                      uint64_t v265 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v265;
                                                      *((unsigned char *)v44 + v265) = 3;
                                                      break;
                                                    case 4u:
                                                      uint64_t v266 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v266;
                                                      *((unsigned char *)v44 + v266) = 4;
                                                      break;
                                                    case 5u:
                                                      uint64_t v267 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v267;
                                                      *((unsigned char *)v44 + v267) = 5;
                                                      break;
                                                    case 6u:
                                                      uint64_t v268 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v268;
                                                      *((unsigned char *)v44 + v268) = 6;
                                                      break;
                                                    case 7u:
                                                      long long v269 = *(_OWORD *)v45;
                                                      *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)(v45 + 9);
                                                      *(_OWORD *)int v44 = v269;
                                                      *((unsigned char *)v44 + v26) = 7;
                                                      break;
                                                    case 8u:
                                                      long long v262 = *(void **)v45;
                                                      *(void *)int v44 = *(void *)v45;
                                                      char v263 = 8;
                                                      goto LABEL_532;
                                                    case 9u:
                                                      long long v262 = *(void **)v45;
                                                      *(void *)int v44 = *(void *)v45;
                                                      char v263 = 9;
LABEL_532:
                                                      *((unsigned char *)v44 + v26) = v263;
                                                      uint64_t v270 = v26;
                                                      id v271 = v262;
                                                      uint64_t v26 = v270;
                                                      break;
                                                    default:
                                                      *(unsigned char *)int v44 = *v45;
                                                      *((unsigned char *)v44 + v26) = 0;
                                                      break;
                                                  }
                                                  unint64_t v272 = (((unint64_t)v44 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
                                                  unint64_t v273 = (unint64_t)&v45[v26 + 8] & 0xFFFFFFFFFFFFFFF8;
                                                  if (*(void *)(v273 + 8) < 0xFFFFFFFFuLL)
                                                  {
                                                    long long v284 = *(_OWORD *)v273;
                                                    long long v285 = *(_OWORD *)(v273 + 16);
                                                    long long v286 = *(_OWORD *)(v273 + 48);
                                                    *(_OWORD *)(v272 + 32) = *(_OWORD *)(v273 + 32);
                                                    *(_OWORD *)(v272 + 48) = v286;
                                                    *(_OWORD *)unint64_t v272 = v284;
                                                    *(_OWORD *)(v272 + 16) = v285;
                                                    long long v287 = *(_OWORD *)(v273 + 64);
                                                    long long v288 = *(_OWORD *)(v273 + 80);
                                                    long long v289 = *(_OWORD *)(v273 + 96);
                                                    *(_OWORD *)(v272 + 106) = *(_OWORD *)(v273 + 106);
                                                    *(_OWORD *)(v272 + 80) = v288;
                                                    *(_OWORD *)(v272 + 96) = v289;
                                                    *(_OWORD *)(v272 + 64) = v287;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v531 = v45;
                                                    *(void *)unint64_t v272 = *(void *)v273;
                                                    *(void *)(v272 + 8) = *(void *)(v273 + 8);
                                                    id v274 = *(void **)(v273 + 16);
                                                    uint64_t v275 = *(void *)(v273 + 24);
                                                    uint64_t v276 = *(void *)(v273 + 32);
                                                    uint64_t v277 = *(void *)(v273 + 40);
                                                    uint64_t v279 = *(void *)(v273 + 48);
                                                    uint64_t v278 = *(void *)(v273 + 56);
                                                    unsigned __int8 v521 = *(unsigned char *)(v273 + 64);
                                                    swift_bridgeObjectRetain();
                                                    sub_100050F84(v274, v275, v276, v277, v279, v278, v521);
                                                    *(void *)(v272 + 16) = v274;
                                                    *(void *)(v272 + 24) = v275;
                                                    *(void *)(v272 + 32) = v276;
                                                    *(void *)(v272 + 40) = v277;
                                                    *(void *)(v272 + 48) = v279;
                                                    *(void *)(v272 + 56) = v278;
                                                    *(unsigned char *)(v272 + 64) = v521;
                                                    *(unsigned char *)(v272 + 65) = *(unsigned char *)(v273 + 65);
                                                    *(unsigned char *)(v272 + 66) = *(unsigned char *)(v273 + 66);
                                                    *(unsigned char *)(v272 + 67) = *(unsigned char *)(v273 + 67);
                                                    *(unsigned char *)(v272 + 68) = *(unsigned char *)(v273 + 68);
                                                    int v280 = *(unsigned __int8 *)(v273 + 120);
                                                    if (v280 == 255)
                                                    {
                                                      long long v281 = *(_OWORD *)(v273 + 72);
                                                      long long v282 = *(_OWORD *)(v273 + 88);
                                                      long long v283 = *(_OWORD *)(v273 + 104);
                                                      *(unsigned char *)(v272 + 120) = *(unsigned char *)(v273 + 120);
                                                      *(_OWORD *)(v272 + 88) = v282;
                                                      *(_OWORD *)(v272 + 104) = v283;
                                                      *(_OWORD *)(v272 + 72) = v281;
                                                    }
                                                    else
                                                    {
                                                      char v522 = v280 & 1;
                                                      uint64_t v290 = *(void **)(v273 + 72);
                                                      uint64_t v291 = *(void *)(v273 + 80);
                                                      uint64_t v292 = *(void *)(v273 + 88);
                                                      uint64_t v293 = *(void *)(v273 + 96);
                                                      uint64_t v294 = *(void *)(v273 + 104);
                                                      uint64_t v295 = *(void *)(v273 + 112);
                                                      sub_10003BED8(v290, v291, v292, v293, v294, v295, v280 & 1);
                                                      *(void *)(v272 + 72) = v290;
                                                      *(void *)(v272 + 80) = v291;
                                                      *(void *)(v272 + 88) = v292;
                                                      *(void *)(v272 + 96) = v293;
                                                      *(void *)(v272 + 104) = v294;
                                                      *(void *)(v272 + 112) = v295;
                                                      *(unsigned char *)(v272 + 120) = v522;
                                                    }
                                                    unsigned int v45 = v531;
                                                    uint64_t v36 = v537;
                                                    *(unsigned char *)(v272 + 121) = *(unsigned char *)(v273 + 121);
                                                  }
                                                  *(unsigned char *)(v272 + 122) = *(unsigned char *)(v273 + 122);
                                                  *(unsigned char *)(v272 + 123) = *(unsigned char *)(v273 + 123);
                                                  *(unsigned char *)(v272 + 124) = *(unsigned char *)(v273 + 124);
                                                  *(unsigned char *)(v272 + 125) = *(unsigned char *)(v273 + 125);
                                                  *(unsigned char *)(v272 + 126) = *(unsigned char *)(v273 + 126);
                                                  uint64_t v296 = *(void **)((v273 + 134) & 0xFFFFFFFFFFFFFFF8);
                                                  *(void *)((v272 + 134) & 0xFFFFFFFFFFFFFFF8) = v296;
                                                  id v297 = v296;
                                                  if (v35 > 3) {
                                                    goto LABEL_542;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 0;
                                                  }
                                                  else
                                                  {
                                                    if (v203 <= 0xF5)
                                                    {
LABEL_542:
                                                      *((unsigned char *)v44 + v35) = 0;
                                                      goto LABEL_787;
                                                    }
                                                    *(unsigned __int16 *)((char *)v44 + v35) = 0;
                                                  }
                                                  goto LABEL_795;
                                                case 1u:
                                                  unsigned int v179 = v45[v26];
                                                  unsigned int v180 = v179 - 10;
                                                  if (v179 >= 0xA)
                                                  {
                                                    if (v26 <= 3) {
                                                      uint64_t v181 = v26;
                                                    }
                                                    else {
                                                      uint64_t v181 = 4;
                                                    }
                                                    switch(v181)
                                                    {
                                                      case 1:
                                                        int v182 = *v45;
                                                        goto LABEL_490;
                                                      case 2:
                                                        int v182 = *(unsigned __int16 *)v45;
                                                        goto LABEL_490;
                                                      case 3:
                                                        int v182 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                                        goto LABEL_490;
                                                      case 4:
                                                        int v182 = *(_DWORD *)v45;
LABEL_490:
                                                        if (v26 < 4) {
                                                          unsigned int v179 = (v182 | (v180 << (8 * v26))) + 10;
                                                        }
                                                        else {
                                                          unsigned int v179 = v182 + 10;
                                                        }
                                                        break;
                                                      default:
                                                        break;
                                                    }
                                                  }
                                                  switch(v179)
                                                  {
                                                    case 1u:
                                                      id v298 = *(void **)v45;
                                                      *(void *)int v44 = *(void *)v45;
                                                      char v299 = 1;
                                                      goto LABEL_554;
                                                    case 2u:
                                                      uint64_t v300 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v300;
                                                      *((unsigned char *)v44 + v300) = 2;
                                                      break;
                                                    case 3u:
                                                      uint64_t v301 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v301;
                                                      *((unsigned char *)v44 + v301) = 3;
                                                      break;
                                                    case 4u:
                                                      uint64_t v302 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v302;
                                                      *((unsigned char *)v44 + v302) = 4;
                                                      break;
                                                    case 5u:
                                                      uint64_t v303 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v303;
                                                      *((unsigned char *)v44 + v303) = 5;
                                                      break;
                                                    case 6u:
                                                      uint64_t v304 = v26;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                      uint64_t v26 = v304;
                                                      *((unsigned char *)v44 + v304) = 6;
                                                      break;
                                                    case 7u:
                                                      long long v305 = *(_OWORD *)v45;
                                                      *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)(v45 + 9);
                                                      *(_OWORD *)int v44 = v305;
                                                      *((unsigned char *)v44 + v26) = 7;
                                                      break;
                                                    case 8u:
                                                      id v298 = *(void **)v45;
                                                      *(void *)int v44 = *(void *)v45;
                                                      char v299 = 8;
                                                      goto LABEL_554;
                                                    case 9u:
                                                      id v298 = *(void **)v45;
                                                      *(void *)int v44 = *(void *)v45;
                                                      char v299 = 9;
LABEL_554:
                                                      *((unsigned char *)v44 + v26) = v299;
                                                      uint64_t v306 = v26;
                                                      id v307 = v298;
                                                      uint64_t v26 = v306;
                                                      break;
                                                    default:
                                                      *(unsigned char *)int v44 = *v45;
                                                      *((unsigned char *)v44 + v26) = 0;
                                                      break;
                                                  }
                                                  unint64_t v308 = (((unint64_t)v44 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
                                                  unint64_t v309 = (unint64_t)&v45[v26 + 8] & 0xFFFFFFFFFFFFFFF8;
                                                  if (*(void *)(v309 + 8) < 0xFFFFFFFFuLL)
                                                  {
                                                    long long v320 = *(_OWORD *)v309;
                                                    long long v321 = *(_OWORD *)(v309 + 16);
                                                    long long v322 = *(_OWORD *)(v309 + 48);
                                                    *(_OWORD *)(v308 + 32) = *(_OWORD *)(v309 + 32);
                                                    *(_OWORD *)(v308 + 48) = v322;
                                                    *(_OWORD *)unint64_t v308 = v320;
                                                    *(_OWORD *)(v308 + 16) = v321;
                                                    long long v323 = *(_OWORD *)(v309 + 64);
                                                    long long v324 = *(_OWORD *)(v309 + 80);
                                                    long long v325 = *(_OWORD *)(v309 + 96);
                                                    *(_OWORD *)(v308 + 106) = *(_OWORD *)(v309 + 106);
                                                    *(_OWORD *)(v308 + 80) = v324;
                                                    *(_OWORD *)(v308 + 96) = v325;
                                                    *(_OWORD *)(v308 + 64) = v323;
                                                  }
                                                  else
                                                  {
                                                    v532 = v45;
                                                    *(void *)unint64_t v308 = *(void *)v309;
                                                    *(void *)(v308 + 8) = *(void *)(v309 + 8);
                                                    uint64_t v310 = *(void **)(v309 + 16);
                                                    uint64_t v311 = *(void *)(v309 + 24);
                                                    uint64_t v312 = *(void *)(v309 + 32);
                                                    uint64_t v313 = *(void *)(v309 + 40);
                                                    uint64_t v315 = *(void *)(v309 + 48);
                                                    uint64_t v314 = *(void *)(v309 + 56);
                                                    unsigned __int8 v523 = *(unsigned char *)(v309 + 64);
                                                    swift_bridgeObjectRetain();
                                                    sub_100050F84(v310, v311, v312, v313, v315, v314, v523);
                                                    *(void *)(v308 + 16) = v310;
                                                    *(void *)(v308 + 24) = v311;
                                                    *(void *)(v308 + 32) = v312;
                                                    *(void *)(v308 + 40) = v313;
                                                    *(void *)(v308 + 48) = v315;
                                                    *(void *)(v308 + 56) = v314;
                                                    *(unsigned char *)(v308 + 64) = v523;
                                                    *(unsigned char *)(v308 + 65) = *(unsigned char *)(v309 + 65);
                                                    *(unsigned char *)(v308 + 66) = *(unsigned char *)(v309 + 66);
                                                    *(unsigned char *)(v308 + 67) = *(unsigned char *)(v309 + 67);
                                                    *(unsigned char *)(v308 + 68) = *(unsigned char *)(v309 + 68);
                                                    int v316 = *(unsigned __int8 *)(v309 + 120);
                                                    if (v316 == 255)
                                                    {
                                                      long long v317 = *(_OWORD *)(v309 + 72);
                                                      long long v318 = *(_OWORD *)(v309 + 88);
                                                      long long v319 = *(_OWORD *)(v309 + 104);
                                                      *(unsigned char *)(v308 + 120) = *(unsigned char *)(v309 + 120);
                                                      *(_OWORD *)(v308 + 88) = v318;
                                                      *(_OWORD *)(v308 + 104) = v319;
                                                      *(_OWORD *)(v308 + 72) = v317;
                                                    }
                                                    else
                                                    {
                                                      char v524 = v316 & 1;
                                                      uint64_t v326 = *(void **)(v309 + 72);
                                                      uint64_t v327 = *(void *)(v309 + 80);
                                                      uint64_t v328 = *(void *)(v309 + 88);
                                                      uint64_t v329 = *(void *)(v309 + 96);
                                                      uint64_t v330 = *(void *)(v309 + 104);
                                                      uint64_t v331 = *(void *)(v309 + 112);
                                                      sub_10003BED8(v326, v327, v328, v329, v330, v331, v316 & 1);
                                                      *(void *)(v308 + 72) = v326;
                                                      *(void *)(v308 + 80) = v327;
                                                      *(void *)(v308 + 88) = v328;
                                                      *(void *)(v308 + 96) = v329;
                                                      *(void *)(v308 + 104) = v330;
                                                      *(void *)(v308 + 112) = v331;
                                                      *(unsigned char *)(v308 + 120) = v524;
                                                    }
                                                    unsigned int v45 = v532;
                                                    uint64_t v36 = v537;
                                                    *(unsigned char *)(v308 + 121) = *(unsigned char *)(v309 + 121);
                                                  }
                                                  *(unsigned char *)(v308 + 122) = *(unsigned char *)(v309 + 122);
                                                  *(unsigned char *)(v308 + 123) = *(unsigned char *)(v309 + 123);
                                                  *(unsigned char *)(v308 + 124) = *(unsigned char *)(v309 + 124);
                                                  *(unsigned char *)(v308 + 125) = *(unsigned char *)(v309 + 125);
                                                  *(unsigned char *)(v308 + 126) = *(unsigned char *)(v309 + 126);
                                                  uint64_t v332 = *(void **)((v309 + 134) & 0xFFFFFFFFFFFFFFF8);
                                                  *(void *)((v308 + 134) & 0xFFFFFFFFFFFFFFF8) = v332;
                                                  id v333 = v332;
                                                  if (v35 > 3) {
                                                    goto LABEL_564;
                                                  }
                                                  __int16 v257 = 1;
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 1;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 > 0xF5) {
                                                    goto LABEL_794;
                                                  }
LABEL_564:
                                                  char v204 = 1;
                                                  goto LABEL_786;
                                                case 2u:
                                                  uint64_t v183 = *(void **)v45;
                                                  *(void *)int v44 = *(void *)v45;
                                                  id v184 = (char *)(((unint64_t)v44 + v29) & v50);
                                                  unint64_t v185 = (unsigned __int8 *)((unint64_t)&v45[v29] & v50);
                                                  int v186 = v185[v26];
                                                  uint64_t v187 = v26;
                                                  id v188 = v183;
                                                  switch(v186)
                                                  {
                                                    case 0:
                                                      *id v184 = *v185;
                                                      v184[v187] = 0;
                                                      break;
                                                    case 1:
                                                      v462 = *(void **)v185;
                                                      *(void *)id v184 = *(void *)v185;
                                                      char v463 = 1;
                                                      goto LABEL_749;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v184, v185, v519);
                                                      v184[v187] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v184, v185, v519);
                                                      v184[v187] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v184, v185, v519);
                                                      v184[v187] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v184, v185, v519);
                                                      v184[v187] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v184, v185, v519);
                                                      v184[v187] = 6;
                                                      break;
                                                    case 7:
                                                      long long v464 = *(_OWORD *)v185;
                                                      *(_OWORD *)(v184 + 9) = *(_OWORD *)(v185 + 9);
                                                      *(_OWORD *)id v184 = v464;
                                                      v184[v187] = 7;
                                                      break;
                                                    case 8:
                                                      v462 = *(void **)v185;
                                                      *(void *)id v184 = *(void *)v185;
                                                      char v463 = 8;
                                                      goto LABEL_749;
                                                    case 9:
                                                      v462 = *(void **)v185;
                                                      *(void *)id v184 = *(void *)v185;
                                                      char v463 = 9;
LABEL_749:
                                                      v184[v187] = v463;
                                                      id v465 = v462;
                                                      break;
                                                    default:
                                                      memcpy(v184, v185, v27);
                                                      break;
                                                  }
                                                  uint64_t v36 = v537;
                                                  if (v35 > 3) {
                                                    goto LABEL_753;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 2;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_753:
                                                    char v204 = 2;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 2;
                                                  goto LABEL_794;
                                                case 3u:
                                                  uint64_t v189 = *(void **)v45;
                                                  *(void *)int v44 = *(void *)v45;
                                                  uint64_t v190 = (char *)(((unint64_t)v44 + v29) & v50);
                                                  int v191 = (unsigned __int8 *)((unint64_t)&v45[v29] & v50);
                                                  int v192 = v191[v26];
                                                  uint64_t v193 = v26;
                                                  id v194 = v189;
                                                  switch(v192)
                                                  {
                                                    case 0:
                                                      *uint64_t v190 = *v191;
                                                      v190[v193] = 0;
                                                      break;
                                                    case 1:
                                                      v466 = *(void **)v191;
                                                      *(void *)uint64_t v190 = *(void *)v191;
                                                      char v467 = 1;
                                                      goto LABEL_765;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v190, v191, v519);
                                                      v190[v193] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v190, v191, v519);
                                                      v190[v193] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v190, v191, v519);
                                                      v190[v193] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v190, v191, v519);
                                                      v190[v193] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v190, v191, v519);
                                                      v190[v193] = 6;
                                                      break;
                                                    case 7:
                                                      long long v468 = *(_OWORD *)v191;
                                                      *(_OWORD *)(v190 + 9) = *(_OWORD *)(v191 + 9);
                                                      *(_OWORD *)uint64_t v190 = v468;
                                                      v190[v193] = 7;
                                                      break;
                                                    case 8:
                                                      v466 = *(void **)v191;
                                                      *(void *)uint64_t v190 = *(void *)v191;
                                                      char v467 = 8;
                                                      goto LABEL_765;
                                                    case 9:
                                                      v466 = *(void **)v191;
                                                      *(void *)uint64_t v190 = *(void *)v191;
                                                      char v467 = 9;
LABEL_765:
                                                      v190[v193] = v467;
                                                      id v469 = v466;
                                                      break;
                                                    default:
                                                      memcpy(v190, v191, v27);
                                                      break;
                                                  }
                                                  uint64_t v36 = v537;
                                                  if (v35 > 3) {
                                                    goto LABEL_769;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 3;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_769:
                                                    char v204 = 3;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 3;
                                                  goto LABEL_794;
                                                case 4u:
                                                  long long v195 = *(void **)v45;
                                                  *(void *)int v44 = *(void *)v45;
                                                  long long v196 = (char *)(((unint64_t)v44 + v29) & v50);
                                                  long long v197 = (unsigned __int8 *)((unint64_t)&v45[v29] & v50);
                                                  int v198 = v197[v26];
                                                  uint64_t v199 = v26;
                                                  id v200 = v195;
                                                  switch(v198)
                                                  {
                                                    case 0:
                                                      char *v196 = *v197;
                                                      v196[v199] = 0;
                                                      break;
                                                    case 1:
                                                      v470 = *(void **)v197;
                                                      *(void *)long long v196 = *(void *)v197;
                                                      char v471 = 1;
                                                      goto LABEL_781;
                                                    case 2:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v196, v197, v519);
                                                      v196[v199] = 2;
                                                      break;
                                                    case 3:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v196, v197, v519);
                                                      v196[v199] = 3;
                                                      break;
                                                    case 4:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v196, v197, v519);
                                                      v196[v199] = 4;
                                                      break;
                                                    case 5:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v196, v197, v519);
                                                      v196[v199] = 5;
                                                      break;
                                                    case 6:
                                                      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v196, v197, v519);
                                                      v196[v199] = 6;
                                                      break;
                                                    case 7:
                                                      long long v472 = *(_OWORD *)v197;
                                                      *(_OWORD *)(v196 + 9) = *(_OWORD *)(v197 + 9);
                                                      *(_OWORD *)long long v196 = v472;
                                                      v196[v199] = 7;
                                                      break;
                                                    case 8:
                                                      v470 = *(void **)v197;
                                                      *(void *)long long v196 = *(void *)v197;
                                                      char v471 = 8;
                                                      goto LABEL_781;
                                                    case 9:
                                                      v470 = *(void **)v197;
                                                      *(void *)long long v196 = *(void *)v197;
                                                      char v471 = 9;
LABEL_781:
                                                      v196[v199] = v471;
                                                      id v473 = v470;
                                                      break;
                                                    default:
                                                      memcpy(v196, v197, v27);
                                                      break;
                                                  }
                                                  uint64_t v36 = v537;
                                                  if (v35 > 3) {
                                                    goto LABEL_785;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 4;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_785:
                                                    char v204 = 4;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 4;
                                                  goto LABEL_794;
                                                case 5u:
                                                  *(void *)int v44 = *(void *)v45;
                                                  *((unsigned char *)v44 + 8) = v45[8];
                                                  *((unsigned char *)v44 + 9) = v45[9];
                                                  *((unsigned char *)v44 + 10) = v45[10];
                                                  unsigned int v201 = (void *)*((void *)v45 + 2);
                                                  *((void *)v44 + 2) = v201;
                                                  id v202 = v201;
                                                  if (v35 > 3) {
                                                    goto LABEL_348;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 5;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_348:
                                                    char v204 = 5;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 5;
                                                  goto LABEL_794;
                                                case 6u:
                                                  size_t v205 = *(void **)v45;
                                                  *(void *)int v44 = *(void *)v45;
                                                  id v206 = v205;
                                                  if (v35 > 3) {
                                                    goto LABEL_352;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 6;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_352:
                                                    char v204 = 6;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 6;
                                                  goto LABEL_794;
                                                case 7u:
                                                  if (v30 < 0)
                                                  {
                                                    uint64_t v207 = v17 + 8;
                                                    int v209 = (*(uint64_t (**)(unint64_t))(v517 + 48))((unint64_t)&v45[v17 + 8] & v51);
                                                    uint64_t v20 = v17;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v207 = v17 + 8;
                                                    uint64_t v208 = *(void *)v45;
                                                    if (*(void *)v45 >= 0xFFFFFFFFuLL) {
                                                      LODWORD(v208) = -1;
                                                    }
                                                    int v209 = v208 + 1;
                                                  }
                                                  if (v209)
                                                  {
                                                    memcpy(v44, v45, v31);
                                                  }
                                                  else
                                                  {
                                                    *(void *)int v44 = *(void *)v45;
                                                    uint64_t v241 = ((unint64_t)v44 + v20 + 8) & v51;
                                                    unsigned __int8 v242 = *(void (**)(uint64_t, unint64_t, uint64_t))(v517 + 16);
                                                    swift_bridgeObjectRetain();
                                                    v242(v241, (unint64_t)&v45[v207] & v51, v518);
                                                  }
                                                  unint64_t v243 = (((unint64_t)v44 | 7) + v31) & 0xFFFFFFFFFFFFFFF8;
                                                  unint64_t v244 = (((unint64_t)v45 | 7) + v31) & 0xFFFFFFFFFFFFFFF8;
                                                  if (*(void *)(v244 + 8) < 0xFFFFFFFFuLL)
                                                  {
                                                    long long v247 = *(_OWORD *)v244;
                                                    *(void *)(v243 + 16) = *(void *)(v244 + 16);
                                                    *(_OWORD *)unint64_t v243 = v247;
                                                  }
                                                  else
                                                  {
                                                    *(void *)unint64_t v243 = *(void *)v244;
                                                    *(void *)(v243 + 8) = *(void *)(v244 + 8);
                                                    uint64_t v245 = *(void **)(v244 + 16);
                                                    *(void *)(v243 + 16) = v245;
                                                    swift_bridgeObjectRetain();
                                                    id v246 = v245;
                                                  }
                                                  if (v35 > 3) {
                                                    goto LABEL_453;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 7;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_453:
                                                    char v204 = 7;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 7;
                                                  goto LABEL_794;
                                                case 8u:
                                                  if (v32 < 0xFD)
                                                  {
                                                    unsigned int v237 = v45[v25];
                                                    if (v237 < 3) {
                                                      goto LABEL_422;
                                                    }
                                                    unsigned int v210 = v237 - 2;
                                                  }
                                                  else
                                                  {
                                                    unsigned int v210 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v520 + 48))(v45, v32, v519);
                                                  }
                                                  if (v210)
                                                  {
                                                    memcpy(v44, v45, v25 + 1);
                                                    goto LABEL_423;
                                                  }
LABEL_422:
                                                  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
                                                  *((unsigned char *)v44 + v25) = v45[v25];
LABEL_423:
                                                  *(void *)((((unint64_t)v44 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v45 | 7) + v25 + 1) & 0xFFFFFFFFFFFFFFF8);
                                                  if (v35 > 3) {
                                                    goto LABEL_426;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 8;
                                                    goto LABEL_795;
                                                  }
                                                  if (v203 <= 0xF5)
                                                  {
LABEL_426:
                                                    char v204 = 8;
                                                    goto LABEL_786;
                                                  }
                                                  __int16 v257 = 8;
                                                  goto LABEL_794;
                                                case 9u:
                                                  *(unsigned char *)int v44 = *v45;
                                                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 16))(((unint64_t)v44 + v33) & v52, (unint64_t)&v45[v33] & v52, v18);
                                                  if (v35 > 3) {
                                                    goto LABEL_362;
                                                  }
                                                  unsigned int v203 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  if (v203 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v44 + v35) = 9;
                                                  }
                                                  else
                                                  {
                                                    if (v203 <= 0xF5)
                                                    {
LABEL_362:
                                                      char v204 = 9;
LABEL_786:
                                                      *((unsigned char *)v44 + v35) = v204;
LABEL_787:
                                                      if (v35 > 3) {
                                                        goto LABEL_791;
                                                      }
                                                      unsigned int v474 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                      uint64_t v475 = 2;
                                                      if (v474 > 0xFFF5) {
                                                        uint64_t v475 = 4;
                                                      }
                                                      if (v474 <= 0xF5) {
LABEL_791:
                                                      }
                                                        uint64_t v475 = 1;
LABEL_797:
                                                      uint64_t v477 = v475 + v35;
                                                      unint64_t v478 = (unint64_t)v44 + v477;
                                                      unint64_t v479 = (unint64_t)&v45[v477];
                                                      *(unsigned char *)unint64_t v478 = *(unsigned char *)v479;
                                                      v478 &= 0xFFFFFFFFFFFFFFF8;
                                                      v479 &= 0xFFFFFFFFFFFFFFF8;
                                                      *(void *)(v478 + 8) = *(void *)(v479 + 8);
                                                      *(void *)(v478 + 16) = *(void *)(v479 + 16);
                                                      *(void *)((v478 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v479 + 31) & 0xFFFFFFFFFFFFFFF8);
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      if (v35 > 3) {
                                                        goto LABEL_860;
                                                      }
                                                      goto LABEL_857;
                                                    }
                                                    __int16 v257 = 9;
LABEL_794:
                                                    *(unsigned __int16 *)((char *)v44 + v35) = v257;
                                                  }
LABEL_795:
                                                  BOOL v476 = v203 > 0xFFF5;
                                                  uint64_t v475 = 2;
                                                  if (v476) {
                                                    uint64_t v475 = 4;
                                                  }
                                                  goto LABEL_797;
                                                default:
                                                  if (v35 > 3) {
                                                    goto LABEL_331;
                                                  }
                                                  unsigned int v177 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                                  uint64_t v178 = 2;
                                                  if (v177 > 0xFFF5) {
                                                    uint64_t v178 = 4;
                                                  }
                                                  if (v177 <= 0xF5) {
LABEL_331:
                                                  }
                                                    uint64_t v178 = 1;
                                                  memcpy(v44, v45, v178 + v35);
                                                  goto LABEL_787;
                                              }
                                            }
                                          }
                                          else
                                          {
LABEL_303:
                                            unsigned int v169 = v45[v35];
                                            unsigned int v170 = v169 - 10;
                                            if (v169 < 0xA) {
                                              goto LABEL_320;
                                            }
                                          }
LABEL_308:
                                          if (v35 <= 3) {
                                            uint64_t v171 = v35;
                                          }
                                          else {
                                            uint64_t v171 = 4;
                                          }
                                          switch(v171)
                                          {
                                            case 1:
                                              int v172 = *v45;
                                              if (v35 < 4) {
                                                goto LABEL_315;
                                              }
                                              goto LABEL_319;
                                            case 2:
                                              int v172 = *(unsigned __int16 *)v45;
                                              if (v35 < 4) {
                                                goto LABEL_315;
                                              }
                                              goto LABEL_319;
                                            case 3:
                                              int v172 = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                              if (v35 < 4) {
                                                goto LABEL_315;
                                              }
                                              goto LABEL_319;
                                            case 4:
                                              int v172 = *(_DWORD *)v45;
                                              if (v35 < 4) {
LABEL_315:
                                              }
                                                unsigned int v169 = (v172 | (v170 << (8 * v35))) + 10;
                                              else {
LABEL_319:
                                              }
                                                unsigned int v169 = v172 + 10;
                                              break;
                                            default:
                                              goto LABEL_320;
                                          }
                                          goto LABEL_320;
                                        }
                                        int v164 = v166 + 10;
                                        if (v166 > 0xF5)
                                        {
                                          int v212 = *(unsigned __int16 *)&v45[v35];
                                          unsigned int v161 = v212 | 0xFFFF0000;
                                          unsigned int v162 = v212 ^ 0xFFFF;
                                          char v163 = 16;
                                        }
                                        else
                                        {
                                          int v167 = v45[v35];
                                          unsigned int v161 = v167 | 0xFFFFFF00;
                                          unsigned int v162 = v167 ^ 0xFF;
                                          char v163 = 8;
                                        }
                                      }
                                      else
                                      {
                                        int v160 = v45[v35];
                                        unsigned int v161 = v160 | 0xFFFFFF00;
                                        unsigned int v162 = v160 ^ 0xFF;
                                        char v163 = 8;
                                        int v164 = 11;
                                      }
                                      unsigned int v165 = (1 << v163) - v164;
                                      if ((v165 & 0x80000000) == 0)
                                      {
                                        if (v165 <= v162) {
                                          goto LABEL_300;
                                        }
LABEL_299:
                                        if (!v161) {
                                          goto LABEL_300;
                                        }
LABEL_435:
                                        if (v35 <= 3)
                                        {
LABEL_517:
                                          unsigned int v260 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                                          uint64_t v261 = 2;
                                          if (v260 > 0xFFF5) {
                                            uint64_t v261 = 4;
                                          }
                                          if (v260 > 0xF5)
                                          {
LABEL_521:
                                            memcpy(v44, v45, ((((((v261 + v35) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                                            if (v35 <= 3) {
                                              goto LABEL_862;
                                            }
LABEL_865:
                                            uint64_t v503 = 1;
                                            goto LABEL_866;
                                          }
                                        }
LABEL_520:
                                        uint64_t v261 = 1;
                                        goto LABEL_521;
                                      }
                                      goto LABEL_298;
                                    }
                                  }
                                  int v124 = v45[v122];
                                  if (!v45[v122]) {
                                    goto LABEL_288;
                                  }
LABEL_221:
                                  int v126 = (v124 - 1) << v123;
                                  if (v122 > 3) {
                                    int v126 = 0;
                                  }
                                  if (v122)
                                  {
                                    if (v122 > 3) {
                                      LODWORD(v122) = 4;
                                    }
                                    switch((int)v122)
                                    {
                                      case 2:
                                        LODWORD(v122) = *(unsigned __int16 *)v45;
                                        break;
                                      case 3:
                                        LODWORD(v122) = *(unsigned __int16 *)v45 | (v45[2] << 16);
                                        break;
                                      case 4:
                                        LODWORD(v122) = *(_DWORD *)v45;
                                        break;
                                      default:
                                        LODWORD(v122) = *v45;
                                        break;
                                    }
                                  }
                                  if (v118 + (v122 | v126) == -1) {
                                    goto LABEL_300;
                                  }
                                  goto LABEL_435;
                                }
LABEL_208:
                                uint64_t v120 = 1;
                                goto LABEL_209;
                              }
LABEL_204:
                              unsigned int v118 = 0x7FFFFFFF;
                              if (v35 > 3) {
                                goto LABEL_208;
                              }
                              goto LABEL_205;
                            }
                          }
                          else
                          {
                            int v112 = 11;
                          }
                          char v117 = 8;
                          goto LABEL_201;
                        }
LABEL_189:
                        if (v35 > 3) {
                          goto LABEL_193;
                        }
                        unsigned int v113 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                        uint64_t v114 = 2;
                        if (v113 > 0xFFF5) {
                          uint64_t v114 = 4;
                        }
                        if (v113 <= 0xF5) {
LABEL_193:
                        }
                          uint64_t v114 = 1;
                        unint64_t v115 = *(void *)((((unint64_t)&v45[v35 + v114] & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
                        if (v115 >= 0xFFFFFFFF) {
                          LODWORD(v115) = -1;
                        }
                        if (v115 == -1) {
                          goto LABEL_300;
                        }
                        goto LABEL_435;
                      }
LABEL_183:
                      char v110 = 8;
                      goto LABEL_184;
                    }
                    int v102 = v103 + 10;
                    if (v103 > 0xF5)
                    {
                      char v104 = 16;
LABEL_173:
                      unsigned int v105 = (1 << v104) - v102;
                      unsigned int v106 = 0x7FFFFFFF;
                      if (v105 <= 0x7FFFFFFF) {
                        int v107 = 0x7FFFFFFF;
                      }
                      else {
                        int v107 = v105;
                      }
                      if ((v105 & 0x80000000) == 0) {
                        unsigned int v106 = v107;
                      }
                      if (v35 > 3) {
                        goto LABEL_179;
                      }
                      goto LABEL_181;
                    }
                  }
                  else
                  {
                    int v102 = 11;
                  }
                  char v104 = 8;
                  goto LABEL_173;
                }
                goto LABEL_76;
              }
              int v65 = *(unsigned __int16 *)((char *)v44 + v63);
              if (!*(unsigned __int16 *)((char *)v44 + v63)) {
                goto LABEL_91;
              }
            }
LABEL_83:
            int v67 = (v65 - 1) << v64;
            if (v63 > 3) {
              int v67 = 0;
            }
            if (v63)
            {
              if (v63 > 3) {
                LODWORD(v63) = 4;
              }
              switch((int)v63)
              {
                case 2:
                  LODWORD(v63) = *v44;
                  break;
                case 3:
                  LODWORD(v63) = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                  break;
                case 4:
                  LODWORD(v63) = *(_DWORD *)v44;
                  break;
                default:
                  LODWORD(v63) = *(unsigned __int8 *)v44;
                  break;
              }
            }
            if (v55 + (v63 | v67) != -1) {
              goto LABEL_168;
            }
            goto LABEL_103;
          }
LABEL_73:
          uint64_t v61 = 1;
          goto LABEL_74;
        }
LABEL_69:
        unsigned int v55 = 0x7FFFFFFF;
        if (v35 > 3) {
          goto LABEL_73;
        }
        goto LABEL_70;
      }
    }
    else
    {
      int v53 = 11;
    }
    char v54 = 8;
    goto LABEL_54;
  }
  if (v35 > 3) {
    goto LABEL_61;
  }
  unsigned int v56 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  uint64_t v57 = 2;
  if (v56 > 0xFFF5) {
    uint64_t v57 = 4;
  }
  if (v56 <= 0xF5) {
LABEL_61:
  }
    uint64_t v57 = 1;
  unint64_t v58 = *(void *)(((((unint64_t)v44 + v35 + v57) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v58 >= 0xFFFFFFFF) {
    LODWORD(v58) = -1;
  }
  if (v58 != -1) {
    goto LABEL_168;
  }
LABEL_103:
  if (v35 > 3)
  {
    int v76 = 11;
    goto LABEL_107;
  }
  unsigned int v77 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  if (v77 <= 0xFFF5)
  {
    int v76 = v77 + 10;
    if (v77 > 0xF5)
    {
      char v78 = 16;
LABEL_108:
      unsigned int v79 = (1 << v78) - v76;
      unsigned int v80 = 0x7FFFFFFF;
      if (v79 <= 0x7FFFFFFF) {
        int v81 = 0x7FFFFFFF;
      }
      else {
        int v81 = v79;
      }
      if ((v79 & 0x80000000) == 0) {
        unsigned int v80 = v81;
      }
      if (v35 > 3) {
        goto LABEL_114;
      }
      goto LABEL_116;
    }
LABEL_107:
    char v78 = 8;
    goto LABEL_108;
  }
  unsigned int v80 = 0x7FFFFFFF;
  if (v35 > 3)
  {
LABEL_114:
    int v82 = 11;
LABEL_118:
    char v84 = 8;
    goto LABEL_119;
  }
LABEL_116:
  unsigned int v83 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  if (v83 > 0xFFF5) {
    goto LABEL_123;
  }
  int v82 = v83 + 10;
  if (v83 <= 0xF5) {
    goto LABEL_118;
  }
  char v84 = 16;
LABEL_119:
  int v85 = (1 << v84) - v82;
  if ((v85 & 0x80000000) == 0)
  {
    if (v85 == v80) {
      goto LABEL_121;
    }
    goto LABEL_124;
  }
LABEL_123:
  if (v80 == 0x7FFFFFFF)
  {
LABEL_121:
    if (v35 <= 3)
    {
      unsigned int v90 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v90 > 0xFFF5) {
        goto LABEL_139;
      }
      int v86 = v90 + 10;
      if (v90 > 0xF5)
      {
        char v91 = 16;
LABEL_136:
        unsigned int v92 = (1 << v91) - v86;
        if ((v92 & 0x80000000) == 0)
        {
          if (v35 > 3) {
            goto LABEL_143;
          }
LABEL_140:
          unsigned int v93 = ((1 << (8 * v35)) + 1) >> (8 * v35);
          uint64_t v94 = 2;
          if (v93 > 0xFFF5) {
            uint64_t v94 = 4;
          }
          if (v93 > 0xF5)
          {
LABEL_144:
            unsigned int v95 = v80 - v92;
            if (v80 <= v92) {
              goto LABEL_229;
            }
            uint64_t v96 = v94 + v35;
            char v97 = 8 * (v94 + v35);
            if (v96 > 3)
            {
LABEL_146:
              int v98 = v45[v96];
              if (!v45[v96]) {
                goto LABEL_229;
              }
              goto LABEL_156;
            }
            unsigned int v99 = ((v95 + ~(-1 << v97)) >> v97) + 1;
            if (HIWORD(v99))
            {
              int v98 = *(_DWORD *)&v45[v96];
              if (!v98) {
                goto LABEL_229;
              }
            }
            else
            {
              if (v99 <= 0xFF)
              {
                if (v99 < 2)
                {
LABEL_229:
                  if (!v92) {
                    goto LABEL_241;
                  }
                  if (v35 <= 3)
                  {
                    unsigned int v133 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                    if (v133 > 0xFFF5)
                    {
                      unsigned int v128 = *(_DWORD *)&v45[v35];
                      unsigned int v129 = ~v128;
                      goto LABEL_239;
                    }
                    int v131 = v133 + 10;
                    if (v133 > 0xF5)
                    {
                      int v211 = *(unsigned __int16 *)&v45[v35];
                      unsigned int v128 = v211 | 0xFFFF0000;
                      unsigned int v129 = v211 ^ 0xFFFF;
                      char v130 = 16;
                    }
                    else
                    {
                      int v134 = v45[v35];
                      unsigned int v128 = v134 | 0xFFFFFF00;
                      unsigned int v129 = v134 ^ 0xFF;
                      char v130 = 8;
                    }
                  }
                  else
                  {
                    int v127 = v45[v35];
                    unsigned int v128 = v127 | 0xFFFFFF00;
                    unsigned int v129 = v127 ^ 0xFF;
                    char v130 = 8;
                    int v131 = 11;
                  }
                  unsigned int v132 = (1 << v130) - v131;
                  if ((v132 & 0x80000000) == 0)
                  {
                    if (v132 <= v129) {
                      goto LABEL_241;
                    }
                    goto LABEL_240;
                  }
LABEL_239:
                  if (v129 >= 0x7FFFFFFF) {
                    goto LABEL_241;
                  }
LABEL_240:
                  if (!v128) {
                    goto LABEL_241;
                  }
LABEL_369:
                  if (v35 <= 3)
                  {
                    unsigned int v213 = ((1 << (8 * v35)) + 1) >> (8 * v35);
                    if (v213 > 0xFFF5)
                    {
                      unsigned int v214 = *(_DWORD *)((char *)v44 + v35);
                      unsigned int v215 = v214 - 10;
                      if (v214 < 0xA) {
                        goto LABEL_389;
                      }
LABEL_377:
                      if (v35 <= 3) {
                        uint64_t v216 = v35;
                      }
                      else {
                        uint64_t v216 = 4;
                      }
                      switch(v216)
                      {
                        case 1:
                          int v217 = *(unsigned __int8 *)v44;
                          if (v35 >= 4) {
                            goto LABEL_388;
                          }
                          goto LABEL_384;
                        case 2:
                          int v217 = *v44;
                          if (v35 < 4) {
                            goto LABEL_384;
                          }
                          goto LABEL_388;
                        case 3:
                          int v217 = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                          if (v35 < 4) {
                            goto LABEL_384;
                          }
                          goto LABEL_388;
                        case 4:
                          int v217 = *(_DWORD *)v44;
                          if (v35 < 4) {
LABEL_384:
                          }
                            unsigned int v214 = (v217 | (v215 << (8 * v35))) + 10;
                          else {
LABEL_388:
                          }
                            unsigned int v214 = v217 + 10;
                          break;
                        default:
                          break;
                      }
LABEL_389:
                      switch(v214)
                      {
                        case 0u:
                          unsigned int v218 = *((unsigned __int8 *)v44 + v26);
                          unsigned int v219 = v218 - 10;
                          if (v218 >= 0xA)
                          {
                            if (v26 <= 3) {
                              uint64_t v220 = v26;
                            }
                            else {
                              uint64_t v220 = 4;
                            }
                            switch(v220)
                            {
                              case 1:
                                int v221 = *(unsigned __int8 *)v44;
                                goto LABEL_498;
                              case 2:
                                int v221 = *v44;
                                goto LABEL_498;
                              case 3:
                                int v221 = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                                goto LABEL_498;
                              case 4:
                                int v221 = *(_DWORD *)v44;
LABEL_498:
                                if (v26 < 4) {
                                  unsigned int v218 = (v221 | (v219 << (8 * v26))) + 10;
                                }
                                else {
                                  unsigned int v218 = v221 + 10;
                                }
                                break;
                              default:
                                break;
                            }
                          }
                          switch(v218)
                          {
                            case 1u:
                            case 8u:
                            case 9u:
                              goto LABEL_510;
                            case 2u:
                            case 3u:
                            case 4u:
                            case 5u:
                            case 6u:
                              goto LABEL_509;
                            default:
                              goto LABEL_511;
                          }
                          goto LABEL_511;
                        case 1u:
                          unsigned int v222 = *((unsigned __int8 *)v44 + v26);
                          unsigned int v223 = v222 - 10;
                          if (v222 >= 0xA)
                          {
                            if (v26 <= 3) {
                              uint64_t v224 = v26;
                            }
                            else {
                              uint64_t v224 = 4;
                            }
                            switch(v224)
                            {
                              case 1:
                                int v225 = *(unsigned __int8 *)v44;
                                goto LABEL_505;
                              case 2:
                                int v225 = *v44;
                                goto LABEL_505;
                              case 3:
                                int v225 = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
                                goto LABEL_505;
                              case 4:
                                int v225 = *(_DWORD *)v44;
LABEL_505:
                                if (v26 < 4) {
                                  unsigned int v222 = (v225 | (v223 << (8 * v26))) + 10;
                                }
                                else {
                                  unsigned int v222 = v225 + 10;
                                }
                                break;
                              default:
                                break;
                            }
                          }
                          switch(v222)
                          {
                            case 1u:
                            case 8u:
                            case 9u:
LABEL_510:

                              break;
                            case 2u:
                            case 3u:
                            case 4u:
                            case 5u:
                            case 6u:
LABEL_509:
                              (*(void (**)(unsigned __int16 *, uint64_t, uint64_t))(v520 + 8))(v44, v519, v17);
                              break;
                            default:
                              break;
                          }
LABEL_511:
                          unint64_t v258 = (((unint64_t)v44 | 7) + v27) & 0xFFFFFFFFFFFFFFF8;
                          if (*(void *)(v258 + 8) >= 0xFFFFFFFFuLL)
                          {
                            swift_bridgeObjectRelease();
                            sub_1000510EC(*(void **)(v258 + 16), *(void *)(v258 + 24), *(void *)(v258 + 32), *(void *)(v258 + 40), *(void *)(v258 + 48), *(void *)(v258 + 56), *(unsigned char *)(v258 + 64));
                            int v259 = *(unsigned __int8 *)(v258 + 120);
                            if (v259 != 255) {
                              sub_10003B9C0(*(void **)(v258 + 72), *(void *)(v258 + 80), *(void *)(v258 + 88), *(void *)(v258 + 96), *(void *)(v258 + 104), *(void *)(v258 + 112), v259 & 1);
                            }
                          }
                          uint64_t v233 = *(void **)((v258 + 134) & 0xFFFFFFFFFFFFFFF8);
                          goto LABEL_515;
                        case 2u:
                          uint64_t v226 = v26;
                          uint64_t v227 = v29;

                          unsigned int v228 = (void **)(((unint64_t)v44 + v227) & ~v19);
                          switch(*((unsigned char *)v228 + v226))
                          {
                            case 1:
                            case 8:
                            case 9:
                              goto LABEL_437;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                              goto LABEL_405;
                            default:
                              goto LABEL_516;
                          }
                          goto LABEL_516;
                        case 3u:
                          uint64_t v229 = v26;
                          uint64_t v230 = v29;

                          unsigned int v228 = (void **)(((unint64_t)v44 + v230) & ~v19);
                          switch(*((unsigned char *)v228 + v229))
                          {
                            case 1:
                            case 8:
                            case 9:
                              goto LABEL_437;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                              goto LABEL_405;
                            default:
                              goto LABEL_516;
                          }
                          goto LABEL_516;
                        case 4u:
                          uint64_t v231 = v26;
                          uint64_t v232 = v29;

                          unsigned int v228 = (void **)(((unint64_t)v44 + v232) & ~v19);
                          switch(*((unsigned char *)v228 + v231))
                          {
                            case 1:
                            case 8:
                            case 9:
LABEL_437:
                              uint64_t v233 = *v228;
                              goto LABEL_515;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
LABEL_405:
                              (*(void (**)(void **, uint64_t))(v520 + 8))(v228, v519);
                              break;
                            default:
                              goto LABEL_516;
                          }
                          goto LABEL_516;
                        case 5u:
                          uint64_t v233 = (void *)*((void *)v44 + 2);
                          goto LABEL_515;
                        case 6u:
                          uint64_t v233 = *(void **)v44;
                          goto LABEL_515;
                        case 7u:
                          if (v30 < 0)
                          {
                            int v235 = (*(uint64_t (**)(unint64_t))(v517 + 48))(((unint64_t)v44
                                                                                            + v17
                                                                                            + 8) & v51);
                            uint64_t v20 = v17;
                          }
                          else
                          {
                            uint64_t v234 = *(void *)v44;
                            if (*(void *)v44 >= 0xFFFFFFFFuLL) {
                              LODWORD(v234) = -1;
                            }
                            int v235 = v234 + 1;
                          }
                          if (!v235)
                          {
                            uint64_t v239 = v20;
                            swift_bridgeObjectRelease();
                            (*(void (**)(unint64_t, uint64_t))(v517 + 8))(((unint64_t)v44 + v239 + 8) & v51, v518);
                          }
                          unint64_t v240 = (((unint64_t)v44 | 7) + v31) & 0xFFFFFFFFFFFFFFF8;
                          if (*(void *)(v240 + 8) < 0xFFFFFFFFuLL) {
                            goto LABEL_516;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v233 = *(void **)(v240 + 16);
LABEL_515:

                          goto LABEL_516;
                        case 8u:
                          if (v32 < 0xFD)
                          {
                            unsigned int v238 = *((unsigned __int8 *)v44 + v25);
                            if (v238 < 3) {
                              goto LABEL_430;
                            }
                            unsigned int v236 = v238 - 2;
                          }
                          else
                          {
                            unsigned int v236 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v520 + 48))(v44, v32, v519);
                          }
                          if (v236) {
                            goto LABEL_516;
                          }
LABEL_430:
                          (*(void (**)(unsigned __int16 *, uint64_t))(v520 + 8))(v44, v519);
LABEL_516:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if (v35 <= 3) {
                            goto LABEL_517;
                          }
                          goto LABEL_520;
                        case 9u:
                          (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 8))(((unint64_t)v44 + v33) & v52, v18, v17);
                          goto LABEL_516;
                        default:
                          goto LABEL_516;
                      }
                    }
                    if (v213 > 0xF5)
                    {
                      unsigned int v214 = *(unsigned __int16 *)((char *)v44 + v35);
                      unsigned int v215 = v214 - 10;
                      if (v214 < 0xA) {
                        goto LABEL_389;
                      }
                      goto LABEL_377;
                    }
                  }
                  unsigned int v214 = *((unsigned __int8 *)v44 + v35);
                  unsigned int v215 = v214 - 10;
                  if (v214 < 0xA) {
                    goto LABEL_389;
                  }
                  goto LABEL_377;
                }
                goto LABEL_146;
              }
              int v98 = *(unsigned __int16 *)&v45[v96];
              if (!*(_WORD *)&v45[v96]) {
                goto LABEL_229;
              }
            }
LABEL_156:
            int v100 = (v98 - 1) << v97;
            if (v96 > 3) {
              int v100 = 0;
            }
            if (v96)
            {
              if (v96 > 3) {
                LODWORD(v96) = 4;
              }
              switch((int)v96)
              {
                case 2:
                  LODWORD(v96) = *(unsigned __int16 *)v45;
                  break;
                case 3:
                  LODWORD(v96) = *(unsigned __int16 *)v45 | (v45[2] << 16);
                  break;
                case 4:
                  LODWORD(v96) = *(_DWORD *)v45;
                  break;
                default:
                  LODWORD(v96) = *v45;
                  break;
              }
            }
            if (v92 + (v96 | v100) != -1) {
              goto LABEL_369;
            }
            goto LABEL_241;
          }
LABEL_143:
          uint64_t v94 = 1;
          goto LABEL_144;
        }
LABEL_139:
        unsigned int v92 = 0x7FFFFFFF;
        if (v35 > 3) {
          goto LABEL_143;
        }
        goto LABEL_140;
      }
    }
    else
    {
      int v86 = 11;
    }
    char v91 = 8;
    goto LABEL_136;
  }
LABEL_124:
  if (v35 > 3) {
    goto LABEL_128;
  }
  unsigned int v87 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  uint64_t v88 = 2;
  if (v87 > 0xFFF5) {
    uint64_t v88 = 4;
  }
  if (v87 <= 0xF5) {
LABEL_128:
  }
    uint64_t v88 = 1;
  unint64_t v89 = *(void *)((((unint64_t)&v45[v35 + v88] & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v89 >= 0xFFFFFFFF) {
    LODWORD(v89) = -1;
  }
  if (v89 != -1) {
    goto LABEL_369;
  }
LABEL_241:
  if (v44 == (unsigned __int16 *)v45) {
    goto LABEL_844;
  }
  if (v35 > 3) {
    goto LABEL_243;
  }
  unsigned int v136 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  if (v136 > 0xFFF5)
  {
    unsigned int v135 = *(_DWORD *)((char *)v44 + v35);
  }
  else
  {
    if (v136 <= 0xF5)
    {
LABEL_243:
      unsigned int v135 = *((unsigned __int8 *)v44 + v35);
      goto LABEL_248;
    }
    unsigned int v135 = *(unsigned __int16 *)((char *)v44 + v35);
  }
LABEL_248:
  unsigned int v137 = v135 - 10;
  uint64_t v516 = v17 + 8;
  uint64_t v530 = ~v17;
  size_t v515 = v25 + 1;
  if (v135 >= 0xA)
  {
    if (v35 <= 3) {
      uint64_t v138 = v35;
    }
    else {
      uint64_t v138 = 4;
    }
    switch(v138)
    {
      case 1:
        int v139 = *(unsigned __int8 *)v44;
        goto LABEL_257;
      case 2:
        int v139 = *v44;
        goto LABEL_257;
      case 3:
        int v139 = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
        goto LABEL_257;
      case 4:
        int v139 = *(_DWORD *)v44;
LABEL_257:
        if (v35 < 4) {
          unsigned int v135 = (v139 | (v137 << (8 * v35))) + 10;
        }
        else {
          unsigned int v135 = v139 + 10;
        }
        break;
      default:
        break;
    }
  }
  size_t v507 = v31;
  size_t __n = v26 + 1;
  uint64_t v513 = v18;
  uint64_t v514 = v29;
  uint64_t v512 = *(void *)(v18 - 8);
  int v140 = v30;
  unsigned int v511 = v32;
  uint64_t v509 = v52;
  uint64_t v510 = ~v19;
  switch(v135)
  {
    case 0u:
      unsigned int v141 = *((unsigned __int8 *)v44 + v26);
      unsigned int v142 = v141 - 10;
      if (v141 < 0xA)
      {
        size_t v144 = v26 + 1;
      }
      else
      {
        if (v26 <= 3) {
          uint64_t v143 = v26;
        }
        else {
          uint64_t v143 = 4;
        }
        size_t v144 = v26 + 1;
        switch(v143)
        {
          case 1:
            int v145 = *(unsigned __int8 *)v44;
            goto LABEL_569;
          case 2:
            int v145 = *v44;
            goto LABEL_569;
          case 3:
            int v145 = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
            goto LABEL_569;
          case 4:
            int v145 = *(_DWORD *)v44;
LABEL_569:
            if (v26 < 4) {
              unsigned int v141 = (v145 | (v142 << (8 * v26))) + 10;
            }
            else {
              unsigned int v141 = v145 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v506 = v17;
      uint64_t v334 = v26;
      switch(v141)
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_581;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_580;
        default:
          goto LABEL_583;
      }
      goto LABEL_583;
    case 1u:
      unsigned int v146 = *((unsigned __int8 *)v44 + v26);
      unsigned int v147 = v146 - 10;
      if (v146 < 0xA)
      {
        size_t v144 = v26 + 1;
      }
      else
      {
        if (v26 <= 3) {
          uint64_t v148 = v26;
        }
        else {
          uint64_t v148 = 4;
        }
        size_t v144 = v26 + 1;
        switch(v148)
        {
          case 1:
            int v149 = *(unsigned __int8 *)v44;
            goto LABEL_576;
          case 2:
            int v149 = *v44;
            goto LABEL_576;
          case 3:
            int v149 = *v44 | (*((unsigned __int8 *)v44 + 2) << 16);
            goto LABEL_576;
          case 4:
            int v149 = *(_DWORD *)v44;
LABEL_576:
            if (v26 < 4) {
              unsigned int v146 = (v149 | (v147 << (8 * v26))) + 10;
            }
            else {
              unsigned int v146 = v149 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v506 = v17;
      uint64_t v334 = v26;
      switch(v146)
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_581:

          goto LABEL_582;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_580:
          (*(void (**)(unsigned __int16 *, uint64_t, uint64_t))(v520 + 8))(v44, v519, v17);
LABEL_582:
          size_t v144 = __n;
          break;
        default:
          break;
      }
LABEL_583:
      unint64_t v335 = (((unint64_t)v44 | 7) + v144) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v335 + 8) >= 0xFFFFFFFFuLL)
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v335 + 16), *(void *)(v335 + 24), *(void *)(v335 + 32), *(void *)(v335 + 40), *(void *)(v335 + 48), *(void *)(v335 + 56), *(unsigned char *)(v335 + 64));
        int v336 = *(unsigned __int8 *)(v335 + 120);
        if (v336 != 255) {
          sub_10003B9C0(*(void **)(v335 + 72), *(void *)(v335 + 80), *(void *)(v335 + 88), *(void *)(v335 + 96), *(void *)(v335 + 104), *(void *)(v335 + 112), v336 & 1);
        }
      }

      uint64_t v26 = v334;
      uint64_t v20 = v506;
      uint64_t v21 = v513;
      uint64_t v29 = v514;
      uint64_t v22 = v512;
      int v30 = v140;
      uint64_t v32 = v511;
      uint64_t v52 = v509;
      uint64_t v50 = ~v19;
      goto LABEL_587;
    case 2u:
      uint64_t v150 = v26;
      uint64_t v151 = v20;

      uint64_t v52 = v509;
      uint64_t v50 = ~v19;
      uint64_t v32 = v511;
      int v30 = v140;
      uint64_t v22 = v512;
      uint64_t v21 = v513;
      uint64_t v29 = v514;
      uint64_t v20 = v151;
      uint64_t v26 = v150;
      uint64_t v152 = (id *)(((unint64_t)v44 + v514) & v510);
      switch(*((unsigned char *)v152 + v150))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_463;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_276;
        default:
          goto LABEL_587;
      }
      goto LABEL_587;
    case 3u:
      uint64_t v150 = v26;
      uint64_t v151 = v20;

      uint64_t v52 = v509;
      uint64_t v50 = ~v19;
      uint64_t v32 = v511;
      int v30 = v140;
      uint64_t v22 = v512;
      uint64_t v21 = v513;
      uint64_t v29 = v514;
      uint64_t v20 = v151;
      uint64_t v26 = v150;
      uint64_t v152 = (id *)(((unint64_t)v44 + v514) & v510);
      switch(*((unsigned char *)v152 + v150))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_463;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_276;
        default:
          goto LABEL_587;
      }
      goto LABEL_587;
    case 4u:
      uint64_t v150 = v26;
      uint64_t v151 = v20;

      uint64_t v52 = v509;
      uint64_t v50 = ~v19;
      uint64_t v32 = v511;
      int v30 = v140;
      uint64_t v22 = v512;
      uint64_t v21 = v513;
      uint64_t v29 = v514;
      uint64_t v20 = v151;
      uint64_t v26 = v150;
      uint64_t v152 = (id *)(((unint64_t)v44 + v514) & v510);
      switch(*((unsigned char *)v152 + v150))
      {
        case 1:
        case 8:
        case 9:
LABEL_463:

          goto LABEL_462;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_276:
          uint64_t v153 = *(void (**)(void))(v520 + 8);
          goto LABEL_461;
        default:
          goto LABEL_587;
      }
      goto LABEL_587;
    case 5u:
      long long v154 = (void *)*((void *)v44 + 2);
      goto LABEL_284;
    case 6u:
      long long v154 = *(void **)v44;
LABEL_284:
      uint64_t v150 = v26;
      uint64_t v151 = v20;

      goto LABEL_462;
    case 7u:
      if (v30 < 0)
      {
        uint64_t v249 = ((unint64_t)v44 + v17 + 8) & v530;
        uint64_t v250 = v26;
        uint64_t v251 = v20;
        int v156 = (*(uint64_t (**)(uint64_t))(v517 + 48))(v249);
        uint64_t v52 = v509;
        uint64_t v50 = ~v19;
        uint64_t v32 = v511;
        int v30 = v140;
        uint64_t v22 = v512;
        uint64_t v21 = v513;
        uint64_t v29 = v514;
        uint64_t v20 = v251;
        uint64_t v26 = v250;
      }
      else
      {
        uint64_t v155 = *(void *)v44;
        if (*(void *)v44 >= 0xFFFFFFFFuLL) {
          LODWORD(v155) = -1;
        }
        int v156 = v155 + 1;
      }
      if (!v156)
      {
        uint64_t v252 = v26;
        uint64_t v253 = v20;
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v517 + 8))(((unint64_t)v44 + v253 + 8) & v530, v518);
        uint64_t v52 = v509;
        uint64_t v50 = ~v19;
        uint64_t v32 = v511;
        int v30 = v140;
        uint64_t v22 = v512;
        uint64_t v21 = v513;
        uint64_t v29 = v514;
        uint64_t v20 = v253;
        uint64_t v26 = v252;
      }
      unint64_t v254 = (((unint64_t)v44 | 7) + v31) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v254 + 8) >= 0xFFFFFFFFuLL)
      {
        uint64_t v255 = v26;
        uint64_t v256 = v20;
        swift_bridgeObjectRelease();

        uint64_t v52 = v509;
        uint64_t v50 = ~v19;
        uint64_t v32 = v511;
        int v30 = v140;
        uint64_t v22 = v512;
        uint64_t v21 = v513;
        uint64_t v29 = v514;
        uint64_t v20 = v256;
        uint64_t v36 = v537;
        uint64_t v26 = v255;
      }
      goto LABEL_587;
    case 8u:
      if (v32 < 0xFD)
      {
        unsigned int v248 = *((unsigned __int8 *)v44 + v25);
        if (v248 < 3) {
          goto LABEL_459;
        }
        unsigned int v159 = v248 - 2;
      }
      else
      {
        uint64_t v157 = v26;
        uint64_t v158 = v20;
        unsigned int v159 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v520 + 48))(v44, v32, v519);
        uint64_t v52 = v509;
        uint64_t v50 = ~v19;
        uint64_t v32 = v511;
        int v30 = v140;
        uint64_t v22 = v512;
        uint64_t v21 = v513;
        uint64_t v29 = v514;
        uint64_t v20 = v158;
        uint64_t v26 = v157;
      }
      if (v159) {
        goto LABEL_587;
      }
LABEL_459:
      uint64_t v153 = *(void (**)(void))(v520 + 8);
      uint64_t v150 = v26;
LABEL_460:
      uint64_t v151 = v20;
LABEL_461:
      v153();
LABEL_462:
      uint64_t v52 = v509;
      uint64_t v50 = ~v19;
      uint64_t v32 = v511;
      int v30 = v140;
      uint64_t v22 = v512;
      uint64_t v21 = v513;
      uint64_t v29 = v514;
      uint64_t v20 = v151;
      uint64_t v26 = v150;
LABEL_587:
      if (v35 > 3) {
        goto LABEL_588;
      }
      unsigned int v338 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v338 > 0xFFF5)
      {
        unsigned int v337 = *(_DWORD *)&v45[v35];
      }
      else if (v338 <= 0xF5)
      {
LABEL_588:
        unsigned int v337 = v45[v35];
      }
      else
      {
        unsigned int v337 = *(unsigned __int16 *)&v45[v35];
      }
      unsigned int v339 = v337 - 10;
      if (v337 >= 0xA)
      {
        if (v35 <= 3) {
          uint64_t v340 = v35;
        }
        else {
          uint64_t v340 = 4;
        }
        switch(v340)
        {
          case 1:
            int v341 = *v45;
            goto LABEL_602;
          case 2:
            int v341 = *(unsigned __int16 *)v45;
            goto LABEL_602;
          case 3:
            int v341 = *(unsigned __int16 *)v45 | (v45[2] << 16);
            goto LABEL_602;
          case 4:
            int v341 = *(_DWORD *)v45;
LABEL_602:
            if (v35 < 4) {
              unsigned int v337 = (v341 | (v339 << (8 * v35))) + 10;
            }
            else {
              unsigned int v337 = v341 + 10;
            }
            break;
          default:
            goto LABEL_605;
        }
      }
      break;
    case 9u:
      uint64_t v153 = *(void (**)(void))(v22 + 8);
      uint64_t v150 = v26;
      goto LABEL_460;
    default:
      goto LABEL_587;
  }
LABEL_605:
  switch(v337)
  {
    case 0u:
      unsigned int v342 = v45[v26];
      unsigned int v343 = v342 - 10;
      if (v342 >= 0xA)
      {
        if (v26 <= 3) {
          uint64_t v344 = v26;
        }
        else {
          uint64_t v344 = 4;
        }
        switch(v344)
        {
          case 1:
            int v345 = *v45;
            goto LABEL_684;
          case 2:
            int v345 = *(unsigned __int16 *)v45;
            goto LABEL_684;
          case 3:
            int v345 = *(unsigned __int16 *)v45 | (v45[2] << 16);
            goto LABEL_684;
          case 4:
            int v345 = *(_DWORD *)v45;
LABEL_684:
            if (v26 < 4) {
              unsigned int v342 = (v345 | (v343 << (8 * v26))) + 10;
            }
            else {
              unsigned int v342 = v345 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v342)
      {
        case 1u:
          long long v394 = *(void **)v45;
          *(void *)int v44 = *(void *)v45;
          char v395 = 1;
          goto LABEL_713;
        case 2u:
          uint64_t v396 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v396;
          *((unsigned char *)v44 + v396) = 2;
          break;
        case 3u:
          uint64_t v397 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v397;
          *((unsigned char *)v44 + v397) = 3;
          break;
        case 4u:
          uint64_t v398 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v398;
          *((unsigned char *)v44 + v398) = 4;
          break;
        case 5u:
          uint64_t v399 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v399;
          *((unsigned char *)v44 + v399) = 5;
          break;
        case 6u:
          uint64_t v408 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v408;
          *((unsigned char *)v44 + v408) = 6;
          break;
        case 7u:
          long long v400 = *(_OWORD *)v45;
          *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)(v45 + 9);
          *(_OWORD *)int v44 = v400;
          *((unsigned char *)v44 + v26) = 7;
          break;
        case 8u:
          long long v394 = *(void **)v45;
          *(void *)int v44 = *(void *)v45;
          char v395 = 8;
          goto LABEL_713;
        case 9u:
          long long v394 = *(void **)v45;
          *(void *)int v44 = *(void *)v45;
          char v395 = 9;
LABEL_713:
          *((unsigned char *)v44 + v26) = v395;
          uint64_t v409 = v26;
          id v410 = v394;
          uint64_t v26 = v409;
          break;
        default:
          *(unsigned char *)int v44 = *v45;
          *((unsigned char *)v44 + v26) = 0;
          break;
      }
      unint64_t v411 = (((unint64_t)v44 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v412 = (unint64_t)&v45[v26 + 8] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v412 + 8) < 0xFFFFFFFFuLL)
      {
        long long v422 = *(_OWORD *)v412;
        long long v423 = *(_OWORD *)(v412 + 16);
        long long v424 = *(_OWORD *)(v412 + 48);
        *(_OWORD *)(v411 + 32) = *(_OWORD *)(v412 + 32);
        *(_OWORD *)(v411 + 48) = v424;
        *(_OWORD *)unint64_t v411 = v422;
        *(_OWORD *)(v411 + 16) = v423;
        long long v425 = *(_OWORD *)(v412 + 64);
        long long v426 = *(_OWORD *)(v412 + 80);
        long long v427 = *(_OWORD *)(v412 + 96);
        *(_OWORD *)(v411 + 106) = *(_OWORD *)(v412 + 106);
        *(_OWORD *)(v411 + 80) = v426;
        *(_OWORD *)(v411 + 96) = v427;
        *(_OWORD *)(v411 + 64) = v425;
      }
      else
      {
        *(void *)unint64_t v411 = *(void *)v412;
        *(void *)(v411 + 8) = *(void *)(v412 + 8);
        long long v413 = *(void **)(v412 + 16);
        uint64_t v414 = *(void *)(v412 + 24);
        uint64_t v415 = *(void *)(v412 + 32);
        uint64_t v416 = *(void *)(v412 + 40);
        uint64_t v417 = *(void *)(v412 + 48);
        uint64_t v525 = *(void *)(v412 + 56);
        unsigned __int8 v533 = *(unsigned char *)(v412 + 64);
        swift_bridgeObjectRetain();
        sub_100050F84(v413, v414, v415, v416, v417, v525, v533);
        *(void *)(v411 + 16) = v413;
        *(void *)(v411 + 24) = v414;
        *(void *)(v411 + 32) = v415;
        *(void *)(v411 + 40) = v416;
        *(void *)(v411 + 48) = v417;
        *(void *)(v411 + 56) = v525;
        *(unsigned char *)(v411 + 64) = v533;
        *(unsigned char *)(v411 + 65) = *(unsigned char *)(v412 + 65);
        *(unsigned char *)(v411 + 66) = *(unsigned char *)(v412 + 66);
        *(unsigned char *)(v411 + 67) = *(unsigned char *)(v412 + 67);
        *(unsigned char *)(v411 + 68) = *(unsigned char *)(v412 + 68);
        int v418 = *(unsigned __int8 *)(v412 + 120);
        if (v418 == 255)
        {
          long long v419 = *(_OWORD *)(v412 + 72);
          long long v420 = *(_OWORD *)(v412 + 88);
          long long v421 = *(_OWORD *)(v412 + 104);
          *(unsigned char *)(v411 + 120) = *(unsigned char *)(v412 + 120);
          *(_OWORD *)(v411 + 88) = v420;
          *(_OWORD *)(v411 + 104) = v421;
          *(_OWORD *)(v411 + 72) = v419;
        }
        else
        {
          char v534 = v418 & 1;
          uint64_t v428 = *(void **)(v412 + 72);
          uint64_t v429 = *(void *)(v412 + 80);
          uint64_t v430 = *(void *)(v412 + 88);
          uint64_t v431 = *(void *)(v412 + 96);
          uint64_t v432 = *(void *)(v412 + 112);
          uint64_t v526 = *(void *)(v412 + 104);
          sub_10003BED8(v428, v429, v430, v431, v526, v432, v418 & 1);
          *(void *)(v411 + 72) = v428;
          *(void *)(v411 + 80) = v429;
          *(void *)(v411 + 88) = v430;
          *(void *)(v411 + 96) = v431;
          *(void *)(v411 + 104) = v526;
          *(void *)(v411 + 112) = v432;
          *(unsigned char *)(v411 + 120) = v534;
        }
        uint64_t v36 = v537;
        *(unsigned char *)(v411 + 121) = *(unsigned char *)(v412 + 121);
      }
      *(unsigned char *)(v411 + 122) = *(unsigned char *)(v412 + 122);
      *(unsigned char *)(v411 + 123) = *(unsigned char *)(v412 + 123);
      *(unsigned char *)(v411 + 124) = *(unsigned char *)(v412 + 124);
      *(unsigned char *)(v411 + 125) = *(unsigned char *)(v412 + 125);
      *(unsigned char *)(v411 + 126) = *(unsigned char *)(v412 + 126);
      uint64_t v433 = *(void **)((v412 + 134) & 0xFFFFFFFFFFFFFFF8);
      *(void *)((v411 + 134) & 0xFFFFFFFFFFFFFFF8) = v433;
      id v434 = v433;
      if (v35 > 3) {
        goto LABEL_721;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        *(_DWORD *)((char *)v44 + v35) = 0;
      }
      else
      {
        if (v381 <= 0xF5)
        {
LABEL_721:
          *((unsigned char *)v44 + v35) = 0;
          break;
        }
        *(unsigned __int16 *)((char *)v44 + v35) = 0;
      }
      goto LABEL_854;
    case 1u:
      unsigned int v346 = v45[v26];
      unsigned int v347 = v346 - 10;
      if (v346 >= 0xA)
      {
        if (v26 <= 3) {
          uint64_t v348 = v26;
        }
        else {
          uint64_t v348 = 4;
        }
        switch(v348)
        {
          case 1:
            int v349 = *v45;
            goto LABEL_692;
          case 2:
            int v349 = *(unsigned __int16 *)v45;
            goto LABEL_692;
          case 3:
            int v349 = *(unsigned __int16 *)v45 | (v45[2] << 16);
            goto LABEL_692;
          case 4:
            int v349 = *(_DWORD *)v45;
LABEL_692:
            if (v26 < 4) {
              unsigned int v346 = (v349 | (v347 << (8 * v26))) + 10;
            }
            else {
              unsigned int v346 = v349 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v346)
      {
        case 1u:
          uint64_t v401 = *(void **)v45;
          *(void *)int v44 = *(void *)v45;
          char v402 = 1;
          goto LABEL_728;
        case 2u:
          uint64_t v403 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v403;
          *((unsigned char *)v44 + v403) = 2;
          break;
        case 3u:
          uint64_t v404 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v404;
          *((unsigned char *)v44 + v404) = 3;
          break;
        case 4u:
          uint64_t v405 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v405;
          *((unsigned char *)v44 + v405) = 4;
          break;
        case 5u:
          uint64_t v406 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v406;
          *((unsigned char *)v44 + v406) = 5;
          break;
        case 6u:
          uint64_t v435 = v26;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
          uint64_t v26 = v435;
          *((unsigned char *)v44 + v435) = 6;
          break;
        case 7u:
          long long v407 = *(_OWORD *)v45;
          *(_OWORD *)((char *)v44 + 9) = *(_OWORD *)(v45 + 9);
          *(_OWORD *)int v44 = v407;
          *((unsigned char *)v44 + v26) = 7;
          break;
        case 8u:
          uint64_t v401 = *(void **)v45;
          *(void *)int v44 = *(void *)v45;
          char v402 = 8;
          goto LABEL_728;
        case 9u:
          uint64_t v401 = *(void **)v45;
          *(void *)int v44 = *(void *)v45;
          char v402 = 9;
LABEL_728:
          *((unsigned char *)v44 + v26) = v402;
          uint64_t v436 = v26;
          id v437 = v401;
          uint64_t v26 = v436;
          break;
        default:
          *(unsigned char *)int v44 = *v45;
          *((unsigned char *)v44 + v26) = 0;
          break;
      }
      unint64_t v438 = (((unint64_t)v44 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v439 = (unint64_t)&v45[v26 + 8] & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v439 + 8) < 0xFFFFFFFFuLL)
      {
        long long v449 = *(_OWORD *)v439;
        long long v450 = *(_OWORD *)(v439 + 16);
        long long v451 = *(_OWORD *)(v439 + 48);
        *(_OWORD *)(v438 + 32) = *(_OWORD *)(v439 + 32);
        *(_OWORD *)(v438 + 48) = v451;
        *(_OWORD *)unint64_t v438 = v449;
        *(_OWORD *)(v438 + 16) = v450;
        long long v452 = *(_OWORD *)(v439 + 64);
        long long v453 = *(_OWORD *)(v439 + 80);
        long long v454 = *(_OWORD *)(v439 + 96);
        *(_OWORD *)(v438 + 106) = *(_OWORD *)(v439 + 106);
        *(_OWORD *)(v438 + 80) = v453;
        *(_OWORD *)(v438 + 96) = v454;
        *(_OWORD *)(v438 + 64) = v452;
      }
      else
      {
        *(void *)unint64_t v438 = *(void *)v439;
        *(void *)(v438 + 8) = *(void *)(v439 + 8);
        uint64_t v440 = *(void **)(v439 + 16);
        uint64_t v441 = *(void *)(v439 + 24);
        uint64_t v442 = *(void *)(v439 + 32);
        uint64_t v443 = *(void *)(v439 + 40);
        uint64_t v444 = *(void *)(v439 + 48);
        uint64_t v527 = *(void *)(v439 + 56);
        unsigned __int8 v535 = *(unsigned char *)(v439 + 64);
        swift_bridgeObjectRetain();
        sub_100050F84(v440, v441, v442, v443, v444, v527, v535);
        *(void *)(v438 + 16) = v440;
        *(void *)(v438 + 24) = v441;
        *(void *)(v438 + 32) = v442;
        *(void *)(v438 + 40) = v443;
        *(void *)(v438 + 48) = v444;
        *(void *)(v438 + 56) = v527;
        *(unsigned char *)(v438 + 64) = v535;
        *(unsigned char *)(v438 + 65) = *(unsigned char *)(v439 + 65);
        *(unsigned char *)(v438 + 66) = *(unsigned char *)(v439 + 66);
        *(unsigned char *)(v438 + 67) = *(unsigned char *)(v439 + 67);
        *(unsigned char *)(v438 + 68) = *(unsigned char *)(v439 + 68);
        int v445 = *(unsigned __int8 *)(v439 + 120);
        if (v445 == 255)
        {
          long long v446 = *(_OWORD *)(v439 + 72);
          long long v447 = *(_OWORD *)(v439 + 88);
          long long v448 = *(_OWORD *)(v439 + 104);
          *(unsigned char *)(v438 + 120) = *(unsigned char *)(v439 + 120);
          *(_OWORD *)(v438 + 88) = v447;
          *(_OWORD *)(v438 + 104) = v448;
          *(_OWORD *)(v438 + 72) = v446;
        }
        else
        {
          char v536 = v445 & 1;
          uint64_t v455 = *(void **)(v439 + 72);
          uint64_t v456 = *(void *)(v439 + 80);
          uint64_t v457 = *(void *)(v439 + 88);
          uint64_t v458 = *(void *)(v439 + 96);
          uint64_t v459 = *(void *)(v439 + 112);
          uint64_t v528 = *(void *)(v439 + 104);
          sub_10003BED8(v455, v456, v457, v458, v528, v459, v445 & 1);
          *(void *)(v438 + 72) = v455;
          *(void *)(v438 + 80) = v456;
          *(void *)(v438 + 88) = v457;
          *(void *)(v438 + 96) = v458;
          *(void *)(v438 + 104) = v528;
          *(void *)(v438 + 112) = v459;
          *(unsigned char *)(v438 + 120) = v536;
        }
        uint64_t v36 = v537;
        *(unsigned char *)(v438 + 121) = *(unsigned char *)(v439 + 121);
      }
      *(unsigned char *)(v438 + 122) = *(unsigned char *)(v439 + 122);
      *(unsigned char *)(v438 + 123) = *(unsigned char *)(v439 + 123);
      *(unsigned char *)(v438 + 124) = *(unsigned char *)(v439 + 124);
      *(unsigned char *)(v438 + 125) = *(unsigned char *)(v439 + 125);
      *(unsigned char *)(v438 + 126) = *(unsigned char *)(v439 + 126);
      id v460 = *(void **)((v439 + 134) & 0xFFFFFFFFFFFFFFF8);
      *(void *)((v438 + 134) & 0xFFFFFFFFFFFFFFF8) = v460;
      id v461 = v460;
      if (v35 > 3) {
        goto LABEL_736;
      }
      int v393 = 1;
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5) {
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_736:
        char v373 = 1;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 1;
      goto LABEL_854;
    case 2u:
      uint64_t v350 = v36;
      uint64_t v351 = *(void **)v45;
      *(void *)int v44 = *(void *)v45;
      uint64_t v352 = (char *)(((unint64_t)v44 + v29) & v50);
      uint64_t v353 = (unsigned __int8 *)((unint64_t)&v45[v29] & v50);
      uint64_t v354 = v26;
      int v355 = v353[v26];
      id v356 = v351;
      switch(v355)
      {
        case 0:
          *uint64_t v352 = *v353;
          v352[v354] = 0;
          break;
        case 1:
          v480 = *(void **)v353;
          *(void *)uint64_t v352 = *(void *)v353;
          char v481 = 1;
          goto LABEL_808;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v352, v353, v519);
          v352[v354] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v352, v353, v519);
          v352[v354] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v352, v353, v519);
          v352[v354] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v352, v353, v519);
          v352[v354] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v352, v353, v519);
          v352[v354] = 6;
          break;
        case 7:
          long long v482 = *(_OWORD *)v353;
          *(_OWORD *)(v352 + 9) = *(_OWORD *)(v353 + 9);
          *(_OWORD *)uint64_t v352 = v482;
          v352[v354] = 7;
          break;
        case 8:
          v480 = *(void **)v353;
          *(void *)uint64_t v352 = *(void *)v353;
          char v481 = 8;
          goto LABEL_808;
        case 9:
          v480 = *(void **)v353;
          *(void *)uint64_t v352 = *(void *)v353;
          char v481 = 9;
LABEL_808:
          v352[v354] = v481;
          id v483 = v480;
          break;
        default:
          memcpy(v352, v353, __n);
          break;
      }
      uint64_t v36 = v350;
      if (v35 > 3) {
        goto LABEL_810;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 2;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_810:
        char v373 = 2;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 2;
      goto LABEL_854;
    case 3u:
      uint64_t v357 = v36;
      uint64_t v358 = *(void **)v45;
      *(void *)int v44 = *(void *)v45;
      uint64_t v359 = (char *)(((unint64_t)v44 + v29) & v50);
      uint64_t v360 = (unsigned __int8 *)((unint64_t)&v45[v29] & v50);
      uint64_t v361 = v26;
      int v362 = v360[v26];
      id v363 = v358;
      switch(v362)
      {
        case 0:
          *uint64_t v359 = *v360;
          v359[v361] = 0;
          break;
        case 1:
          uint64_t v484 = *(void **)v360;
          *(void *)uint64_t v359 = *(void *)v360;
          char v485 = 1;
          goto LABEL_824;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v359, v360, v519);
          v359[v361] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v359, v360, v519);
          v359[v361] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v359, v360, v519);
          v359[v361] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v359, v360, v519);
          v359[v361] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v359, v360, v519);
          v359[v361] = 6;
          break;
        case 7:
          long long v486 = *(_OWORD *)v360;
          *(_OWORD *)(v359 + 9) = *(_OWORD *)(v360 + 9);
          *(_OWORD *)uint64_t v359 = v486;
          v359[v361] = 7;
          break;
        case 8:
          uint64_t v484 = *(void **)v360;
          *(void *)uint64_t v359 = *(void *)v360;
          char v485 = 8;
          goto LABEL_824;
        case 9:
          uint64_t v484 = *(void **)v360;
          *(void *)uint64_t v359 = *(void *)v360;
          char v485 = 9;
LABEL_824:
          v359[v361] = v485;
          id v487 = v484;
          break;
        default:
          memcpy(v359, v360, __n);
          break;
      }
      uint64_t v36 = v357;
      if (v35 > 3) {
        goto LABEL_826;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 3;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_826:
        char v373 = 3;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 3;
      goto LABEL_854;
    case 4u:
      uint64_t v364 = v36;
      uint64_t v365 = *(void **)v45;
      *(void *)int v44 = *(void *)v45;
      uint64_t v366 = (char *)(((unint64_t)v44 + v29) & v50);
      uint64_t v367 = (unsigned __int8 *)((unint64_t)&v45[v29] & v50);
      uint64_t v368 = v26;
      int v369 = v367[v26];
      id v370 = v365;
      switch(v369)
      {
        case 0:
          *uint64_t v366 = *v367;
          v366[v368] = 0;
          break;
        case 1:
          v488 = *(void **)v367;
          *(void *)uint64_t v366 = *(void *)v367;
          char v489 = 1;
          goto LABEL_840;
        case 2:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v366, v367, v519);
          v366[v368] = 2;
          break;
        case 3:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v366, v367, v519);
          v366[v368] = 3;
          break;
        case 4:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v366, v367, v519);
          v366[v368] = 4;
          break;
        case 5:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v366, v367, v519);
          v366[v368] = 5;
          break;
        case 6:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v520 + 16))(v366, v367, v519);
          v366[v368] = 6;
          break;
        case 7:
          long long v490 = *(_OWORD *)v367;
          *(_OWORD *)(v366 + 9) = *(_OWORD *)(v367 + 9);
          *(_OWORD *)uint64_t v366 = v490;
          v366[v368] = 7;
          break;
        case 8:
          v488 = *(void **)v367;
          *(void *)uint64_t v366 = *(void *)v367;
          char v489 = 8;
          goto LABEL_840;
        case 9:
          v488 = *(void **)v367;
          *(void *)uint64_t v366 = *(void *)v367;
          char v489 = 9;
LABEL_840:
          v366[v368] = v489;
          id v491 = v488;
          break;
        default:
          memcpy(v366, v367, __n);
          break;
      }
      uint64_t v36 = v364;
      if (v35 > 3) {
        goto LABEL_842;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 4;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_842:
        char v373 = 4;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 4;
      goto LABEL_854;
    case 5u:
      *(void *)int v44 = *(void *)v45;
      *((unsigned char *)v44 + 8) = v45[8];
      *((unsigned char *)v44 + 9) = v45[9];
      *((unsigned char *)v44 + 10) = v45[10];
      uint64_t v371 = (void *)*((void *)v45 + 2);
      *((void *)v44 + 2) = v371;
      id v372 = v371;
      if (v35 > 3) {
        goto LABEL_625;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 5;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_625:
        char v373 = 5;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 5;
      goto LABEL_854;
    case 6u:
      long long v379 = *(void **)v45;
      *(void *)int v44 = *(void *)v45;
      id v380 = v379;
      if (v35 > 3) {
        goto LABEL_641;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 6;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_641:
        char v373 = 6;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 6;
      goto LABEL_854;
    case 7u:
      if (v30 < 0)
      {
        uint64_t v374 = v516;
        uint64_t v384 = v20;
        int v376 = (*(uint64_t (**)(unint64_t))(v517 + 48))((unint64_t)&v45[v516] & v530);
        uint64_t v20 = v384;
      }
      else
      {
        uint64_t v374 = v516;
        uint64_t v375 = *(void *)v45;
        if (*(void *)v45 >= 0xFFFFFFFFuLL) {
          LODWORD(v375) = -1;
        }
        int v376 = v375 + 1;
      }
      size_t v385 = v507;
      if (v376)
      {
        memcpy(v44, v45, v507);
      }
      else
      {
        *(void *)int v44 = *(void *)v45;
        uint64_t v386 = ((unint64_t)v44 + v20 + 8) & v530;
        uint64_t v387 = *(void (**)(uint64_t, unint64_t, uint64_t))(v517 + 16);
        swift_bridgeObjectRetain();
        v387(v386, (unint64_t)&v45[v374] & v530, v518);
        size_t v385 = v507;
      }
      unint64_t v388 = (((unint64_t)v44 | 7) + v385) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v389 = (((unint64_t)v45 | 7) + v385) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v389 + 8) < 0xFFFFFFFFuLL)
      {
        long long v392 = *(_OWORD *)v389;
        *(void *)(v388 + 16) = *(void *)(v389 + 16);
        *(_OWORD *)unint64_t v388 = v392;
      }
      else
      {
        *(void *)unint64_t v388 = *(void *)v389;
        *(void *)(v388 + 8) = *(void *)(v389 + 8);
        char v390 = *(void **)(v389 + 16);
        *(void *)(v388 + 16) = v390;
        swift_bridgeObjectRetain();
        id v391 = v390;
      }
      if (v35 > 3) {
        goto LABEL_670;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 7;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_670:
        char v373 = 7;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 7;
      goto LABEL_854;
    case 8u:
      if (v32 < 0xFD)
      {
        unsigned int v383 = v45[v25];
        if (v383 < 3) {
          goto LABEL_657;
        }
        unsigned int v382 = v383 - 2;
      }
      else
      {
        unsigned int v382 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v520 + 48))(v45, v32, v519);
      }
      if (v382)
      {
        memcpy(v44, v45, v515);
        goto LABEL_658;
      }
LABEL_657:
      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v520 + 16))(v44, v45, v519);
      *((unsigned char *)v44 + v25) = v45[v25];
LABEL_658:
      *(void *)((((unint64_t)v44 | 7) + v515) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v45 | 7)
                                                                                            + v515) & 0xFFFFFFFFFFFFFFF8);
      if (v35 > 3) {
        goto LABEL_661;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 8;
        goto LABEL_853;
      }
      if (v381 <= 0xF5)
      {
LABEL_661:
        char v373 = 8;
        goto LABEL_843;
      }
      *(unsigned __int16 *)((char *)v44 + v35) = 8;
      goto LABEL_854;
    case 9u:
      *(unsigned char *)int v44 = *v45;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v22 + 16))(((unint64_t)v44 + v33) & v52, (unint64_t)&v45[v33] & v52, v21);
      if (v35 > 3) {
        goto LABEL_631;
      }
      unsigned int v381 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      if (v381 > 0xFFF5)
      {
        int v393 = 9;
LABEL_853:
        *(_DWORD *)((char *)v44 + v35) = v393;
        goto LABEL_854;
      }
      if (v381 > 0xF5)
      {
        *(unsigned __int16 *)((char *)v44 + v35) = 9;
LABEL_854:
        BOOL v476 = v381 > 0xFFF5;
        uint64_t v493 = 2;
        if (v476) {
          uint64_t v493 = 4;
        }
        goto LABEL_856;
      }
LABEL_631:
      char v373 = 9;
LABEL_843:
      *((unsigned char *)v44 + v35) = v373;
      break;
    default:
      if (v35 > 3) {
        goto LABEL_636;
      }
      unsigned int v377 = ((1 << (8 * v35)) + 1) >> (8 * v35);
      uint64_t v378 = 2;
      if (v377 > 0xFFF5) {
        uint64_t v378 = 4;
      }
      if (v377 <= 0xF5) {
LABEL_636:
      }
        uint64_t v378 = 1;
      memcpy(v44, v45, v378 + v35);
      break;
  }
LABEL_844:
  if (v35 > 3) {
    goto LABEL_848;
  }
  unsigned int v492 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  uint64_t v493 = 2;
  if (v492 > 0xFFF5) {
    uint64_t v493 = 4;
  }
  if (v492 <= 0xF5) {
LABEL_848:
  }
    uint64_t v493 = 1;
LABEL_856:
  uint64_t v494 = v493 + v35;
  unint64_t v495 = (unint64_t)v44 + v494;
  unint64_t v496 = (unint64_t)&v45[v494];
  *(unsigned char *)unint64_t v495 = *(unsigned char *)v496;
  unint64_t v497 = v495 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v498 = v496 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v497 + 8) = *(void *)((v496 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v497 + 16) = *(void *)((v496 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)((v497 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v498 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v35 > 3) {
    goto LABEL_860;
  }
LABEL_857:
  unsigned int v499 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  uint64_t v500 = 2;
  if (v499 > 0xFFF5) {
    uint64_t v500 = 4;
  }
  if (v499 <= 0xF5) {
LABEL_860:
  }
    uint64_t v500 = 1;
  unint64_t v501 = ((((v500 + v35) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(void *)(((unint64_t)v44 + v501) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v45[v501] & 0xFFFFFFFFFFFFFFF8);
  if (v35 > 3) {
    goto LABEL_865;
  }
LABEL_862:
  unsigned int v502 = ((1 << (8 * v35)) + 1) >> (8 * v35);
  uint64_t v503 = 2;
  if (v502 > 0xFFF5) {
    uint64_t v503 = 4;
  }
  if (v502 <= 0xF5) {
    goto LABEL_865;
  }
LABEL_866:
  unint64_t v504 = ((((((v503 + v35) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  *((unsigned char *)v44 + v504) = v45[v504];
  return v36;
}