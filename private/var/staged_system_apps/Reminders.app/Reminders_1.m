uint64_t TTRIDebouncedHoverAction.__allocating_init(_:handlerQueue:)(uint64_t a1, double a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(void *)(v4 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_10003B754(&qword_1007857C0);
  swift_allocObject();
  *(void *)(v4 + 48) = PassthroughSubject.init()();
  *(void *)(v4 + 56) = 0;
  *(double *)(v4 + 40) = a2;
  *(void *)(v4 + 32) = a1;
  return v4;
}

uint64_t TTRIDebouncedHoverAction.init(_:handlerQueue:)(uint64_t a1, double a2)
{
  *(void *)(v2 + 24) = 0;
  swift_unknownObjectWeakInit();
  sub_10003B754(&qword_1007857C0);
  swift_allocObject();
  *(void *)(v2 + 48) = PassthroughSubject.init()();
  *(void *)(v2 + 56) = 0;
  *(double *)(v2 + 40) = a2;
  *(void *)(v2 + 32) = a1;
  return v2;
}

Swift::Void __swiftcall TTRIDebouncedHoverAction.sendBegin()()
{
}

uint64_t sub_1000ABAF4()
{
  v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = sub_10003B754(&qword_100789888);
  __chkstk_darwin(v3 - 8);
  v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v39 = *(void *)(v6 - 8);
  uint64_t v40 = v6;
  __chkstk_darwin(v6);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100789890);
  uint64_t v41 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_100789898);
  uint64_t v38 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_1007898A0);
  uint64_t result = __chkstk_darwin(v15);
  v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!v1[7])
  {
    uint64_t v36 = result;
    uint64_t v37 = v17;
    id v43 = (id)v1[6];
    swift_retain();
    static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
    uint64_t v35 = v2;
    id v42 = (id)v1[4];
    id v20 = v42;
    uint64_t v33 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
    uint64_t v21 = *(void *)(v33 - 8);
    v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    uint64_t v30 = v9;
    uint64_t v34 = v21 + 56;
    v32(v5, 1, 1, v33);
    id v29 = v20;
    sub_10003B754(&qword_1007857C0);
    sub_10007CD0C();
    sub_100037EA0(&qword_1007898A8, &qword_1007857C0);
    uint64_t v31 = v12;
    sub_1000AC47C();
    Publisher.debounce<A>(for:scheduler:options:)();
    sub_1000AC4D4((uint64_t)v5);

    (*(void (**)(char *, uint64_t))(v39 + 8))(v8, v40);
    swift_release();
    sub_100037EA0(&qword_1007898B8, &qword_100789890);
    uint64_t v22 = v30;
    Publisher.drop(while:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v22);
    v23 = v29;
    id v43 = v29;
    v32(v5, 1, 1, v33);
    sub_100037EA0(&qword_1007898C0, &qword_100789898);
    id v24 = v23;
    uint64_t v25 = v31;
    Publisher.receive<A>(on:options:)();
    sub_1000AC4D4((uint64_t)v5);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v25);
    sub_100037EA0(&qword_1007898C8, &qword_1007898A0);
    uint64_t v26 = v36;
    uint64_t v27 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v26);
    v1[7] = v27;
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall TTRIDebouncedHoverAction.sendEnd()()
{
}

uint64_t sub_1000AC084()
{
  return PassthroughSubject.send(_:)();
}

Swift::Void __swiftcall TTRIDebouncedHoverAction.cancel()()
{
  if (*(void *)(v0 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v0 + 56) = 0;

  swift_release();
}

BOOL sub_1000AC11C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

BOOL sub_1000AC134(unsigned char *a1)
{
  return (*a1 & 1) == 0;
}

uint64_t sub_1000AC144(uint64_t result, unsigned char *a2)
{
  if (*a2 == 1)
  {
    uint64_t v2 = result;
    swift_beginAccess();
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v3 = *(void *)(v2 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v2, ObjectType, v3);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t TTRIDebouncedHoverAction.deinit()
{
  sub_1000499D4(v0 + 16);

  swift_release();
  swift_release();
  return v0;
}

uint64_t TTRIDebouncedHoverAction.__deallocating_deinit()
{
  sub_1000499D4(v0 + 16);

  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIDebouncedHoverAction()
{
  return self;
}

uint64_t getEnumTagSinglePayload for TTRICollectionViewItemHit.Portion(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TTRIDebouncedHoverAction.HoverActionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000AC3E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_1000AC408(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TTRIDebouncedHoverAction.HoverActionState()
{
  return &type metadata for TTRIDebouncedHoverAction.HoverActionState;
}

unint64_t sub_1000AC428()
{
  unint64_t result = qword_100789880;
  if (!qword_100789880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100789880);
  }
  return result;
}

unint64_t sub_1000AC47C()
{
  unint64_t result = qword_1007898B0;
  if (!qword_1007898B0)
  {
    sub_10007CD0C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007898B0);
  }
  return result;
}

uint64_t sub_1000AC4D4(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100789888);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000AC6B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  int v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v48 - v9;
  sub_1000ACC4C();
  static UIListContentConfiguration.cell()();
  uint64_t v11 = type metadata accessor for UICellConfigurationState();
  uint64_t v54 = v11;
  v55 = &protocol witness table for UICellConfigurationState;
  uint64_t v12 = sub_1000394A8(v53);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v12, a1, v11);
  UIListContentConfiguration.updated(for:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_100038CD8((uint64_t)v53);
  v14 = &v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  if (!*(void *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel]
    || (uint64_t v15 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField,
        ([*(id *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField] isEditing] & 1) != 0))
  {
    static TTRLocalizableStrings.Sections.hideEmpty(listLayout:)();
    UIListContentConfiguration.text.setter();
    [*(id *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField] setUserInteractionEnabled:0];
    goto LABEL_4;
  }
  v23 = *(void **)&v2[v15];
  NSString v24 = *(NSString *)v14;
  if (*(void *)v14)
  {
    uint64_t v49 = v15;
    uint64_t v50 = v4;
    uint64_t v25 = *((void *)v14 + 3);
    uint64_t v51 = v5;
    v52 = v13;
    uint64_t v26 = *((void *)v14 + 1);
    v48[1] = v25;
    v48[2] = v26;
    id v27 = v23;
    uint64_t v13 = v52;
    sub_1000AE6AC((uint64_t)v24);
    swift_bridgeObjectRelease();

    uint64_t v15 = v49;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v4 = v50;
    NSString v24 = String._bridgeToObjectiveC()();
    uint64_t v5 = v51;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v28 = v23;
  }
  [v23 setText:v24];

  UIListContentConfiguration.text.setter();
  if (*(void *)v14)
  {
    if (v14[40] == 1)
    {
      id v29 = *(void **)&v2[v15];
      uint64_t v30 = self;
      id v31 = v29;
      id v32 = [v30 grayColor];
      [v31 setTextColor:v32];
    }
    if (*(void *)v14)
    {
      uint64_t v33 = *((void *)v14 + 4);
      if (v33)
      {
        uint64_t v51 = v5;
        v52 = v13;
        uint64_t v34 = *((void *)v14 + 3);
        uint64_t v35 = *(void **)&v2[v15];
        swift_bridgeObjectRetain();
        id v36 = [v35 text];
        if (v36)
        {
          uint64_t v37 = v36;
          uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v40 = v39;

          if (v34 == v38 && v33 == v40)
          {
            swift_bridgeObjectRelease();
            goto LABEL_19;
          }
          char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v41)
          {
LABEL_19:
            swift_bridgeObjectRelease();
            id v42 = [v2 contentView];
            uint64_t v43 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
            v44 = *(void **)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField];
            sub_1000368FC(0, (unint64_t *)&qword_100788600);
            id v45 = v44;
            char v46 = UIFocusEnvironment.contains(_:)();

            uint64_t v5 = v51;
            uint64_t v13 = v52;
            if (v46)
            {
              [*(id *)&v2[v43] removeFromSuperview];
              sub_1000AD580();
            }
            goto LABEL_4;
          }
        }
        v47 = (void *)static TTRLocalizableStrings.Sections.sectionsCanonicalName(name:)();
        swift_bridgeObjectRelease();
        [*(id *)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField] setAttributedText:v47];

        uint64_t v5 = v51;
        uint64_t v13 = v52;
      }
    }
  }
LABEL_4:
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  static UIFont.roundedBodyFont.getter();
  v16 = (uint64_t (*)(uint64_t *, void))UIListContentConfiguration.textProperties.modify();
  UIListContentConfiguration.TextProperties.font.setter();
  uint64_t result = v16(v53, 0);
  uint64_t v18 = *(void **)&v2[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView];
  if (v18)
  {
    uint64_t v54 = v4;
    v55 = &protocol witness table for UIListContentConfiguration;
    v19 = sub_1000394A8(v53);
    (*(void (**)(uint64_t *, char *, uint64_t))(v5 + 16))(v19, v10, v4);
    id v20 = v18;
    UIListContentView.configuration.setter();

    id v21 = [v2 contentView];
    [v21 directionalLayoutMargins];
    [v21 setDirectionalLayoutMargins:15.0];

    id v22 = [v2 contentView];
    [v22 directionalLayoutMargins];
    [v22 setDirectionalLayoutMargins:];

    return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000ACC4C()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for UIListContentConfiguration();
  __chkstk_darwin(v2 - 8);
  sub_1000368FC(0, (unint64_t *)&unk_100792A80);
  static UIListContentConfiguration.cell()();
  int v3 = (void *)UIListContentView.init(configuration:)();
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v4 = [v1 contentView];
  [v4 addSubview:v3];

  uint64_t v5 = *(void **)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView] = v3;
  id v6 = v3;

  uint64_t v7 = self;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10066C4F0;
  id v9 = [v6 topAnchor];
  id v10 = [v1 contentView];
  id v11 = [v10 topAnchor];

  id v12 = [v9 constraintEqualToAnchor:v11];
  *(void *)(v8 + 32) = v12;
  id v13 = [v6 leadingAnchor];
  id v14 = [v1 contentView];
  id v15 = [v14 leadingAnchor];

  id v16 = [v13 constraintEqualToAnchor:v15];
  *(void *)(v8 + 40) = v16;
  id v17 = [v6 bottomAnchor];
  id v18 = [v1 contentView];
  id v19 = [v18 bottomAnchor];

  id v20 = [v17 constraintEqualToAnchor:v19];
  *(void *)(v8 + 48) = v20;
  id v21 = [v6 trailingAnchor];
  id v22 = [v1 contentView];
  id v23 = [v22 trailingAnchor];

  id v24 = [v21 constraintEqualToAnchor:v23];
  *(void *)(v8 + 56) = v24;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  v68 = v7;
  [v7 activateConstraints:isa];

  uint64_t v26 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  id v27 = *(void **)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v28 = v27;
  id v29 = (void *)static UIFont.roundedBodyFont.getter();
  [v28 setFont:v29];

  [*(id *)&v1[v26] setClearButtonMode:1];
  [*(id *)&v1[v26] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v1[v26] setAdjustsFontSizeToFitWidth:0];
  [*(id *)&v1[v26] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v30 = [v1 contentView];
  [v30 addSubview:*(void *)&v1[v26]];

  uint64_t v31 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
  [*(id *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField] setAdjustsFontForContentSizeCategory:1];
  [*(id *)&v1[v31] setAdjustsFontSizeToFitWidth:0];
  [*(id *)&v1[v31] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v32 = *(void **)&v1[v31];
  uint64_t v33 = self;
  id v34 = v32;
  id v35 = [v33 grayColor];
  [v34 setTextColor:v35];

  id v36 = [v1 contentView];
  [v36 addSubview:*(void *)&v1[v31]];

  uint64_t v37 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints;
  if (*(void *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints])
  {
    swift_bridgeObjectRetain();
    Class v38 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v68 deactivateConstraints:v38];

    *(void *)&v1[v37] = 0;
    swift_bridgeObjectRelease();
  }
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_10066DE00;
  id v40 = [*(id *)&v1[v26] topAnchor];
  id v41 = [v1 contentView];
  id v42 = [v41 topAnchor];

  id v43 = [v40 constraintEqualToAnchor:v42 constant:5.0];
  *(void *)(v39 + 32) = v43;
  id v44 = [*(id *)&v1[v26] leadingAnchor];
  id v45 = [v1 contentView];
  id v46 = [v45 leadingAnchor];

  id v47 = [v44 constraintEqualToAnchor:v46 constant:20.0];
  *(void *)(v39 + 40) = v47;
  id v48 = [*(id *)&v1[v26] bottomAnchor];
  id v49 = [*(id *)&v1[v31] topAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49];

  *(void *)(v39 + 48) = v50;
  id v51 = [*(id *)&v1[v26] trailingAnchor];
  id v52 = [v1 contentView];
  id v53 = [v52 trailingAnchor];

  id v54 = [v51 constraintEqualToAnchor:v53 constant:-10.0];
  *(void *)(v39 + 56) = v54;
  id v55 = [*(id *)&v1[v31] leadingAnchor];
  id v56 = [v1 contentView];
  id v57 = [v56 leadingAnchor];

  id v58 = [v55 constraintEqualToAnchor:v57 constant:20.0];
  *(void *)(v39 + 64) = v58;
  id v59 = [v1 contentView];
  id v60 = [v59 bottomAnchor];

  id v61 = [*(id *)&v1[v31] bottomAnchor];
  id v62 = [v60 constraintEqualToAnchor:v61 constant:5.0];

  *(void *)(v39 + 72) = v62;
  id v63 = [*(id *)&v1[v31] trailingAnchor];
  id v64 = [v1 contentView];
  id v65 = [v64 trailingAnchor];

  id v66 = [v63 constraintEqualToAnchor:v65 constant:-10.0];
  *(void *)(v39 + 80) = v66;
  specialized Array._endMutation()();
  *(void *)&v1[v37] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  Class v67 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v68 activateConstraints:v67];
}

uint64_t sub_1000AD580()
{
  v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints;
  if (*(void *)&v0[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints])
  {
    int v3 = self;
    sub_1000368FC(0, (unint64_t *)&qword_100793B60);
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 deactivateConstraints:isa];

    *(void *)&v0[v2] = 0;
    swift_bridgeObjectRelease();
  }
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066C4F0;
  uint64_t v6 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  id v7 = [*(id *)&v1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField] topAnchor];
  id v8 = [v1 contentView];
  id v9 = [v8 topAnchor];

  id v10 = [v7 constraintEqualToAnchor:v9 constant:5.0];
  *(void *)(v5 + 32) = v10;
  id v11 = [*(id *)&v1[v6] leadingAnchor];
  id v12 = [v1 contentView];
  id v13 = [v12 leadingAnchor];

  id v14 = [v11 constraintEqualToAnchor:v13 constant:20.0];
  *(void *)(v5 + 40) = v14;
  id v15 = [*(id *)&v1[v6] bottomAnchor];
  id v16 = [v1 contentView];
  id v17 = [v16 bottomAnchor];

  id v18 = [v15 constraintEqualToAnchor:v17 constant:-5.0];
  *(void *)(v5 + 48) = v18;
  id v19 = [*(id *)&v1[v6] trailingAnchor];
  id v20 = [v1 contentView];
  id v21 = [v20 trailingAnchor];

  id v22 = [v19 constraintEqualToAnchor:v21 constant:-10.0];
  *(void *)(v5 + 56) = v22;
  specialized Array._endMutation()();
  id v23 = self;
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class v24 = Array._bridgeToObjectiveC()().super.isa;
  [v23 activateConstraints:v24];

  *(void *)&v1[v2] = v5;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000ADA00()
{
  v1 = &v0[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  if (v2)
  {
    uint64_t v4 = *((void *)v1 + 1);
    uint64_t v3 = *((void *)v1 + 2);
    char v5 = v1[40];
    sub_10003B754((uint64_t *)&unk_1007A2330);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10066C680;
    *(void *)(v6 + 32) = v4;
    *(void *)(v6 + 40) = v3;
    sub_1000AE6AC((uint64_t)v2);
    swift_bridgeObjectRetain();
    if (v5)
    {
      uint64_t v7 = *(void *)TTRAccesibility.Sections.EmptySection.unsafeMutableAddressor();
      uint64_t v8 = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v7 = 0;
      uint64_t v8 = 0;
    }
    *(void *)(v6 + 48) = v7;
    *(void *)(v6 + 56) = v8;
    sub_10003B754((uint64_t *)&unk_1007A03A0);
    sub_100037EA0(&qword_1007A2340, (uint64_t *)&unk_1007A03A0);
    uint64_t v12 = Sequence.removingNils<A>()();
    swift_bridgeObjectRelease();
    uint64_t v15 = v12;
    TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    sub_10003B754(&qword_10078E670);
    sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
    uint64_t v11 = BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v14.receiver = v0;
    v14.super_class = (Class)swift_getObjectType();
    [super accessibilityLabel];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v11;
}

uint64_t sub_1000ADC34()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (!*(void *)&v0[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel])
  {
    char v5 = (void *)sub_1000ADD08();
    if (v5)
    {
      uint64_t v3 = v5;
      if ([v5 isOn]) {
        uint64_t v6 = (uint64_t *)TTRAccesibility.General.Label.On.unsafeMutableAddressor();
      }
      else {
        uint64_t v6 = (uint64_t *)TTRAccesibility.General.Label.Off.unsafeMutableAddressor();
      }
      uint64_t v4 = *v6;
      swift_bridgeObjectRetain();
      goto LABEL_10;
    }
  }
  v8.receiver = v0;
  v8.super_class = ObjectType;
  id v2 = [super accessibilityValue];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
LABEL_10:

    return v4;
  }
  return 0;
}

uint64_t sub_1000ADD08()
{
  uint64_t v1 = type metadata accessor for UICellAccessory.AccessoryType();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (void **)((char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for UICellAccessory();
  __chkstk_darwin(v5);
  objc_super v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = 0;
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel))
  {
    uint64_t v10 = v6;
    uint64_t v11 = UICollectionViewListCell.accessories.getter();
    uint64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      uint64_t v14 = v10 + 16;
      id v13 = v15;
      unint64_t v16 = (*(unsigned __int8 *)(v14 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 64);
      v24[1] = v11;
      uint64_t v17 = v2;
      unint64_t v18 = v11 + v16;
      uint64_t v19 = *(void *)(v14 + 56);
      id v29 = (uint64_t (**)(void **, uint64_t))(v17 + 88);
      id v30 = (void (**)(char *, uint64_t))(v14 - 8);
      int v28 = enum case for UICellAccessory.AccessoryType.customView(_:);
      uint64_t v26 = (void (**)(void **, uint64_t))(v17 + 96);
      id v27 = (void (**)(void **, uint64_t))(v17 + 8);
      uint64_t v25 = v8;
      v15(v8, v11 + v16, v5);
      while (1)
      {
        UICellAccessory.accessoryType.getter();
        (*v30)(v8, v5);
        int v20 = (*v29)(v4, v1);
        if (v20 == v28)
        {
          (*v26)(v4, v1);
          id v21 = *v4;
          self;
          uint64_t v22 = swift_dynamicCastObjCClass();
          if (v22)
          {
            uint64_t v9 = v22;
            swift_bridgeObjectRelease();
            return v9;
          }

          objc_super v8 = v25;
        }
        else
        {
          (*v27)(v4, v1);
        }
        v18 += v19;
        if (!--v12) {
          break;
        }
        v13(v8, v18, v5);
      }
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

id sub_1000ADFE4(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_1000AE064()
{
  if (*(void *)&v0[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel])
  {
    uint64_t v1 = *(void *)TTRAccesibility.General.Hint.Edit.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
  }
  else
  {
    v5.receiver = v0;
    v5.super_class = (Class)swift_getObjectType();
    id v2 = [super accessibilityHint];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v1 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      return 0;
    }
  }
  return v1;
}

void sub_1000AE110(void *a1, uint64_t a2, NSString a3, SEL *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v8 = a1;
    a3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v9 = a1;
  }
  v10.receiver = a1;
  v10.super_class = ObjectType;
  [super a3];
}

uint64_t sub_1000AE1AC()
{
  if (!*(void *)(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel))
  {
    uint64_t v3 = sub_1000ADD08();
    if (v3)
    {
      id v4 = (void *)v3;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v2 = 1;
        objc_msgSend(v4, "setOn:animated:", objc_msgSend(v4, "isOn") ^ 1, 1);
        sub_10020CA68((char)[v4 isOn]);
        swift_unknownObjectRelease();

        return v2;
      }
    }
    return 0;
  }
  uint64_t v1 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  if ([*(id *)(v0 + OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField) isEditing])return 0; {
  [*(id *)(v0 + v1) becomeFirstResponder];
  }
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, *(id *)(v0 + v1));
  return 1;
}

id sub_1000AE2EC(double a1, double a2, double a3, double a4)
{
  objc_super v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  id v12 = objc_allocWithZone((Class)UITextField);
  id v13 = v4;
  *(void *)&v5[v11] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)UILabel) init];
  v13[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v15 = &v13[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *(_OWORD *)(v15 + 25) = 0u;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_nameFields] = 0;
  *(void *)&v13[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints] = 0;

  v17.receiver = v13;
  v17.super_class = ObjectType;
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1000AE450(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v5 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField;
  id v6 = objc_allocWithZone((Class)UITextField);
  NSString v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_canonicalNameField;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UILabel) init];
  v7[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  id v9 = &v7[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
  *(_OWORD *)id v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *(_OWORD *)(v9 + 25) = 0u;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_listContentView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_nameFields] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_sectionCellConstraints] = 0;

  v12.receiver = v7;
  v12.super_class = ObjectType;
  id v10 = [super initWithCoder:a1];

  return v10;
}

uint64_t type metadata accessor for TTRIEditSectionsCell()
{
  return self;
}

NSString sub_1000AE674()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_1007898D0 = (uint64_t)result;
  return result;
}

uint64_t sub_1000AE6AC(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_bridgeObjectRetain();
    id v2 = v1;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1000AE6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789940);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000AE760(uint64_t a1)
{
  if (qword_100785228 != -1) {
    swift_once();
  }
  id v2 = (void *)qword_1007898D0;
  sub_1000AE6F8(a1, (uint64_t)&v6);
  if ((void)v6)
  {
    id v3 = v2;
    sub_1000AE85C(a1, (void (*)(void, void, void, void, void, void))sub_1000AE6AC);
    swift_dynamicCast();
  }
  else
  {
    id v4 = v2;
  }
  return UICellConfigurationState.subscript.setter();
}

uint64_t sub_1000AE85C(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

void *sub_1000AE89C(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1000AE8E8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v2 = [v0 imageView];
  id v3 = v2;
  if (v2)
  {
    [v2 transform];
    uint64_t v5 = *((void *)&v15 + 1);
    uint64_t v4 = v15;
    uint64_t v7 = *((void *)&v16 + 1);
    uint64_t v6 = v16;
    uint64_t v9 = *((void *)&v17 + 1);
    uint64_t v8 = v17;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  id v10 = [v0 imageView];
  if (v10)
  {
    uint64_t v11 = v10;
    long long v12 = *(_OWORD *)&CGAffineTransformIdentity.c;
    long long v15 = *(_OWORD *)&CGAffineTransformIdentity.a;
    long long v16 = v12;
    long long v17 = *(_OWORD *)&CGAffineTransformIdentity.tx;
    [v10 setTransform:&v15];
  }
  v18.receiver = v0;
  v18.super_class = ObjectType;
  [super layoutSubviews];
  if (v3)
  {
    id v13 = [v0 imageView];
    if (v13)
    {
      uint64_t v14 = v13;
      *(void *)&long long v15 = v4;
      *((void *)&v15 + 1) = v5;
      *(void *)&long long v16 = v6;
      *((void *)&v16 + 1) = v7;
      *(void *)&long long v17 = v8;
      *((void *)&v17 + 1) = v9;
      [v13 setTransform:&v15];
    }
  }
}

void sub_1000AEB70(char a1)
{
  id v3 = [v1 imageView];
  if (v3)
  {
    uint64_t v4 = v3;
    if (a1) {
      double v5 = 1.0;
    }
    else {
      double v5 = -1.0;
    }
    id v6 = [v1 traitCollection];
    id v7 = [v6 layoutDirection];

    double v8 = -v5;
    if (v7 != (id)1) {
      double v8 = v5;
    }
    double v9 = v8 * 90.0 * 0.0174532925;
    id v10 = self;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v4;
    *(double *)(v11 + 24) = v9;
    v14[4] = sub_1000AF248;
    v14[5] = v11;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_10000AD88;
    v14[3] = &unk_100738290;
    long long v12 = _Block_copy(v14);
    id v13 = v4;
    swift_release();
    [v10 animateWithDuration:v12 animations:0.3];

    _Block_release(v12);
  }
}

id sub_1000AED00(void *a1, CGFloat a2)
{
  [a1 transform];
  CGAffineTransformRotate(&v5, &v6, a2);
  CGAffineTransform v6 = v5;
  return [a1 setTransform:&v6];
}

uint64_t type metadata accessor for TTRIOutlineDisclosureButton()
{
  return self;
}

uint64_t sub_1000AEE64()
{
  uint64_t v0 = sub_10003B754(&qword_100789970);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  CGAffineTransform v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  double v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for UIButton.Configuration.TitleAlignment();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.plain()();
  UIAccessibilityButtonShapesEnabled();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [self systemImageNamed:v13];

  UIButton.Configuration.image.setter();
  UIButton.Configuration.imagePlacement.setter();
  UIButton.Configuration.imageReservation.setter();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for UIButton.Configuration.TitleAlignment.leading(_:), v9);
  UIButton.Configuration.titleAlignment.setter();
  UIButton.Configuration.contentInsets.setter();
  static UIBackgroundConfiguration.clear()();
  id v15 = [self clearColor];
  UIBackgroundConfiguration.backgroundColor.setter();
  UIConfigurationColorTransformer.init(_:)();
  uint64_t v16 = type metadata accessor for UIConfigurationColorTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v2, 0, 1, v16);
  UIBackgroundConfiguration.backgroundColorTransformer.setter();
  uint64_t v17 = v20;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v20);
  UIButton.Configuration.background.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v17);
}

id sub_1000AF1D0()
{
  id v0 = [self clearColor];

  return v0;
}

uint64_t sub_1000AF210()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_1000AF248()
{
  return sub_1000AED00(*(void **)(v0 + 16), *(CGFloat *)(v0 + 24));
}

uint64_t sub_1000AF254(uint64_t a1)
{
  type metadata accessor for TTRIQuickLookPreviewController();
  sub_10003B754(&qword_1007938E0);
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066C6F0;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v3 + 16))(v5 + v4, a1, v2);
  return TTRIQuickLookPreviewController.__allocating_init(previewItemURLs:)();
}

uint64_t (*sub_1000AF340(uint64_t a1, char a2))()
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  if (URL.isFileURL.getter() & 1) != 0 && (a2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v8 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v8 + v7, (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    return sub_1000AF64C;
  }
  if (URL.isHTTPOrHTTPSURL.getter())
  {
    id v11 = [self sharedConnection];
    if (!v11
      || (long long v12 = v11,
          unsigned int v13 = [v11 effectiveBoolValueForSetting:MCFeatureSafariAllowed],
          v12,
          v13 != 2))
    {
      id v14 = self;
      URL._bridgeToObjectiveC()(v15);
      uint64_t v17 = v16;
      id v18 = [v14 previewViewProviderForURL:v16 context:0];

      if (v18)
      {
        *(void *)(swift_allocObject() + 16) = v18;
        return (uint64_t (*)())sub_1000AF584;
      }
    }
  }
  return 0;
}

uint64_t sub_1000AF54C()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000AF584()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();

  return v1;
}

uint64_t sub_1000AF5BC()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000AF64C()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_1000AF254(v2);
}

uint64_t sub_1000AF6AC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1000AF714()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100789978);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100789978);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000AF7DC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)((char *)v0 + *(void *)(*v0 + 312));
  if (v2
    && (uint64_t v3 = v2[13],
        uint64_t v4 = v2[14],
        sub_100038D28(v2 + 10, v3),
        uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 24),
        swift_unknownObjectRetain(),
        char v6 = v5(v3, v4),
        swift_unknownObjectRelease(),
        (v6 & 1) != 0))
  {
    return 1;
  }
  else
  {
    return (*(uint64_t (**)(void))(*(void *)(v1 + 248) + 32))(*(void *)(v1 + 232)) & 1;
  }
}

void sub_1000AF8D0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)*v0;
  uint64_t v3 = v2[31];
  uint64_t v4 = v2[29];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  __chkstk_darwin(AssociatedTypeWitness);
  char v6 = (void *)((char *)v1 + v2[38]);
  if (*v6)
  {
    id v49 = v2;
    uint64_t v7 = v6[1];
    uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 24);
    swift_unknownObjectRetain();
    v8(v4, v3);
    uint64_t v9 = sub_1000368FC(0, &qword_100789A38);
    if (!swift_dynamicCast())
    {
      if (qword_100785230 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_100018BF8(v33, (uint64_t)qword_100789978);
      id v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v34, v35))
      {
        id v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "Attempted to convert a non list to a custom smart list", v36, 2u);
        swift_slowDealloc();
        swift_unknownObjectRelease();

        return;
      }

      goto LABEL_27;
    }
    uint64_t v10 = aBlock;
    uint64_t ObjectType = swift_getObjectType();
    id v54 = (void *)v9;
    id v55 = &protocol witness table for REMListChangeItem;
    aBlock = v10;
    long long v12 = *(uint64_t (**)(void ***, uint64_t, uint64_t))(v7 + 8);
    id v48 = v10;
    uint64_t v13 = v12(&aBlock, ObjectType, v7);
    unint64_t v15 = v14;
    uint64_t v17 = v16;
    sub_100038CD8((uint64_t)&aBlock);
    TTRListToCustomSmartListConverterValidation.alertTitleString.getter();
    uint64_t v47 = v13;
    TTRListToCustomSmartListConverterValidation.alertDetailString.getter();
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v20 = [self alertControllerWithTitle:v18 message:v19 preferredStyle:1];

    if (v15 - 1 >= 2)
    {
      if (v15) {
        BOOL v21 = v15 == 3;
      }
      else {
        BOOL v21 = 1;
      }
      if (!v21)
      {
        swift_bridgeObjectRetain();
        static TTRLocalizableStrings.Common.alertCancelButton.getter();
        NSString v37 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v45 = self;
        id v46 = [v45 actionWithTitle:v37 style:1 handler:0];

        [v20 addAction:v46];
        static TTRLocalizableStrings.ConvertToCustomSmartListAlert.makeConfirmButtonString.getter();
        uint64_t v38 = swift_allocObject();
        swift_weakInit();
        uint64_t v39 = (void *)swift_allocObject();
        v39[2] = v4;
        v39[3] = v49[30];
        v39[4] = v3;
        v39[5] = v49[32];
        v39[6] = v38;
        id v40 = v48;
        v39[7] = v48;
        v39[8] = v17;
        id v41 = v48;
        swift_retain();
        NSString v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v55 = sub_1000B3490;
        id v56 = v39;
        aBlock = _NSConcreteStackBlock;
        uint64_t v52 = 1107296256;
        id v53 = sub_1001077FC;
        id v54 = &unk_100738500;
        id v43 = _Block_copy(&aBlock);
        swift_release();
        id v44 = [v45 actionWithTitle:v42 style:0 handler:v43];
        _Block_release(v43);
        swift_release();

        [v20 addAction:v44];
        sub_1000B33C8(v47, v15);
        goto LABEL_11;
      }
      static TTRLocalizableStrings.Common.settingsButton.getter();
      NSString v22 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v55 = sub_1000B0574;
      id v56 = 0;
      aBlock = _NSConcreteStackBlock;
      uint64_t v52 = 1107296256;
      id v53 = sub_1001077FC;
      id v54 = &unk_100738488;
      id v23 = _Block_copy(&aBlock);
      swift_release();
      id v24 = [self actionWithTitle:v22 style:0 handler:v23];
      _Block_release(v23);

      [v20 addAction:v24];
    }
    static TTRLocalizableStrings.Common.alertOKButton.getter();
    NSString v25 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v26 = [self actionWithTitle:v25 style:0 handler:0];

    [v20 addAction:v26];
    [v20 setPreferredAction:v26];

    id v40 = v48;
LABEL_11:
    sub_100038D28((void *)((char *)v1 + *(void *)(*v1 + 296)), *(void *)((char *)v1 + *(void *)(*v1 + 296) + 24));
    Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      int v28 = Strong;
      id v29 = [Strong navigationController];

      if (v29)
      {
        [v29 presentViewController:v20 animated:1 completion:0];
        swift_unknownObjectRelease();

        return;
      }
    }

LABEL_27:
    swift_unknownObjectRelease();
    return;
  }
  if (qword_100785230 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_100018BF8(v30, (uint64_t)qword_100789978);
  id v50 = Logger.logObject.getter();
  os_log_type_t v31 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v50, v31))
  {
    id v32 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v32 = 0;
    _os_log_impl((void *)&_mh_execute_header, v50, v31, "Attempted to convert a list to a custom smart list with a nil converter", v32, 2u);
    swift_slowDealloc();
  }
}

void sub_1000B00F4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    if (qword_100785230 != -1) {
      swift_once();
    }
    uint64_t v17 = sub_100018BF8(v11, (uint64_t)qword_100789978);
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v17, v11);
    sub_10003B754((uint64_t *)&unk_100788E30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = 0x44497463656A626FLL;
    *(void *)(inited + 40) = 0xE800000000000000;
    id v19 = [a3 objectID];
    *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
    *(void *)(inited + 48) = v19;
    sub_10003D820(inited);
    sub_10001A078();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v20 = swift_unknownObjectWeakLoadStrong();
    if (v20)
    {
      sub_100038D28((void *)(v20 + 48), *(void *)(v20 + 72));
      if (qword_1007851C0 != -1) {
        swift_once();
      }
      sub_100018BF8(v11, (uint64_t)qword_1007878B0);
      sub_1003AA294(0xD000000000000015, 0x80000001006A75B0);
      BOOL v21 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v21
        && (NSString v22 = v21,
            id v23 = [v21 presentingViewController],
            v22,
            v23))
      {
        [v23 dismissViewControllerAnimated:1 completion:0];
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    id v24 = (void *)swift_allocObject();
    void v24[2] = v16;
    v24[3] = a3;
    v24[4] = a4;
    NSString v25 = *(uint64_t (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(a7 + 104);
    swift_unknownObjectRetain();
    swift_retain();
    id v26 = a3;
    swift_bridgeObjectRetain();
    id v27 = (void *)v25(sub_1000B34EC, v24, a5, a7);
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
  }
}

uint64_t sub_1000B0490(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a1 + *(void *)(*(void *)a1 + 272);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = *(void *)(v6 + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v10 = [a2 objectID];
    (*(void (**)(uint64_t, _UNKNOWN **, id, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, &off_100738418, v10, a3, ObjectType, v8);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000B0574()
{
  id v0 = [self defaultWorkspace];
  if (v0)
  {
    id v1 = v0;
    LSApplicationWorkspace.showDefaultListInSettings()();
  }
}

uint64_t sub_1000B05EC()
{
  v1[12] = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = type metadata accessor for Logger();
  v1[13] = v3;
  v1[14] = *(void *)(v3 - 8);
  v1[15] = swift_task_alloc();
  v1[16] = *(void *)(v2 + 248);
  v1[17] = *(void *)(v2 + 232);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[18] = AssociatedTypeWitness;
  v1[19] = *(void *)(AssociatedTypeWitness - 8);
  v1[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[21] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[22] = v6;
  v1[23] = v5;
  return _swift_task_switch(sub_1000B0780, v6, v5);
}

uint64_t sub_1000B0780()
{
  if (TTRListDetailPresenter.shouldPresentConfirmationAlertForRemovingExistingSections()())
  {
    id v1 = (void *)swift_task_alloc();
    v0[24] = v1;
    void *v1 = v0;
    v1[1] = sub_1000B0B44;
    return sub_1000B0FC8();
  }
  else
  {
    swift_release();
    (*(void (**)(void))(v0[16] + 24))(v0[17]);
    if (qword_100785230 != -1) {
      swift_once();
    }
    uint64_t v3 = v0[18];
    uint64_t v4 = v0[15];
    uint64_t v6 = v0[13];
    uint64_t v5 = v0[14];
    uint64_t v7 = sub_100018BF8(v6, (uint64_t)qword_100789978);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v6);
    sub_10003B754((uint64_t *)&unk_100788E30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = 0x44497463656A626FLL;
    *(void *)(inited + 40) = 0xE800000000000000;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v3, AssociatedConformanceWitness);
    *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
    *(void *)(inited + 48) = v10;
    sub_10003D820(inited);
    sub_10001A078();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      sub_100038D28((void *)(Strong + 48), *(void *)(Strong + 72));
      if (qword_1007851C0 != -1) {
        swift_once();
      }
      sub_100018BF8(v0[13], (uint64_t)qword_1007878B0);
      sub_1003AA294(0xD000000000000015, 0x80000001006A75B0);
      uint64_t v12 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = [v12 presentingViewController];

        if (v14)
        {
          [v14 dismissViewControllerAnimated:1 completion:0];
        }
      }
      swift_unknownObjectRelease();
    }
    uint64_t v16 = v0[19];
    uint64_t v15 = v0[20];
    uint64_t v17 = v0[18];
    NSString v18 = (void *)sub_100108AB0(v0[17], v0[16]);
    sub_1000B1674((uint64_t)v18, v19);

    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v20 = (uint64_t (*)(void))v0[1];
    return v20();
  }
}

uint64_t sub_1000B0B44(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 200) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return _swift_task_switch(sub_1000B0C6C, v4, v3);
}

uint64_t sub_1000B0C6C()
{
  int v1 = *(unsigned __int8 *)(v0 + 200);
  swift_release();
  if ((v1 - 2) >= 2)
  {
    if (v1) {
      TTRListDetailPresenter.removeExistingSections()();
    }
    (*(void (**)(void))(*(void *)(v0 + 128) + 24))(*(void *)(v0 + 136));
    if (qword_100785230 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 144);
    uint64_t v3 = *(void *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 104);
    uint64_t v4 = *(void *)(v0 + 112);
    uint64_t v6 = sub_100018BF8(v5, (uint64_t)qword_100789978);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v6, v5);
    sub_10003B754((uint64_t *)&unk_100788E30);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = 0x44497463656A626FLL;
    *(void *)(inited + 40) = 0xE800000000000000;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(v2, AssociatedConformanceWitness);
    *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
    *(void *)(inited + 48) = v9;
    sub_10003D820(inited);
    sub_10001A078();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      sub_100038D28((void *)(Strong + 48), *(void *)(Strong + 72));
      if (qword_1007851C0 != -1) {
        swift_once();
      }
      sub_100018BF8(*(void *)(v0 + 104), (uint64_t)qword_1007878B0);
      sub_1003AA294(0xD000000000000015, 0x80000001006A75B0);
      uint64_t v11 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v11)
      {
        uint64_t v12 = v11;
        id v13 = [v11 presentingViewController];

        if (v13)
        {
          [v13 dismissViewControllerAnimated:1 completion:0];
        }
      }
      swift_unknownObjectRelease();
    }
    uint64_t v15 = *(void *)(v0 + 152);
    uint64_t v14 = *(void *)(v0 + 160);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v17 = (void *)sub_100108AB0(*(void *)(v0 + 136), *(void *)(v0 + 128));
    sub_1000B1674((uint64_t)v17, v18);

    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_1000B0FC8()
{
  v1[36] = v0;
  v1[37] = *v0;
  type metadata accessor for MainActor();
  v1[38] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[39] = v3;
  v1[40] = v2;
  return _swift_task_switch(sub_1000B1088, v3, v2);
}

uint64_t sub_1000B1088()
{
  TTRListDetailPresenter.viewModel.getter(v0 + 16);
  sub_100028C3C(v0 + 208, v0 + 256, &qword_100789A28);
  sub_1000B326C(v0 + 256);
  sub_1000B3298(v0 + 16);
  sub_100028C3C(v0 + 256, v0 + 272, &qword_100789A28);
  if (*(void *)(v0 + 272))
  {
    uint64_t v1 = *(void *)(v0 + 280);
    uint64_t ObjectType = swift_getObjectType();
    char v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 16))(ObjectType, v1);
    sub_1000B339C(v0 + 256);
    sub_1000368FC(0, (unint64_t *)&qword_100789A30);
    if (v3)
    {
      uint64_t v4 = 0xD00000000000001ELL;
      unint64_t v5 = 0xD000000000000082;
      uint64_t v6 = (void *)0x80000001006A7830;
      uint64_t v7 = (void *)0x80000001006A7850;
      unint64_t v8 = 0x80000001006A77A0;
      uint64_t v9 = 0x6C6F43207065654BLL;
      unint64_t v10 = 0xED00003F736E6D75;
      uint64_t v11 = 0xD000000000000084;
      goto LABEL_6;
    }
  }
  else
  {
    sub_1000368FC(0, (unint64_t *)&qword_100789A30);
  }
  uint64_t v4 = 0xD00000000000001FLL;
  unint64_t v5 = 0xD000000000000083;
  uint64_t v11 = 0xD000000000000085;
  uint64_t v6 = (void *)0x80000001006A7660;
  uint64_t v7 = (void *)0x80000001006A7680;
  unint64_t v8 = 0x80000001006A75D0;
  uint64_t v9 = 0x636553207065654BLL;
  unint64_t v10 = 0xEE003F736E6F6974;
LABEL_6:
  uint64_t v13 = *(void *)(v0 + 288);
  uint64_t v12 = *(void *)(v0 + 296);
  TTRLocalizedString(_:comment:)(*(Swift::String *)&v9, *(Swift::String *)&v5);
  v14._countAndFlagsBits = v4;
  v14._object = v6;
  v15._countAndFlagsBits = v11;
  v15._object = v7;
  TTRLocalizedString(_:comment:)(v14, v15);
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v18 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v16 message:v17 preferredStyle:1];
  *(void *)(v0 + 328) = v18;

  sub_100038D28((void *)(v13 + *(void *)(*(void *)v13 + 296)), *(void *)(v13 + *(void *)(*(void *)v13 + 296) + 24));
  long long v19 = *(_OWORD *)(v12 + 248);
  *(_OWORD *)(v0 + 224) = *(_OWORD *)(v12 + 232);
  *(_OWORD *)(v0 + 240) = v19;
  uint64_t v20 = type metadata accessor for TTRListDetailPresenter.ConvertGroceryListToRegularListConfirmationAlertResponse();
  type metadata accessor for TTRIValueBasedAlertAction();
  type metadata accessor for _ContiguousArrayStorage();
  swift_allocObject();
  uint64_t v21 = static Array._adoptStorage(_:count:)();
  v22._countAndFlagsBits = 1885693259;
  v22._object = (void *)0xE400000000000000;
  v23._countAndFlagsBits = 0xD000000000000084;
  v23._object = (void *)0x80000001006A7710;
  TTRLocalizedString(_:comment:)(v22, v23);
  *(unsigned char *)(v0 + 353) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  v24._countAndFlagsBits = 0x65766F6D6552;
  v24._object = (void *)0xE600000000000000;
  v25._countAndFlagsBits = 0xD000000000000084;
  v25._object = (void *)0x80000001006A7710;
  TTRLocalizedString(_:comment:)(v24, v25);
  *(unsigned char *)(v0 + 354) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  *(unsigned char *)(v0 + 355) = 2;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  uint64_t v26 = sub_1000EA1C8(v21);
  *(void *)(v0 + 336) = v26;
  id v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v27;
  *id v27 = v0;
  v27[1] = sub_1000B14C0;
  return sub_1002A5E98(v0 + 352, (uint64_t)v18, v26, v20);
}

uint64_t sub_1000B14C0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 320);
  uint64_t v3 = *(void *)(v1 + 312);
  return _swift_task_switch(sub_1000B1604, v3, v2);
}

uint64_t sub_1000B1604()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 352);
  return v1(v2);
}

uint64_t sub_1000B1674(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 272);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = *(void *)(v5 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, BOOL, uint64_t, uint64_t))(v7 + 8))(v2, &off_100738418, a1, a2, (*(unsigned char *)(v2 + *(void *)(*(void *)v2 + 288)) & 1) == 0, ObjectType, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000B1758()
{
  if (qword_100785230 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_100789978);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  sub_100038D28((void *)(v0 + *(void *)(*(void *)v0 + 296)), *(void *)(v0 + *(void *)(*(void *)v0 + 296) + 24));
  sub_1002A6240();
}

uint64_t sub_1000B1828()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 272);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v3 + 16))(v0, &off_100738418, ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000B18CC()
{
}

uint64_t sub_1000B18FC()
{
  sub_1000499D4(v0 + *(void *)(*(void *)v0 + 264));
  sub_1000499D4(v0 + *(void *)(*(void *)v0 + 272));
  sub_1000499D4(v0 + *(void *)(*(void *)v0 + 280));
  sub_100038CD8(v0 + *(void *)(*(void *)v0 + 296));
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t *sub_1000B19C4()
{
  uint64_t v0 = TTRListDetailPresenter.deinit();
  sub_1000499D4((uint64_t)v0 + *(void *)(*v0 + 264));
  sub_1000499D4((uint64_t)v0 + *(void *)(*v0 + 272));
  sub_1000499D4((uint64_t)v0 + *(void *)(*v0 + 280));
  sub_100038CD8((uint64_t)v0 + *(void *)(*v0 + 296));
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_1000B1A94()
{
  sub_1000B19C4();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIListDetailPresenter()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1000B1B00()
{
  return *(unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 288));
}

uint64_t sub_1000B1B24()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000C2D4;
  return sub_1000B05EC();
}

uint64_t sub_1000B1BB8()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1002AAD30();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000B1C20(uint64_t a1@<X8>)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  long long v3 = 0uLL;
  if (Strong)
  {
    uint64_t v4 = swift_unknownObjectWeakLoadStrong();
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)();
      uint64_t v6 = v13;
      uint64_t v7 = v14;
      uint64_t v8 = v15;
      char v9 = v16;
      swift_unknownObjectRelease();

      long long v10 = v12;
      long long v3 = v11;
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v6 = 0;
      uint64_t v8 = 0;
      char v9 = 0;
      uint64_t v7 = 254;
      long long v10 = 0uLL;
      long long v3 = 0uLL;
    }
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    char v9 = 0;
    uint64_t v7 = 254;
    long long v10 = 0uLL;
  }
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(unsigned char *)(a1 + 56) = v9;
}

uint64_t sub_1000B1D2C(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + *(void *)(*(void *)v2 + 280) + 8) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

uint64_t sub_1000B1D84@<X0>(uint64_t a1@<X8>)
{
  sub_1000B1C20((uint64_t)v3);
  return sub_100028C3C((uint64_t)v3, a1, (uint64_t *)&unk_10078AC10);
}

id sub_1000B1DD0(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_1000B35AC(a3);
}

id sub_1000B1DE0(uint64_t a1, unsigned char *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_tableDataController] = 0;
  a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_ttrAccessibilityShouldAnnounceOptionChanges] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___prioritySection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___priorityGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagsSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagsGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___disabledFiltersGroup] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___documentationSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorSection] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___enabledFilters] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___dateOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell1] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell1] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___relativeRangeCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDateDetailCell2] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___compactDatePickerCell2] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell1] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___regularWidthDatePickerCell2] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___includePastDueRemindersCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___timeOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___priorityOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___flaggedOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationQuickPicksCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___locationDetailCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagCollectionCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___hashtagToggleShowMoreCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listsOptionsCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___listPopoverCell] = 0;
  *(void *)&a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController____lazy_storage___filterOperatorCell] = 0;
  uint64_t v5 = &a2[OBJC_IVAR____TtC9Reminders39TTRISmartListFilterEditorViewController_presenter];
  void *v5 = a1;
  v5[1] = &off_1007482C8;
  v7.receiver = a2;
  v7.super_class = ObjectType;
  return [super initWithNibName:0 bundle:0];
}

id sub_1000B2034(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v51 = a7;
  uint64_t v52 = a6;
  LODWORD(v53) = a2 & 1;
  id v11 = objc_allocWithZone((Class)TTRUndoManager);
  swift_retain();
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 initWithDebugIdentifier:v12];

  type metadata accessor for TTRGeoLocationService();
  unsigned __int8 v14 = (void *)static TTRGeoLocationService.newService(authorizationSource:)();
  type metadata accessor for TTRSmartListFilterEditorInteractor();
  swift_allocObject();
  id v15 = a1;
  id v16 = a4;
  id v46 = (char *)v13;
  uint64_t v47 = TTRSmartListFilterEditorInteractor.init(filter:store:undoManager:)(a1, v16, v46);
  uint64_t v17 = sub_100520FEC(v16, v14);
  type metadata accessor for TTRISmartListFilterEditorRouter();
  id v18 = (char *)swift_allocObject();
  id v49 = v18 + 16;
  swift_unknownObjectWeakInit();
  sub_1000368FC(0, (unint64_t *)&qword_100787188);
  swift_retain();
  static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter();
  long long v19 = self;
  id v50 = v14;
  id v20 = [v19 daemonUserDefaults];
  type metadata accessor for TTRIPrivacyChecker();
  swift_allocObject();
  uint64_t v54 = TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)();
  id v21 = [self sharedInstance];
  uint64_t v56 = sub_1000368FC(0, &qword_100789A48);
  id v57 = &off_100752250;
  *(void *)&long long v55 = v21;
  uint64_t v22 = type metadata accessor for TTRListDetailDeviceInfoProvider();
  uint64_t v23 = swift_allocObject();
  id v48 = v21;
  id v24 = a3;
  swift_defaultActor_initialize();
  *(void *)(v23 + 160) = 0;
  *(_WORD *)(v23 + 168) = 0;
  sub_100038ED8(&v55, v23 + 112);
  *(void *)(v23 + 152) = v24;
  uint64_t v56 = v22;
  id v57 = &off_1007522E8;
  *(void *)&long long v55 = v23;
  type metadata accessor for TTRISmartListFilterEditorPresenter(0);
  uint64_t v45 = swift_allocObject();
  uint64_t v25 = sub_100038E88((uint64_t)&v55, v22);
  __chkstk_darwin(v25);
  id v27 = (uint64_t *)((char *)&v45 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v28 + 16))(v27);
  uint64_t v29 = *v27;
  swift_retain();
  id v30 = v16;
  os_log_type_t v31 = v46;
  swift_retain();
  id v32 = v24;
  uint64_t v33 = v47;
  swift_retain();
  swift_retain();
  uint64_t v34 = v54;
  swift_retain();
  swift_retain();
  char v35 = v53;
  uint64_t v53 = a5;
  uint64_t v36 = sub_1000B25E8(v35, v32, v33, v17, (uint64_t)v18, v34, v29, a5, v30, v31, v45);

  swift_release();
  id v46 = v18;
  swift_release();
  swift_release();

  sub_100038CD8((uint64_t)&v55);
  NSString v37 = objc_allocWithZone((Class)type metadata accessor for TTRISmartListFilterEditorViewController());
  uint64_t v38 = swift_retain();
  id v39 = sub_1000B1DE0(v38, v37);
  swift_beginAccess();
  *(void *)(v33 + 24) = &off_1007482B8;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *(void *)(v17 + 24) = &off_100748278;
  swift_unknownObjectWeakAssign();
  *(void *)(v36 + 24) = &off_10073FBB0;
  swift_unknownObjectWeakAssign();
  *(void *)(v36 + 40) = v51;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v40 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v39];
  id v41 = [v40 presentationController];
  if (v41)
  {
    NSString v42 = v41;
    id v43 = v39;
    [v42 setDelegate:v43];

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_release();
  }

  swift_release();
  swift_release();

  swift_release();
  return v40;
}

uint64_t sub_1000B25E8(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, void *a10, uint64_t a11)
{
  uint64_t v38 = a6;
  uint64_t v37 = a5;
  id v40 = a10;
  id v39 = a9;
  char v16 = a1 & 1;
  uint64_t v43 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel() - 8;
  __chkstk_darwin(v43);
  NSString v42 = (uint64_t *)((char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v41 = *(void *)(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  id v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v37 - v22;
  v46[3] = type metadata accessor for TTRSmartListVersionWarningInteractor();
  v46[4] = &protocol witness table for TTRSmartListVersionWarningInteractor;
  v46[0] = a8;
  v45[3] = type metadata accessor for TTRSmartListFilterEditorInteractor();
  v45[4] = &protocol witness table for TTRSmartListFilterEditorInteractor;
  v45[0] = a3;
  v44[3] = type metadata accessor for TTRListDetailDeviceInfoProvider();
  v44[4] = &off_1007522E8;
  v44[0] = a7;
  *(void *)(a11 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a11 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a11 + 56) = 0;
  *(unsigned char *)(a11 + 64) = 0;
  *(void *)(a11 + 280) = 0;
  *(unsigned char *)(a11 + 288) = 0;
  *(void *)(a11 + 296) = 0;
  *(void *)(a11 + 304) = 0;
  *(_WORD *)(a11 + 312) = 1;
  *(unsigned char *)(a11 + 65) = v16;
  *(void *)(a11 + 72) = a2;
  sub_1000145EC((uint64_t)v45, a11 + 80);
  *(void *)(a11 + 264) = a4;
  *(void *)(a11 + 272) = &protocol witness table for TTRLocationQuickPicksInteractor;
  *(void *)(a11 + 144) = type metadata accessor for TTRISmartListFilterEditorRouter();
  *(void *)(a11 + 152) = &off_1007399B0;
  *(void *)(a11 + 120) = v37;
  *(void *)(a11 + 160) = v38;
  sub_1000145EC((uint64_t)v44, a11 + 168);
  sub_1000145EC((uint64_t)v46, a11 + 224);
  id v24 = v39;
  *(void *)(a11 + 208) = v39;
  uint64_t v25 = v40;
  *(void *)(a11 + 48) = v40;
  id v26 = a2;
  id v27 = v21;
  swift_retain();
  swift_retain();
  swift_retain();
  id v28 = v24;
  id v29 = v25;
  static REMHashtagLabelSpecifier.empty.getter();
  uint64_t v30 = v41;
  (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(a11 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache, v23, v18);
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  static OS_dispatch_queue.main.getter();
  type metadata accessor for TTRDeferredAction();
  swift_allocObject();
  uint64_t v31 = TTRDeferredAction.init(queue:)();
  *(void *)(a11 + 216) = v31;
  swift_beginAccess();
  *(void *)(v31 + 24) = &off_100748288;
  swift_unknownObjectWeakAssign();
  id v32 = v42;
  sub_10039A4CC(v42);
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  v33(v27, (char *)v32 + *(int *)(v43 + 28), v18);
  sub_1000B34F8((uint64_t)v32);
  uint64_t v34 = (char *)(a11 + OBJC_IVAR____TtC9Reminders34TTRISmartListFilterEditorPresenter_hashtagLabelSelectionCache);
  swift_beginAccess();
  v33(v23, v34, v18);
  sub_1000B3554();
  LOBYTE(v31) = dispatch thunk of static Equatable.== infix(_:_:)();
  char v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  v35(v23, v18);
  if ((v31 & 1) == 0)
  {
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v34, v27, v18);
    swift_endAccess();
  }
  v35(v27, v18);
  sub_10039AC54();
  sub_100038CD8((uint64_t)v46);
  sub_100038CD8((uint64_t)v44);
  sub_100038CD8((uint64_t)v45);
  return a11;
}

void sub_1000B2A74()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = *(void *)(*v0 + 248);
  uint64_t v3 = *(void *)(*v0 + 232);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = __chkstk_darwin(AssociatedTypeWitness);
  NSString v42 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  __chkstk_darwin(v8);
  uint64_t v9 = v0[2];
  long long v10 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
  v10(v3, v2);
  sub_1000368FC(0, &qword_100789A40);
  if (swift_dynamicCast())
  {
    id v40 = v10;
    uint64_t v41 = v9;
    uint64_t v39 = v5;
    id v11 = v43;
    id v12 = [v43 customContext];
    if (v12)
    {
      id v13 = v12;
      unsigned __int8 v14 = (void *)REMSmartListCustomContextChangeItem.filter.getter();
    }
    else
    {
      unsigned __int8 v14 = 0;
    }
    id v18 = [v11 accountID];

    uint64_t v5 = v39;
    goto LABEL_13;
  }
  v10(v3, v2);
  type metadata accessor for TTRListDetailCreationChangeItem();
  if (swift_dynamicCast())
  {
    id v40 = v10;
    uint64_t v41 = v9;
    id v15 = v43;
    swift_beginAccess();
    unsigned __int8 v14 = (void *)v15[9];
    char v16 = (void *)v15[3];
    id v17 = v14;
    id v18 = [v16 objectID];
    swift_release();
LABEL_13:
    uint64_t v23 = v42;
    v40(v3, v2);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v25 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v23, AssociatedTypeWitness);
    id v26 = [v25 store];

    id v27 = sub_100038D28((void *)(v1 + *(void *)(*(void *)v1 + 296)), *(void *)(v1 + *(void *)(*(void *)v1 + 296) + 24));
    char v28 = *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 288));
    uint64_t v29 = *(void *)(*v27 + 24);
    swift_retain();
    id v30 = sub_1000B2034(v14, v28, v18, v26, v29, v1, (uint64_t)&off_1007383C0);
    uint64_t v32 = v31;
    uint64_t v34 = v33;
    swift_release();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v36 = Strong;
      [Strong presentViewController:v30 animated:1 completion:0];

      id v18 = v36;
    }

    uint64_t v37 = (void *)(v1 + *(void *)(*(void *)v1 + 312));
    *uint64_t v37 = v32;
    v37[1] = v34;
    swift_unknownObjectRelease();
    return;
  }
  if (qword_100785230 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100018BF8(v19, (uint64_t)qword_100789978);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "Unable to request filter editor", v22, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1000B2F3C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + 248);
  uint64_t v7 = *(void *)(v1 + 232);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v10 = (char *)&v16 - v9;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  if (qword_100785230 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v2, (uint64_t)qword_100789978);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v11, v2);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v14;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1004F52D8();
    swift_unknownObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v10, AssociatedTypeWitness);
}

uint64_t sub_1000B326C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B3298(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  char v8 = *(unsigned char *)(a1 + 80);
  uint64_t v9 = *(void **)(a1 + 88);
  char v11 = *(unsigned char *)(a1 + 104);
  id v12 = *(id *)(a1 + 96);
  id v13 = *(void **)(a1 + 112);
  uint64_t v14 = *(void **)(a1 + 144);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003B9C0(v2, v3, v4, v5, v6, v7, v8);
  sub_10003B9B0(v9, v12, v11);
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return a1;
}

uint64_t sub_1000B339C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000B33C8(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000B3410()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000B3448()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_1000B3490(uint64_t a1)
{
  sub_1000B00F4(a1, *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1000B34A4()
{
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000B34EC()
{
  return sub_1000B0490(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1000B34F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRISmartListFilterEditorHashtagsViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1000B3554()
{
  unint64_t result = qword_100788D40;
  if (!qword_100788D40)
  {
    type metadata accessor for REMHashtagLabelSpecifier();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100788D40);
  }
  return result;
}

id sub_1000B35AC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785230 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v4, (uint64_t)qword_100789978);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 28532;
  *(void *)(inited + 40) = 0xE200000000000000;
  aBlock[0] = a1;
  sub_10003B754(&qword_100789A50);
  uint64_t v10 = Optional.descriptionOrNil.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (a1)
  {
    id v12 = a1;
    REMCustomSmartListFilterDescriptor.postFilterAnalytics()();
  }
  id v13 = (void *)(v2 + *(void *)(*(void *)v2 + 312));
  *id v13 = 0;
  v13[1] = 0;
  swift_unknownObjectRelease();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id result = [Strong view];
    if (!result) {
      goto LABEL_10;
    }
    self;
    uint64_t v16 = swift_dynamicCastObjCClassUnconditional();
    id v27 = (void *)sub_1000368FC(0, (unint64_t *)&qword_10078E3B0);
    char v28 = (uint64_t (*)())&protocol witness table for UITableView;
    aBlock[0] = v16;
    UIViewController.deselectRowsAlongsideTransition(for:animated:)();
    sub_100038CD8((uint64_t)aBlock);
    swift_unknownObjectRelease();
  }
  v17._object = (void *)0x80000001006A7960;
  v18._countAndFlagsBits = 0x462065676E616843;
  v18._object = (void *)0xED00007265746C69;
  v17._countAndFlagsBits = 0xD000000000000030;
  TTRLocalizedString(_:comment:)(v18, v17);
  uint64_t v19 = self;
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v2;
  *(void *)(v21 + 24) = a1;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_1000B3C9C;
  *(void *)(v22 + 24) = v21;
  char v28 = sub_1000218B0;
  uint64_t v29 = v22;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  id v27 = &unk_1007385A0;
  uint64_t v23 = _Block_copy(aBlock);
  id v24 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  [v19 withActionName:v20 block:v23];

  _Block_release(v23);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  id result = (id)swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0) {
    return result;
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

id sub_1000B39E8()
{
  uint64_t v1 = (void *)(v0 + *(void *)(*(void *)v0 + 312));
  void *v1 = 0;
  v1[1] = 0;
  swift_unknownObjectRelease();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id result = [result view];
    if (result)
    {
      self;
      uint64_t v3 = swift_dynamicCastObjCClassUnconditional();
      v4[3] = sub_1000368FC(0, (unint64_t *)&qword_10078E3B0);
      v4[4] = &protocol witness table for UITableView;
      v4[0] = v3;
      UIViewController.deselectRowsAlongsideTransition(for:animated:)();
      sub_100038CD8((uint64_t)v4);
      return (id)swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000B3AE8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 248);
  uint64_t v2 = *(void *)(*(void *)v0 + 232);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v6 = (char *)&v10 - v5;
  (*(void (**)(uint64_t, uint64_t))(v1 + 24))(v2, v1);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, AssociatedTypeWitness);
  return v8;
}

uint64_t sub_1000B3C5C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000B3C9C()
{
  return (*(uint64_t (**)(void, void))(*(void *)(**(void **)(v0 + 16) + 248) + 80))(*(void *)(v0 + 24), *(void *)(**(void **)(v0 + 16) + 232));
}

uint64_t sub_1000B3D00()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t type metadata accessor for TTRIDefaultPresentationTreeMaker()
{
  return self;
}

uint64_t type metadata accessor for TTRIEditableSectionsPresentationTreeMaker()
{
  return self;
}

uint64_t sub_1000B3D68()
{
  return sub_100037EA0(&qword_100789B88, &qword_100789B90);
}

uint64_t sub_1000B3DA4(uint64_t a1)
{
  uint64_t result = sub_1000B3E90(&qword_100789BC8, (void (*)(void))type metadata accessor for TTRIEditableSectionsPresentationTreeMaker);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000B3DFC()
{
  return sub_100037EA0(&qword_100789BD0, &qword_100789BD8);
}

uint64_t sub_1000B3E38(uint64_t a1)
{
  uint64_t result = sub_1000B3E90(&qword_100789C10, (void (*)(void))type metadata accessor for TTRIDefaultPresentationTreeMaker);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000B3E90(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for TTRIRemindersListCompletedCell()
{
  return self;
}

void sub_1000B40D8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AppEntityID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_groupObjectID;
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_groupObjectID);
  *(void *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_groupObjectID) = a1;
  id v15 = a1;
  if (!a1)
  {
    if (!v9) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (!v9)
  {
LABEL_8:
    type metadata accessor for GroupEntity();
    id v13 = a1;
    AppEntityID.init(objectID:)();
    sub_1000B54D0();
    UIView.setAssociatedAppEntity<A>(entityType:identifier:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);

    return;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v10 = v9;
  id v14 = v15;
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    a1 = *(void **)(v2 + v8);
    if (a1) {
      goto LABEL_8;
    }
LABEL_9:
    UIView.removeAssociatedAppEntity()();

LABEL_10:
    id v12 = v15;
    goto LABEL_11;
  }

  id v12 = v14;
LABEL_11:
}

char *sub_1000B42BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = &v3[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_ttriAccessibilityGroupListCount];
  *(void *)uint64_t v7 = 0;
  v7[8] = 1;
  *(void *)&v3[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_groupObjectID] = 0;
  *(void *)&v3[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_collapseTapGestureRecognizer] = 0;
  if (a3)
  {
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v8 = 0;
  }
  v27.receiver = v3;
  v27.super_class = ObjectType;
  [super initWithStyle:a1 reuseIdentifier:v8];

  id v10 = objc_allocWithZone((Class)UITapGestureRecognizer);
  char v11 = (char *)v9;
  id v12 = [v10 initWithTarget:v11 action:"treeCellViewToggleExpandState"];
  id v13 = *(void **)&v11[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_collapseTapGestureRecognizer];
  *(void *)&v11[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_collapseTapGestureRecognizer] = v12;
  id v14 = v12;

  [*(id *)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView] addGestureRecognizer:v14];
  [v11 setEditingAccessoryType:4];
  id v15 = *(void **)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_titleLabel];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v16 = v15;
  Swift::String v17 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  [v16 setFont:v17];

  NSString v18 = String._bridgeToObjectiveC()();
  id v19 = [self imageNamed:v18];

  id v20 = [objc_allocWithZone((Class)UIImageView) initWithImage:v19];
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v20 setContentMode:4];
  id v21 = [self secondaryLabelColor];
  [v20 setTintColor:v21];

  uint64_t v22 = *(void **)&v11[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView];
  [v22 addSubview:v20];
  uint64_t v23 = self;
  id v24 = v22;
  UIView.constraintsEqualTo(_:edges:)();

  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v23 activateConstraints:isa];

  return v11;
}

void sub_1000B4768(char a1, char a2)
{
  v20.receiver = v2;
  v20.super_class = (Class)swift_getObjectType();
  uint64_t v5 = a1 & 1;
  if (a1) {
    uint64_t v6 = &selRef_labelColor;
  }
  else {
    uint64_t v6 = &selRef_tintColor;
  }
  [super setSelected:v5 animated:a2 & 1];
  id v7 = [self *v6];
  NSString v8 = v7;
  if (a2)
  {
    id v9 = self;
    [v2 selectionFadeDuration];
    double v11 = v10;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v2;
    *(void *)(v12 + 24) = v8;
    v19[4] = sub_1000B54C8;
    v19[5] = v12;
    v19[0] = _NSConcreteStackBlock;
    v19[1] = 1107296256;
    v19[2] = sub_10000AD88;
    v19[3] = &unk_100738688;
    id v13 = _Block_copy(v19);
    id v14 = v2;
    id v15 = v8;
    swift_release();
    [v9 animateWithDuration:v13 animations:v11];

    _Block_release(v13);
  }
  else
  {
    id v16 = *(void **)&v2[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView];
    id v17 = v7;
    id v18 = v16;
    sub_10000C6B0(v8);
  }
}

void sub_1000B491C(uint64_t a1, void *a2)
{
  id v3 = *(id *)(a1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView);
  id v4 = a2;
  sub_10000C6B0(a2);
}

uint64_t sub_1000B49E0()
{
  uint64_t v0 = *(void *)TTRAccesibility.AccountsList.Format.GroupName_ItemCount.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_1000B4A2C()
{
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  id v1 = [super accessibilityLabel];
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;

  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10066C6F0;
  *(void *)(v6 + 32) = v3;
  *(void *)(v6 + 40) = v5;
  if ((v0[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_ttriAccessibilityGroupListCount + 8] & 1) == 0)
  {
    uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_ttriAccessibilityGroupListCount];
    TTRAccesibility.AccountsList.Format.ItemCount.unsafeMutableAddressor();
    sub_10003B754((uint64_t *)&unk_100788EE0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_10066C6F0;
    *(void *)(v8 + 56) = &type metadata for Int;
    *(void *)(v8 + 64) = &protocol witness table for Int;
    *(void *)(v8 + 32) = v7;
    swift_bridgeObjectRetain();
    uint64_t v9 = String.init(format:_:)();
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    unint64_t v13 = *(void *)(v6 + 16);
    unint64_t v12 = *(void *)(v6 + 24);
    if (v13 >= v12 >> 1) {
      uint64_t v6 = (uint64_t)sub_100022F98((char *)(v12 > 1), v13 + 1, 1, (char *)v6);
    }
    *(void *)(v6 + 16) = v13 + 1;
    uint64_t v14 = v6 + 16 * v13;
    *(void *)(v14 + 32) = v9;
    *(void *)(v14 + 40) = v11;
  }
  TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v15 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1000B4C14()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess();
  sub_100038338(v1, (uint64_t)v5);
  if (!*((void *)&v6 + 1))
  {
    sub_1000383A0((uint64_t)v5);
    return 0;
  }
  v8[0] = v5[0];
  v8[1] = v5[1];
  v8[2] = v6;
  uint64_t v9 = v7;
  if (!BYTE8(v5[0]))
  {
    sub_100038D6C((uint64_t)v8);
    return 0;
  }
  if (BYTE8(v5[0]) == 1) {
    uint64_t v2 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Collapsed.unsafeMutableAddressor();
  }
  else {
    uint64_t v2 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Expanded.unsafeMutableAddressor();
  }
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  sub_100038D6C((uint64_t)v8);
  return v3;
}

id sub_1000B4D00(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_1000B4D80()
{
  if ([v0 isEditing]) {
    uint64_t v1 = (uint64_t *)TTRAccesibility.AccountsList.Hint.GroupEditing.unsafeMutableAddressor();
  }
  else {
    uint64_t v1 = (uint64_t *)TTRAccesibility.AccountsList.Hint.Group.unsafeMutableAddressor();
  }
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  swift_bridgeObjectRetain();
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C680;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 40) = v2;
  uint64_t v5 = (uint64_t *)TTRAccesibility.AccountsList.Hint.DragAndDrop.unsafeMutableAddressor();
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  *(void *)(v4 + 48) = v7;
  *(void *)(v4 + 56) = v6;
  swift_bridgeObjectRetain();
  TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v8 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

void *sub_1000B4F00()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_treeCellViewModel;
  swift_beginAccess();
  sub_100038338(v3, (uint64_t)&aBlock);
  if (*((void *)&v18 + 1))
  {
    v20[0] = aBlock;
    v20[1] = v17;
    v20[2] = v18;
    uint64_t v21 = v19;
    if (BYTE8(aBlock))
    {
      if (BYTE8(aBlock) == 1) {
        uint64_t v4 = (uint64_t *)TTRAccesibility.AccountsList.Action.Expand.unsafeMutableAddressor();
      }
      else {
        uint64_t v4 = (uint64_t *)TTRAccesibility.AccountsList.Action.Collapse.unsafeMutableAddressor();
      }
      uint64_t v7 = *v4;
      uint64_t v6 = v4[1];
      swift_bridgeObjectRetain();
      sub_1000368FC(0, (unint64_t *)&unk_10078E660);
      *((void *)&v17 + 1) = ObjectType;
      *(void *)&long long aBlock = v1;
      id v8 = v1;
      id v9 = sub_1002FD948(v7, v6, &aBlock, (uint64_t)"treeCellViewToggleExpandState");
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if ([v1 isEditing])
    {
      TTRAccesibility.AccountsList.Action.GroupInfo.unsafeMutableAddressor();
      uint64_t v10 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v11 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
      swift_bridgeObjectRetain();
      swift_retain();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      *(void *)&long long v18 = sub_1000B5424;
      *((void *)&v18 + 1) = v10;
      *(void *)&long long aBlock = _NSConcreteStackBlock;
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v17 = sub_10040FBBC;
      *((void *)&v17 + 1) = &unk_100738638;
      unint64_t v13 = _Block_copy(&aBlock);
      id v14 = [v11 initWithName:v12 actionHandler:v13];

      _Block_release(v13);
      swift_release();
      swift_release();
      id v15 = v14;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    sub_100038D6C((uint64_t)v20);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    sub_1000383A0((uint64_t)&aBlock);
    return 0;
  }
}

BOOL sub_1000B5204()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_1000864FC(Strong);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  return Strong != 0;
}

void sub_1000B5360()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountListsViewGroupCell_collapseTapGestureRecognizer);
}

uint64_t sub_1000B53EC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_1000B5424()
{
  return sub_1000B5204();
}

unint64_t sub_1000B542C()
{
  unint64_t result = qword_100791C70;
  if (!qword_100791C70)
  {
    sub_100039710(&qword_10078E670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100791C70);
  }
  return result;
}

uint64_t sub_1000B5488()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000B54C8()
{
  sub_1000B491C(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

unint64_t sub_1000B54D0()
{
  unint64_t result = qword_10079BAA0;
  if (!qword_10079BAA0)
  {
    type metadata accessor for GroupEntity();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079BAA0);
  }
  return result;
}

id TTRIShowSiriFoundInAppsAssembly.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

id TTRIWelcomeNavigationAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWelcomeNavigationAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIWelcomeNavigationAssembly()
{
  return self;
}

id TTRIWelcomeNavigationAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIWelcomeNavigationAssembly();
  return [super dealloc];
}

Swift::Void __swiftcall REMCustomSmartListFilterDescriptor.postFilterAnalytics()()
{
  uint64_t v0 = sub_10003B754(&qword_100789F80);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754(&qword_100789F88);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_100789F90);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100789F98);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_100789FA0);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMCustomSmartListFilterDescriptor.hashtags.getter();
  uint64_t v15 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
  Swift::Int v16 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15) != 1;
  sub_10003B6F8((uint64_t)v14, &qword_100789FA0);
  sub_1000368FC(0, (unint64_t *)&qword_100798730);
  Class isa = NSNumber.init(integerLiteral:)(v16).super.super.isa;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  id v48 = &_swiftEmptyDictionarySingleton;
  sub_1000BC008((uint64_t)isa, 0x687361685F736168, 0xEC00000073676174, isUniquelyReferenced_nonNull_native);
  uint64_t v19 = v48;
  swift_bridgeObjectRelease();
  REMCustomSmartListFilterDescriptor.date.getter();
  uint64_t v20 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
  Swift::Int v21 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v11, 1, v20) != 1;
  sub_10003B6F8((uint64_t)v11, &qword_100789F98);
  Class v22 = NSNumber.init(integerLiteral:)(v21).super.super.isa;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  id v48 = v19;
  sub_1000BC008((uint64_t)v22, 0x646575645F736168, 0xEB00000000657461, v23);
  id v24 = v48;
  swift_bridgeObjectRelease();
  REMCustomSmartListFilterDescriptor.time.getter();
  uint64_t v25 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
  Swift::Int v26 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v8, 1, v25) != 1;
  sub_10003B6F8((uint64_t)v8, &qword_100789F90);
  Class v27 = NSNumber.init(integerLiteral:)(v26).super.super.isa;
  char v28 = swift_isUniquelyReferenced_nonNull_native();
  id v48 = v24;
  sub_1000BC008((uint64_t)v27, 0x746575645F736168, 0xEB00000000656D69, v28);
  uint64_t v29 = v48;
  swift_bridgeObjectRelease();
  uint64_t v30 = REMCustomSmartListFilterDescriptor.priorities.getter();
  swift_bridgeObjectRelease();
  Class v31 = NSNumber.init(integerLiteral:)(v30 != 0).super.super.isa;
  char v32 = swift_isUniquelyReferenced_nonNull_native();
  id v48 = v29;
  sub_1000BC008((uint64_t)v31, 0x6F6972705F736168, 0xEE00736569746972, v32);
  uint64_t v33 = v48;
  swift_bridgeObjectRelease();
  Swift::Int v34 = REMCustomSmartListFilterDescriptor.flagged.getter() != 2;
  Class v35 = NSNumber.init(integerLiteral:)(v34).super.super.isa;
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  id v48 = v33;
  sub_1000BC008((uint64_t)v35, 0x67616C665F736168, 0xEB00000000646567, v36);
  uint64_t v37 = v48;
  swift_bridgeObjectRelease();
  REMCustomSmartListFilterDescriptor.location.getter();
  uint64_t v38 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
  Swift::Int v39 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v5, 1, v38) != 1;
  sub_10003B6F8((uint64_t)v5, &qword_100789F88);
  Class v40 = NSNumber.init(integerLiteral:)(v39).super.super.isa;
  char v41 = swift_isUniquelyReferenced_nonNull_native();
  id v48 = v37;
  sub_1000BC008((uint64_t)v40, 0x61636F6C5F736168, 0xEC0000006E6F6974, v41);
  NSString v42 = v48;
  swift_bridgeObjectRelease();
  REMCustomSmartListFilterDescriptor.lists.getter();
  uint64_t v43 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
  Swift::Int v44 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v2, 1, v43) != 1;
  sub_10003B6F8((uint64_t)v2, &qword_100789F80);
  Class v45 = NSNumber.init(integerLiteral:)(v44).super.super.isa;
  char v46 = swift_isUniquelyReferenced_nonNull_native();
  id v48 = v42;
  sub_1000BC008((uint64_t)v45, 0x7473696C5F736168, 0xE900000000000073, v46);
  swift_bridgeObjectRelease();
  type metadata accessor for Analytics();
  static Analytics.postEvent(_:payload:duration:)();
  swift_bridgeObjectRelease();
}

uint64_t sub_1000B5C90()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100789F68);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100789F68);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t TTRSmartListFilterEditorInteractor.__allocating_init(filter:store:undoManager:)(void *a1, void *a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  TTRSmartListFilterEditorInteractor.init(filter:store:undoManager:)(a1, a2, a3);
  return v6;
}

uint64_t TTRSmartListFilterEditorInteractor.init(filter:store:undoManager:)(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  *(void *)(v3 + 24) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = v3 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels;
  uint64_t v9 = type metadata accessor for REMHashtagLabelCollection();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_undoObservationToken) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_listFetchOperationManager) = 0;
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_store) = a2;
  if (a1)
  {
    id v10 = a2;
    id v11 = a1;
  }
  else
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    id v12 = a2;
    id v11 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_initialFilter) = v11;
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter) = v11;
  sub_10003B754(&qword_100789FD8);
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  id v13 = a1;
  id v14 = v11;
  static OS_dispatch_queue.main.getter();
  type metadata accessor for RDIDispatchQueue();
  static RDIDispatchQueue.utilityQueue.getter();
  *(void *)(swift_allocObject() + 16) = a2;
  id v15 = a2;
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_listFetchOperationManager) = REMAsyncOperationManager.__allocating_init(queue:backgroundQueue:syncPerformOperationFunc:operationDidFinish:)();
  swift_release();
  uint64_t v16 = NSUndoManager.observeChanges<A>(target:handler:)();

  *(void *)(v4 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_undoObservationToken) = v16;
  swift_release();
  return v4;
}

id sub_1000B5FF4@<X0>(id a1@<X1>, uint64_t *a2@<X0>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  id v9 = 0;
  id v5 = [a1 fetchListWithObjectID:v4 error:&v9];
  if (v5)
  {
    id result = v9;
    uint64_t v7 = (uint64_t)v5;
  }
  else
  {
    id v8 = v9;
    uint64_t v7 = _convertNSErrorToError(_:)();

    id result = (id)swift_willThrow();
  }
  *(void *)a3 = v7;
  *(unsigned char *)(a3 + 8) = v5 == 0;
  return result;
}

uint64_t sub_1000B60C8(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t TTRSmartListFilterEditorInteractor.deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_undoObservationToken))
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
    swift_retain();
    static NSUndoManager.removeObserver(with:)();
    swift_release();
    sub_1000499D4(v0 + 16);
    sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels, &qword_100789FE0);

    swift_release();
    swift_release();

    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TTRSmartListFilterEditorInteractor.__deallocating_deinit()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_undoObservationToken))
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
    swift_retain();
    static NSUndoManager.removeObserver(with:)();
    swift_release();
    sub_1000499D4(v0 + 16);
    sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels, &qword_100789FE0);

    swift_release();
    swift_release();

    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *TTRSmartListFilterEditorInteractor.filter.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  char v4 = REMCustomSmartListFilterDescriptor.isEmpty.getter();

  if (v4) {
    return 0;
  }
  id v5 = *(void **)(v1 + v2);
  id v6 = v5;
  return v5;
}

uint64_t TTRSmartListFilterEditorInteractor.selectableHashtagLabels.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10003B754(&qword_100789FE0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  id v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  id v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels;
  swift_beginAccess();
  sub_10003B694(v9, (uint64_t)v8, &qword_100789FE0);
  uint64_t v10 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v11 + 32))(a1, v8, v10);
  }
  sub_10003B6F8((uint64_t)v8, &qword_100789FE0);
  sub_1000B656C(v1, a1);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v6, a1, v10);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  swift_beginAccess();
  sub_1000BC188((uint64_t)v6, v9);
  return swift_endAccess();
}

uint64_t sub_1000B656C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t Style = type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle();
  uint64_t v56 = *(void *)(Style - 8);
  __chkstk_darwin(Style);
  id v57 = (char *)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = (char *)&v51 - v9;
  __chkstk_darwin(v8);
  id v12 = (char *)&v51 - v11;
  uint64_t v13 = type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for REMHashtagLabelDataView();
  uint64_t v18 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_store);
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.alphabetical(_:), v13);
  uint64_t v19 = static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)();
  uint64_t v59 = 0;
  unint64_t v20 = v19;
  uint64_t v60 = v18;
  uint64_t v61 = v17;
  uint64_t v51 = v10;
  uint64_t v52 = v12;
  id v62 = v7;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v22 = v56;
  char v23 = v57;
  id v24 = v62;
  if (v21)
  {
    v64[0] = (uint64_t)_swiftEmptyArrayStorage;
    uint64_t result = sub_1004D35AC(0, v21 & ~(v21 >> 63), 0);
    if (v21 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v26 = 0;
    Class v27 = (void *)v64[0];
    do
    {
      if ((v20 & 0xC000000000000001) != 0) {
        id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v28 = *(id *)(v20 + 8 * v26 + 32);
      }
      uint64_t v29 = v28;
      id v30 = [v28 name];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;

      v64[0] = (uint64_t)v27;
      unint64_t v35 = v27[2];
      unint64_t v34 = v27[3];
      if (v35 >= v34 >> 1)
      {
        sub_1004D35AC(v34 > 1, v35 + 1, 1);
        Class v27 = (void *)v64[0];
      }
      ++v26;
      v27[2] = v35 + 1;
      char v36 = &v27[2 * v35];
      v36[4] = v31;
      v36[5] = v33;
      id v24 = v62;
    }
    while (v21 != v26);
    swift_bridgeObjectRelease();
    uint64_t v22 = v56;
    char v23 = v57;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v37 = Style;
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v23, enum case for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle.store(_:), Style);
  uint64_t v38 = v59;
  static REMHashtagLabelDataView.fetchSmartListHashtagLabels(store:fetchStyle:)();
  Swift::Int v39 = (void (**)(char *, uint64_t))(v22 + 8);
  uint64_t v41 = v54;
  uint64_t v40 = v55;
  NSString v42 = v52;
  if (v38)
  {
    (*v39)(v23, v37);
    swift_bridgeObjectRelease();
    if (qword_100785238 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_100018BF8(v43, (uint64_t)qword_100789F68);
    swift_errorRetain();
    swift_errorRetain();
    Swift::Int v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      char v46 = (uint8_t *)swift_slowAlloc();
      v64[0] = swift_slowAlloc();
      *(_DWORD *)char v46 = 136315138;
      swift_getErrorValue();
      uint64_t v47 = Error.rem_errorDescription.getter();
      uint64_t v63 = sub_1000385A8(v47, v48, v64);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Failed to fetch selectableHashtagLabels {error: %s}", v46, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    REMHashtagLabelCollection.init(labels:)();
    return swift_errorRelease();
  }
  else
  {
    (*v39)(v23, v37);
    id v49 = v51;
    REMHashtagLabelCollection.init(labels:)();
    REMHashtagLabelCollection.init(labels:)();
    REMHashtagLabelCollection.union(_:)();
    id v50 = *(void (**)(char *, uint64_t))(v41 + 8);
    v50(v24, v40);
    v50(v49, v40);
    REMHashtagLabelCollection.labels.getter();
    REMHashtagLabelCollection.init(labels:)();
    return ((uint64_t (*)(char *, uint64_t))v50)(v42, v40);
  }
}

uint64_t TTRSmartListFilterEditorInteractor.selectableHashtagLabels.setter(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_100789FE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v7 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v5, a1, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  uint64_t v8 = v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels;
  swift_beginAccess();
  sub_1000BC188((uint64_t)v5, v8);
  return swift_endAccess();
}

void (*TTRSmartListFilterEditorInteractor.selectableHashtagLabels.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = sub_10003B754(&qword_100789FE0);
  v3[7] = malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = type metadata accessor for REMHashtagLabelCollection();
  v3[8] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[9] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[10] = malloc(v7);
  uint64_t v8 = malloc(v7);
  v3[11] = v8;
  TTRSmartListFilterEditorInteractor.selectableHashtagLabels.getter((uint64_t)v8);
  return sub_1000B6E08;
}

void sub_1000B6E08(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void **)(*(void *)a1 + 80);
  uint64_t v3 = *(void **)(*(void *)a1 + 88);
  if (a2)
  {
    uint64_t v5 = v2[8];
    uint64_t v6 = v2[9];
    uint64_t v8 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void, void, uint64_t))(v6 + 16))(v2[10], v2[11], v5);
    (*(void (**)(void *, void *, uint64_t))(v6 + 32))(v7, v4, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(v7, 0, 1, v5);
    uint64_t v9 = v8 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels;
    swift_beginAccess();
    sub_1000BC188((uint64_t)v7, v9);
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v3, v5);
  }
  else
  {
    uint64_t v10 = v2[8];
    uint64_t v11 = v2[9];
    uint64_t v12 = v2[6];
    size_t v7 = (void *)v2[7];
    (*(void (**)(void *, void, uint64_t))(v11 + 32))(v7, v2[11], v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    uint64_t v13 = v12 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels;
    swift_beginAccess();
    sub_1000BC188((uint64_t)v7, v13);
    swift_endAccess();
  }
  free(v3);
  free(v4);
  free(v7);

  free(v2);
}

BOOL TTRSmartListFilterEditorInteractor.hasUnsavedChanges.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_initialFilter);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  id v3 = v1;
  id v4 = v2;
  char v5 = static NSObject.== infix(_:_:)();

  return (v5 & 1) == 0;
}

uint64_t TTRSmartListFilterEditorInteractor.filterUpgradedToSydneyRomeKincaid.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  uint64_t v4 = REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();

  if (REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter() >= v4) {
    return 0;
  }
  id v5 = *(id *)(v1 + v2);
  char v6 = REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter();

  return v6 & 1;
}

uint64_t TTRSmartListFilterEditorInteractor.list(with:)(uint64_t result)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_listFetchOperationManager))
  {
    uint64_t v2 = (void *)result;
    swift_retain();
    id v3 = v2;
    REMAsyncOperationManager.operationStateStartingIfNeeded(for:)();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall TTRSmartListFilterEditorInteractor.addHashtagLabel(_:)(Swift::String a1)
{
  object = a1._object;
  uint64_t countAndFlagsBits = a1._countAndFlagsBits;
  uint64_t v4 = sub_10003B754(&qword_100789FE0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v20 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v20 - v15;
  TTRSmartListFilterEditorInteractor.selectableHashtagLabels.getter((uint64_t)v14);
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_10066C6F0;
  *(void *)(v17 + 32) = countAndFlagsBits;
  *(void *)(v17 + 40) = object;
  swift_bridgeObjectRetain();
  REMHashtagLabelCollection.init(labels:)();
  REMHashtagLabelCollection.union(_:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v8 + 8);
  v18(v11, v7);
  v18(v14, v7);
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v6, v16, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  uint64_t v19 = v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor____lazy_storage___selectableHashtagLabels;
  swift_beginAccess();
  sub_1000BC188((uint64_t)v6, v19);
  swift_endAccess();
}

void TTRSmartListFilterEditorInteractor.update(operation:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v9 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  REMCustomSmartListFilterDescriptor.operation.getter();
  sub_1000BC1F0(&qword_100789FE8, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.Operation);
  char v10 = dispatch thunk of static Equatable.== infix(_:_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10)
  {
  }
  else
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
    id v11 = v9;
    uint64_t v12 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:operation:)();
    uint64_t v13 = *(void **)(v2 + v8);
    *(void *)(v2 + v8) = v12;
    id v14 = v12;

    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v15 = *(void *)(v2 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v15 + 8))(ObjectType, v15);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void TTRSmartListFilterEditorInteractor.update(hashtags:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_100789FF0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100789FA0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v33 = v1;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v34 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  REMCustomSmartListFilterDescriptor.hashtags.getter();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10003B694((uint64_t)v18, (uint64_t)v10, &qword_100789FA0);
  uint64_t v32 = a1;
  sub_10003B694(a1, v19, &qword_100789FA0);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v10, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789FA0);
    if (v20(v19, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v10, &qword_100789FA0);
LABEL_8:

      return;
    }
    goto LABEL_6;
  }
  sub_10003B694((uint64_t)v10, (uint64_t)v16, &qword_100789FA0);
  if (v20(v19, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789FA0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
LABEL_6:
    sub_10003B6F8((uint64_t)v10, &qword_100789FF0);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v19, v3);
  sub_1000BC1F0(&qword_100789FF8, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  sub_10003B6F8((uint64_t)v18, &qword_100789FA0);
  v22(v16, v3);
  sub_10003B6F8((uint64_t)v10, &qword_100789FA0);
  if (v21) {
    goto LABEL_8;
  }
LABEL_9:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v32, v31, &qword_100789FA0);
  id v23 = v34;
  id v24 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:hashtags:)();
  uint64_t v25 = v33;
  uint64_t v26 = *(void **)(v33 + v30);
  *(void *)(v33 + v30) = v24;
  id v27 = v24;

  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(ObjectType, v28);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void TTRSmartListFilterEditorInteractor.update(date:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A000);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100789F98);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v33 = v1;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v34 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  REMCustomSmartListFilterDescriptor.date.getter();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10003B694((uint64_t)v18, (uint64_t)v10, &qword_100789F98);
  uint64_t v32 = a1;
  sub_10003B694(a1, v19, &qword_100789F98);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v10, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F98);
    if (v20(v19, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v10, &qword_100789F98);
LABEL_8:

      return;
    }
    goto LABEL_6;
  }
  sub_10003B694((uint64_t)v10, (uint64_t)v16, &qword_100789F98);
  if (v20(v19, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F98);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
LABEL_6:
    sub_10003B6F8((uint64_t)v10, &qword_10078A000);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v19, v3);
  sub_1000BC1F0(&qword_10078A008, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  sub_10003B6F8((uint64_t)v18, &qword_100789F98);
  v22(v16, v3);
  sub_10003B6F8((uint64_t)v10, &qword_100789F98);
  if (v21) {
    goto LABEL_8;
  }
LABEL_9:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v32, v31, &qword_100789F98);
  id v23 = v34;
  id v24 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:date:)();
  uint64_t v25 = v33;
  uint64_t v26 = *(void **)(v33 + v30);
  *(void *)(v33 + v30) = v24;
  id v27 = v24;

  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(ObjectType, v28);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void TTRSmartListFilterEditorInteractor.update(time:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A010);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100789F90);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v33 = v1;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v34 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  REMCustomSmartListFilterDescriptor.time.getter();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10003B694((uint64_t)v18, (uint64_t)v10, &qword_100789F90);
  uint64_t v32 = a1;
  sub_10003B694(a1, v19, &qword_100789F90);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v10, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F90);
    if (v20(v19, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v10, &qword_100789F90);
LABEL_8:

      return;
    }
    goto LABEL_6;
  }
  sub_10003B694((uint64_t)v10, (uint64_t)v16, &qword_100789F90);
  if (v20(v19, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F90);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
LABEL_6:
    sub_10003B6F8((uint64_t)v10, &qword_10078A010);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v19, v3);
  sub_1000BC1F0(&qword_10078A018, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  sub_10003B6F8((uint64_t)v18, &qword_100789F90);
  v22(v16, v3);
  sub_10003B6F8((uint64_t)v10, &qword_100789F90);
  if (v21) {
    goto LABEL_8;
  }
LABEL_9:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v32, v31, &qword_100789F90);
  id v23 = v34;
  id v24 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:time:)();
  uint64_t v25 = v33;
  uint64_t v26 = *(void **)(v33 + v30);
  *(void *)(v33 + v30) = v24;
  id v27 = v24;

  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(ObjectType, v28);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

Swift::Void __swiftcall TTRSmartListFilterEditorInteractor.update(priorities:)(Swift::OpaquePointer_optional priorities)
{
  uint64_t v2 = v1;
  rawValue = priorities.value._rawValue;
  uint64_t v4 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v13 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  uint64_t v5 = (void *)REMCustomSmartListFilterDescriptor.priorities.getter();
  if (v5)
  {
    if (!rawValue)
    {
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    BOOL v6 = sub_1000BA9BC(v5, rawValue);
    swift_bridgeObjectRelease();
    if (!v6)
    {
LABEL_10:
      type metadata accessor for REMCustomSmartListFilterDescriptor();
      swift_bridgeObjectRetain();
      id v7 = v13;
      uint64_t v8 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:priorities:)();
      uint64_t v9 = *(void **)(v1 + v4);
      *(void *)(v2 + v4) = v8;
      id v10 = v8;

      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v11 = *(void *)(v2 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);

        swift_unknownObjectRelease();
      }
      else
      {
      }
      return;
    }
  }
  else if (rawValue)
  {
    goto LABEL_10;
  }
}

Swift::Void __swiftcall TTRSmartListFilterEditorInteractor.update(flagged:)(Swift::Bool_optional flagged)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v12 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  int v5 = REMCustomSmartListFilterDescriptor.flagged.getter();
  if (v5 == 2)
  {
    if (flagged.value != 2)
    {
LABEL_9:
      type metadata accessor for REMCustomSmartListFilterDescriptor();
      id v6 = v12;
      id v7 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:flagged:)();
      uint64_t v8 = *(void **)(v1 + v4);
      *(void *)(v2 + v4) = v7;
      id v9 = v7;

      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v10 = *(void *)(v2 + 24);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);

        swift_unknownObjectRelease();
      }
      else
      {
      }
      return;
    }
  }
  else if (flagged.value == 2 || ((!flagged.value ^ v5) & 1) == 0)
  {
    goto LABEL_9;
  }
}

void TTRSmartListFilterEditorInteractor.update(location:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A020);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100789F88);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v33 = v1;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v34 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  REMCustomSmartListFilterDescriptor.location.getter();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10003B694((uint64_t)v18, (uint64_t)v10, &qword_100789F88);
  uint64_t v32 = a1;
  sub_10003B694(a1, v19, &qword_100789F88);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v10, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F88);
    if (v20(v19, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v10, &qword_100789F88);
LABEL_8:

      return;
    }
    goto LABEL_6;
  }
  sub_10003B694((uint64_t)v10, (uint64_t)v16, &qword_100789F88);
  if (v20(v19, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F88);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
LABEL_6:
    sub_10003B6F8((uint64_t)v10, &qword_10078A020);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v19, v3);
  sub_1000BC1F0(&qword_10078A028, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  sub_10003B6F8((uint64_t)v18, &qword_100789F88);
  v22(v16, v3);
  sub_10003B6F8((uint64_t)v10, &qword_100789F88);
  if (v21) {
    goto LABEL_8;
  }
LABEL_9:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v32, v31, &qword_100789F88);
  id v23 = v34;
  id v24 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:location:)();
  uint64_t v25 = v33;
  uint64_t v26 = *(void **)(v33 + v30);
  *(void *)(v33 + v30) = v24;
  id v27 = v24;

  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(ObjectType, v28);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

void TTRSmartListFilterEditorInteractor.update(lists:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A030);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_100789F80);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v30 - v15;
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v30 - v17;
  uint64_t v33 = v1;
  uint64_t v30 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v34 = *(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  REMCustomSmartListFilterDescriptor.lists.getter();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_10003B694((uint64_t)v18, (uint64_t)v10, &qword_100789F80);
  uint64_t v32 = a1;
  sub_10003B694(a1, v19, &qword_100789F80);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v10, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F80);
    if (v20(v19, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v10, &qword_100789F80);
LABEL_8:

      return;
    }
    goto LABEL_6;
  }
  sub_10003B694((uint64_t)v10, (uint64_t)v16, &qword_100789F80);
  if (v20(v19, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_100789F80);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v16, v3);
LABEL_6:
    sub_10003B6F8((uint64_t)v10, &qword_10078A030);
    goto LABEL_9;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v19, v3);
  sub_1000BC1F0(&qword_10078A038, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists);
  char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v4 + 8);
  v22(v6, v3);
  sub_10003B6F8((uint64_t)v18, &qword_100789F80);
  v22(v16, v3);
  sub_10003B6F8((uint64_t)v10, &qword_100789F80);
  if (v21) {
    goto LABEL_8;
  }
LABEL_9:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v32, v31, &qword_100789F80);
  id v23 = v34;
  id v24 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:lists:)();
  uint64_t v25 = v33;
  uint64_t v26 = *(void **)(v33 + v30);
  *(void *)(v33 + v30) = v24;
  id v27 = v24;

  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v28 = *(void *)(v25 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(ObjectType, v28);

    swift_unknownObjectRelease();
  }
  else
  {
  }
}

id sub_1000B8DA0@<X0>(void **a1@<X8>)
{
  uint64_t v2 = *v1;
  *a1 = *v1;
  return v2;
}

void *sub_1000B8DAC()
{
  uint64_t v1 = *v0;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter;
  id v3 = *(id *)(*v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  char v4 = REMCustomSmartListFilterDescriptor.isEmpty.getter();

  if (v4) {
    return 0;
  }
  uint64_t v5 = *(void **)(v1 + v2);
  id v6 = v5;
  return v5;
}

uint64_t sub_1000B8E0C@<X0>(uint64_t a1@<X8>)
{
  return TTRSmartListFilterEditorInteractor.selectableHashtagLabels.getter(a1);
}

BOOL sub_1000B8E30()
{
  uint64_t v1 = *(void **)(*v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_initialFilter);
  uint64_t v2 = *(void **)(*v0 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_currentFilter);
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  id v3 = v1;
  id v4 = v2;
  char v5 = static NSObject.== infix(_:_:)();

  return (v5 & 1) == 0;
}

uint64_t sub_1000B8EAC()
{
  return TTRSmartListFilterEditorInteractor.filterUpgradedToSydneyRomeKincaid.getter() & 1;
}

uint64_t sub_1000B8ED4(uint64_t result)
{
  if (*(void *)(*v1 + OBJC_IVAR____TtC9Reminders34TTRSmartListFilterEditorInteractor_listFetchOperationManager))
  {
    uint64_t v2 = (void *)result;
    swift_retain();
    id v3 = v2;
    REMAsyncOperationManager.operationStateStartingIfNeeded(for:)();

    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1000B8F4C(uint64_t a1, uint64_t a2)
{
}

void sub_1000B8F70(uint64_t a1)
{
}

void sub_1000B8F94(uint64_t a1)
{
}

void sub_1000B8FB8(uint64_t a1)
{
}

void sub_1000B8FDC(uint64_t a1)
{
}

void sub_1000B9000(Swift::OpaquePointer_optional a1)
{
}

void sub_1000B9024(Swift::Bool_optional a1)
{
}

void sub_1000B9048(uint64_t a1)
{
}

void sub_1000B906C(uint64_t a1)
{
}

uint64_t sub_1000B9090(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  id v3 = (unsigned __int8 *)(a1 + 42);
  for (i = (unsigned __int8 *)(a2 + 42); ; i += 16)
  {
    uint64_t v5 = *(void *)(v3 - 10);
    uint64_t v6 = *(void *)(i - 10);
    int v7 = *(i - 2);
    if (*(v3 - 2)) {
      break;
    }
    uint64_t result = 0;
    if (*(i - 2)) {
      return result;
    }
LABEL_10:
    if (v5 != v6) {
      return result;
    }
LABEL_11:
    if ((*(v3 - 1) ^ *(i - 1)) & 1) != 0 || ((*v3 ^ *i)) {
      return result;
    }
    v3 += 16;
    if (!--v2) {
      return 1;
    }
  }
  if (*(v3 - 2) == 1)
  {
    if (v7 != 1) {
      return 0;
    }
    uint64_t result = 0;
    goto LABEL_10;
  }
  switch(v5)
  {
    case 1:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 1) {
        goto LABEL_11;
      }
      break;
    case 2:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 2) {
        goto LABEL_11;
      }
      break;
    case 3:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 3) {
        goto LABEL_11;
      }
      break;
    case 4:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 4) {
        goto LABEL_11;
      }
      break;
    case 5:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 5) {
        goto LABEL_11;
      }
      break;
    case 6:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 6) {
        goto LABEL_11;
      }
      break;
    case 7:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 7) {
        goto LABEL_11;
      }
      break;
    default:
      uint64_t result = 0;
      if (v7 == 2 && v6 == 0) {
        goto LABEL_11;
      }
      break;
  }
  return result;
}

BOOL sub_1000B9214(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL result = 0;
  if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32)
    && ((*(unsigned __int8 *)(a1 + 33) ^ *(unsigned __int8 *)(a2 + 33)) & 1) == 0
    && ((*(unsigned __int8 *)(a1 + 34) ^ *(unsigned __int8 *)(a2 + 34)) & 1) == 0)
  {
    uint64_t v5 = (unsigned __int8 *)(a2 + 37);
    uint64_t v6 = (unsigned __int8 *)(a1 + 37);
    do
    {
      BOOL result = --v2 == 0;
      if (!v2) {
        break;
      }
      if (*(v6 - 2) != *(v5 - 2)) {
        break;
      }
      if ((*(v6 - 1) ^ *(v5 - 1))) {
        break;
      }
      int v8 = *v5;
      v5 += 3;
      int v7 = v8;
      int v9 = *v6;
      v6 += 3;
    }
    while (((v9 ^ v7) & 1) == 0);
  }
  return result;
}

uint64_t sub_1000B92C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRSharedWithYouHighlight();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_1007894E8);
  __chkstk_darwin(v7);
  int v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0) - 8;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - v13;
  __chkstk_darwin(v12);
  uint64_t v18 = (char *)&v29 - v17;
  uint64_t v19 = *(void *)(a1 + 16);
  if (v19 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v19 || a1 == a2) {
    return 1;
  }
  uint64_t v30 = v6;
  uint64_t v31 = v16;
  unint64_t v20 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v21 = *(void *)(v15 + 72);
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v32 = v7;
  uint64_t v29 = v21;
  while (2)
  {
    sub_100028998(a1 + v20, (uint64_t)v18, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    sub_100028998(a2 + v20, (uint64_t)v14, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_100028998((uint64_t)v18, (uint64_t)v9, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    sub_100028998((uint64_t)v14, v22, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
    uint64_t v23 = sub_10003B754(&qword_100787470);
    id v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48);
    switch(v24((uint64_t)v9, 5, v23))
    {
      case 1u:
        if (v24(v22, 5, v23) == 1) {
          goto LABEL_6;
        }
        goto LABEL_21;
      case 2u:
        if (v24(v22, 5, v23) != 2) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 3u:
        if (v24(v22, 5, v23) != 3) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 4u:
        if (v24(v22, 5, v23) != 4) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 5u:
        if (v24(v22, 5, v23) == 5) {
          goto LABEL_6;
        }
        goto LABEL_21;
      default:
        uint64_t v25 = v31;
        sub_100028998((uint64_t)v9, v31, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
        if (!v24(v22, 5, v23))
        {
          uint64_t v26 = (uint64_t)v30;
          sub_1000A734C(v22, (uint64_t)v30);
          char v27 = static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)();
          sub_1000288D0(v26, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
          sub_1000288D0(v25, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
          uint64_t v21 = v29;
          if ((v27 & 1) == 0)
          {
            sub_1000288D0((uint64_t)v9, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
            goto LABEL_22;
          }
LABEL_6:
          sub_1000288D0((uint64_t)v9, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
          sub_1000288D0((uint64_t)v14, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
          sub_1000288D0((uint64_t)v18, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
          v20 += v21;
          --v19;
          a2 = v33;
          a1 = v34;
          uint64_t v7 = v32;
          if (!v19) {
            return 1;
          }
          continue;
        }
        sub_1000288D0(v25, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
LABEL_21:
        sub_10003B6F8((uint64_t)v9, &qword_1007894E8);
LABEL_22:
        sub_1000288D0((uint64_t)v14, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
        sub_1000288D0((uint64_t)v18, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
        return 0;
    }
  }
}

uint64_t sub_1000B9784(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    id v3 = (uint64_t *)(a1 + 40);
    uint64_t v4 = (uint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *v3;
      uint64_t v6 = *v4;
      if (*v3 == 1)
      {
        if (v6 != 1) {
          return 0;
        }
      }
      else
      {
        if (v6 == 1) {
          return 0;
        }
        uint64_t v7 = *(v3 - 1);
        if (v5)
        {
          if (!v6 || (v7 != *(v4 - 1) || v5 != v6) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
            return 0;
          }
        }
        else if (v6)
        {
          sub_10006566C(v7, 0);
          return 0;
        }
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_1000B9848(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    id v3 = (__int16 *)(a1 + 32);
    uint64_t v4 = (__int16 *)(a2 + 32);
    do
    {
      __int16 v6 = *v3++;
      __int16 v5 = v6;
      __int16 v8 = *v4++;
      __int16 v7 = v8;
      int v9 = v8;
      if (v5 == 2)
      {
        if (v9 != 2) {
          return 0;
        }
      }
      else
      {
        if (v9 == 2) {
          return 0;
        }
        int v10 = v7 & 1;
        int v11 = ((v5 & 0x100) == 0) ^ ((unsigned __int16)(v7 & 0x100) >> 8);
        if (((v5 & 1) == 0) == v10 || v11 == 0) {
          return 0;
        }
      }
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_1000B98D8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4] || a1[5] != a2[5]) {
    return 0;
  }
  id v3 = a2 + 7;
  uint64_t v4 = a1 + 7;
  do
  {
    BOOL result = --v2 == 0;
    if (!v2) {
      break;
    }
    if (*(v4 - 1) != *(v3 - 1)) {
      break;
    }
    uint64_t v7 = *v3;
    v3 += 2;
    uint64_t v6 = v7;
    uint64_t v8 = *v4;
    v4 += 2;
  }
  while (v8 == v6);
  return result;
}

int32x2_t sub_1000B995C(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2 = a1[1].i64[0];
  if (v2 == a2[1].i64[0] && v2 && a1 != a2 && a1[2].i64[0] == a2[2].i64[0] && a1[2].i64[1] == a2[2].i64[1])
  {
    uint64_t v4 = a1 + 3;
    __int16 v5 = a2 + 3;
    uint64_t v6 = v2 - 1;
    do
    {
      if (!v6) {
        break;
      }
      int64x2_t v7 = *v4++;
      int64x2_t v8 = v7;
      int64x2_t v9 = *v5++;
      int32x2_t result = vmovn_s64(vceqq_s64(v8, v9));
      --v6;
    }
    while ((result.i32[0] & result.i32[1] & 1) != 0);
  }
  return result;
}

BOOL sub_1000B99DC(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = sub_10003B754(qword_10078A138);
  uint64_t v4 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int64x2_t v9 = (char *)&v19 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2) {
      return 1;
    }
    unint64_t v11 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    type metadata accessor for IndexPath();
    uint64_t v19 = *(void *)(v4 + 72);
    uint64_t v12 = v10 - 1;
    while (1)
    {
      sub_10003B694(a1 + v11, (uint64_t)v9, qword_10078A138);
      sub_10003B694(a2 + v11, (uint64_t)v6, qword_10078A138);
      sub_1000BC1F0((unint64_t *)&qword_100787548, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
        break;
      }
      uint64_t v13 = *(int *)(v20 + 36);
      uint64_t v14 = *(void *)&v9[v13];
      uint64_t v15 = *(void *)&v6[v13];
      sub_10003B6F8((uint64_t)v6, qword_10078A138);
      sub_10003B6F8((uint64_t)v9, qword_10078A138);
      BOOL v17 = v12-- != 0;
      BOOL result = v14 == v15;
      if (v14 == v15)
      {
        v11 += v19;
        if (v17) {
          continue;
        }
      }
      return result;
    }
    sub_10003B6F8((uint64_t)v6, qword_10078A138);
    sub_10003B6F8((uint64_t)v9, qword_10078A138);
  }
  return 0;
}

uint64_t sub_1000B9BF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100787558);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 != *(void *)(a2 + 16))
  {
LABEL_14:
    char v14 = 0;
    return v14 & 1;
  }
  if (v11 && a1 != a2)
  {
    unint64_t v12 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    type metadata accessor for IndexPath();
    uint64_t v19 = *(void *)(v5 + 72);
    uint64_t v13 = v11 - 1;
    while (1)
    {
      sub_10003B694(a1 + v12, (uint64_t)v10, &qword_100787558);
      sub_10003B694(a2 + v12, (uint64_t)v7, &qword_100787558);
      sub_1000BC1F0((unint64_t *)&qword_100787548, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0) {
        break;
      }
      char v14 = dispatch thunk of static Equatable.== infix(_:_:)();
      sub_10003B6F8((uint64_t)v7, &qword_100787558);
      sub_10003B6F8((uint64_t)v10, &qword_100787558);
      BOOL v16 = v13-- != 0;
      if (v14)
      {
        v12 += v19;
        if (v16) {
          continue;
        }
      }
      return v14 & 1;
    }
    sub_10003B6F8((uint64_t)v7, &qword_100787558);
    sub_10003B6F8((uint64_t)v10, &qword_100787558);
    goto LABEL_14;
  }
  char v14 = 1;
  return v14 & 1;
}

BOOL sub_1000B9E10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = a1 + 32;
    uint64_t v4 = a2 + 32;
    uint64_t v5 = v2 - 1;
    while (1)
    {
      sub_10003B694(v3, (uint64_t)v12, &qword_100787568);
      sub_10003B694(v4, (uint64_t)v11, &qword_100787568);
      if ((static AnyHashable.== infix(_:_:)() & 1) == 0) {
        break;
      }
      uint64_t v6 = v13;
      uint64_t v7 = v11[5];
      sub_10003B6F8((uint64_t)v11, &qword_100787568);
      sub_10003B6F8((uint64_t)v12, &qword_100787568);
      BOOL v9 = v5-- != 0;
      BOOL result = v6 == v7;
      if (v6 == v7)
      {
        v3 += 48;
        v4 += 48;
        if (v9) {
          continue;
        }
      }
      return result;
    }
    sub_10003B6F8((uint64_t)v11, &qword_100787568);
    sub_10003B6F8((uint64_t)v12, &qword_100787568);
  }
  return 0;
}

BOOL sub_1000B9F14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v3 = (_OWORD *)(a1 + 32);
      uint64_t v4 = (_OWORD *)(a2 + 32);
      uint64_t v5 = v2 - 1;
      do
      {
        long long v6 = v3[5];
        v17[4] = v3[4];
        v18[0] = v6;
        *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)v3 + 89);
        long long v7 = v3[1];
        v17[0] = *v3;
        v17[1] = v7;
        long long v8 = v3[3];
        v17[2] = v3[2];
        v17[3] = v8;
        long long v9 = v4[1];
        v19[0] = *v4;
        v19[1] = v9;
        long long v10 = v4[2];
        long long v11 = v4[3];
        *(_OWORD *)&v20[9] = *(_OWORD *)((char *)v4 + 89);
        long long v12 = v4[5];
        v19[4] = v4[4];
        *(_OWORD *)uint64_t v20 = v12;
        v19[2] = v10;
        v19[3] = v11;
        sub_100099404((void **)v17);
        sub_100099404((void **)v19);
        BOOL v13 = sub_1003986F8((uint64_t)v17, (uint64_t)v19);
        sub_10009948C((id *)v19);
        sub_10009948C((id *)v17);
        BOOL v15 = v5-- != 0;
        if (!v13) {
          break;
        }
        v4 += 7;
        v3 += 7;
      }
      while (v15);
    }
  }
  else
  {
    return 0;
  }
  return v13;
}

uint64_t sub_1000BA00C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  uint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_22:
    BOOL v13 = v12;
    sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
    char v14 = static NSObject.== infix(_:_:)();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = static NSObject.== infix(_:_:)();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

id sub_1000BA28C(unint64_t a1, uint64_t a2)
{
  return sub_10002E54C(a1, a2, (uint64_t)&qword_100788D80);
}

id sub_1000BA2A0(unint64_t a1, uint64_t a2)
{
  return sub_10002E54C(a1, a2, (uint64_t)&unk_1007894C0);
}

uint64_t sub_1000BA2B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a1 + 40);
    uint64_t v4 = (unsigned char *)(a2 + 40);
    do
    {
      uint64_t v6 = *((void *)v3 - 1);
      uint64_t v7 = *((void *)v4 - 1);
      int v8 = *v4;
      if (*v3)
      {
        if (*v3 != 1)
        {
          switch(v6)
          {
            case 1:
              if (v8 != 2 || v7 != 1) {
                return 0;
              }
              goto LABEL_10;
            case 2:
              if (v8 != 2 || v7 != 2) {
                return 0;
              }
              goto LABEL_10;
            case 3:
              if (v8 != 2 || v7 != 3) {
                return 0;
              }
              goto LABEL_10;
            case 4:
              if (v8 != 2 || v7 != 4) {
                return 0;
              }
              goto LABEL_10;
            case 5:
              if (v8 != 2 || v7 != 5) {
                return 0;
              }
              goto LABEL_10;
            case 6:
              if (v8 != 2 || v7 != 6) {
                return 0;
              }
              goto LABEL_10;
            case 7:
              if (v8 != 2 || v7 != 7) {
                return 0;
              }
              goto LABEL_10;
            default:
              if (v8 != 2 || v7 != 0) {
                return 0;
              }
              goto LABEL_10;
          }
        }
        if (v8 != 1 || v6 != v7) {
          return 0;
        }
      }
      else
      {
        if (*v4) {
          BOOL v5 = 0;
        }
        else {
          BOOL v5 = v6 == v7;
        }
        if (!v5) {
          return 0;
        }
      }
LABEL_10:
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

id sub_1000BA3F0(unint64_t a1, uint64_t a2)
{
  return sub_10002E54C(a1, a2, (uint64_t)&qword_100788600);
}

uint64_t sub_1000BA404(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v10 = 1;
    }
    else
    {
      uint64_t v3 = a2 + 64;
      uint64_t v4 = a1 + 64;
      uint64_t v5 = v2 - 1;
      do
      {
        uint64_t v6 = *(void **)(v4 - 32);
        uint64_t v7 = *(void **)(v3 - 32);
        swift_bridgeObjectRetain();
        id v8 = v6;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v9 = v7;
        swift_bridgeObjectRetain();
        char v10 = static TTRSectionLite.__derived_struct_equals(_:_:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        BOOL v12 = v5-- != 0;
        if ((v10 & 1) == 0) {
          break;
        }
        v3 += 40;
        v4 += 40;
      }
      while (v12);
    }
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_1000BA534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v9 = (char *)&v24 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item() - 8;
  uint64_t v11 = __chkstk_darwin(v10);
  BOOL v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  BOOL v16 = (char *)&v24 - v15;
  uint64_t v17 = *(void *)(a1 + 16);
  if (v17 == *(void *)(a2 + 16))
  {
    if (!v17 || a1 == a2)
    {
      char v20 = 1;
    }
    else
    {
      unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v25 = *(void *)(v14 + 72);
      uint64_t v19 = v17 - 1;
      do
      {
        sub_100028998(a1 + v18, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_100028998(a2 + v18, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        char v20 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
        sub_1000288D0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_1000288D0((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_1000288D0((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000288D0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        BOOL v22 = v19-- != 0;
        if ((v20 & 1) == 0) {
          break;
        }
        v18 += v25;
      }
      while (v22);
    }
  }
  else
  {
    char v20 = 0;
  }
  return v20 & 1;
}

uint64_t sub_1000BA798(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      char v8 = 1;
    }
    else
    {
      sub_10009672C();
      uint64_t v5 = v2 - 1;
      uint64_t v6 = a1 + 56;
      uint64_t v7 = a2 + 56;
      do
      {
        char v8 = static TTRValueBasedMenuElement.__derived_enum_equals(_:_:)();
        BOOL v10 = v5-- != 0;
        if ((v8 & 1) == 0) {
          break;
        }
        v6 += 32;
        v7 += 32;
      }
      while (v10);
    }
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

id sub_1000BA87C(unint64_t a1, uint64_t a2)
{
  return sub_10002E54C(a1, a2, (uint64_t)&qword_100791C40);
}

uint64_t sub_1000BA890(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    goto LABEL_7;
  }
  if (!v2 || a1 == a2) {
    goto LABEL_6;
  }
  unint64_t v5 = a1[4];
  uint64_t v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unsigned __int8 v7 = sub_10002E54C(v5, v6, (uint64_t)&qword_100788600);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_7:
    unsigned __int8 v8 = 0;
    return v8 & 1;
  }
  if (v2 == 1)
  {
LABEL_6:
    unsigned __int8 v8 = 1;
    return v8 & 1;
  }
  uint64_t v10 = v2 - 2;
  uint64_t v11 = a1 + 5;
  uint64_t v12 = a2 + 5;
  do
  {
    unint64_t v14 = *v11++;
    unint64_t v13 = v14;
    uint64_t v15 = *v12++;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unsigned __int8 v8 = sub_10002E54C(v13, v15, (uint64_t)&qword_100788600);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL v17 = v10-- != 0;
  }
  while ((v8 & 1) != 0 && v17);
  return v8 & 1;
}

BOOL sub_1000BA9BC(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  unint64_t v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

id sub_1000BAA30(unint64_t a1, uint64_t a2)
{
  return sub_10002E54C(a1, a2, (uint64_t)qword_10078E3D0);
}

uint64_t sub_1000BAA44(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = _stringCompareWithSmolCheck(_:_:expecting:)(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a1 + 7;
    for (uint64_t i = a2 + 7; ; i += 2)
    {
      BOOL v11 = *(v9 - 1) == *(i - 1) && *v9 == *i;
      if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

id sub_1000BAB0C(unint64_t a1, uint64_t a2)
{
  return sub_10002E54C(a1, a2, (uint64_t)&qword_10078A128);
}

uint64_t sub_1000BAB20(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v11 = (void *)*v3;
  unint64_t v13 = sub_10035C1D4(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_100360D68();
      goto LABEL_7;
    }
    sub_10057225C(v16, a3 & 1);
    unint64_t v21 = sub_10035C1D4(a2);
    if ((v17 & 1) == (v22 & 1))
    {
      unint64_t v13 = v21;
      uint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100028998(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return sub_100579414(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  *(void *)(v19[7] + 8 * v13) = a1;

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000BACC8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10035C1D0(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_100360FD4();
      goto LABEL_7;
    }
    sub_100572604(v15, a4 & 1);
    uint64_t v21 = sub_10035C1D0(a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_10003B754(&qword_10078E370);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
    uint64_t *v19 = a1;
    v19[1] = a2;
    return swift_bridgeObjectRelease();
  }
LABEL_13:
  sub_100579440(v12, a3, a1, a2, v18);

  return swift_retain();
}

uint64_t sub_1000BAE10(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_10035C28C(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      *(void *)(v16[7] + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100361174();
    goto LABEL_7;
  }
  sub_1005728DC(result, a3 & 1);
  uint64_t result = sub_10035C28C(a2);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_100579444(v10, a2, a1, v16);
}

void sub_1000BAF2C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10035C188((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1003612EC();
    goto LABEL_7;
  }
  sub_100572B8C(v12, a3 & 1);
  unint64_t v17 = sub_10035C188((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_15:
    sub_1000368FC(0, qword_10078E3D0);
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100579488(v9, (uint64_t)a2, a1, v15);

  id v19 = a2;
}

uint64_t sub_1000BB06C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  BOOL v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10035C1D0(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < result || (a4 & 1) == 0)
  {
    if (v17 >= result && (a4 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1003612F8();
      goto LABEL_9;
    }
    sub_100572B98(result, a4 & 1);
    uint64_t result = sub_10035C1D0(a3);
    if ((v16 & 1) == (v18 & 1))
    {
      unint64_t v12 = result;
      goto LABEL_9;
    }
LABEL_15:
    sub_10003B754(&qword_10078E370);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_9:
  int v19 = a2 & 1;
  char v20 = *v5;
  if (v16)
  {
    uint64_t v21 = v20[7] + 16 * v12;
    *(void *)uint64_t v21 = a1;
    *(unsigned char *)(v21 + 8) = v19 != 0;
  }
  else
  {
    sub_1005794D0(v12, a3, a1, v19, v20);
    return swift_retain();
  }
  return result;
}

id sub_1000BB1A8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10035C188((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= v12 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v15 = *v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_10036161C();
    goto LABEL_7;
  }
  sub_100573050(v12, a3 & 1);
  unint64_t v18 = sub_10035C188((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_15:
    sub_1000368FC(0, qword_10078E3D0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1005794D4(v9, (uint64_t)a2, a1, v15);

  return a2;
}

id sub_1000BB2E8(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  BOOL v5 = (void **)v4;
  unint64_t v9 = (void *)*v4;
  unint64_t v11 = sub_10035C188((uint64_t)a3);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v15 = v10;
  uint64_t v16 = v9[3];
  if (v16 >= v14 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v17 = *v5;
    if (v15)
    {
LABEL_8:
      unint64_t v18 = (uint64_t *)(v17[7] + 16 * v11);
      id result = (id)swift_bridgeObjectRelease();
      *unint64_t v18 = a1;
      v18[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_100361628();
    goto LABEL_7;
  }
  sub_10057305C(v14, a4 & 1);
  unint64_t v20 = sub_10035C188((uint64_t)a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_15:
    sub_1000368FC(0, qword_10078E3D0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  uint64_t v17 = *v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  sub_1005794D8(v11, (uint64_t)a3, a1, a2, v17);

  return a3;
}

uint64_t sub_1000BB43C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_100009B88(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    unint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1003617E0();
    goto LABEL_7;
  }
  sub_100573344(v15, a4 & 1);
  unint64_t v21 = sub_100009B88(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  unint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100579520(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000BB57C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v8);
  char v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_10035C64C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_100362310();
    goto LABEL_7;
  }
  sub_1005744D8(v16, a3 & 1);
  unint64_t v22 = sub_10035C64C(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100028998(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  return sub_100579568(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1000BB6FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_10035C1D0(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t *v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_100362594();
    goto LABEL_7;
  }
  sub_1005748B8(v15, a4 & 1);
  uint64_t v21 = sub_10035C1D0(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    sub_10003B754((uint64_t *)&unk_100788D30);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100579440(v12, a3, a1, a2, v18);

  return swift_retain();
}

uint64_t sub_1000BB838(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v8);
  char v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_10035C64C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t v21 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
      return sub_1000BCB84(a1, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_100362AC8();
    goto LABEL_7;
  }
  sub_100575058(v16, a3 & 1);
  unint64_t v23 = sub_10035C64C(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v23;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100028998(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  return sub_100579640(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1000BB9E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  __chkstk_darwin(v8);
  char v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_10035C64C(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_10036274C();
      goto LABEL_7;
    }
    sub_100574BA8(v16, a3 & 1);
    unint64_t v27 = sub_10035C64C(a2);
    if ((v17 & 1) == (v28 & 1))
    {
      unint64_t v13 = v27;
      uint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100028998(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      return sub_100579694(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7];
  uint64_t v21 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  uint64_t v24 = v21;
  uint64_t v25 = v20 + *(void *)(v22 + 72) * v13;

  return v23(v25, a1, v24);
}

uint64_t sub_1000BBBC0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  BOOL v5 = (void **)v4;
  char v10 = (void *)*v4;
  unint64_t v12 = sub_10035C1D0(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < result || (a4 & 1) == 0)
  {
    if (v17 >= result && (a4 & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100362FF0();
      goto LABEL_9;
    }
    sub_100575878(result, a4 & 1);
    uint64_t result = sub_10035C1D0(a3);
    if ((v16 & 1) == (v18 & 1))
    {
      unint64_t v12 = result;
      goto LABEL_9;
    }
LABEL_15:
    sub_10003B754((uint64_t *)&unk_100788D30);
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_9:
  int v19 = a2 & 1;
  uint64_t v20 = *v5;
  if (v16)
  {
    uint64_t v21 = v20[7] + 16 * v12;
    *(void *)uint64_t v21 = a1;
    *(unsigned char *)(v21 + 8) = v19 != 0;
  }
  else
  {
    sub_1005794D0(v12, a3, a1, v19, v20);
    return swift_retain();
  }
  return result;
}

id sub_1000BBCFC(char a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10035C188((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  id result = (id)(v10 + v11);
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 >= (uint64_t)result && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v15 = *v4;
    if (v13)
    {
LABEL_8:
      *(unsigned char *)(v15[7] + v9) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  if (v14 >= (uint64_t)result && (a3 & 1) == 0)
  {
    id result = sub_1003631AC();
    goto LABEL_7;
  }
  sub_100575B6C((uint64_t)result, a3 & 1);
  id result = (id)sub_10035C188((uint64_t)a2);
  if ((v13 & 1) != (v16 & 1))
  {
LABEL_15:
    sub_1000368FC(0, qword_10078E3D0);
    id result = (id)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v9 = (unint64_t)result;
  BOOL v15 = *v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100579838(v9, (uint64_t)a2, a1 & 1, v15);

  return a2;
}

uint64_t sub_1000BBE34(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_10035C704(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];
      uint64_t v22 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
      return sub_1000BCB84(a1, v21 + *(void *)(*(void *)(v22 - 8) + 72) * v14, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1003631B8();
    goto LABEL_7;
  }
  sub_100575B78(v17, a3 & 1);
  unint64_t v24 = sub_10035C704(a2);
  if ((v18 & 1) != (v25 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v24;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_10057987C(v14, (uint64_t)v11, a1, v20);
}

void sub_1000BC008(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  BOOL v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_100009B88(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10036352C();
    goto LABEL_7;
  }
  sub_100576090(v15, a4 & 1);
  unint64_t v20 = sub_100009B88(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_15:
    KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100579520(v12, a2, a3, a1, v18);

  swift_bridgeObjectRetain();
}

uint64_t sub_1000BC148()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000BC180@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000B5FF4(*(id *)(v2 + 16), a1, a2);
}

uint64_t sub_1000BC188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789FE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000BC1F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1000BC238()
{
  return type metadata accessor for TTRSmartListFilterEditorInteractor();
}

uint64_t type metadata accessor for TTRSmartListFilterEditorInteractor()
{
  uint64_t result = qword_10078A068;
  if (!qword_10078A068) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1000BC28C()
{
  sub_1000BC344();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000BC344()
{
  if (!qword_10078A078)
  {
    type metadata accessor for REMHashtagLabelCollection();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10078A078);
    }
  }
}

ValueMetadata *type metadata accessor for TTRSmartListFilterEditorInteractor.ListFetchOperationParams()
{
  return &type metadata for TTRSmartListFilterEditorInteractor.ListFetchOperationParams;
}

uint64_t sub_1000BC3AC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1000BC3C8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_10035C1D4(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_100363888();
      goto LABEL_7;
    }
    sub_100576670(v16, a3 & 1);
    unint64_t v22 = sub_10035C1D4(a2);
    if ((v17 & 1) == (v23 & 1))
    {
      unint64_t v13 = v22;
      uint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_100028998(a2, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      return sub_10057996C(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7] + 32 * v13;

  return sub_1000BCB28(a1, v20);
}

uint64_t sub_1000BC56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v6 = (void **)v5;
  char v12 = (void *)*v5;
  unint64_t v14 = sub_100009B88(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v6;
    if (v18)
    {
LABEL_8:
      char v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_10036426C();
    goto LABEL_7;
  }
  sub_1005775BC(v17, a5 & 1);
  unint64_t v23 = sub_100009B88(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  uint64_t v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100579A28(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1000BC6C0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for AnyListEntityID();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_10035C870(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t v21 = type metadata accessor for AnyListEntity();
      return sub_1000BCB84(a1, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v13, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_100364790();
    goto LABEL_7;
  }
  sub_100577EE0(v16, a3 & 1);
  unint64_t v23 = sub_10035C870(a2);
  if ((v17 & 1) != (v24 & 1))
  {
LABEL_14:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v13 = v23;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_100028998(a2, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
  return sub_100579A78(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_1000BC86C(uint64_t a1, char a2, char a3, double a4, double a5, double a6, double a7)
{
  uint64_t v8 = (void **)v7;
  uint64_t v16 = (void *)*v7;
  unint64_t v18 = sub_10035C948(a1, a2 & 1, a6, a7);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t result = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    char v24 = *v8;
    if (v22)
    {
LABEL_8:
      uint64_t v25 = (double *)(v24[7] + 16 * v18);
      *uint64_t v25 = a4;
      v25[1] = a5;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_100364C54();
    goto LABEL_7;
  }
  sub_100578C70(result, a3 & 1);
  uint64_t result = sub_10035C948(a1, a2 & 1, a6, a7);
  if ((v22 & 1) != (v26 & 1))
  {
LABEL_15:
    uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
  unint64_t v18 = result;
  char v24 = *v8;
  if (v22) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_100579BB4(v18, a1, a2 & 1, v24, a6, a7, a4, a5);
}

_OWORD *sub_1000BC9E4(_OWORD *a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_10035C1CC(a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_100364E00();
      goto LABEL_7;
    }
    sub_100578E4C(v12, a3 & 1);
    uint64_t v18 = sub_10035C1CC(a2);
    if ((v13 & 1) == (v19 & 1))
    {
      unint64_t v9 = v18;
      BOOL v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    type metadata accessor for OpenURLOptionsKey(0);
    uint64_t result = (_OWORD *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = (_OWORD *)(v15[7] + 32 * v9);
    sub_100038CD8((uint64_t)v16);
    return sub_100038E1C(a1, v16);
  }
LABEL_13:
  sub_100579C0C(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1000BCB28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000BCB84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000BCBF0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1000BCD40()
{
  sub_1000BCBF0();

  return swift_deallocClassInstance();
}

uint64_t sub_1000BCD74()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_1000BCD9C()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1000BCDC4()
{
  return (*(uint64_t (**)(void))(v0 + 128))() & 1;
}

uint64_t sub_1000BCDF0()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1000BCE18()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t sub_1000BCE40()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t sub_1000BCE68()
{
  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t sub_1000BCE90()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t sub_1000BCEB8()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t sub_1000BCEE0()
{
  return (*(uint64_t (**)(void))(v0 + 240))();
}

uint64_t sub_1000BCF08()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t sub_1000BCF30()
{
  return (*(uint64_t (**)(void))(v0 + 272))();
}

uint64_t sub_1000BCF58()
{
  return (*(uint64_t (**)(void))(v0 + 288))();
}

uint64_t sub_1000BCF80()
{
  return (*(uint64_t (**)(void))(v0 + 304))() & 1;
}

uint64_t sub_1000BCFAC()
{
  return (*(uint64_t (**)(void))(v0 + 320))();
}

uint64_t sub_1000BCFD4()
{
  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t sub_1000BCFFC(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 368))(a1, a2, a3 & 1);
}

uint64_t sub_1000BD028()
{
  return (*(uint64_t (**)(void))(v0 + 384))() & 1;
}

uint64_t sub_1000BD054()
{
  return (*(uint64_t (**)(void))(v0 + 400))() & 1;
}

uint64_t sub_1000BD080()
{
  return (*(uint64_t (**)(void))(v0 + 416))();
}

uint64_t sub_1000BD0A8()
{
  return (*(uint64_t (**)(void))(v0 + 432))() & 1;
}

uint64_t sub_1000BD0D4()
{
  return (*(uint64_t (**)(void))(v0 + 448))();
}

uint64_t sub_1000BD0FC()
{
  return (*(uint64_t (**)(void))(v0 + 464))();
}

uint64_t sub_1000BD124()
{
  return (*(uint64_t (**)(void))(v0 + 480))();
}

uint64_t sub_1000BD14C()
{
  return (*(uint64_t (**)(void))(v0 + 496))();
}

uint64_t sub_1000BD174()
{
  return (*(uint64_t (**)(void))(v0 + 512))();
}

uint64_t sub_1000BD1A0()
{
  return (*(uint64_t (**)(void))(v0 + 528))();
}

uint64_t sub_1000BD1CC()
{
  return (*(uint64_t (**)(void))(v0 + 544))();
}

uint64_t sub_1000BD1F8()
{
  return (*(uint64_t (**)(void))(v0 + 560))();
}

uint64_t sub_1000BD224()
{
  return (*(uint64_t (**)(void))(v0 + 576))() & 1;
}

uint64_t sub_1000BD254()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1000BD28C()
{
  sub_1000BD254();

  return swift_deallocClassInstance();
}

uint64_t sub_1000BD2C0()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIAnyTreeViewCellSeparatorCustomizing()
{
  return sub_10003BC54();
}

uint64_t sub_1000BD318(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000BD354(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1000BD35C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000BD398(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1000BD3D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_1000BD400()
{
  return (*(uint64_t (**)(void))(v0 + 32))() & 1;
}

uint64_t static TTRLocalizableStrings.ListDetail.newTab.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v1._object = (void *)0x80000001006A8310;
  v0._object = (void *)0x80000001006A8330;
  v1._uint64_t countAndFlagsBits = 0xD000000000000013;
  v2._uint64_t countAndFlagsBits = 0x7473694C2077654ELL;
  v2._object = (void *)0xE800000000000000;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.flag.getter()
{
  v0._object = (void *)0x80000001006A8350;
  v0._uint64_t countAndFlagsBits = 0xD000000000000017;
  v1._uint64_t countAndFlagsBits = 1734437958;
  v1._object = (void *)0xE400000000000000;
  v2._uint64_t countAndFlagsBits = 0x6E207265746C6946;
  v2._object = (void *)0xEB00000000656D61;
  return TTRLocalizedString(_:value:comment:)(v0, v1, v2)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.other.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v0._object = (void *)0x80000001006A8370;
  v1._object = (void *)0x80000001006A8390;
  v2._uint64_t countAndFlagsBits = 0x694620726568744FLL;
  v2._object = (void *)0xED0000737265746CLL;
  v1._uint64_t countAndFlagsBits = 0xD000000000000019;
  return TTRLocalizedString(_:value:comment:)(v0, v2, v1)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.documentation.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000022;
  v1._uint64_t countAndFlagsBits = 0xD000000000000068;
  v2._object = (void *)0x80000001006A83B0;
  v1._object = (void *)0x80000001006A83E0;
  v0._object = (void *)0x80000001006A8450;
  v2._uint64_t countAndFlagsBits = 0xD000000000000020;
  return TTRLocalizedString(_:value:comment:)(v2, v1, v0)._countAndFlagsBits;
}

uint64_t static TTRLocalizableStrings.ListDetail.Filters.disabledFiltersSectionTitle.getter()
{
  v0._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v1._object = (void *)0x80000001006A8480;
  v0._object = (void *)0x80000001006A84B0;
  v1._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v2._uint64_t countAndFlagsBits = 0x46207463656C6553;
  v2._object = (void *)0xEE00737265746C69;
  return TTRLocalizedString(_:value:comment:)(v1, v2, v0)._countAndFlagsBits;
}

uint64_t sub_1000BD5C4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078A800);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078A800);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000BD68C()
{
  uint64_t v1 = sub_10003B754(&qword_100789888);
  __chkstk_darwin(v1 - 8);
  v71 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754(&qword_10078A908);
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  __chkstk_darwin(v3);
  v69 = (char *)&v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_10003B754(&qword_10078A910);
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  v70 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078A918);
  uint64_t v77 = *(void *)(v6 - 8);
  uint64_t v78 = v6;
  __chkstk_darwin(v6);
  v75 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_10003B754(&qword_10078A920);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v54 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_10003B754(&qword_10078A928);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v57 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_10003B754(&qword_10078A930);
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v58 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10003B754(&qword_10078A938);
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v61 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10003B754(&qword_10078A940);
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v63 = (char *)&v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v13 = *(char **)(v0 + 32);
  if ((unint64_t)(v13 - 1) >= 3) {
    uint64_t v14 = v13;
  }
  else {
    char v13 = 0;
  }
  if (qword_100785240 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_10078A800);
  uint64_t v16 = v13;
  char v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v17, v18))
  {
    char v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    uint64_t v79 = (uint64_t)v13;
    *(void *)&long long v80 = v20;
    *(_DWORD *)char v19 = 136446210;
    sub_10003B754(&qword_10078A9C0);
    uint64_t v21 = Optional.descriptionOrNil.getter();
    uint64_t v79 = sub_1000385A8(v21, v22, (uint64_t *)&v80);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "upgradeInfoPublisher: kicks in {preferredCalDAVAccountID: %{public}s}", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v52 = *(void **)(v0 + 104);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = 0;
  uint64_t v24 = swift_allocObject();
  long long v53 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v24 + 16) = v53;
  *(void *)(v24 + 32) = v0;
  sub_10003B754(&qword_10078A948);
  swift_allocObject();
  swift_retain_n();
  swift_unknownObjectRetain();
  *(void *)&long long v80 = Future.init(_:)();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = v13;
  sub_100037EA0(&qword_10078A950, &qword_10078A948);
  *(void *)&long long v53 = v16;
  swift_retain();
  char v26 = v54;
  Publisher.compactMap<A>(_:)();
  swift_release();
  swift_release();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_1000C1FF4;
  *(void *)(v27 + 24) = v0;
  swift_retain();
  static Subscribers.Demand.unlimited.getter();
  sub_10003B754(&qword_10078A958);
  sub_100037EA0(&qword_10078A960, &qword_10078A920);
  sub_100037EA0(&qword_10078A968, &qword_10078A958);
  char v28 = v57;
  uint64_t v29 = v56;
  Publisher<>.flatMap<A>(maxPublishers:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v29);
  uint64_t v30 = swift_allocObject();
  uint64_t v31 = v52;
  *(void *)(v30 + 16) = v52;
  *(void *)(v30 + 24) = v23;
  sub_100037EA0(&qword_10078A970, &qword_10078A928);
  swift_retain();
  id v32 = v31;
  uint64_t v33 = v58;
  uint64_t v34 = v60;
  Publisher.tryMap<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v28, v34);
  sub_100037EA0(&qword_10078A978, &qword_10078A930);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  uint64_t v83 = 0;
  unint64_t v35 = v61;
  uint64_t v36 = v64;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v33, v36);
  sub_100037EA0(&qword_10078A980, &qword_10078A938);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  uint64_t v83 = 0;
  uint64_t v37 = v63;
  uint64_t v38 = v67;
  Publisher.replaceEmpty(with:)();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v38);
  sub_100037EA0(&qword_10078A988, &qword_10078A940);
  uint64_t v39 = v68;
  uint64_t v40 = Publisher.eraseToAnyPublisher()();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v37, v39);
  *(void *)&long long v80 = v40;
  sub_10003B754(&qword_10078A990);
  sub_100037EA0(&qword_10078A998, &qword_10078A990);
  sub_1000C2138();
  uint64_t v41 = v69;
  Publisher<>.setFailureType<A>(to:)();
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  *(void *)&long long v80 = static OS_dispatch_queue.main.getter();
  uint64_t v42 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v43 = (uint64_t)v71;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v71, 1, 1, v42);
  sub_100037EA0(&qword_10078A9A8, &qword_10078A908);
  sub_1000AC47C();
  Swift::Int v44 = v70;
  uint64_t v45 = v73;
  Publisher.timeout<A>(_:scheduler:options:customError:)();
  sub_10003B6F8(v43, &qword_100789888);

  (*(void (**)(char *, uint64_t))(v72 + 8))(v41, v45);
  sub_100037EA0(&qword_10078A9B0, &qword_10078A910);
  long long v80 = 0u;
  long long v81 = 0u;
  long long v82 = 0u;
  uint64_t v83 = 0;
  uint64_t v47 = v75;
  uint64_t v46 = v76;
  Publisher.replaceError(with:)();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v44, v46);
  sub_100037EA0(&qword_10078A9B8, &qword_10078A918);
  uint64_t v48 = v78;
  uint64_t v49 = Publisher.eraseToAnyPublisher()();

  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v47, v48);
  swift_release();
  return v49;
}

uint64_t sub_1000BE3D0(void *a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  if (qword_100785240 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100018BF8(v8, (uint64_t)qword_10078A800);
  id v9 = a1;
  id v10 = a2;
  id v11 = v9;
  id v12 = v10;
  char v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 138543362;
    id v16 = v12;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v21 = v12;

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "migrationDeviceInfosFuture: Will return a future to fetch ICDeviceListRequest for {calDAVAccountID: %{public}@}", v15, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v11;
  *(void *)(v17 + 24) = v12;
  *(unsigned char *)(v17 + 32) = a3 & 1;
  *(void *)(v17 + 40) = v4;
  sub_10003B754(&qword_10078A9C8);
  swift_allocObject();
  id v18 = v11;
  id v19 = v12;
  swift_retain();
  return Future.init(_:)();
}

double sub_1000BE634@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = *a1;
  unint64_t v7 = *(void *)(*a1 + 16);
  swift_beginAccess();
  *(void *)(a2 + 16) = v7;
  uint64_t v8 = &OBJC_PROTOCOL___CNComposeRecipientTextViewDelegate;
  if (v7 >= 2)
  {
    uint64_t v9 = v6;
    if (qword_100785240 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_10078A800);
    swift_retain();
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      char v13 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)char v13 = 134217984;
      swift_beginAccess();
      *(void *)&long long v44 = *(void *)(a2 + 16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "upgradeInfoPublisher: Got more than 1 eligible accounts for upgrade, currently we handle only 1 at a time {count: %ld}", v13, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    uint64_t v6 = v9;
  }
  os_log_type_t v14 = *(char **)(v6 + 16);
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v41 = v6;
    uint64_t v15 = (unsigned char *)(v6 + 48);
    do
    {
      if (a3)
      {
        uint64_t v17 = (void *)*((void *)v15 - 2);
        id v16 = (void *)*((void *)v15 - 1);
        char v18 = *v15;
        sub_1000368FC(0, qword_10078E3D0);
        id v19 = v16;
        id v20 = v17;
        id v21 = a3;
        char v22 = static NSObject.== infix(_:_:)();

        if (v22)
        {
          swift_bridgeObjectRelease();
          *(void *)&long long v46 = v20;
          uint64_t v8 = &OBJC_PROTOCOL___CNComposeRecipientTextViewDelegate;
          goto LABEL_28;
        }
      }
      v15 += 24;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    os_log_type_t v14 = *(char **)(v41 + 16);
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = 0;
      uint64_t v24 = (unsigned char *)(v41 + 48);
      do
      {
        uint64_t v25 = (char *)(v23 + 1);
        if (__OFADD__(v23, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        char v26 = (void *)*((void *)v24 - 1);
        char v18 = *v24;
        id v27 = *((id *)v24 - 2);
        id v19 = v26;
        if (objc_msgSend(v27, "rem_isPrimaryAppleAccount"))
        {
          swift_bridgeObjectRelease();
          *(void *)&long long v46 = v27;
          uint64_t v8 = &OBJC_PROTOCOL___CNComposeRecipientTextViewDelegate;
          goto LABEL_28;
        }

        ++v23;
        v24 += 24;
      }
      while (v25 != v14);
      swift_bridgeObjectRelease();
      if (*(void *)(v41 + 16))
      {
        os_log_type_t v14 = *(char **)(v41 + 32);
        id v19 = *(id *)(v41 + 40);
        char v18 = *(unsigned char *)(v41 + 48);
        char v28 = v14;
        id v29 = v19;
        goto LABEL_26;
      }
      os_log_type_t v14 = 0;
    }
    id v19 = 0;
    char v18 = 0;
LABEL_26:
    uint64_t v8 = &OBJC_PROTOCOL___CNComposeRecipientTextViewDelegate;
  }
  else
  {
    id v19 = 0;
    char v18 = 0;
  }
  *(void *)&long long v46 = v14;
LABEL_28:
  *((void *)&v46 + 1) = v19;
  char v47 = v18;
  if (v8[8].isa != (void *)-1) {
LABEL_34:
  }
    swift_once();
  uint64_t v30 = type metadata accessor for Logger();
  sub_100018BF8(v30, (uint64_t)qword_10078A800);
  id v31 = a3;
  id v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(void *)&long long v44 = a3;
    *(_DWORD *)uint64_t v34 = 136446466;
    sub_10003B754(&qword_10078A9C0);
    uint64_t v35 = Optional.descriptionOrNil.getter();
    *(void *)&long long v44 = sub_1000385A8(v35, v36, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2082;
    swift_beginAccess();
    long long v44 = v46;
    char v45 = v47;
    sub_1000C2558((id)v46, *((void **)&v46 + 1));
    sub_10003B754(&qword_10078A9D8);
    uint64_t v37 = String.init<A>(describing:)();
    *(void *)&long long v44 = sub_1000385A8(v37, v38, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "upgradeInfoPublisher: Selected eligible account for upgrade {preferred: %{public}s, selected: %{public}s}", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  swift_beginAccess();
  char v39 = v47;
  double result = *(double *)&v46;
  *(_OWORD *)a4 = v46;
  *(unsigned char *)(a4 + 16) = v39;
  return result;
}

uint64_t sub_1000BEB60@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void)@<X1>, uint64_t *a3@<X8>)
{
  a2(*(void *)a1, *(void *)(a1 + 8), *(unsigned __int8 *)(a1 + 16));
  sub_10003B754(&qword_10078A9C8);
  sub_100037EA0(&qword_10078A9D0, &qword_10078A9C8);
  uint64_t v4 = Publisher.eraseToAnyPublisher()();
  uint64_t result = swift_release();
  *a3 = v4;
  return result;
}

void sub_1000BEC0C(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v6 = *(void **)(a1 + 8);
  int v7 = *(unsigned __int8 *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  id v9 = *(id *)a1;
  id v10 = v6;
  LODWORD(v116) = [v9 rem_isPrimaryAppleAccount];
  id v11 = [v9 aa_primaryEmail];
  if (v11)
  {
    os_log_type_t v12 = v11;
    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v124 = v14;
  }
  else
  {
    unint64_t v124 = 0xE300000000000000;
    uint64_t v13 = 7104878;
  }
  int v114 = v7;
  uint64_t v121 = v13;
  if (qword_100785240 != -1) {
    swift_once();
  }
  uint64_t v15 = type metadata accessor for Logger();
  sub_100018BF8(v15, (uint64_t)qword_10078A800);
  id v16 = v9;
  id v17 = v10;
  swift_bridgeObjectRetain_n();
  char v18 = v16;
  id v19 = v17;
  id v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.default.getter();
  v122 = v18;
  v123 = v19;
  v111 = a4;
  uint64_t v112 = a3;
  if (os_log_type_enabled(v20, v21))
  {
    log = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v23 = (void *)swift_slowAlloc();
    v115 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138543874;
    uint64_t v131 = (uint64_t)v19;
    v125[0] = (uint64_t)v115;
    id v24 = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v23 = v19;

    *(_WORD *)(v22 + 12) = 2082;
    uint64_t v25 = Bool.yesno.getter();
    uint64_t v131 = sub_1000385A8(v25, v26, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v131 = sub_1000385A8(v121, v124, v125);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    char v18 = log;
    _os_log_impl((void *)&_mh_execute_header, log, v21, "upgradeInfoPublisher: Now getting the upgrade info for {calDAVAccountID: %{public}@, isPrimary: %{public}s, accountDesc: %{public}s}", (uint8_t *)v22, 0x20u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  v125[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    if (v27) {
      goto LABEL_11;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    uint64_t v31 = (uint64_t)_swiftEmptyArrayStorage;
    goto LABEL_23;
  }
  uint64_t v27 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_22;
  }
LABEL_11:
  if (v27 < 1)
  {
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((v8 & 0xC000000000000001) != 0) {
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v29 = *(id *)(v8 + 8 * i + 32);
    }
    uint64_t v30 = v29;
    if ([v29 upgradedTo2019OSes])
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = v125[0];
LABEL_23:
  v125[0] = (uint64_t)_swiftEmptyArrayStorage;
  if ((v31 & 0x8000000000000000) == 0 && (v31 & 0x4000000000000000) == 0)
  {
    uint64_t v32 = *(void *)(v31 + 16);
    swift_retain();
    os_log_type_t v33 = &selRef_setAxis_;
    if (v32) {
      goto LABEL_26;
    }
LABEL_38:
    swift_release();
    uint64_t v27 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_53;
    }
    goto LABEL_39;
  }
  swift_retain();
  uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
  os_log_type_t v33 = &selRef_setAxis_;
  if (!v32) {
    goto LABEL_38;
  }
LABEL_26:
  if (v32 < 1) {
    goto LABEL_99;
  }
  for (uint64_t j = 0; j != v32; ++j)
  {
    if ((v31 & 0xC000000000000001) != 0) {
      id v35 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v35 = *(id *)(v31 + 8 * j + 32);
    }
    unint64_t v36 = v35;
    if ([v35 v33[273]])
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    else
    {
    }
  }
  swift_release();
  uint64_t v27 = v125[0];
  if ((v125[0] & 0x8000000000000000) == 0)
  {
LABEL_39:
    if ((v27 & 0x4000000000000000) != 0) {
      goto LABEL_53;
    }
    uint64_t v37 = *(void *)(v27 + 16);
    if (v37) {
      goto LABEL_41;
    }
    goto LABEL_54;
  }
LABEL_53:
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v37) {
      break;
    }
LABEL_41:
    v125[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_1004D35AC(0, v37 & ~(v37 >> 63), 0);
    if (v37 < 0) {
      goto LABEL_100;
    }
    v115 = (void *)v32;
    v116 = (void *)v31;
    uint64_t v38 = 0;
    uint64_t v39 = v125[0];
    os_log_type_t v33 = (char **)(v27 & 0xC000000000000001);
    while (v37 != v38)
    {
      uint64_t v40 = v39;
      if (v33) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v27 + 8 * v38 + 32);
      }
      uint64_t v42 = v41;
      id v43 = [v41 name];
      if (!v43) {
        goto LABEL_127;
      }
      long long v44 = v43;
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v31 = v46;

      uint64_t v39 = v40;
      v125[0] = v40;
      uint64_t v32 = *(void *)(v40 + 16);
      unint64_t v47 = *(void *)(v39 + 24);
      if (v32 >= v47 >> 1)
      {
        sub_1004D35AC(v47 > 1, v32 + 1, 1);
        uint64_t v39 = v125[0];
      }
      ++v38;
      *(void *)(v39 + 16) = v32 + 1;
      uint64_t v48 = v39 + 16 * v32;
      *(void *)(v48 + 32) = v45;
      *(void *)(v48 + 40) = v31;
      if (v37 == v38)
      {
        uint64_t v49 = (void *)v39;
        swift_release();
        id v50 = v49;
        uint64_t v32 = (uint64_t)v115;
        uint64_t v31 = (uint64_t)v116;
        os_log_type_t v33 = &selRef_setAxis_;
        goto LABEL_55;
      }
    }
    __break(1u);
  }
LABEL_54:
  swift_release();
  id v50 = _swiftEmptyArrayStorage;
LABEL_55:
  v125[0] = (uint64_t)_swiftEmptyArrayStorage;
  v116 = v50;
  if (!v32)
  {
    swift_release();
    uint64_t v27 = (uint64_t)_swiftEmptyArrayStorage;
    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_82;
    }
    goto LABEL_68;
  }
  if (v32 < 1)
  {
LABEL_101:
    __break(1u);
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  for (uint64_t k = 0; k != v32; ++k)
  {
    if ((v31 & 0xC000000000000001) != 0) {
      id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v52 = *(id *)(v31 + 8 * k + 32);
    }
    long long v53 = v52;
    if ([v52 v33[273]])
    {
    }
    else
    {
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
  }
  swift_release();
  uint64_t v27 = v125[0];
  if ((v125[0] & 0x8000000000000000) == 0)
  {
LABEL_68:
    if ((v27 & 0x4000000000000000) != 0) {
      goto LABEL_82;
    }
    uint64_t v54 = *(void *)(v27 + 16);
    if (v54) {
      goto LABEL_70;
    }
    goto LABEL_83;
  }
LABEL_82:
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v54) {
      break;
    }
LABEL_70:
    v125[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_1004D35AC(0, v54 & ~(v54 >> 63), 0);
    if (v54 < 0) {
      goto LABEL_102;
    }
    uint64_t v55 = 0;
    uint64_t v56 = v125[0];
    while (v54 != v55)
    {
      uint64_t v57 = v56;
      if ((v27 & 0xC000000000000001) != 0) {
        id v58 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v58 = *(id *)(v27 + 8 * v55 + 32);
      }
      uint64_t v59 = v58;
      id v60 = [v58 name];
      if (!v60) {
        goto LABEL_128;
      }
      uint64_t v61 = v60;
      uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v64 = v63;

      uint64_t v56 = v57;
      v125[0] = v57;
      unint64_t v65 = *(void *)(v57 + 16);
      unint64_t v66 = *(void *)(v56 + 24);
      if (v65 >= v66 >> 1)
      {
        sub_1004D35AC(v66 > 1, v65 + 1, 1);
        uint64_t v56 = v125[0];
      }
      ++v55;
      *(void *)(v56 + 16) = v65 + 1;
      uint64_t v67 = v56 + 16 * v65;
      *(void *)(v67 + 32) = v62;
      *(void *)(v67 + 40) = v64;
      if (v54 == v55)
      {
        v115 = (void *)v56;
        swift_release();
        goto LABEL_84;
      }
    }
    __break(1u);
  }
LABEL_83:
  swift_release();
  v115 = _swiftEmptyArrayStorage;
LABEL_84:
  unint64_t v68 = sub_1000C218C(v123, a2);
  if (v118)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v27 = v68;
  v125[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (v68 >> 62)
  {
LABEL_103:
    swift_bridgeObjectRetain();
    uint64_t v69 = _CocoaArrayWrapper.endIndex.getter();
    if (v69) {
      goto LABEL_88;
    }
LABEL_104:
    swift_bridgeObjectRelease_n();
    unint64_t v77 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_105;
  }
  uint64_t v69 = *(void *)((v68 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v69) {
    goto LABEL_104;
  }
LABEL_88:
  if (v69 < 1)
  {
    __break(1u);
    goto LABEL_126;
  }
  for (uint64_t m = 0; m != v69; ++m)
  {
    if ((v27 & 0xC000000000000001) != 0) {
      id v75 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v75 = *(id *)(v27 + 8 * m + 32);
    }
    uint64_t v74 = v75;
    id v76 = [v75 shareeContext];
    if (v76)
    {
      v71 = v76;
      id v72 = [v76 sharees];

      sub_1000368FC(0, &qword_10078A128);
      uint64_t v73 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v74 = v72;
    }
    else
    {
      uint64_t v73 = _swiftEmptyArrayStorage;
    }

    sub_100569FD0((unint64_t)v73);
  }
  swift_bridgeObjectRelease_n();
  unint64_t v77 = v125[0];
LABEL_105:
  unint64_t v119 = v77;
  if (!(v77 >> 62))
  {
    uint64_t v78 = *(void *)((v77 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v78) {
      goto LABEL_107;
    }
LABEL_118:
    long long v80 = (char *)_swiftEmptyArrayStorage;
LABEL_119:
    swift_bridgeObjectRelease_n();
    v125[0] = (uint64_t)v80;
    sub_10003B754(&qword_10078E670);
    sub_100037EA0((unint64_t *)&qword_10079D020, &qword_10078E670);
    uint64_t v94 = Sequence<>.unique()();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v95 = *(void *)(v112 + 16);
    uint64_t v96 = 256;
    if (!v114) {
      uint64_t v96 = 0;
    }
    uint64_t v120 = v96 | (v95 > 1);
    id v97 = v123;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v98 = v94;
    swift_bridgeObjectRetain_n();
    id v99 = v97;
    v100 = Logger.logObject.getter();
    os_log_type_t v101 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v100, v101))
    {
      v113 = v100;
      BOOL v102 = v95 > 1;
      v103 = (uint8_t *)swift_slowAlloc();
      uint64_t v132 = swift_slowAlloc();
      *(_DWORD *)v103 = 136315138;
      v125[0] = (uint64_t)v99;
      v125[1] = v121;
      v125[2] = v124;
      BOOL v126 = v102;
      char v127 = v114;
      v128 = v116;
      v129 = v115;
      uint64_t v104 = v98;
      uint64_t v130 = v98;
      id v105 = v99;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v106 = String.init<A>(describing:)();
      v125[0] = sub_1000385A8(v106, v107, &v132);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v113, v101, "upgradeInfoPublisher: Returns proper TTRWelcomeUpgradeInfo {eligibleAccountInfo: %s}", v103, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v108 = v121;
      v109 = v111;
    }
    else
    {

      uint64_t v104 = v98;
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      v109 = v111;
      uint64_t v108 = v121;
    }
    void *v109 = v123;
    v109[1] = v108;
    v109[2] = v124;
    v109[3] = v120;
    v109[4] = v116;
    v109[5] = v115;
    v109[6] = v104;
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v78 = _CocoaArrayWrapper.endIndex.getter();
  if (!v78) {
    goto LABEL_118;
  }
LABEL_107:
  if (v78 >= 1)
  {
    uint64_t v79 = (id *)(v119 + 32);
    long long v80 = (char *)_swiftEmptyArrayStorage;
    do
    {
      id v81 = *v79;
      id v82 = [v81 address];
      if (v82)
      {
        uint64_t v83 = v82;
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        NSString v84 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v85 = [v84 rem_removingMailto];

        static String._unconditionallyBridgeFromObjectiveC(_:)();
        NSString v86 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v87 = [v86 rem_removingTel];

        uint64_t v88 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v90 = v89;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v80 = sub_100022F98(0, *((void *)v80 + 2) + 1, 1, v80);
        }
        unint64_t v92 = *((void *)v80 + 2);
        unint64_t v91 = *((void *)v80 + 3);
        if (v92 >= v91 >> 1) {
          long long v80 = sub_100022F98((char *)(v91 > 1), v92 + 1, 1, v80);
        }
        *((void *)v80 + 2) = v92 + 1;
        v93 = &v80[16 * v92];
        *((void *)v93 + 4) = v88;
        *((void *)v93 + 5) = v90;
      }
      else
      {
      }
      ++v79;
      --v78;
    }
    while (v78);
    goto LABEL_119;
  }
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
}

void sub_1000BFB3C(unsigned char *a1@<X8>)
{
  if (qword_100785240 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10078A800);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "upgradeInfoPublisher: Timed out getting upgrade info", v5, 2u);
    swift_slowDealloc();
  }

  *a1 = 1;
}

uint64_t sub_1000BFC30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = qword_100785240;
  swift_retain();
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100018BF8(v12, (uint64_t)qword_10078A800);
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "eligibleAccountsFuture: fetching accountsEligibleForMigration", v15, 2u);
    swift_slowDealloc();
  }

  id v16 = (void *)swift_allocObject();
  v16[2] = a5;
  v16[3] = a3;
  v16[4] = a4;
  v16[5] = sub_1000C2598;
  v16[6] = v10;
  id v17 = *(void (**)(uint64_t (*)(), void *))(*(void *)a3 + 168);
  swift_retain();
  swift_unknownObjectRetain();
  v17(sub_1000C2620, v16);

  return swift_release();
}

uint64_t sub_1000BFDE8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *, void), uint64_t a5)
{
  uint64_t v103 = a5;
  uint64_t v104 = a4;
  uint64_t v119 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v119 - 8);
  double v8 = __chkstk_darwin(v119);
  uint64_t v10 = (char *)&v102 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v126 = _swiftEmptyArrayStorage;
  id v11 = [*(id *)(a1 + 56) unsafeUntilSystemReady_allICloudACAccounts:v8];
  sub_1000368FC(0, (unint64_t *)&qword_10078A9E0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v122 = (uint64_t)_swiftEmptyArrayStorage;
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    if (v13) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_3:
      if (v13 < 1)
      {
        __break(1u);
        JUMPOUT(0x1000C0AA0);
      }
      uint64_t v121 = v7;
      for (uint64_t i = 0; i != v13; ++i)
      {
        if ((v12 & 0xC000000000000001) != 0) {
          id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v15 = *(id *)(v12 + 8 * i + 32);
        }
        id v16 = v15;
        id v17 = [v15 displayAccount];

        if (v17)
        {
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v122 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = v121;
      uint64_t v18 = v122;
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_16:
  uint64_t v19 = swift_bridgeObjectRelease();
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 160))(v19);
  int64_t v22 = 0;
  uint64_t v23 = *(void *)(v20 + 64);
  uint64_t v111 = v20 + 64;
  uint64_t v24 = 1 << *(unsigned char *)(v20 + 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v23;
  int64_t v112 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v27 = v18 & 0xFFFFFFFFFFFFFF8;
  uint64_t v113 = v18 & 0xFFFFFFFFFFFFFF8;
  uint64_t v114 = v20;
  if (v18 < 0) {
    uint64_t v27 = v18;
  }
  uint64_t v102 = v27;
  unint64_t v120 = v18 & 0xC000000000000001;
  uint64_t v118 = (void (**)(char *, uint64_t))(v7 + 8);
  v109 = &v123;
  *(void *)&long long v21 = 138543362;
  long long v110 = v21;
  *(void *)&long long v21 = 136446210;
  long long v106 = v21;
  id v105 = &type metadata for Any[8];
  uint64_t v121 = v18;
  while (v26)
  {
    unint64_t v30 = __clz(__rbit64(v26));
    uint64_t v31 = (v26 - 1) & v26;
    unint64_t v32 = v30 | (v22 << 6);
LABEL_39:
    unint64_t v36 = *(void **)(*(void *)(v114 + 48) + 8 * v32);
    int v37 = *(unsigned __int8 *)(*(void *)(v114 + 56) + v32);
    unint64_t v116 = v31;
    int64_t v117 = v22;
    LODWORD(v115) = v37;
    if ((unint64_t)v18 >> 62)
    {
      id v91 = v36;
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      if (!v38)
      {
LABEL_83:
        swift_bridgeObjectRelease();
        if (qword_100785240 != -1) {
          swift_once();
        }
        uint64_t v92 = type metadata accessor for Logger();
        sub_100018BF8(v92, (uint64_t)qword_10078A800);
        id v93 = v36;
        uint64_t v94 = Logger.logObject.getter();
        os_log_type_t v95 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v94, v95))
        {
          uint64_t v28 = swift_slowAlloc();
          id v29 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v28 = v110;
          *(void *)(v28 + 4) = v93;
          *id v29 = v93;
          _os_log_impl((void *)&_mh_execute_header, v94, v95, "eligibleAccountsFuture: cannot match a display iCloud ACAccount with the given eligible CalDAV account {calDAVAccountID: %{public}@}", (uint8_t *)v28, 0xCu);
          sub_10003B754(&qword_10078AC60);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v38 = *(void *)(v113 + 16);
      id v39 = v36;
      swift_bridgeObjectRetain();
      if (!v38) {
        goto LABEL_83;
      }
    }
    uint64_t v40 = 4;
    while (1)
    {
      if (v120) {
        id v41 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v41 = *(id *)(v18 + 8 * v40);
      }
      uint64_t v42 = v41;
      uint64_t v43 = v40 - 3;
      if (__OFADD__(v40 - 4, 1))
      {
        __break(1u);
        goto LABEL_93;
      }
      long long v44 = (void *)ACAccount.rem_childCalDAVAccountEnabledForReminders.getter();
      if (v44
        && (uint64_t v45 = v44,
            id v46 = objc_msgSend(v44, "identifier", v102, v103),
            v45,
            v46))
      {
        uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v49 = v48;
      }
      else
      {
        uint64_t v47 = 0;
        uint64_t v49 = 0;
      }
      id v50 = [v36 uuid:v102];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v51 = UUID.uuidString.getter();
      uint64_t v53 = v52;
      (*v118)(v10, v119);
      if (v49) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_43:
      uint64_t v18 = v121;
      ++v40;
      if (v43 == v38) {
        goto LABEL_83;
      }
    }
    if (v47 == v51 && v49 == v53)
    {
      uint64_t v18 = v121;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_59;
    }
    char v54 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v54 & 1) == 0)
    {

      goto LABEL_43;
    }
    uint64_t v18 = v121;
LABEL_59:
    swift_bridgeObjectRelease();
    char v55 = v115;
    switch((int)v115)
    {
      case 2:
      case 3:
      case 5:

        break;
      case 4:
        if (qword_100785240 != -1) {
          swift_once();
        }
        uint64_t v73 = type metadata accessor for Logger();
        sub_100018BF8(v73, (uint64_t)qword_10078A800);
        uint64_t v74 = v36;
        id v75 = Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v75, v76))
        {
          unint64_t v77 = (uint8_t *)swift_slowAlloc();
          uint64_t v78 = (void *)swift_slowAlloc();
          *(_DWORD *)unint64_t v77 = v110;
          uint64_t v122 = (uint64_t)v74;
          uint64_t v79 = v74;
          uint64_t v18 = v121;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v78 = v74;

          _os_log_impl((void *)&_mh_execute_header, v75, v76, "eligibleAccountsFuture: found eligible account in .error {calDAVAccountID: %{public}@}", v77, 0xCu);
          sub_10003B754(&qword_10078AC60);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          id v75 = v74;
        }

        long long v80 = v126;
        NSString v86 = v74;
        id v87 = v42;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v80 = sub_1005711B4(0, v80[2] + 1, 1, v80);
        }
        unint64_t v89 = v80[2];
        unint64_t v88 = v80[3];
        if (v89 >= v88 >> 1) {
          long long v80 = sub_1005711B4((void *)(v88 > 1), v89 + 1, 1, v80);
        }
        v80[2] = v89 + 1;
        uint64_t v90 = &v80[3 * v89];
        v90[4] = v87;
        v90[5] = v86;
        *((unsigned char *)v90 + 48) = 0;

        goto LABEL_81;
      default:
        uint64_t v56 = qword_100785240;
        id v57 = v36;
        id v58 = v42;
        if (v56 != -1) {
          swift_once();
        }
        char v59 = v55 & 1;
        uint64_t v60 = type metadata accessor for Logger();
        sub_100018BF8(v60, (uint64_t)qword_10078A800);
        id v61 = v57;
        id v62 = v58;
        id v63 = v61;
        id v64 = v62;
        unint64_t v65 = Logger.logObject.getter();
        os_log_type_t v66 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          uint64_t v68 = swift_slowAlloc();
          uint64_t v115 = v68;
          uint64_t v108 = v67;
          *(_DWORD *)uint64_t v67 = v106;
          uint64_t v125 = v68;
          unint64_t v107 = v67 + 4;
          uint64_t v122 = (uint64_t)v64;
          id v123 = v63;
          char v124 = v59;
          id v69 = v63;
          id v70 = v64;
          uint64_t v71 = String.init<A>(describing:)();
          uint64_t v122 = sub_1000385A8(v71, v72, &v125);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          uint64_t v18 = v121;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v65, v66, "eligibleAccountsFuture: found eligible account in .notStarted {eligibleAccountResult: %{public}s}", v108, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        long long v80 = v126;
        id v81 = v63;
        id v82 = v64;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v80 = sub_1005711B4(0, v80[2] + 1, 1, v80);
        }
        unint64_t v84 = v80[2];
        unint64_t v83 = v80[3];
        if (v84 >= v83 >> 1) {
          long long v80 = sub_1005711B4((void *)(v83 > 1), v84 + 1, 1, v80);
        }
        v80[2] = v84 + 1;
        id v85 = &v80[3 * v84];
        v85[4] = v82;
        v85[5] = v81;
        *((unsigned char *)v85 + 48) = v59;

LABEL_81:
        BOOL v126 = v80;
        break;
    }
LABEL_22:
    unint64_t v26 = v116;
    int64_t v22 = v117;
  }
  int64_t v33 = v22 + 1;
  if (__OFADD__(v22, 1))
  {
LABEL_93:
    __break(1u);
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  if (v33 >= v112) {
    goto LABEL_87;
  }
  unint64_t v34 = *(void *)(v111 + 8 * v33);
  ++v22;
  if (v34) {
    goto LABEL_38;
  }
  int64_t v22 = v33 + 1;
  if (v33 + 1 >= v112) {
    goto LABEL_87;
  }
  unint64_t v34 = *(void *)(v111 + 8 * v22);
  if (v34) {
    goto LABEL_38;
  }
  int64_t v22 = v33 + 2;
  if (v33 + 2 >= v112) {
    goto LABEL_87;
  }
  unint64_t v34 = *(void *)(v111 + 8 * v22);
  if (v34)
  {
LABEL_38:
    uint64_t v31 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v22 << 6);
    goto LABEL_39;
  }
  int64_t v35 = v33 + 3;
  if (v35 < v112)
  {
    unint64_t v34 = *(void *)(v111 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        int64_t v22 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          goto LABEL_94;
        }
        if (v22 >= v112) {
          goto LABEL_87;
        }
        unint64_t v34 = *(void *)(v111 + 8 * v22);
        ++v35;
        if (v34) {
          goto LABEL_38;
        }
      }
    }
    int64_t v22 = v35;
    goto LABEL_38;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  swift_release();
  if (qword_100785240 == -1) {
    goto LABEL_88;
  }
LABEL_95:
  swift_once();
LABEL_88:
  uint64_t v96 = type metadata accessor for Logger();
  sub_100018BF8(v96, (uint64_t)qword_10078A800);
  id v97 = v126;
  swift_bridgeObjectRetain();
  uint64_t v98 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v98, v99))
  {
    v100 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v100 = 134217984;
    uint64_t v122 = v97[2];
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "eligibleAccountsFuture: number of eligible accounts found: %ld", v100, 0xCu);
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  v104(v126, 0);
  return swift_bridgeObjectRelease();
}

void sub_1000C0AB0(void (*a1)(void), uint64_t a2, void *a3, void *a4, char a5)
{
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = qword_100785240;
  swift_retain();
  id v11 = a4;
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100018BF8(v12, (uint64_t)qword_10078A800);
  id v13 = v11;
  os_log_type_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  long long v44 = a1;
  if (os_log_type_enabled(v14, v15))
  {
    id v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = (void *)swift_slowAlloc();
    *(_DWORD *)id v16 = 138543362;
    id aBlock = (uint64_t)v13;
    id v17 = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v43 = v13;

    _os_log_impl((void *)&_mh_execute_header, v14, v15, "migrationDeviceInfosFuture: Fetching ICDeviceListRequest for {calDAVAccountID: %{public}@}", v16, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v18 = a3;
  id v19 = [v18 identifier];
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v23 = v22;

    id v24 = [objc_allocWithZone((Class)ICDeviceListRequest) initWithAccount:v18];
    if (v24)
    {
      uint64_t v25 = v24;
      swift_bridgeObjectRetain_n();
      unint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        id aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v28 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1000385A8(v21, (unint64_t)v23, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "migrationDeviceInfosFuture: Firing ICDeviceListRequest for {appleAccount: %{public}s}", v28, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      *(void *)(v32 + 24) = v21;
      *(void *)(v32 + 32) = v23;
      *(void *)(v32 + 40) = sub_1000C2688;
      *(void *)(v32 + 48) = v9;
      *(void *)(v32 + 56) = v18;
      *(void *)(v32 + 64) = v13;
      *(unsigned char *)(v32 + 72) = a5 & 1;
      id v50 = sub_1000C271C;
      uint64_t v51 = v32;
      id aBlock = (uint64_t)_NSConcreteStackBlock;
      unint64_t v47 = 1107296256;
      uint64_t v48 = sub_10000AD88;
      uint64_t v49 = &unk_100738DB0;
      int64_t v33 = _Block_copy(&aBlock);
      id v34 = v13;
      id v35 = v18;
      id v36 = v25;
      swift_release();
      [v36 fetchWithCompletionBlock:v33];
      _Block_release(v33);
    }
    else
    {
      swift_release();
      swift_bridgeObjectRetain_n();
      id v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        id aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v31 = 136446210;
        swift_bridgeObjectRetain();
        uint64_t v52 = sub_1000385A8(v21, (unint64_t)v23, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "migrationDeviceInfosFuture: Error creating ICDeviceListRequest for {appleAccount: %{public}s}", v31, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      int v37 = self;
      id aBlock = 0;
      unint64_t v47 = 0xE000000000000000;
      _StringGuts.grow(_:)(55);
      v38._object = (void *)0x80000001006A85C0;
      v38._uint64_t countAndFlagsBits = 0xD000000000000034;
      String.append(_:)(v38);
      v39._uint64_t countAndFlagsBits = v21;
      v39._object = v23;
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      v40._uint64_t countAndFlagsBits = 46;
      v40._object = (void *)0xE100000000000000;
      String.append(_:)(v40);
      NSString v41 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      id v42 = [v37 internalErrorWithDebugDescription:v41];

      id aBlock = (uint64_t)v42;
      unint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      LOBYTE(v50) = 1;
      v44((id *)&aBlock);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1000C1138(void *a1, uint64_t a2, void *a3, void (*a4)(uint64_t *), uint64_t a5, void *a6, void *a7, char a8)
{
  id v15 = [a1 devices];
  if (v15)
  {
    id v16 = v15;
    char v46 = a8;
    uint64_t v17 = a2;
    sub_1000368FC(0, (unint64_t *)&qword_10078A9E8);
    uint64_t type = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (qword_100785240 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100018BF8(v18, (uint64_t)qword_10078A800);
    swift_bridgeObjectRetain_n();
    id v19 = a1;
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      NSString v41 = a6;
      id v42 = a7;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000385A8(v17, (unint64_t)a3, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v22 + 12) = 2080;
      id v23 = [v19 devices];
      if (v23)
      {
        id v24 = v23;
        static Array._unconditionallyBridgeFromObjectiveC(_:)();
      }
      uint64_t v37 = Array.description.getter();
      unint64_t v39 = v38;
      swift_bridgeObjectRelease();
      sub_1000385A8(v37, v39, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "migrationDeviceInfosFuture: Got devices {appleAccount: %{public}s, devices: %s}", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      a6 = v41;
      a7 = v42;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v47 = (uint64_t)a6;
    unint64_t v48 = (unint64_t)a7;
    uint64_t v49 = v46 & 1;
    uint64_t v50 = type;
    char v51 = 0;
    id v36 = a6;
    id v40 = a7;
    a4(&v47);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100785240 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100018BF8(v25, (uint64_t)qword_10078A800);
    swift_bridgeObjectRetain_n();
    id v26 = a1;
    os_log_type_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      os_log_type_t typea = v28;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v43 = (void *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136446466;
      swift_bridgeObjectRetain();
      sub_1000385A8(a2, (unint64_t)a3, &v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v29 + 12) = 2112;
      uint64_t v30 = a2;
      id v31 = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v43 = v26;

      a2 = v30;
      _os_log_impl((void *)&_mh_execute_header, v27, typea, "migrationDeviceInfosFuture: Unable to get devices from iCloud. {appleAccount: %{public}s, request: %@}", (uint8_t *)v29, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v32 = self;
    uint64_t v47 = 0;
    unint64_t v48 = 0xE000000000000000;
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease();
    uint64_t v47 = 0xD000000000000028;
    unint64_t v48 = 0x80000001006A8600;
    v33._uint64_t countAndFlagsBits = a2;
    v33._object = a3;
    String.append(_:)(v33);
    v34._uint64_t countAndFlagsBits = 46;
    v34._object = (void *)0xE100000000000000;
    String.append(_:)(v34);
    NSString v35 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v36 = [v32 internalErrorWithDebugDescription:v35];

    uint64_t v47 = (uint64_t)v36;
    unint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    char v51 = 1;
    a4(&v47);
  }
}

uint64_t sub_1000C1730()
{
  sub_1000499D4((uint64_t)(v0 + 2));
  sub_1000C279C(v0[4]);
  swift_unknownObjectRelease();

  sub_100038CD8((uint64_t)(v0 + 8));
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC9Reminders20TTRWelcomeInteractor_getUpgradeInfoTimeout;
  uint64_t v2 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_1000C1800()
{
  return type metadata accessor for TTRWelcomeInteractor();
}

uint64_t type metadata accessor for TTRWelcomeInteractor()
{
  uint64_t result = qword_10078A848;
  if (!qword_10078A848) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000C1854()
{
  uint64_t result = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id *destroy for TTRWelcomeUpgradeInfo(id *result)
{
  if (*result)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TTRWelcomeUpgradeInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    id v7 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  return a1;
}

uint64_t assignWithCopy for TTRWelcomeUpgradeInfo(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1)
  {
    if (v5)
    {
      *(void *)a1 = v5;
      id v6 = v5;

      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_10003B6F8(a1, &qword_10078A900);
      long long v9 = a2[1];
      long long v8 = a2[2];
      long long v10 = *a2;
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      *(_OWORD *)(a1 + 16) = v9;
      *(_OWORD *)(a1 + 32) = v8;
      *(_OWORD *)a1 = v10;
    }
  }
  else if (v5)
  {
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(void *)(a1 + 40) = *((void *)a2 + 5);
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    id v7 = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v11 = *a2;
    long long v12 = a2[1];
    long long v13 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v12;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)a1 = v11;
  }
  return a1;
}

__n128 initializeWithTake for TTRIRemindersListCompletedCellContentConfiguration(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TTRWelcomeUpgradeInfo(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  if (!*(void *)a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    sub_10003B6F8(a1, &qword_10078A900);
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRWelcomeUpgradeInfo(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRWelcomeUpgradeInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRWelcomeUpgradeInfo()
{
  return &type metadata for TTRWelcomeUpgradeInfo;
}

uint64_t destroy for TTRWelcomeUpgradeInfo.EligibleAccountInfo(id *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRWelcomeUpgradeInfo.EligibleAccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRWelcomeUpgradeInfo.EligibleAccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRWelcomeUpgradeInfo.EligibleAccountInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRWelcomeUpgradeInfo.EligibleAccountInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRWelcomeUpgradeInfo.EligibleAccountInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRWelcomeUpgradeInfo.EligibleAccountInfo()
{
  return &type metadata for TTRWelcomeUpgradeInfo.EligibleAccountInfo;
}

uint64_t sub_1000C1FF8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C2008()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C2048(uint64_t a1, uint64_t a2)
{
  return sub_1000BFC30(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_1000C2054()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

double sub_1000C2094@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1000BE634(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

uint64_t sub_1000C209C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C20D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1000BEB60(a1, *(void (**)(void, void, void))(v2 + 16), a2);
}

uint64_t sub_1000C20DC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000C211C(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1000BEC0C(a1, *(void **)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_1000C2138()
{
  unint64_t result = qword_10078A9A0;
  if (!qword_10078A9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078A9A0);
  }
  return result;
}

unint64_t sub_1000C218C(void *a1, void *a2)
{
  uint64_t v22 = 0;
  id v5 = a1;
  id v6 = [a2 fetchAccountWithObjectID:v5 error:&v22];
  id v7 = v22;
  if (v6)
  {
    long long v8 = v6;
    uint64_t v22 = 0;
    long long v9 = v7;
    id v10 = [v8 fetchListsWithError:&v22];
    long long v11 = v22;
    if (v10)
    {
      long long v12 = v10;
      sub_1000368FC(0, &qword_100791CF0);
      unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      long long v13 = v11;

      uint64_t v22 = _swiftEmptyArrayStorage;
      if (v2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_5;
        }
      }
      else
      {
        uint64_t v14 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v14)
        {
LABEL_5:
          if (v14 < 1)
          {
            __break(1u);
            goto LABEL_32;
          }
          for (uint64_t i = 0; i != v14; ++i)
          {
            if ((v2 & 0xC000000000000001) != 0) {
              id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v16 = *(id *)(v2 + 8 * i + 32);
            }
            uint64_t v17 = v16;
            if ([v16 isShared] && objc_msgSend(v17, "sharingStatus") == (id)1)
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
            else
            {
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v2 = (unint64_t)v22;
LABEL_21:
          if (qword_100785240 != -1) {
            swift_once();
          }
          uint64_t v19 = type metadata accessor for Logger();
          sub_100018BF8(v19, (uint64_t)qword_10078A800);
          swift_retain_n();
          long long v11 = Logger.logObject.getter();
          LOBYTE(v14) = static os_log_type_t.default.getter();
          if (!os_log_type_enabled(v11, (os_log_type_t)v14))
          {

            swift_release_n();
            goto LABEL_29;
          }
          uint64_t v3 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v3 = 134217984;
          if ((v2 & 0x8000000000000000) == 0 && (v2 & 0x4000000000000000) == 0)
          {
            uint64_t v20 = *(NSObject **)(v2 + 16);
LABEL_27:
            swift_release();
            uint64_t v22 = v20;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release();
            _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v14, "fetchSharedFromMeLists: Got %ld lists.", v3, 0xCu);
            swift_slowDealloc();

LABEL_29:
            return v2;
          }
LABEL_32:
          swift_bridgeObjectRetain();
          uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
      goto LABEL_21;
    }
    unint64_t v2 = v22;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    id v5 = v8;
  }
  else
  {
    uint64_t v18 = v22;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }

  return v2;
}

id sub_1000C2558(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

uint64_t sub_1000C2598(uint64_t a1, char a2)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t *))(v2 + 16);
  uint64_t v5 = a1;
  char v6 = a2 & 1;
  return v3(&v5);
}

uint64_t sub_1000C25D8()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000C2620()
{
  return sub_1000BFDE8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(void *, void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1000C2630()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1000C2678(void (*a1)(void), uint64_t a2)
{
  sub_1000C0AB0(a1, a2, *(void **)(v2 + 16), *(void **)(v2 + 24), *(unsigned char *)(v2 + 32));
}

uint64_t sub_1000C2688(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_1000C2734(a1, (uint64_t)v4);
  return v2(v4);
}

uint64_t sub_1000C26C4()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 73, 7);
}

void sub_1000C271C()
{
  sub_1000C1138(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(uint64_t *))(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(unsigned char *)(v0 + 72));
}

uint64_t sub_1000C2734(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078A9F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1000C279C(id a1)
{
  if ((char *)a1 - 1 >= (char *)3) {
}
  }

uint64_t initializeBufferWithCopyOfBuffer for TTRWelcomeInteractor.EligibleAccountResult(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for TTRWelcomeInteractor.EligibleAccountResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  long long v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for TTRWelcomeInteractor.EligibleAccountResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRWelcomeInteractor.EligibleAccountResult(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRWelcomeInteractor.EligibleAccountResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRWelcomeInteractor.EligibleAccountResult()
{
  return &type metadata for TTRWelcomeInteractor.EligibleAccountResult;
}

unsigned char *storeEnumTagSinglePayload for TTRWelcomeInteractor.GetUpgradeInfoError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000C2A34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRWelcomeInteractor.GetUpgradeInfoError()
{
  return &type metadata for TTRWelcomeInteractor.GetUpgradeInfoError;
}

ValueMetadata *type metadata accessor for TTRWelcomeInteractor.DefaultDeviceListRequestFactory()
{
  return &type metadata for TTRWelcomeInteractor.DefaultDeviceListRequestFactory;
}

id *destroy for TTRWelcomeUpgradeInfo.Eligibility(id *result)
{
  if ((unint64_t)*result >= 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (id *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TTRWelcomeUpgradeInfo.Eligibility(uint64_t a1, uint64_t a2)
{
  int v3 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v8 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)a1 = v3;
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v5;
    *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
    uint64_t v6 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    id v7 = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for TTRWelcomeUpgradeInfo.Eligibility(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  if (*(void *)a1 < 0xFFFFFFFFuLL)
  {
    if ((unint64_t)v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      *(void *)(a1 + 40) = *((void *)a2 + 5);
      *(void *)(a1 + 48) = *((void *)a2 + 6);
      id v7 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    long long v8 = *a2;
    long long v9 = a2[1];
    long long v10 = a2[2];
    *(void *)(a1 + 48) = *((void *)a2 + 6);
    *(_OWORD *)(a1 + 16) = v9;
    *(_OWORD *)(a1 + 32) = v10;
    *(_OWORD *)a1 = v8;
    return a1;
  }
  if ((unint64_t)v5 < 0xFFFFFFFF)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *(void *)a1 = v5;
  id v6 = v5;

  *(void *)(a1 + 8) = *((void *)a2 + 1);
  *(void *)(a1 + 16) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRWelcomeUpgradeInfo.Eligibility(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    return a1;
  }
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRWelcomeUpgradeInfo.Eligibility(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRWelcomeUpgradeInfo.Eligibility(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 48) = 0;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1000C2EA4(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    uint64_t v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TTRWelcomeUpgradeInfo.Eligibility()
{
  return &type metadata for TTRWelcomeUpgradeInfo.Eligibility;
}

unint64_t sub_1000C2EE4()
{
  unint64_t result = qword_10078A9F8;
  if (!qword_10078A9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078A9F8);
  }
  return result;
}

id TTRIAccountsListsAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIAccountsListsAssembly()
{
  return self;
}

id TTRIAccountsListsAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsAssembly();
  return [super dealloc];
}

uint64_t sub_1000C3010()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078AA30);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078AA30);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void *sub_1000C30D8(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakInit();
  v2[4] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  v2[9] = 0;
  type metadata accessor for TTRIActivityAlertRouterCapability();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = 0;
  v2[10] = v5;
  v2[5] = a1;
  v2[6] = a2;
  return v2;
}

uint64_t sub_1000C3160()
{
  return firstly<A>(closure:)();
}

id sub_1000C31AC(void *a1, void *a2, void *a3, void *a4, void *a5, uint64_t a6, void *a7)
{
  id v11 = [a1 store];
  id v12 = [a1 objectID];
  id v13 = [self fetchOptionsIncludingDueDateDeltaAlerts];
  v32[0] = 0;
  id v14 = [v11 fetchReminderWithObjectID:v12 fetchOptions:v13 error:v32];

  if (v14)
  {
    id v15 = v32[0];
    id v16 = [v14 store];
    id v17 = [objc_allocWithZone((Class)REMSaveRequest) initWithStore:v16];

    id v18 = [v17 updateReminder:v14];
    uint64_t v19 = (void *)TTRReminderDetailSubject.init(reminderChangeItem:)();
    os_log_type_t v21 = v20;
    uint64_t v28 = 1;
    long long v29 = 0u;
    long long v30 = 0u;
    memset(v31, 0, sizeof(v31));
    id v22 = v18;
    v32[2] = a7;
    v32[3] = v19;
    v32[4] = v21;
    v32[5] = a2;
    v32[6] = a3;
    v32[7] = a4;
    v32[8] = a5;
    v32[9] = 0;
    __int16 v33 = 258;
    uint64_t v34 = 1;
    NSString v35 = &v28;
    id v36 = v31;
    uint64_t v37 = a6;
    __int16 v38 = 256;
    id v23 = (id)firstly<A>(closure:)();

    swift_release();
  }
  else
  {
    id v23 = v32[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v23;
}

uint64_t sub_1000C3404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  void v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_1000C34A0, v6, v5);
}

uint64_t sub_1000C34A0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1000C35F8;
    uint64_t v3 = v0[3];
    uint64_t v4 = v0[4];
    uint64_t v5 = v0[2];
    return UIViewController.presentAlert<A>(with:animated:)(v5, v3, 1, v4);
  }
  else
  {
    swift_release();
    uint64_t v6 = self;
    NSString v7 = String._bridgeToObjectiveC()();
    [v6 internalErrorWithDebugDescription:v7];

    swift_willThrow();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
}

uint64_t sub_1000C35F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  if (v0) {
    uint64_t v5 = sub_1000C37A4;
  }
  else {
    uint64_t v5 = sub_1000C3734;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1000C3734()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1000C37A4()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

id sub_1000C38E0(void *a1, uint64_t a2, char a3)
{
  return [a1 presentViewController:a2 animated:a3 & 1 completion:0];
}

void sub_1000C38FC(void (*a1)(void), uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = Strong;
    id v6 = [Strong presentingViewController];
    if (v6)
    {
      uint64_t v7 = v6;
      id v8 = [v6 presentedViewController];
      if (v8)
      {
        long long v9 = v8;
        sub_1000368FC(0, (unint64_t *)&qword_100791C40);
        id v10 = v5;
        id v11 = v9;
        LOBYTE(v9) = static NSObject.== infix(_:_:)();

        if (v9)
        {
          if (a1)
          {
            v13[4] = a1;
            v13[5] = a2;
            v13[0] = _NSConcreteStackBlock;
            v13[1] = 1107296256;
            v13[2] = sub_10000AD88;
            v13[3] = &unk_100739208;
            id v12 = _Block_copy(v13);
            swift_retain();
            swift_release();
          }
          else
          {
            id v12 = 0;
          }
          [v7 dismissViewControllerAnimated:1 completion:v12];
          _Block_release(v12);

          return;
        }
      }
    }
    else
    {
      uint64_t v7 = v5;
    }
  }
  if (a1) {
    a1();
  }
}

uint64_t sub_1000C3A94(uint64_t a1, void *a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v6 = [self sharedPrintController];
    [v6 dismissAnimated:0];

    sub_1000C3B50(a2, a3);
    return swift_release();
  }
  else if (a2)
  {
    return ((uint64_t (*)(void))a2)();
  }
  return result;
}

void sub_1000C3B50(void *a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v5 = Strong,
        id v6 = [Strong navigationController],
        v5,
        v6)
    || (id v6 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v7 = [v6 presentedViewController];

    if (v7)
    {
      if (a1)
      {
        v8[4] = a1;
        v8[5] = a2;
        v8[0] = _NSConcreteStackBlock;
        v8[1] = 1107296256;
        v8[2] = sub_10000AD88;
        _OWORD v8[3] = &unk_100739230;
        a1 = _Block_copy(v8);
        swift_retain();
        swift_release();
      }
      [v6 dismissViewControllerAnimated:1 completion:a1];
      _Block_release(a1);

      return;
    }
  }
  if (a1) {
    ((void (*)(void))a1)();
  }
}

void sub_1000C3C9C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a6;
  uint64_t v33 = a7;
  uint64_t v30 = a1;
  uint64_t v31 = a4;
  sub_1000C77A4(a5, (uint64_t)v34);
  uint64_t v28 = v34[1];
  id v29 = (id)v34[0];
  uint64_t v26 = v34[3];
  uint64_t v27 = v34[2];
  uint64_t v24 = v34[5];
  uint64_t v25 = v34[4];
  uint64_t v9 = type metadata accessor for REMListPickerDataView.PickerMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v14 = Strong,
        id v15 = objc_msgSend(Strong, "navigationController", v24, v25, v26, v27, v28, v29, v30, v31),
        v14,
        v15)
    || (id v15 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v16 = (unsigned int *)&enum case for REMListPickerDataView.PickerMode.cloudKitOnlyAccounts(_:);
    if ((a2 & 1) == 0) {
      id v16 = (unsigned int *)&enum case for REMListPickerDataView.PickerMode.allAccounts(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *v16, v9);
    sub_1000C77A4(a5, (uint64_t)v38);
    type metadata accessor for TTRIReminderListPickerAssembly();
    id v17 = (void *)static TTRIReminderListPickerAssembly.createViewController(mode:action:store:selectedListID:showingInstructionsForMovingReminders:modalPresentationStyle:)();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v32;
    *(void *)(v21 + 24) = v33;
    id v22 = *(void (**)(void (*)(void *, void *, char), uint64_t, uint64_t, uint64_t))(v19 + 16);
    swift_retain();
    v22(sub_1000C7844, v21, ObjectType, v19);
    sub_1000C77A4(a5, (uint64_t)v35);
    if ((~BYTE8(v36[0]) & 0xFE) != 0)
    {
      v36[2] = v35[0];
      v36[3] = v35[1];
      v37[0] = v36[0];
      *(_OWORD *)((char *)v37 + 9) = *(_OWORD *)((char *)v36 + 9);
      sub_1000C7850(v29, v28, v27, v26, v25, v24);
      if (UIViewController.canPresentDCIDrillinPopover(withAnchor:)())
      {
        UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
        [v15 presentViewController:v17 animated:1 completion:0];
        swift_unknownObjectRelease();

        sub_1000C7874(a5);
        return;
      }
      sub_1000C7874(a5);
    }
    id v23 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v17];
    [v15 presentViewController:v23 animated:1 completion:0];

    swift_unknownObjectRelease();
  }
}

void sub_1000C3FE4(void *a1, void *a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a4;
  *(void *)(v10 + 24) = a5;
  *(void *)(v10 + 32) = a2;
  *(unsigned char *)(v10 + 40) = a3 & 1;
  v13[4] = sub_1000C78F0;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  v13[2] = sub_10000AD88;
  v13[3] = &unk_100739168;
  uint64_t v11 = _Block_copy(v13);
  id v12 = a2;
  swift_retain();
  swift_release();
  [a1 dismissViewControllerAnimated:1 completion:v11];
  _Block_release(v11);
}

void sub_1000C40EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4 - 8);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v12 = Strong,
        id v13 = [Strong navigationController],
        v12,
        v13)
    || (id v13 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v14 = *(void *)(a1 + 16);
    id v15 = _swiftEmptyArrayStorage;
    if (v14)
    {
      id v26 = v13;
      uint64_t v27 = a2;
      id v29 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v16 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
      uint64_t v17 = *(void *)(v5 + 72);
      do
      {
        sub_1000C7D50(v16, (uint64_t)v10);
        sub_1000C7D50((uint64_t)v10, (uint64_t)v8);
        uint64_t v18 = (objc_class *)type metadata accessor for TTRIRemindersListRouter.ActivityItemSource(0);
        id v19 = objc_allocWithZone(v18);
        sub_1000C7D50((uint64_t)v8, (uint64_t)v19+ OBJC_IVAR____TtCC9Reminders23TTRIRemindersListRouterP33_6FFDCD23D13881F9EFBB4406934282BE18ActivityItemSource_item);
        v28.receiver = v19;
        v28.super_class = v18;
        [super init];
        sub_1000C7494((uint64_t)v8);
        sub_1000C7494((uint64_t)v10);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v16 += v17;
        --v14;
      }
      while (v14);
      id v15 = v29;
      id v13 = v26;
      a2 = v27;
    }
    sub_100399E44((unint64_t)v15);
    swift_bridgeObjectRelease();
    id v20 = objc_allocWithZone((Class)UIActivityViewController);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v22 = [v20 initWithActivityItems:isa applicationActivities:0];

    id v23 = [v22 presentationController];
    if (v23)
    {
      uint64_t v24 = v23;
      [v23 setSourceView:a2];
    }
    [v13 presentViewController:v22 animated:1 completion:0];
  }
}

void sub_1000C43A4(void *a1, uint64_t a2)
{
  sub_1000C77A4(a2, (uint64_t)v29);
  uint64_t v4 = (void *)v29[0];
  uint64_t v5 = v29[1];
  uint64_t v7 = v29[2];
  uint64_t v6 = v29[3];
  uint64_t v8 = v29[4];
  unsigned __int8 v27 = v30;
  if ([a1 canBeShared])
  {
    if ((uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong()) != 0
      && (uint64_t v10 = Strong,
          id v11 = [Strong navigationController],
          v10,
          v11)
      || (id v11 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
    {
      id v26 = v11;
      _s9Reminders23TTRListSharingUtilitiesC26addCKShareObserverIfNeeded3forySo7REMListC_tFZ_0(a1);
      id v25 = _s9Reminders23TTRListSharingUtilitiesC26activityItemsConfiguration3forSo010UIActivityfG0CSo7REMListC_tFZ_0(a1);
      id v12 = [objc_allocWithZone((Class)UIActivityViewController) initWithActivityItemsConfiguration:v25];
      if (qword_100785270 != -1) {
        swift_once();
      }
      swift_beginAccess();
      type metadata accessor for ActivityType(0);
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v12 setExcludedActivityTypes:isa];

      sub_1000C77A4(a2, (uint64_t)v31);
      char v14 = v32;
      if ((~(_BYTE)v32 & 0xFE) != 0)
      {
        uint64_t v23 = v31[1];
        uint64_t v24 = v31[0];
        uint64_t v21 = v31[3];
        uint64_t v22 = v31[2];
        uint64_t v20 = v31[4];
        sub_1000C7850(v4, v5, v7, v6, v8, v27);
        id v15 = [v12 popoverPresentationController];
        if (v15)
        {
          uint64_t v16 = v15;
          uint64_t v33 = v24;
          uint64_t v34 = v23;
          uint64_t v35 = v22;
          uint64_t v36 = v21;
          uint64_t v37 = v20;
          char v38 = v14;
          sub_1000C7850(v4, v5, v7, v6, v8, v27);
          UIPopoverPresentationController.setPopoverAnchorSource(_:)();

          sub_1000C7874(a2);
          sub_1000C7874(a2);
        }
        else
        {

          sub_1000C7874(a2);
        }
      }
      else
      {
      }
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a1;
      aBlock[4] = sub_1000C7D48;
      aBlock[5] = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100263628;
      void aBlock[3] = &unk_100739280;
      uint64_t v18 = _Block_copy(aBlock);
      id v19 = a1;
      swift_release();
      [v12 setCompletionWithItemsHandler:v18];
      _Block_release(v18);
      [v26 presentViewController:v12 animated:1 completion:0];
    }
  }
}

void sub_1000C470C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, void *a5)
{
  if ((a2 & 1) == 0)
  {
    _s9Reminders23TTRListSharingUtilitiesC11cancelShare3forySo7REMListC_tFZ_0(a5);
    if (a4)
    {
      swift_errorRetain();
      if (qword_100785248 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100018BF8(v7, (uint64_t)qword_10078AA30);
      swift_errorRetain();
      swift_errorRetain();
      id v8 = a5;
      oslog = Logger.logObject.getter();
      os_log_type_t v9 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(oslog, v9))
      {
        uint64_t v10 = swift_slowAlloc();
        id v11 = (void *)swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        *(_DWORD *)uint64_t v10 = 138412546;
        id v12 = [v8 objectID];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v11 = v12;

        *(_WORD *)(v10 + 12) = 2080;
        swift_getErrorValue();
        uint64_t v13 = Error.rem_errorDescription.getter();
        sub_1000385A8(v13, v14, &v16);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, oslog, v9, "Share sheet failed, canceling the share request. {list.objectID: %@, error: %s}", (uint8_t *)v10, 0x16u);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
    }
  }
}

void sub_1000C49C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v7 = Strong,
        id v8 = [Strong navigationController],
        v7,
        v8)
    || (id v8 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v9 = sub_1005084A8(1, a1, a2, a3);
    id v10 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v9];
    [v10 setModalPresentationStyle:2];
    swift_unknownObjectRelease();

    [v8 presentViewController:v10 animated:1 completion:0];
  }
}

uint64_t sub_1000C4B08(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078AC80);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10015CFC0(a1);
  v18[1] = v12;
  uint64_t v20 = sub_10027CD14();
  id v19 = [self mainRunLoop];
  uint64_t v13 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
  sub_10003B754(&qword_10078AC88);
  sub_1000368FC(0, (unint64_t *)&qword_10078AC90);
  sub_100037EA0(&qword_10078AC98, &qword_10078AC88);
  sub_1000C7F30();
  Publisher.receive<A>(on:options:)();
  sub_1000C7F98((uint64_t)v6);

  swift_release();
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v11;
  *(void *)(v15 + 24) = v14;
  sub_100037EA0(&qword_10078ACA8, &qword_10078AC80);
  swift_retain();
  uint64_t v16 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  *(void *)(v2 + 72) = v16;
  return swift_release();
}

void sub_1000C4E24(void *a1)
{
  if (*a1)
  {
    swift_errorRetain();
    if (qword_100785248 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100018BF8(v1, (uint64_t)qword_10078AA30);
    swift_errorRetain();
    swift_errorRetain();
    oslog = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v3 = 136315138;
      swift_getErrorValue();
      uint64_t v4 = Error.rem_errorDescription.getter();
      sub_1000385A8(v4, v5, &v7);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Failed to show print panel: %s", v3, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_1000C5034(void **a1)
{
  uint64_t v1 = *a1;
  sub_1000145EC((uint64_t)(a1 + 1), (uint64_t)&v14);
  sub_100038ED8(&v14, (uint64_t)v18);
  swift_beginAccess();
  id Strong = (id)swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)swift_unknownObjectWeakLoadStrong();
    id v4 = v1;
    if (v3 && (id v5 = [v3 navigationController], v3, v5))
    {
      swift_release();
    }
    else
    {
      id v5 = (id)swift_unknownObjectWeakLoadStrong();
      swift_release();
      if (!v5)
      {
        id Strong = 0;
        goto LABEL_9;
      }
    }
    id v7 = [v5 viewIfLoaded];

    id v8 = [v7 window];
    id Strong = [v8 windowScene];
  }
  else
  {
    id v6 = v1;
  }
LABEL_9:
  sub_1000145EC((uint64_t)v18, (uint64_t)v12);
  uint64_t v9 = swift_allocObject();
  sub_100038ED8(v12, v9 + 16);
  uint64_t v16 = sub_1000C80B0;
  uint64_t v17 = v9;
  id aBlock = _NSConcreteStackBlock;
  *(void *)&long long v14 = 1107296256;
  *((void *)&v14 + 1) = sub_1000C54C8;
  uint64_t v15 = &unk_100739320;
  id v10 = _Block_copy(&aBlock);
  swift_release();
  [v1 presentAnimated:1 hostingScene:Strong completionHandler:v10];
  _Block_release(v10);

  return sub_100038CD8((uint64_t)v18);
}

uint64_t sub_1000C5250(uint64_t a1, char a2, uint64_t a3, void *a4)
{
  if (qword_100785248 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100018BF8(v7, (uint64_t)qword_10078AA30);
  swift_errorRetain();
  swift_errorRetain();
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    if (a2) {
      uint64_t v11 = 1702195828;
    }
    else {
      uint64_t v11 = 0x65736C6166;
    }
    if (a2) {
      unint64_t v12 = 0xE400000000000000;
    }
    else {
      unint64_t v12 = 0xE500000000000000;
    }
    sub_1000385A8(v11, v12, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    if (a3)
    {
      swift_getErrorValue();
      uint64_t v13 = Error.rem_errorDescription.getter();
      unint64_t v15 = v14;
    }
    else
    {
      unint64_t v15 = 0xE300000000000000;
      uint64_t v13 = 7104878;
    }
    sub_1000385A8(v13, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "printInteractionController completion {isCompleted: %s, error: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v16 = a4[3];
  uint64_t v17 = a4[4];
  sub_100038D28(a4, v16);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
}

void sub_1000C54C8(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void (**)(id, uint64_t, void *))(a1 + 32);
  swift_retain();
  id v9 = a2;
  id v8 = a4;
  v7(v9, a3, a4);
  swift_release();
}

uint64_t sub_1000C555C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 40) = a8;
  *(void *)(v8 + 48) = v10;
  *(unsigned char *)(v8 + 64) = a7;
  *(void *)(v8 + 24) = a5;
  *(void *)(v8 + 32) = a6;
  *(void *)(v8 + 16) = a4;
  return _swift_task_switch(sub_1000C5590, 0, 0);
}

uint64_t sub_1000C5590()
{
  char v1 = *(unsigned char *)(v0 + 64);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 48);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 16)
                                                                                             + **(int **)(v2 + 16));
  id v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v4;
  *id v4 = v0;
  v4[1] = sub_1000C56AC;
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = *(void *)(v0 + 24);
  return v10(v8, v7, v1 & 1, v5, v6, ObjectType, v2);
}

uint64_t sub_1000C56AC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_1000C57A0(void *a1, char a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v13 = Strong,
        id v14 = [Strong navigationController],
        v13,
        v14)
    || (id v14 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    id v15 = [a1 sectionContext];

    if (v15)
    {
      id v16 = sub_10058735C(a1, a2 & 1, a3, a4, a5, a6);
      id v20 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v16];
      [v20 setModalPresentationStyle:2];
      swift_release();

      uint64_t v17 = swift_unknownObjectWeakLoadStrong();
      if (v17)
      {
        uint64_t v18 = (void *)v17;
        UIViewController.endFirstResponderEditing()();
      }
      [v14 presentViewController:v20 animated:1 completion:0];

      uint64_t v19 = v20;
    }
    else
    {
      uint64_t v19 = v14;
    }
  }
}

void sub_1000C5944(void *a1, uint64_t a2, uint64_t a3)
{
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v7 = Strong,
        id v8 = [Strong navigationController],
        v7,
        v8)
    || (id v8 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      UIViewController.endFirstResponderEditing()();
    }
    id v11 = sub_100350798(a1, a2, a3);
    [v8 presentViewController:v11 animated:1 completion:0];
  }
}

uint64_t sub_1000C5A40(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, unsigned __int8 a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, char a14, char a15, uint64_t a16)
{
  LODWORD(v94) = a8;
  uint64_t v92 = a6;
  uint64_t v93 = a7;
  uint64_t v90 = a2;
  uint64_t v91 = a5;
  uint64_t v99 = a4;
  uint64_t v19 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection();
  uint64_t v96 = *(void *)(v19 - 8);
  uint64_t v97 = v19;
  __chkstk_darwin(v19);
  uint64_t v80 = v20;
  id v81 = (char *)&v77 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003B754((uint64_t *)&unk_100791BF0);
  uint64_t v89 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v88 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for URL();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  id v26 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v101 = *(void *)(v27 - 8);
  uint64_t v102 = v27;
  __chkstk_darwin(v27);
  v100 = (char *)&v77 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v95 = a3;
  id Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v113 = a1;
  if (Strong
    && (id v30 = [Strong navigationController], Strong,
                                                                                                v30)
    || (id v30 = (id)swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v86 = v21;
    uint64_t v87 = v16;
    id v98 = v30;
    uint64_t v83 = a12;
    uint64_t v84 = a11;
    uint64_t v85 = a10;
    int v82 = a9;
    uint64_t v31 = sub_10003B754((uint64_t *)&unk_10078AC20);
    int v32 = v100;
    uint64_t v33 = &v100[*(int *)(v31 + 48)];
    *(void *)int v32 = [v113 objectID];
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v96 + 16);
    uint64_t v79 = v96 + 16;
    v78(v33, v99, v97);
    uint64_t v34 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.showDetail(_:);
    uint64_t v35 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v33, v34, v35);
    (*(void (**)(char *, void, uint64_t))(v101 + 104))(v32, enum case for REMNavigationSpecifier.reminder(_:), v102);
    if (qword_100785248 != -1) {
      swift_once();
    }
    uint64_t v36 = type metadata accessor for Logger();
    sub_100018BF8(v36, (uint64_t)qword_10078AA30);
    REMNavigationSpecifier.url.getter();
    sub_1003AA514(0x7265646E696D6552, 0xEE007473694C2073, 0x7265646E696D6552, 0xEF6C696174654420, (uint64_t)v26);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    type metadata accessor for TTRIReminderDetailAssembly();
    TTRReminderDetailPendingMoveInteractorCapability.PendingMoveContext.init(persistLastSelectedListID:customSmartListToMatch:)();
    uint64_t v37 = (void *)static TTRIReminderDetailAssembly.createViewController(subject:delegate:style:savesOnCommit:itemCount:pendingMoveContext:ttrSectionLite:manualOrdering:)();
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    sub_1000C7984(v105);
    id v42 = objc_allocWithZone((Class)UINavigationController);
    id v94 = v37;
    id v43 = [v42 initWithRootViewController:v37];
    sub_100038D28(a13, a13[3]);
    sub_1004E0C44((uint64_t)v106);
    sub_1000C77A4((uint64_t)v106, (uint64_t)v108);
    if ((~v109[8] & 0xFE) != 0)
    {
      long long v110 = v108[0];
      long long v111 = v108[1];
      v112[0] = *(_OWORD *)v109;
      *(_OWORD *)((char *)v112 + 9) = *(_OWORD *)&v109[9];
      UIPopoverArrowDirection.addingRTLFallback()();
      TTRIPopoverAnchor.withPermittedArrowDirectionsIfNil(_:)();
      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
      sub_1000C7C58((uint64_t)&v107);
    }
    long long v44 = v95;
    swift_unknownObjectWeakAssign();
    v44[4] = v41;
    swift_unknownObjectWeakAssign();
    id v45 = [v43 presentationController];
    if (v45)
    {
      char v46 = v45;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 96))(v46, a14 & 1, ObjectType, v41);
    }
    uint64_t v93 = v39;
    if (a15)
    {
      uint64_t v103 = UIViewController.futureForPresenting(_:animated:)();
      sub_10003B754(&qword_1007883B0);
      sub_10003B754(&qword_10078AC30);
      sub_100037EA0(&qword_10078AC38, &qword_10078AC30);
      unint64_t v48 = v88;
      Publisher<>.setFailureType<A>(to:)();
      swift_release();
      sub_100037EA0((unint64_t *)&unk_10078AC40, (uint64_t *)&unk_100791BF0);
      uint64_t v49 = v86;
      uint64_t v92 = Publisher<>.legacyPromise()();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v48, v49);
      os_log_type_t v95 = v43;
      uint64_t v50 = v81;
      uint64_t v51 = v97;
      v78(v81, v99, v97);
      uint64_t v52 = v96;
      unint64_t v53 = (*(unsigned __int8 *)(v96 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v96 + 80);
      char v54 = (char *)swift_allocObject();
      uint64_t v55 = v93;
      *((void *)v54 + 2) = a16;
      *((void *)v54 + 3) = v55;
      *((void *)v54 + 4) = v41;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v54[v53], v50, v51);
      uint64_t v56 = (void *)swift_allocObject();
      v56[2] = a16;
      v56[3] = sub_1000C7BB8;
      v56[4] = v54;
      swift_unknownObjectRetain();
      id v57 = (void *)zalgo.getter();
      uint64_t v58 = dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      sub_1000C7874((uint64_t)v106);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v59 = swift_getObjectType();
      uint64_t v60 = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 104))(v99, 0, a16, a16, v59, v41);
      uint64_t v103 = UIViewController.futureForPresenting(_:animated:)();
      sub_10003B754(&qword_1007883B0);
      sub_10003B754(&qword_10078AC30);
      sub_100037EA0(&qword_10078AC38, &qword_10078AC30);
      id v61 = v88;
      Publisher<>.setFailureType<A>(to:)();
      swift_release();
      sub_100037EA0((unint64_t *)&unk_10078AC40, (uint64_t *)&unk_100791BF0);
      uint64_t v62 = v86;
      Publisher<>.legacyPromise()();
      (*(void (**)(char *, uint64_t))(v89 + 8))(v61, v62);
      id v63 = (void *)swift_allocObject();
      v63[2] = a16;
      v63[3] = sub_1000C7A58;
      v63[4] = v60;
      swift_retain();
      id v64 = (void *)zalgo.getter();
      uint64_t v58 = dispatch thunk of Promise.then<A>(on:closure:)();

      sub_1000C7874((uint64_t)v106);
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
  }
  else
  {
    unint64_t v65 = self;
    uint64_t v103 = 0;
    unint64_t v104 = 0xE000000000000000;
    _StringGuts.grow(_:)(79);
    v66._object = (void *)0x80000001006A8800;
    v66._uint64_t countAndFlagsBits = 0xD00000000000004BLL;
    String.append(_:)(v66);
    id v67 = v113;
    id v68 = [v113 objectID];
    id v69 = [v68 description];
    uint64_t v70 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v72 = v71;

    v73._uint64_t countAndFlagsBits = v70;
    v73._object = v72;
    String.append(_:)(v73);

    swift_bridgeObjectRelease();
    v74._uint64_t countAndFlagsBits = 32041;
    v74._object = (void *)0xE200000000000000;
    String.append(_:)(v74);
    uint64_t v58 = v104;
    NSString v75 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v65 internalErrorWithDebugDescription:v75];

    swift_willThrow();
  }
  return v58;
}

uint64_t sub_1000C6528()
{
  swift_unknownObjectWeakDestroy();
  sub_1000499D4(v0 + 24);
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListRouter()
{
  return self;
}

void sub_1000C65B4()
{
  id v0 = [self sharedApplication];
  URL._bridgeToObjectiveC()(v1);
  uint64_t v3 = v2;
  sub_10042265C((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_1000C7CB8();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v0 openURL:v3 options:isa completionHandler:0];
}

uint64_t sub_1000C6690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10000C2D4;
  return sub_1000C3404(a1, a2, a3);
}

uint64_t sub_1000C6740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C7D50(v1+ OBJC_IVAR____TtCC9Reminders23TTRIRemindersListRouterP33_6FFDCD23D13881F9EFBB4406934282BE18ActivityItemSource_item, (uint64_t)v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for URL();
    a1[3] = v6;
    uint64_t v7 = sub_1000394A8(a1);
    return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(v7, v5, v6);
  }
  else
  {
    uint64_t v9 = sub_10003B754(&qword_10078AB58);
    swift_bridgeObjectRelease();

    id v10 = [objc_allocWithZone((Class)UIImage) init];
    a1[3] = sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    *a1 = (uint64_t)v10;
    uint64_t v11 = type metadata accessor for URL();
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v5, v11);
  }
}

uint64_t sub_1000C6958@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (uint64_t *)&v29[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)&v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000C7D50(v2+ OBJC_IVAR____TtCC9Reminders23TTRIRemindersListRouterP33_6FFDCD23D13881F9EFBB4406934282BE18ActivityItemSource_item, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(void *)(a2 + 24) = v5;
    uint64_t v12 = sub_1000394A8((uint64_t *)a2);
    return (*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 32))(v12, v11, v5);
  }
  uint64_t v14 = sub_10003B754(&qword_10078AB58);
  swift_bridgeObjectRelease();

  id v15 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 32);
  v15(v8, v11, v5);
  if (!a1) {
    goto LABEL_9;
  }
  uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v18 = v17;
  if (v16 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_12;
  }
  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_12:
    *(void *)(a2 + 24) = v5;
    uint64_t v22 = sub_1000394A8((uint64_t *)a2);
    return v15(v22, v8, v5);
  }
LABEL_9:
  URL.startAccessingSecurityScopedResource()();
  uint64_t v23 = Data.init(contentsOf:options:)();
  unint64_t v25 = v24;
  id v26 = objc_allocWithZone((Class)UIImage);
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  id v28 = [v26 initWithData:isa];
  sub_1000C7ED8(v23, v25);

  URL.stopAccessingSecurityScopedResource()();
  if (v28)
  {
    *(void *)(a2 + 24) = sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    *(void *)a2 = v28;
    return (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v6 + 8))(v8, v5);
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_1000C7018()
{
  return type metadata accessor for TTRIRemindersListRouter.ActivityItemSource(0);
}

uint64_t type metadata accessor for TTRIRemindersListRouter.ActivityItemSource(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_10078AB48);
}

uint64_t sub_1000C7040()
{
  uint64_t result = type metadata accessor for TTRIRemindersListRouterShareSheetItem(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIRemindersListRouterShareSheetItem(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10078ABD0);
}

uint64_t *sub_1000C70F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = type metadata accessor for URL();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v9 = sub_10003B754(&qword_10078AB58);
      uint64_t v10 = *(int *)(v9 + 48);
      uint64_t v11 = (uint64_t *)((char *)a1 + v10);
      uint64_t v12 = (uint64_t *)((char *)a2 + v10);
      uint64_t v14 = *v12;
      uint64_t v13 = v12[1];
      void *v11 = v14;
      v11[1] = v13;
      uint64_t v15 = *(int *)(v9 + 64);
      uint64_t v16 = *(void **)((char *)a2 + v15);
      *(uint64_t *)((char *)a1 + v15) = (uint64_t)v16;
      swift_bridgeObjectRetain();
      id v17 = v16;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1000C7220(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v4 = sub_10003B754(&qword_10078AB58);
    swift_bridgeObjectRelease();
    int v5 = *(void **)(a1 + *(int *)(v4 + 64));
  }
}

uint64_t sub_1000C72CC(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = sub_10003B754(&qword_10078AB58);
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t *)(a2 + v7);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    void *v8 = v11;
    v8[1] = v10;
    uint64_t v12 = *(int *)(v6 + 64);
    uint64_t v13 = *(void **)(a2 + v12);
    *(void *)(a1 + v12) = v13;
    swift_bridgeObjectRetain();
    id v14 = v13;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000C73A4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1000C7494(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v6 = sub_10003B754(&qword_10078AB58);
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (void *)(a1 + v7);
      uint64_t v9 = (void *)(a2 + v7);
      void *v8 = *v9;
      v8[1] = v9[1];
      uint64_t v10 = *(int *)(v6 + 64);
      uint64_t v11 = *(void **)(a2 + v10);
      *(void *)(a1 + v10) = v11;
      swift_bridgeObjectRetain();
      id v12 = v11;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1000C7494(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C74F0(uint64_t a1, uint64_t a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = sub_10003B754(&qword_10078AB58);
    *(_OWORD *)(a1 + *(int *)(v6 + 48)) = *(_OWORD *)(a2 + *(int *)(v6 + 48));
    *(void *)(a1 + *(int *)(v6 + 64)) = *(void *)(a2 + *(int *)(v6 + 64));
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1000C75B4(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_1000C7494(a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a1, a2, v5);
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v6 = sub_10003B754(&qword_10078AB58);
      *(_OWORD *)(a1 + *(int *)(v6 + 48)) = *(_OWORD *)(a2 + *(int *)(v6 + 48));
      *(void *)(a1 + *(int *)(v6 + 64)) = *(void *)(a2 + *(int *)(v6 + 64));
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for TTRSmartListFilterEditorViewModel.DateOptions(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1000C76DC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1000C76EC()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout3();
    v3[4] = v3;
    v3[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1000C779C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1000C77A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10078AC10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C780C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000C7844(void *a1, void *a2, char a3)
{
  sub_1000C3FE4(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

id sub_1000C7850(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  unsigned int v6 = a6 >> 6;
  if (v6 == 2) {
    return (id)swift_unknownObjectRetain();
  }
  if (v6 <= 1) {
    return result;
  }
  return result;
}

uint64_t sub_1000C7874(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000C78B0()
{
  swift_release();

  return _swift_deallocObject(v0, 41, 7);
}

uint64_t sub_1000C78F0()
{
  return (*(uint64_t (**)(void, void))(v0 + 16))(*(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1000C7924()
{
  return sub_1000C5A40(*(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned __int8 *)(v0 + 80), *(unsigned char *)(v0 + 81), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void **)(v0 + 112), *(unsigned char *)(v0 + 120), *(unsigned char *)(v0 + 121), *(void *)(v0 + 16));
}

uint64_t *sub_1000C7984(uint64_t *a1)
{
  uint64_t v2 = (void *)a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  uint64_t v7 = (void *)a1[8];
  uint64_t v8 = (void *)a1[9];
  sub_1000499C4(*a1);

  sub_1000C7A08(v3, v4, v5, v6);
  return a1;
}

void *sub_1000C7A08(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  if (a4 != 1)
  {
    sub_100065730(result);
    sub_100065730(a2);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000C7A58()
{
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)(v0);

  return swift_retain();
}

uint64_t sub_1000C7A84()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000C7ABC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1000C7AEC()
{
  uint64_t v1 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1000C7BB8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = *(void *)(type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection() - 8);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 104))(v4, 1, v1, v1, ObjectType, v3);
}

uint64_t sub_1000C7C58(uint64_t a1)
{
  return a1;
}

id sub_1000C7C90()
{
  return sub_1000C31AC(*(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(void **)(v0 + 48), *(void **)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 16));
}

unint64_t sub_1000C7CB8()
{
  unint64_t result = qword_10078AC50;
  if (!qword_10078AC50)
  {
    type metadata accessor for OpenExternalURLOptionsKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10078AC50);
  }
  return result;
}

uint64_t sub_1000C7D10()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000C7D48(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1000C470C(a1, a2, a3, a4, *(void **)(v4 + 16));
}

uint64_t sub_1000C7D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000C7DB4()
{
  uint64_t v1 = type metadata accessor for TTRIRemindersListRouterShareSheetItem(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000C7D50(v0+ OBJC_IVAR____TtCC9Reminders23TTRIRemindersListRouterP33_6FFDCD23D13881F9EFBB4406934282BE18ActivityItemSource_item, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000C7494((uint64_t)v3);
    return 0;
  }
  else
  {
    uint64_t v5 = sub_10003B754(&qword_10078AB58);
    uint64_t v6 = &v3[*(int *)(v5 + 48)];
    uint64_t v4 = *(void *)v6;
    uint64_t v7 = *((void *)v6 + 1);

    if (!v7) {
      uint64_t v4 = 0;
    }
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v3, v8);
  }
  return v4;
}

uint64_t sub_1000C7ED8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

unint64_t sub_1000C7F30()
{
  unint64_t result = qword_10078ACA0;
  if (!qword_10078ACA0)
  {
    sub_1000368FC(255, (unint64_t *)&qword_10078AC90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078ACA0);
  }
  return result;
}

uint64_t sub_1000C7F98(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100791B80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000C7FF8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000C8030()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000C8070(void **a1)
{
  return sub_1000C5034(a1);
}

uint64_t sub_1000C8078()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1000C80B0(uint64_t a1, char a2, uint64_t a3)
{
  return sub_1000C5250(a1, a2, a3, (void *)(v3 + 16));
}

uint64_t sub_1000C80DC()
{
  return sub_1000C7ABC();
}

uint64_t sub_1000C80F4(uint64_t a1)
{
  return sub_1000C8124(a1, (void (*)(uint64_t))&TTRRemindersBoardPresentationTreesManagementPresenterCapability.DeferredUpdateFlags.collapsedStateChange.unsafeMutableAddressor);
}

uint64_t sub_1000C810C(uint64_t a1)
{
  return sub_1000C8124(a1, (void (*)(uint64_t))&TTRRemindersBoardPresentationTreesManagementPresenterCapability.DeferredUpdateFlags.cellPresentationStateChange.unsafeMutableAddressor);
}

uint64_t sub_1000C8124(uint64_t a1, void (*a2)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    uint64_t v4 = swift_release();
    a2(v4);
    TTRRemindersBoardPresentationTreesManagementPresenterCapability.scheduleUpdate(for:)();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000C81AC()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersBoardPresenter()
{
  return self;
}

uint64_t sub_1000C8230@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v2 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v27 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersBoardCellPresentationStates();
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v29 = (uint64_t)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - v7;
  uint64_t v10 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v33 = v10;
  id v12 = *(void (**)(uint64_t, uint64_t))(v9 + 16);
  v12(ObjectType, v9);
  uint64_t v14 = v13;
  uint64_t v15 = swift_getObjectType();
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 192))(v15, v14);
  swift_unknownObjectRelease();
  uint64_t v17 = *(void *)(v16 + 24);
  uint64_t v28 = *(void *)(v16 + 32);
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  id v30 = v1;
  uint64_t v18 = v1[11]
      + direct field offset for TTRRemindersBoardCellPresentationStatesPresenterCapability.cellPresentationStates;
  swift_beginAccess();
  uint64_t v31 = v8;
  uint64_t v19 = (uint64_t)v8;
  uint64_t v20 = (uint64_t)v27;
  sub_1000CC9E0(v18, v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardCellPresentationStates);
  uint64_t v33 = v10;
  v12(ObjectType, v9);
  uint64_t v22 = v21;
  uint64_t v23 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v22 + 136))(v23, v22);
  swift_unknownObjectRelease();
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v20, 1, v24) == 1) {
    sub_10003B6F8(v20, &qword_100786EF0);
  }
  else {
    sub_1000CCDD8(v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  uint64_t v34 = swift_getObjectType();
  uint64_t v35 = *(void *)(v28 + 8);
  uint64_t v33 = v17;
  uint64_t v25 = (uint64_t)v31;
  sub_1000CC9E0((uint64_t)v31, v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardCellPresentationStates);
  swift_unknownObjectRetain();
  TTRRemindersBoardPresentationTrees.init(baseTree:isCollapsed:shouldhideEmptySectionless:placeholderRemindersAreHidden:cellPresentationStates:)();
  swift_unknownObjectRelease();
  return sub_1000CCDD8(v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardCellPresentationStates);
}

uint64_t sub_1000C8578@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 88)
     + direct field offset for TTRRemindersBoardCellPresentationStatesPresenterCapability.cellPresentationStates;
  swift_beginAccess();
  return sub_1000CC9E0(v3, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardCellPresentationStates);
}

uint64_t sub_1000C85E8()
{
  uint64_t v0 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v5[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter();
  sub_1000145EC((uint64_t)v2, (uint64_t)v5);
  sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTrees);
  TTRRemindersBoardCollapsedStatesPresenterCapability.pruneNonExistentItemIDs(with:)();
  return sub_100038CD8((uint64_t)v5);
}

char *sub_1000C86A4()
{
  return sub_1000CC084();
}

uint64_t sub_1000C86AC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a2;
  swift_unknownObjectWeakAssign();

  return swift_unknownObjectRelease();
}

Class sub_1000C86F0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v31 - v7;
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000CC9E0(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1000CCDD8((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    return 0;
  }
  else
  {
    sub_1000CCA84((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    uint64_t v13 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
    Class isa = 0;
    switch(v14)
    {
      case 1:
      case 2:

        Class isa = 0;
        break;
      case 3:
        break;
      default:

        uint64_t v37 = sub_1000368FC(0, &qword_1007894E0);
        sub_10003B754((uint64_t *)&unk_1007894B0);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_10066C430;
        v31[2] = sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        uint64_t v15 = static TTRLocalizableStrings.Common.renameButton.getter();
        uint64_t v32 = v16;
        uint64_t v33 = v15;
        NSString v17 = String._bridgeToObjectiveC()();
        id v35 = self;
        v31[1] = [v35 systemImageNamed:v17];

        uint64_t v18 = swift_allocObject();
        swift_weakInit();
        uint64_t v34 = &type metadata accessor for TTRRemindersListViewModel.ItemID;
        sub_1000CC9E0(a1, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        unint64_t v19 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
        uint64_t v20 = swift_allocObject();
        *(void *)(v20 + 16) = v18;
        sub_1000CCA84((uint64_t)v5, v20 + v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v21 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        UIMenuElementSize v22 = v36;
        *(void *)(v36 + 32) = v21;
        uint64_t v23 = static TTRLocalizableStrings.Common.deleteButton.getter();
        uint64_t v32 = v24;
        uint64_t v33 = v23;
        NSString v25 = String._bridgeToObjectiveC()();
        id v35 = [v35 systemImageNamed:v25];

        uint64_t v26 = swift_allocObject();
        swift_weakInit();
        sub_1000CC9E0(a1, (uint64_t)v5, (uint64_t (*)(void))v34);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v26;
        sub_1000CCA84((uint64_t)v5, v27 + v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        *(void *)(v22 + 40) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        UIMenuElementSize v38 = v22;
        specialized Array._endMutation()();
        v28._uint64_t countAndFlagsBits = 0;
        v28._object = (void *)0xE000000000000000;
        v39.value.super.Class isa = 0;
        v39.is_nil = 0;
        Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v39, 0, 0xFFFFFFFFFFFFFFFFLL, v38, v30).super.super.isa;
        break;
    }
    sub_1000CCDD8((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  }
  return isa;
}

uint64_t sub_1000C8BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter();
    sub_1000145EC((uint64_t)v9, (uint64_t)v17);
    sub_1000CCDD8((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTrees);
    uint64_t v15 = v18;
    uint64_t v16 = v19;
    sub_100038D28(v17, v18);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(a3, v15, v16);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
    {
      swift_release();
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
      return sub_100038CD8((uint64_t)v17);
    }
    else
    {
      sub_1000CCA84((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100038CD8((uint64_t)v17);
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_100439AF0((uint64_t)v13, 0);
        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
        swift_release();
      }
      return sub_1000CCDD8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return result;
}

uint64_t sub_1000C8E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = result;
    TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter();
    sub_1000145EC((uint64_t)v9, (uint64_t)v21);
    sub_1000CCDD8((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTrees);
    uint64_t v16 = v22;
    uint64_t v17 = v23;
    sub_100038D28(v21, v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 40))(a3, v16, v17);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
    {
      swift_release();
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
      return sub_100038CD8((uint64_t)v21);
    }
    else
    {
      sub_1000CCA84((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_100038CD8((uint64_t)v21);
      uint64_t v18 = *(void *)(v15 + 64);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v20 = *(void (**)(char *, Reminders::TTRReminderIDsWithMatchingHashtagsProvider (__swiftcall *)(Swift::OpaquePointer), void, uint64_t, uint64_t))(v18 + 80);
      swift_unknownObjectRetain();
      v20(v13, TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:), 0, ObjectType, v18);
      swift_release();
      swift_unknownObjectRelease();
      return sub_1000CCDD8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return result;
}

uint64_t sub_1000C914C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter();
  char v5 = TTRRemindersBoardPresentationTrees.isCollapsible(_:)();
  sub_1000CCDD8((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTrees);
  if ((v5 & 1) == 0) {
    return 0;
  }
  swift_retain();
  char v6 = TTRRemindersBoardCollapsedStatesPresenterCapability.isCollapsed(_:)();
  swift_release();
  if (v6) {
    return 0;
  }
  sub_10003B754(&qword_10078ADC0);
  uint64_t v8 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10066C6F0;
  sub_1000CC9E0(a1, v10 + v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  v11[1] = v10;
  swift_retain();
  sub_10003B754((uint64_t *)&unk_10078EEF0);
  sub_1000CCE38();
  TTRRemindersBoardCollapsedStatesPresenterCapability.collapse<A>(_:)();
  swift_bridgeObjectRelease();
  swift_release();
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.performPendingUpdatesImmediately()();
  return 1;
}

uint64_t sub_1000C9328@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem();
  __chkstk_darwin(v42);
  id v43 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = type metadata accessor for TTRRemindersBoardPresentationTrees();
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter();
  sub_1000145EC((uint64_t)v19, (uint64_t)v45);
  sub_1000CCDD8((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTrees);
  uint64_t v20 = v46;
  uint64_t v21 = v47;
  sub_100038D28(v45, v46);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 40))(a1, v20, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
    uint64_t v22 = sub_10003B754(&qword_100787080);
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v24 = v44;
  }
  else
  {
    sub_1000CCA84((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v25 = v46;
    uint64_t v26 = v47;
    sub_100038D28(v45, v46);
    sub_1000CC9E0((uint64_t)v16, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    v27(v6, 0, 1, v10);
    uint64_t v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 24))(v6, v25, v26);
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    uint64_t v29 = v28 - 1;
    if (v28 < 1)
    {
      sub_1000CCDD8((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v35 = sub_10003B754(&qword_100787080);
      uint64_t v36 = v44;
      swift_storeEnumTagMultiPayload();
      uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      uint64_t v24 = v36;
LABEL_7:
      uint64_t v37 = 0;
      uint64_t v22 = v35;
      goto LABEL_12;
    }
    uint64_t v30 = v46;
    uint64_t v31 = v47;
    sub_100038D28(v45, v46);
    sub_1000CC9E0((uint64_t)v16, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    v27(v6, 0, 1, v10);
    (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v31 + 32))(v29, v6, v30, v31);
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    uint64_t v32 = (uint64_t)v43;
    TTRRemindersListViewModel.Item.boardViewCasesOnly.getter();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v44;
    switch(EnumCaseMultiPayload)
    {
      case 1:
      case 2:
        sub_1000CCDD8(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem);
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_1000CCDD8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000CCDD8((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v35 = sub_10003B754(&qword_100787080);
        swift_storeEnumTagMultiPayload();
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
        uint64_t v24 = v34;
        goto LABEL_7;
      case 3:
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_1000CCDD8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000CCDD8((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v41 = sub_10003B754(&qword_100787080);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v34, 0, 1, v41);
        sub_1000CCDD8(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem);
        return sub_100038CD8((uint64_t)v45);
      case 4:
        sub_1000CCDD8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v39 = (uint64_t)v16;
        UIMenuElementSize v38 = &type metadata accessor for TTRRemindersListViewModel.Item;
        goto LABEL_10;
      default:
        sub_1000CCDD8((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000CCDD8((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        UIMenuElementSize v38 = &type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem;
        uint64_t v39 = v32;
LABEL_10:
        sub_1000CCDD8(v39, (uint64_t (*)(void))v38);
        uint64_t v22 = sub_10003B754(&qword_100787080);
        uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
        uint64_t v24 = v34;
        break;
    }
  }
  uint64_t v37 = 1;
LABEL_12:
  v23(v24, v37, 1, v22);
  return sub_100038CD8((uint64_t)v45);
}

uint64_t sub_1000C99EC()
{
  swift_retain();
  char v0 = TTRRemindersBoardCollapsedStatesPresenterCapability.isCollapsed(_:)();
  swift_release();
  return v0 & 1;
}

uint64_t sub_1000C9A30()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (*(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver))
    {
      swift_retain();
      uint64_t v1 = TTRICurrentTextInputModeObserver.currentTextInputMode.getter();
      swift_unknownObjectRelease();
      swift_release();
      return v1;
    }
    swift_unknownObjectRelease();
  }
  return 0;
}

uint64_t sub_1000C9AA8()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 64);
  id v5 = v1;
  char v6 = (void *)v4(ObjectType, v2);

  if (v6)
  {
    uint64_t v7 = UIView.firstResponderDescendant.getter();
  }
  else
  {
    uint64_t v7 = 0;
  }
  swift_unknownObjectRelease();
  return v7;
}

uint64_t sub_1000C9B5C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_columnReorderingController);
    if (v2)
    {
      uint64_t v3 = (void *)(v2
                    + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
      uint64_t result = swift_beginAccess();
      if (*v3)
      {
        swift_unknownObjectRelease();
        return 1;
      }
      uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_dragAndDropCoordinator);
      if (v4)
      {
        unint64_t v5 = *(void *)(*(void *)(v4
                                   + OBJC_IVAR____TtC9Reminders40TTRIRemindersBoardDragAndDropCoordinator_activityTracker)
                       + 16);
        swift_unknownObjectRelease();
        if ((v5 & 1) == 0) {
          return (v5 >> 1) & 1;
        }
        return 1;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

id sub_1000C9C14(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078ADA0);
  __chkstk_darwin(v2);
  uint64_t v87 = (uint64_t)&v85 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v91 = *(void *)(v96 - 8);
  uint64_t v4 = __chkstk_darwin(v96);
  uint64_t v89 = (uint64_t)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v85 = (uint64_t)&v85 - v7;
  __chkstk_darwin(v6);
  uint64_t v101 = (char *)&v85 - v8;
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v90 = (uint64_t)&v85 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  v100 = (char *)&v85 - v12;
  uint64_t updated = type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType(0);
  uint64_t v14 = __chkstk_darwin(updated - 8);
  uint64_t v98 = (uint64_t)&v85 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - v16;
  uint64_t v18 = type metadata accessor for TTRRemindersBoardPresentationTreeUpdates();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v85 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v85 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_10003B754(&qword_10078ADA8);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v97 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v85 - v27;
  uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v30 = __chkstk_darwin(v29 - 8);
  uint64_t v86 = (uint64_t)&v85 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v85 - v33;
  __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v85 - v35;
  uint64_t v94 = a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing;
  sub_10003B694(a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_itemToStartEditing, (uint64_t)v28, &qword_10078ADA8);
  uint64_t v37 = sub_10003B754(&qword_10078ADB0);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48);
  uint64_t v92 = v38 + 48;
  uint64_t v93 = v39;
  unsigned int v40 = v39((uint64_t)v28, 1, v37);
  uint64_t v88 = v2;
  uint64_t v102 = v20;
  uint64_t v95 = v37;
  if (v40 == 1)
  {
    sub_10003B6F8((uint64_t)v28, &qword_10078ADA8);
    uint64_t v41 = v99;
  }
  else
  {
    sub_1000CCA84((uint64_t)v28, (uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000CCA84((uint64_t)v34, (uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v42 = v99;
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    TTRRemindersBoardCellPresentationStatesPresenterCapability.prepareToInsertAndEdit(_:)();
    sub_1000CCDD8((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1000CCDD8((uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v41 = v42;
  }
  uint64_t v43 = v41;
  uint64_t v44 = a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_viewUpdateType;
  sub_1000CC9E0(a1 + OBJC_IVAR____TtC9Reminders42TTRRemindersListTreeViewModelUpdateContext_viewUpdateType, (uint64_t)v17, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  uint64_t v45 = sub_10003B754(&qword_10078ADB8);
  uint64_t v46 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48);
  if (v46(v17, 1, v45) != 1) {
    sub_1000CCDD8((uint64_t)v17, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
  }
  sub_10044B408();
  uint64_t v47 = v98;
  sub_1000CC9E0(v44, v98, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.ViewUpdateType);
  if (v46((char *)v47, 1, v45) != 1) {
    sub_1000CCDD8(v47, type metadata accessor for TTRRemindersListTreeViewModelUpdateContext.TreeDiffGenerationParameters);
  }
  uint64_t v49 = (uint64_t)v101;
  uint64_t v48 = (uint64_t)v102;
  uint64_t v50 = (uint64_t)v100;
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForDataModelUpdate(shouldReload:itemIDsToForceUpdate:animated:)();
  swift_bridgeObjectRelease();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v52 = Strong;
    id result = [Strong isViewLoaded];
    if (result)
    {
      if (!*(void *)&v52[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability])
      {
        __break(1u);
        return result;
      }
      swift_retain();
      TTRRemindersBoardPresentationTreesManagementViewCapability.applyPresentationTrees(with:)();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v54 = *(void *)(v43 + 48);
  uint64_t v55 = *(void *)(v43 + 56);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v103 = v54;
  (*(void (**)(uint64_t, uint64_t))(v55 + 16))(ObjectType, v55);
  uint64_t v58 = v57;
  uint64_t v59 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v58 + 136))(v59, v58);
  swift_unknownObjectRelease();
  uint64_t v60 = v90;
  sub_10003B694(v50, v90, &qword_100786EF0);
  id v61 = (int *)v96;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v60, 1, v96) != 1)
  {
    sub_1000CCA84(v60, v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    char v65 = *(unsigned char *)(v49 + v61[12]);
    uint64_t v66 = v85;
    sub_1000CC9E0(v49, v85, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v65)
    {
      int v67 = *(unsigned __int8 *)(v66 + v61[18]);
      sub_1000CCDD8(v66, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      uint64_t v68 = v89;
      sub_1000CC9E0(v49, v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      if (v67 == 1)
      {
        char v69 = *(unsigned char *)(v68 + v61[14]);
        sub_1000CCDD8(v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
        if (v69)
        {
          uint64_t v62 = TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)();
          id v64 = v70;
          uint64_t v63 = v71 & 0x10101;
LABEL_22:
          sub_1000CCDD8(v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
          goto LABEL_23;
        }
LABEL_21:
        uint64_t v62 = 0;
        uint64_t v63 = 0;
        id v64 = 0;
        goto LABEL_22;
      }
    }
    else
    {
      sub_1000CCDD8(v66, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      uint64_t v68 = v89;
      sub_1000CC9E0(v49, v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    }
    sub_1000CCDD8(v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    goto LABEL_21;
  }
  uint64_t v62 = 0;
  uint64_t v63 = 0;
  id v64 = 0;
LABEL_23:
  sub_10003B6F8(v50, &qword_100786EF0);
  uint64_t v72 = swift_unknownObjectWeakLoadStrong();
  uint64_t v73 = (uint64_t)v97;
  if (v72)
  {
    Swift::String v74 = (uint64_t *)(v72 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedRemindersState);
    NSString v75 = *(void **)(v72 + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_completedRemindersState + 16);
    *Swift::String v74 = v62;
    v74[1] = v63;
    v74[2] = (uint64_t)v64;
    id v76 = v64;

    sub_100436AC8();
    swift_unknownObjectRelease();
  }
  sub_10003B694(v94, v73, &qword_10078ADA8);
  uint64_t v77 = v95;
  if (v93(v73, 1, v95) == 1)
  {
    sub_10003B6F8(v73, &qword_10078ADA8);
  }
  else
  {
    char v78 = *(unsigned char *)(v73 + *(int *)(v77 + 48));
    uint64_t v79 = v88;
    uint64_t v80 = *(int *)(v88 + 48);
    uint64_t v81 = v73;
    uint64_t v82 = v87;
    sub_1000CCA84(v81, v87, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(unsigned char *)(v82 + v80) = v78;
    char v83 = *(unsigned char *)(v82 + *(int *)(v79 + 48));
    uint64_t v84 = v86;
    sub_1000CCA84(v82, v86, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_unknownObjectWeakLoadStrong())
    {
      sub_100439AF0(v84, v83);
      swift_unknownObjectRelease();
    }

    sub_1000CCDD8(v84, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return (id)sub_1000CCDD8(v48, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
}

uint64_t sub_1000CA62C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v3);
  uint64_t v7 = &v11[-v6];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = result;
    sub_1000CC9E0(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    uint64_t v10 = v9 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
    swift_beginAccess();
    sub_1000CC9E0(v10, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_beginAccess();
    sub_1000CC97C((uint64_t)v7, v10);
    swift_endAccess();
    sub_100342F5C((uint64_t)v5);
    sub_1000CCDD8((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    sub_1000CCDD8((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000CA790()
{
  uint64_t v0 = type metadata accessor for REMFeatureFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if ([Strong isViewLoaded])
    {
      (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for REMFeatureFlags.viewAnnotation(_:), v0);
      char v5 = REMFeatureFlags.isEnabled.getter();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      if (v5)
      {
        uint64_t v6 = (void *)TTRListOrCustomSmartList.objectID.getter();
        char v7 = TTRListOrCustomSmartList.isGroup.getter();
        sub_1003459FC(v6, v7 & 1);
        swift_unknownObjectRelease();

        return;
      }
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
    swift_unknownObjectRelease();
  }
}

id sub_1000CA930()
{
  uint64_t v0 = type metadata accessor for TTRRemindersBoardPresentationTreeUpdates();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForUpdatedItems(_:)();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return (id)sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
  }
  uint64_t v4 = Strong;
  id result = [Strong isViewLoaded];
  if (!result)
  {
    swift_unknownObjectRelease();
    return (id)sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
  }
  if (*(void *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability])
  {
    swift_retain();
    TTRRemindersBoardPresentationTreesManagementViewCapability.applyPresentationTrees(with:)();
    swift_unknownObjectRelease();
    swift_release();
    return (id)sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000CAA30(void *a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v5 - 8);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038D28(a1, a1[3]);
  TTRRemindersListEditingState.editingItem.getter();
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  }
  else
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_1000CCDD8((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
  }
  TTRRemindersBoardCellPresentationStatesPresenterCapability.editingItemID.setter();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (char *)result;
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    sub_100038D28(a1, v13);
    uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(v13, v14) & 1;
    sub_10033A8AC();
    if (v15 != [v12 isEditing])
    {
      UIViewController.endFirstResponderEditing()();
      uint64_t v16 = (objc_class *)type metadata accessor for TTRIShowRemindersViewController();
      v17.receiver = v12;
      v17.super_class = v16;
      [super setEditing:v15 animated:1];
      [*(id *)&v12[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController] setEditing:v15 animated:1];
      sub_10033C13C(1, 1);
      sub_10033D6DC();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000CACF4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10003B754(&qword_100791C80);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_10003B754(&qword_10078AD98);
  __chkstk_darwin(v9);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v13 = result + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar;
    swift_beginAccess();
    uint64_t v14 = (uint64_t)&v11[*(int *)(v9 + 48)];
    sub_10003B694(v13, (uint64_t)v11, &qword_100791C80);
    sub_10003B694(a1, v14, &qword_100791C80);
    uint64_t v15 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v15((uint64_t)v11, 1, v2) == 1)
    {
      if (v15(v14, 1, v2) == 1)
      {
        sub_10003B6F8((uint64_t)v11, &qword_100791C80);
        return swift_unknownObjectRelease();
      }
    }
    else
    {
      sub_10003B694((uint64_t)v11, (uint64_t)v8, &qword_100791C80);
      if (v15(v14, 1, v2) != 1)
      {
        sub_1000CCA84(v14, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        char v16 = static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)();
        sub_1000CCDD8((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        sub_1000CCDD8((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        sub_10003B6F8((uint64_t)v11, &qword_100791C80);
        if (v16) {
          return swift_unknownObjectRelease();
        }
LABEL_9:
        swift_beginAccess();
        sub_1000CC914(a1, v13);
        swift_endAccess();
        sub_10033A8AC();
        return swift_unknownObjectRelease();
      }
      sub_1000CCDD8((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
    }
    sub_10003B6F8((uint64_t)v11, &qword_10078AD98);
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1000CB00C(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v4, (uint64_t *)&unk_100788DC0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v4, 1, v8) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  }
  else
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_1000CCDD8((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
  }
  return TTRRemindersBoardCellPresentationStatesPresenterCapability.itemIDWithAnchoredPopover.setter();
}

uint64_t sub_1000CB1E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    if ((unint64_t)(a2 - 1) > 2) {
      uint64_t v15 = 0;
    }
    else {
      uint64_t v15 = qword_10066ED10[a2 - 1];
    }
    sub_10003B754(&qword_10078AD88);
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
    sub_1000CC9E0(a1, (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    type metadata accessor for MainActor();
    id v20 = v14;
    uint64_t v21 = static MainActor.shared.getter();
    unint64_t v22 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    unint64_t v23 = (v8 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v21;
    v24[3] = &protocol witness table for MainActor;
    v24[4] = v20;
    sub_1000CCA84((uint64_t)v9, (uint64_t)v24 + v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v25 = (char *)v24 + v23;
    *(void *)uint64_t v25 = v15;
    v25[8] = a3 & 1;
    sub_10022F8D4((uint64_t)v12, (uint64_t)&unk_10078AD90, (uint64_t)v24);
    uint64_t v26 = Promise.__allocating_init(task:)();
    swift_unknownObjectRelease();
    return v26;
  }
  else
  {
    uint64_t v16 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v16 - 8) + 104))(v17, enum case for PromiseError.cancelled(_:), v16);
    sub_10003B754(&qword_10078AD88);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_1000CB4D8()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v0 = TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
    swift_unknownObjectRelease();
    return v0;
  }
  else
  {
    uint64_t v2 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v2 - 8) + 104))(v3, enum case for PromiseError.cancelled(_:), v2);
    sub_10003B754(&qword_10078AD88);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_1000CB5C8(void *a1, void *a2, unsigned __int8 a3, char a4)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    *(void *)(sub_100343DDC() + 32) = *(void *)(result
                                                  + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight);
    swift_release();
    sub_100343DDC();
    sub_1001068AC(a1, a2, a3, a4 & 1);
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1000CB680()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = [Strong view];
    if (v1)
    {
      uint64_t v2 = v1;
      UIView.ttr_displayScale.getter();
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_1000CB6F4()
{
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id result = [result view];
    if (result)
    {
      id v1 = result;
      uint64_t v2 = UIView.ttr_userInterfaceLayoutDirection.getter();
      swift_unknownObjectRelease();

      return (id)v2;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000CB768()
{
  if (!swift_unknownObjectWeakLoadStrong()) {
    return 0;
  }
  sub_1003474CC();
  uint64_t v1 = v0;
  swift_unknownObjectRelease();
  return v1;
}

void *sub_1000CB7C4()
{
  id result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unsigned int v1 = [result _appearState];
    swift_unknownObjectRelease();
    return (void *)(v1 == 0);
  }
  return result;
}

uint64_t sub_1000CB814()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1000CB840@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TTRDerivedUntouchedPresentationTreeMaker();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_10074F358;
  *a1 = result;
  return result;
}

uint64_t sub_1000CB888(void *a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100345364(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000CB8E0(char a1, char a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_1003454C4(a1 & 1, a2 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000CB958(char a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging) = a1;
    sub_10033AFF8();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1000CB9C8()
{
}

uint64_t sub_1000CB9D0(char a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100345C8C(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

double sub_1000CBA28@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    uint64_t ObjectType = swift_getObjectType();
    if (sub_10033DA04(a1, a2))
    {
      *(void *)(a3 + 24) = ObjectType;
      *(void *)a3 = v7;
      return result;
    }
    swift_unknownObjectRelease();
  }
  double result = 0.0;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  return result;
}

uint64_t sub_1000CBAA4(uint64_t a1, char a2)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100439AF0(a1, a2 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000CBB10(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 184);
  swift_unknownObjectRetain();
  v5(a1, ObjectType, v3);

  return swift_unknownObjectRelease();
}

uint64_t sub_1000CBB9C(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10043D504(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000CBBF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10043DC18((uint64_t)v11);
    long long v9 = v11[1];
    long long v10 = v11[0];
    long long v8 = v11[2];
    uint64_t v3 = v12;
    char v4 = v13;
    uint64_t result = swift_unknownObjectRelease();
    long long v6 = v9;
    long long v5 = v10;
    long long v7 = v8;
  }
  else
  {
    uint64_t v3 = 0;
    char v4 = 0;
    long long v7 = xmmword_10066EBF0;
    long long v5 = 0uLL;
    long long v6 = 0uLL;
  }
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = v7;
  *(void *)(a1 + 48) = v3;
  *(unsigned char *)(a1 + 56) = v4;
  return result;
}

uint64_t sub_1000CBC9C(uint64_t a1, char a2)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = sub_10043DE30(a1, a2 & 1);
    swift_unknownObjectRelease();
    return v4;
  }
  else
  {
    uint64_t v6 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v6 - 8) + 104))(v7, enum case for PromiseError.cancelled(_:), v6);
    sub_10003B754(&qword_10079F3B0);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_1000CBD88(char a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_10033C994(a1 & 1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1000CBDE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 1, 1, v2);
}

uint64_t sub_1000CBE4C(void *a1, void *a2, unsigned __int8 a3, char a4)
{
  return sub_1000CB5C8(a1, a2, a3, a4 & 1);
}

uint64_t sub_1000CBE54()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100343DDC();
    sub_100107864();
    swift_unknownObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_1000CBEB8()
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    UIAccessibilityNotifications v0 = UIAccessibilityAnnouncementNotification;
    NSString v1 = String._bridgeToObjectiveC()();
    UIAccessibilityPostNotification(v0, v1);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1000CBF54()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1000CBF8C()
{
  uint64_t v0 = type metadata accessor for TTRRemindersBoardPresentationTreeUpdates();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForMoves()();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return (id)sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
  }
  uint64_t v4 = Strong;
  id result = [Strong isViewLoaded];
  if (!result)
  {
    swift_unknownObjectRelease();
    return (id)sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
  }
  if (*(void *)&v4[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability])
  {
    swift_retain();
    TTRRemindersBoardPresentationTreesManagementViewCapability.applyPresentationTrees(with:)();
    swift_unknownObjectRelease();
    swift_release();
    return (id)sub_1000CCDD8((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersBoardPresentationTreeUpdates);
  }
  __break(1u);
  return result;
}

char *sub_1000CC084()
{
  id result = (char *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    id result = (char *)[result isViewLoaded];
    if (result)
    {
      if (*(void *)&v1[OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_presentationTreesCapability])
      {
        swift_retain();
        TTRRemindersBoardPresentationTreesManagementViewCapability.applyPresentationTrees(with:)();
        swift_unknownObjectRelease();
        return (char *)swift_release();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      return (char *)swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1000CC144()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.isCollapsed(_:)() & 1;
}

unint64_t sub_1000CC16C()
{
  unint64_t result = qword_10078AD80;
  if (!qword_10078AD80)
  {
    type metadata accessor for PromiseError();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078AD80);
  }
  return result;
}

uint64_t sub_1000CC1C4()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();

  uint64_t v5 = v0 + v3;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_22;
      }
      goto LABEL_22;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_21:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v6 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
          break;
        default:
          break;
      }
LABEL_22:
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v17 = v5 + *(int *)(v16 + 20);
      if (*(void *)(v17 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v17 + 16), *(void *)(v17 + 24), *(void *)(v17 + 32), *(void *)(v17 + 40), *(void *)(v17 + 48), *(void *)(v17 + 56), *(unsigned char *)(v17 + 64));
        int v18 = *(unsigned __int8 *)(v17 + 120);
        if (v18 != 255) {
          sub_10003B9C0(*(void **)(v17 + 72), *(void *)(v17 + 80), *(void *)(v17 + 88), *(void *)(v17 + 96), *(void *)(v17 + 104), *(void *)(v17 + 112), v18 & 1);
        }
      }
      id v10 = *(id *)(v5 + *(int *)(v16 + 44));
      goto LABEL_26;
    case 2u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 3u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 4u:

      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_18;
          default:
            goto LABEL_27;
        }
      }
      break;
    case 5u:
      goto LABEL_16;
    case 6u:
LABEL_11:
      id v10 = *(id *)v5;
      goto LABEL_26;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v0 + v3, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = v5 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      v5 += *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v5 + 8)) {
        break;
      }
      swift_bridgeObjectRelease();
LABEL_16:
      id v10 = *(id *)(v5 + 16);
LABEL_26:

      break;
    case 8u:
      uint64_t v14 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14)) {
        break;
      }
LABEL_18:
      uint64_t v15 = type metadata accessor for Date();
LABEL_20:
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v5, v15);
      break;
    case 9u:
      v5 += *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v15 = type metadata accessor for AnyTip();
      goto LABEL_20;
    default:
      break;
  }
LABEL_27:

  return _swift_deallocObject(v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 9, v2 | 7);
}

uint64_t sub_1000CC7D4(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  id v10 = (char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v11 = *(void *)v10;
  char v12 = v10[8];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_10000C2D4;
  return sub_10043EEF4(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_1000CC914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100791C80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CC97C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000CC9E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000CCA48()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CCA84(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000CCAEC(uint64_t a1)
{
  return sub_1000CCD50(a1, sub_1000C8BD0);
}

uint64_t sub_1000CCB08()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = (id *)(v0 + v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:

      break;
    case 1:

      uint64_t v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_8;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            uint64_t v8 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
            break;
          default:
            goto LABEL_9;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_7;
        default:
          goto LABEL_9;
      }
  }
LABEL_9:

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000CCD38(uint64_t a1)
{
  return sub_1000CCD50(a1, sub_1000C8E78);
}

uint64_t sub_1000CCD50(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRRemindersListViewModel.ItemID() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_1000CCDD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000CCE38()
{
  unint64_t result = qword_10078ADC8;
  if (!qword_10078ADC8)
  {
    sub_100039710((uint64_t *)&unk_10078EEF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078ADC8);
  }
  return result;
}

uint64_t sub_1000CCE94()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078ADD0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078ADD0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1000CCF5C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1000C77A4(a4, (uint64_t)v40);
  uint64_t v33 = (void *)v40[0];
  uint64_t v34 = v40[1];
  uint64_t v35 = v40[2];
  uint64_t v36 = v40[3];
  unsigned __int8 v9 = v41;
  uint64_t v37 = v40[4];
  uint64_t v38 = v42;
  char v39 = v43;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (uint64_t v11 = Strong,
        id v12 = [Strong navigationController],
        v11,
        v12))
  {
    id v30 = v12;
    uint64_t v13 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v13 && (char v14 = UIViewController.canPresentDCIDrillinPopover(withAnchor:)(), v13, (v14 & 1) != 0))
    {
      unsigned __int8 v29 = v9;
      sub_1000CD6F4(a4);
      int v28 = 1;
    }
    else
    {
      int v28 = 0;
      char v39 = 0;
      uint64_t v37 = 0;
      uint64_t v38 = 0;
      uint64_t v35 = 0;
      uint64_t v36 = 0;
      uint64_t v33 = 0;
      uint64_t v34 = 0;
      unsigned __int8 v29 = -2;
    }
    if (a1 == 1) {
      uint64_t v19 = 1;
    }
    else {
      uint64_t v19 = 2;
    }
    type metadata accessor for TTRIReminderListPickerAssembly();
    uint64_t v16 = static TTRIReminderListPickerAssembly.createViewController(mode:action:store:selectedListID:showingInstructionsForMovingReminders:modalPresentationStyle:)();
    uint64_t v21 = v20;
    sub_1000CD65C((id)v19, 2);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = (void *)swift_allocObject();
    void v24[2] = v23;
    v24[3] = a6;
    v24[4] = a7;
    uint64_t v25 = *(void (**)(uint64_t (*)(uint64_t, uint64_t, char), void *, uint64_t, uint64_t))(v21 + 16);
    swift_retain();
    swift_retain();
    v25(sub_1000CD6E4, v24, ObjectType, v21);
    swift_release();
    if (!v28 || (v29 & 0xFE) == 0xFELL)
    {
      [v30 pushViewController:v16 animated:1];
      sub_1000A74BC(v33, v34, v35, v36, v37, v29);
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v44 = v33;
      uint64_t v45 = v34;
      uint64_t v46 = v35;
      uint64_t v47 = v36;
      uint64_t v48 = v37;
      unsigned __int8 v49 = v29;
      uint64_t v50 = v38;
      char v51 = v39 & 1;
      sub_1000C7850(v33, v34, v35, v36, v37, v29);
      UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
      uint64_t v26 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v26)
      {
        uint64_t v27 = v26;
        [v26 presentViewController:v16 animated:1 completion:0];
        sub_1000A74BC(v33, v34, v35, v36, v37, v29);
        sub_1000A74BC(v33, v34, v35, v36, v37, v29);
      }
      else
      {
        sub_1000A74BC(v33, v34, v35, v36, v37, v29);
        sub_1000A74BC(v33, v34, v35, v36, v37, v29);
      }
      swift_unknownObjectRelease();
    }
  }
  else
  {
    if (qword_100785250 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100018BF8(v15, (uint64_t)qword_10078ADD0);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v16, v17))
    {
      int v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v18 = 0;
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to get navigation controller -- Failed to show list picker", v18, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1000CD3F8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = a3 & 1;
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return a5(a2, v7);
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned __int8 v9 = Strong;
    id v10 = [Strong navigationController];

    if (v10)
    {
      id v11 = [v10 popViewControllerAnimated:1];
    }
  }
  a5(a2, v7);
  return swift_release();
}

void sub_1000CD4F0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1000729B8();
    uint64_t v2 = static HLPHelpViewController.viewController(forShowing:)();
    if (v2)
    {
      oslog = v2;
      [v1 presentViewController:animated:completion:];

      goto LABEL_9;
    }
  }
  if (qword_100785250 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100018BF8(v3, (uint64_t)qword_10078ADD0);
  oslog = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(oslog, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v4, "Attempted to open help with an empty view controller or HLPHelpViewController", v5, 2u);
    swift_slowDealloc();
  }
LABEL_9:
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRouter()
{
  return self;
}

void sub_1000CD65C(id a1, char a2)
{
  if (!a2) {
}
  }

uint64_t sub_1000CD66C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000CD6A4()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000CD6E4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1000CD3F8(a1, a2, a3 & 1, *(void *)(v3 + 16), *(uint64_t (**)(uint64_t, uint64_t))(v3 + 24));
}

uint64_t sub_1000CD6F4(uint64_t a1)
{
  return a1;
}

id sub_1000CD730(id result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if ((~a6 & 0xFE) != 0) {
    return sub_1000C7850(result, a2, a3, a4, a5, a6);
  }
  return result;
}

uint64_t sub_1000CD744@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v7 - 8);
  unsigned __int8 v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v10 - 8);
  id v12 = (void *)((char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
  if (v13)
  {
    uint64_t v42 = v9;
    char v43 = v6;
    uint64_t v44 = a1;
    id v14 = v13;
    *id v12 = [v14 objectID];
    uint64_t v15 = type metadata accessor for TTRListType();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 0, 1, v15);
    id v41 = v14;
    id v16 = [v14 name];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v39 = v18;
    uint64_t v40 = v17;

    uint64_t v38 = static TTRListColors.SmartList.all.getter();
    uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
    uint64_t v22 = v21(ObjectType, v19);
    if (v22) {
      swift_unknownObjectRelease();
    }
    uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(ObjectType, v19);
    if (v23) {
      swift_unknownObjectRelease();
    }
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 56))(v45, ObjectType, v19);
    sub_10003B6F8((uint64_t)v45, &qword_100791FA0);
    if (v21(ObjectType, v19))
    {
      uint64_t v25 = v24;
      uint64_t v26 = swift_getObjectType();
      int v37 = (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
      swift_unknownObjectRelease();
    }
    else
    {
      int v37 = 0;
    }
    v36[1] = v22 != 0;
    v36[2] = v23 != 0;
    id v30 = v41;
    id v31 = [v41 name];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v32 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v42, 1, 1, v32);
    uint64_t v33 = type metadata accessor for TTRTemplatePublicLinkData();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v43, 1, 1, v33);
    uint64_t v34 = v44;
    TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();

    uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 0, 1, v35);
  }
  else
  {
    uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
    int v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
    return v28(a1, 1, 1, v27);
  }
}

uint64_t sub_1000CDC54()
{
  return swift_retain();
}

uint64_t (*sub_1000CDC94())(uint64_t a1)
{
  return sub_1000D6C94;
}

uint64_t sub_1000CDCF0(uint64_t a1)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    char v2 = sub_1000CDD64(a1);
    swift_release();
    char v3 = v2 ^ 1;
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1000CDD64(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v5);
  uint64_t v7 = (id *)((char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v13 = (id *)((char *)&v37 - v12);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v14);
  id v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D6868(a1, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  char v17 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 3u:
    case 4u:
      uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.Item;
      uint64_t v19 = (uint64_t)v13;
      goto LABEL_3;
    case 5u:

      goto LABEL_15;
    case 6u:

      goto LABEL_15;
    case 7u:
    case 8u:
    case 9u:
      uint64_t v20 = &type metadata accessor for TTRRemindersListViewModel.Item;
      uint64_t v21 = (uint64_t)v13;
LABEL_14:
      sub_1000D68D0(v21, (uint64_t (*)(void))v20);
      goto LABEL_15;
    case 0xAu:
    case 0xBu:
      return v17 & 1;
    default:
      sub_1000D6800((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000D6868((uint64_t)v16, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          id v39 = *v7;
          id v23 = [v39 entityName];
          uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;

          sub_1000368FC(0, &qword_10078B5E8);
          id v26 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
          uint64_t v27 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v29 = v28;

          uint64_t v30 = v40;
          if (v27 == v40 && v29 == v25)
          {
            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
          char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v32)
          {
LABEL_26:
            sub_1000D68D0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

            swift_bridgeObjectRelease();
            goto LABEL_4;
          }
          sub_1000368FC(0, &qword_10078B5F0);
          id v33 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
          uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v35 = v34;

          if (v38 == v30 && v35 == v25)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v36 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            if ((v36 & 1) == 0)
            {
              char v17 = v16[*(int *)(v14 + 40)];
              sub_1000D68D0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              return v17 & 1;
            }
          }
          uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v19 = (uint64_t)v16;
LABEL_3:
          sub_1000D68D0(v19, (uint64_t (*)(void))v18);
LABEL_4:
          swift_retain();
          swift_retain();
          TTRMutableTreeStorage.parent(of:)();
          swift_release();
          swift_release();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v4, 1, v8) == 1)
          {
            sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
LABEL_15:
            char v17 = 0;
          }
          else
          {
            sub_1000D6800((uint64_t)v4, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            char v17 = sub_1000CDD64(v11);
            sub_1000D68D0((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
          return v17 & 1;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          sub_1000D68D0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          uint64_t v20 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
          uint64_t v21 = (uint64_t)v7;
          goto LABEL_14;
        case 8u:
        case 9u:
          sub_1000D68D0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);

          goto LABEL_4;
        default:
          uint64_t v20 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
          uint64_t v21 = (uint64_t)v16;
          goto LABEL_14;
      }
  }
}

_UNKNOWN **sub_1000CE3C0()
{
  return &off_100735310;
}

uint64_t sub_1000CE3CC@<X0>(int64x2_t *a1@<X8>)
{
  id v33 = a1;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v2);
  uint64_t v4 = (id *)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v31.i8[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = __chkstk_darwin(v8);
  __chkstk_darwin(v11);
  uint64_t v13 = &v31.i8[-v12];
  swift_retain();
  sub_100458524((uint64_t)v7);
  swift_release();
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v7, 1, v14) == 1)
  {
    uint64_t result = sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788DC0);
LABEL_17:
    char v24 = 0;
    uint64_t v25 = 0;
    int64x2_t v26 = 0uLL;
    uint64_t v27 = sub_1005993E8;
    uint64_t v28 = v33;
    goto LABEL_18;
  }
  uint64_t v32 = (uint64_t)v31.i64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    char v17 = &type metadata accessor for TTRRemindersListViewModel.Item;
    uint64_t v18 = (uint64_t)v7;
LABEL_16:
    uint64_t result = sub_1000D68D0(v18, (uint64_t (*)(void))v17);
    goto LABEL_17;
  }
  sub_1000D6800((uint64_t)v7, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v16 = sub_1000D2454((uint64_t)v13);
    swift_release();
    if (!v16) {
      goto LABEL_15;
    }
  }
  else
  {
    sub_1000D6868((uint64_t)v13, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_15:
      char v17 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
      uint64_t v18 = (uint64_t)v13;
      goto LABEL_16;
    }
    id v16 = *v4;
  }
  if (v13[*(int *)(v8 + 40)] == 1)
  {

    int64x2_t v19 = (int64x2_t)xmmword_10066EDA0;
  }
  else
  {
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = *(uint64_t (**)(id, uint64_t, uint64_t))(v20 + 32);
    swift_unknownObjectRetain();
    uint64_t v23 = v22(v16, ObjectType, v20);
    swift_unknownObjectRelease();
    if (v23)
    {

      int64x2_t v19 = vdupq_n_s64(1uLL);
      v19.i64[0] = v23;
    }
    else
    {
      int64x2_t v19 = (int64x2_t)(unint64_t)v16;
    }
  }
  int64x2_t v31 = v19;
  uint64_t v29 = v32;
  sub_1000D6800((uint64_t)v13, v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  unint64_t v30 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t result = sub_1000D6800(v29, v25 + v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  uint64_t v27 = sub_1000D6BEC;
  char v24 = 1;
  uint64_t v28 = v33;
  int64x2_t v26 = v31;
LABEL_18:
  *uint64_t v28 = v26;
  v28[1].i8[0] = v24;
  v28[1].i64[1] = (uint64_t)v27;
  v28[2].i64[0] = v25;
  return result;
}

uint64_t sub_1000CE800@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1000D6868(a1, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v4 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 0, 1, v3);
}

id sub_1000CE888(uint64_t a1)
{
  uint64_t v31 = a1;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v8 = (id *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (id *)((char *)&v31 - v9);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v16 = (char *)&v31 - v15;
  uint64_t v17 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v17 - 8);
  int64x2_t v19 = (id *)((char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = v1;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v19, 1, v21) != 1)
  {
    id v22 = 0;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1000D6800((uint64_t)v19, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (*(void *)(v20 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
        {
          swift_retain();
          id v22 = sub_1000D2454((uint64_t)v14);
          swift_release();
          sub_1000D68D0((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          return v22;
        }
        sub_1000D6868((uint64_t)v14, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          id v22 = *v8;
          uint64_t v30 = (uint64_t)v14;
          goto LABEL_18;
        }
        sub_1000D68D0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        uint64_t v23 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
        uint64_t v24 = (uint64_t)v14;
        goto LABEL_4;
      case 2u:
        sub_1000D6800((uint64_t)v19, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        int64x2_t v26 = *v4;
        uint64_t v27 = (uint64_t *)(v20 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
        swift_beginAccess();
        uint64_t v28 = *v27;
        id v29 = v26;
        swift_bridgeObjectRetain();
        id v22 = sub_100598448(v29, v28);

        swift_bridgeObjectRelease();
        sub_1000D68D0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        return v22;
      case 3u:
      case 4u:
      case 7u:
      case 8u:
      case 9u:
        uint64_t v23 = &type metadata accessor for TTRRemindersListViewModel.Item;
        uint64_t v24 = (uint64_t)v19;
        goto LABEL_4;
      case 5u:

        return 0;
      case 6u:

        return 0;
      case 0xAu:
      case 0xBu:
        return v22;
      default:
        sub_1000D6800((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (*(void *)(v20 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
        {
          swift_retain();
          id v22 = sub_1000D2454((uint64_t)v16);
          swift_release();
          sub_1000D68D0((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          return v22;
        }
        sub_1000D6868((uint64_t)v16, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          id v22 = *v10;
          uint64_t v30 = (uint64_t)v16;
LABEL_18:
          sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          return v22;
        }
        sub_1000D68D0((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        uint64_t v23 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
        uint64_t v24 = (uint64_t)v16;
LABEL_4:
        sub_1000D68D0(v24, (uint64_t (*)(void))v23);
        break;
    }
  }
  return 0;
}

uint64_t sub_1000CEE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1000CDD64(a1))
  {
    uint64_t v7 = sub_1000CEFB8();
    sub_1000D6868(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1000D68D0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
      *(void *)(a2 + 24) = v9;
      *(void *)(a2 + 32) = &off_10073C570;
      uint64_t v10 = sub_1000394A8((uint64_t *)a2);
      uint64_t result = sub_1000D6868(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      *(uint64_t *)((char *)v10 + *(int *)(v9 + 20)) = v7;
      *((unsigned char *)v10 + *(int *)(v9 + 24)) = 0;
    }
    else
    {
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return swift_release();
    }
  }
  else
  {
    sub_1000CF084();
    sub_1004E73A4(a1, a2);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000CEFB8()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    type metadata accessor for DragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    uint64_t v3 = (void *)REMSmartListTypeCustom;
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(unsigned char *)(v2 + 40) = 1;
    *(void *)(v2 + 24) = &off_100739A38;
    *(void *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    id v4 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000CF084()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropUtils;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropUtils))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropUtils);
  }
  else
  {
    type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = &off_100739A70;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000CF11C(void *a1)
{
  LOBYTE(a1) = sub_1004E78F8(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1000CF15C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - v10;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v11, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
  }
  else
  {
    sub_1000D6800((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (sub_1000CDD64((uint64_t)v15))
    {
      sub_1000CEFB8();
      sub_1000D6868((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
      sub_10016B49C((uint64_t)v9, a2, a3);
      swift_release();
      sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
      return sub_1000D68D0((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    sub_1000D68D0((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  sub_1000CF084();
  sub_1004E7B18(a1, a2, a3);
  return swift_release();
}

uint64_t sub_1000CF3D0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  if (sub_1000CDD64(a1))
  {
    sub_1000CEFB8();
    sub_10016B62C(a1, a2);
  }
  else
  {
    sub_1000CF084();
    sub_1004E7CE4(a1, a2);
  }

  return swift_release();
}

uint64_t sub_1000CF444(char *a1, unint64_t a2)
{
  unint64_t v67 = a2;
  uint64_t v72 = a1;
  uint64_t v64 = type metadata accessor for Date();
  uint64_t v63 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v62 = (char *)v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v4 = __chkstk_darwin(v68);
  char v65 = (void ***)((char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v70 = (void **)((char *)v61 - v6);
  uint64_t v66 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v7 = __chkstk_darwin(v66);
  char v69 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v71 = (uint64_t)v61 - v9;
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v61 - v14;
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  id v22 = (char *)v61 - v21;
  uint64_t v23 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v24(v15, 1, v16) == 1)
  {
    uint64_t v25 = (uint64_t)v15;
    return sub_10003B6F8(v25, (uint64_t *)&unk_100788DC0);
  }
  v61[1] = v23;
  uint64_t v72 = v13;
  uint64_t v27 = v2;
  uint64_t v29 = (uint64_t)v69;
  uint64_t v28 = v70;
  uint64_t v30 = v71;
  sub_1000D6800((uint64_t)v15, (uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000D6868((uint64_t)v22, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v31 = v22;
  if (swift_getEnumCaseMultiPayload() != 1) {
    goto LABEL_11;
  }
  sub_1000D6800((uint64_t)v20, v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000D6868(v30, (uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v32 = (char *)*v28;
    swift_retain();
    swift_retain();
    uint64_t v20 = v72;
    TTRMutableTreeStorage.parent(of:)();
    swift_release();
    swift_release();
    if (v24(v20, 1, v16) == 1)
    {

      sub_1000D68D0(v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000D68D0((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v25 = (uint64_t)v20;
      return sub_10003B6F8(v25, (uint64_t *)&unk_100788DC0);
    }
    if (swift_getEnumCaseMultiPayload())
    {

      sub_1000D68D0(v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
LABEL_11:
      sub_1000D68D0((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v34 = (uint64_t)v20;
      id v33 = &type metadata accessor for TTRRemindersListViewModel.Item;
      return sub_1000D68D0(v34, (uint64_t (*)(void))v33);
    }
    sub_1000D6800((uint64_t)v20, v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if (*(void *)(v27 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
    {
      swift_retain();
      uint64_t v35 = (void **)sub_1000D2454(v29);
      swift_release();
      unint64_t v36 = v67;
      if (v35)
      {
        uint64_t v37 = v27;
        uint64_t v72 = v32;
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v38 = v65;
      sub_1000D6868(v29, (uint64_t)v65, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      unint64_t v36 = v67;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v37 = v27;
        uint64_t v72 = v32;
        uint64_t v35 = *v38;
LABEL_19:
        int v40 = *(unsigned __int8 *)(v29 + *(int *)(v66 + 40));
        uint64_t v41 = *(void *)(v37 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
        uint64_t ObjectType = swift_getObjectType();
        if (v40 == 1)
        {
          char v43 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v41 + 40);
          swift_unknownObjectRetain();
          uint64_t v44 = (char *)v43(v35, ObjectType, v41);
          swift_unknownObjectRelease();
          if (v44)
          {
            id v45 = [v44 customContext];
            if (!v45 || (uint64_t v46 = v45, v47 = (void *)REMSmartListCustomContext.filter.getter(), v46, !v47))
            {
              uint64_t v60 = v72;
              goto LABEL_31;
            }
            uint64_t v70 = v35;
            uint64_t v48 = v62;
            Date.init()();
            TTRReminderEditor.edit(toMatch:now:)();
            (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v64);
            sub_10003B754((uint64_t *)&unk_1007894B0);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_10066D470;
            uint64_t v50 = *(void **)(v36 + 16);
            *(void *)(inited + 32) = [v50 objectID];
            unint64_t v74 = inited;
            specialized Array._endMutation()();
            sub_100028180(v74);
            swift_bridgeObjectRelease();
            type metadata accessor for TTRSmartListEditor();
            uint64_t v73 = v44;
            unint64_t v51 = v36;
            uint64_t v52 = v44;
            id v53 = [v50 saveRequest];
            unint64_t v74 = v51;
            type metadata accessor for TTRReminderEditor();
            sub_1000D69E0();
            TTRUndoableEditing.undoManager.getter();
            TTROneshotEditing.init(item:saveRequest:undoManager:)();
            uint64_t v44 = v72;
            TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();

            swift_bridgeObjectRelease();
LABEL_26:
            swift_release();
            uint64_t v60 = v44;
            uint64_t v35 = v70;
LABEL_31:

            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v54 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v41 + 32);
          swift_unknownObjectRetain();
          uint64_t v55 = (char *)v54(v35, ObjectType, v41);
          swift_unknownObjectRelease();
          if (v55)
          {
            uint64_t v70 = v35;
            sub_10003B754((uint64_t *)&unk_1007894B0);
            uint64_t v56 = swift_initStackObject();
            *(_OWORD *)(v56 + 16) = xmmword_10066D470;
            uint64_t v57 = *(void **)(v36 + 16);
            *(void *)(v56 + 32) = [v57 objectID];
            unint64_t v74 = v56;
            specialized Array._endMutation()();
            sub_100028180(v74);
            swift_bridgeObjectRelease();
            type metadata accessor for TTRListEditor();
            uint64_t v73 = v55;
            uint64_t v58 = v55;
            id v59 = [v57 saveRequest];
            unint64_t v74 = v36;
            type metadata accessor for TTRReminderEditor();
            sub_1000D69E0();
            TTRUndoableEditing.undoManager.getter();
            TTROneshotEditing.init(item:saveRequest:undoManager:)();
            uint64_t v44 = v72;
            TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();

            swift_bridgeObjectRelease();
            goto LABEL_26;
          }
        }
        uint64_t v44 = v72;
LABEL_32:

        goto LABEL_33;
      }
      sub_1000D68D0((uint64_t)v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    }

LABEL_33:
    sub_1000D68D0(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1000D68D0(v71, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    id v33 = &type metadata accessor for TTRRemindersListViewModel.Item;
    uint64_t v34 = (uint64_t)v31;
    return sub_1000D68D0(v34, (uint64_t (*)(void))v33);
  }
  sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000D68D0((uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  id v33 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
  uint64_t v34 = (uint64_t)v28;
  return sub_1000D68D0(v34, (uint64_t (*)(void))v33);
}

uint64_t sub_1000CFE20(uint64_t a1)
{
  return sub_1000CFE50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100478634);
}

uint64_t sub_1000CFE38(uint64_t a1)
{
  return sub_1000CFE50(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10047BB6C);
}

uint64_t sub_1000CFE50(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_1000CF084();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v4, ObjectType, v5);
    swift_unknownObjectRelease();
    swift_retain();
    uint64_t v8 = a2(a1, 1, v7, v4);
    swift_release();
    swift_release_n();
  }
  else
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_1007A1D48);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v12, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
  return v8;
}

uint64_t sub_1000CFFE8(void *a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4);
  char v65 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v68);
  char v69 = (id *)((char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v71 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v71);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v70 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v63 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (long long *)((char *)&v63 - v15);
  uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v63 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v72 = (uint64_t)&v63 - v22;
  uint64_t v74 = v2;
  uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(ObjectType, v23))
  {
    uint64_t v26 = v25;
    uint64_t v27 = swift_getObjectType();
    LOBYTE(v26) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 56))(a1, v27, v26);
    swift_unknownObjectRelease();
    if ((v26 & 1) == 0) {
      goto LABEL_34;
    }
  }
  uint64_t v63 = a1;
  uint64_t v64 = v8;
  uint64_t v28 = v74;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v29 = *(unsigned int (**)(long long *, uint64_t, uint64_t))(v18 + 48);
  if (v29(v16, 1, v17) == 1)
  {
    uint64_t v30 = (uint64_t *)&unk_100788DC0;
    uint64_t v31 = v16;
LABEL_5:
    sub_10003B6F8((uint64_t)v31, v30);
LABEL_34:
    char v51 = 0;
    return v51 & 1;
  }
  sub_1000D6800((uint64_t)v16, v72, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  if (v29((long long *)v14, 1, v17) == 1)
  {
    sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_100788DC0);
    swift_release();
    uint64_t v32 = v72;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1000D68D0((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    BOOL v34 = EnumCaseMultiPayload == 2;
    uint64_t v28 = v74;
    uint64_t v32 = v72;
    if (v34)
    {
      swift_retain();
      swift_retain();
      uint64_t v35 = (uint64_t)v70;
      TTRMutableTreeStorage.parent(of:)();
      swift_release();
      swift_release();
      if (v29((long long *)v35, 1, v17) == 1)
      {
        sub_10003B6F8(v35, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        sub_1000D68D0(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000D6800(v35, v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      uint64_t v28 = v74;
    }
  }
  sub_1000D6868(v32, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000D68D0(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v38 = (uint64_t)v21;
LABEL_33:
    sub_1000D68D0(v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_34;
  }
  uint64_t v36 = (uint64_t)v64;
  sub_1000D6800((uint64_t)v21, (uint64_t)v64, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (*(void *)(v28 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v37 = sub_1000D2454(v36);
    swift_release();
    if (!v37) {
      goto LABEL_32;
    }
  }
  else
  {
    id v39 = v69;
    sub_1000D6868(v36, (uint64_t)v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_32:
      sub_1000D68D0(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v38 = v32;
      goto LABEL_33;
    }
    id v37 = *v39;
  }
  int v40 = v63;
  if (*(unsigned char *)(v36 + *(int *)(v71 + 40)) == 1)
  {
    uint64_t v41 = *(void *)(v74 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
    uint64_t v42 = swift_getObjectType();
    char v43 = *(uint64_t (**)(id, uint64_t, uint64_t))(v41 + 40);
    swift_unknownObjectRetain();
    uint64_t v44 = (void *)v43(v37, v42, v41);
    swift_unknownObjectRelease();
    if (v44)
    {
      id v45 = [v44 customContext];
      if (v45)
      {
        uint64_t v46 = v45;
        uint64_t v47 = (void *)REMSmartListCustomContext.filter.getter();

        if (v47)
        {
          sub_10003B754(&qword_10078B620);
          uint64_t v48 = swift_allocObject();
          *(_OWORD *)(v48 + 16) = xmmword_10066C6F0;
          sub_1000145EC((uint64_t)v40, v48 + 32);
          static Set<>.typesSupportedByCustomSmartList.getter();
          uint64_t v79 = &type metadata for TTRReminderIDsWithMatchingHashtagsProvider;
          unint64_t v80 = sub_1000D6930();
          v78[0] = v48;
          uint64_t v49 = REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)();
          swift_bridgeObjectRelease();
          sub_100038CD8((uint64_t)v78);
          *(void *)&long long v76 = v49;
          sub_1000145EC((uint64_t)v40, (uint64_t)v78);
          uint64_t v75 = v49;
          sub_10003B754(&qword_10078B630);
          sub_1000D6984();
          Sequence<>.postFetchPredicateTypes.getter();
          uint64_t v50 = v65;
          REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(reminder:forEvaluatingAgainst:)();
          char v51 = Sequence<>.evaluate(with:)();

          (*(void (**)(char *, uint64_t))(v66 + 8))(v50, v67);
          sub_1000D68D0(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1000D68D0(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_bridgeObjectRelease();
          return v51 & 1;
        }
      }
    }
  }
  uint64_t v52 = *(void *)(v74 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
  uint64_t v53 = swift_getObjectType();
  uint64_t v54 = *(uint64_t (**)(id, uint64_t, uint64_t))(v52 + 32);
  swift_unknownObjectRetain();
  uint64_t v55 = (void *)v54(v37, v53, v52);
  swift_unknownObjectRelease();
  if (!v55)
  {

    goto LABEL_32;
  }
  uint64_t v56 = v40[3];
  uint64_t v57 = v40[4];
  sub_100038D28(v40, v56);
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v57 + 176))(&v76, v56, v57);
  if (!v77)
  {

    sub_1000D68D0(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1000D68D0(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v30 = &qword_100787480;
    uint64_t v31 = &v76;
    goto LABEL_5;
  }
  sub_100038ED8(&v76, (uint64_t)v78);
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  id v58 = [v55 objectID];
  id v59 = v79;
  unint64_t v60 = v80;
  sub_100038D28(v78, (uint64_t)v79);
  id v61 = (void *)(*(uint64_t (**)(ValueMetadata *, unint64_t))(v60 + 8))(v59, v60);
  char v51 = static NSObject.== infix(_:_:)();

  sub_1000D68D0(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000D68D0(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_100038CD8((uint64_t)v78);
  return v51 & 1;
}

id sub_1000D09FC()
{
  uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v19);
  uint64_t v20 = (id *)((char *)&v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v21);
  uint64_t v22 = (uint64_t)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v13(v8, 1, v9) == 1)
  {
    uint64_t v14 = (uint64_t)v8;
LABEL_5:
    sub_10003B6F8(v14, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  sub_1000D6800((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  if (v13(v6, 1, v9) == 1)
  {
    sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v14 = (uint64_t)v6;
    goto LABEL_5;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000D68D0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  else
  {
    uint64_t v17 = v22;
    sub_1000D6800((uint64_t)v6, v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    if (*(unsigned char *)(v17 + *(int *)(v21 + 40)) == 1)
    {
      id v15 = sub_1000D0EF8(v17);
      sub_1000D68D0(v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v15;
    }
    if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
    {
      swift_retain();
      id v15 = sub_1000D2454(v17);
      swift_release();
      sub_1000D68D0(v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v15;
    }
    uint64_t v18 = v20;
    sub_1000D6868(v17, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      id v15 = *v18;
      sub_1000D68D0(v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return v15;
    }
    sub_1000D68D0((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1000D68D0(v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  }
  return 0;
}

id sub_1000D0EF8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100789F80);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v11);
  uint64_t v13 = (id *)&v24[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v14 = sub_1000D2454(a1);
    swift_release();
    if (!v14) {
      return 0;
    }
  }
  else
  {
    sub_1000D6868(a1, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      return 0;
    }
    id v14 = *v13;
  }
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(uint64_t (**)(id, uint64_t, uint64_t))(v15 + 40);
  swift_unknownObjectRetain();
  uint64_t v18 = (void *)v17(v14, ObjectType, v15);
  swift_unknownObjectRelease();
  if (!v18)
  {
LABEL_14:

    return 0;
  }
  id v19 = [v18 customContext];
  if (v19)
  {
    uint64_t v20 = (void *)REMSmartListCustomContext.filter.getter();

    if (v20)
    {
      REMCustomSmartListFilterDescriptor.lists.getter();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
        id v22 = [self daemonUserDefaults];
        id v23 = [v22 preferredDefaultListID];

        id v19 = (id)REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)();
        (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);

        return v19;
      }

      sub_10003B6F8((uint64_t)v6, &qword_100789F80);
      return 0;
    }

    goto LABEL_14;
  }

  return v19;
}

void *sub_1000D12C8()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
  if (v1)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    id v2 = v1;
    uint64_t v1 = (void *)static NSUserActivity.forStoringListPayload(for:)();
  }
  return v1;
}

uint64_t sub_1000D1330()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
  if (v1)
  {
    v4[3] = type metadata accessor for TTRUserActivityListPayload();
    v4[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
    *sub_1000394A8(v4) = (uint64_t)v1;
    type metadata accessor for TTRUserActivityListPayload.State();
    swift_storeEnumTagMultiPayload();
    id v2 = v1;
    NSUserActivity.setPayload(_:)();

    return sub_100038CD8((uint64_t)v4);
  }
  return result;
}

void *sub_1000D13D0()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v22[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
  if (v10)
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
    id v11 = v10;
    uint64_t v10 = (void *)static NSUserActivity.forStoringWindowSceneRestorationPayload()();
    uint64_t v12 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v13 = *(void *)(v12 + 8);
      uint64_t ObjectType = swift_getObjectType();
      sub_100588C58(ObjectType, v13);
      swift_unknownObjectRelease();
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v6, 1, v15) != 1)
      {
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_1000D68D0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ItemID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v9, 0, 1, v17);
        goto LABEL_7;
      }
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
    }
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 1, 1, v16);
LABEL_7:
    uint64_t v18 = (uint64_t)v3 + *(int *)(sub_10003B754(&qword_10078B618) + 48);
    *uint64_t v3 = [v11 objectID];
    sub_10003B694((uint64_t)v9, v18, (uint64_t *)&unk_10078E360);
    type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
    swift_storeEnumTagMultiPayload();
    v22[3] = v1;
    v22[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
    id v19 = sub_1000394A8(v22);
    sub_1000D6868((uint64_t)v3, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    NSUserActivity.setPayload(_:)();

    sub_1000D68D0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
    sub_100038CD8((uint64_t)v22);
  }
  return v10;
}

uint64_t sub_1000D172C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v57 = a1;
  uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v51);
  uint64_t v52 = (id *)((char *)&v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v53);
  uint64_t v54 = (uint64_t)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  id v11 = (char *)&v48 - v10;
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v55 = v2;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788DC0);
    uint64_t v22 = type metadata accessor for TTRAutoCompleteReminderListScope();
    id v23 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v24 = v56;
    return v23(v24, 1, 1, v22);
  }
  uint64_t v49 = v18;
  uint64_t v50 = v20;
  sub_1000D6800((uint64_t)v13, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v25 = v55;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  if (v21(v11, 1, v14) == 1)
  {
    sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
    swift_release();
    uint64_t v27 = (uint64_t)v49;
    uint64_t v26 = (uint64_t)v50;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1000D68D0((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    uint64_t v27 = (uint64_t)v49;
    uint64_t v26 = (uint64_t)v50;
    if (EnumCaseMultiPayload == 2)
    {
      swift_retain();
      swift_retain();
      TTRMutableTreeStorage.parent(of:)();
      swift_release();
      swift_release();
      if (v21(v8, 1, v14) == 1)
      {
        sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        sub_1000D68D0(v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000D6800((uint64_t)v8, v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
  }
  sub_1000D6868(v26, v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000D68D0(v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v26 = v27;
    uint64_t v32 = v56;
LABEL_24:
    uint64_t v45 = v26;
LABEL_25:
    sub_1000D68D0(v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v22 = type metadata accessor for TTRAutoCompleteReminderListScope();
    id v23 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
    uint64_t v24 = v32;
    return v23(v24, 1, 1, v22);
  }
  uint64_t v29 = v27;
  uint64_t v30 = v54;
  sub_1000D6800(v29, v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (*(void *)(v25 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v31 = sub_1000D2454(v30);
    swift_release();
    uint64_t v32 = v56;
    if (!v31) {
      goto LABEL_23;
    }
  }
  else
  {
    id v33 = v52;
    sub_1000D6868(v30, (uint64_t)v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    int v34 = swift_getEnumCaseMultiPayload();
    uint64_t v32 = v56;
    if (v34 != 1)
    {
      sub_1000D68D0((uint64_t)v33, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_23:
      sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      goto LABEL_24;
    }
    id v31 = *v33;
  }
  if (*(unsigned char *)(v30 + *(int *)(v53 + 40)) == 1)
  {
    uint64_t v35 = *(void *)(v25 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v37 = *(uint64_t (**)(id, uint64_t, uint64_t))(v35 + 40);
    swift_unknownObjectRetain();
    uint64_t v38 = (void *)v37(v31, ObjectType, v35);
    swift_unknownObjectRelease();
    if (v38)
    {
      id v39 = [v38 customContext];
      if (v39)
      {
        int v40 = v39;
        uint64_t v41 = (char *)v32 + *(int *)(sub_10003B754(&qword_10078B610) + 48);
        *uint64_t v32 = [v38 accountID];
        uint64_t v42 = REMSmartListCustomContext.filter.getter();
        if (v42)
        {
          char v43 = (void *)v42;
          REMCustomSmartListFilterDescriptor.lists.getter();

          sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1000D68D0((uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        }
        else
        {

          sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1000D68D0((uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v47 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v41, 1, 1, v47);
        }
        uint64_t v44 = type metadata accessor for TTRAutoCompleteReminderListScope();
        goto LABEL_31;
      }
    }
    sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v45 = (uint64_t)v50;
    goto LABEL_25;
  }
  sub_1000D68D0(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000D68D0(v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  *uint64_t v32 = v31;
  uint64_t v44 = type metadata accessor for TTRAutoCompleteReminderListScope();
LABEL_31:
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v32, 0, 1, v44);
}

uint64_t sub_1000D1F78(uint64_t a1)
{
  uint64_t v34 = a1;
  uint64_t v32 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v32);
  uint64_t v2 = (id *)((char *)&v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(v34, (uint64_t)v11, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  uint64_t v16 = v33;
  uint64_t v17 = v3;
  sub_1000D6800((uint64_t)v11, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v19 = (uint64_t)v15;
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1000D68D0((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v20 = &type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem;
      uint64_t v21 = (uint64_t)v8;
LABEL_18:
      sub_1000D68D0(v21, (uint64_t (*)(void))v20);
      return 0;
    }
LABEL_17:
    uint64_t v20 = &type metadata accessor for TTRRemindersListViewModel.Item;
    uint64_t v21 = (uint64_t)v15;
    goto LABEL_18;
  }
  uint64_t v22 = (uint64_t)v5;
  sub_1000D6800((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (*(void *)(v16 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v23 = sub_1000D2454((uint64_t)v5);
    swift_release();
    if (!v23) {
      goto LABEL_16;
    }
  }
  else
  {
    sub_1000D6868((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
LABEL_16:
      sub_1000D68D0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      goto LABEL_17;
    }
    id v23 = *v2;
  }
  int v24 = v5[*(int *)(v17 + 40)];
  uint64_t v25 = *(void *)(v16 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (v24 == 1)
  {
    uint64_t v27 = *(uint64_t (**)(id, uint64_t, uint64_t))(v25 + 40);
    swift_unknownObjectRetain();
    uint64_t v28 = v27(v23, ObjectType, v25);

    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v29 = *(uint64_t (**)(id, uint64_t, uint64_t))(v25 + 32);
    swift_unknownObjectRetain();
    uint64_t v28 = v29(v23, ObjectType, v25);
    swift_unknownObjectRelease();
  }
  sub_1000D68D0(v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000D68D0(v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v28;
}

id sub_1000D2454(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v3);
  uint64_t v5 = (id *)((char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000D6868(a1, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  id v6 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 9u:
      id v6 = *v5;
      id v7 = [*v5 entityName];
      uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v10 = v9;

      id v11 = [self cdEntityName];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v14 = v13;

      if (v12 == v8 && v14 == v10) {
        goto LABEL_15;
      }
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_16;
      }
      id v17 = [self cdEntityName];
      uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v20 = v19;

      if (v18 == v8 && v20 == v10) {
        goto LABEL_15;
      }
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_16;
      }
      id v23 = [self cdEntityName];
      uint64_t v24 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v26 = v25;

      if (v24 == v8 && v26 == v10)
      {
LABEL_15:
        swift_bridgeObjectRelease();
LABEL_16:
        swift_bridgeObjectRelease();
        return v6;
      }
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v28) {
        goto LABEL_16;
      }
      sub_1000368FC(0, &qword_10078B5E8);
      id v29 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
      uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v32 = v31;

      if (v30 == v8 && v32 == v10) {
        goto LABEL_22;
      }
      char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v33) {
        goto LABEL_24;
      }
      sub_1000368FC(0, &qword_10078B5F0);
      id v39 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
      uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v42 = v41;

      if (v40 == v8 && v42 == v10) {
        goto LABEL_22;
      }
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_24;
      }
      sub_1000368FC(0, &qword_10078B5F8);
      id v44 = [(id)swift_getObjCClassFromMetadata() cdEntityName];
      uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v47 = v46;

      if (v45 == v8 && v47 == v10)
      {
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_24:
        swift_bridgeObjectRelease();
      }
      else
      {
        char v48 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v48 & 1) == 0) {
          goto LABEL_37;
        }
      }
      if (!swift_unknownObjectWeakLoadStrong())
      {
LABEL_37:

        return 0;
      }
      uint64_t v34 = *(void *)(v1 + 64);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v34 + 16))(ObjectType, v34);
      swift_unknownObjectRelease();
      uint64_t v36 = (void *)TTRSection.init(with:store:)();
      uint64_t v38 = v36;
      if (v37 > 1u)
      {
        if (v37 == 2)
        {
          id v6 = [v36 parentID];
          sub_100095434(v38, 2);
        }
        else
        {
          return 0;
        }
      }
      else if (v37)
      {
        id v6 = [v36 parentID];
        sub_100095434(v38, 1);
      }
      else
      {
        id v6 = [v36 parentID];
        sub_100095434(v38, 0);
      }
      return v6;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      sub_1000D68D0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      return 0;
    case 8u:
      return *v5;
    default:
      return v6;
  }
}

uint64_t sub_1000D2980(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v4);
  id v6 = (id *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v7 = sub_1000D2454(a1);
    swift_release();
    if (!v7) {
      return 0;
    }
  }
  else
  {
    sub_1000D6868(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      return 0;
    }
    id v7 = *v6;
  }
  uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(uint64_t (**)(id, uint64_t, uint64_t))(v8 + 40);
  swift_unknownObjectRetain();
  uint64_t v11 = v10(v7, ObjectType, v8);

  swift_unknownObjectRelease();
  return v11;
}

void sub_1000D2AF0()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
}

uint64_t sub_1000D2B60()
{
  uint64_t v0 = sub_100588C8C();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000D2C14()
{
  return type metadata accessor for TTRShowGroupViewModelSource();
}

uint64_t type metadata accessor for TTRShowGroupViewModelSource()
{
  uint64_t result = qword_10078AEE8;
  if (!qword_10078AEE8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000D2C68()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000D2CD0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [a1 objectID];
  uint64_t v8 = OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group;
  uint64_t v9 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
  if (!v9)
  {
    if (v7) {
      goto LABEL_9;
    }
    char v16 = 0;
LABEL_13:
    *(void *)(v2 + v8) = a1;

    id v22 = a1;
    sub_1000CD744((uint64_t)v6);
    sub_1005885DC((uint64_t)v6);
    return sub_10003B6F8((uint64_t)v6, &qword_100786EF0);
  }
  id v10 = [v9 objectID];
  uint64_t v11 = v10;
  if (!v7)
  {
    id v7 = v10;
    if (v10) {
      goto LABEL_9;
    }
    char v16 = *(void **)(v2 + v8);
    goto LABEL_13;
  }
  if (v10)
  {
    sub_1000368FC(0, qword_10078E3D0);
    id v12 = v7;
    char v13 = static NSObject.== infix(_:_:)();

    uint64_t v14 = *(void **)(v2 + v8);
    *(void *)(v2 + v8) = a1;

    id v15 = a1;
    sub_1000CD744((uint64_t)v6);
    sub_1005885DC((uint64_t)v6);
    if (v13) {
      return sub_10003B6F8((uint64_t)v6, &qword_100786EF0);
    }
    goto LABEL_10;
  }
LABEL_9:

  id v17 = *(void **)(v2 + v8);
  *(void *)(v2 + v8) = a1;

  id v18 = a1;
  sub_1000CD744((uint64_t)v6);
  sub_1005885DC((uint64_t)v6);
LABEL_10:
  uint64_t v19 = v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v20 = *(void *)(v19 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 88))(1, ObjectType, v20);
    swift_unknownObjectRelease();
  }
  return sub_10003B6F8((uint64_t)v6, &qword_100786EF0);
}

uint64_t sub_1000D2ED0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v53 = a3;
  uint64_t v7 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v58 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v59 = (uint64_t)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v52 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_10078B5D0);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v57 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  char v16 = (unint64_t *)((char *)&v52 - v15);
  __chkstk_darwin(v14);
  id v18 = (char *)&v52 - v17;
  uint64_t v19 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v19 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for REMRemindersListDataView.ListsModel();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v52 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v25 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
    *(void *)(v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group) = a1;
    id v26 = a1;
  }
  REMRemindersListDataView.GroupModel.listsModel.getter();
  uint64_t v27 = REMRemindersListDataView.ListsModel.completedRemindersCount.getter();
  uint64_t v56 = a2;
  char v29 = v28;
  uint64_t v30 = *(void (**)(char *, uint64_t))(v22 + 8);
  v30(v24, v21);
  uint64_t v31 = v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_completedRemindersCount;
  *(void *)uint64_t v31 = v27;
  *(unsigned char *)(v31 + 8) = v29 & 1;
  uint64_t v54 = v4;
  sub_1000CD744(v55);
  REMRemindersListDataView.GroupModel.listsModel.getter();
  uint64_t v32 = REMRemindersListDataView.ListsModel.groups.getter();
  v30(v24, v21);
  v61[0] = _swiftEmptyArrayStorage;
  sub_1004D3A20(0, 0, 0);
  uint64_t v33 = v61[0];
  uint64_t v34 = *(void *)(v32 + 16);
  swift_bridgeObjectRetain();
  uint64_t v56 = v34;
  if (v34)
  {
    unint64_t v35 = 0;
    while (v35 < *(void *)(v32 + 16))
    {
      uint64_t v36 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist();
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = &v57[*(int *)(v11 + 48)];
      (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v38, v32+ ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))+ *(void *)(v37 + 72) * v35, v36);
      id v39 = (char *)v16 + *(int *)(v11 + 48);
      *char v16 = v35;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v39, v38, v36);
      sub_100028C3C((uint64_t)v16, (uint64_t)v18, &qword_10078B5D0);
      sub_1000D3574(v18, v59);
      sub_10003B6F8((uint64_t)v18, &qword_10078B5D0);
      uint64_t v33 = v61[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3A20(0, *(void *)(v33 + 16) + 1, 1);
        uint64_t v33 = v61[0];
      }
      unint64_t v41 = *(void *)(v33 + 16);
      unint64_t v40 = *(void *)(v33 + 24);
      if (v41 >= v40 >> 1)
      {
        sub_1004D3A20(v40 > 1, v41 + 1, 1);
        uint64_t v33 = v61[0];
      }
      ++v35;
      *(void *)(v33 + 16) = v41 + 1;
      sub_1000D6800(v59, v33+ ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80))+ *(void *)(v58 + 72) * v41, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      if (v56 == v35) {
        goto LABEL_11;
      }
    }
    __break(1u);
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
LABEL_11:
    swift_bridgeObjectRelease_n();
    uint64_t v42 = type metadata accessor for TTRRemindersListObjectIDAndSectionIDCombinedReminderIDProvider();
    uint64_t v43 = swift_allocObject();
    uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v45 = (uint64_t)v52;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v52, 1, 1, v44);
    v61[3] = v42;
    v61[4] = &off_10074D310;
    v61[0] = v43;
    sub_1000145EC((uint64_t)v61, (uint64_t)v60);
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v33;
    sub_100038ED8(v60, v46 + 24);
    uint64_t v47 = v54;
    *(void *)(v46 + 64) = v54;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10059DBB0(1, v55, (uint64_t (*)(uint64_t))sub_100051174, v46, v53, 0, v45);
    swift_release();
    sub_100038CD8((uint64_t)v61);
    swift_release();
    sub_10003B6F8(v45, (uint64_t *)&unk_100788DC0);
    swift_release();
    uint64_t v48 = v47 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v49 = *(void *)(v48 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v49 + 120))(ObjectType, v49);
      swift_unknownObjectRelease();
    }
    return sub_10003B6F8(v55, &qword_100786EF0);
  }
  return result;
}

uint64_t sub_1000D3574@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v36);
  unint64_t v35 = (uint64_t *)((char *)&v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078B5D0);
  uint64_t v7 = v6 - 8;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(int *)(v7 + 56);
  uint64_t v15 = &v9[v14];
  uint64_t v16 = *(void *)a1;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v15, &a1[v14], v10);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v37 = v10;
  v17(v13, v15, v10);
  id v18 = (void *)REMRemindersListDataView.ListsModel.Sublist.listColor.getter();
  type metadata accessor for TTRListColors();
  static TTRListColors.color(for:)();
  long long v32 = v46[1];
  long long v33 = v46[0];
  uint64_t v20 = v47;
  uint64_t v19 = v48;
  char v21 = v49;

  uint64_t v22 = REMRemindersListDataView.ListsModel.Sublist.listName.getter();
  BOOL v23 = v16 == 0;
  uint64_t v24 = (uint64_t)v34;
  *(void *)&long long v39 = v22;
  *((void *)&v39 + 1) = v25;
  if (v23) {
    char v26 = 2;
  }
  else {
    char v26 = 3;
  }
  long long v40 = v33;
  long long v41 = v32;
  *(void *)&long long v42 = v20;
  *((void *)&v42 + 1) = v19;
  LOBYTE(v43[0]) = v21;
  *(_WORD *)((char *)v43 + 1) = 258;
  BYTE3(v43[0]) = 0;
  BYTE4(v43[0]) = v26;
  *(_OWORD *)((char *)v43 + 8) = 0u;
  *(_OWORD *)((char *)&v43[1] + 8) = 0u;
  *(_OWORD *)((char *)&v43[2] + 8) = 0u;
  WORD4(v43[3]) = 255;
  sub_1000D5984((uint64_t)v46, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
  *unint64_t v35 = REMRemindersListDataView.ListsModel.Sublist.listID.getter();
  swift_storeEnumTagMultiPayload();
  v44[4] = v43[0];
  void v44[5] = v43[1];
  v45[0] = v43[2];
  *(_OWORD *)((char *)v45 + 10) = *(_OWORD *)((char *)&v43[2] + 10);
  v44[0] = v39;
  v44[1] = v40;
  v44[2] = v41;
  v44[3] = v42;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v44);
  sub_100028C3C((uint64_t)v44, (uint64_t)v50, (uint64_t *)&unk_10079CA00);
  sub_100050EC4((uint64_t)&v39);
  REMRemindersListDataView.ListsModel.Sublist.isCustomSmartList.getter();
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
  char v27 = REMRemindersListDataView.ListsModel.Sublist.isCustomSmartList.getter();
  uint64_t v28 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter();
  if (v27)
  {
    uint64_t v29 = Array<A>.replacingSubtasksWithNil()();
    swift_bridgeObjectRelease();
    uint64_t v28 = v29;
  }
  sub_10005102C((uint64_t)&v39);
  sub_1000D5984((uint64_t)v46, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v37);
  uint64_t v30 = v38;
  sub_1000D6800(v24, v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  *(void *)(v30 + *(int *)(result + 20)) = v28;
  *(unsigned char *)(v30 + *(int *)(result + 24)) = 0;
  return result;
}

uint64_t sub_1000D3964(uint64_t a1)
{
  swift_retain();
  uint64_t v3 = sub_10004FF4C(a1);
  swift_release();
  uint64_t v4 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v5 + 48))(v3, ObjectType, v5);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000D3A50(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v61 = a3;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_100786EF0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v56 - v18;
  if (a1)
  {
    uint64_t v20 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group);
    *(void *)(v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group) = a1;
    id v21 = a1;
  }
  uint64_t v62 = a2;
  uint64_t v22 = REMRemindersListDataView.ListsSectionsModel.completedRemindersCount.getter();
  uint64_t v23 = v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_completedRemindersCount;
  *(void *)uint64_t v23 = v22;
  *(unsigned char *)(v23 + 8) = v24 & 1;
  sub_1000CD744((uint64_t)v19);
  sub_10003B694((uint64_t)v19, (uint64_t)v17, &qword_100786EF0);
  uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v17, 1, v25) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_100786EF0);
  }
  else
  {
    int v26 = v17[*(int *)(v25 + 64)];
    sub_1000D68D0((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    if (v26 == 2)
    {
      unint64_t v60 = v9;
      uint64_t v27 = REMRemindersListDataView.ListsSectionsModel.lists.getter();
      v64[0] = _swiftEmptyArrayStorage;
      uint64_t v28 = *(void *)(v27 + 16);
      if (v28)
      {
        uint64_t v57 = v19;
        uint64_t v58 = v4;
        uint64_t v59 = a1;
        uint64_t v31 = *(void (**)(char *, unint64_t, uint64_t))(v11 + 16);
        uint64_t v29 = v11 + 16;
        uint64_t v30 = v31;
        unint64_t v32 = (*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64);
        uint64_t v56 = v27;
        unint64_t v33 = v27 + v32;
        uint64_t v34 = *(void *)(v29 + 56);
        do
        {
          v30(v13, v33, v10);
          uint64_t v35 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
          (*(void (**)(char *, uint64_t))(v29 - 8))(v13, v10);
          sub_100569FE8(v35);
          v33 += v34;
          --v28;
        }
        while (v28);
        swift_bridgeObjectRelease();
        uint64_t v36 = (void *)v64[0];
        uint64_t v4 = v58;
        a1 = v59;
        uint64_t v19 = v57;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v36 = _swiftEmptyArrayStorage;
      }
      type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
      uint64_t v37 = swift_allocObject();
      uint64_t v38 = swift_retain();
      *(void *)(v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance) = sub_1000D59CC(v38, (uint64_t)v36, 0, 0, 1, (uint64_t)&_swiftEmptySetSingleton, v37);
      uint64_t v9 = v60;
      goto LABEL_13;
    }
  }
  *(void *)(v4 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance) = 0;
LABEL_13:
  uint64_t v39 = v61;
  swift_release();
  uint64_t v40 = REMRemindersListDataView.ListsSectionsModel.lists.getter();
  swift_retain();
  long long v41 = sub_1000D6424(v40, v4);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v42 = type metadata accessor for TTRRemindersListObjectIDAndSectionIDCombinedReminderIDProvider();
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v9, 1, 1, v44);
  uint64_t v64[3] = v42;
  v64[4] = &off_10074D310;
  v64[0] = v43;
  sub_1000145EC((uint64_t)v64, (uint64_t)v63);
  uint64_t v45 = (uint64_t)v9;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v41;
  sub_100038ED8(v63, v46 + 24);
  *(void *)(v46 + 64) = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10059DBB0(1, (uint64_t)v19, (uint64_t (*)(uint64_t))sub_1000D6788, v46, v39, 0, v45);
  swift_release();
  sub_100038CD8((uint64_t)v64);
  swift_bridgeObjectRelease();
  sub_10003B6F8(v45, (uint64_t *)&unk_100788DC0);
  swift_release();
  if (a1)
  {
    uint64_t v47 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v48 = *(void *)(v47 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v50 = v19;
      uint64_t v51 = *(void (**)(void *, void, uint64_t, uint64_t))(v48 + 96);
      id v52 = a1;
      uint64_t v53 = a1;
      id v54 = v52;
      v51(v53, 0, ObjectType, v48);
      uint64_t v19 = v50;

      swift_unknownObjectRelease();
    }
  }
  return sub_10003B6F8((uint64_t)v19, &qword_100786EF0);
}

uint64_t sub_1000D3FC4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v63 = a3;
  uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v44);
  uint64_t v45 = (uint64_t *)((char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v5 - 8);
  char v49 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10078B5D8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(int *)(v11 + 56);
  uint64_t v19 = &v13[v18];
  uint64_t v20 = *(void *)a1;
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v19, &a1[v18], v14);
  uint64_t v46 = v15;
  uint64_t v47 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v19, v14);
  id v21 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listColor.getter();
  type metadata accessor for TTRListColors();
  static TTRListColors.color(for:)();
  long long v40 = v58[1];
  long long v41 = v58[0];
  uint64_t v22 = v59;
  uint64_t v23 = v60;
  char v24 = v61;

  *(void *)&long long v53 = REMRemindersListDataView.ListsSectionsModel.List.listName.getter();
  *((void *)&v53 + 1) = v25;
  if (v20) {
    char v26 = 3;
  }
  else {
    char v26 = 2;
  }
  long long v54 = v41;
  long long v55 = v40;
  *(void *)&long long v56 = v22;
  *((void *)&v56 + 1) = v23;
  LOBYTE(v57[0]) = v24;
  *(_WORD *)((char *)v57 + 1) = 0;
  BYTE3(v57[0]) = 0;
  BYTE4(v57[0]) = v26;
  *(_OWORD *)((char *)v57 + 8) = 0u;
  *(_OWORD *)((char *)&v57[1] + 8) = 0u;
  *(_OWORD *)((char *)&v57[2] + 8) = 0u;
  WORD4(v57[3]) = 255;
  char v52 = 0;
  sub_1000D5984((uint64_t)v58, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
  uint64_t v27 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
  REMRemindersListDataView.ListsSectionsModel.List.listType.getter();
  int v28 = (*(uint64_t (**)(char *, uint64_t))(v42 + 88))(v9, v43);
  if (v28 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.regular(_:)) {
    goto LABEL_7;
  }
  if (v28 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.customSmartList(_:))
  {
    char v52 = 1;
LABEL_7:
    uint64_t v29 = v48;
LABEL_12:
    *uint64_t v45 = REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
    swift_storeEnumTagMultiPayload();
    v50[4] = v57[0];
    v50[5] = v57[1];
    v51[0] = v57[2];
    *(_OWORD *)((char *)v51 + 10) = *(_OWORD *)((char *)&v57[2] + 10);
    v50[0] = v53;
    v50[1] = v54;
    v50[2] = v55;
    v50[3] = v56;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v50);
    sub_100028C3C((uint64_t)v50, (uint64_t)v62, (uint64_t *)&unk_10079CA00);
    uint64_t v35 = (uint64_t)v49;
    uint64_t v36 = TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    __chkstk_darwin(v36);
    *((void *)&v40 - 4) = v17;
    *((void *)&v40 - 3) = v58;
    *((void *)&v40 - 2) = v29;
    *((void *)&v40 - 1) = &v52;
    sub_100050EC4((uint64_t)&v53);
    uint64_t v37 = sub_1000D60EC(v27, (void (*)(void, char *))sub_1000D6798, (uint64_t)(&v40 - 3));
    sub_10005102C((uint64_t)&v53);
    swift_bridgeObjectRelease();
    sub_1000D5984((uint64_t)v58, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    uint64_t v38 = v63;
    sub_1000D6800(v35, v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    *(void *)(v38 + *(int *)(type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0) + 20)) = v37;
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v17, v47);
  }
  uint64_t v29 = v48;
  if (v28 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.grocery(_:))
  {
    id v30 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    uint64_t v31 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
    char v32 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

    if (v32)
    {
      uint64_t v33 = *(void *)(v29 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance);
      if (v33)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v34 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
        uint64_t v27 = sub_1000D5B4C(v34, v33);
        swift_bridgeObjectRelease();
        swift_release();
      }
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1000D45C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned __int8 *a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v50 = a5;
  uint64_t v51 = a6;
  uint64_t v52 = a2;
  uint64_t v34 = a1;
  uint64_t v49 = a4;
  sub_1000D67A4(a4, (uint64_t)v76);
  uint64_t v40 = v76[0];
  uint64_t v42 = v76[1];
  uint64_t v44 = v76[2];
  uint64_t v45 = v76[3];
  uint64_t v46 = v76[4];
  uint64_t v47 = v76[5];
  int v48 = v77;
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v36);
  uint64_t v8 = (uint64_t *)((char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v13 - 8);
  uint64_t v37 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = a3;
  uint64_t v15 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listColor.getter();
  type metadata accessor for TTRListColors();
  static TTRListColors.color(for:)();
  uint64_t v16 = v74[0];
  uint64_t v17 = v74[1];
  uint64_t v38 = v74[2];
  uint64_t v39 = v74[3];
  uint64_t v18 = v74[5];
  uint64_t v41 = v74[4];
  int v43 = v75;

  REMRemindersListDataView.SectionLite.type.getter();
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v19 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v20 = *v12;
    uint64_t v21 = v12[1];
    unint64_t v22 = v12[2];
    swift_bridgeObjectRelease();
    if (v34) {
      char v23 = 3;
    }
    else {
      char v23 = 2;
    }
    uint64_t *v8 = v20;
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = v21;
    unint64_t v56 = v22;
    uint64_t v57 = v40;
    uint64_t v58 = v42;
    uint64_t v59 = v44;
    uint64_t v60 = v45;
    uint64_t v61 = v46;
    uint64_t v62 = v47;
    char v63 = v48;
    LOWORD(v64) = 258;
    BYTE2(v64) = 0;
    HIBYTE(v64) = v23;
    __int16 v65 = v53;
    char v66 = v54;
    uint64_t v67 = v16;
    uint64_t v68 = v17;
    uint64_t v69 = v38;
    uint64_t v70 = v39;
    uint64_t v71 = v41;
    uint64_t v72 = v18;
    __int16 v73 = v43;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v55);
    sub_100028C3C((uint64_t)&v55, (uint64_t)v78, (uint64_t *)&unk_10079CA00);
    uint64_t v24 = (uint64_t)v37;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    sub_1000D5984((uint64_t)v74, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    sub_1000D5984(v49, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
  }
  else
  {
    uint64_t v33 = v17;
    uint64_t v34 = v18;
    uint64_t v25 = v40;
    uint64_t v26 = v42;
    uint64_t v27 = v49;
    if (v19 != enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
    swift_bridgeObjectRelease();
    sub_1000D5984((uint64_t)v74, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    sub_1000D5984(v27, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    uint64_t *v8 = REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
    swift_storeEnumTagMultiPayload();
    uint64_t v55 = 0;
    unint64_t v56 = 0xE000000000000000;
    uint64_t v57 = v25;
    uint64_t v58 = v26;
    uint64_t v59 = v44;
    uint64_t v60 = v45;
    uint64_t v61 = v46;
    uint64_t v62 = v47;
    char v63 = v48;
    int v64 = 50331906;
    __int16 v65 = v53;
    char v66 = v54;
    uint64_t v67 = v16;
    uint64_t v68 = v33;
    uint64_t v69 = v38;
    uint64_t v70 = v39;
    uint64_t v71 = v41;
    uint64_t v72 = v34;
    __int16 v73 = v43;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v55);
    sub_100028C3C((uint64_t)&v55, (uint64_t)v78, (uint64_t *)&unk_10079CA00);
    uint64_t v24 = (uint64_t)v37;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
  }
  int v28 = *v50;
  uint64_t v29 = REMRemindersListDataView.SectionLite.reminders.getter();
  if (v28 == 1)
  {
    uint64_t v30 = Array<A>.replacingSubtasksWithNil()();
    sub_1000D5984((uint64_t)v74, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    swift_bridgeObjectRelease();
    uint64_t v29 = v30;
  }
  else
  {
    sub_1000D5984((uint64_t)v74, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
  }
  uint64_t v31 = v51;
  sub_1000D6800(v24, v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  *(void *)(v31 + *(int *)(result + 20)) = v29;
  *(unsigned char *)(v31 + *(int *)(result + 24)) = 0;
  return result;
}

double sub_1000D4B34@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v6);
  uint64_t v8 = (id *)((char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v3 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v9 = sub_1000D2454(a1);
    swift_release();
    if (!v9) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_1000D6868(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      goto LABEL_10;
    }
    id v9 = *v8;
  }
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 32);
  swift_unknownObjectRetain();
  uint64_t v13 = v12(v9, ObjectType, v10);
  swift_unknownObjectRelease();
  if (v13)
  {
    *(void *)(a2 + 24) = &type metadata for TTRShowRemindersInListDragAndDropREMListTarget;
    *(void *)(a2 + 32) = &off_100736DC0;

    *(void *)a2 = v13;
    return result;
  }

LABEL_10:
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_1000D4CDC()
{
  return swift_retain();
}

void *sub_1000D4CF0()
{
  return sub_1000D5F1C();
}

void *sub_1000D4D0C(uint64_t a1, void *a2)
{
  uint64_t v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
  swift_beginAccess();
  uint64_t v5 = *v4;
  id v6 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_100598448(v6, v5);

  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1000D4D94(uint64_t a1, void *a2)
{
  return sub_1000D5A84(a2);
}

uint64_t sub_1000D4D9C(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance)) {
    return 0;
  }
  swift_retain();
  uint64_t v4 = (void *)sub_100421E44((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  uint64_t v5 = sub_100230EF8(v4, a2);
  swift_release_n();
  return v5;
}

void *sub_1000D4E2C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000D4E60(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754(&qword_10078B608);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  sub_100038D28(a1, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v15, v16);

  if (v17)
  {
    sub_1000D6868(a2, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v17 = 0;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1000D6800((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v19 = *(void *)(v3 + 24);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v19 + 16))(v3, v11, ObjectType, v19);
          swift_unknownObjectRelease();
        }
        else
        {
          if (qword_1007852E0 != -1) {
            swift_once();
          }
          uint64_t v21 = type metadata accessor for Logger();
          sub_100018BF8(v21, (uint64_t)qword_10078F660);
          unint64_t v22 = Logger.logObject.getter();
          os_log_type_t v23 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v22, v23))
          {
            uint64_t v24 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v24 = 0;
            _os_log_impl((void *)&_mh_execute_header, v22, v23, "Missing TTRSmartListDragAndDropPresenterCapabilityDelegate", v24, 2u);
            swift_slowDealloc();
          }

          uint64_t v25 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
        }
        sub_1000D68D0((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v26 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
        uint64_t v17 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v8, 1, v26) != 1;
        sub_10003B6F8((uint64_t)v8, &qword_10078B608);
        break;
      case 0xAu:
      case 0xBu:
        return v17;
      default:
        sub_1000D68D0((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v17 = 0;
        break;
    }
  }
  return v17;
}

id sub_1000D523C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, void *a5@<X8>)
{
  uint64_t v34 = a5;
  int v33 = a4;
  uint64_t v31 = a2;
  char v32 = a3;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754(&qword_10078B600);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v12, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_10003B6F8((uint64_t)v12, (uint64_t *)&unk_100788DC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
LABEL_7:
    sub_10003B6F8((uint64_t)v15, &qword_10078B600);
    goto LABEL_8;
  }
  uint64_t v30 = v19;
  uint64_t v21 = v31;
  uint64_t v20 = v32;
  unsigned __int8 v22 = v33;
  sub_1000D6868((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1000D6800((uint64_t)v9, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v23 = 0;
  }
  else
  {
    sub_1000D68D0((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v23 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v23, 1, v16);
  sub_1000D68D0((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1) {
    goto LABEL_7;
  }
  uint64_t v26 = (uint64_t)v30;
  sub_1000D6800((uint64_t)v15, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (!swift_weakLoadStrong())
  {
    sub_1000D68D0(v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    goto LABEL_8;
  }
  uint64_t v27 = sub_1000D2980(v26);
  swift_release();
  sub_1000D68D0(v26, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (!v27)
  {
LABEL_8:
    uint64_t v24 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
    return (id)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v34, 1, 1, v24);
  }
  int v28 = v34;
  *uint64_t v34 = v21;
  v28[1] = v27;
  v28[2] = v20;
  *((unsigned char *)v28 + 24) = v22;
  uint64_t v29 = type metadata accessor for TTRRemindersListMovingRemindersParams(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
  swift_bridgeObjectRetain();
  return sub_1000AAEA8(v20, v22);
}

uint64_t sub_1000D56C0()
{
  return swift_weakDestroy();
}

uint64_t sub_1000D56C8()
{
  sub_1000499D4(v0 + 16);

  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DragAndDropPresenterCapability()
{
  return self;
}

uint64_t sub_1000D5734@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v6);
  uint64_t v8 = (id *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v3 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v9 = sub_1000D2454(a1);
    swift_release();
    if (!v9) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_1000D6868(a1, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1000D68D0((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      goto LABEL_13;
    }
    id v9 = *v8;
  }
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(id, uint64_t, uint64_t))(v10 + 40);
  swift_unknownObjectRetain();
  uint64_t v13 = (void *)v12(v9, ObjectType, v10);
  swift_unknownObjectRelease();
  if (!v13)
  {
LABEL_12:

    goto LABEL_13;
  }
  id v14 = [v13 customContext];
  if (!v14)
  {

    goto LABEL_12;
  }
  uint64_t v15 = v14;
  uint64_t v16 = REMSmartListCustomContext.filter.getter();

  if (v16)
  {
    *a2 = v16;
    uint64_t v17 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a2, 0, 1, v17);
  }
LABEL_13:
  uint64_t v19 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 1, 1, v19);
}

uint64_t sub_1000D5984(uint64_t a1, void (*a2)(void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1000D59CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(void *)(a7 + 64) = 0;
  *(void *)(a7 + 24) = 0;
  *(void *)(a7 + 32) = 0;
  *(void *)(a7 + 16) = 0;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(a7 + 128) = 0u;
  *(_OWORD *)(a7 + 144) = 0u;
  *(_OWORD *)(a7 + 96) = 0u;
  *(_OWORD *)(a7 + 112) = 0u;
  *(void *)(a7 + 64) = &off_100751268;
  swift_unknownObjectWeakAssign();
  swift_release();
  *(void *)(a7 + 72) = a2;
  *(void *)(a7 + 88) = a3;
  if (a4) {
    a2 = a4;
  }
  else {
    swift_bridgeObjectRetain();
  }
  *(void *)(a7 + 80) = a2;
  *(void *)(a7 + 40) = a6;
  *(void *)(a7 + 48) = a5;
  return a7;
}

uint64_t sub_1000D5A84(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance);
  if (!v2) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v7(ObjectType, v5);
    swift_unknownObjectRelease();
    id v8 = a1;
    uint64_t Strong = TTRSection.init(with:store:)();
    swift_release();
  }
  return Strong;
}

uint64_t sub_1000D5B4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  int v43 = *(void (***)(char *, char *, uint64_t))(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (void **)((char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.SectionLite();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v44 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - v11;
  uint64_t v13 = _swiftEmptyArrayStorage;
  uint64_t v45 = _swiftEmptyArrayStorage;
  uint64_t v14 = *(void *)(a1 + 16);
  char v32 = (uint64_t *)(a2 + 40);
  swift_beginAccess();
  if (!v14) {
    return (uint64_t)v13;
  }
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v15 = v8 + 16;
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
  uint64_t v40 = *(void *)(v15 + 56);
  uint64_t v41 = v16;
  unint64_t v35 = v17;
  uint64_t v18 = a1 + v17;
  uint64_t v39 = (uint64_t (**)(void **, uint64_t))(v43 + 11);
  int v38 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:);
  int v34 = enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:);
  int v33 = (void (**)(void **, uint64_t))(v43 + 12);
  uint64_t v31 = (void (**)(char *, uint64_t))(v15 - 8);
  uint64_t v42 = v15;
  int v43 = (void (**)(char *, char *, uint64_t))(v15 + 16);
  uint64_t v36 = v7;
  uint64_t v37 = v4;
  v16(v12, a1 + v17, v7);
  while (1)
  {
    REMRemindersListDataView.SectionLite.type.getter();
    int v20 = (*v39)(v6, v4);
    if (v20 == v38)
    {
      (*v33)(v6, v4);
      uint64_t v21 = *v6;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (REMRemindersListDataView.SectionLite.isEmpty.getter())
      {
        uint64_t v22 = *v32;
        swift_bridgeObjectRetain();
        char v23 = sub_100457094(v21, v22);

        swift_bridgeObjectRelease();
        if ((v23 & 1) == 0)
        {
          (*v31)(v12, v7);
          uint64_t v19 = v40;
          goto LABEL_4;
        }
      }
      else
      {
      }
    }
    else if (v20 != v34)
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    uint64_t v24 = *v43;
    (*v43)(v44, v12, v7);
    uint64_t v25 = v45;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1004D343C(0, v25[2] + 1, 1);
      uint64_t v25 = v45;
    }
    unint64_t v27 = v25[2];
    unint64_t v26 = v25[3];
    if (v27 >= v26 >> 1)
    {
      sub_1004D343C(v26 > 1, v27 + 1, 1);
      uint64_t v25 = v45;
    }
    v25[2] = v27 + 1;
    uint64_t v19 = v40;
    int v28 = (char *)v25 + v35 + v27 * v40;
    uint64_t v7 = v36;
    v24(v28, v44, v36);
    uint64_t v45 = v25;
    uint64_t v4 = v37;
LABEL_4:
    v18 += v19;
    if (!--v14) {
      return (uint64_t)v45;
    }
    v41(v12, v18, v7);
  }
}

void *sub_1000D5F1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1000D68D0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_1000D6800((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1000D68D0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

void *sub_1000D60EC(uint64_t a1, void (*a2)(void, char *), uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v4 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v36 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078B5E0);
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v35 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  id v12 = (uint64_t *)((char *)&v28 - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v39 = _swiftEmptyArrayStorage;
  sub_1004D3A20(0, 0, 0);
  uint64_t v15 = v39;
  uint64_t v16 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v34 = v16;
  uint64_t v28 = a1;
  if (v16)
  {
    uint64_t v17 = 0;
    uint64_t v32 = type metadata accessor for REMRemindersListDataView.SectionLite();
    uint64_t v18 = *(void *)(v32 - 8);
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
    uint64_t v30 = v18 + 16;
    uint64_t v31 = v19;
    uint64_t v20 = a1 + ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
    uint64_t v29 = *(void *)(v18 + 72);
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v18 + 32);
    int v33 = v6;
    do
    {
      uint64_t v22 = &v35[*(int *)(v7 + 48)];
      uint64_t v23 = v32;
      v31(v22, v20, v32);
      uint64_t v24 = (char *)v12 + *(int *)(v7 + 48);
      *id v12 = v17;
      (*v21)(v24, v22, v23);
      sub_100028C3C((uint64_t)v12, (uint64_t)v14, &qword_10078B5E0);
      v37(*(void *)v14, &v14[*(int *)(v7 + 48)]);
      sub_10003B6F8((uint64_t)v14, &qword_10078B5E0);
      uint64_t v15 = v39;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3A20(0, v15[2] + 1, 1);
        uint64_t v15 = v39;
      }
      unint64_t v26 = v15[2];
      unint64_t v25 = v15[3];
      if (v26 >= v25 >> 1)
      {
        sub_1004D3A20(v25 > 1, v26 + 1, 1);
        uint64_t v15 = v39;
      }
      ++v17;
      v15[2] = v26 + 1;
      sub_1000D6800((uint64_t)v33, (uint64_t)v15+ ((*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80))+ *(void *)(v36 + 72) * v26, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      v20 += v29;
    }
    while (v34 != v17);
  }
  swift_bridgeObjectRelease();
  return v15;
}

void *sub_1000D6424(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = a2;
  uint64_t v5 = type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0);
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v42 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10003B754(&qword_10078B5D8);
  uint64_t v7 = __chkstk_darwin(v40);
  uint64_t v39 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v38 = (void *)((char *)v30 - v10);
  __chkstk_darwin(v9);
  id v12 = (char *)v30 - v11;
  int v43 = _swiftEmptyArrayStorage;
  sub_1004D3A5C(0, 0, 0);
  uint64_t v13 = v43;
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v36 = v14;
  v30[1] = a1;
  if (v14)
  {
    uint64_t v15 = 0;
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
    uint64_t v16 = *(void *)(v35 - 8);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v33 = v16 + 16;
    uint64_t v34 = v17;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v31 = *(void *)(v16 + 72);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v19 = v42;
    uint64_t v20 = v35;
    while (1)
    {
      uint64_t v21 = v40;
      uint64_t v22 = &v39[*(int *)(v40 + 48)];
      v34(v22, v18, v20);
      uint64_t v23 = *(int *)(v21 + 48);
      uint64_t v24 = (uint64_t)v38;
      unint64_t v25 = (char *)v38 + v23;
      *uint64_t v38 = v15;
      (*v32)(v25, v22, v20);
      sub_100028C3C(v24, (uint64_t)v12, &qword_10078B5D8);
      sub_1000D3FC4(v12, v41, v19);
      sub_10003B6F8((uint64_t)v12, &qword_10078B5D8);
      if (v3) {
        break;
      }
      uint64_t v13 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3A5C(0, v13[2] + 1, 1);
        uint64_t v13 = v43;
      }
      unint64_t v27 = v13[2];
      unint64_t v26 = v13[3];
      if (v27 >= v26 >> 1)
      {
        sub_1004D3A5C(v26 > 1, v27 + 1, 1);
        uint64_t v13 = v43;
      }
      ++v15;
      v13[2] = v27 + 1;
      uint64_t v28 = (uint64_t)v13
          + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
          + *(void *)(v37 + 72) * v27;
      uint64_t v19 = v42;
      sub_1000D6800(v42, v28, type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer);
      v18 += v31;
      if (v36 == v15) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_1000D6788()
{
  return sub_10059EDC4(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 64));
}

uint64_t sub_1000D6798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1000D45C8(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 **)(v3 + 40), a3);
}

uint64_t sub_1000D67A4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1000D6800(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D6868(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000D68D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1000D6930()
{
  unint64_t result = qword_10078B628;
  if (!qword_10078B628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078B628);
  }
  return result;
}

unint64_t sub_1000D6984()
{
  unint64_t result = qword_10078B638;
  if (!qword_10078B638)
  {
    sub_100039710(&qword_10078B630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078B638);
  }
  return result;
}

unint64_t sub_1000D69E0()
{
  unint64_t result = qword_100791DA0;
  if (!qword_100791DA0)
  {
    type metadata accessor for TTRReminderEditor();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100791DA0);
  }
  return result;
}

uint64_t sub_1000D6A38()
{
  uint64_t v1 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = (id *)(v0 + v3);
  type metadata accessor for TTRRemindersListViewModel.SectionID();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 8u:
    case 9u:

      break;
    case 2u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
      uint64_t v6 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v3, v6);
      break;
    default:
      break;
  }
  uint64_t v7 = (char *)v5 + *(int *)(v1 + 20);
  if (*((void *)v7 + 1))
  {
    swift_bridgeObjectRelease();
    sub_1000510EC(*((void **)v7 + 2), *((void *)v7 + 3), *((void *)v7 + 4), *((void *)v7 + 5), *((void *)v7 + 6), *((void *)v7 + 7), v7[64]);
    int v8 = v7[120];
    if (v8 != 255) {
      sub_10003B9C0(*((void **)v7 + 9), *((void *)v7 + 10), *((void *)v7 + 11), *((void *)v7 + 12), *((void *)v7 + 13), *((void *)v7 + 14), v8 & 1);
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1000D6BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.SectionHeader() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1000CE800(v4, a1);
}

uint64_t sub_1000D6C5C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000D6C94(uint64_t a1)
{
  return sub_1000CDCF0(a1);
}

ValueMetadata *type metadata accessor for TTRITipKitProvider()
{
  return &type metadata for TTRITipKitProvider;
}

unsigned char *_s9Reminders18TTRITipKitProviderV13TipKitContextOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000D6D84);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRITipKitProvider.TipKitContext()
{
  return &type metadata for TTRITipKitProvider.TipKitContext;
}

uint64_t sub_1000D6DBC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7265646E696D6552;
  }
  else {
    uint64_t v3 = 0x73746E756F636341;
  }
  if (v2) {
    unint64_t v4 = 0xEC0000007473694CLL;
  }
  else {
    unint64_t v4 = 0xED00007473694C73;
  }
  if (a2) {
    uint64_t v5 = 0x7265646E696D6552;
  }
  else {
    uint64_t v5 = 0x73746E756F636341;
  }
  if (a2) {
    unint64_t v6 = 0xED00007473694C73;
  }
  else {
    unint64_t v6 = 0xEC0000007473694CLL;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1000D6E78(char *a1, char *a2)
{
  return sub_1000D6DBC(*a1, *a2);
}

Swift::Int sub_1000D6E84()
{
  return Hasher._finalize()();
}

uint64_t sub_1000D6F1C()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1000D6FA0()
{
  return Hasher._finalize()();
}

uint64_t sub_1000D7034@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_1007353B0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_1000D7094(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x73746E756F636341;
  if (*v1) {
    uint64_t v2 = 0x7265646E696D6552;
  }
  unint64_t v3 = 0xEC0000007473694CLL;
  if (*v1) {
    unint64_t v3 = 0xED00007473694C73;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_1000D70EC()
{
  unint64_t result = qword_10078B640;
  if (!qword_10078B640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078B640);
  }
  return result;
}

__n128 TTRListDetailListViewModelSource.viewModel(for:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B3344(a1, (uint64_t)v9);
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t TTRListDetailListViewModelSource.availableSymbolicColors(for:)(void *a1)
{
  return sub_1000D731C(a1, &qword_100789A38, (uint64_t)REMListChangeItem_ptr, (uint64_t)&protocol witness table for REMListChangeItem);
}

uint64_t TTRListDetailListViewModelSource.remColor(for:changeItem:)(uint64_t a1, void *a2)
{
  return sub_1000D73C0(a1, a2, &qword_100789A38, (uint64_t)REMListChangeItem_ptr, (uint64_t)&protocol witness table for REMListChangeItem);
}

uint64_t TTRListDetailCustomSmartListViewModelSource.deinit()
{
  return v0;
}

__n128 sub_1000D71EC@<Q0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B3344(*a1, (uint64_t)v9);
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1000D725C(void **a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D74DC(a1, a2, a3, &qword_100789A38, (uint64_t)REMListChangeItem_ptr, (uint64_t)&protocol witness table for REMListChangeItem);
}

uint64_t sub_1000D7278(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000D7580(a1, a2, a3, a4, &qword_100789A38, (uint64_t)REMListChangeItem_ptr, (uint64_t)&protocol witness table for REMListChangeItem);
}

__n128 TTRListDetailCustomSmartListViewModelSource.viewModel(for:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B3D04(a1, (uint64_t)v9);
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t TTRListDetailCustomSmartListViewModelSource.availableSymbolicColors(for:)(void *a1)
{
  return sub_1000D731C(a1, &qword_100789A40, (uint64_t)REMSmartListChangeItem_ptr, (uint64_t)&protocol witness table for REMSmartListChangeItem);
}

uint64_t sub_1000D731C(void *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for TTRListColors();
  v10[3] = sub_1000368FC(0, a2);
  v10[4] = a4;
  v10[0] = a1;
  id v7 = a1;
  uint64_t v8 = static TTRListColors.availableColors(for:)();
  sub_100038CD8((uint64_t)v10);
  return v8;
}

uint64_t TTRListDetailCustomSmartListViewModelSource.remColor(for:changeItem:)(uint64_t a1, void *a2)
{
  return sub_1000D73C0(a1, a2, &qword_100789A40, (uint64_t)REMSmartListChangeItem_ptr, (uint64_t)&protocol witness table for REMSmartListChangeItem);
}

uint64_t sub_1000D73C0(uint64_t a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for TTRListColors();
  _OWORD v11[3] = sub_1000368FC(0, a3);
  v11[4] = a5;
  v11[0] = a2;
  id v8 = a2;
  uint64_t v9 = static TTRListColors.remColor(for:list:)();
  sub_100038CD8((uint64_t)v11);
  return v9;
}

__n128 sub_1000D7450@<Q0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003B3D04(*a1, (uint64_t)v9);
  long long v3 = v9[11];
  *(_OWORD *)(a2 + 160) = v9[10];
  *(_OWORD *)(a2 + 176) = v3;
  *(_OWORD *)(a2 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a2 + 96) = v9[6];
  *(_OWORD *)(a2 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a2 + 128) = v9[8];
  *(_OWORD *)(a2 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a2 + 32) = v9[2];
  *(_OWORD *)(a2 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a2 + 64) = v9[4];
  *(_OWORD *)(a2 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a2 = v9[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1000D74C0(void **a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D74DC(a1, a2, a3, &qword_100789A40, (uint64_t)REMSmartListChangeItem_ptr, (uint64_t)&protocol witness table for REMSmartListChangeItem);
}

uint64_t sub_1000D74DC(void **a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t a6)
{
  id v8 = *a1;
  type metadata accessor for TTRListColors();
  v12[3] = sub_1000368FC(0, a4);
  v12[4] = a6;
  v12[0] = v8;
  id v9 = v8;
  uint64_t v10 = static TTRListColors.availableColors(for:)();
  sub_100038CD8((uint64_t)v12);
  return v10;
}

uint64_t sub_1000D7564(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000D7580(a1, a2, a3, a4, &qword_100789A40, (uint64_t)REMSmartListChangeItem_ptr, (uint64_t)&protocol witness table for REMSmartListChangeItem);
}

uint64_t sub_1000D7580(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, uint64_t a7)
{
  id v9 = *a2;
  type metadata accessor for TTRListColors();
  v13[3] = sub_1000368FC(0, a5);
  v13[4] = a7;
  v13[0] = v9;
  id v10 = v9;
  uint64_t v11 = static TTRListColors.remColor(for:list:)();
  sub_100038CD8((uint64_t)v13);
  return v11;
}

__n128 TTRListDetailCreationViewModelSource.viewModel(for:)@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_retain();
  sub_1003B2B88(v2, (uint64_t)v9);
  swift_release();
  long long v3 = v9[11];
  *(_OWORD *)(a1 + 160) = v9[10];
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a1 + 96) = v9[6];
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a1 + 128) = v9[8];
  *(_OWORD *)(a1 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a1 + 32) = v9[2];
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a1 + 64) = v9[4];
  *(_OWORD *)(a1 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a1 = v9[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t TTRListDetailCreationViewModelSource.availableSymbolicColors(for:)(uint64_t a1)
{
  type metadata accessor for TTRListColors();
  v4[3] = type metadata accessor for TTRListDetailCreationChangeItem();
  v4[4] = &protocol witness table for TTRListDetailCreationChangeItem;
  v4[0] = a1;
  swift_retain();
  uint64_t v2 = static TTRListColors.availableColors(for:)();
  sub_100038CD8((uint64_t)v4);
  return v2;
}

uint64_t TTRListDetailCreationViewModelSource.remColor(for:changeItem:)(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TTRListColors();
  v5[3] = type metadata accessor for TTRListDetailCreationChangeItem();
  v5[4] = &protocol witness table for TTRListDetailCreationChangeItem;
  v5[0] = a2;
  swift_retain();
  uint64_t v3 = static TTRListColors.remColor(for:list:)();
  sub_100038CD8((uint64_t)v5);
  return v3;
}

__n128 sub_1000D7774@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = swift_retain();
  sub_1003B2B88(v2, (uint64_t)v9);
  swift_release();
  long long v3 = v9[11];
  *(_OWORD *)(a1 + 160) = v9[10];
  *(_OWORD *)(a1 + 176) = v3;
  *(_OWORD *)(a1 + 192) = v9[12];
  long long v4 = v9[7];
  *(_OWORD *)(a1 + 96) = v9[6];
  *(_OWORD *)(a1 + 112) = v4;
  long long v5 = v9[9];
  *(_OWORD *)(a1 + 128) = v9[8];
  *(_OWORD *)(a1 + 144) = v5;
  long long v6 = v9[3];
  *(_OWORD *)(a1 + 32) = v9[2];
  *(_OWORD *)(a1 + 48) = v6;
  long long v7 = v9[5];
  *(_OWORD *)(a1 + 64) = v9[4];
  *(_OWORD *)(a1 + 80) = v7;
  __n128 result = (__n128)v9[1];
  *(_OWORD *)a1 = v9[0];
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1000D77F0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  type metadata accessor for TTRListColors();
  v4[3] = type metadata accessor for TTRListDetailCreationChangeItem();
  v4[4] = &protocol witness table for TTRListDetailCreationChangeItem;
  v4[0] = v1;
  swift_retain();
  uint64_t v2 = static TTRListColors.availableColors(for:)();
  sub_100038CD8((uint64_t)v4);
  return v2;
}

uint64_t sub_1000D785C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  type metadata accessor for TTRListColors();
  v5[3] = type metadata accessor for TTRListDetailCreationChangeItem();
  v5[4] = &protocol witness table for TTRListDetailCreationChangeItem;
  v5[0] = v2;
  swift_retain();
  uint64_t v3 = static TTRListColors.remColor(for:list:)();
  sub_100038CD8((uint64_t)v5);
  return v3;
}

__n128 TTRListDetailTemplateViewModelSource.viewModel(for:)@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = a1;
  sub_1003B3AC8(v3, (uint64_t)v10);

  long long v4 = v10[11];
  *(_OWORD *)(a2 + 160) = v10[10];
  *(_OWORD *)(a2 + 176) = v4;
  *(_OWORD *)(a2 + 192) = v10[12];
  long long v5 = v10[7];
  *(_OWORD *)(a2 + 96) = v10[6];
  *(_OWORD *)(a2 + 112) = v5;
  long long v6 = v10[9];
  *(_OWORD *)(a2 + 128) = v10[8];
  *(_OWORD *)(a2 + 144) = v6;
  long long v7 = v10[3];
  *(_OWORD *)(a2 + 32) = v10[2];
  *(_OWORD *)(a2 + 48) = v7;
  long long v8 = v10[5];
  *(_OWORD *)(a2 + 64) = v10[4];
  *(_OWORD *)(a2 + 80) = v8;
  __n128 result = (__n128)v10[1];
  *(_OWORD *)a2 = v10[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t TTRListDetailTemplateViewModelSource.availableSymbolicColors(for:)(void *a1)
{
  return sub_1000D731C(a1, &qword_10078B648, (uint64_t)REMTemplateChangeItem_ptr, (uint64_t)&protocol witness table for REMTemplateChangeItem);
}

uint64_t TTRListDetailTemplateViewModelSource.remColor(for:changeItem:)(uint64_t a1, void *a2)
{
  return sub_1000D73C0(a1, a2, &qword_10078B648, (uint64_t)REMTemplateChangeItem_ptr, (uint64_t)&protocol witness table for REMTemplateChangeItem);
}

__n128 sub_1000D7988@<Q0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = *a1;
  sub_1003B3AC8(v3, (uint64_t)v10);

  long long v4 = v10[11];
  *(_OWORD *)(a2 + 160) = v10[10];
  *(_OWORD *)(a2 + 176) = v4;
  *(_OWORD *)(a2 + 192) = v10[12];
  long long v5 = v10[7];
  *(_OWORD *)(a2 + 96) = v10[6];
  *(_OWORD *)(a2 + 112) = v5;
  long long v6 = v10[9];
  *(_OWORD *)(a2 + 128) = v10[8];
  *(_OWORD *)(a2 + 144) = v6;
  long long v7 = v10[3];
  *(_OWORD *)(a2 + 32) = v10[2];
  *(_OWORD *)(a2 + 48) = v7;
  long long v8 = v10[5];
  *(_OWORD *)(a2 + 64) = v10[4];
  *(_OWORD *)(a2 + 80) = v8;
  __n128 result = (__n128)v10[1];
  *(_OWORD *)a2 = v10[0];
  *(__n128 *)(a2 + 16) = result;
  return result;
}

uint64_t sub_1000D7A00(void **a1, uint64_t a2, uint64_t a3)
{
  return sub_1000D74DC(a1, a2, a3, &qword_10078B648, (uint64_t)REMTemplateChangeItem_ptr, (uint64_t)&protocol witness table for REMTemplateChangeItem);
}

uint64_t sub_1000D7A1C(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
  return sub_1000D7580(a1, a2, a3, a4, &qword_10078B648, (uint64_t)REMTemplateChangeItem_ptr, (uint64_t)&protocol witness table for REMTemplateChangeItem);
}

uint64_t type metadata accessor for TTRListDetailListViewModelSource()
{
  return self;
}

uint64_t type metadata accessor for TTRListDetailCustomSmartListViewModelSource()
{
  return self;
}

uint64_t type metadata accessor for TTRListDetailCreationViewModelSource()
{
  return self;
}

uint64_t type metadata accessor for TTRListDetailTemplateViewModelSource()
{
  return self;
}

uint64_t sub_1000D7AC8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078B950);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078B950);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000D7B90()
{
  uint64_t v1 = (void *)v0[13];
  uint64_t v2 = v0[14];
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[19];
  if (!v1)
  {
    uint64_t v5 = 0;
    goto LABEL_12;
  }
  if (v1 != (void *)1)
  {
    if ((v3 & 0x100) != 0) {
      return 0;
    }
    uint64_t v9 = v0[17];
    sub_1000D8A74(v1);
    sub_1000D8A74(v1);
    swift_bridgeObjectRetain();
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_100569C10(v6);
    uint64_t v5 = *(void *)(v9 + 16);
    swift_bridgeObjectRelease();
    if (v5)
    {
      sub_1000D8A4C(v1);
      uint64_t v5 = 0;
    }
    else
    {
      uint64_t v7 = *(void *)(v4 + 16);
      sub_1000D8A4C(v1);
      if (!v7 && (v3 & 1) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = v2;
      }
    }
LABEL_12:
    sub_1000D8A4C(v1);
    return v5;
  }
  return 0;
}

uint64_t sub_1000D7D20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100789888);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078BA30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785258 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100018BF8(v9, (uint64_t)qword_10078B950);
  id v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v10, v11))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "requestLoadUpgradeInfo: called", v12, 2u);
    swift_slowDealloc();
  }

  v16[1] = (id)sub_1000BD68C();
  sub_10007CD0C();
  v16[0] = (id)static OS_dispatch_queue.main.getter();
  uint64_t v13 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v4, 1, 1, v13);
  sub_10003B754(&qword_10078A990);
  sub_100037EA0(&qword_10078A998, &qword_10078A990);
  sub_1000AC47C();
  Publisher.receive<A>(on:options:)();
  sub_1000AC4D4((uint64_t)v4);

  swift_release();
  sub_100037EA0(&qword_10078BA38, &qword_10078BA30);
  uint64_t v14 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(v1 + 160) = v14;
  return swift_release();
}

void *sub_1000D8080(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  if (qword_100785258 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_10078B950);
  sub_1000D8974(v3);
  sub_1000D8974(v3);
  os_log_type_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    os_log_type_t type = v12;
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    sub_1000D8974(v3);
    uint64_t v14 = String.init<A>(describing:)();
    sub_1000385A8(v14, v15, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_1000D89E0(v3);
    sub_1000D89E0(v3);
    _os_log_impl((void *)&_mh_execute_header, v11, type, "requestLoadUpgradeInfo: upgradeInfoPublisher received upgradeInfo: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    sub_1000D89E0(v3);
    sub_1000D89E0(v3);
  }
  uint64_t v16 = (void *)a1[13];
  a1[13] = v3;
  a1[14] = v4;
  a1[15] = v5;
  a1[16] = v6;
  a1[17] = v7;
  a1[18] = v8;
  a1[19] = v9;
  sub_1000D8974(v3);
  sub_1000D8974(v3);
  sub_1000D8A4C(v16);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = Strong;
    uint64_t v19 = sub_1000D7B90();
    uint64_t v20 = (uint64_t *)(v18 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel);
    uint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel);
    uint64_t v22 = *(void *)(v18 + OBJC_IVAR____TtC9Reminders25TTRIWelcomeViewController_viewModel + 8);
    *uint64_t v20 = v19;
    v20[1] = v23;
    sub_1000D8A5C(v21, v22);
    sub_10042832C();
    swift_unknownObjectRelease();
  }
  return sub_1000D89E0(v3);
}

void sub_1000D8444()
{
  if (qword_100785258 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_10078B950);
  oslog = Logger.logObject.getter();
  os_log_type_t v1 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(oslog, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v1, "requestLoadUpgradeInfo: upgradeInfoPublisher completed", v2, 2u);
    swift_slowDealloc();
  }
}

void sub_1000D852C()
{
  os_log_type_t v1 = (void *)v0[13];
  if (v1 == (void *)1)
  {
    if (qword_100785258 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10078B950);
    oslog = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v3, "Need non-nil upgradeInfo in order to proceed", v4, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    uint64_t v6 = v0[18];
    uint64_t v5 = v0[19];
    uint64_t v8 = v0[16];
    uint64_t v7 = v0[17];
    uint64_t v10 = v0[14];
    uint64_t v9 = v0[15];
    v12[0] = v0[13];
    v12[1] = v10;
    long long v12[2] = v9;
    v12[3] = v8;
    v12[4] = v7;
    void v12[5] = v6;
    v12[6] = v5;
    sub_100038D28(v0 + 8, v0[11]);
    sub_1000D8974(v1);
    sub_100265C1C((uint64_t)v12);
    sub_1000D8A4C(v1);
  }
}

void *sub_1000D86D4()
{
  return sub_1000D86EC("WelcomePresenter has nil upgradeInfo when requestContinueToUpgradeAutomatically");
}

void *sub_1000D86E0()
{
  return sub_1000D86EC("WelcomePresenter has nil upgradeInfo when requestUpgradeNow");
}

void *sub_1000D86EC(const char *a1)
{
  uint64_t v2 = (void *)v1[13];
  if (v2 == (void *)1)
  {
    if (qword_100785258 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_10078B950);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
      swift_slowDealloc();
    }

    __n128 result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1004298D0((uint64_t)result);
      return (void *)swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v9 = v1[14];
    uint64_t v10 = v1[15];
    uint64_t v11 = v1[16];
    uint64_t v12 = v1[17];
    uint64_t v13 = v1[18];
    uint64_t v14 = v1[19];
    v15[0] = v1[13];
    v15[1] = v9;
    v15[2] = v10;
    v15[3] = v11;
    v15[4] = v12;
    v15[5] = v13;
    v15[6] = v14;
    __n128 result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      sub_1000D8974(v2);
      sub_100432D28((uint64_t)v15);
      swift_unknownObjectRelease();
      return sub_1000D8A4C(v2);
    }
  }
  return result;
}

uint64_t sub_1000D88E4()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 64);
  sub_1000D8A4C(*(void **)(v0 + 104));
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIWelcomePresenter()
{
  return self;
}

void *sub_1000D8974(void *result)
{
  if (result)
  {
    id v1 = result;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

void *sub_1000D89E0(void *result)
{
  if (result)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1000D8A4C(void *result)
{
  if (result != (void *)1) {
    return sub_1000D89E0(result);
  }
  return result;
}

uint64_t sub_1000D8A5C(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 1) >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1000D8A74(void *result)
{
  if (result != (void *)1) {
    return sub_1000D8974(result);
  }
  return result;
}

uint64_t sub_1000D8A84(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000D9020(a1, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11) == 1)
  {
    if (a2)
    {
      static TTRLocalizableStrings.Templates.shareTemplate.getter();
      NSString v12 = String._bridgeToObjectiveC()();
      id v13 = [self _systemImageNamed:v12];

      type metadata accessor for TTRTemplatePublicLinkData();
      TTRTemplatePublicLinkData.Capabilities.createLink.unsafeMutableAddressor();
      sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a3;
      *(void *)(v14 + 24) = a4;
      swift_retain();
      return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    static TTRLocalizableStrings.Templates.updateLink.getter();
    uint64_t v39 = v16;
    NSString v17 = String._bridgeToObjectiveC()();
    id v40 = self;
    id v18 = [v40 _systemImageNamed:v17];

    v38[2] = *(int *)(type metadata accessor for TTRTemplatePublicLinkData() + 20);
    TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor();
    v38[1] = a1;
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a3;
    *(void *)(v19 + 24) = a4;
    swift_retain();
    uint64_t v39 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    static TTRLocalizableStrings.Templates.sendLink.getter();
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = v40;
    id v22 = [v40 _systemImageNamed:v20];

    uint64_t v23 = swift_allocObject();
    *(void *)(v23 + 16) = a3;
    *(void *)(v23 + 24) = a4;
    swift_retain();
    v38[0] = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    static TTRLocalizableStrings.Templates.stopSharing.getter();
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v21 _systemImageNamed:v24];

    TTRTemplatePublicLinkData.Capabilities.stopSharing.unsafeMutableAddressor();
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = a3;
    *(void *)(v26 + 24) = a4;
    swift_retain();
    uint64_t v27 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_1000368FC(0, &qword_1007894E0);
    uint64_t v28 = static TTRLocalizableStrings.Templates.manageLink.getter();
    uint64_t v30 = v29;
    NSString v31 = String._bridgeToObjectiveC()();
    uint64_t v32 = (objc_class *)[v40 _systemImageNamed:v31];

    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_10066D460;
    uint64_t v34 = v38[0];
    *(void *)(v33 + 32) = v39;
    *(void *)(v33 + 40) = v34;
    *(void *)(v33 + 48) = v27;
    UIMenuElementSize v41 = v33;
    specialized Array._endMutation()();
    v35._uint64_t countAndFlagsBits = v28;
    v35._object = v30;
    v42.value.super.Class isa = v32;
    v42.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v42, 0, 0xFFFFFFFFFFFFFFFFLL, v41, v37).super.super.isa;
    sub_1000D9140((uint64_t)v10);
  }
  return (uint64_t)isa;
}

uint64_t sub_1000D9020(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000D9084()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000D90BC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_1000D90E8()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(2);
}

uint64_t sub_1000D9114()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(3);
}

uint64_t sub_1000D9140(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000D919C()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1000D91D4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078BA40);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078BA40);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000D929C()
{
  id v1 = *(id *)(*(void *)(*(void *)(v0 + 48) + 64) + 16);
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1000DA270(v2, v1);
  uint64_t v4 = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_bridgeObjectRelease();
  if (v5) {
    static TTRLocalizableStrings.GroupDetail.includedListsCountText(withCount:)();
  }
  id v6 = [v1 name];
  uint64_t v7 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v7;
}

uint64_t sub_1000D9370(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Logger();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = qword_100785260;
  id v11 = *(id *)(*(void *)(*(void *)(v3 + 48) + 64) + 16);
  if (v10 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100018BF8(v6, (uint64_t)qword_10078BA40);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v14 = [v11 objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v14;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  static TTRLocalizableStrings.UndoAction.renameGroup.getter();
  unint64_t v15 = self;
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v17 = (void *)swift_allocObject();
  v17[2] = v3;
  void v17[3] = a1;
  v17[4] = a2;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_1000DA4C8;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_1000218B0;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  void aBlock[3] = &unk_100739E70;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v15 withActionName:v16 block:v19];

  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000D96D4()
{
  unsigned long long v0 = (unsigned __int128)String.validatedListName()();
  TTRListEditor.edit(name:)((Swift::String)v0);

  return swift_bridgeObjectRelease();
}

void sub_1000D9720()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1[6];
  uint64_t v7 = qword_100785260;
  id v8 = *(id *)(*(void *)(v6 + 64) + 16);
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100018BF8(v2, (uint64_t)qword_10078BA40);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v11 = [v8 objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100038D28(v1 + 8, v1[11]);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v13 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
  id v14 = [*(id *)(*(void *)(v6 + 64) + 16) saveRequest];
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  unint64_t v15 = (void *)static OS_dispatch_queue.main.getter();
  aBlock[4] = sub_1002A5AEC;
  aBlock[5] = 0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100009ADC;
  void aBlock[3] = &unk_100739DF8;
  NSString v16 = _Block_copy(aBlock);
  [v14 saveWithQueue:v15 completion:v16];
  _Block_release(v16);

  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
}

void sub_1000D9A24()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = qword_100785260;
  id v7 = *(id *)(*(void *)(v1[6] + 64) + 16);
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100018BF8(v2, (uint64_t)qword_10078BA40);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v10 = [v7 objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v10;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100038D28(v1 + 8, v1[11]);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
  if (swift_unknownObjectWeakLoadStrong()) {
    swift_unknownObjectRelease();
  }
}

void sub_1000D9C58()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Logger();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v21[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1[6];
  uint64_t v7 = qword_100785260;
  id v8 = *(id *)(*(void *)(v6 + 64) + 16);
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100018BF8(v2, (uint64_t)qword_10078BA40);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, v9, v2);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 0x44497463656A626FLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  id v11 = [v8 objectID];
  *(void *)(inited + 72) = sub_1000368FC(0, qword_10078E3D0);
  *(void *)(inited + 48) = v11;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  sub_100038D28(v1 + 8, v1[11]);
  uint64_t v12 = *(void **)(*(void *)(v6 + 64) + 16);
  id v13 = *(void **)(v6 + 40);
  uint64_t v14 = *(void *)(v6 + 48);
  id v15 = *(id *)(v6 + 32);
  id v16 = v12;
  id v17 = v13;
  swift_bridgeObjectRetain();
  uint64_t v18 = (void *)sub_1000D9F6C(v15, v16, v17, v14);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v20 = Strong;
    [Strong pushViewController:v18 animated:1];

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1000D9EF0()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIGroupDetailPresenter()
{
  return self;
}

uint64_t sub_1000D9F6C(void *a1, void *a2, void *a3, uint64_t a4)
{
  id v8 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithDebugIdentifier:v9];

  type metadata accessor for TTRIGroupMembershipInteractor();
  swift_allocObject();
  id v11 = a1;
  id v12 = a2;
  id v13 = a3;
  swift_bridgeObjectRetain();
  id v14 = v10;
  id v15 = sub_100544BE0(v11, v12, v13, a4, v14);
  uint64_t v16 = type metadata accessor for TTRIGroupMembershipRouter();
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v29[3] = v16;
  v29[4] = &off_100748D40;
  v29[0] = v17;
  type metadata accessor for TTRIGroupMembershipPresenter();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = sub_100038E88((uint64_t)v29, v16);
  double v20 = __chkstk_darwin(v19);
  id v22 = (void *)((char *)&v29[-1] - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, double))(v23 + 16))(v22, v20);
  uint64_t v24 = *v22;
  v18[12] = v16;
  v18[13] = &off_100748D40;
  v18[9] = v24;
  v18[3] = 0;
  swift_unknownObjectWeakInit();
  v18[5] = 0;
  swift_unknownObjectWeakInit();
  v18[7] = v15;
  v18[8] = &off_10074FB00;
  v18[6] = v14;
  id v25 = v14;
  swift_retain();
  swift_retain();
  sub_100038CD8((uint64_t)v29);
  type metadata accessor for TTRIGroupMembershipViewController();
  v29[0] = v18;
  v29[1] = &off_10074E590;
  v29[2] = v25;
  static TTRTypedController<>.instantiateFromStoryboard(with:)();

  uint64_t v26 = v28;
  v15[3] = &off_10074E580;
  swift_unknownObjectWeakAssign();
  swift_release();
  v18[3] = &off_100736C48;
  swift_unknownObjectWeakAssign();
  v18[5] = &off_100739DA8;
  swift_unknownObjectWeakAssign();
  swift_release();
  swift_unknownObjectWeakAssign();
  swift_release();
  return v26;
}

void sub_1000DA270(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return;
  }
  unint64_t v4 = 0;
  uint64_t v5 = a1 + 40;
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v7 = -(uint64_t)v2;
  id v8 = &selRef_setAxis_;
  uint64_t v22 = a1 + 40;
  unint64_t v23 = *(void *)(a1 + 16);
  uint64_t v25 = -(uint64_t)v2;
  do
  {
    uint64_t v24 = v6;
    if (v4 <= v2) {
      unint64_t v9 = v2;
    }
    else {
      unint64_t v9 = v4;
    }
    uint64_t v27 = -(uint64_t)v9;
    for (uint64_t i = (unsigned char *)(v5 + 16 * v4++); ; i += 16)
    {
      if (v27 + v4 == 1)
      {
        __break(1u);
        return;
      }
      id v12 = (void *)*((void *)i - 1);
      char v13 = *i;
      id v11 = v12;
      char v26 = v13;
      id v14 = (void *)TTRListOrCustomSmartListChangeItem.parentListID.getter();
      id v15 = [a2 v8[30]];
      uint64_t v16 = v15;
      if (!v14) {
        break;
      }
      if (v15)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v17 = v14;
        char v18 = static NSObject.== infix(_:_:)();

        uint64_t v7 = v25;
        id v8 = &selRef_setAxis_;

        if (v18) {
          goto LABEL_16;
        }
      }
      else
      {

        id v11 = v14;
      }
LABEL_8:

      ++v4;
      if (v7 + v4 == 1) {
        return;
      }
    }
    if (v15)
    {

      id v11 = v16;
      goto LABEL_8;
    }
LABEL_16:
    uint64_t v6 = v24;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1004D37E8(0, v24[2] + 1, 1);
      uint64_t v6 = v24;
    }
    unint64_t v20 = v6[2];
    unint64_t v19 = v6[3];
    if (v20 >= v19 >> 1)
    {
      sub_1004D37E8(v19 > 1, v20 + 1, 1);
      uint64_t v6 = v24;
    }
    v6[2] = v20 + 1;
    uint64_t v21 = &v6[2 * v20];
    v21[4] = v12;
    *((unsigned char *)v21 + 40) = v26;
    uint64_t v5 = v22;
    unint64_t v2 = v23;
  }
  while (v7 + v4);
}

uint64_t sub_1000DA488()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000DA4C8()
{
  return sub_1000D96D4();
}

uint64_t sub_1000DA4D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DA4EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v6 - 8);
  id v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unsigned char *v8 = 4;
  uint64_t v9 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v21 = REMSmartListType.longTitle.getter();
  uint64_t v22 = static TTRListColors.SmartList.assigned.getter();
  uint64_t v23 = v1;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (v12(ObjectType, v10)) {
    swift_unknownObjectRelease();
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10)) {
    swift_unknownObjectRelease();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 56))(v27, ObjectType, v10);
  sub_10003B6F8((uint64_t)v27, &qword_100791FA0);
  if (v12(ObjectType, v10))
  {
    uint64_t v14 = v13;
    uint64_t v15 = swift_getObjectType();
    int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    swift_unknownObjectRelease();
  }
  else
  {
    int v20 = 0;
  }
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v24, 1, 1, v16);
  uint64_t v17 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v25, 1, 1, v17);
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

id sub_1000DA8F4()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v4, (uint64_t)v3, &qword_100786EF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 0;
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_1000DD86C((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_1000DAA2C()
{
  return *(void *)TTRRemindersListViewModel.AssignmentData.VisibleElements.originatorString.unsafeMutableAddressor();
}

uint64_t sub_1000DAA48()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v1 = TTRUserDefaults.showingLargeAttachments(forType:)();

  return v1 & 1;
}

void sub_1000DAA88()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

uint64_t sub_1000DAAE8()
{
  return *(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_hasCompletedReminders) & 1;
}

uint64_t sub_1000DAAFC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v3;
  *(_OWORD *)a3 = xmmword_10066EDA0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = sub_1000DD90C;
  *(void *)(a3 + 32) = v7;
  swift_retain();

  return swift_retain();
}

uint64_t sub_1000DAB8C@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)a1();
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = [v3 objectID];

    *a2 = v5;
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v10 = v11;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v7(v8, v9, 1, v10);
}

uint64_t sub_1000DAC7C()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v0);
  uint64_t v2 = (uint64_t *)((char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (id *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9) != 1)
  {
    uint64_t v10 = 0;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1000DD79C((uint64_t)v8, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1000DD804((uint64_t)v5, (uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v10 = *v2;
          sub_1000DD86C((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          return v10;
        }
        sub_1000DD86C((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        uint64_t v11 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
        uint64_t v12 = (uint64_t)v5;
LABEL_4:
        sub_1000DD86C(v12, (uint64_t (*)(void))v11);
        break;
      case 5u:

        return 0;
      case 6u:

        return 0;
      case 0xAu:
      case 0xBu:
        return v10;
      default:
        uint64_t v11 = &type metadata accessor for TTRRemindersListViewModel.Item;
        uint64_t v12 = (uint64_t)v8;
        goto LABEL_4;
    }
  }
  return 0;
}

uint64_t sub_1000DAF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1000DB0C4();
  sub_1000DD804(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1000DD86C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = &off_10073C570;
    uint64_t v10 = sub_1000394A8((uint64_t *)a2);
    uint64_t result = sub_1000DD804(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(uint64_t *)((char *)v10 + *(int *)(v9 + 20)) = v7;
    *((unsigned char *)v10 + *(int *)(v9 + 24)) = 0;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return swift_release();
  }
  return result;
}

uint64_t sub_1000DB0C4()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    _s9Reminders30DragAndDropPresenterCapabilityCMa_0();
    uint64_t v2 = swift_allocObject();
    uint64_t v3 = (void *)REMSmartListTypeAssigned;
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(unsigned char *)(v2 + 40) = 2;
    *(void *)(v2 + 24) = &off_100739E98;
    *(void *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    id v4 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1000DB17C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1000DB0C4();
  sub_10003B694(a1, (uint64_t)v8, (uint64_t *)&unk_100788DC0);
  uint64_t v10 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest(0);
  uint64_t v11 = swift_allocObject();
  uint64_t result = sub_100028C3C((uint64_t)v8, v11+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_parent, (uint64_t *)&unk_100788DC0);
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_childIndex) = a2;
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability) = v9;
  a3[3] = v10;
  a3[4] = (uint64_t)&off_10073C408;
  *a3 = v11;
  return result;
}

void sub_1000DB280()
{
  REMReminderChangeItem.ttrAssignmentContext.getter();
  uint64_t v0 = v9;
  if (v9)
  {
    uint64_t v1 = v10;
    sub_100038D28(v8, v9);
    uint64_t v2 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
    sub_100038CD8((uint64_t)v8);
    if (v2)
    {

      return;
    }
  }
  else
  {
    sub_10003B6F8((uint64_t)v8, &qword_100787478);
  }
  REMReminderChangeItem.ttrList.getter();
  uint64_t v3 = v9;
  if (v9)
  {
    uint64_t v4 = v10;
    sub_100038D28(v8, v9);
    uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 72))(v3, v4);
    if (v5)
    {
      uint64_t v6 = v5;
      id v7 = [v5 objectID];

      sub_100038CD8((uint64_t)v8);
      if (v7)
      {
        TTRReminderEditor.addAssignment(assigneeID:originatorID:)();
      }
    }
    else
    {
      sub_100038CD8((uint64_t)v8);
    }
  }
  else
  {
    sub_10003B6F8((uint64_t)v8, &qword_100787480);
  }
}

uint64_t sub_1000DB3D0(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3))
  {
    uint64_t v6 = v5;
    uint64_t v7 = swift_getObjectType();
    LOBYTE(v6) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 56))(a1, v7, v6);
    swift_unknownObjectRelease();
    if ((v6 & 1) == 0) {
      goto LABEL_11;
    }
  }
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_100038D28(a1, v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 200))(v23, v8, v9);
  uint64_t v10 = v24;
  if (!v24)
  {
    uint64_t v21 = &qword_100787478;
LABEL_10:
    sub_10003B6F8((uint64_t)v23, v21);
    goto LABEL_11;
  }
  uint64_t v11 = v25;
  sub_100038D28(v23, v24);
  uint64_t v12 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  sub_100038CD8((uint64_t)v23);
  if (!v12)
  {
LABEL_11:
    char v20 = 0;
    return v20 & 1;
  }
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_100038D28(a1, v13);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 176))(v23, v13, v14);
  uint64_t v15 = v24;
  if (!v24)
  {

    uint64_t v21 = &qword_100787480;
    goto LABEL_10;
  }
  uint64_t v16 = v25;
  sub_100038D28(v23, v24);
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 72))(v15, v16);
  sub_100038CD8((uint64_t)v23);
  if (!v17)
  {

    goto LABEL_11;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  id v18 = [v17 objectID];
  id v19 = [v12 assigneeID];
  char v20 = static NSObject.== infix(_:_:)();

  return v20 & 1;
}

uint64_t sub_1000DB618@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1000DB0C4();
  sub_10016B49C(a1, a2, a3);

  return swift_release();
}

uint64_t sub_1000DB674()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v0);
  uint64_t v2 = (uint64_t *)((char *)&v14 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v5, 1, v9) == 1)
  {
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v11 = &type metadata accessor for TTRRemindersListViewModel.Item;
    uint64_t v12 = (uint64_t)v5;
LABEL_8:
    sub_1000DD86C(v12, (uint64_t (*)(void))v11);
    return 0;
  }
  sub_1000DD79C((uint64_t)v5, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1000DD804((uint64_t)v8, (uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1000DD86C((uint64_t)v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    uint64_t v11 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
    uint64_t v12 = (uint64_t)v8;
    goto LABEL_8;
  }
  uint64_t v10 = *v2;
  sub_1000DD86C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  return v10;
}

uint64_t sub_1000DB914()
{
  v1[3] = type metadata accessor for TTRUserActivityListPayload();
  v1[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
  *(unsigned char *)sub_1000394A8(v1) = 4;
  type metadata accessor for TTRUserActivityListPayload.State();
  swift_storeEnumTagMultiPayload();
  NSUserActivity.setPayload(_:)();
  return sub_100038CD8((uint64_t)v1);
}

uint64_t sub_1000DB98C()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
  uint64_t v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_100588C58(ObjectType, v12);
    swift_unknownObjectRelease();
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v6, 1, v14) != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      sub_1000DD86C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
      goto LABEL_6;
    }
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  }
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
LABEL_6:
  uint64_t v17 = (uint64_t)&v3[*(int *)(sub_10003B754(&qword_100786F30) + 48)];
  *uint64_t v3 = 4;
  sub_10003B694((uint64_t)v9, v17, (uint64_t *)&unk_10078E360);
  type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  swift_storeEnumTagMultiPayload();
  void v21[3] = v1;
  v21[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  id v18 = sub_1000394A8(v21);
  sub_1000DD804((uint64_t)v3, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)();
  sub_1000DD86C((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
  sub_100038CD8((uint64_t)v21);
  return v10;
}

void *sub_1000DBCB4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_smartList);
  id v2 = v1;
  return v1;
}

uint64_t sub_1000DBCF0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TTRAutoCompleteReminderListScope();
  swift_storeEnumTagMultiPayload();
  uint64_t v3 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);

  return v3(a1, 0, 1, v2);
}

uint64_t sub_1000DBD70()
{
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_1000DBDC0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1000DBE54()
{
  return type metadata accessor for TTRShowAssignedViewModelSource();
}

uint64_t type metadata accessor for TTRShowAssignedViewModelSource()
{
  uint64_t result = qword_10078BB70;
  if (!qword_10078BB70) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1000DBEA8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1000DBF14(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v133 = a2;
  uint64_t v152 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v152);
  v151 = (uint64_t *)((char *)&v127 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v150 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v149 = (char *)&v127 - v8;
  uint64_t v148 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist();
  uint64_t v158 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  v147 = (char *)&v127 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v145 = *(void *)(v10 - 8);
  uint64_t v146 = v10;
  __chkstk_darwin(v10);
  uint64_t v157 = (uint64_t)&v127 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v12 - 8);
  uint64_t v132 = (char *)&v127 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v127 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = sub_10003B754(&qword_10078B5D0);
  uint64_t v17 = __chkstk_darwin(v144);
  v143 = (char *)&v127 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  v142 = (uint64_t *)((char *)&v127 - v20);
  __chkstk_darwin(v19);
  v156 = (uint64_t *)((char *)&v127 - v21);
  uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v134 = (uint64_t)&v127 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v140 = *(void *)(v25 - 8);
  uint64_t v26 = __chkstk_darwin(v25);
  v137 = (char *)&v127 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  v139 = (char *)&v127 - v28;
  uint64_t v155 = type metadata accessor for REMRemindersListDataView.ListsModel();
  *(void *)&long long v154 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  *(void *)&long long v153 = (char *)&v127 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for TTRListType.SortingCapability();
  uint64_t v31 = __chkstk_darwin(v30);
  uint64_t v32 = __chkstk_darwin(v31);
  v135 = (BOOL *)&v127 - v33;
  __chkstk_darwin(v32);
  Swift::String v35 = (char *)&v127 - v34;
  uint64_t v36 = OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_smartList;
  Swift::OpaquePointer v37 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_smartList);
  uint64_t v130 = v22;
  uint64_t v131 = v16;
  uint64_t v129 = v23;
  uint64_t v138 = v25;
  v136 = (_OWORD *)v38;
  if (v37)
  {
    id v39 = [v37 sortingStyle];
    uint64_t v40 = REMRemindersListDataView.AssignedModel.assignedSmartList.getter();
    if (!v40)
    {
      uint64_t v44 = v36;
      if (v39) {
        goto LABEL_12;
      }
LABEL_16:
      LODWORD(v141) = 1;
      goto LABEL_20;
    }
    UIMenuElementSize v41 = (void *)v40;
  }
  else
  {
    uint64_t v42 = REMRemindersListDataView.AssignedModel.assignedSmartList.getter();
    if (!v42)
    {
      LODWORD(v141) = 1;
      uint64_t v44 = v36;
      goto LABEL_20;
    }
    UIMenuElementSize v41 = (void *)v42;
    id v39 = 0;
  }
  id v43 = [v41 sortingStyle];

  uint64_t v44 = v36;
  if (!v39)
  {
    if (v43)
    {

      goto LABEL_15;
    }
    goto LABEL_16;
  }
  if (!v43)
  {
LABEL_12:

LABEL_15:
    LODWORD(v141) = 0;
    goto LABEL_20;
  }
  uint64_t v45 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v47 = v46;
  if (v45 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v47 == v48) {
    LODWORD(v141) = 1;
  }
  else {
    LODWORD(v141) = _stringCompareWithSmolCheck(_:_:expecting:)();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v49 = *(void *)(v3 + v44);
  uint64_t v50 = (void *)REMRemindersListDataView.AssignedModel.assignedSmartList.getter();

  uint64_t v51 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1000DD804(v51, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if ((v49 == 0) == (v50 != 0))
    {
      uint64_t v52 = (void *)REMRemindersListDataView.AssignedModel.assignedSmartList.getter();
      __int16 v53 = v52;
      if (v52) {

      }
      BOOL v54 = v53 != 0;
      uint64_t v55 = v135;
      BOOL *v135 = v54;
      swift_storeEnumTagMultiPayload();
      uint64_t v56 = (uint64_t)v55;
      uint64_t v57 = (uint64_t)v136;
      sub_1000DD79C(v56, (uint64_t)v136, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
      swift_beginAccess();
      sub_1000DD568(v57, v51);
      swift_endAccess();
    }
  }
  else
  {
    sub_1000DD86C((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  }
  uint64_t v58 = REMRemindersListDataView.AssignedModel.assignedSmartList.getter();
  uint64_t v59 = *(void **)(v3 + v44);
  *(void *)(v3 + v44) = v58;

  uint64_t v60 = v153;
  REMRemindersListDataView.AssignedModel.listsModel.getter();
  uint64_t v61 = REMRemindersListDataView.ListsModel.completedRemindersCount.getter();
  char v63 = v62;
  uint64_t v64 = v44;
  __int16 v65 = *(void (**)(uint64_t, uint64_t))(v154 + 8);
  uint64_t v66 = v155;
  v65(v60, v155);
  uint64_t v67 = v3 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_completedRemindersCount;
  *(void *)uint64_t v67 = v61;
  uint64_t v68 = v60;
  *(unsigned char *)(v67 + 8) = v63 & 1;
  REMRemindersListDataView.AssignedModel.listsModel.getter();
  LOBYTE(v61) = REMRemindersListDataView.ListsModel.hasCompletedReminders.getter();
  v65(v60, v66);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_hasCompletedReminders) = v61;
  if ((v141 & 1) == 0)
  {
    v109 = *(void **)(v3 + v64);
    uint64_t v110 = v3;
    if (v109)
    {
      id v111 = [v109 sortingStyle];
      int64_t v112 = v137;
      REMSortingStyle.dataViewSortingStyle.getter();

      uint64_t v114 = (uint64_t)v139;
      uint64_t v113 = v140;
      uint64_t v115 = v112;
      uint64_t v116 = v138;
      (*(void (**)(char *, char *, uint64_t))(v140 + 32))(v139, v115, v138);
    }
    else
    {
      uint64_t v114 = (uint64_t)v139;
      TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
      uint64_t v116 = v138;
      uint64_t v113 = v140;
    }
    sub_10059388C(v114, 1);
    (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v114, v116);
    goto LABEL_44;
  }
  sub_1000DA4EC(v134);
  REMRemindersListDataView.AssignedModel.listsModel.getter();
  uint64_t v69 = REMRemindersListDataView.ListsModel.groups.getter();
  v65(v68, v66);
  *(void *)&v159[0] = _swiftEmptyArrayStorage;
  sub_1004D3A20(0, 0, 0);
  uint64_t v70 = *(void *)&v159[0];
  uint64_t v71 = *(void *)(v69 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v141 = v71;
  uint64_t v128 = v3;
  if (!v71)
  {
LABEL_41:
    swift_bridgeObjectRelease_n();
    uint64_t v117 = v134;
    uint64_t v118 = (uint64_t)v131;
    sub_1000DD804(v134, (uint64_t)v131, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v118, 0, 1, v130);
    uint64_t v119 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v120 = swift_allocObject();
    uint64_t v121 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v122 = (uint64_t)v132;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v132, 1, 1, v121);
    *((void *)&v163 + 1) = v119;
    *(void *)&long long v164 = &off_10074D320;
    v162[0] = v120;
    sub_1000145EC((uint64_t)v162, (uint64_t)v159);
    uint64_t v123 = swift_allocObject();
    *(void *)(v123 + 16) = v70;
    sub_100038ED8(v159, v123 + 24);
    uint64_t v110 = v128;
    *(void *)(v123 + 64) = v128;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10059DBB0(1, v118, (uint64_t (*)(uint64_t))sub_100051174, v123, v133, 0, v122);
    swift_release();
    sub_100038CD8((uint64_t)v162);
    swift_release();
    sub_10003B6F8(v122, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v118, &qword_100786EF0);
    sub_1000DD86C(v117, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
LABEL_44:
    uint64_t v124 = v110 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v125 = *(void *)(v124 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v125 + 104))(4, ObjectType, v125);
      return swift_unknownObjectRelease();
    }
    return result;
  }
  unint64_t v73 = 0;
  uint64_t v138 = v158 + 32;
  v139 = (char *)(v158 + 16);
  v136 = v172;
  v137 = v171;
  v135 = (BOOL *)(v158 + 8);
  uint64_t v140 = v69;
  while (v73 < *(void *)(v69 + 16))
  {
    unint64_t v74 = v69
        + ((*(unsigned __int8 *)(v158 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v158 + 80))
        + *(void *)(v158 + 72) * v73;
    long long v76 = v143;
    uint64_t v75 = v144;
    unsigned __int8 v77 = &v143[*(int *)(v144 + 48)];
    char v78 = *(void (**)(char *, unint64_t, uint64_t))(v158 + 16);
    uint64_t v79 = v158;
    uint64_t v80 = v73;
    uint64_t v81 = v148;
    v78(v77, v74, v148);
    uint64_t v82 = v142;
    char v83 = (char *)v142 + *(int *)(v75 + 48);
    uint64_t v155 = v80;
    uint64_t *v142 = v80;
    uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
    v84(v83, v77, v81);
    uint64_t v85 = (uint64_t)v82;
    uint64_t v86 = v156;
    sub_100028C3C(v85, (uint64_t)v156, &qword_10078B5D0);
    uint64_t v87 = *(int *)(v75 + 48);
    uint64_t v88 = &v76[v87];
    uint64_t v89 = *v86;
    v78(&v76[v87], (unint64_t)v86 + v87, v81);
    uint64_t v90 = v147;
    v84(v147, v88, v81);
    uint64_t v91 = (void *)REMRemindersListDataView.ListsModel.Sublist.listColor.getter();
    type metadata accessor for TTRListColors();
    static TTRListColors.color(for:)();
    long long v153 = v173[1];
    long long v154 = v173[0];
    uint64_t v92 = v174;
    uint64_t v93 = v175;
    char v94 = v176;

    uint64_t v95 = REMRemindersListDataView.ListsModel.Sublist.listName.getter();
    uint64_t v97 = v96;
    if (v89) {
      char v98 = 3;
    }
    else {
      char v98 = 2;
    }
    sub_1000D5984((uint64_t)v173, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    uint64_t *v151 = REMRemindersListDataView.ListsModel.Sublist.listID.getter();
    swift_storeEnumTagMultiPayload();
    v162[0] = v95;
    v162[1] = v97;
    long long v163 = v154;
    long long v164 = v153;
    uint64_t v165 = v92;
    uint64_t v166 = v93;
    uint64_t v99 = v157;
    char v167 = v94;
    __int16 v168 = 0;
    char v169 = 0;
    char v170 = v98;
    v100 = v137;
    *(_WORD *)v137 = v160;
    v100[2] = v161;
    uint64_t v101 = (uint64_t)v136;
    _OWORD *v136 = 0u;
    *(_OWORD *)(v101 + 16) = 0u;
    *(_OWORD *)(v101 + 32) = 0u;
    v172[24] = 255;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v162);
    sub_100028C3C((uint64_t)v162, (uint64_t)v177, (uint64_t *)&unk_10079CA00);
    uint64_t v102 = (uint64_t)v149;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v103 = v150;
    sub_1000DD804(v102, v150, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v104 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter();
    sub_1000D5984((uint64_t)v173, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    sub_1000DD86C(v102, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v90, v81);
    sub_1000DD79C(v103, v99, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v105 = v146;
    *(void *)(v99 + *(int *)(v146 + 20)) = v104;
    *(unsigned char *)(v99 + *(int *)(v105 + 24)) = 0;
    sub_10003B6F8((uint64_t)v156, &qword_10078B5D0);
    uint64_t v70 = *(void *)&v159[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1004D3A20(0, *(void *)(v70 + 16) + 1, 1);
      uint64_t v70 = *(void *)&v159[0];
    }
    unint64_t v107 = *(void *)(v70 + 16);
    unint64_t v106 = *(void *)(v70 + 24);
    uint64_t v69 = v140;
    uint64_t v108 = v155;
    if (v107 >= v106 >> 1)
    {
      sub_1004D3A20(v106 > 1, v107 + 1, 1);
      uint64_t v70 = *(void *)&v159[0];
    }
    unint64_t v73 = v108 + 1;
    *(void *)(v70 + 16) = v107 + 1;
    uint64_t result = sub_1000DD79C(v157, v70+ ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80))+ *(void *)(v145 + 72) * v107, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    if (v141 == v73) {
      goto LABEL_41;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1000DCE74(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1[4];
  sub_100038D28(a1, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  if (v15)
  {
    uint64_t v16 = (void *)v15;
    sub_1000DD804(a2, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1000DD79C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        id v19 = [v16 list];
        id v20 = [v19 remObjectID];

        *uint64_t v6 = v20;
        swift_storeEnumTagMultiPayload();
        char v17 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)();

        sub_1000DD86C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
        sub_1000DD86C((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        break;
      case 0xAu:
      case 0xBu:

        goto LABEL_4;
      default:

        sub_1000DD86C((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_4;
    }
  }
  else
  {
LABEL_4:
    char v17 = 0;
  }
  return v17 & 1;
}

uint64_t sub_1000DD13C()
{
  sub_1000499D4(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t _s9Reminders30DragAndDropPresenterCapabilityCMa_0()
{
  return self;
}

uint64_t sub_1000DD1A0()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1000DD804(v11, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    char v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v5, v1);
    v13(v7, v1);
  }
  return v12 & 1;
}

uint64_t sub_1000DD3A8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v4);
  uint64_t v6 = (id *)((char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000DD804(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    uint64_t v7 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 0, 1, v7);
  }
  else
  {
    sub_1000DD86C((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    uint64_t v9 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
}

void *sub_1000DD508()
{
  return sub_1000DD5CC();
}

uint64_t sub_1000DD510()
{
  return 0;
}

uint64_t sub_1000DD520()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1000DD568(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRListType.SortingCapability();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void *sub_1000DD5CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1000DD86C((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_1000DD79C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1000DD86C((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_1000DD79C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000DD804(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000DD86C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000DD8CC()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1000DD90C@<X0>(void *a1@<X8>)
{
  return sub_1000DAB8C(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1000DD918()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078C248);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078C248);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000DD9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v9, (uint64_t *)&unk_100788DC0);
  uint64_t v10 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.SectionsInsertionRequest(0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v11
      + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___creationTarget;
  *(void *)uint64_t v12 = 0;
  *(unsigned char *)(v12 + 8) = -2;
  *(unsigned char *)(v11
           + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___hasValidInsertionLocation) = 2;
  sub_100028C3C((uint64_t)v9, v11+ OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_parent, (uint64_t *)&unk_100788DC0);
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_childIndex) = a2;
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_dragAndDropCapability) = v3;
  a3[3] = v10;
  a3[4] = (uint64_t)&off_100739F70;
  *a3 = v11;
  return swift_retain();
}

uint64_t sub_1000DDB0C()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_100785268 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100018BF8(v5, (uint64_t)qword_10078C248);
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "Missing TTRRemindersListDragAndDropSectionsPresenterCapabilityDelegate", v8, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v1 = Strong;
  if (!swift_unknownObjectWeakLoadStrong())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_1000DDC50(uint64_t a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_100785268 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10078C248);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Missing TTRRemindersListDragAndDropSectionsPresenterCapabilityDelegate", v10, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v3 = Strong;
  if (!swift_unknownObjectWeakLoadStrong())
  {
    swift_unknownObjectRelease();
    return 0;
  }
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(a1, ObjectType, v4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_1000DDDB8()
{
  uint64_t v1 = OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___hasValidInsertionLocation;
  int v2 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___hasValidInsertionLocation);
  if (v2 == 2)
  {
    char v3 = sub_1000DDEB8(v0);
    *(unsigned char *)(v0 + v1) = v3 & 1;
  }
  else
  {
    char v3 = v2 & 1;
  }
  return v3 & 1;
}

void *sub_1000DDE04()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___creationTarget;
  int v2 = *(void **)(v0
                + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___creationTarget);
  int v3 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___creationTarget
                          + 8);
  uint64_t v4 = v2;
  if (v3 == 254)
  {
    uint64_t v4 = (void *)sub_1000DDC50(v0+ OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_parent);
    uint64_t v5 = *(void **)v1;
    *(void *)uint64_t v1 = v4;
    char v6 = *(unsigned char *)(v1 + 8);
    *(unsigned char *)(v1 + 8) = v7;
    sub_1000DFA7C(v4, v7);
    sub_1000DFA90(v5, v6);
  }
  sub_1000DFAA4(v2, v3);
  return v4;
}

uint64_t sub_1000DDEB8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1000DDE04();
  int v14 = ~v13;
  sub_100095434(v12, v13);
  if (!v14) {
    return 0;
  }
  uint64_t v15 = *(void *)(a1
                  + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_dragAndDropCapability);
  uint64_t result = sub_1000DDB0C();
  if (!result) {
    return result;
  }
  uint64_t v43 = v15;
  uint64_t v44 = v5;
  uint64_t v45 = v3;
  uint64_t v46 = v11;
  uint64_t v18 = *(void *)(result + 24);
  uint64_t v17 = *(void *)(result + 32);
  uint64_t v47 = result;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v48 = v18;
  uint64_t v20 = a1
      + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_parent;
  uint64_t v21 = *(void *)(v17 + 8);
  uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v21 + 24);
  swift_unknownObjectRetain();
  uint64_t v23 = v22(v20, ObjectType, v21);
  swift_unknownObjectRelease();
  uint64_t v24 = *(void *)(a1
                  + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_childIndex);
  if (v24 >= v23)
  {
LABEL_6:
    swift_release();
    return 0;
  }
  uint64_t v25 = *(void *)(v47 + 24);
  uint64_t v26 = *(void *)(v47 + 32);
  uint64_t v42 = swift_getObjectType();
  uint64_t v48 = v25;
  uint64_t v27 = *(void *)(v26 + 8);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 32);
  swift_unknownObjectRetain();
  uint64_t v29 = (uint64_t)v46;
  v28(v24, v20, v42, v27);
  swift_unknownObjectRelease();
  TTRRemindersListViewModel.Item.sectionCasesOnly.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v8, 1, v2) == 1)
  {
    sub_1000DFB20(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_6;
  }
  uint64_t v30 = (uint64_t)v44;
  sub_1000DFB80((uint64_t)v8, (uint64_t)v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  uint64_t v31 = TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
  uint64_t v32 = v31;
  switch(v33)
  {
    case 1:
      swift_release();

      sub_1000DFB20(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000DFB20(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return 1;
    case 2:
      goto LABEL_19;
    case 3:
      swift_release();
      goto LABEL_20;
    default:

      if (!swift_unknownObjectWeakLoadStrong())
      {
        if (qword_100785268 != -1) {
          swift_once();
        }
        uint64_t v38 = type metadata accessor for Logger();
        sub_100018BF8(v38, (uint64_t)qword_10078C248);
        uint64_t v32 = Logger.logObject.getter();
        os_log_type_t v39 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v32, v39))
        {
          uint64_t v40 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v40 = 0;
          _os_log_impl((void *)&_mh_execute_header, v32, v39, "Missing TTRRemindersListDragAndDropSectionsPresenterCapabilityDelegate", v40, 2u);
          swift_slowDealloc();
        }
LABEL_19:
        swift_release();

LABEL_20:
        sub_1000DFB20(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1000DFB20(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return 0;
      }
      uint64_t v34 = (void *)sub_1002AFAB8();
      char v36 = v35;
      int v37 = ~v35;
      swift_release();
      swift_unknownObjectRelease();
      sub_1000DFB20(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000DFB20(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (!v37) {
        return 0;
      }
      sub_100095434(v34, v36);
      uint64_t result = 1;
      break;
  }
  return result;
}

uint64_t sub_1000DE3B0()
{
  sub_10003B6F8(v0+ OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_parent, (uint64_t *)&unk_100788DC0);
  swift_release();
  sub_1000DFA90(*(id *)(v0+ OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___creationTarget), *(unsigned char *)(v0+ OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest____lazy_storage___creationTarget+ 8));

  return swift_deallocClassInstance();
}

void *sub_1000DE444()
{
  uint64_t v1 = *(void **)(v0 + 32);
  uint64_t v2 = *(unsigned __int16 *)(v0 + 40);
  uint64_t v3 = v1;
  if ((v2 & 0xFF00) == 0xFE00)
  {
    uint64_t v3 = (void *)sub_1000DE4DC(v0);
    uint64_t v4 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v3;
    uint64_t v5 = *(unsigned __int16 *)(v0 + 40);
    *(_WORD *)(v0 + 40) = v6;
    sub_1000DFC28(v3, v6);
    sub_1000DFBE8(v4, v5);
  }
  sub_1000DFC50(v1, v2);
  return v3;
}

uint64_t sub_1000DE4DC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_dragAndDropCapability;
  swift_retain();
  uint64_t v14 = sub_1000DDB0C();
  swift_release();
  if (!v14) {
    return 0;
  }
  v40[2] = v13;
  uint64_t v41 = v5;
  uint64_t v42 = v3;
  uint64_t v43 = v2;
  uint64_t v44 = v11;
  uint64_t v16 = *(void *)(v14 + 24);
  uint64_t v15 = *(void *)(v14 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v45 = v16;
  uint64_t v18 = v12
      + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_parent;
  uint64_t v19 = *(void *)(v15 + 8);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 24);
  swift_unknownObjectRetain();
  uint64_t v21 = v20(v18, ObjectType, v19);
  swift_unknownObjectRelease();
  uint64_t v22 = *(void *)(v12
                  + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_childIndex);
  if (v22 >= v21)
  {
LABEL_5:
    swift_release();
    return 0;
  }
  uint64_t v24 = *(void *)(v14 + 24);
  uint64_t v23 = *(void *)(v14 + 32);
  v40[0] = swift_getObjectType();
  v40[1] = v14;
  uint64_t v45 = v24;
  uint64_t v25 = *(void *)(v23 + 8);
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, void, uint64_t))(v25 + 32);
  swift_unknownObjectRetain();
  uint64_t v27 = (uint64_t)v44;
  v26(v22, v18, v40[0], v25);
  swift_unknownObjectRelease();
  TTRRemindersListViewModel.Item.sectionCasesOnly.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v8, 1, v43) == 1)
  {
    sub_1000DFB20(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_5;
  }
  uint64_t v30 = (uint64_t)v41;
  sub_1000DFB80((uint64_t)v8, (uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  uint64_t v31 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
  switch(v32)
  {
    case 1:
      swift_release();

      sub_1000DFB20(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000DFB20(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return 1;
    case 2:
      goto LABEL_19;
    case 3:
      swift_release();
      goto LABEL_20;
    default:
      if (!swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v35 = qword_100785268;
        swift_retain();
        if (v35 != -1) {
          swift_once();
        }
        uint64_t v36 = type metadata accessor for Logger();
        sub_100018BF8(v36, (uint64_t)qword_10078C248);
        int v37 = Logger.logObject.getter();
        os_log_type_t v38 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v37, v38))
        {
          os_log_type_t v39 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)os_log_type_t v39 = 0;
          _os_log_impl((void *)&_mh_execute_header, v37, v38, "Missing TTRRemindersListDragAndDropSectionsPresenterCapabilityDelegate", v39, 2u);
          swift_slowDealloc();
        }
        swift_release();

LABEL_19:
        swift_release();

LABEL_20:
        sub_1000DFB20(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        sub_1000DFB20(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        return 0;
      }
      swift_retain();
      uint64_t v28 = sub_1002AFAB8();
      int v34 = ~v33;
      swift_release();
      swift_release();
      swift_unknownObjectRelease();

      sub_1000DFB20(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1000DFB20(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (!v34) {
        return 0;
      }
      break;
  }
  return v28;
}

uint64_t sub_1000DE9F8(uint64_t a1)
{
  uint64_t v2 = v1;
  if (sub_1000DDDB8())
  {
    uint64_t v4 = swift_allocObject();
    swift_weakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_1000DF8DC;
    *(void *)(v5 + 24) = v4;
    swift_retain();
    uint64_t v6 = sub_100570468(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v8 = *((void *)v6 + 2);
    unint64_t v7 = *((void *)v6 + 3);
    if (v8 >= v7 >> 1) {
      uint64_t v6 = sub_100570468((char *)(v7 > 1), v8 + 1, 1, v6);
    }
    *((void *)v6 + 2) = v8 + 1;
    uint64_t v9 = &v6[16 * v8];
    *((void *)v9 + 4) = sub_1000DF91C;
    *((void *)v9 + 5) = v5;
    swift_release();
  }
  else
  {
    uint64_t v6 = (char *)_swiftEmptyArrayStorage;
  }
  type metadata accessor for TTRProcessMoveSubjects();
  v38[0] = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10003B754(&qword_10078C4C0);
  uint64_t v11 = sub_100037EA0(&qword_10078C4C8, &qword_10078C4C0);
  char v12 = static TTRProcessMoveSubjects.process<A>(moveSubjects:disallowOverride:moveFilters:)();
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + 24) = v12 & 1;
  *(void *)(v2 + 16) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(v2 + 16);
  uint64_t v16 = *(void *)(v15 + 16);
  if (v16)
  {
    v29[2] = v11;
    v29[3] = v10;
    v29[4] = v6;
    uint64_t v30 = v2;
    uint64_t v17 = v15 + 32;
    v29[1] = v15;
    swift_bridgeObjectRetain();
    uint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      sub_10003B694(v17, (uint64_t)v38, &qword_10078C4D0);
      sub_1000145EC((uint64_t)v38, (uint64_t)v31);
      int v19 = v39;
      sub_100038ED8(v31, (uint64_t)&v32);
      if (v19 == 1)
      {
        sub_100038ED8(&v32, (uint64_t)&v35);
      }
      else
      {
        sub_100038CD8((uint64_t)&v32);
        uint64_t v37 = 0;
        long long v35 = 0u;
        long long v36 = 0u;
      }
      sub_10003B6F8((uint64_t)v38, &qword_10078C4D0);
      if (*((void *)&v36 + 1))
      {
        sub_100038ED8(&v35, (uint64_t)v31);
        sub_100038ED8(v31, (uint64_t)&v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = sub_100570324(0, v18[2] + 1, 1, v18);
        }
        unint64_t v21 = v18[2];
        unint64_t v20 = v18[3];
        if (v21 >= v20 >> 1) {
          uint64_t v18 = sub_100570324((void *)(v20 > 1), v21 + 1, 1, v18);
        }
        uint64_t v22 = sub_100038E88((uint64_t)&v35, *((uint64_t *)&v36 + 1));
        __chkstk_darwin(v22);
        uint64_t v24 = (char *)v29 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v25 + 16))(v24);
        uint64_t v33 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(0);
        int v34 = &off_100739FE8;
        uint64_t v26 = sub_1000394A8((uint64_t *)&v32);
        sub_1000DFB80((uint64_t)v24, (uint64_t)v26, type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem);
        void v18[2] = v21 + 1;
        sub_100038ED8(&v32, (uint64_t)&v18[5 * v21 + 4]);
        sub_100038CD8((uint64_t)&v35);
      }
      else
      {
        sub_10003B6F8((uint64_t)&v35, &qword_10078C4D8);
      }
      v17 += 48;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
    uint64_t v2 = v30;
  }
  else
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
  }
  *(void *)(v2 + 56) = v18;
  swift_bridgeObjectRelease();
  if (*(void *)(v2 + 56))
  {
    v38[0] = *(void *)(v2 + 56);
    type metadata accessor for TTRRemindersListViewModel.Item();
    swift_bridgeObjectRetain();
    uint64_t v27 = Sequence.completeCompactMap<A>(_:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = 0;
  }
  *(void *)(v2 + 64) = v27;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000DEED4()
{
  uint64_t v1 = sub_10003B754(&qword_10079C900);
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)v18 - v5;
  unint64_t v7 = sub_1000DE444();
  unsigned __int8 v9 = BYTE1(v8);
  sub_1000DFC00(v7, v8);
  uint64_t v10 = 0;
  if (v9 == 255) {
    return v10;
  }
  uint64_t v11 = *(void *)(v0 + 64);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = *(void *)(v0 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1000DDB0C();
  swift_release();
  if (!v13)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v14 = v12
      + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_parent;
  uint64_t v15 = *(void *)(v12
                  + OBJC_IVAR____TtCC9Reminders54TTRRemindersListDragAndDropSectionsPresenterCapabilityP33_D785A6EAE5278EEAAA813EF6D537F28B24SectionsInsertionRequest_childIndex);
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
  sub_1000DFC68(v14, (uint64_t)v4);
  *(void *)&v4[*(int *)(v1 + 36)] = v15;
  sub_100028C3C((uint64_t)v4, (uint64_t)v6, &qword_10079C900);
  v18[1] = v11;
  sub_10003B754(&qword_10078C4F0);
  sub_10003B754(&qword_10078C4F8);
  sub_100037EA0((unint64_t *)&qword_100791E80, &qword_10078C4F0);
  if (Sequence.completeCompactMap<A>(_:)())
  {
    sub_10003B754(&qword_10078C500);
    sub_100037EA0(&qword_10078C508, &qword_10079C900);
    sub_100037EA0(&qword_10078C510, &qword_10079C900);
    uint64_t v10 = static TTRMutableTreeStorage.steps<A>(forMoving:to:)();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v10 = 0;
  }
  sub_10003B6F8((uint64_t)v6, &qword_10079C900);
  return v10;
}

void *sub_1000DF1B0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (!v1) {
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1000DDE04();
  if (v3 != -1)
  {
    uint64_t v4 = v2;
    char v5 = v3;
    uint64_t v6 = *(void *)(v1 + 16);
    if (v6)
    {
      char v19 = v3;
      uint64_t v7 = v1 + 32;
      swift_bridgeObjectRetain();
      uint64_t v8 = _swiftEmptyArrayStorage;
      do
      {
        sub_1000145EC(v7, (uint64_t)v20);
        unsigned __int8 v9 = sub_100038D28(v20, v20[3]);
        uint64_t v10 = (char *)v9
            + *(int *)(type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(0)
                     + 20);
        id v11 = *(id *)v10;
        char v12 = v10[8];
        id v13 = *(id *)v10;
        sub_100038CD8((uint64_t)v20);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v8 = sub_1005704C4(0, v8[2] + 1, 1, v8);
        }
        unint64_t v15 = v8[2];
        unint64_t v14 = v8[3];
        if (v15 >= v14 >> 1) {
          uint64_t v8 = sub_1005704C4((void *)(v14 > 1), v15 + 1, 1, v8);
        }
        v8[2] = v15 + 1;
        uint64_t v16 = &v8[2 * v15];
        v16[4] = v11;
        *((unsigned char *)v16 + 40) = v12;
        v7 += 40;
        --v6;
      }
      while (v6);
      swift_bridgeObjectRelease_n();
      char v5 = v19;
      if (!v8[2]) {
        goto LABEL_15;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (!_swiftEmptyArrayStorage[2])
      {
LABEL_15:
        swift_bridgeObjectRelease();
        sub_100095434(v4, v5);
        return 0;
      }
    }
    sub_1000DE444();
    if (v17 != 255) {
      return v8;
    }
    goto LABEL_15;
  }
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1000DF3A4(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = (uint64_t)sub_100038D28(a1, a1[3]);
    swift_retain();
    LOBYTE(v3) = sub_1000DF94C(v3);
    swift_release();
    swift_release();
    if (v3) {
      return 0;
    }
    else {
      return 2;
    }
  }
  return result;
}

uint64_t sub_1000DF444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_10003B754(&qword_10078C4E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v17[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v7 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v17[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000145EC(a1, (uint64_t)v17);
  sub_10003B754(&qword_10078C4E8);
  char v11 = swift_dynamicCast();
  char v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
  if (v11)
  {
    v12(v6, 0, 1, v7);
    sub_1000DFB80((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem);
    sub_1000DFAB8((uint64_t)v10, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000DFB20((uint64_t)v10, type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem);
    uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 0, 1, v13);
  }
  else
  {
    v12(v6, 1, 1, v7);
    sub_10003B6F8((uint64_t)v6, &qword_10078C4E0);
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
}

uint64_t sub_1000DF6A0()
{
  swift_bridgeObjectRelease();
  sub_1000DFBE8(*(void **)(v0 + 32), *(unsigned __int16 *)(v0 + 40));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability()
{
  return self;
}

uint64_t sub_1000DF720()
{
  return type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.SectionsInsertionRequest(0);
}

uint64_t type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.SectionsInsertionRequest(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10078C350);
}

void sub_1000DF748()
{
  sub_1000DF808();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1000DF808()
{
  if (!qword_10079BA80)
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10079BA80);
    }
  }
}

uint64_t type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.SectionsInsertionPlan()
{
  return self;
}

uint64_t type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10078C578);
}

uint64_t sub_1000DF8A4()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000DF8DC(void *a1)
{
  return sub_1000DF3A4(a1);
}

uint64_t sub_1000DF8E4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000DF91C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

uint64_t sub_1000DF94C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem(0);
  uint64_t v14 = v2;
  uint64_t v15 = &off_100739FE8;
  uint64_t v3 = sub_1000394A8(v13);
  sub_1000DFAB8(a1, (uint64_t)v3, type metadata accessor for TTRRemindersListDragAndDropSectionsPresenterCapability.MoveSectionSubjectForItem);
  if ((sub_1000DDDB8() & 1) == 0 || (uint64_t v4 = sub_1000DDE04(), v5 == -1))
  {
    char v11 = 0;
  }
  else
  {
    uint64_t v6 = v4;
    char v7 = v5;
    sub_100070654();
    uint64_t v8 = (void *)TTRRemindersListInteractorSectionsCapabilityTarget.objectID.getter();
    id v9 = *(id *)((char *)sub_100038D28(v13, v14) + *(int *)(v2 + 20));
    uint64_t v10 = (void *)TTRSection.parentID.getter();

    char v11 = static NSObject.== infix(_:_:)();
    sub_100095434(v6, v7);
  }
  sub_100038CD8((uint64_t)v13);
  return v11 & 1;
}

id sub_1000DFA7C(id result, char a2)
{
  if (a2 != -1) {
    return result;
  }
  return result;
}

void sub_1000DFA90(id a1, char a2)
{
  if (a2 != 254) {
    sub_100095434(a1, a2);
  }
}

id sub_1000DFAA4(id result, char a2)
{
  if (a2 != 254) {
    return sub_1000DFA7C(result, a2);
  }
  return result;
}

uint64_t sub_1000DFAB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000DFB20(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1000DFB80(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1000DFBE8(void *a1, uint64_t a2)
{
  if ((a2 & 0xFF00) != 0xFE00) {
    sub_1000DFC00(a1, a2);
  }
}

void sub_1000DFC00(void *a1, uint64_t a2)
{
  if (BYTE1(a2) != 255) {
    sub_1000DFC14(a1, a2, BYTE1(a2));
  }
}

void sub_1000DFC14(id a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
}
  }

id sub_1000DFC28(id result, uint64_t a2)
{
  if (BYTE1(a2) != 255) {
    return sub_1000DFC3C(result, a2, BYTE1(a2));
  }
  return result;
}

id sub_1000DFC3C(id result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 1u) {
    return result;
  }
  return result;
}

id sub_1000DFC50(id result, uint64_t a2)
{
  if ((a2 & 0xFF00) != 0xFE00) {
    return sub_1000DFC28(result, a2);
  }
  return result;
}

uint64_t sub_1000DFC68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000DFCD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10045E6BC(a1, a2);
}

void **sub_1000DFCEC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    id v9 = (char *)*a2;
    *a1 = *a2;
    a1 = (void **)&v9[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = a3;
    uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v131 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v56 = *v3;
            *a1 = *v3;
            id v57 = v56;
            goto LABEL_33;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v55 - 8) + 16))(a1, v3, v55);
LABEL_33:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, v3, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        uint64_t v58 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v59 = v58[5];
        uint64_t v60 = (char *)a1 + v59;
        uint64_t v61 = (char *)v3 + v59;
        uint64_t v62 = *(uint64_t *)((char *)v3 + v59 + 8);
        if (v62)
        {
          *(void *)uint64_t v60 = *(void *)v61;
          *((void *)v60 + 1) = v62;
          char v63 = (void *)*((void *)v61 + 2);
          uint64_t v64 = *((void *)v61 + 3);
          uint64_t v65 = *((void *)v61 + 4);
          uint64_t v66 = *((void *)v61 + 5);
          uint64_t v67 = *((void *)v61 + 7);
          uint64_t v124 = *((void *)v61 + 6);
          uint64_t v129 = v3;
          unsigned __int8 v68 = v61[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v63, v64, v65, v66, v124, v67, v68);
          *((void *)v60 + 2) = v63;
          *((void *)v60 + 3) = v64;
          *((void *)v60 + 4) = v65;
          *((void *)v60 + 5) = v66;
          *((void *)v60 + 6) = v124;
          *((void *)v60 + 7) = v67;
          v60[64] = v68;
          *(_DWORD *)(v60 + 65) = *(_DWORD *)(v61 + 65);
          int v69 = v61[120];
          if (v69 == 255)
          {
            long long v70 = *(_OWORD *)(v61 + 88);
            *(_OWORD *)(v60 + 72) = *(_OWORD *)(v61 + 72);
            *(_OWORD *)(v60 + 88) = v70;
            *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
            v60[120] = v61[120];
          }
          else
          {
            char v125 = v69 & 1;
            uint64_t v75 = (void *)*((void *)v61 + 9);
            uint64_t v74 = *((void *)v61 + 10);
            uint64_t v76 = *((void *)v61 + 11);
            uint64_t v77 = *((void *)v61 + 12);
            uint64_t v78 = *((void *)v61 + 13);
            uint64_t v79 = *((void *)v61 + 14);
            sub_10003BED8(v75, v74, v76, v77, v78, v79, v69 & 1);
            *((void *)v60 + 9) = v75;
            *((void *)v60 + 10) = v74;
            *((void *)v60 + 11) = v76;
            *((void *)v60 + 12) = v77;
            *((void *)v60 + 13) = v78;
            *((void *)v60 + 14) = v79;
            v60[120] = v125;
          }
          uint64_t v6 = v131;
          v60[121] = v61[121];
          uint64_t v3 = v129;
        }
        else
        {
          long long v71 = *((_OWORD *)v61 + 5);
          *((_OWORD *)v60 + 4) = *((_OWORD *)v61 + 4);
          *((_OWORD *)v60 + 5) = v71;
          *((_OWORD *)v60 + 6) = *((_OWORD *)v61 + 6);
          *(_OWORD *)(v60 + 106) = *(_OWORD *)(v61 + 106);
          long long v72 = *((_OWORD *)v61 + 1);
          *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
          *((_OWORD *)v60 + 1) = v72;
          long long v73 = *((_OWORD *)v61 + 3);
          *((_OWORD *)v60 + 2) = *((_OWORD *)v61 + 2);
          *((_OWORD *)v60 + 3) = v73;
        }
        *((unsigned char *)a1 + v58[6]) = *((unsigned char *)v3 + v58[6]);
        *((unsigned char *)a1 + v58[7]) = *((unsigned char *)v3 + v58[7]);
        *((unsigned char *)a1 + v58[8]) = *((unsigned char *)v3 + v58[8]);
        *((unsigned char *)a1 + v58[9]) = *((unsigned char *)v3 + v58[9]);
        *((unsigned char *)a1 + v58[10]) = *((unsigned char *)v3 + v58[10]);
        uint64_t v80 = v58[11];
        uint64_t v81 = *(void **)((char *)v3 + v80);
        *(void **)((char *)a1 + v80) = v81;
        id v82 = v81;
        goto LABEL_66;
      case 1u:
        uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v132 = v6;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v84 = *v3;
            *a1 = *v3;
            id v85 = v84;
            goto LABEL_44;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v83 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v83 - 8) + 16))(a1, v3, v83);
LABEL_44:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, v3, *(void *)(*(void *)(v10 - 8) + 64));
            break;
        }
        uint64_t v86 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v87 = v86[5];
        uint64_t v88 = (char *)a1 + v87;
        uint64_t v89 = (char *)v3 + v87;
        uint64_t v90 = *(uint64_t *)((char *)v3 + v87 + 8);
        if (v90)
        {
          uint64_t v130 = v3;
          *(void *)uint64_t v88 = *(void *)v89;
          *((void *)v88 + 1) = v90;
          uint64_t v91 = (void *)*((void *)v89 + 2);
          uint64_t v92 = *((void *)v89 + 3);
          uint64_t v93 = *((void *)v89 + 4);
          uint64_t v94 = *((void *)v89 + 5);
          uint64_t v96 = *((void *)v89 + 6);
          uint64_t v95 = *((void *)v89 + 7);
          unsigned __int8 v126 = v89[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v91, v92, v93, v94, v96, v95, v126);
          *((void *)v88 + 2) = v91;
          *((void *)v88 + 3) = v92;
          *((void *)v88 + 4) = v93;
          *((void *)v88 + 5) = v94;
          *((void *)v88 + 6) = v96;
          *((void *)v88 + 7) = v95;
          v88[64] = v126;
          *(_DWORD *)(v88 + 65) = *(_DWORD *)(v89 + 65);
          int v97 = v89[120];
          if (v97 == 255)
          {
            long long v98 = *(_OWORD *)(v89 + 88);
            *(_OWORD *)(v88 + 72) = *(_OWORD *)(v89 + 72);
            *(_OWORD *)(v88 + 88) = v98;
            *(_OWORD *)(v88 + 104) = *(_OWORD *)(v89 + 104);
            v88[120] = v89[120];
          }
          else
          {
            char v127 = v97 & 1;
            uint64_t v103 = (void *)*((void *)v89 + 9);
            uint64_t v102 = *((void *)v89 + 10);
            uint64_t v104 = *((void *)v89 + 11);
            uint64_t v105 = *((void *)v89 + 12);
            uint64_t v106 = *((void *)v89 + 13);
            uint64_t v107 = *((void *)v89 + 14);
            sub_10003BED8(v103, v102, v104, v105, v106, v107, v97 & 1);
            *((void *)v88 + 9) = v103;
            *((void *)v88 + 10) = v102;
            *((void *)v88 + 11) = v104;
            *((void *)v88 + 12) = v105;
            *((void *)v88 + 13) = v106;
            *((void *)v88 + 14) = v107;
            v88[120] = v127;
          }
          uint64_t v6 = v132;
          v88[121] = v89[121];
          uint64_t v3 = v130;
        }
        else
        {
          long long v99 = *((_OWORD *)v89 + 5);
          *((_OWORD *)v88 + 4) = *((_OWORD *)v89 + 4);
          *((_OWORD *)v88 + 5) = v99;
          *((_OWORD *)v88 + 6) = *((_OWORD *)v89 + 6);
          *(_OWORD *)(v88 + 106) = *(_OWORD *)(v89 + 106);
          long long v100 = *((_OWORD *)v89 + 1);
          *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
          *((_OWORD *)v88 + 1) = v100;
          long long v101 = *((_OWORD *)v89 + 3);
          *((_OWORD *)v88 + 2) = *((_OWORD *)v89 + 2);
          *((_OWORD *)v88 + 3) = v101;
        }
        *((unsigned char *)a1 + v86[6]) = *((unsigned char *)v3 + v86[6]);
        *((unsigned char *)a1 + v86[7]) = *((unsigned char *)v3 + v86[7]);
        *((unsigned char *)a1 + v86[8]) = *((unsigned char *)v3 + v86[8]);
        *((unsigned char *)a1 + v86[9]) = *((unsigned char *)v3 + v86[9]);
        *((unsigned char *)a1 + v86[10]) = *((unsigned char *)v3 + v86[10]);
        uint64_t v108 = v86[11];
        v109 = *(void **)((char *)v3 + v108);
        *(void **)((char *)a1 + v108) = v109;
        id v110 = v109;
        goto LABEL_66;
      case 2u:
        char v11 = *v3;
        *a1 = *v3;
        uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)((char *)a1 + v12);
        uint64_t v14 = (void **)((char *)v3 + v12);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        unsigned __int8 v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v18 = v11;
        if (v17(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            int64_t v112 = *v14;
            *uint64_t v13 = *v14;
            id v113 = v112;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v111 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v111 - 8) + 16))(v13, v14, v111);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 3u:
        char v19 = *v3;
        *a1 = *v3;
        uint64_t v20 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)((char *)a1 + v20);
        uint64_t v14 = (void **)((char *)v3 + v20);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        unint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v22 = v19;
        if (v21(v14, 1, v15)) {
          goto LABEL_11;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v42 = *v14;
            *uint64_t v13 = *v14;
            id v43 = v42;
            goto LABEL_64;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v117 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v117 - 8) + 16))(v13, v14, v117);
LABEL_64:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        goto LABEL_65;
      case 4u:
        uint64_t v23 = *v3;
        *a1 = *v3;
        uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v13 = (void **)((char *)a1 + v24);
        uint64_t v14 = (void **)((char *)v3 + v24);
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v16 = *(void *)(v15 - 8);
        uint64_t v25 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
        id v26 = v23;
        if (v25(v14, 1, v15))
        {
LABEL_11:
          uint64_t v27 = sub_10003B754(&qword_10078C890);
          memcpy(v13, v14, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v115 = *v14;
              *uint64_t v13 = *v14;
              id v116 = v115;
              goto LABEL_61;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v114 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v114 - 8) + 16))(v13, v14, v114);
LABEL_61:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v13, v14, *(void *)(v16 + 64));
              break;
          }
LABEL_65:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
        }
LABEL_66:
        swift_storeEnumTagMultiPayload();
LABEL_67:
        uint64_t v118 = *(int *)(v6 + 20);
        uint64_t v119 = (char *)a1 + v118;
        uint64_t v120 = (char *)v3 + v118;
        uint64_t v121 = *(void **)v120;
        LOBYTE(v120) = v120[8];
        *(void *)uint64_t v119 = v121;
        v119[8] = (char)v120;
        id v122 = v121;
        break;
      case 5u:
        *a1 = *v3;
        *((unsigned char *)a1 + 8) = *((unsigned char *)v3 + 8);
        *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)v3 + 9);
        uint64_t v28 = v3[2];
        a1[2] = v28;
        id v29 = v28;
        goto LABEL_66;
      case 6u:
        uint64_t v37 = *v3;
        *a1 = *v3;
        id v38 = v37;
        goto LABEL_66;
      case 7u:
        uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v31 + 48))(v3, 1, v30))
        {
          uint64_t v32 = sub_10003B754(&qword_10078C518);
          memcpy(a1, v3, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          *a1 = *v3;
          uint64_t v44 = *(int *)(v30 + 20);
          uint64_t v133 = (char *)a1 + v44;
          uint64_t v128 = (char *)v3 + v44;
          uint64_t v45 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v46 = *(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16);
          swift_bridgeObjectRetain();
          v46(v133, v128, v45);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v31 + 56))(a1, 0, 1, v30);
        }
        uint64_t v47 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v48 = (void **)((char *)a1 + v47);
        uint64_t v49 = (void **)((char *)v3 + v47);
        uint64_t v50 = v49[1];
        if (v50)
        {
          *uint64_t v48 = *v49;
          v48[1] = v50;
          uint64_t v51 = (void *)v49[2];
          v48[2] = v51;
          swift_bridgeObjectRetain();
          id v52 = v51;
        }
        else
        {
          *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
          v48[2] = v49[2];
        }
        goto LABEL_66;
      case 8u:
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v40 + 48))(v3, 1, v39))
        {
          uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, v3, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, v3, v53);
          *((unsigned char *)a1 + *(int *)(v39 + 20)) = *((unsigned char *)v3 + *(int *)(v39 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v40 + 56))(a1, 0, 1, v39);
        }
        uint64_t v54 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v54 + 20)) = *(void **)((char *)v3 + *(int *)(v54 + 20));
        goto LABEL_66;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)v3;
        uint64_t v33 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        int v34 = (char *)a1 + v33;
        long long v35 = (char *)v3 + v33;
        uint64_t v36 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_66;
      default:
        memcpy(a1, v3, *(void *)(*(void *)(v7 - 8) + 64));
        goto LABEL_67;
    }
  }
  return a1;
}

void sub_1000E1308(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_23;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_4;
        default:
          goto LABEL_24;
      }
      goto LABEL_24;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_23:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_4:
          uint64_t v4 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          break;
        default:
          break;
      }
LABEL_24:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v18 = a1 + *(int *)(v17 + 20);
      if (*(void *)(v18 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v18 + 16), *(void *)(v18 + 24), *(void *)(v18 + 32), *(void *)(v18 + 40), *(void *)(v18 + 48), *(void *)(v18 + 56), *(unsigned char *)(v18 + 64));
        int v19 = *(unsigned __int8 *)(v18 + 120);
        if (v19 != 255) {
          sub_10003B9C0(*(void **)(v18 + 72), *(void *)(v18 + 80), *(void *)(v18 + 88), *(void *)(v18 + 96), *(void *)(v18 + 104), *(void *)(v18 + 112), v19 & 1);
        }
      }
      id v10 = *(id *)(a1 + *(int *)(v17 + 44));
      goto LABEL_28;
    case 2u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_32;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 3u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_32;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_11;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 4u:

      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_32:
            id v10 = *v5;
            goto LABEL_28;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_11:
            uint64_t v9 = type metadata accessor for Date();
            goto LABEL_21;
          default:
            goto LABEL_29;
        }
      }
      goto LABEL_29;
    case 5u:
      id v10 = *(id *)(a1 + 16);
      goto LABEL_28;
    case 6u:
      id v10 = *(id *)a1;
      goto LABEL_28;
    case 7u:
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(a1, 1, v11))
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = a1 + *(int *)(v11 + 20);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      }
      uint64_t v14 = a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v14 + 8)) {
        goto LABEL_29;
      }
      swift_bridgeObjectRelease();
      id v10 = *(id *)(v14 + 16);
LABEL_28:

LABEL_29:
      uint64_t v20 = *(void **)(a1 + *(int *)(a2 + 20));

      return;
    case 8u:
      uint64_t v15 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(a1, 1, v15))
      {
        uint64_t v16 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
      }
      goto LABEL_29;
    case 9u:
      int v5 = (id *)(a1 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
      uint64_t v9 = type metadata accessor for AnyTip();
LABEL_21:
      (*(void (**)(id *, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
      goto LABEL_29;
    default:
      goto LABEL_29;
  }
}

void **sub_1000E18D8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v122 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v54 = *a2;
          *a1 = *a2;
          id v55 = v54;
          goto LABEL_31;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v53 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
LABEL_31:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v57 = v56[5];
      uint64_t v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = *(uint64_t *)((char *)a2 + v57 + 8);
      if (!v60) {
        goto LABEL_35;
      }
      uint64_t v117 = a1;
      uint64_t v120 = a2;
      *(void *)uint64_t v58 = *(void *)v59;
      *((void *)v58 + 1) = v60;
      uint64_t v61 = (void *)*((void *)v59 + 2);
      uint64_t v62 = *((void *)v59 + 3);
      uint64_t v63 = *((void *)v59 + 4);
      uint64_t v64 = *((void *)v59 + 5);
      uint64_t v65 = *((void *)v59 + 6);
      uint64_t v66 = *((void *)v59 + 7);
      unsigned __int8 v67 = v59[64];
      swift_bridgeObjectRetain();
      sub_100050F84(v61, v62, v63, v64, v65, v66, v67);
      *((void *)v58 + 2) = v61;
      *((void *)v58 + 3) = v62;
      *((void *)v58 + 4) = v63;
      *((void *)v58 + 5) = v64;
      *((void *)v58 + 6) = v65;
      *((void *)v58 + 7) = v66;
      v58[64] = v67;
      *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
      int v68 = v59[120];
      if (v68 == 255)
      {
        long long v69 = *(_OWORD *)(v59 + 88);
        *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
        *(_OWORD *)(v58 + 88) = v69;
        *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
        v58[120] = v59[120];
      }
      else
      {
        long long v73 = (void *)*((void *)v59 + 9);
        uint64_t v74 = *((void *)v59 + 10);
        uint64_t v75 = *((void *)v59 + 11);
        uint64_t v76 = *((void *)v59 + 12);
        uint64_t v77 = *((void *)v59 + 13);
        uint64_t v78 = *((void *)v59 + 14);
        char v79 = v68 & 1;
        sub_10003BED8(v73, v74, v75, v76, v77, v78, v68 & 1);
        *((void *)v58 + 9) = v73;
        *((void *)v58 + 10) = v74;
        *((void *)v58 + 11) = v75;
        *((void *)v58 + 12) = v76;
        *((void *)v58 + 13) = v77;
        *((void *)v58 + 14) = v78;
        v58[120] = v79;
      }
      a3 = v122;
      v58[121] = v59[121];
      a1 = v117;
      a2 = v120;
      goto LABEL_38;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v123 = a3;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v84 = *a2;
          *a1 = *a2;
          id v85 = v84;
          goto LABEL_42;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v83 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v83 - 8) + 16))(a1, a2, v83);
LABEL_42:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
      uint64_t v56 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v86 = v56[5];
      uint64_t v58 = (char *)a1 + v86;
      uint64_t v59 = (char *)a2 + v86;
      uint64_t v87 = *(uint64_t *)((char *)a2 + v86 + 8);
      if (v87)
      {
        uint64_t v118 = a1;
        uint64_t v121 = a2;
        *(void *)uint64_t v58 = *(void *)v59;
        *((void *)v58 + 1) = v87;
        uint64_t v88 = (void *)*((void *)v59 + 2);
        uint64_t v89 = *((void *)v59 + 3);
        uint64_t v90 = *((void *)v59 + 4);
        uint64_t v91 = *((void *)v59 + 5);
        uint64_t v92 = *((void *)v59 + 6);
        uint64_t v93 = *((void *)v59 + 7);
        unsigned __int8 v94 = v59[64];
        swift_bridgeObjectRetain();
        sub_100050F84(v88, v89, v90, v91, v92, v93, v94);
        *((void *)v58 + 2) = v88;
        *((void *)v58 + 3) = v89;
        *((void *)v58 + 4) = v90;
        *((void *)v58 + 5) = v91;
        *((void *)v58 + 6) = v92;
        *((void *)v58 + 7) = v93;
        v58[64] = v94;
        *(_DWORD *)(v58 + 65) = *(_DWORD *)(v59 + 65);
        int v95 = v59[120];
        if (v95 == 255)
        {
          long long v96 = *(_OWORD *)(v59 + 88);
          *(_OWORD *)(v58 + 72) = *(_OWORD *)(v59 + 72);
          *(_OWORD *)(v58 + 88) = v96;
          *(_OWORD *)(v58 + 104) = *(_OWORD *)(v59 + 104);
          v58[120] = v59[120];
        }
        else
        {
          int v97 = (void *)*((void *)v59 + 9);
          uint64_t v98 = *((void *)v59 + 10);
          uint64_t v99 = *((void *)v59 + 11);
          uint64_t v100 = *((void *)v59 + 12);
          uint64_t v101 = *((void *)v59 + 13);
          uint64_t v102 = *((void *)v59 + 14);
          char v103 = v95 & 1;
          sub_10003BED8(v97, v98, v99, v100, v101, v102, v95 & 1);
          *((void *)v58 + 9) = v97;
          *((void *)v58 + 10) = v98;
          *((void *)v58 + 11) = v99;
          *((void *)v58 + 12) = v100;
          *((void *)v58 + 13) = v101;
          *((void *)v58 + 14) = v102;
          v58[120] = v103;
        }
        a3 = v123;
        v58[121] = v59[121];
        a1 = v118;
        a2 = v121;
      }
      else
      {
LABEL_35:
        long long v70 = *((_OWORD *)v59 + 5);
        *((_OWORD *)v58 + 4) = *((_OWORD *)v59 + 4);
        *((_OWORD *)v58 + 5) = v70;
        *((_OWORD *)v58 + 6) = *((_OWORD *)v59 + 6);
        *(_OWORD *)(v58 + 106) = *(_OWORD *)(v59 + 106);
        long long v71 = *((_OWORD *)v59 + 1);
        *(_OWORD *)uint64_t v58 = *(_OWORD *)v59;
        *((_OWORD *)v58 + 1) = v71;
        long long v72 = *((_OWORD *)v59 + 3);
        *((_OWORD *)v58 + 2) = *((_OWORD *)v59 + 2);
        *((_OWORD *)v58 + 3) = v72;
      }
LABEL_38:
      *((unsigned char *)a1 + v56[6]) = *((unsigned char *)a2 + v56[6]);
      *((unsigned char *)a1 + v56[7]) = *((unsigned char *)a2 + v56[7]);
      *((unsigned char *)a1 + v56[8]) = *((unsigned char *)a2 + v56[8]);
      *((unsigned char *)a1 + v56[9]) = *((unsigned char *)a2 + v56[9]);
      *((unsigned char *)a1 + v56[10]) = *((unsigned char *)a2 + v56[10]);
      uint64_t v80 = v56[11];
      uint64_t v81 = *(void **)((char *)a2 + v80);
      *(void **)((char *)a1 + v80) = v81;
      id v82 = v81;
      goto LABEL_63;
    case 2u:
      uint64_t v9 = *a2;
      *a1 = *a2;
      uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v10);
      uint64_t v12 = (void **)((char *)a2 + v10);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v16 = v9;
      if (v15(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v105 = *v12;
          void *v11 = *v12;
          id v106 = v105;
          goto LABEL_52;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v104 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v104 - 8) + 16))(v11, v12, v104);
LABEL_52:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 3u:
      uint64_t v17 = *a2;
      *a1 = *a2;
      uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v18);
      uint64_t v12 = (void **)((char *)a2 + v18);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      int v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v20 = v17;
      if (v19(v12, 1, v13)) {
        goto LABEL_9;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v40 = *v12;
          void *v11 = *v12;
          id v41 = v40;
          goto LABEL_61;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v110 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v110 - 8) + 16))(v11, v12, v110);
LABEL_61:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v11, v12, *(void *)(v14 + 64));
          break;
      }
      goto LABEL_62;
    case 4u:
      unint64_t v21 = *a2;
      *a1 = *a2;
      uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v11 = (void **)((char *)a1 + v22);
      uint64_t v12 = (void **)((char *)a2 + v22);
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
      id v24 = v21;
      if (v23(v12, 1, v13))
      {
LABEL_9:
        uint64_t v25 = sub_10003B754(&qword_10078C890);
        memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v108 = *v12;
            void *v11 = *v12;
            id v109 = v108;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v107 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v107 - 8) + 16))(v11, v12, v107);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
LABEL_62:
        (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      }
LABEL_63:
      swift_storeEnumTagMultiPayload();
LABEL_64:
      uint64_t v111 = *(int *)(a3 + 20);
      int64_t v112 = (char *)a1 + v111;
      id v113 = (char *)a2 + v111;
      uint64_t v114 = *(void **)v113;
      LOBYTE(v113) = v113[8];
      *(void *)int64_t v112 = v114;
      v112[8] = (char)v113;
      id v115 = v114;
      return a1;
    case 5u:
      *a1 = *a2;
      *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
      *(_WORD *)((char *)a1 + 9) = *(_WORD *)((char *)a2 + 9);
      id v26 = a2[2];
      a1[2] = v26;
      id v27 = v26;
      goto LABEL_63;
    case 6u:
      long long v35 = *a2;
      *a1 = *a2;
      id v36 = v35;
      goto LABEL_63;
    case 7u:
      uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v29 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
      {
        uint64_t v30 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v42 = *(int *)(v28 + 20);
        uint64_t v124 = (char *)a1 + v42;
        uint64_t v119 = (char *)a2 + v42;
        uint64_t v43 = type metadata accessor for REMHashtagLabelSpecifier();
        uint64_t v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v124, v119, v43);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
      }
      uint64_t v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v46 = (void **)((char *)a1 + v45);
      uint64_t v47 = (void **)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      if (v48)
      {
        *uint64_t v46 = *v47;
        v46[1] = v48;
        uint64_t v49 = (void *)v47[2];
        _OWORD v46[2] = v49;
        swift_bridgeObjectRetain();
        id v50 = v49;
      }
      else
      {
        *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
        _OWORD v46[2] = v47[2];
      }
      goto LABEL_63;
    case 8u:
      uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v38 = *(void *)(v37 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
      {
        uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
      }
      else
      {
        uint64_t v51 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
        *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
        (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
      }
      uint64_t v52 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void **)((char *)a1 + *(int *)(v52 + 20)) = *(void **)((char *)a2 + *(int *)(v52 + 20));
      goto LABEL_63;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      uint64_t v34 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
      goto LABEL_63;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_64;
  }
}

void **sub_1000E2E78(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000DFB20((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v137 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v52 = *a2;
            *a1 = *a2;
            id v53 = v52;
            goto LABEL_31;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(a1, a2, v51);
LABEL_31:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        uint64_t v54 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v55 = v54[5];
        uint64_t v56 = (char *)a1 + v55;
        uint64_t v57 = (char *)a2 + v55;
        if (*(void **)((char *)a2 + v55 + 8))
        {
          *(void *)uint64_t v56 = *(void *)v57;
          *((void *)v56 + 1) = *((void *)v57 + 1);
          uint64_t v58 = (void *)*((void *)v57 + 2);
          uint64_t v59 = *((void *)v57 + 3);
          uint64_t v60 = *((void *)v57 + 4);
          uint64_t v61 = *((void *)v57 + 5);
          uint64_t v62 = *((void *)v57 + 6);
          uint64_t v134 = *((void *)v57 + 7);
          unsigned __int8 v129 = v57[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v58, v59, v60, v61, v62, v134, v129);
          *((void *)v56 + 2) = v58;
          *((void *)v56 + 3) = v59;
          *((void *)v56 + 4) = v60;
          *((void *)v56 + 5) = v61;
          *((void *)v56 + 6) = v62;
          *((void *)v56 + 7) = v134;
          v56[64] = v129;
          v56[65] = v57[65];
          v56[66] = v57[66];
          v56[67] = v57[67];
          v56[68] = v57[68];
          int v63 = v57[120];
          if (v63 == 255)
          {
            long long v64 = *(_OWORD *)(v57 + 72);
            long long v65 = *(_OWORD *)(v57 + 88);
            long long v66 = *(_OWORD *)(v57 + 104);
            v56[120] = v57[120];
            *(_OWORD *)(v56 + 88) = v65;
            *(_OWORD *)(v56 + 104) = v66;
            *(_OWORD *)(v56 + 72) = v64;
          }
          else
          {
            char v135 = v63 & 1;
            uint64_t v73 = *((void *)v57 + 10);
            uint64_t v130 = (void *)*((void *)v57 + 9);
            uint64_t v74 = *((void *)v57 + 11);
            uint64_t v75 = *((void *)v57 + 12);
            uint64_t v76 = *((void *)v57 + 13);
            uint64_t v77 = *((void *)v57 + 14);
            sub_10003BED8(v130, v73, v74, v75, v76, v77, v63 & 1);
            *((void *)v56 + 9) = v130;
            *((void *)v56 + 10) = v73;
            *((void *)v56 + 11) = v74;
            *((void *)v56 + 12) = v75;
            *((void *)v56 + 13) = v76;
            *((void *)v56 + 14) = v77;
            v56[120] = v135;
          }
          a3 = v137;
          v56[121] = v57[121];
        }
        else
        {
          long long v67 = *(_OWORD *)v57;
          long long v68 = *((_OWORD *)v57 + 1);
          long long v69 = *((_OWORD *)v57 + 3);
          *((_OWORD *)v56 + 2) = *((_OWORD *)v57 + 2);
          *((_OWORD *)v56 + 3) = v69;
          *(_OWORD *)uint64_t v56 = v67;
          *((_OWORD *)v56 + 1) = v68;
          long long v70 = *((_OWORD *)v57 + 4);
          long long v71 = *((_OWORD *)v57 + 5);
          long long v72 = *((_OWORD *)v57 + 6);
          *(_OWORD *)(v56 + 106) = *(_OWORD *)(v57 + 106);
          *((_OWORD *)v56 + 5) = v71;
          *((_OWORD *)v56 + 6) = v72;
          *((_OWORD *)v56 + 4) = v70;
        }
        *((unsigned char *)a1 + v54[6]) = *((unsigned char *)a2 + v54[6]);
        *((unsigned char *)a1 + v54[7]) = *((unsigned char *)a2 + v54[7]);
        *((unsigned char *)a1 + v54[8]) = *((unsigned char *)a2 + v54[8]);
        *((unsigned char *)a1 + v54[9]) = *((unsigned char *)a2 + v54[9]);
        *((unsigned char *)a1 + v54[10]) = *((unsigned char *)a2 + v54[10]);
        uint64_t v78 = v54[11];
        char v79 = *(void **)((char *)a2 + v78);
        *(void **)((char *)a1 + v78) = v79;
        id v80 = v79;
        goto LABEL_65;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v138 = a3;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v82 = *a2;
            *a1 = *a2;
            id v83 = v82;
            goto LABEL_42;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v81 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v81 - 8) + 16))(a1, a2, v81);
LABEL_42:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
        uint64_t v84 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v85 = v84[5];
        uint64_t v86 = (char *)a1 + v85;
        uint64_t v87 = (char *)a2 + v85;
        if (*(void **)((char *)a2 + v85 + 8))
        {
          v136 = v84;
          *(void *)uint64_t v86 = *(void *)v87;
          *((void *)v86 + 1) = *((void *)v87 + 1);
          uint64_t v88 = (void *)*((void *)v87 + 2);
          uint64_t v89 = *((void *)v87 + 3);
          uint64_t v90 = *((void *)v87 + 4);
          uint64_t v91 = *((void *)v87 + 5);
          uint64_t v92 = *((void *)v87 + 6);
          uint64_t v131 = *((void *)v87 + 7);
          unsigned __int8 v93 = v87[64];
          swift_bridgeObjectRetain();
          sub_100050F84(v88, v89, v90, v91, v92, v131, v93);
          *((void *)v86 + 2) = v88;
          *((void *)v86 + 3) = v89;
          *((void *)v86 + 4) = v90;
          *((void *)v86 + 5) = v91;
          *((void *)v86 + 6) = v92;
          *((void *)v86 + 7) = v131;
          v86[64] = v93;
          v86[65] = v87[65];
          v86[66] = v87[66];
          v86[67] = v87[67];
          v86[68] = v87[68];
          int v94 = v87[120];
          if (v94 == 255)
          {
            long long v95 = *(_OWORD *)(v87 + 72);
            long long v96 = *(_OWORD *)(v87 + 88);
            long long v97 = *(_OWORD *)(v87 + 104);
            v86[120] = v87[120];
            *(_OWORD *)(v86 + 88) = v96;
            *(_OWORD *)(v86 + 104) = v97;
            *(_OWORD *)(v86 + 72) = v95;
          }
          else
          {
            char v132 = v94 & 1;
            uint64_t v105 = (void *)*((void *)v87 + 9);
            uint64_t v104 = *((void *)v87 + 10);
            uint64_t v106 = *((void *)v87 + 11);
            uint64_t v107 = *((void *)v87 + 12);
            uint64_t v108 = *((void *)v87 + 13);
            uint64_t v109 = *((void *)v87 + 14);
            sub_10003BED8(v105, v104, v106, v107, v108, v109, v94 & 1);
            *((void *)v86 + 9) = v105;
            *((void *)v86 + 10) = v104;
            *((void *)v86 + 11) = v106;
            *((void *)v86 + 12) = v107;
            *((void *)v86 + 13) = v108;
            *((void *)v86 + 14) = v109;
            v86[120] = v132;
          }
          a3 = v138;
          v86[121] = v87[121];
          uint64_t v84 = v136;
        }
        else
        {
          long long v98 = *(_OWORD *)v87;
          long long v99 = *((_OWORD *)v87 + 1);
          long long v100 = *((_OWORD *)v87 + 3);
          *((_OWORD *)v86 + 2) = *((_OWORD *)v87 + 2);
          *((_OWORD *)v86 + 3) = v100;
          *(_OWORD *)uint64_t v86 = v98;
          *((_OWORD *)v86 + 1) = v99;
          long long v101 = *((_OWORD *)v87 + 4);
          long long v102 = *((_OWORD *)v87 + 5);
          long long v103 = *((_OWORD *)v87 + 6);
          *(_OWORD *)(v86 + 106) = *(_OWORD *)(v87 + 106);
          *((_OWORD *)v86 + 5) = v102;
          *((_OWORD *)v86 + 6) = v103;
          *((_OWORD *)v86 + 4) = v101;
        }
        *((unsigned char *)a1 + v84[6]) = *((unsigned char *)a2 + v84[6]);
        *((unsigned char *)a1 + v84[7]) = *((unsigned char *)a2 + v84[7]);
        *((unsigned char *)a1 + v84[8]) = *((unsigned char *)a2 + v84[8]);
        *((unsigned char *)a1 + v84[9]) = *((unsigned char *)a2 + v84[9]);
        *((unsigned char *)a1 + v84[10]) = *((unsigned char *)a2 + v84[10]);
        uint64_t v110 = v84[11];
        uint64_t v111 = *(void **)((char *)a2 + v110);
        *(void **)((char *)a1 + v110) = v111;
        id v112 = v111;
        goto LABEL_65;
      case 2u:
        uint64_t v9 = *a2;
        *a1 = *a2;
        uint64_t v10 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v10);
        uint64_t v12 = (void **)((char *)a2 + v10);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v15 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v16 = v9;
        if (v15(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v114 = *v12;
            void *v11 = *v12;
            id v115 = v114;
            goto LABEL_53;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v113 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v113 - 8) + 16))(v11, v12, v113);
LABEL_53:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 3u:
        uint64_t v17 = *a2;
        *a1 = *a2;
        uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v18);
        uint64_t v12 = (void **)((char *)a2 + v18);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        int v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v20 = v17;
        if (v19(v12, 1, v13)) {
          goto LABEL_10;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v117 = *v12;
            void *v11 = *v12;
            id v118 = v117;
            goto LABEL_58;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v116 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v116 - 8) + 16))(v11, v12, v116);
LABEL_58:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v11, v12, *(void *)(v14 + 64));
            break;
        }
        goto LABEL_64;
      case 4u:
        unint64_t v21 = *a2;
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v11 = (void **)((char *)a1 + v22);
        uint64_t v12 = (void **)((char *)a2 + v22);
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v14 = *(void *)(v13 - 8);
        uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v14 + 48);
        id v24 = v21;
        if (v23(v12, 1, v13))
        {
LABEL_10:
          uint64_t v25 = sub_10003B754(&qword_10078C890);
          memcpy(v11, v12, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v120 = *v12;
              void *v11 = *v12;
              id v121 = v120;
              goto LABEL_63;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v119 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v119 - 8) + 16))(v11, v12, v119);
LABEL_63:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v11, v12, *(void *)(v14 + 64));
              break;
          }
LABEL_64:
          (*(void (**)(void **, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
        }
LABEL_65:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *a1 = *a2;
        *((unsigned char *)a1 + 8) = *((unsigned char *)a2 + 8);
        *((unsigned char *)a1 + 9) = *((unsigned char *)a2 + 9);
        *((unsigned char *)a1 + 10) = *((unsigned char *)a2 + 10);
        id v26 = a2[2];
        a1[2] = v26;
        id v27 = v26;
        goto LABEL_65;
      case 6u:
        long long v35 = *a2;
        *a1 = *a2;
        id v36 = v35;
        goto LABEL_65;
      case 7u:
        uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v29 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48))(a2, 1, v28))
        {
          uint64_t v30 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v30 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v40 = *(int *)(v28 + 20);
          v139 = (char *)a1 + v40;
          uint64_t v133 = (char *)a2 + v40;
          uint64_t v41 = type metadata accessor for REMHashtagLabelSpecifier();
          uint64_t v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
          swift_bridgeObjectRetain();
          v42(v139, v133, v41);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v29 + 56))(a1, 0, 1, v28);
        }
        uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v44 = (void **)((char *)a1 + v43);
        uint64_t v45 = (void **)((char *)a2 + v43);
        if (v45[1])
        {
          void *v44 = *v45;
          v44[1] = v45[1];
          uint64_t v46 = (void *)v45[2];
          v44[2] = v46;
          swift_bridgeObjectRetain();
          id v47 = v46;
        }
        else
        {
          long long v48 = *(_OWORD *)v45;
          v44[2] = v45[2];
          *(_OWORD *)uint64_t v44 = v48;
        }
        goto LABEL_65;
      case 8u:
        uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v38 = *(void *)(v37 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48))(a2, 1, v37))
        {
          uint64_t v39 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v39 - 8) + 64));
        }
        else
        {
          uint64_t v49 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          *((unsigned char *)a1 + *(int *)(v37 + 20)) = *((unsigned char *)a2 + *(int *)(v37 + 20));
          (*(void (**)(void **, void, uint64_t, uint64_t))(v38 + 56))(a1, 0, 1, v37);
        }
        uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void **)((char *)a1 + *(int *)(v50 + 20)) = *(void **)((char *)a2 + *(int *)(v50 + 20));
        goto LABEL_65;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        uint64_t v34 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_65;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v122 = *(int *)(a3 + 20);
  uint64_t v123 = (char *)a1 + v122;
  uint64_t v124 = (char *)a2 + v122;
  char v125 = *(void **)v124;
  LOBYTE(v124) = v124[8];
  unsigned __int8 v126 = *(void **)v123;
  *(void *)uint64_t v123 = v125;
  v123[8] = (char)v124;
  id v127 = v125;

  return a1;
}

void *sub_1000E44B0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v36 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      goto LABEL_25;
    case 1u:
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v45 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
LABEL_25:
      uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v38 = v37[5];
      uint64_t v39 = (_OWORD *)((char *)a1 + v38);
      uint64_t v40 = (_OWORD *)((char *)a2 + v38);
      long long v41 = v40[3];
      v39[2] = v40[2];
      v39[3] = v41;
      long long v42 = v40[1];
      *uint64_t v39 = *v40;
      v39[1] = v42;
      *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
      long long v43 = v40[6];
      long long v44 = v40[4];
      v39[5] = v40[5];
      v39[6] = v43;
      v39[4] = v44;
      *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
      *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
      *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
      *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
      *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
      *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
      goto LABEL_38;
    case 2u:
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v46 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 3u:
      *a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v14;
      uint64_t v11 = (char *)a2 + v14;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
        goto LABEL_7;
      }
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      goto LABEL_37;
    case 4u:
      *a1 = *a2;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v10 = (char *)a1 + v16;
      uint64_t v11 = (char *)a2 + v16;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
LABEL_7:
        uint64_t v15 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v48 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
LABEL_37:
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
LABEL_38:
      swift_storeEnumTagMultiPayload();
LABEL_39:
      uint64_t v49 = *(int *)(a3 + 20);
      uint64_t v50 = (char *)a1 + v49;
      uint64_t v51 = (char *)a2 + v49;
      *(void *)uint64_t v50 = *(void *)v51;
      v50[8] = v51[8];
      return a1;
    case 7u:
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C518);
        memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        uint64_t v27 = *(int *)(v17 + 20);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
      }
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      uint64_t v32 = (char *)a1 + v31;
      uint64_t v33 = (char *)a2 + v31;
      *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
      *((void *)v32 + 2) = *((void *)v33 + 2);
      goto LABEL_38;
    case 8u:
      uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v21 = *(void *)(v20 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
      {
        uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        uint64_t v34 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
        *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
        (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
      }
      uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
      *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
      goto LABEL_38;
    case 9u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
      id v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      uint64_t v26 = type metadata accessor for AnyTip();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
      goto LABEL_38;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_39;
  }
}

void *sub_1000E55A8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000DFB20((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(a1, a2, v36);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
            break;
        }
        goto LABEL_26;
      case 1u:
        uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v45 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v45 - 8) + 32))(a1, a2, v45);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
            break;
        }
LABEL_26:
        uint64_t v37 = (int *)type metadata accessor for TTRRemindersListViewModel.SectionHeader();
        uint64_t v38 = v37[5];
        uint64_t v39 = (_OWORD *)((char *)a1 + v38);
        uint64_t v40 = (_OWORD *)((char *)a2 + v38);
        long long v41 = v40[3];
        v39[2] = v40[2];
        v39[3] = v41;
        long long v42 = v40[1];
        *uint64_t v39 = *v40;
        v39[1] = v42;
        *(_OWORD *)((char *)v39 + 106) = *(_OWORD *)((char *)v40 + 106);
        long long v43 = v40[6];
        long long v44 = v40[4];
        v39[5] = v40[5];
        v39[6] = v43;
        v39[4] = v44;
        *((unsigned char *)a1 + v37[6]) = *((unsigned char *)a2 + v37[6]);
        *((unsigned char *)a1 + v37[7]) = *((unsigned char *)a2 + v37[7]);
        *((unsigned char *)a1 + v37[8]) = *((unsigned char *)a2 + v37[8]);
        *((unsigned char *)a1 + v37[9]) = *((unsigned char *)a2 + v37[9]);
        *((unsigned char *)a1 + v37[10]) = *((unsigned char *)a2 + v37[10]);
        *(void *)((char *)a1 + v37[11]) = *(void *)((char *)a2 + v37[11]);
        goto LABEL_39;
      case 2u:
        *a1 = *a2;
        uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v46 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v10, v11, v46);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 3u:
        *a1 = *a2;
        uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v14;
        uint64_t v11 = (char *)a2 + v14;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
          goto LABEL_8;
        }
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v10, v11, v47);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        goto LABEL_38;
      case 4u:
        *a1 = *a2;
        uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v10 = (char *)a1 + v16;
        uint64_t v11 = (char *)a2 + v16;
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v13 = *(void *)(v12 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
        {
LABEL_8:
          uint64_t v15 = sub_10003B754(&qword_10078C890);
          memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v48 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v10, v11, v48);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v10, v11, *(void *)(v13 + 64));
              break;
          }
LABEL_38:
          (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
        }
LABEL_39:
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
        uint64_t v18 = *(void *)(v17 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v18 + 48))(a2, 1, v17))
        {
          uint64_t v19 = sub_10003B754(&qword_10078C518);
          memcpy(a1, a2, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          *a1 = *a2;
          uint64_t v27 = *(int *)(v17 + 20);
          uint64_t v28 = (char *)a1 + v27;
          uint64_t v29 = (char *)a2 + v27;
          uint64_t v30 = type metadata accessor for REMHashtagLabelSpecifier();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56))(a1, 0, 1, v17);
        }
        uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
        uint64_t v32 = (char *)a1 + v31;
        uint64_t v33 = (char *)a2 + v31;
        *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
        *((void *)v32 + 2) = *((void *)v33 + 2);
        goto LABEL_39;
      case 8u:
        uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v21 + 48))(a2, 1, v20))
        {
          uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(a1, a2, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          uint64_t v34 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v34 - 8) + 32))(a1, a2, v34);
          *((unsigned char *)a1 + *(int *)(v20 + 20)) = *((unsigned char *)a2 + *(int *)(v20 + 20));
          (*(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56))(a1, 0, 1, v20);
        }
        uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData();
        *(void *)((char *)a1 + *(int *)(v35 + 20)) = *(void *)((char *)a2 + *(int *)(v35 + 20));
        goto LABEL_39;
      case 9u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v23 = *(int *)(type metadata accessor for TTRRemindersListTips() + 20);
        id v24 = (char *)a1 + v23;
        uint64_t v25 = (char *)a2 + v23;
        uint64_t v26 = type metadata accessor for AnyTip();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
        goto LABEL_39;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v49 = *(int *)(a3 + 20);
  uint64_t v50 = (char *)a1 + v49;
  uint64_t v51 = (char *)a2 + v49;
  uint64_t v52 = *(void *)v51;
  LOBYTE(v51) = v51[8];
  id v53 = *(void **)v50;
  *(void *)uint64_t v50 = v52;
  v50[8] = (char)v51;

  return a1;
}

uint64_t sub_1000E66CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000E66E0);
}

uint64_t sub_1000E66E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 2) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1000E67A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000E67B4);
}

uint64_t sub_1000E67B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_1000E6874()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.Item();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1000E6908(uint64_t a1, void *a2, void *a3)
{
  sub_10003B754(&qword_100793B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v6 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  *(void *)(inited + 40) = a2;
  *(void *)(inited + 64) = v6;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  *(void *)(inited + 104) = sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  *(void *)(inited + 80) = a3;
  uint64_t v7 = NSFontAttributeName;
  id v8 = a2;
  uint64_t v9 = NSForegroundColorAttributeName;
  id v10 = a3;
  unint64_t v11 = sub_100421E1C(inited);
  NSMutableAttributedString.formatHashtags(with:)((Swift::OpaquePointer)v11);
  return swift_bridgeObjectRelease();
}

void sub_1000E69F0(int a1, Swift::String placeholder, UIImage with)
{
}

id sub_1000E6A20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v8 = [a1 mutableString];
  NSString v9 = String._bridgeToObjectiveC()();
  NSString v10 = String._bridgeToObjectiveC()();
  [v8 replaceOccurrencesOfString:v9 withString:v10];

  id result = [a1 string];
  if (result)
  {
    uint64_t v12 = result;
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v12 rangeOfString:v13];
    uint64_t v16 = v15;

    id result = (id)NSNotFound.getter();
    if (v14 != result)
    {
      NSString v17 = String._bridgeToObjectiveC()();
      [a1 addAttribute:NSLinkAttributeName value:v17 range:v14];

      return [a1 addAttribute:NSForegroundColorAttributeName value:a6 range:v14];
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t destroy for TextViewAction(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextViewAction(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextViewAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for TTRRemindersListReminderActionTarget(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TextViewAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  uint64_t v5 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextViewAction(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextViewAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextViewAction()
{
  return &type metadata for TextViewAction;
}

uint64_t getEnumTagSinglePayload for TTRRemindersListEditingSessionState.SaveState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlaceholderType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1000E6F00);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlaceholderType()
{
  return &type metadata for PlaceholderType;
}

unint64_t sub_1000E6F3C()
{
  unint64_t result = qword_10078C5B0[0];
  if (!qword_10078C5B0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_10078C5B0);
  }
  return result;
}

uint64_t sub_1000E6F90(uint64_t a1, uint64_t a2)
{
  uint64_t v288 = a2;
  uint64_t v4 = swift_isaMask & *v2;
  uint64_t v5 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v283 = (uint64_t)&v275 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v285 = (uint64_t)&v275 - v8;
  __chkstk_darwin(v9);
  uint64_t v284 = (uint64_t)&v275 - v10;
  __chkstk_darwin(v11);
  uint64_t v286 = (uint64_t)&v275 - v12;
  uint64_t v13 = *(void *)(v4 + 88);
  v325 = v2;
  uint64_t v14 = *(void *)(v4 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v315 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  v293 = (char *)&v275 - v16;
  uint64_t v321 = v17;
  uint64_t v18 = type metadata accessor for Optional();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v302 = *(void *)(TupleTypeMetadata2 - 8);
  __chkstk_darwin(TupleTypeMetadata2);
  v296 = (char *)&v275 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v305 = (char *)&v275 - v21;
  uint64_t v318 = v18;
  uint64_t v314 = *(void *)(v18 - 8);
  __chkstk_darwin(v22);
  v291 = (char *)&v275 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v306 = (char *)&v275 - v25;
  __chkstk_darwin(v26);
  v303 = (char *)&v275 - v27;
  __chkstk_darwin(v28);
  v294 = (char *)&v275 - v29;
  __chkstk_darwin(v30);
  v313 = (char *)&v275 - v31;
  __chkstk_darwin(v32);
  v320 = (void (*)(char *, uint64_t))((char *)&v275 - v33);
  uint64_t updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.Hit();
  uint64_t v311 = *(void *)(updated - 8);
  __chkstk_darwin(updated);
  uint64_t v310 = (uint64_t)&v275 - v34;
  v308 = (void *)swift_getTupleTypeMetadata2();
  uint64_t v301 = type metadata accessor for Optional();
  v300 = *(void (***)(char *, uint64_t))(v301 - 8);
  __chkstk_darwin(v301);
  v307 = (char *)&v275 - v35;
  uint64_t v299 = swift_getTupleTypeMetadata2();
  __chkstk_darwin(v299);
  v298 = (char *)&v275 - v36;
  uint64_t v37 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v37 - 8);
  v309 = (char *)&v275 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Optional();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v326 = v39;
  uint64_t v327 = v40;
  __chkstk_darwin(v39);
  v292 = (char *)&v275 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  v290 = (char *)&v275 - v43;
  __chkstk_darwin(v44);
  v304 = (char *)&v275 - v45;
  __chkstk_darwin(v46);
  v317 = (char *)&v275 - v47;
  __chkstk_darwin(v48);
  v322 = (char *)&v275 - v49;
  __chkstk_darwin(v50);
  uint64_t v323 = (uint64_t)&v275 - v51;
  __chkstk_darwin(v52);
  uint64_t v54 = (char *)&v275 - v53;
  uint64_t v328 = *(void *)(v14 - 8);
  __chkstk_darwin(v55);
  v287 = (char *)&v275 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v57);
  v289 = (char *)&v275 - v58;
  __chkstk_darwin(v59);
  v295 = (char *)&v275 - v60;
  __chkstk_darwin(v61);
  v297 = (char *)&v275 - v62;
  __chkstk_darwin(v63);
  v324 = (char *)&v275 - v64;
  uint64_t v329 = v14;
  uint64_t v316 = v13;
  uint64_t v65 = type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult();
  uint64_t v66 = type metadata accessor for Optional();
  uint64_t v67 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  long long v69 = (char *)&v275 - v68;
  uint64_t v70 = *(void *)(v65 - 8);
  __chkstk_darwin(v71);
  uint64_t v73 = (char *)&v275 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v74);
  uint64_t v76 = (char *)&v275 - v75;
  uint64_t v77 = a1 + *(void *)(*(void *)a1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v69, v77, v66);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v69, 1, v65) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v69, v66);
  }
  (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v76, v69, v65);
  char v79 = sub_100145278();
  if (v80)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v76, v65);
  }
  uint64_t v281 = v70;
  uint64_t v282 = v65;
  v330 = v79;
  uint64_t v81 = v329;
  type metadata accessor for Array();
  swift_getWitnessTable();
  Collection.first.getter();
  swift_bridgeObjectRelease();
  uint64_t v82 = v328;
  uint64_t v84 = v328 + 48;
  id v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v328 + 48);
  if (v83(v54, 1, v81) == 1)
  {
    (*(void (**)(char *, uint64_t))(v281 + 8))(v76, v282);
    return (*(uint64_t (**)(char *, uint64_t))(v327 + 8))(v54, v326);
  }
  v280 = (uint64_t (*)(char *, uint64_t, uint64_t))v83;
  uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v82 + 32);
  uint64_t v86 = (uint64_t)v324;
  uint64_t v279 = v82 + 32;
  v278 = v85;
  v85(v324, v54, v81);
  uint64_t v87 = (void *)sub_1000E9400();
  uint64_t v277 = sub_10054FF10(v86);
  char v89 = v88;

  if (v89) {
    goto LABEL_14;
  }
  uint64_t v90 = (void *)sub_1000E9400();
  sub_10054FE98(v86, v323);

  (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v73, v76, v282);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
LABEL_13:
      (*(void (**)(uint64_t, uint64_t))(v327 + 8))(v323, v326);
LABEL_14:
      (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v86, v81);
      return (*(uint64_t (**)(char *, uint64_t))(v281 + 8))(v76, v282);
    }
    uint64_t v276 = v84;
    uint64_t v92 = (uint64_t)v309;
    sub_1000E9FA0((uint64_t)v73, (uint64_t)v309);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (!result) {
      goto LABEL_108;
    }
    unsigned __int8 v93 = (void *)result;
    int v94 = sub_100145278();
    long long v96 = v307;
    sub_10011964C((uint64_t)v94, v95 & 1, v92, v307);

    swift_bridgeObjectRelease();
    sub_10006A5D4(v92);
    long long v97 = v308;
    if ((*(unsigned int (**)(char *, uint64_t, void *))(*(v308 - 1) + 48))(v96, 1, v308) == 1)
    {
      v300[1](v96, v301);
      goto LABEL_13;
    }
    v309 = v76;
    uint64_t v106 = *(void *)&v96[*((int *)v97 + 12)];
    uint64_t v107 = v299;
    uint64_t v108 = *(int *)(v299 + 48);
    uint64_t v109 = v298;
    uint64_t v110 = v278;
    v278(v298, v96, v81);
    *(void *)&v109[v108] = v106;
    uint64_t v311 = *(void *)&v109[*(int *)(v107 + 48)];
    uint64_t v111 = v297;
    v110(v297, v109, v81);
    id v112 = v322;
    v110(v322, v111, v81);
    uint64_t v105 = v112;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v112, 0, 1, v81);
    LODWORD(updated) = 0;
    uint64_t v103 = v326;
    uint64_t v104 = v327;
    uint64_t v101 = (uint64_t)v317;
  }
  else
  {
    uint64_t v276 = v84;
    v309 = v76;
    uint64_t v98 = v311;
    uint64_t v99 = v310;
    uint64_t v100 = updated;
    (*(void (**)(uint64_t, char *, uint64_t))(v311 + 32))(v310, v73, updated);
    uint64_t v101 = (uint64_t)v317;
    (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v317, v99 + *(int *)(v100 + 36), v81);
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v99, v100);
    long long v102 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56);
    LODWORD(updated) = 1;
    v102(v101, 0, 1, v81);
    uint64_t v103 = v326;
    uint64_t v104 = v327;
    uint64_t v105 = v322;
    (*(void (**)(char *, uint64_t, uint64_t))(v327 + 32))(v322, v101, v326);
    uint64_t v311 = 0;
  }
  uint64_t v113 = (void *)sub_1000E9400();
  uint64_t v114 = v104 + 16;
  id v115 = *(void (***)(char *, uint64_t))(v104 + 16);
  ((void (*)(uint64_t, char *, uint64_t))v115)(v101, v105, v103);
  uint64_t v310 = sub_10054FFA8(v101);
  char v117 = v116;

  uint64_t v120 = *(void (**)(uint64_t, uint64_t))(v104 + 8);
  uint64_t v119 = v104 + 8;
  id v118 = v120;
  v120(v101, v103);
  uint64_t v121 = v103;
  if (v117)
  {
    v118(v323, v103);
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v86, v81);
    (*(void (**)(char *, uint64_t))(v281 + 8))(v309, v282);
    return ((uint64_t (*)(char *, uint64_t))v118)(v322, v103);
  }
  uint64_t v122 = (void (*)(char *, uint64_t))v118;
  uint64_t v123 = v304;
  ((void (*)(char *, uint64_t, uint64_t))v115)(v304, v323, v121);
  int v124 = v280(v123, 1, v81);
  uint64_t v301 = v114;
  v300 = v115;
  if (v124 == 1)
  {
    v122(v123, v121);
    uint64_t v125 = v315;
    unsigned __int8 v126 = *(void (**)(void (*)(void, void), uint64_t, uint64_t, uint64_t))(v315 + 56);
    id v127 = v320;
    uint64_t v128 = 1;
  }
  else
  {
    unsigned __int8 v129 = v320;
    (*(void (**)(uint64_t))(v316 + 24))(v81);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v123, v81);
    uint64_t v125 = v315;
    unsigned __int8 v126 = *(void (**)(void (*)(void, void), uint64_t, uint64_t, uint64_t))(v315 + 56);
    id v127 = v129;
    uint64_t v128 = 0;
  }
  uint64_t v130 = v321;
  v126((void (*)(void, void))v127, v128, 1, v321);
  uint64_t v131 = v313;
  v308 = v122;
  uint64_t v327 = v119;
  uint64_t v132 = 1;
  uint64_t v133 = v322;
  if (!v280(v322, 1, v81))
  {
    uint64_t v134 = v295;
    (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v295, v133, v81);
    (*(void (**)(uint64_t))(v316 + 24))(v81);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v134, v81);
    uint64_t v132 = 0;
  }
  uint64_t v299 = (uint64_t)v126;
  v304 = (char *)(v125 + 56);
  v126((void (*)(void, void))v131, v132, 1, v130);
  char v135 = (char *)v320;
  v136 = v305;
  uint64_t v137 = &v305[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v138 = v314;
  uint64_t v140 = (char *)(v314 + 16);
  v139 = *(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v314 + 16);
  uint64_t v141 = v318;
  v139(v305, v320, v318);
  v307 = v137;
  v139(v137, (void (*)(char *, uint64_t))v131, v141);
  v143 = (char *)(v125 + 48);
  v142 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48);
  unsigned int v144 = v142(v136, 1, v130);
  v298 = (char *)v139;
  if (v144 == 1)
  {
    v313 = v140;
    uint64_t v145 = *(void (**)(char *, uint64_t))(v138 + 8);
    v145(v131, v141);
    v145(v135, v141);
    if (v142(v307, 1, v321) == 1)
    {
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v145)(v136, v141);
      goto LABEL_40;
    }
    v320 = v145;
    v275 = (uint64_t (*)(char *, uint64_t, uint64_t))v142;
    v297 = v143;
    goto LABEL_30;
  }
  uint64_t v146 = v138;
  v147 = v294;
  v139(v294, (void (*)(char *, uint64_t))v136, v141);
  uint64_t v148 = v307;
  v297 = v143;
  v275 = (uint64_t (*)(char *, uint64_t, uint64_t))v142;
  if (v142(v307, 1, v321) == 1)
  {
    v149 = *(void (**)(char *, uint64_t))(v146 + 8);
    v149(v313, v141);
    uint64_t v150 = (char *)v320;
    v320 = v149;
    v149(v150, v141);
    (*(void (**)(char *, uint64_t))(v315 + 8))(v147, v321);
LABEL_30:
    (*(void (**)(char *, uint64_t))(v302 + 8))(v136, TupleTypeMetadata2);
    uint64_t v151 = v276;
    goto LABEL_31;
  }
  v178 = v147;
  uint64_t v179 = v315;
  v180 = v293;
  uint64_t v181 = v321;
  (*(void (**)(char *, char *, uint64_t))(v315 + 32))(v293, v148, v321);
  swift_getAssociatedConformanceWitness();
  char v182 = dispatch thunk of static Equatable.== infix(_:_:)();
  v183 = *(void (**)(char *, uint64_t))(v179 + 8);
  v183(v180, v181);
  v184 = *(void (**)(char *, uint64_t))(v146 + 8);
  v184(v313, v318);
  v184((char *)v320, v318);
  v183(v178, v181);
  v320 = v184;
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v184)(v136, v318);
  uint64_t v151 = v276;
  if (v182)
  {
LABEL_40:
    if (updated)
    {
      uint64_t v185 = v326;
      v186 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v326);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v324, v329);
      (*(void (**)(char *, uint64_t))(v281 + 8))(v309, v282);
      return v186(v322, v185);
    }
    uint64_t v187 = v329;
    uint64_t v171 = v326;
    uint64_t v188 = v282;
    v189 = v324;
    if (v277 == v311)
    {
      sub_1000E944C(0, 0, 0xFFu);
      v190 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v189, v187);
LABEL_102:
      uint64_t v201 = (uint64_t)v309;
LABEL_103:
      (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v201, v188);
      return v190(v322, v171);
    }
    uint64_t v207 = v311 - 1;
    if (!__OFSUB__(v311, 1))
    {
      uint64_t v208 = (uint64_t)v317;
      v209 = v322;
      v210 = v300;
      ((void (*)(char *, char *, uint64_t))v300)(v317, v322, v326);
      sub_1000E95D0(v207, v208);
      uint64_t v212 = v211;
      unint64_t v214 = v213;
      v215 = (void (*)(uint64_t, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v208, v171);
      if (v214) {
        uint64_t v216 = v212;
      }
      else {
        uint64_t v216 = 0;
      }
      uint64_t v321 = v216;
      if (v214) {
        unint64_t v217 = v214;
      }
      else {
        unint64_t v217 = 0xE000000000000000;
      }
      ((void (*)(uint64_t, char *, uint64_t))v210)(v208, v209, v171);
      uint64_t v218 = v311;
      sub_1000E95D0(v311, v208);
      uint64_t v220 = v219;
      unint64_t v222 = v221;
      v215(v208, v171);
      if (v222) {
        uint64_t v223 = v220;
      }
      else {
        uint64_t v223 = 0;
      }
      if (v222) {
        unint64_t v224 = v222;
      }
      else {
        unint64_t v224 = 0xE000000000000000;
      }
      if (v218 >= v277)
      {
        uint64_t v227 = v329;
        unint64_t v250 = v217;
        uint64_t v251 = v321;
        if (v321 || v250 != 0xE000000000000000)
        {
          unsigned __int8 v225 = 0;
          uint64_t v226 = v224;
          if ((_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
          {
            unsigned __int8 v225 = 1;
            uint64_t v223 = v251;
            uint64_t v226 = v250;
          }
        }
        else
        {
          unsigned __int8 v225 = 0;
          uint64_t v226 = v224;
        }
      }
      else
      {
        unsigned __int8 v225 = 0;
        uint64_t v226 = v224;
        uint64_t v227 = v329;
      }
      sub_1000E9F98();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000E944C(v223, v226, v225);
      sub_1000E9ED0();
      v190 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v324, v227);
LABEL_92:
      uint64_t v188 = v282;
      goto LABEL_102;
    }
    goto LABEL_107;
  }
LABEL_31:
  uint64_t v152 = *(void (**)(uint64_t))(v316 + 24);
  long long v153 = v303;
  uint64_t v154 = v329;
  v152(v329);
  uint64_t v155 = 1;
  uint64_t v156 = v321;
  uint64_t v157 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v299;
  ((void (*)(char *, void, uint64_t, uint64_t))v299)(v153, 0, 1, v321);
  uint64_t v276 = v151;
  if (!v280(v322, 1, v154))
  {
    uint64_t v159 = v328;
    uint64_t v158 = v329;
    __int16 v160 = v295;
    (*(void (**)(char *, char *, uint64_t))(v328 + 16))(v295, v322, v329);
    ((void (*)(uint64_t, uint64_t))v152)(v158, v316);
    (*(void (**)(char *, uint64_t))(v159 + 8))(v160, v158);
    uint64_t v155 = 0;
  }
  char v161 = v306;
  v157(v306, v155, 1, v156);
  uint64_t v162 = v318;
  long long v163 = v296;
  long long v164 = &v296[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v165 = (void (*)(char *, char *, uint64_t))v298;
  ((void (*)(char *, char *, uint64_t))v298)(v296, v153, v318);
  uint64_t v166 = v164;
  v165(v164, v161, v162);
  char v167 = v275;
  if (v275(v163, 1, v156) == 1)
  {
    __int16 v168 = v320;
    v320(v161, v162);
    v168(v153, v162);
    int v169 = v167(v166, 1, v156);
    char v170 = v168;
    uint64_t v171 = v326;
    v172 = v325;
    if (v169 == 1)
    {
      v170(v163, v162);
LABEL_45:
      sub_1000E944C(0, 0, 0xFFu);
      v197 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v324, v329);
      (*(void (**)(char *, uint64_t))(v281 + 8))(v309, v282);
      return v197(v322, v171);
    }
    goto LABEL_38;
  }
  v173 = v291;
  v165(v291, v163, v162);
  int v174 = v167(v164, 1, v156);
  uint64_t v175 = v163;
  uint64_t v176 = v156;
  v172 = v325;
  if (v174 == 1)
  {
    v177 = v320;
    v320(v306, v162);
    v177(v303, v162);
    (*(void (**)(char *, uint64_t))(v315 + 8))(v173, v176);
    uint64_t v171 = v326;
    long long v163 = v175;
LABEL_38:
    (*(void (**)(char *, uint64_t))(v302 + 8))(v163, TupleTypeMetadata2);
    goto LABEL_46;
  }
  uint64_t v191 = v315;
  v192 = v293;
  (*(void (**)(char *, char *, uint64_t))(v315 + 32))(v293, v166, v176);
  v193 = v175;
  v194 = v320;
  swift_getAssociatedConformanceWitness();
  char v195 = dispatch thunk of static Equatable.== infix(_:_:)();
  v196 = *(void (**)(char *, uint64_t))(v191 + 8);
  v196(v192, v176);
  v194(v306, v162);
  v194(v303, v162);
  v196(v173, v176);
  v194(v193, v162);
  v172 = v325;
  uint64_t v171 = v326;
  if (v195) {
    goto LABEL_45;
  }
LABEL_46:
  if (updated)
  {
    uint64_t v198 = 0;
    uint64_t v199 = 0;
    int v200 = 255;
    uint64_t v201 = (uint64_t)v309;
    v202 = v292;
    goto LABEL_67;
  }
  uint64_t v203 = (uint64_t)v317;
  ((void (*)(char *, char *, uint64_t))v300)(v317, v322, v171);
  uint64_t v204 = v311;
  sub_1000E95D0(v311, v203);
  uint64_t v198 = v205;
  uint64_t v199 = v206;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v308)(v203, v171);
  if (!v199)
  {
    uint64_t v198 = 0;
    int v200 = 255;
    uint64_t v201 = (uint64_t)v309;
    v202 = v292;
LABEL_67:
    if (v310 >= 1)
    {
      v228 = v290;
      ((void (*)(char *, char *, uint64_t))v300)(v290, v322, v171);
      if (v280(v228, 1, v329) == 1)
      {
        ((void (*)(char *, uint64_t))v308)(v228, v171);
      }
      else
      {
        uint64_t v321 = v198;
        v309 = (char *)v201;
        v229 = v289;
        v278(v289, v228, v329);
        v230 = *(uint64_t (**)(void *, char *))((char *)v172 + qword_10079BDF8);
        v231 = (void *)sub_1000E9400();
        v320 = (void (*)(char *, uint64_t))v230(v231, v229);
        uint64_t v233 = v232;

        if (v233)
        {
          uint64_t v234 = v288 + *(int *)(type metadata accessor for TTRITreeViewDropProposal(0) + 20);
          uint64_t v235 = v286;
          sub_1000E9ED8(v234, v286);
          uint64_t v236 = sub_10003B754(&qword_10079BEF0);
          v237 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v236 - 8) + 48);
          int v238 = v237(v235, 4, v236);
          sub_1000E9F3C(v235);
          if (v238 == 3
            || (uint64_t v252 = v284, sub_1000E9ED8(v234, v284), v253 = v237(v252, 4, v236), sub_1000E9F3C(v252), v253 == 4))
          {
            uint64_t v254 = v321;
            sub_1000E984C((uint64_t)v320, v233, v321, v199, v200, 0, 0);
            swift_bridgeObjectRelease();
            sub_1000E9EB8(v254, v199, v200);
            uint64_t v255 = v329;
            uint64_t v171 = v326;
            v256 = v289;
          }
          else
          {
            uint64_t v255 = v329;
            uint64_t v171 = v326;
            v256 = v289;
            uint64_t v270 = v321;
            if (v200 == 255)
            {
              swift_bridgeObjectRelease();
            }
            else
            {
              sub_1000E984C((uint64_t)v320, v233, v321, v199, v200, 0, 0);
              swift_bridgeObjectRelease();
              sub_1000E9EB8(v270, v199, v200);
            }
          }
          v257 = *(void (**)(char *, uint64_t))(v328 + 8);
          v257(v256, v255);
          v190 = (uint64_t (*)(char *, uint64_t))v308;
          ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
          v257(v324, v255);
          goto LABEL_92;
        }
        (*(void (**)(char *, uint64_t))(v328 + 8))(v229, v329);
        uint64_t v201 = (uint64_t)v309;
        uint64_t v198 = v321;
      }
      uint64_t v188 = v282;
      if (v200 != 255) {
        sub_1000E944C(v198, v199, v200);
      }
      sub_1000E9EB8(v198, v199, v200);
      v190 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v324, v329);
      goto LABEL_103;
    }
    ((void (*)(char *, char *, uint64_t))v300)(v202, v322, v171);
    if (v280(v202, 1, v329) == 1)
    {
      sub_1000E9EB8(v198, v199, v200);
      v190 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
      (*(void (**)(char *, uint64_t))(v328 + 8))(v324, v329);
      (*(void (**)(uint64_t, uint64_t))(v281 + 8))(v201, v282);
      v190(v202, v171);
      return v190(v322, v171);
    }
    uint64_t v321 = v198;
    v309 = (char *)v201;
    v239 = v287;
    v278(v287, v202, v329);
    v240 = *(uint64_t (**)(void *, char *))((char *)v172 + qword_10079BDF8);
    v241 = (void *)sub_1000E9400();
    uint64_t v242 = v240(v241, v239);
    uint64_t v244 = v243;

    if (!v244)
    {
      v258 = *(void (**)(char *, uint64_t))(v328 + 8);
      v259 = v239;
      uint64_t v260 = v329;
      v258(v259, v329);
      sub_1000E9EB8(v321, v199, v200);
      v190 = (uint64_t (*)(char *, uint64_t))v308;
      ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
      v258(v324, v260);
      (*(void (**)(char *, uint64_t))(v281 + 8))(v309, v282);
      return v190(v322, v171);
    }
    uint64_t v245 = v288 + *(int *)(type metadata accessor for TTRITreeViewDropProposal(0) + 20);
    uint64_t v246 = v285;
    sub_1000E9ED8(v245, v285);
    uint64_t v247 = sub_10003B754(&qword_10079BEF0);
    v248 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v247 - 8) + 48);
    if (v248(v246, 4, v247) == 3)
    {
      sub_1000E9EB8(v321, v199, v200);
      uint64_t v249 = v246;
    }
    else
    {
      sub_1000E9F3C(v246);
      uint64_t v261 = v245;
      uint64_t v262 = v283;
      sub_1000E9ED8(v261, v283);
      if (v248(v262, 4, v247) != 4)
      {
        swift_bridgeObjectRelease();
        sub_1000E9F3C(v262);
        uint64_t v171 = v326;
        uint64_t v271 = v321;
        if (v200 != 255) {
          sub_1000E944C(v321, v199, v200);
        }
        sub_1000E9EB8(v271, v199, v200);
        uint64_t v188 = v282;
        v269 = v287;
        goto LABEL_101;
      }
      sub_1000E9EB8(v321, v199, v200);
      uint64_t v249 = v262;
    }
    sub_1000E9F3C(v249);
    v263 = *(uint64_t (**)(void *, char *))((char *)v325 + qword_10079BE00);
    v264 = (void *)sub_1000E9400();
    v265 = v287;
    uint64_t v266 = v263(v264, v287);
    uint64_t v268 = v267;

    v269 = v265;
    sub_1000E984C(v242, v244, 0, 0, 0xFFu, v266, v268);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v171 = v326;
    uint64_t v188 = v282;
LABEL_101:
    v272 = *(void (**)(char *, uint64_t))(v328 + 8);
    v273 = v269;
    uint64_t v274 = v329;
    v272(v273, v329);
    v190 = (uint64_t (*)(char *, uint64_t))v308;
    ((void (*)(uint64_t, uint64_t))v308)(v323, v171);
    v272(v324, v274);
    goto LABEL_102;
  }
  v202 = v292;
  if (!__OFSUB__(v310, 1))
  {
    int v200 = v310 - 1 <= v204;
    sub_1000E9F98();
    swift_bridgeObjectRelease();
    uint64_t v201 = (uint64_t)v309;
    goto LABEL_67;
  }
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
  return result;
}

uint64_t sub_1000E9400()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unint64_t v1 = (void *)result;
    uint64_t v2 = sub_100119CD0();

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1000E944C(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 == 255)
  {
    v3._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
    v4._object = (void *)0x80000001006A91C0;
    v3._object = (void *)0x80000001006A91E0;
    v4._uint64_t countAndFlagsBits = 0xD000000000000013;
    Swift::String v5 = TTRLocalizedString(_:comment:)(v4, v3);
    uint64_t countAndFlagsBits = v5._countAndFlagsBits;
    object = v5._object;
  }
  else
  {
    if (a3)
    {
      sub_1000E9F98();
      unint64_t v10 = 0xD00000000000003ALL;
      unint64_t v11 = 0x80000001006A9230;
      uint64_t v12 = 0x6C65622065766F4DLL;
      unsigned __int16 v13 = 30575;
    }
    else
    {
      sub_1000E9F98();
      unint64_t v10 = 0xD00000000000003BLL;
      unint64_t v11 = 0x80000001006A9270;
      uint64_t v12 = 0x6F62612065766F4DLL;
      unsigned __int16 v13 = 25974;
    }
    unint64_t v14 = v13 | 0xED00004025200000;
    TTRLocalizedString(_:comment:)(*(Swift::String *)&v12, *(Swift::String *)&v10);
    sub_10003B754((uint64_t *)&unk_100788EE0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_10066C6F0;
    *(void *)(v15 + 56) = &type metadata for String;
    *(void *)(v15 + 64) = sub_1000965C8();
    *(void *)(v15 + 32) = a1;
    *(void *)(v15 + 40) = a2;
    uint64_t countAndFlagsBits = String.init(format:_:)();
    object = v16;
    swift_bridgeObjectRelease();
  }
  sub_1000E9B28(countAndFlagsBits, (uint64_t)object);

  return swift_bridgeObjectRelease();
}

void sub_1000E95D0(uint64_t a1, uint64_t a2)
{
  Swift::String v3 = v2;
  uint64_t v6 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v26 = *(void *)(v6 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  unsigned __int16 v13 = (void *)sub_1000E9400();
  uint64_t v14 = sub_10054FFA8(a2);
  char v16 = v15;

  if ((v16 & 1) == 0)
  {
    uint64_t v17 = v14 - 1;
    if (__OFSUB__(v14, 1))
    {
      __break(1u);
    }
    else
    {
      if (v17 >= a1) {
        uint64_t v17 = a1;
      }
      uint64_t v18 = v17 & ~(v17 >> 63);
      uint64_t v19 = (void *)sub_1000E9400();
      sub_10054FF28(v18, a2, (uint64_t)v9);

      uint64_t v20 = v26;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v6) == 1)
      {
        (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v9, v6);
        uint64_t v21 = *(void (**)(void *, char *))((char *)v3 + qword_10079BDF8);
        uint64_t v22 = (void *)sub_1000E9400();
        v21(v22, v12);

        (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v6);
      }
    }
  }
}

uint64_t sub_1000E984C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a6;
  if (a5 == 255)
  {
    v11._uint64_t countAndFlagsBits = 0xD00000000000003DLL;
    v11._object = (void *)0x80000001006A92B0;
    v12._uint64_t countAndFlagsBits = 0x736E692065766F4DLL;
    v12._object = (void *)0xEE00402520656469;
    TTRLocalizedString(_:comment:)(v12, v11);
    sub_10003B754((uint64_t *)&unk_100788EE0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10066C6F0;
    *(void *)(v13 + 56) = &type metadata for String;
    *(void *)(v13 + 64) = sub_1000965C8();
    *(void *)(v13 + 32) = a1;
    *(void *)(v13 + 40) = a2;
    swift_bridgeObjectRetain();
    uint64_t v14 = String.init(format:_:)();
    uint64_t v16 = v15;
  }
  else
  {
    if (a5)
    {
      sub_1000E9F98();
      unint64_t v19 = 0xD00000000000004CLL;
      unint64_t v20 = 0x80000001006A92F0;
      uint64_t v21 = "Accessibility announcement for moving an item inside a parent, below another";
    }
    else
    {
      sub_1000E9F98();
      unint64_t v19 = 0xD00000000000004CLL;
      unint64_t v20 = 0x80000001006A9360;
      uint64_t v21 = "Accessibility announcement for moving an item inside a parent, above another";
    }
    unint64_t v22 = (unint64_t)(v21 - 32) | 0x8000000000000000;
    unint64_t v23 = 0xD000000000000018;
    TTRLocalizedString(_:comment:)(*(Swift::String *)(&v20 - 1), *(Swift::String *)&v19);
    sub_10003B754((uint64_t *)&unk_100788EE0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_10066C680;
    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v25 = sub_1000965C8();
    *(void *)(v24 + 32) = a1;
    *(void *)(v24 + 40) = a2;
    *(void *)(v24 + 96) = &type metadata for String;
    *(void *)(v24 + 104) = v25;
    *(void *)(v24 + 64) = v25;
    *(void *)(v24 + 72) = a3;
    *(void *)(v24 + 80) = a4;
    swift_bridgeObjectRetain();
    uint64_t v14 = String.init(format:_:)();
    uint64_t v16 = v26;
    uint64_t v8 = a6;
  }
  swift_bridgeObjectRelease();
  if (a7)
  {
    sub_10003B754((uint64_t *)&unk_100791C60);
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_10066C680;
    *(void *)(v27 + 32) = v14;
    *(void *)(v27 + 40) = v16;
    *(void *)(v27 + 48) = v8;
    *(void *)(v27 + 56) = a7;
    swift_bridgeObjectRetain();
    TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor();
    swift_bridgeObjectRetain();
    sub_10003B754(&qword_10078E670);
    sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
    uint64_t v14 = BidirectionalCollection<>.joined(separator:)();
    uint64_t v16 = v28;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1000E9B28(v14, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E9B28(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  Swift::String v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10007CD0C();
  Swift::String v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v2;
  uint64_t v13[3] = a1;
  v13[4] = a2;
  aBlock[4] = sub_1000EA048;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AD88;
  void aBlock[3] = &unk_10073A138;
  uint64_t v14 = _Block_copy(aBlock);
  id v15 = v2;
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003FFBC();
  sub_10003B754((uint64_t *)&unk_100788E50);
  sub_100037EA0((unint64_t *)&qword_10078C6F0, (uint64_t *)&unk_100788E50);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v18);
}

void sub_1000E9DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)(a1 + qword_10079BE08);
  uint64_t v6 = *(void *)(a1 + qword_10079BE08 + 8);
  if (!v6 || (*v5 == a2 ? (BOOL v7 = v6 == a3) : (BOOL v7 = 0), !v7 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0))
  {
    void *v5 = a2;
    v5[1] = a3;
    swift_bridgeObjectRelease();
    UIAccessibilityNotifications v8 = UIAccessibilityAnnouncementNotification;
    swift_bridgeObjectRetain();
    NSString v9 = String._bridgeToObjectiveC()();
    UIAccessibilityPostNotification(v8, v9);
  }
}

uint64_t sub_1000E9EB8(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1000E9ED0();
  }
  return result;
}

uint64_t sub_1000E9ED0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000E9ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000E9F3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000E9F98()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1000E9FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000EA008()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1000EA048()
{
  sub_1000E9DDC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1000EA054()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1000EA098(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1000EA0F0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_1000EA170(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t sub_1000EA1C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000EA1F4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1000EA248()
{
  type metadata accessor for TTRITreeViewNode();
  swift_retain();
  swift_getWitnessTable();
  Dictionary.subscript.getter();
  swift_release();
  return v1;
}

uint64_t sub_1000EA30C@<X0>(char a1@<W4>, uint64_t a2@<X8>)
{
  return sub_1000EBEC8(a1, a2);
}

uint64_t sub_1000EA324()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRITreeViewNode();
  swift_getWitnessTable();
  type metadata accessor for Set();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Dictionary.Values();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  char v0 = Sequence.contains(where:)();
  swift_bridgeObjectRelease();
  return v0 & 1;
}

uint64_t sub_1000EA498()
{
  sub_1000EA248();
  if (v0) {
    return 0;
  }
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  Array.subscript.getter();
  uint64_t v1 = v3;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000EA534(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  uint64_t v59 = a4;
  uint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v53 = (char *)&v40 - v13;
  id v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = type metadata accessor for Optional();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  unint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = dispatch thunk of Sequence.underestimatedCount.getter();
  uint64_t v61 = ContiguousArray.init()();
  uint64_t v56 = type metadata accessor for ContiguousArray();
  ContiguousArray.reserveCapacity(_:)(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  uint64_t v59 = v30;
  uint64_t result = dispatch thunk of Sequence.makeIterator()();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      dispatch thunk of IteratorProtocol.next()();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  dispatch thunk of IteratorProtocol.next()();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    uint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      ContiguousArray.append(_:)();
      dispatch thunk of IteratorProtocol.next()();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_1000EAC30(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  type metadata accessor for Array();
  Array.remove(at:)();
  uint64_t v4 = v10[0];
  uint64_t v5 = v10[1];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  swift_allocObject();
  uint64_t v6 = static Array._adoptStorage(_:count:)();
  *BOOL v7 = v10[0];
  type metadata accessor for TTRITreeViewNode();
  uint64_t v8 = type metadata accessor for Array();
  v10[0] = v6;
  swift_retain();
  swift_getWitnessTable();
  sub_1000EADAC((uint64_t)v10, a2, v8);
  swift_bridgeObjectRelease();
  v10[0] = v5;
  sub_1000EADAC((uint64_t)v10, a2, v8);
  v10[0] = a1;
  sub_10003B754(&qword_10078C638);
  sub_100037EA0(&qword_10078C640, &qword_10078C638);
  sub_10003534C((uint64_t)v10, -1);
  return v4;
}

uint64_t sub_1000EADAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v25 = a2;
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v24 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = *(void *)(a3 - 8);
  __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v15 = (char *)&v20 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a3);
  dispatch thunk of Sequence.makeIterator()();
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = dispatch thunk of IteratorProtocol.next()();
  uint64_t v17 = v27;
  if (v27)
  {
    uint64_t v18 = (void (**)(char *, uint64_t))(v21 + 8);
    do
    {
      sub_100039A88(v16);
      sub_1000EB8A0((uint64_t)v9, v17);
      (*v18)(v9, AssociatedTypeWitness);
      uint64_t v26 = v17;
      type metadata accessor for TTRITreeViewNode();
      swift_getWitnessTable();
      type metadata accessor for Dictionary();
      Dictionary.removeValue(forKey:)();
      swift_release();
      uint64_t v16 = dispatch thunk of IteratorProtocol.next()();
      uint64_t v17 = v27;
    }
    while (v27);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v15, v13);
}

uint64_t sub_1000EB0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 == a2)
  {
    type metadata accessor for TTRITreeViewSectionsMetadata.Section();
    Array.subscript.getter();
    return v15;
  }
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  type metadata accessor for Array();
  Array.remove(at:)();
  uint64_t v5 = v15;
  uint64_t v7 = v16;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = Array.insert(_:at:)();
  if (a1 < a2)
  {
    uint64_t v9 = a1 + 1;
    uint64_t v10 = -1;
    uint64_t v11 = a2;
LABEL_8:
    uint64_t v15 = v9;
    uint64_t v16 = v11;
    sub_10003B754(&qword_10078C650);
    sub_100037EA0(qword_10078C658, &qword_10078C650);
    sub_10003534C((uint64_t)&v15, v10);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    swift_allocObject();
    uint64_t v12 = static Array._adoptStorage(_:count:)();
    *uint64_t v13 = v5;
    type metadata accessor for TTRITreeViewNode();
    uint64_t v14 = type metadata accessor for Array();
    uint64_t v15 = v12;
    swift_retain();
    swift_getWitnessTable();
    sub_100039758((uint64_t)&v15, a2, a3, v14);
    swift_bridgeObjectRelease();
    uint64_t v15 = v7;
    sub_100039758((uint64_t)&v15, a2, a3, v14);
    return v5;
  }
  uint64_t v11 = a1 - 1;
  if (__OFSUB__(a1, 1))
  {
    __break(1u);
  }
  else if (v11 >= a2)
  {
    uint64_t v10 = 1;
    uint64_t v9 = a2;
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000EB300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = IndexPath.section.getter();
  uint64_t v10 = a1;
  swift_bridgeObjectRetain();
  IndexPath.row.getter();
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  type metadata accessor for Array();
  Array._makeMutableAndUnique()();
  sub_1000ECE14(v6, *v3);
  type metadata accessor for TTRITreeViewNode();
  uint64_t v7 = type metadata accessor for Array();
  swift_getWitnessTable();
  swift_getWitnessTable();
  RangeReplaceableCollection.insert<A>(contentsOf:at:)();
  uint64_t v10 = a1;
  uint64_t v8 = IndexPath.section.getter();
  swift_getWitnessTable();
  return sub_100039758((uint64_t)&v10, v8, a3, v7);
}

uint64_t sub_1000EB480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = IndexPath.row.getter();
  uint64_t result = IndexPath.row.getter();
  BOOL v8 = __OFADD__(result, a2);
  uint64_t v9 = result + a2;
  if (v8)
  {
    __break(1u);
  }
  else if (v9 >= v6)
  {
    unint64_t v10 = IndexPath.section.getter();
    uint64_t v19 = a3;
    type metadata accessor for TTRITreeViewSectionsMetadata.Section();
    Array.subscript.getter();
    type metadata accessor for TTRITreeViewNode();
    uint64_t v11 = Array.subscript.getter();
    uint64_t v13 = v12;
    uint64_t v17 = v15;
    uint64_t v18 = v14;
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v20 = v6;
    uint64_t v21 = v9;
    type metadata accessor for Array();
    Array._makeMutableAndUnique()();
    sub_1000ECE14(v10, *v3);
    type metadata accessor for Array();
    swift_getWitnessTable();
    RangeReplaceableCollection.removeSubrange(_:)();
    uint64_t v20 = v11;
    uint64_t v21 = v13;
    uint64_t v22 = v18;
    uint64_t v23 = v17;
    uint64_t v16 = type metadata accessor for ArraySlice();
    swift_getWitnessTable();
    sub_1000EADAC((uint64_t)&v20, v19, v16);
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1000EB654(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  Array.subscript.getter();
  type metadata accessor for TTRITreeViewNode();
  uint64_t v20 = Array.subscript.getter();
  uint64_t v21 = v11;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v19 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  type metadata accessor for Array();
  Array._makeMutableAndUnique()();
  sub_1000ECE14(a3, *v7);
  type metadata accessor for Array();
  swift_getWitnessTable();
  RangeReplaceableCollection.removeSubrange(_:)();
  uint64_t v23 = v20;
  uint64_t v24 = v13;
  uint64_t v25 = v21;
  uint64_t v26 = v15;
  swift_unknownObjectRetain();
  Array._makeMutableAndUnique()();
  sub_1000ECE14(a4, *v7);
  uint64_t v16 = type metadata accessor for ArraySlice();
  swift_getWitnessTable();
  RangeReplaceableCollection.insert<A>(contentsOf:at:)();
  if (a3 != a4)
  {
    uint64_t v23 = v20;
    uint64_t v24 = v13;
    uint64_t v25 = v21;
    uint64_t v26 = v19;
    swift_getWitnessTable();
    sub_100039758((uint64_t)&v23, a4, a6, v16);
  }
  return v20;
}

uint64_t sub_1000EB8A0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v19 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v18 = (char *)&v17 - v7;
  type metadata accessor for TTRITreeViewNode();
  swift_getWitnessTable();
  type metadata accessor for Set();
  swift_getAssociatedConformanceWitness();
  Dictionary.subscript.getter();
  if (!v21[0]) {
    return 0;
  }
  v21[0] = a2;
  if ((Set.contains(_:)() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v8 = Set.count.getter();
  swift_bridgeObjectRelease();
  if (v8 == 1)
  {
    type metadata accessor for Dictionary();
    Dictionary.removeValue(forKey:)();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    uint64_t v10 = v20;
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v20 + 16);
    uint64_t v12 = v18;
    v11(v18, a1, AssociatedTypeWitness);
    v21[4] = a2;
    uint64_t v13 = v19;
    v11(v19, (uint64_t)v12, AssociatedTypeWitness);
    type metadata accessor for Dictionary._Variant();
    uint64_t result = Dictionary._Variant.subscript.modify();
    if (*v14)
    {
      uint64_t v15 = (void (*)(void *, void))result;
      Set.remove(_:)();
      swift_release();
      v15(v21, 0);
      uint64_t v16 = *(void (**)(char *, uint64_t))(v10 + 8);
      v16(v13, AssociatedTypeWitness);
      v16(v12, AssociatedTypeWitness);
      return 1;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1000EBBA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v12 = (char *)v14 - v11;
  (*(void (**)(uint64_t, uint64_t))(a7 + 24))(a6, a7);
  type metadata accessor for TTRITreeViewNode();
  swift_getWitnessTable();
  type metadata accessor for Set();
  swift_getAssociatedConformanceWitness();
  Dictionary.subscript.getter();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
  if (!v15) {
    return 0;
  }
  v14[1] = v15;
  swift_getWitnessTable();
  Collection.first.getter();
  swift_bridgeObjectRelease();
  return v14[2];
}

uint64_t sub_1000EBD88()
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for TTRITreeViewNode();
  swift_getWitnessTable();
  type metadata accessor for Set();
  swift_getAssociatedConformanceWitness();
  Dictionary.subscript.getter();
  if (!v2) {
    return 0;
  }
  swift_getWitnessTable();
  Collection.first.getter();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1000EBEC8@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  sub_1000EA248();
  if (v4) {
    goto LABEL_6;
  }
  if ((a1 & 1) == 0)
  {
    type metadata accessor for TTRITreeViewSectionsMetadata.Section();
    Array.subscript.getter();
    swift_release();
    type metadata accessor for TTRITreeViewNode();
    type metadata accessor for Array();
    swift_getWitnessTable();
    Collection.firstIndex(where:)();
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v13 = type metadata accessor for IndexPath();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
    }
    else
    {
      IndexPath.init(row:section:)();
      uint64_t v14 = type metadata accessor for IndexPath();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
    }
  }
  uint64_t v5 = sub_10020A47C();
  swift_release();
  uint64_t result = v5 - 1;
  if (__OFSUB__(v5, 1))
  {
    __break(1u);
    return result;
  }
  if (result < 0)
  {
LABEL_6:
    uint64_t v12 = type metadata accessor for IndexPath();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    IndexPath.init(row:section:)();
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_1000EC14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  if (sub_1000EBBA0(a1, a2, a3, a4, 0, a6, a7))
  {
    sub_1000EBEC8(a5 & 1, a8);
    return swift_release();
  }
  else
  {
    uint64_t v11 = type metadata accessor for IndexPath();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    return v12(a8, 1, 1, v11);
  }
}

uint64_t sub_1000EC228()
{
  return Set.contains(_:)() & 1;
}

uint64_t sub_1000EC2B8(uint64_t a1)
{
  uint64_t result = sub_1000EA498();
  if (result)
  {
    uint64_t v3 = result;
    swift_release();
    return v3 == a1;
  }
  return result;
}

void (*sub_1000EC2F4@<X0>(uint64_t a1@<X0>, char a2@<W4>, char *a3@<X8>))(unsigned char *, void)
{
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v20 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1000EC2B8(a1))
  {
    sub_1000EA248();
    if (v12)
    {
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
      uint64_t v14 = a3;
      uint64_t v15 = 1;
    }
    else
    {
      IndexPath.init(row:section:)();
      uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
      uint64_t v14 = a3;
      uint64_t v15 = 0;
    }
    return (void (*)(unsigned char *, void))v13((uint64_t)v14, v15, 1, v9);
  }
  else
  {
    sub_1000EBEC8(a2 & 1, (uint64_t)v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v9) == 1)
    {
      sub_10006A5D4((uint64_t)v8);
      return (void (*)(unsigned char *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(a3, 1, 1, v9);
    }
    else
    {
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
      v17(v11, v8, v9);
      uint64_t result = (void (*)(unsigned char *, void))IndexPath.row.modify();
      if (__OFADD__(*v18, 1))
      {
        __break(1u);
      }
      else
      {
        ++*v18;
        result(v21, 0);
        v17(a3, v11, v9);
        return (void (*)(unsigned char *, void))(*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a3, 0, 1, v9);
      }
    }
  }
  return result;
}

uint64_t sub_1000EC5AC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5, unint64_t a6)
{
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = __chkstk_darwin(a1);
  uint64_t v60 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = (char *)_swiftEmptyArrayStorage;
  uint64_t v65 = (char *)v10;
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  type metadata accessor for Array();
  swift_getWitnessTable();
  Sequence.enumerated()();
  uint64_t v61 = v63[0];
  type metadata accessor for EnumeratedSequence();
  EnumeratedSequence.makeIterator()();
  uint64_t v59 = type metadata accessor for EnumeratedSequence.Iterator();
  EnumeratedSequence.Iterator.next()();
  uint64_t v12 = v63[1];
  if (v63[1])
  {
    uint64_t v13 = v63[0];
    uint64_t v14 = v64;
    if (a4) {
      uint64_t v15 = 1702195828;
    }
    else {
      uint64_t v15 = 0x65736C6166;
    }
    unint64_t v16 = 0xE500000000000000;
    if (a4) {
      unint64_t v16 = 0xE400000000000000;
    }
    uint64_t v57 = (void *)v16;
    uint64_t v58 = v15;
    unint64_t v55 = a6 + 32;
    uint64_t v56 = (void (**)(char *, uint64_t, unint64_t))(v9 + 16);
    unint64_t v53 = 0x80000001006A93D0;
    uint64_t v54 = (void (**)(char *, unint64_t))(v9 + 8);
    unint64_t v52 = 0x80000001006A93F0;
    do
    {
      uint64_t v62 = v13;
      strcpy((char *)v63, "Section ");
      BYTE1(v63[1]) = 0;
      WORD1(v63[1]) = 0;
      HIDWORD(v63[1]) = -402653184;
      v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v17);
      swift_bridgeObjectRelease();
      uint64_t v18 = v63[0];
      uint64_t v19 = v63[1];
      uint64_t v20 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = sub_100022F98(0, *((void *)v20 + 2) + 1, 1, v20);
      }
      unint64_t v22 = *((void *)v20 + 2);
      unint64_t v21 = *((void *)v20 + 3);
      if (v22 >= v21 >> 1) {
        uint64_t v20 = sub_100022F98((char *)(v21 > 1), v22 + 1, 1, v20);
      }
      *((void *)v20 + 2) = v22 + 1;
      uint64_t v23 = &v20[16 * v22];
      *((void *)v23 + 4) = v18;
      *((void *)v23 + 5) = v19;
      v63[0] = 0;
      v63[1] = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      v63[0] = 0xD000000000000013;
      v63[1] = v53;
      v24._uint64_t countAndFlagsBits = v58;
      v24._object = v57;
      String.append(_:)(v24);
      swift_bridgeObjectRelease();
      uint64_t v25 = v63[0];
      uint64_t v26 = v63[1];
      unint64_t v28 = *((void *)v20 + 2);
      unint64_t v27 = *((void *)v20 + 3);
      if (v28 >= v27 >> 1) {
        uint64_t v20 = sub_100022F98((char *)(v27 > 1), v28 + 1, 1, v20);
      }
      *((void *)v20 + 2) = v28 + 1;
      uint64_t v29 = &v20[16 * v28];
      *((void *)v29 + 4) = v25;
      *((void *)v29 + 5) = v26;
      uint64_t v66 = v20;
      strcpy((char *)v63, "\tRoot node: ");
      BYTE5(v63[1]) = 0;
      HIWORD(v63[1]) = -5120;
      uint64_t v30 = v12 + *(void *)(*(void *)v12 + 144);
      swift_beginAccess();
      Swift::Int v31 = v60;
      (*v56)(v60, v30, a5);
      uint64_t v32 = (*(uint64_t (**)(unint64_t, unint64_t))(a6 + 32))(a5, a6);
      uint64_t v34 = v33;
      (*v54)(v31, a5);
      v35._uint64_t countAndFlagsBits = v32;
      v35._object = v34;
      String.append(_:)(v35);
      swift_bridgeObjectRelease();
      uint64_t v36 = v63[0];
      uint64_t v37 = v63[1];
      uint64_t v38 = v66;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v38 = sub_100022F98(0, *((void *)v38 + 2) + 1, 1, v38);
      }
      unint64_t v40 = *((void *)v38 + 2);
      unint64_t v39 = *((void *)v38 + 3);
      int64_t v41 = v39 >> 1;
      unint64_t v42 = v40 + 1;
      if (v39 >> 1 <= v40)
      {
        uint64_t v38 = sub_100022F98((char *)(v39 > 1), v40 + 1, 1, v38);
        unint64_t v39 = *((void *)v38 + 3);
        int64_t v41 = v39 >> 1;
      }
      *((void *)v38 + 2) = v42;
      uint64_t v43 = &v38[16 * v40];
      *((void *)v43 + 4) = v36;
      *((void *)v43 + 5) = v37;
      if (v41 < (uint64_t)(v40 + 2)) {
        uint64_t v38 = sub_100022F98((char *)(v39 > 1), v40 + 2, 1, v38);
      }
      *((void *)v38 + 2) = v40 + 2;
      uint64_t v44 = &v38[16 * v42];
      *((void *)v44 + 4) = 0xD000000000000011;
      *((void *)v44 + 5) = v52;
      uint64_t v66 = v38;
      uint64_t v62 = v14;
      type metadata accessor for TTRITreeViewNode();
      type metadata accessor for Array();
      swift_getWitnessTable();
      uint64_t v45 = Sequence.enumerated()();
      uint64_t v62 = v63[0];
      __chkstk_darwin(v45);
      *(&v52 - 4) = a5;
      *(&v52 - 3) = a6;
      *(&v52 - 2) = (unint64_t)sub_1000ECE88;
      *(&v52 - 1) = 0;
      uint64_t v46 = type metadata accessor for EnumeratedSequence();
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v49 = sub_1000EA534((void (*)(char *, char *))sub_1000ECE8C, (uint64_t)(&v52 - 6), v46, (char *)&type metadata for String, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v48);
      swift_bridgeObjectRelease();
      sub_100569C10(v49);
      swift_bridgeObjectRelease();
      swift_release();
      EnumeratedSequence.Iterator.next()();
      uint64_t v13 = v63[0];
      uint64_t v12 = v63[1];
      uint64_t v14 = v64;
    }
    while (v63[1]);
  }
  swift_bridgeObjectRelease();
  uint64_t v65 = v66;
  sub_10003B754(&qword_10078E670);
  sub_100037EA0((unint64_t *)&qword_100791C70, &qword_10078E670);
  uint64_t v50 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v50;
}

uint64_t sub_1000ECC30(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(a1);
  uint64_t v8 = (char *)v17 - v7;
  uint64_t v18 = 2313;
  unint64_t v19 = 0xE200000000000000;
  v17[1] = v6;
  v9._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 8238;
  v10._object = (void *)0xE200000000000000;
  String.append(_:)(v10);
  uint64_t v11 = (uint64_t)a2 + *(void *)(*a2 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, v11, v4);
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(*(void *)(v3 + 88) + 32))(v4);
  uint64_t v14 = v13;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  v15._uint64_t countAndFlagsBits = v12;
  v15._object = v14;
  String.append(_:)(v15);
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_1000ECDF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1000EC5AC(*(void *)v3, a2, a3, *(unsigned char *)(v3 + 24), *(void *)(a1 + 16), *(void *)(a1 + 24));
}

BOOL sub_1000ECE04(void *a1)
{
  return *a1 == v1;
}

uint64_t sub_1000ECE14(unint64_t a1, uint64_t a2)
{
  uint64_t result = _swift_isClassOrObjCExistentialType();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = a2 & 0xFFFFFFFFFFFFFF8;
  if ((result & 1) == 0) {
    uint64_t v5 = a2;
  }
  if (*(void *)(v5 + 16) <= a1) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1000ECE68()
{
  return sub_1000EC228() & 1;
}

uint64_t sub_1000ECE8C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 32))(*a1, a1[1]);
  *a2 = result;
  a2[1] = v5;
  return result;
}

void *sub_1000ECED4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1000ECF34(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t *TTRListSharingUtilities.excludedShareActivityTypes.unsafeMutableAddressor()
{
  if (qword_100785270 != -1) {
    swift_once();
  }
  return &static TTRListSharingUtilities.excludedShareActivityTypes;
}

id sub_1000ECFCC@<X0>(void *a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  *(void *)(a2 + 24) = sub_1000368FC(0, (unint64_t *)&unk_10078C700);
  *(void *)a2 = a1;

  return a1;
}

id sub_1000ED0C0(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v5)(void *__return_ptr, uint64_t, id);
  id v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  void *v12;
  void v14[3];
  uint64_t v15;
  uint64_t vars8;

  uint64_t v5 = *(void (**)(void *__return_ptr, uint64_t, id))(a1 + 32);
  swift_retain();
  uint64_t v6 = a3;
  v5(v14, a2, v6);
  swift_release();

  uint64_t v7 = v15;
  if (v15)
  {
    char v8 = sub_100038D28(v14, v15);
    Swift::String v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8);
    uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_100038CD8((uint64_t)v14);
  }
  else
  {
    uint64_t v12 = 0;
  }

  return v12;
}

id sub_1000ED228@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    id result = (id)swift_bridgeObjectRelease();
    if ((v8 & 1) == 0)
    {
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
      return result;
    }
  }
  *(void *)(a2 + 24) = sub_1000368FC(0, (unint64_t *)&unk_10078C700);
  *(void *)a2 = a1;

  return a1;
}

id sub_1000ED31C(uint64_t a1, void *a2)
{
  void (*v3)(void *__return_ptr);
  id v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  void v12[3];
  uint64_t v13;
  uint64_t vars8;

  uint64_t v3 = *(void (**)(void *__return_ptr))(a1 + 32);
  swift_retain();
  uint64_t v4 = a2;
  v3(v12);
  swift_release();

  uint64_t v5 = v13;
  if (v13)
  {
    uint64_t v6 = sub_100038D28(v12, v13);
    uint64_t v7 = *(void *)(v5 - 8);
    __chkstk_darwin(v6);
    Swift::String v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    Swift::String v10 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v5);
    sub_100038CD8((uint64_t)v12);
  }
  else
  {
    Swift::String v10 = 0;
  }

  return v10;
}

uint64_t sub_1000ED478(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  aBlock[4] = sub_1000EE334;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10000AD88;
  void aBlock[3] = &unk_10073A288;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10003FFBC();
  sub_10003B754((uint64_t *)&unk_100788E50);
  sub_10003D7C4();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return 0;
}

id sub_1000ED710(uint64_t a1, void *aBlock)
{
  uint64_t v2 = *(uint64_t (**)(void, uint64_t))(a1 + 32);
  uint64_t v3 = _Block_copy(aBlock);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v3;
  swift_retain();
  uint64_t v5 = (void *)v2(sub_1000EE2F4, v4);
  swift_release();
  swift_release();

  return v5;
}

void sub_1000ED7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = _convertErrorToNSError(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  id v6 = (id)v5;
  (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a3, a1);
}

NSString sub_1000ED820()
{
  sub_10003B754(&qword_10078C6F8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10066F6F0;
  uint64_t v1 = (void *)UIActivityTypeCreateReminder;
  *(void *)(v0 + 32) = UIActivityTypeAirDrop;
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 48) = UIActivityTypeAddToReadingList;
  *(void *)(v0 + 56) = UIActivityTypePostToFlickr;
  *(void *)(v0 + 64) = UIActivityTypePostToVimeo;
  *(void *)(v0 + 72) = UIActivityTypeCopyToPasteboard;
  *(void *)(v0 + 80) = UIActivityTypePrint;
  uint64_t v2 = UIActivityTypeAirDrop;
  id v3 = v1;
  uint64_t v4 = UIActivityTypeAddToReadingList;
  uint64_t v5 = UIActivityTypePostToFlickr;
  id v6 = UIActivityTypePostToVimeo;
  uint64_t v7 = UIActivityTypeCopyToPasteboard;
  uint64_t v8 = UIActivityTypePrint;
  NSString result = String._bridgeToObjectiveC()();
  *(void *)(v0 + 88) = result;
  static TTRListSharingUtilities.excludedShareActivityTypes = v0;
  return result;
}

uint64_t static TTRListSharingUtilities.excludedShareActivityTypes.getter()
{
  if (qword_100785270 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static TTRListSharingUtilities.excludedShareActivityTypes.setter(uint64_t a1)
{
  if (qword_100785270 != -1) {
    swift_once();
  }
  swift_beginAccess();
  static TTRListSharingUtilities.excludedShareActivityTypes = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static TTRListSharingUtilities.excludedShareActivityTypes.modify())()
{
  if (qword_100785270 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

id _s9Reminders23TTRListSharingUtilitiesC20imageForLinkMetadataSo7LPImageCvgZ_0()
{
  id v0 = [objc_allocWithZone((Class)NSItemProvider) init];
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v6[4] = sub_1000ED478;
  v6[5] = 0;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1000ED710;
  v6[3] = &unk_10073A210;
  uint64_t v2 = _Block_copy(v6);
  [v0 registerObjectOfClass:ObjCClassFromMetadata visibility:0 loadHandler:v2];
  _Block_release(v2);
  id v3 = [objc_allocWithZone((Class)LPImageProperties) init];
  [v3 setType:1];
  id v4 = [objc_allocWithZone((Class)LPImage) initWithItemProvider:v0 properties:v3 placeholderImage:0];

  return v4;
}

id _s9Reminders23TTRListSharingUtilitiesC26activityItemsConfiguration3forSo010UIActivityfG0CSo7REMListC_tFZ_0(void *a1)
{
  id v2 = _s9Reminders23TTRListSharingUtilitiesC17shareItemProvider3forSo06NSItemG0CSo7REMListC_tFZ_0(a1);
  id v3 = [objc_allocWithZone((Class)LPLinkMetadata) init];
  NSString v4 = [a1 displayName];
  if (!v4)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v3 setTitle:v4];

  static TTRLocalizableStrings.Sharing.sharedListSummaryForShareSheet.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setSummary:v5];

  id v6 = _s9Reminders23TTRListSharingUtilitiesC20imageForLinkMetadataSo7LPImageCvgZ_0();
  [v3 setImage:v6];

  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_10066D470;
  *(void *)(v7 + 32) = v2;
  unint64_t v19 = (void **)v7;
  specialized Array._endMutation()();
  id v8 = objc_allocWithZone((Class)UIActivityItemsConfiguration);
  sub_1000368FC(0, &qword_100791E60);
  id v9 = v2;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithItemProviders:isa v19];

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v3;
  uint64_t v23 = sub_1000EE384;
  uint64_t v24 = v12;
  unint64_t v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  unint64_t v21 = sub_1000ED0C0;
  unint64_t v22 = &unk_10073A2D8;
  uint64_t v13 = _Block_copy(&v19);
  id v14 = v3;
  swift_release();
  [v11 setPerItemMetadataProvider:v13];
  _Block_release(v13);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  uint64_t v23 = sub_1000EE3C4;
  uint64_t v24 = v15;
  unint64_t v19 = _NSConcreteStackBlock;
  uint64_t v20 = 1107296256;
  unint64_t v21 = sub_1000ED31C;
  unint64_t v22 = &unk_10073A328;
  unint64_t v16 = _Block_copy(&v19);
  id v17 = v14;
  swift_release();
  [v11 setMetadataProvider:v16];
  _Block_release(v16);

  return v11;
}

id _s9Reminders23TTRListSharingUtilitiesC32shareSheetActivityViewController3for13popoverAnchorSo010UIActivityhI0CSo7REMListC_0A6UICore011TTRIPopoverL0VSgtFZ_0(void *a1, uint64_t a2)
{
  sub_1000C77A4(a2, (uint64_t)v22);
  NSString v4 = (void *)v22[0];
  uint64_t v5 = v22[1];
  uint64_t v6 = v22[2];
  uint64_t v7 = v22[3];
  uint64_t v9 = v22[4];
  unsigned __int8 v8 = v23;
  id v21 = _s9Reminders23TTRListSharingUtilitiesC26activityItemsConfiguration3forSo010UIActivityfG0CSo7REMListC_tFZ_0(a1);
  id v10 = [objc_allocWithZone((Class)UIActivityViewController) initWithActivityItemsConfiguration:v21];
  if (qword_100785270 != -1) {
    swift_once();
  }
  swift_beginAccess();
  type metadata accessor for ActivityType(0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setExcludedActivityTypes:isa];

  sub_1000C77A4(a2, (uint64_t)v24);
  char v12 = v25;
  if ((~(_BYTE)v25 & 0xFE) != 0)
  {
    uint64_t v19 = v24[1];
    uint64_t v20 = v24[0];
    uint64_t v17 = v24[3];
    uint64_t v18 = v24[2];
    uint64_t v16 = v24[4];
    sub_1000C7850(v4, v5, v6, v7, v9, v8);
    id v13 = [v10 popoverPresentationController];
    if (v13)
    {
      id v14 = v13;
      uint64_t v26 = v20;
      uint64_t v27 = v19;
      uint64_t v28 = v18;
      uint64_t v29 = v17;
      uint64_t v30 = v16;
      char v31 = v12;
      sub_1000C7850(v4, v5, v6, v7, v9, v8);
      UIPopoverPresentationController.setPopoverAnchorSource(_:)();

      sub_1000C7874(a2);
      sub_1000C7874(a2);
    }
    else
    {

      sub_1000C7874(a2);
    }
  }
  else
  {
  }
  return v10;
}

id _s9Reminders23TTRListSharingUtilitiesC8appImageSo7UIImageCSgvgZ_0()
{
  id v0 = self;
  id v1 = [v0 mainScreen];
  [v1 bounds];
  double v3 = v2;
  double v5 = v4;

  id v6 = [v0 mainScreen];
  [v6 scale];
  double v8 = v7;

  id v9 = [objc_allocWithZone((Class)ISImageDescriptor) initWithSize:v3 scale:v5];
  id v10 = _s9Reminders23TTRListSharingUtilitiesC17remindersAppImage3forSo7IFImageCSgSo17ISImageDescriptorC_tFZ_0((uint64_t)v9);
  if (v10)
  {
    id v11 = v10;
    id result = [v10 CGImage];
    if (result)
    {
      id v13 = result;
      [v11 scale];
      id v15 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v13 scale:0 orientation:v14];

      return v15;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    type metadata accessor for RemindersUICoreBundleLookupObject();
    uint64_t v16 = (void *)static RemindersUICoreBundleLookupObject.bundle.getter();
    uint64_t v17 = static UIImage.ttr_image(named:in:)();

    return (id)v17;
  }
  return result;
}

uint64_t sub_1000EE2BC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1000EE2F4(uint64_t a1, uint64_t a2)
{
  sub_1000ED7B0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_1000EE2FC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1000EE334()
{
  id v1 = *(void (**)(id, void))(v0 + 16);
  id v2 = _s9Reminders23TTRListSharingUtilitiesC8appImageSo7UIImageCSgvgZ_0();
  v1(v2, 0);
}

id sub_1000EE384@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ECFCC(*(void **)(v1 + 16), a1);
}

uint64_t sub_1000EE38C()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1000EE3C4@<X0>(uint64_t a1@<X8>)
{
  return sub_1000ED228(*(void **)(v1 + 16), a1);
}

uint64_t sub_1000EE3E0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078C710);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078C710);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  double v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000EE4A8@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  v29[1] = a2;
  uint64_t v30 = a3;
  uint64_t v4 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  id v13 = (char *)v29 - v12;
  double v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)v29 - v16;
  uint64_t v18 = *a1;
  v29[0] = *(void *)(v5 + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t, double))v29[0])((char *)v29 - v16, 1, 1, v4, v15);
  id v19 = [v18 dragItem];
  unint64_t v31 = 0xD000000000000022;
  unint64_t v32 = 0x80000001006A4710;
  AnyHashable.init<A>(_:)();
  UIDragItem.localObject<A>(ofType:forKey:)();

  sub_100055AE8((uint64_t)v33);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_10079CFC0);
  }
  else
  {
    sub_1000F104C((uint64_t)v13, (uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    if (static UUID.== infix(_:_:)())
    {
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10079CFC0);
      sub_1000F104C((uint64_t)v7, (uint64_t)v17, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
      ((void (*)(char *, void, uint64_t, uint64_t))v29[0])(v17, 0, 1, v4);
    }
    else
    {
      sub_100034504((uint64_t)v7, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
    }
  }
  id v20 = [v18 dragItem];
  sub_10003B694((uint64_t)v17, (uint64_t)v10, (uint64_t *)&unk_10079CFC0);
  [v18 previewSize];
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10079CFC0);
  int v25 = v30;
  *uint64_t v30 = v20;
  uint64_t v26 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem(0);
  uint64_t result = sub_100028C3C((uint64_t)v10, (uint64_t)v25 + *(int *)(v26 + 20), (uint64_t *)&unk_10079CFC0);
  uint64_t v28 = (void *)((char *)v25 + *(int *)(v26 + 24));
  *uint64_t v28 = v22;
  v28[1] = v24;
  return result;
}

void *sub_1000EE814()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v44 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v4 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v43 = (uint64_t)v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078C830);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (void *)((char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v49 = (uint64_t)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v42 = (uint64_t)v40 - v13;
  uint64_t v48 = type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem(0);
  uint64_t v14 = *(void *)(v48 - 8);
  double v15 = __chkstk_darwin(v48);
  uint64_t v17 = (void **)((char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v18 = [*(id *)(v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator) items];
  sub_10003B754((uint64_t *)&unk_10079F4D0);
  unint64_t v19 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  uint64_t v20 = sub_100442C34(v19, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    uint64_t v22 = v20;
    uint64_t v23 = v20 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    uint64_t v24 = *(void *)(v14 + 72);
    int v25 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    v40[1] = v22;
    uint64_t v41 = v10;
    uint64_t v46 = (unsigned int (**)(void *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v47 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v10 + 56);
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    uint64_t v27 = (uint64_t)v44;
    do
    {
      sub_100034170(v23, (uint64_t)v17, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem);
      sub_10003B694((uint64_t)v17 + *(int *)(v48 + 20), v27, (uint64_t *)&unk_10079CFC0);
      if ((*v25)(v27, 1, v50) == 1)
      {
        sub_10003B6F8(v27, (uint64_t *)&unk_10079CFC0);
        uint64_t v28 = 1;
      }
      else
      {
        uint64_t v45 = v26;
        uint64_t v29 = v25;
        uint64_t v30 = v24;
        uint64_t v31 = v9;
        uint64_t v32 = v43;
        sub_1000F104C(v27, v43, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        uint64_t v33 = *v17;
        sub_100034170(v32, (uint64_t)v8 + *(int *)(v31 + 20), type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        void *v8 = v33;
        id v34 = v33;
        uint64_t v35 = v32;
        uint64_t v9 = v31;
        uint64_t v24 = v30;
        int v25 = v29;
        uint64_t v26 = v45;
        sub_100034504(v35, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
        uint64_t v28 = 0;
      }
      (*v47)(v8, v28, 1, v9);
      sub_100034504((uint64_t)v17, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem);
      if ((*v46)(v8, 1, v9) == 1)
      {
        sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_10078C830);
      }
      else
      {
        uint64_t v36 = v42;
        sub_1000F104C((uint64_t)v8, v42, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
        sub_1000F104C(v36, v49, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = (void *)sub_100570490(0, v26[2] + 1, 1, (unint64_t)v26);
        }
        unint64_t v38 = v26[2];
        unint64_t v37 = v26[3];
        if (v38 >= v37 >> 1) {
          uint64_t v26 = (void *)sub_100570490(v37 > 1, v38 + 1, 1, (unint64_t)v26);
        }
        v26[2] = v38 + 1;
        sub_1000F104C(v49, (uint64_t)v26+ ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80))+ *(void *)(v41 + 72) * v38, type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem);
        uint64_t v27 = (uint64_t)v44;
      }
      v23 += v24;
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v26;
}

uint64_t sub_1000EEDD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v124 = a1;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078C840);
  __chkstk_darwin(v2 - 8);
  uint64_t v109 = (char *)&v98 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = sub_10003B754(&qword_100787098);
  uint64_t v107 = *(void *)(v108 - 8);
  __chkstk_darwin(v108);
  uint64_t v103 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = type metadata accessor for Logger();
  uint64_t v102 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v106 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v104 = (char *)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v115 = (char *)&v98 - v9;
  uint64_t v122 = type metadata accessor for IndexPath();
  uint64_t v120 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v100 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v119 = (char *)&v98 - v12;
  __chkstk_darwin(v13);
  id v112 = (char *)&v98 - v14;
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10078C850);
  __chkstk_darwin(v15 - 8);
  uint64_t v99 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v116 = (char *)&v98 - v18;
  uint64_t v19 = sub_10003B754(&qword_1007870A0);
  uint64_t v117 = *(void *)(v19 - 8);
  uint64_t v118 = v19;
  __chkstk_darwin(v19);
  uint64_t v98 = (uint64_t)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v111 = (uint64_t)&v98 - v22;
  uint64_t v23 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v23);
  int v25 = (char *)&v98 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for TTRUnadjustedIndexPath();
  __chkstk_darwin(v26 - 8);
  uint64_t v110 = (char *)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v101 = (uint64_t)&v98 - v29;
  __chkstk_darwin(v30);
  uint64_t v121 = (uint64_t)&v98 - v31;
  __chkstk_darwin(v32);
  uint64_t v114 = (uint64_t)&v98 - v33;
  uint64_t v34 = type metadata accessor for TTRAdjustedIndexPath();
  __chkstk_darwin(v34 - 8);
  uint64_t v113 = (uint64_t)&v98 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v36);
  unint64_t v38 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_10003B754((uint64_t *)&unk_10078C860);
  __chkstk_darwin(v39 - 8);
  uint64_t v41 = (char *)&v98 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v98 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = v1;
  sub_10003B694(v1 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_lastDropProposal, (uint64_t)v41, (uint64_t *)&unk_10078C860);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42) == 1)
  {
    uint64_t v46 = (uint64_t *)&unk_10078C860;
LABEL_3:
    uint64_t v47 = (uint64_t)v41;
LABEL_4:
    sub_10003B6F8(v47, v46);
LABEL_5:
    sub_10003B754(&qword_10079F4C0);
    return swift_storeEnumTagMultiPayload();
  }
  sub_1000F104C((uint64_t)v41, (uint64_t)v45, type metadata accessor for TTRIRemindersBoardDropProposal);
  sub_100034170((uint64_t)&v45[*(int *)(v42 + 24)], (uint64_t)v38, type metadata accessor for TTRICollectionViewDropIntent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v50 = (uint64_t)v45;
  if (!EnumCaseMultiPayload)
  {
    uint64_t v71 = v113;
    sub_1000F104C((uint64_t)v38, v113, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    uint64_t v72 = *((void *)v45 + 1);
    uint64_t v73 = (uint64_t)v45;
    sub_100034170(v71, (uint64_t)v25, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    swift_storeEnumTagMultiPayload();
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v74 = v114;
    sub_1006046FC((uint64_t)v25, v72, v114);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    sub_100034504((uint64_t)v25, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
    uint64_t v75 = *(void *)(v73 + 16);
    uint64_t v126 = *(void *)(v73 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1005698E8(v75);
    sub_10003B754((uint64_t *)&unk_10078C870);
    type metadata accessor for TTRRemindersListViewModel.ItemID();
    sub_100055BCC();
    sub_1000F10B4((unint64_t *)&qword_10078C880, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    Sequence.mapToSet<A>(_:)();
    swift_bridgeObjectRelease();
    uint64_t v41 = v116;
    TTRBoardColumnDiffableDataSource.itemLocation(forInsertingAt:localItemIDsToBeMoved:)();
    swift_bridgeObjectRelease();
    sub_100034504(v74, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    sub_100034504(v71, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    sub_100034504(v73, type metadata accessor for TTRIRemindersBoardDropProposal);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v41, 1, v118) != 1)
    {
      uint64_t v93 = v111;
      sub_100028C3C((uint64_t)v41, v111, &qword_1007870A0);
      sub_100028C3C(v93, v124, &qword_1007870A0);
      sub_10003B754(&qword_10079F4C0);
      return swift_storeEnumTagMultiPayload();
    }
    uint64_t v46 = (uint64_t *)&unk_10078C850;
    goto LABEL_3;
  }
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v76 = v123;
    uint64_t v77 = *(void **)(v123 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator);
    id v78 = [v77 proposal];
    id v79 = [v78 operation];

    if ((unint64_t)v79 < 2 || v79 == (id)3 || (char v80 = v119, v79 != (id)2))
    {
      sub_100034504((uint64_t)v45, type metadata accessor for TTRIRemindersBoardDropProposal);
      goto LABEL_5;
    }
    id v81 = [v77 destinationIndexPath];
    if (v81)
    {
      uint64_t v82 = v81;
      static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v83 = v120;
      uint64_t v84 = *(void (**)(char *, char *, uint64_t))(v120 + 32);
      uint64_t v85 = v104;
      uint64_t v86 = v122;
      v84(v104, v80, v122);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v83 + 56))(v85, 0, 1, v86);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v85, 1, v86) != 1)
      {
        uint64_t v87 = v100;
        v84(v100, v85, v86);
        uint64_t v123 = *(void *)(v76 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_column);
        (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v87, v86);
        uint64_t v88 = (uint64_t)v110;
        TTRUnadjustedIndexPath.init(_:)();
        uint64_t v126 = *(void *)(v50 + 8);
        swift_bridgeObjectRetain();
        uint64_t v89 = swift_bridgeObjectRetain();
        sub_1005698E8(v89);
        sub_10003B754((uint64_t *)&unk_10078C870);
        type metadata accessor for TTRRemindersListViewModel.ItemID();
        sub_100055BCC();
        sub_1000F10B4((unint64_t *)&qword_10078C880, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        Sequence.mapToSet<A>(_:)();
        swift_bridgeObjectRelease();
        uint64_t v90 = (uint64_t)v99;
        TTRBoardColumnDiffableDataSource.itemLocation(forInsertingAt:localItemIDsToBeMoved:)();
        swift_bridgeObjectRelease();
        sub_100034504(v88, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v87, v86);
        sub_100034504(v50, type metadata accessor for TTRIRemindersBoardDropProposal);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v117 + 48))(v90, 1, v118) != 1)
        {
          uint64_t v97 = v98;
          sub_100028C3C(v90, v98, &qword_1007870A0);
          sub_100028C3C(v97, v124, &qword_1007870A0);
          sub_10003B754(&qword_10079F4C0);
          return swift_storeEnumTagMultiPayload();
        }
        uint64_t v91 = (uint64_t *)&unk_10078C850;
        uint64_t v92 = v90;
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v85 = v104;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v104, 1, 1, v122);
    }
    sub_100034504(v50, type metadata accessor for TTRIRemindersBoardDropProposal);
    uint64_t v91 = &qword_10078E8F0;
    uint64_t v92 = (uint64_t)v85;
LABEL_37:
    sub_10003B6F8(v92, v91);
    sub_10003B754(&qword_10079F4C0);
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v51 = v121;
  sub_1000F104C((uint64_t)v38, v121, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
  id v52 = [*(id *)(v123 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator) destinationIndexPath];
  if (!v52)
  {
    uint64_t v57 = v115;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v120 + 56))(v115, 1, 1, v122);
    goto LABEL_28;
  }
  unint64_t v53 = v52;
  uint64_t v54 = v119;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v55 = v120;
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v120 + 32);
  uint64_t v57 = v115;
  uint64_t v58 = v122;
  v56(v115, v54, v122);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v57, 0, 1, v58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v57, 1, v58) == 1)
  {
LABEL_28:
    sub_100034504(v51, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    sub_100034504(v50, type metadata accessor for TTRIRemindersBoardDropProposal);
    uint64_t v46 = &qword_10078E8F0;
    uint64_t v47 = (uint64_t)v57;
    goto LABEL_4;
  }
  uint64_t v59 = v112;
  v56(v112, v57, v58);
  sub_1000F10B4((unint64_t *)&qword_100787548, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) == 0)
  {
    if (qword_100785278 != -1) {
      swift_once();
    }
    uint64_t v60 = v105;
    uint64_t v61 = sub_100018BF8(v105, (uint64_t)qword_10078C710);
    uint64_t v62 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v106, v61, v60);
    uint64_t v63 = v101;
    sub_100034170(v121, v101, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    LODWORD(v118) = v65;
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v117 = v50;
      swift_beginAccess();
      sub_1000F10B4((unint64_t *)&qword_10078C820, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v125 = sub_1000385A8(v67, v68, &v126);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2080;
      uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v125 = sub_1000385A8(v69, v70, &v126);
      uint64_t v58 = v122;
      uint64_t v55 = v120;
      uint64_t v50 = v117;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100034504(v63, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
      _os_log_impl((void *)&_mh_execute_header, v64, (os_log_type_t)v118, "TTRIRemindersBoardDropCommitCoordinator: unexpected dropCoordinator.destinationIndexPath {given: %s, expected: %s}", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      uint64_t v59 = v112;
      swift_slowDealloc();
      uint64_t v54 = v119;
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v62 + 8))(v106, v105);
    }
    else
    {
      sub_100034504(v63, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);

      (*(void (**)(char *, uint64_t))(v62 + 8))(v106, v60);
    }
    swift_beginAccess();
    uint64_t v51 = v121;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 24))(v59, v121, v58);
  }
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v54, v59, v58);
  uint64_t v94 = (uint64_t)v110;
  TTRUnadjustedIndexPath.init(_:)();
  uint64_t v95 = (uint64_t)v109;
  TTRBoardColumnDiffableDataSource.itemLocation(forItemAt:)();
  sub_100034504(v94, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_100034504(v51, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
  sub_100034504(v50, type metadata accessor for TTRIRemindersBoardDropProposal);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48))(v95, 1, v108) == 1)
  {
    sub_10003B6F8(v95, (uint64_t *)&unk_10078C840);
  }
  else
  {
    uint64_t v96 = v103;
    sub_100028C3C(v95, v103, &qword_100787098);
    sub_100028C3C(v96, v124, &qword_100787098);
  }
  sub_10003B754(&qword_10079F4C0);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v59, v58);
}

uint64_t sub_1000F01AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersBoardDragItemSources.ItemInfo(0);
  return sub_100034170(a1 + *(int *)(v4 + 24), a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

void sub_1000F020C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10003B6F8((uint64_t)v10, &qword_10078E8F0);
    if (qword_100785278 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100018BF8(v15, (uint64_t)qword_10078C710);
    sub_100034170(a2, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 136315138;
      uint64_t v19 = TTRRemindersListViewModel.ItemID.description.getter();
      uint64_t v24 = sub_1000385A8(v19, v20, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100034504((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "TTRIRemindersBoardDropCommitCoordinator: row for the given item doesn't exist. {itemID: %s}", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_100034504((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v23 = [v21 dropItem:a1 toItemAtIndexPath:isa];
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

void sub_1000F05D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(*(void *)(v3 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_column)
                 + OBJC_IVAR____TtC9Reminders36TTRIBoardColumnDragAndDropController_collectionView);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [v10 layoutAttributesForItemAtIndexPath:isa];

  if (v12)
  {
    [v12 bounds];

    uint64_t v13 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator);
    Class v23 = IndexPath._bridgeToObjectiveC()().super.isa;
    CGRect.center.getter();
    id v14 = [v13 dropItem:a1 intoItemAtIndexPath:v23];
    swift_unknownObjectRelease();
    Class v15 = v23;
  }
  else
  {
    if (qword_100785278 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100018BF8(v16, (uint64_t)qword_10078C710);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    os_log_type_t v17 = Logger.logObject.getter();
    os_log_type_t v18 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136315138;
      sub_1000F10B4((unint64_t *)&qword_10078C820, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v24 = sub_1000385A8(v20, v21, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRIRemindersBoardDropCommitCoordinator: layout attributes for the item doesn't exist. {indexPath: %s}", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
  }
}

void sub_1000F0974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v4 - 8);
  uint64_t v34 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v35 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v33 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v32 - v15;
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  os_log_type_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v17((uint64_t)v10, 1, v11) == 1)
  {
    uint64_t v32 = v3;
    uint64_t v18 = v37;
    sub_10003B6F8((uint64_t)v10, &qword_10078E8F0);
    uint64_t v20 = (uint64_t)v35;
    uint64_t v19 = v36;
    dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
    if (v17(v20, 1, v11) == 1)
    {
      sub_10003B6F8(v20, &qword_10078E8F0);
      if (qword_100785278 != -1) {
        swift_once();
      }
      uint64_t v21 = type metadata accessor for Logger();
      sub_100018BF8(v21, (uint64_t)qword_10078C710);
      uint64_t v22 = v34;
      sub_100034170(v19, v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      Class v23 = Logger.logObject.getter();
      os_log_type_t v24 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v23, v24))
      {
        uint64_t v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v39 = swift_slowAlloc();
        *(_DWORD *)uint64_t v25 = 136315138;
        uint64_t v26 = TTRRemindersListViewModel.ItemID.description.getter();
        uint64_t v38 = sub_1000385A8(v26, v27, &v39);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_100034504(v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        _os_log_impl((void *)&_mh_execute_header, v23, v24, "TTRIRemindersBoardDropCommitCoordinator: row for the fallbackItemID doesn't exist. {itemID: %s}", v25, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_100034504(v22, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      }
    }
    else
    {
      uint64_t v31 = (uint64_t)v33;
      (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v33, v20, v11);
      sub_1000F05D0(v18, v31);
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v31, v11);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v10, v11);
    uint64_t v28 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dropCoordinator);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v30 = [v28 dropItem:v37 toItemAtIndexPath:isa];
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
  }
}

uint64_t sub_1000F0E14()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_dragAndDropCoordinatorID;
  uint64_t v2 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders39TTRIRemindersBoardDropCommitCoordinator_lastDropProposal, (uint64_t *)&unk_10078C860);

  return swift_deallocClassInstance();
}

uint64_t sub_1000F0EEC()
{
  return type metadata accessor for TTRIRemindersBoardDropCommitCoordinator(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDropCommitCoordinator(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_10078C770);
}

void sub_1000F0F14()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_1000FBB3C(319, (unint64_t *)&unk_10078C780, (void (*)(uint64_t))type metadata accessor for TTRIRemindersBoardDropProposal);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.LocalDropItem(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10078C8F0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDropCommitCoordinator.DropItem(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_10078C980);
}

uint64_t sub_1000F104C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1000F10B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void **sub_1000F10FC(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for UUID();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
    uint64_t v12 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
    uint64_t v13 = v12[5];
    uint64_t v14 = (void **)&v7[v13];
    uint64_t v15 = (void **)&v8[v13];
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v19 = *v15;
      char *v14 = *v15;
      id v20 = v19;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v64 = v7;
      uint64_t v66 = v12;
      uint64_t v21 = *v15;
      char *v14 = *v15;
      uint64_t v22 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      Class v23 = (void **)((char *)v14 + v22);
      os_log_type_t v24 = (void **)((char *)v15 + v22);
      uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v26 = *(void *)(v25 - 8);
      unint64_t v27 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v26 + 48);
      id v28 = v21;
      if (v27(v24, 1, v25))
      {
        uint64_t v29 = sub_10003B754(&qword_10078C890);
        memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
        uint64_t v7 = v64;
        uint64_t v12 = v66;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v34 = *v24;
            NSObject *v23 = *v24;
            id v35 = v34;
            goto LABEL_20;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v33 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v33 - 8) + 16))(v23, v24, v33);
LABEL_20:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v23, v24, *(void *)(v26 + 64));
            break;
        }
        uint64_t v7 = v64;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
        uint64_t v12 = v66;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v31 = *v15;
          char *v14 = *v15;
          id v32 = v31;
          goto LABEL_15;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v30 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v30 - 8) + 16))(v14, v15, v30);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    uint64_t v36 = v12[6];
    uint64_t v37 = &v7[v36];
    uint64_t v38 = &v8[v36];
    uint64_t v39 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
    uint64_t v40 = v12[7];
    uint64_t v41 = (void **)&v7[v40];
    uint64_t v42 = (void **)&v8[v40];
    int v43 = swift_getEnumCaseMultiPayload();
    if (v43 == 2)
    {
      uint64_t v45 = *v42;
      *uint64_t v41 = *v42;
      id v46 = v45;
    }
    else if (v43 == 1)
    {
      os_log_type_t v65 = v8;
      uint64_t v47 = *v42;
      *uint64_t v41 = *v42;
      uint64_t v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v49 = (void **)((char *)v41 + v48);
      uint64_t v50 = (void **)((char *)v42 + v48);
      uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v52 = *(void *)(v51 - 8);
      unint64_t v53 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
      id v54 = v47;
      if (v53(v50, 1, v51))
      {
        uint64_t v55 = sub_10003B754(&qword_10078C890);
        memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
        uint64_t v8 = v65;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v61 = *v50;
            uint64_t v60 = v49;
            *uint64_t v49 = *v50;
            id v62 = v61;
            goto LABEL_40;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v59 = type metadata accessor for Date();
            uint64_t v60 = v49;
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v59 - 8) + 16))(v49, v50, v59);
LABEL_40:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v60 = v49;
            memcpy(v49, v50, *(void *)(v52 + 64));
            break;
        }
        uint64_t v8 = v65;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v52 + 56))(v60, 0, 1, v51);
      }
    }
    else
    {
      if (v43)
      {
        memcpy(v41, v42, *(void *)(*(void *)(v16 - 8) + 64));
LABEL_43:
        v7[v12[8]] = v8[v12[8]];
        return v5;
      }
      uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v57 = *v42;
          *uint64_t v41 = *v42;
          id v58 = v57;
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v56 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v56 - 8) + 16))(v41, v42, v56);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  swift_retain();
  return v5;
}

void sub_1000F1E94(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v7 = (id *)&v4[v6[5]];
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:

      break;
    case 1:

      uint64_t v7 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_8;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            uint64_t v10 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
            break;
          default:
            goto LABEL_9;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_7;
        default:
          goto LABEL_9;
      }
  }
LABEL_9:
  uint64_t v11 = &v4[v6[6]];
  uint64_t v12 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
  uint64_t v13 = (id *)&v4[v6[7]];
  int v14 = swift_getEnumCaseMultiPayload();
  switch(v14)
  {
    case 2:
LABEL_19:
      id v18 = *v13;

      break;
    case 1:

      uint64_t v13 = (id *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v13, 1, v15))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_16:
            uint64_t v16 = type metadata accessor for Date();
            os_log_type_t v17 = *(void (**)(id *, uint64_t))(*(void *)(v16 - 8) + 8);
            v17(v13, v16);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_19;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_16;
        default:
          return;
      }
  }
}

void **sub_1000F22B4(void **a1, void **a2, uint64_t a3)
{
  int v3 = a1;
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  uint64_t v11 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = (void **)&v6[v12];
  int v14 = (void **)&v7[v12];
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    id v18 = *v14;
    *uint64_t v13 = *v14;
    id v19 = v18;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v63 = v7;
    uint64_t v65 = v15;
    uint64_t v67 = v3;
    id v20 = *v14;
    *uint64_t v13 = *v14;
    uint64_t v21 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v22 = (void **)((char *)v13 + v21);
    Class v23 = (void **)((char *)v14 + v21);
    uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v25 + 48);
    id v27 = v20;
    if (v26(v23, 1, v24))
    {
      uint64_t v28 = sub_10003B754(&qword_10078C890);
      memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
      uint64_t v15 = v65;
      int v3 = v67;
      uint64_t v7 = v63;
    }
    else
    {
      uint64_t v29 = v24;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v34 = *v23;
          *uint64_t v22 = *v23;
          id v35 = v34;
          goto LABEL_18;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v33 - 8) + 16))(v22, v23, v33);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v22, v23, *(void *)(v25 + 64));
          break;
      }
      int v3 = v67;
      uint64_t v7 = v63;
      (*(void (**)(void **, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v29);
      uint64_t v15 = v65;
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
      goto LABEL_21;
    }
    uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 8u:
      case 9u:
        uint64_t v31 = *v14;
        *uint64_t v13 = *v14;
        id v32 = v31;
        goto LABEL_13;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v30 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v30 - 8) + 16))(v13, v14, v30);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_21:
  uint64_t v36 = v11[6];
  uint64_t v37 = &v6[v36];
  uint64_t v38 = &v7[v36];
  uint64_t v39 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
  uint64_t v40 = v11[7];
  uint64_t v41 = (void **)&v6[v40];
  uint64_t v42 = (void **)&v7[v40];
  int v43 = swift_getEnumCaseMultiPayload();
  switch(v43)
  {
    case 2:
      uint64_t v45 = *v42;
      *uint64_t v41 = *v42;
      id v46 = v45;
LABEL_41:
      swift_storeEnumTagMultiPayload();
      goto LABEL_42;
    case 1:
      uint64_t v64 = v11;
      uint64_t v66 = v6;
      unint64_t v68 = v3;
      uint64_t v47 = *v42;
      *uint64_t v41 = *v42;
      uint64_t v48 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v49 = (void **)((char *)v41 + v48);
      uint64_t v50 = (void **)((char *)v42 + v48);
      uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v52 = *(void *)(v51 - 8);
      unint64_t v53 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v52 + 48);
      id v54 = v47;
      if (v53(v50, 1, v51))
      {
        uint64_t v55 = sub_10003B754(&qword_10078C890);
        memcpy(v49, v50, *(void *)(*(void *)(v55 - 8) + 64));
        int v3 = v68;
        uint64_t v11 = v64;
      }
      else
      {
        int v3 = v68;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v60 = *v50;
            *uint64_t v49 = *v50;
            id v61 = v60;
            goto LABEL_38;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v59 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v59 - 8) + 16))(v49, v50, v59);
LABEL_38:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v49, v50, *(void *)(v52 + 64));
            break;
        }
        uint64_t v11 = v64;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
      }
      uint64_t v6 = v66;
      goto LABEL_41;
    case 0:
      uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v57 = *v42;
          *uint64_t v41 = *v42;
          id v58 = v57;
          goto LABEL_33;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v56 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v56 - 8) + 16))(v41, v42, v56);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v41, v42, *(void *)(*(void *)(v44 - 8) + 64));
          break;
      }
      goto LABEL_41;
  }
  memcpy(v41, v42, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_42:
  v6[v11[8]] = v7[v11[8]];
  return v3;
}

void **sub_1000F2FF0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  int v14 = (int *)v13;
  if (a1 != a2)
  {
    uint64_t v15 = *(int *)(v13 + 20);
    uint64_t v16 = (void **)&v10[v15];
    uint64_t v17 = (void **)&v11[v15];
    sub_100034504((uint64_t)&v10[v15], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v21 = *v17;
      *uint64_t v16 = *v17;
      id v22 = v21;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v65 = v10;
      unint64_t v68 = v14;
      Class v23 = *v17;
      *uint64_t v16 = *v17;
      uint64_t v24 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      __dst = (void **)((char *)v16 + v24);
      uint64_t v25 = (void **)((char *)v17 + v24);
      uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v27 + 48);
      id v29 = v23;
      if (v28(v25, 1, v26))
      {
        uint64_t v30 = sub_10003B754(&qword_10078C890);
        memcpy(__dst, v25, *(void *)(*(void *)(v30 - 8) + 64));
        int v14 = v68;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v35 = *v25;
            *__dst = *v25;
            id v36 = v35;
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v34 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v34 - 8) + 16))(__dst, v25, v34);
LABEL_19:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(__dst, v25, *(void *)(v27 + 64));
            break;
        }
        int v14 = v68;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      id v10 = v65;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v32 = *v17;
          *uint64_t v16 = *v17;
          id v33 = v32;
          goto LABEL_14;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v31 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v31 - 8) + 16))(v16, v17, v31);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  uint64_t v37 = v14[6];
  uint64_t v38 = &v10[v37];
  uint64_t v39 = &v11[v37];
  uint64_t v40 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24))(v38, v39, v40);
  if (a1 != a2)
  {
    uint64_t v41 = v14[7];
    uint64_t v42 = (void **)&v10[v41];
    int v43 = (void **)&v11[v41];
    sub_100034504((uint64_t)&v10[v41], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v45 = swift_getEnumCaseMultiPayload();
    switch(v45)
    {
      case 2:
        uint64_t v47 = *v43;
        *uint64_t v42 = *v43;
        id v48 = v47;
LABEL_44:
        swift_storeEnumTagMultiPayload();
        goto LABEL_45;
      case 1:
        uint64_t v67 = v11;
        uint64_t v49 = *v43;
        *uint64_t v42 = *v43;
        uint64_t v50 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v66 = (void **)((char *)v42 + v50);
        uint64_t v51 = (void **)((char *)v43 + v50);
        uint64_t v52 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v53 = *(void *)(v52 - 8);
        id v54 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v53 + 48);
        id v55 = v49;
        if (v54(v51, 1, v52))
        {
          uint64_t v56 = sub_10003B754(&qword_10078C890);
          memcpy(v66, v51, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v61 = *v51;
              *uint64_t v66 = *v51;
              id v62 = v61;
              goto LABEL_41;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v60 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v60 - 8) + 16))(v66, v51, v60);
LABEL_41:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v66, v51, *(void *)(v53 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v53 + 56))(v66, 0, 1, v52);
        }
        uint64_t v11 = v67;
        goto LABEL_44;
      case 0:
        uint64_t v46 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v58 = *v43;
            *uint64_t v42 = *v43;
            id v59 = v58;
            goto LABEL_36;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v57 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v57 - 8) + 16))(v42, v43, v57);
LABEL_36:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
            break;
        }
        goto LABEL_44;
    }
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
LABEL_45:
  v10[v14[8]] = v11[v14[8]];
  return a1;
}

void *sub_1000F3D80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  id v8 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v9 = v8[5];
  id v10 = &v5[v9];
  uint64_t v11 = &v6[v9];
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *(void *)id v10 = *(void *)v11;
    uint64_t v15 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v16 = &v10[v15];
    uint64_t v17 = &v11[v15];
    uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v19 = *(void *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      uint64_t v20 = sub_10003B754(&qword_10078C890);
      memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v22 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v16, v17, v22);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v16, v17, *(void *)(v19 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v21 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v10, v11, v21);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v23 = v8[6];
  uint64_t v24 = &v5[v23];
  uint64_t v25 = &v6[v23];
  uint64_t v26 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v24, v25, v26);
  uint64_t v27 = v8[7];
  uint64_t v28 = &v5[v27];
  id v29 = &v6[v27];
  int v30 = swift_getEnumCaseMultiPayload();
  if (v30 == 1)
  {
    *(void *)uint64_t v28 = *(void *)v29;
    uint64_t v32 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    id v33 = &v28[v32];
    uint64_t v34 = &v29[v32];
    uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
    {
      uint64_t v37 = sub_10003B754(&qword_10078C890);
      memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v39 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 32))(v33, v34, v39);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v33, v34, *(void *)(v36 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    goto LABEL_28;
  }
  if (!v30)
  {
    uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v38 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v28, v29, v38);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v28, v29, *(void *)(*(void *)(v31 - 8) + 64));
        break;
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    goto LABEL_29;
  }
  memcpy(v28, v29, *(void *)(*(void *)(v12 - 8) + 64));
LABEL_29:
  v5[v8[8]] = v6[v8[8]];
  return a1;
}

void **sub_1000F488C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v12 = (int *)v11;
  if (a1 != a2)
  {
    uint64_t v13 = *(int *)(v11 + 20);
    uint64_t v14 = &v8[v13];
    uint64_t v15 = &v9[v13];
    sub_100034504((uint64_t)&v8[v13], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v52 = v12;
      *(void *)uint64_t v14 = *(void *)v15;
      uint64_t v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = sub_10003B754(&qword_10078C890);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        uint64_t v12 = v52;
      }
      else
      {
        uint64_t v51 = v23;
        uint64_t v25 = v22;
        uint64_t v12 = v52;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v30 = type metadata accessor for Date();
            uint64_t v31 = v21;
            uint64_t v28 = v20;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v20, v31, v30);
            uint64_t v29 = v25;
            swift_storeEnumTagMultiPayload();
            break;
          default:
            uint64_t v27 = v21;
            uint64_t v28 = v20;
            memcpy(v20, v27, *(void *)(v51 + 64));
            uint64_t v29 = v25;
            uint64_t v12 = v52;
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v28, 0, 1, v29);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v26 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v14, v15, v26);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  uint64_t v32 = v12[6];
  id v33 = &v8[v32];
  uint64_t v34 = &v9[v32];
  uint64_t v35 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
  if (a1 != a2)
  {
    uint64_t v36 = v12[7];
    uint64_t v37 = &v8[v36];
    uint64_t v38 = &v9[v36];
    sub_100034504((uint64_t)&v8[v36], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v40 = swift_getEnumCaseMultiPayload();
    if (v40 == 1)
    {
      *(void *)uint64_t v37 = *(void *)v38;
      uint64_t v42 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      int v43 = &v37[v42];
      uint64_t v44 = &v38[v42];
      uint64_t v45 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        uint64_t v47 = sub_10003B754(&qword_10078C890);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v49 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v43, v44, v49);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v43, v44, *(void *)(v46 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      goto LABEL_30;
    }
    if (!v40)
    {
      uint64_t v41 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v48 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v37, v38, v48);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
          break;
      }
LABEL_30:
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
    }
    memcpy(v37, v38, *(void *)(*(void *)(v39 - 8) + 64));
  }
LABEL_31:
  v8[v12[8]] = v9[v12[8]];
  return a1;
}

uint64_t sub_1000F5450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000F5464);
}

uint64_t sub_1000F5464(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000F5514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000F5528);
}

void *sub_1000F5528(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1000F55D0()
{
  uint64_t result = type metadata accessor for TTRIRemindersBoardDragItemUserInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_1000F566C(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, int *))(v12 + 48);
    uint64_t v14 = v4;
    if (v13(v10, 1, v11))
    {
      uint64_t v15 = sub_10003B754((uint64_t *)&unk_10079CFC0);
      memcpy(v9, v10, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_47:
      *(_OWORD *)((char *)v7 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
      return v7;
    }
    uint64_t v77 = v12;
    uint64_t v16 = type metadata accessor for UUID();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v9, v10, v16);
    uint64_t v17 = v11[5];
    uint64_t v18 = (void **)&v9[v17];
    uint64_t v19 = (void **)&v10[v17];
    uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v23 = *v19;
      *uint64_t v18 = *v19;
      id v24 = v23;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      unint64_t v70 = v11;
      uint64_t v74 = v9;
      uint64_t v76 = v20;
      uint64_t v25 = *v19;
      *uint64_t v18 = *v19;
      uint64_t v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      __dst = (void **)((char *)v18 + v26);
      uint64_t v27 = (void **)((char *)v19 + v26);
      uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v29 = *(void *)(v28 - 8);
      uint64_t v30 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v29 + 48);
      id v31 = v25;
      if (v30(v27, 1, v28))
      {
        uint64_t v32 = sub_10003B754(&qword_10078C890);
        memcpy(__dst, v27, *(void *)(*(void *)(v32 - 8) + 64));
        uint64_t v9 = v74;
        uint64_t v20 = v76;
        uint64_t v11 = v70;
      }
      else
      {
        uint64_t v20 = v76;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v33 = *v27;
            *__dst = *v27;
            id v34 = v33;
            goto LABEL_22;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v40 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v40 - 8) + 16))(__dst, v27, v40);
LABEL_22:
            swift_storeEnumTagMultiPayload();
            uint64_t v38 = v28;
            uint64_t v9 = v74;
            uint64_t v39 = v29;
            break;
          default:
            uint64_t v38 = v28;
            memcpy(__dst, v27, *(void *)(v29 + 64));
            uint64_t v39 = v29;
            uint64_t v9 = v74;
            break;
        }
        uint64_t v11 = v70;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
        goto LABEL_25;
      }
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v36 = *v19;
          *uint64_t v18 = *v19;
          id v37 = v36;
          goto LABEL_18;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v35 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v35 - 8) + 16))(v18, v19, v35);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_25:
    uint64_t v41 = v11[6];
    uint64_t v42 = &v9[v41];
    int v43 = &v10[v41];
    uint64_t v44 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v44 - 8) + 16))(v42, v43, v44);
    uint64_t v45 = v11[7];
    uint64_t v46 = (void **)&v9[v45];
    uint64_t v47 = (void **)&v10[v45];
    int v48 = swift_getEnumCaseMultiPayload();
    switch(v48)
    {
      case 2:
        uint64_t v50 = *v47;
        *uint64_t v46 = *v47;
        id v51 = v50;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v75 = v9;
        uint64_t v71 = v10;
        uint64_t v52 = *v47;
        *uint64_t v46 = *v47;
        uint64_t v53 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dsta = (void **)((char *)v46 + v53);
        id v54 = (void **)((char *)v47 + v53);
        uint64_t v55 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v56 = *(void *)(v55 - 8);
        uint64_t v57 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v56 + 48);
        id v58 = v52;
        if (v57(v54, 1, v55))
        {
          uint64_t v59 = sub_10003B754(&qword_10078C890);
          memcpy(__dsta, v54, *(void *)(*(void *)(v59 - 8) + 64));
          uint64_t v60 = v77;
          uint64_t v10 = v71;
          uint64_t v9 = v75;
        }
        else
        {
          uint64_t v60 = v77;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v61 = *v54;
              *__dsta = *v54;
              id v62 = v61;
              goto LABEL_43;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v68 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v68 - 8) + 16))(__dsta, v54, v68);
LABEL_43:
              swift_storeEnumTagMultiPayload();
              uint64_t v66 = v55;
              uint64_t v10 = v71;
              uint64_t v67 = v56;
              break;
            default:
              uint64_t v66 = v55;
              memcpy(__dsta, v54, *(void *)(v56 + 64));
              uint64_t v67 = v56;
              uint64_t v10 = v71;
              break;
          }
          uint64_t v9 = v75;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v67 + 56))(__dsta, 0, 1, v66);
        }
        goto LABEL_45;
      case 0:
        uint64_t v49 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v64 = *v47;
            *uint64_t v46 = *v47;
            id v65 = v64;
            goto LABEL_39;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v63 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v63 - 8) + 16))(v46, v47, v63);
LABEL_39:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v46, v47, *(void *)(*(void *)(v49 - 8) + 64));
            break;
        }
        uint64_t v60 = v77;
LABEL_45:
        swift_storeEnumTagMultiPayload();
        goto LABEL_46;
      default:
        memcpy(v46, v47, *(void *)(*(void *)(v20 - 8) + 64));
        break;
    }
    uint64_t v60 = v77;
LABEL_46:
    v9[v11[8]] = v10[v11[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v60 + 56))(v9, 0, 1, v11);
    goto LABEL_47;
  }
  uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
  swift_retain();
  return v7;
}

void sub_1000F6524(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  if (!(*(unsigned int (**)(char *, uint64_t, int *))(*((void *)v5 - 1) + 48))(v4, 1, v5))
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v4, v6);
    uint64_t v7 = (id *)&v4[v5[5]];
    type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
LABEL_10:

        break;
      case 1:

        uint64_t v7 = (id *)((char *)v7 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_10;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_9:
              uint64_t v10 = type metadata accessor for Date();
              (*(void (**)(id *, uint64_t))(*(void *)(v10 - 8) + 8))(v7, v10);
              break;
            default:
              goto LABEL_11;
          }
        }
        break;
      case 0:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_10;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_9;
          default:
            goto LABEL_11;
        }
    }
LABEL_11:
    uint64_t v11 = &v4[v5[6]];
    uint64_t v12 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    uint64_t v13 = (id *)&v4[v5[7]];
    int v14 = swift_getEnumCaseMultiPayload();
    switch(v14)
    {
      case 2:
LABEL_20:
        id v18 = *v13;

        break;
      case 1:

        uint64_t v13 = (id *)((char *)v13 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
        uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v13, 1, v15))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              goto LABEL_20;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
LABEL_17:
              uint64_t v16 = type metadata accessor for Date();
              uint64_t v17 = *(void (**)(id *, uint64_t))(*(void *)(v16 - 8) + 8);
              v17(v13, v16);
              break;
            default:
              return;
          }
        }
        break;
      case 0:
        type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_20;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_17;
          default:
            return;
        }
    }
  }
}

void **sub_1000F697C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v3 = a3;
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(unsigned int (**)(unsigned char *, uint64_t, int *))(v11 + 48);
  id v13 = v6;
  if (!v12(v9, 1, v10))
  {
    uint64_t v15 = type metadata accessor for UUID();
    (*(void (**)(char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 16))(v8, v9, v15);
    uint64_t v16 = v10[5];
    uint64_t v17 = (void **)&v8[v16];
    id v18 = (void **)&v9[v16];
    uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v78 = v3;
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v22 = *v18;
      *uint64_t v17 = *v18;
      id v23 = v22;
    }
    else
    {
      uint64_t v76 = v17;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v69 = v4;
        uint64_t v73 = v11;
        uint64_t v75 = v19;
        id v24 = *v18;
        *uint64_t v76 = *v18;
        uint64_t v25 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dst = (void **)((char *)v76 + v25);
        uint64_t v26 = (void **)((char *)v18 + v25);
        uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v28 = *(void *)(v27 - 8);
        uint64_t v29 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v28 + 48);
        id v30 = v24;
        if (v29(v26, 1, v27))
        {
          uint64_t v31 = sub_10003B754(&qword_10078C890);
          memcpy(__dst, v26, *(void *)(*(void *)(v31 - 8) + 64));
          uint64_t v19 = v75;
          uint64_t v11 = v73;
          uint64_t v4 = v69;
        }
        else
        {
          uint64_t v19 = v75;
          uint64_t v32 = v27;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v33 = *v26;
              id v34 = __dst;
              *__dst = *v26;
              id v35 = v33;
              goto LABEL_20;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v40 = type metadata accessor for Date();
              id v34 = __dst;
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v40 - 8) + 16))(__dst, v26, v40);
LABEL_20:
              swift_storeEnumTagMultiPayload();
              uint64_t v11 = v73;
              uint64_t v39 = v28;
              break;
            default:
              id v34 = __dst;
              memcpy(__dst, v26, *(void *)(v28 + 64));
              uint64_t v39 = v28;
              uint64_t v11 = v73;
              break;
          }
          uint64_t v4 = v69;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v39 + 56))(v34, 0, 1, v32);
        }
      }
      else
      {
        if (EnumCaseMultiPayload)
        {
          memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
          goto LABEL_23;
        }
        uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v37 = *v18;
            *uint64_t v76 = *v18;
            id v38 = v37;
            goto LABEL_16;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v36 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v36 - 8) + 16))(v76, v18, v36);
LABEL_16:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v76, v18, *(void *)(*(void *)(v21 - 8) + 64));
            break;
        }
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    uint64_t v41 = v19;
    uint64_t v42 = v10[6];
    int v43 = &v8[v42];
    uint64_t v44 = &v9[v42];
    uint64_t v45 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
    uint64_t v46 = v10[7];
    uint64_t v47 = (void **)&v8[v46];
    int v48 = (void **)&v9[v46];
    int v49 = swift_getEnumCaseMultiPayload();
    uint64_t v50 = v41;
    if (v49 == 2)
    {
      uint64_t v52 = *v48;
      void *v47 = *v48;
      id v53 = v52;
      swift_storeEnumTagMultiPayload();
      uint64_t v3 = v78;
    }
    else
    {
      uint64_t v77 = v47;
      if (v49 == 1)
      {
        __dsta = v8;
        uint64_t v74 = v11;
        id v54 = *v48;
        void *v47 = *v48;
        uint64_t v55 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        unint64_t v70 = (void **)((char *)v47 + v55);
        uint64_t v56 = (void **)((char *)v48 + v55);
        uint64_t v57 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v58 = *(void *)(v57 - 8);
        uint64_t v59 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v58 + 48);
        id v60 = v54;
        if (v59(v56, 1, v57))
        {
          uint64_t v61 = sub_10003B754(&qword_10078C890);
          memcpy(v70, v56, *(void *)(*(void *)(v61 - 8) + 64));
          uint64_t v3 = v78;
          uint64_t v8 = __dsta;
          uint64_t v11 = v74;
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v62 = *v56;
              int *v70 = *v56;
              id v63 = v62;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v67 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v67 - 8) + 16))(v70, v56, v67);
LABEL_40:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v70, v56, *(void *)(v58 + 64));
              break;
          }
          uint64_t v3 = v78;
          uint64_t v11 = v74;
          (*(void (**)(void **, void, uint64_t, uint64_t))(v58 + 56))(v70, 0, 1, v57);
          uint64_t v8 = __dsta;
        }
        goto LABEL_42;
      }
      uint64_t v3 = v78;
      if (!v49)
      {
        uint64_t v51 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v65 = *v48;
            *uint64_t v77 = *v48;
            id v66 = v65;
            goto LABEL_36;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v64 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v64 - 8) + 16))(v77, v48, v64);
LABEL_36:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v77, v48, *(void *)(*(void *)(v51 - 8) + 64));
            break;
        }
LABEL_42:
        swift_storeEnumTagMultiPayload();
        goto LABEL_43;
      }
      memcpy(v47, v48, *(void *)(*(void *)(v50 - 8) + 64));
    }
LABEL_43:
    v8[v10[8]] = v9[v10[8]];
    (*(void (**)(char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    goto LABEL_44;
  }
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
LABEL_44:
  *(_OWORD *)((char *)a1 + *(int *)(v3 + 24)) = *(_OWORD *)((char *)v4 + *(int *)(v3 + 24));
  return a1;
}

void **sub_1000F783C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)v4 + v9;
  uint64_t v12 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (v16)
    {
      sub_100034504((uint64_t)v10, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
      goto LABEL_9;
    }
    uint64_t v25 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 24))(v10, v11, v25);
    uint64_t v133 = a3;
    if (a1 == v4)
    {
LABEL_70:
      uint64_t v92 = v12[6];
      uint64_t v93 = &v10[v92];
      uint64_t v94 = &v11[v92];
      uint64_t v95 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v95 - 8) + 24))(v93, v94, v95);
      if (a1 != v4)
      {
        uint64_t v96 = v12[7];
        uint64_t v97 = (void **)&v10[v96];
        uint64_t v98 = (void **)&v11[v96];
        sub_100034504((uint64_t)&v10[v96], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v99 = type metadata accessor for TTRRemindersListViewModel.ItemID();
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            uint64_t v102 = *v98;
            *uint64_t v97 = *v98;
            id v103 = v102;
            swift_storeEnumTagMultiPayload();
            break;
          case 1:
            uint64_t v104 = *v98;
            *uint64_t v97 = *v98;
            uint64_t v105 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
            __dstc = (void **)((char *)v97 + v105);
            uint64_t v124 = (void **)((char *)v98 + v105);
            uint64_t v106 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            uint64_t v107 = *(void *)(v106 - 8);
            uint64_t v108 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v107 + 48);
            id v109 = v104;
            if (v108(v124, 1, v106))
            {
              uint64_t v110 = sub_10003B754(&qword_10078C890);
              memcpy(__dstc, v124, *(void *)(*(void *)(v110 - 8) + 64));
              a3 = v133;
            }
            else
            {
              a3 = v133;
              switch(swift_getEnumCaseMultiPayload())
              {
                case 1u:
                case 8u:
                case 9u:
                  id v115 = *v124;
                  *__dstc = *v124;
                  id v116 = v115;
                  goto LABEL_89;
                case 2u:
                case 3u:
                case 4u:
                case 5u:
                case 6u:
                  uint64_t v114 = type metadata accessor for Date();
                  (*(void (**)(void **, void **, uint64_t))(*(void *)(v114 - 8) + 16))(__dstc, v124, v114);
LABEL_89:
                  swift_storeEnumTagMultiPayload();
                  break;
                default:
                  memcpy(__dstc, v124, *(void *)(v107 + 64));
                  break;
              }
              (*(void (**)(void **, void, uint64_t, uint64_t))(v107 + 56))(__dstc, 0, 1, v106);
            }
            goto LABEL_91;
          case 0:
            uint64_t v101 = type metadata accessor for TTRRemindersListViewModel.SectionID();
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 8u:
              case 9u:
                id v112 = *v98;
                *uint64_t v97 = *v98;
                id v113 = v112;
                goto LABEL_84;
              case 2u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
                uint64_t v111 = type metadata accessor for Date();
                (*(void (**)(void **, void **, uint64_t))(*(void *)(v111 - 8) + 16))(v97, v98, v111);
LABEL_84:
                swift_storeEnumTagMultiPayload();
                break;
              default:
                memcpy(v97, v98, *(void *)(*(void *)(v101 - 8) + 64));
                break;
            }
            a3 = v133;
LABEL_91:
            swift_storeEnumTagMultiPayload();
            goto LABEL_92;
          default:
            memcpy(v97, v98, *(void *)(*(void *)(v99 - 8) + 64));
            break;
        }
        a3 = v133;
      }
LABEL_92:
      v10[v12[8]] = v11[v12[8]];
      goto LABEL_93;
    }
    uint64_t v26 = v12[5];
    uint64_t v27 = (void **)&v10[v26];
    uint64_t v28 = (void **)&v11[v26];
    sub_100034504((uint64_t)&v10[v26], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v30 = swift_getEnumCaseMultiPayload();
    switch(v30)
    {
      case 2:
        uint64_t v42 = *v28;
        *uint64_t v27 = *v28;
        id v43 = v42;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v44 = *v28;
        *uint64_t v27 = *v28;
        uint64_t v45 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dsta = (void **)((char *)v27 + v45);
        uint64_t v123 = (void **)((char *)v28 + v45);
        uint64_t v46 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v47 = *(void *)(v46 - 8);
        int v48 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v47 + 48);
        id v49 = v44;
        if (v48(v123, 1, v46))
        {
          uint64_t v50 = sub_10003B754(&qword_10078C890);
          memcpy(__dsta, v123, *(void *)(*(void *)(v50 - 8) + 64));
          a3 = v133;
        }
        else
        {
          a3 = v133;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v90 = *v123;
              char *__dsta = *v123;
              id v91 = v90;
              goto LABEL_67;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v89 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v89 - 8) + 16))(__dsta, v123, v89);
LABEL_67:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dsta, v123, *(void *)(v47 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v47 + 56))(__dsta, 0, 1, v46);
        }
        goto LABEL_69;
      case 0:
        uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v55 = *v28;
            *uint64_t v27 = *v28;
            id v56 = v55;
            goto LABEL_34;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v54 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v54 - 8) + 16))(v27, v28, v54);
LABEL_34:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
            break;
        }
        a3 = v133;
LABEL_69:
        swift_storeEnumTagMultiPayload();
        goto LABEL_70;
      default:
        memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
        break;
    }
    a3 = v133;
    goto LABEL_70;
  }
  if (!v16)
  {
    uint64_t v132 = a3;
    uint64_t v17 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v17 - 8) + 16))(v10, v11, v17);
    uint64_t v18 = v12[5];
    uint64_t v19 = (void **)&v10[v18];
    uint64_t v20 = (void **)&v11[v18];
    uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v22 = swift_getEnumCaseMultiPayload();
    if (v22 == 2)
    {
      uint64_t v32 = *v20;
      void *v19 = *v20;
      id v33 = v32;
    }
    else if (v22 == 1)
    {
      uint64_t v121 = v10;
      unsigned __int8 v129 = v4;
      uint64_t v131 = v21;
      id v34 = *v20;
      void *v19 = *v20;
      uint64_t v35 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      __dst = (void **)((char *)v19 + v35);
      uint64_t v36 = (void **)((char *)v20 + v35);
      uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v38 = *(void *)(v37 - 8);
      uint64_t v39 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v38 + 48);
      id v40 = v34;
      if (v39(v36, 1, v37))
      {
        uint64_t v41 = sub_10003B754(&qword_10078C890);
        memcpy(__dst, v36, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v4 = v129;
        uint64_t v21 = v131;
        uint64_t v10 = v121;
      }
      else
      {
        uint64_t v21 = v131;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v60 = *v36;
            *__dst = *v36;
            id v61 = v60;
            goto LABEL_39;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v57 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v57 - 8) + 16))(__dst, v36, v57);
LABEL_39:
            swift_storeEnumTagMultiPayload();
            uint64_t v58 = v37;
            uint64_t v4 = v129;
            uint64_t v59 = v38;
            break;
          default:
            uint64_t v58 = v37;
            memcpy(__dst, v36, *(void *)(v38 + 64));
            uint64_t v59 = v38;
            uint64_t v4 = v129;
            break;
        }
        uint64_t v10 = v121;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v59 + 56))(__dst, 0, 1, v58);
      }
    }
    else
    {
      if (v22)
      {
        memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
        goto LABEL_42;
      }
      uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v52 = *v20;
          void *v19 = *v20;
          id v53 = v52;
          goto LABEL_29;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v51 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(v19, v20, v51);
LABEL_29:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_42:
    uint64_t v62 = v12[6];
    id v63 = &v10[v62];
    uint64_t v64 = &v11[v62];
    uint64_t v65 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v65 - 8) + 16))(v63, v64, v65);
    uint64_t v66 = v12[7];
    uint64_t v67 = (void **)&v10[v66];
    uint64_t v68 = (void **)&v11[v66];
    int v69 = swift_getEnumCaseMultiPayload();
    switch(v69)
    {
      case 2:
        uint64_t v71 = *v68;
        *uint64_t v67 = *v68;
        id v72 = v71;
        swift_storeEnumTagMultiPayload();
        break;
      case 1:
        uint64_t v130 = v4;
        uint64_t v122 = v11;
        uint64_t v73 = *v68;
        *uint64_t v67 = *v68;
        uint64_t v74 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dstb = (void **)((char *)v67 + v74);
        uint64_t v75 = (void **)((char *)v68 + v74);
        uint64_t v76 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v77 = *(void *)(v76 - 8);
        uint64_t v78 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v77 + 48);
        id v79 = v73;
        char v80 = v75;
        if (v78(v75, 1, v76))
        {
          uint64_t v81 = sub_10003B754(&qword_10078C890);
          memcpy(__dstb, v75, *(void *)(*(void *)(v81 - 8) + 64));
          a3 = v132;
          uint64_t v11 = v122;
          uint64_t v4 = v130;
        }
        else
        {
          a3 = v132;
          uint64_t v4 = v130;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v87 = *v80;
              *__dstb = *v80;
              id v88 = v87;
              goto LABEL_60;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v85 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v85 - 8) + 16))(__dstb, v80, v85);
LABEL_60:
              swift_storeEnumTagMultiPayload();
              uint64_t v11 = v122;
              uint64_t v86 = v77;
              break;
            default:
              memcpy(__dstb, v80, *(void *)(v77 + 64));
              uint64_t v86 = v77;
              uint64_t v11 = v122;
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v86 + 56))(__dstb, 0, 1, v76);
        }
        goto LABEL_62;
      case 0:
        uint64_t v70 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v83 = *v68;
            *uint64_t v67 = *v68;
            id v84 = v83;
            goto LABEL_55;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v82 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v82 - 8) + 16))(v67, v68, v82);
LABEL_55:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v67, v68, *(void *)(*(void *)(v70 - 8) + 64));
            break;
        }
        a3 = v132;
LABEL_62:
        swift_storeEnumTagMultiPayload();
        goto LABEL_63;
      default:
        memcpy(v67, v68, *(void *)(*(void *)(v21 - 8) + 64));
        break;
    }
    a3 = v132;
LABEL_63:
    v10[v12[8]] = v11[v12[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
    goto LABEL_93;
  }
LABEL_9:
  uint64_t v24 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  memcpy(v10, v11, *(void *)(*(void *)(v24 - 8) + 64));
LABEL_93:
  uint64_t v117 = *(int *)(a3 + 24);
  uint64_t v118 = (void **)((char *)a1 + v117);
  uint64_t v119 = (void **)((char *)v4 + v117);
  *uint64_t v118 = *v119;
  v118[1] = v119[1];
  return a1;
}

void *sub_1000F9434(void *a1, void *a2, uint64_t a3)
{
  uint64_t v3 = a3;
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v10 = *((void *)v9 - 1);
  if (!(*(unsigned int (**)(unsigned char *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v12 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(v7, v8, v12);
    uint64_t v13 = v9[5];
    uint64_t v14 = &v7[v13];
    int v15 = &v8[v13];
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v45 = v3;
    uint64_t v46 = v16;
    if (EnumCaseMultiPayload == 1)
    {
      void *v14 = *v15;
      uint64_t v19 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v20 = (char *)v14 + v19;
      uint64_t v21 = (char *)v15 + v19;
      uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v23 = *(void *)(v22 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
      {
        uint64_t v24 = sub_10003B754(&qword_10078C890);
        memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
        uint64_t v16 = v46;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v26 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v20, v21, v26);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v20, v21, *(void *)(v23 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
        uint64_t v16 = v46;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
        goto LABEL_17;
      }
      uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v25 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v25 - 8) + 32))(v14, v15, v25);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_17:
    uint64_t v27 = v9[6];
    uint64_t v28 = &v7[v27];
    uint64_t v29 = &v8[v27];
    uint64_t v30 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
    uint64_t v31 = v9[7];
    uint64_t v32 = &v7[v31];
    id v33 = &v8[v31];
    int v34 = swift_getEnumCaseMultiPayload();
    if (v34 == 1)
    {
      *uint64_t v32 = *v33;
      uint64_t v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v37 = (char *)v32 + v36;
      uint64_t v38 = (char *)v33 + v36;
      uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v40 = *(void *)(v39 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
        uint64_t v41 = sub_10003B754(&qword_10078C890);
        memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
        uint64_t v3 = v45;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v43 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v37, v38, v43);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v37, v38, *(void *)(v40 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        uint64_t v3 = v45;
      }
    }
    else
    {
      if (v34)
      {
        memcpy(v32, v33, *(void *)(*(void *)(v16 - 8) + 64));
        uint64_t v3 = v45;
LABEL_31:
        v7[v9[8]] = v8[v9[8]];
        (*(void (**)(unsigned char *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
        goto LABEL_32;
      }
      uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v42 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 32))(v32, v33, v42);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          break;
      }
      uint64_t v3 = v45;
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_31;
  }
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_32:
  *(_OWORD *)((char *)a1 + *(int *)(v3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(v3 + 24));
  return a1;
}

void **sub_1000FA084(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = (int *)type metadata accessor for TTRIRemindersBoardDragItemUserInfo(0);
  uint64_t v11 = *((void *)v10 - 1);
  uint64_t v12 = *(uint64_t (**)(unsigned char *, uint64_t, int *))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (v14)
    {
      sub_100034504((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
      goto LABEL_8;
    }
    uint64_t v23 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 40))(v8, v9, v23);
    uint64_t v93 = a3;
    if (a1 != a2)
    {
      uint64_t v24 = v10[5];
      uint64_t v25 = &v8[v24];
      uint64_t v26 = &v9[v24];
      sub_100034504((uint64_t)&v8[v24], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        *uint64_t v25 = *v26;
        uint64_t v36 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v37 = (char *)v25 + v36;
        uint64_t v38 = (char *)v26 + v36;
        uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v40 = *(void *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          uint64_t v41 = sub_10003B754(&qword_10078C890);
          memcpy(v37, v38, *(void *)(*(void *)(v41 - 8) + 64));
        }
        else
        {
          uint64_t v89 = v39;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v64 = type metadata accessor for Date();
              uint64_t v65 = v37;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 32))(v37, v38, v64);
              uint64_t v66 = v89;
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v65 = v37;
              memcpy(v37, v38, *(void *)(v40 + 64));
              uint64_t v66 = v89;
              break;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v65, 0, 1, v66);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (!EnumCaseMultiPayload)
        {
          uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v43 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v43 - 8) + 32))(v25, v26, v43);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
              break;
          }
          a3 = v93;
          swift_storeEnumTagMultiPayload();
          goto LABEL_51;
        }
        memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
      }
      a3 = v93;
    }
LABEL_51:
    uint64_t v67 = v10[6];
    uint64_t v68 = &v8[v67];
    int v69 = &v9[v67];
    uint64_t v70 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 40))(v68, v69, v70);
    if (a1 != a2)
    {
      uint64_t v71 = v10[7];
      id v72 = &v8[v71];
      uint64_t v73 = &v9[v71];
      sub_100034504((uint64_t)&v8[v71], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      uint64_t v74 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      int v75 = swift_getEnumCaseMultiPayload();
      if (v75 == 1)
      {
        *id v72 = *v73;
        uint64_t v77 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v78 = (char *)v72 + v77;
        id v79 = (char *)v73 + v77;
        uint64_t v80 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v81 = *(void *)(v80 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
        {
          uint64_t v82 = sub_10003B754(&qword_10078C890);
          memcpy(v78, v79, *(void *)(*(void *)(v82 - 8) + 64));
        }
        else
        {
          uint64_t v90 = v80;
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v84 = type metadata accessor for Date();
              uint64_t v85 = v78;
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32))(v78, v79, v84);
              uint64_t v86 = v90;
              swift_storeEnumTagMultiPayload();
              break;
            default:
              uint64_t v85 = v78;
              memcpy(v78, v79, *(void *)(v81 + 64));
              uint64_t v86 = v90;
              break;
          }
          (*(void (**)(char *, void, uint64_t, uint64_t))(v81 + 56))(v85, 0, 1, v86);
        }
        swift_storeEnumTagMultiPayload();
      }
      else
      {
        if (!v75)
        {
          uint64_t v76 = type metadata accessor for TTRRemindersListViewModel.SectionID();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v83 = type metadata accessor for Date();
              (*(void (**)(void *, void *, uint64_t))(*(void *)(v83 - 8) + 32))(v72, v73, v83);
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
              break;
          }
          a3 = v93;
          swift_storeEnumTagMultiPayload();
          goto LABEL_66;
        }
        memcpy(v72, v73, *(void *)(*(void *)(v74 - 8) + 64));
      }
      a3 = v93;
    }
LABEL_66:
    v8[v10[8]] = v9[v10[8]];
    goto LABEL_67;
  }
  if (!v14)
  {
    uint64_t v92 = a3;
    uint64_t v15 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v15 - 8) + 32))(v8, v9, v15);
    uint64_t v16 = v10[5];
    uint64_t v17 = &v8[v16];
    uint64_t v18 = &v9[v16];
    uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v20 = swift_getEnumCaseMultiPayload();
    if (v20 == 1)
    {
      uint64_t v91 = v19;
      *uint64_t v17 = *v18;
      uint64_t v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v31 = (char *)v17 + v30;
      uint64_t v32 = (char *)v18 + v30;
      uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v34 = *(void *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
      {
        uint64_t v35 = sub_10003B754(&qword_10078C890);
        memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
        uint64_t v19 = v91;
      }
      else
      {
        uint64_t v88 = v33;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v46 = type metadata accessor for Date();
            uint64_t v44 = v31;
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v31, v32, v46);
            swift_storeEnumTagMultiPayload();
            uint64_t v45 = v88;
            uint64_t v19 = v91;
            break;
          default:
            uint64_t v44 = v31;
            memcpy(v31, v32, *(void *)(v34 + 64));
            uint64_t v19 = v91;
            uint64_t v45 = v88;
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v44, 0, 1, v45);
      }
    }
    else
    {
      if (v20)
      {
        memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
        goto LABEL_31;
      }
      uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v42 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v42 - 8) + 32))(v17, v18, v42);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_31:
    uint64_t v47 = v10[6];
    int v48 = &v8[v47];
    id v49 = &v9[v47];
    uint64_t v50 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 32))(v48, v49, v50);
    uint64_t v51 = v10[7];
    uint64_t v52 = &v8[v51];
    id v53 = &v9[v51];
    int v54 = swift_getEnumCaseMultiPayload();
    if (v54 == 1)
    {
      *uint64_t v52 = *v53;
      uint64_t v56 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v57 = (char *)v52 + v56;
      uint64_t v58 = (char *)v53 + v56;
      uint64_t v59 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v60 = *(void *)(v59 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
      {
        uint64_t v61 = sub_10003B754(&qword_10078C890);
        memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v63 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 32))(v57, v58, v63);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v57, v58, *(void *)(v60 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      if (!v54)
      {
        uint64_t v55 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v62 = type metadata accessor for Date();
            (*(void (**)(void *, void *, uint64_t))(*(void *)(v62 - 8) + 32))(v52, v53, v62);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v52, v53, *(void *)(*(void *)(v55 - 8) + 64));
            break;
        }
        a3 = v92;
        swift_storeEnumTagMultiPayload();
        goto LABEL_46;
      }
      memcpy(v52, v53, *(void *)(*(void *)(v19 - 8) + 64));
    }
    a3 = v92;
LABEL_46:
    v8[v10[8]] = v9[v10[8]];
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
    goto LABEL_67;
  }
LABEL_8:
  uint64_t v22 = sub_10003B754((uint64_t *)&unk_10079CFC0);
  memcpy(v8, v9, *(void *)(*(void *)(v22 - 8) + 64));
LABEL_67:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1000FB8F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1000FB908);
}

uint64_t sub_1000FB908(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_10003B754((uint64_t *)&unk_10079CFC0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1000FB9BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1000FB9D0);
}

void *sub_1000FB9D0(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_10003B754((uint64_t *)&unk_10079CFC0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_1000FBA7C()
{
  sub_1000FBB3C(319, (unint64_t *)&unk_10078C990, (void (*)(uint64_t))type metadata accessor for TTRIRemindersBoardDragItemUserInfo);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1000FBB3C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void (*sub_1000FBB90(int64x2_t ****a1, uint64_t a2))(void *a1)
{
  unint64_t v4 = (int64x2_t ***)malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v6 = (int64x2_t **)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_1000FF3FC(a2, (uint64_t)v6);
  void v4[5] = (int64x2_t **)sub_1000FE9CC(v4, (uint64_t)v6);
  return sub_1000FBC30;
}

void sub_1000FBC30(void *a1)
{
  unint64_t v1 = (void *)*a1;
  uint64_t v2 = *(void **)(*a1 + 32);
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  sub_1000FF460((uint64_t)v2);
  free(v2);

  free(v1);
}

void (*sub_1000FBC8C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1000FEB14(v6, a2, a3);
  return sub_1000FBD0C;
}

void sub_1000FBD0C(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();

  free(v1);
}

uint64_t sub_1000FBD60()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1000FE974;
  *(void *)(v4 + 24) = v3;
  sub_10003B754((uint64_t *)&unk_10079F420);
  sub_100037EA0(&qword_10078CAB8, (uint64_t *)&unk_10079F420);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_10003B754(&qword_10079C800);
  sub_100037EA0(&qword_10078CAC0, &qword_10079C800);
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  swift_release();
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_1000FE9C4;
  *(void *)(v6 + 24) = v5;
  Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_beginAccess();
  AnyCancellable.store(in:)();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1000FC038()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000FC090();
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FC090()
{
  uint64_t v1 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v199 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v181 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v194 = (uint64_t)&v181 - v5;
  __chkstk_darwin(v6);
  uint64_t v191 = (uint64_t)&v181 - v7;
  __chkstk_darwin(v8);
  uint64_t v187 = (uint64_t)&v181 - v9;
  __chkstk_darwin(v10);
  uint64_t v189 = (uint64_t)&v181 - v11;
  __chkstk_darwin(v12);
  uint64_t v198 = (uint64_t)&v181 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v181 - v15;
  __chkstk_darwin(v17);
  uint64_t v195 = (uint64_t)&v181 - v18;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v181 - v20;
  swift_beginAccess();
  int v22 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v181 = v1;
  if (v22 == 1)
  {
    swift_beginAccess();
    uint64_t v23 = swift_bridgeObjectRetain();
    uint64_t v24 = sub_1004E4D84(v23);
  }
  else
  {
    uint64_t v24 = swift_bridgeObjectRetain();
  }
  uint64_t v211 = v24;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v190 = v0;
  uint64_t v182 = v0 + 16;
  v183 = v3;
  uint64_t v188 = v16;
  if (Strong)
  {
    uint64_t v26 = Strong;
    uint64_t v27 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_collectionView);
    if (!v27) {
      goto LABEL_207;
    }
    *(void *)&long long v200 = v26;
    id v28 = [v27 visibleCells:v181, v182];
    sub_1000FF520();
    unint64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      if (v30) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v30)
      {
LABEL_8:
        if (v30 < 1)
        {
          __break(1u);
          goto LABEL_205;
        }
        uint64_t v31 = 0;
        uint64_t v32 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if ((v29 & 0xC000000000000001) != 0) {
            id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v33 = *(id *)(v29 + 8 * v31 + 32);
          }
          uint64_t v34 = v33;
          type metadata accessor for TTRIBoardColumnCollectionViewCell();
          uint64_t v35 = swift_dynamicCastClass();
          if (v35
            && (uint64_t v36 = *(void *)(v35
                                + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_chromelessBarsStateContributor)) != 0)
          {
            swift_retain();

            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v32 = sub_1005711D4(0, *((void *)v32 + 2) + 1, 1, v32);
            }
            unint64_t v38 = *((void *)v32 + 2);
            unint64_t v37 = *((void *)v32 + 3);
            if (v38 >= v37 >> 1) {
              uint64_t v32 = sub_1005711D4((char *)(v37 > 1), v38 + 1, 1, v32);
            }
            *((void *)v32 + 2) = v38 + 1;
            uint64_t v39 = &v32[16 * v38];
            *((void *)v39 + 4) = v36;
            *((void *)v39 + 5) = &off_100750E30;
          }
          else
          {
          }
          ++v31;
        }
        while (v30 != v31);
LABEL_26:
        swift_bridgeObjectRelease_n();
        swift_unknownObjectRelease();
        uint64_t v40 = *((void *)v32 + 2);
        if (v40) {
          goto LABEL_27;
        }
LABEL_23:
        uint64_t v41 = _swiftEmptyDictionarySingleton;
        goto LABEL_42;
      }
    }
    uint64_t v32 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_26;
  }
  uint64_t v32 = (char *)_swiftEmptyArrayStorage;
  uint64_t v40 = _swiftEmptyArrayStorage[2];
  if (!v40) {
    goto LABEL_23;
  }
LABEL_27:
  swift_bridgeObjectRetain();
  uint64_t v42 = 0;
  uint64_t v41 = _swiftEmptyDictionarySingleton;
  do
  {
    long long v200 = *(_OWORD *)&v32[16 * v42 + 32];
    uint64_t v44 = v200 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_columnID;
    swift_beginAccess();
    sub_1000FF3FC(v44, (uint64_t)v21);
    swift_unknownObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v212.i64[0] = (uint64_t)v41;
    unint64_t v47 = sub_10035C1D4((uint64_t)v21);
    uint64_t v48 = v41[2];
    BOOL v49 = (v46 & 1) == 0;
    uint64_t v50 = v48 + v49;
    if (__OFADD__(v48, v49)) {
      goto LABEL_194;
    }
    char v51 = v46;
    if (v41[3] >= v50)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v41 = (void *)v212.i64[0];
        if (v46) {
          goto LABEL_28;
        }
      }
      else
      {
        sub_100363B0C();
        uint64_t v41 = (void *)v212.i64[0];
        if (v51) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      sub_100576A44(v50, isUniquelyReferenced_nonNull_native);
      unint64_t v52 = sub_10035C1D4((uint64_t)v21);
      if ((v51 & 1) != (v53 & 1)) {
        goto LABEL_208;
      }
      unint64_t v47 = v52;
      uint64_t v41 = (void *)v212.i64[0];
      if (v51)
      {
LABEL_28:
        uint64_t v43 = v41[7];
        swift_unknownObjectRelease();
        *(_OWORD *)(v43 + 16 * v47) = v200;
        goto LABEL_29;
      }
    }
    v41[(v47 >> 6) + 8] |= 1 << v47;
    sub_1000FF3FC((uint64_t)v21, v41[6] + *(void *)(v199 + 72) * v47);
    *(_OWORD *)(v41[7] + 16 * v47) = v200;
    uint64_t v54 = v41[2];
    BOOL v55 = __OFADD__(v54, 1);
    uint64_t v56 = v54 + 1;
    if (v55) {
      goto LABEL_200;
    }
    v41[2] = v56;
LABEL_29:
    ++v42;
    swift_bridgeObjectRelease();
    sub_1000FF460((uint64_t)v21);
  }
  while (v40 != v42);
  swift_bridgeObjectRelease();
LABEL_42:
  swift_bridgeObjectRelease();
  *(void *)&long long v200 = v190 + 48;
  swift_beginAccess();
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_1004E4D84(v57);
  uint64_t v59 = swift_bridgeObjectRetain();
  sub_1005974A8(v59, v58);
  int64_t v60 = 0;
  uint64_t v62 = *(void *)(v61 + 56);
  uint64_t v185 = v61 + 56;
  uint64_t v196 = v61;
  uint64_t v63 = 1 << *(unsigned char *)(v61 + 32);
  uint64_t v64 = -1;
  if (v63 < 64) {
    uint64_t v64 = ~(-1 << v63);
  }
  unint64_t v65 = v64 & v62;
  int64_t v184 = (unint64_t)(v63 + 63) >> 6;
  uint64_t v66 = &qword_10078CAD0;
  long long v193 = xmmword_10066C910;
  uint64_t v67 = (uint64_t)v188;
  v186 = v41;
  if ((v64 & v62) != 0) {
    goto LABEL_48;
  }
  while (2)
  {
    while (2)
    {
      int64_t v73 = v60 + 1;
      if (__OFADD__(v60, 1)) {
        goto LABEL_195;
      }
      if (v73 >= v184) {
        goto LABEL_101;
      }
      unint64_t v74 = *(void *)(v185 + 8 * v73);
      ++v60;
      if (v74) {
        goto LABEL_60;
      }
      int64_t v60 = v73 + 1;
      if (v73 + 1 >= v184) {
        goto LABEL_101;
      }
      unint64_t v74 = *(void *)(v185 + 8 * v60);
      if (v74) {
        goto LABEL_60;
      }
      int64_t v75 = v73 + 2;
      if (v75 >= v184)
      {
LABEL_101:
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v115 = v211;
        uint64_t v116 = v211 + 56;
        uint64_t v117 = 1 << *(unsigned char *)(v211 + 32);
        uint64_t v118 = -1;
        if (v117 < 64) {
          uint64_t v118 = ~(-1 << v117);
        }
        unint64_t v119 = v118 & *(void *)(v211 + 56);
        int64_t v120 = (unint64_t)(v117 + 63) >> 6;
        swift_bridgeObjectRetain();
        int64_t v121 = 0;
        uint64_t v122 = (uint64_t)v183;
        uint64_t v123 = v189;
        if (v119) {
          goto LABEL_106;
        }
LABEL_107:
        int64_t v126 = v121 + 1;
        if (__OFADD__(v121, 1)) {
          goto LABEL_196;
        }
        if (v126 >= v120) {
          goto LABEL_126;
        }
        unint64_t v127 = *(void *)(v116 + 8 * v126);
        ++v121;
        if (!v127)
        {
          int64_t v121 = v126 + 1;
          if (v126 + 1 >= v120) {
            goto LABEL_126;
          }
          unint64_t v127 = *(void *)(v116 + 8 * v121);
          if (!v127)
          {
            int64_t v128 = v126 + 2;
            if (v128 < v120)
            {
              unint64_t v127 = *(void *)(v116 + 8 * v128);
              if (v127)
              {
                int64_t v121 = v128;
                goto LABEL_118;
              }
              while (1)
              {
                int64_t v121 = v128 + 1;
                if (__OFADD__(v128, 1)) {
                  goto LABEL_198;
                }
                if (v121 >= v120) {
                  break;
                }
                unint64_t v127 = *(void *)(v116 + 8 * v121);
                ++v128;
                if (v127) {
                  goto LABEL_118;
                }
              }
            }
LABEL_126:
            swift_release();
            uint64_t v140 = *(void *)v200;
            uint64_t v141 = *(void *)v200 + 64;
            uint64_t v142 = 1 << *(unsigned char *)(*(void *)v200 + 32);
            uint64_t v143 = -1;
            if (v142 < 64) {
              uint64_t v143 = ~(-1 << v142);
            }
            unint64_t v144 = v143 & *(void *)(*(void *)v200 + 64);
            int64_t v145 = (unint64_t)(v142 + 63) >> 6;
            swift_bridgeObjectRetain_n();
            int64_t v146 = 0;
            while (1)
            {
              if (v144)
              {
                unint64_t v147 = __clz(__rbit64(v144));
                v144 &= v144 - 1;
                unint64_t v148 = v147 | (v146 << 6);
              }
              else
              {
                int64_t v150 = v146 + 1;
                if (__OFADD__(v146, 1)) {
                  goto LABEL_201;
                }
                if (v150 >= v145)
                {
LABEL_151:
                  swift_release();
                  swift_bridgeObjectRelease();
                  int v153 = 0;
                  goto LABEL_152;
                }
                unint64_t v151 = *(void *)(v141 + 8 * v150);
                ++v146;
                if (!v151)
                {
                  int64_t v146 = v150 + 1;
                  if (v150 + 1 >= v145) {
                    goto LABEL_151;
                  }
                  unint64_t v151 = *(void *)(v141 + 8 * v146);
                  if (!v151)
                  {
                    int64_t v146 = v150 + 2;
                    if (v150 + 2 >= v145) {
                      goto LABEL_151;
                    }
                    unint64_t v151 = *(void *)(v141 + 8 * v146);
                    if (!v151)
                    {
                      int64_t v146 = v150 + 3;
                      if (v150 + 3 >= v145) {
                        goto LABEL_151;
                      }
                      unint64_t v151 = *(void *)(v141 + 8 * v146);
                      if (!v151)
                      {
                        int64_t v146 = v150 + 4;
                        if (v150 + 4 >= v145) {
                          goto LABEL_151;
                        }
                        unint64_t v151 = *(void *)(v141 + 8 * v146);
                        if (!v151)
                        {
                          int64_t v152 = v150 + 5;
                          if (v152 >= v145) {
                            goto LABEL_151;
                          }
                          unint64_t v151 = *(void *)(v141 + 8 * v152);
                          if (!v151)
                          {
                            while (1)
                            {
                              int64_t v146 = v152 + 1;
                              if (__OFADD__(v152, 1)) {
                                break;
                              }
                              if (v146 >= v145) {
                                goto LABEL_151;
                              }
                              unint64_t v151 = *(void *)(v141 + 8 * v146);
                              ++v152;
                              if (v151) {
                                goto LABEL_149;
                              }
                            }
LABEL_205:
                            __break(1u);
                            goto LABEL_206;
                          }
                          int64_t v146 = v152;
                        }
                      }
                    }
                  }
                }
LABEL_149:
                unint64_t v144 = (v151 - 1) & v151;
                unint64_t v148 = __clz(__rbit64(v151)) + (v146 << 6);
              }
              sub_1000FF6B4(*(void *)(v140 + 56) + 32 * v148, (uint64_t)&v206);
              sub_1000960E8((uint64_t)&v206, (uint64_t)&v201);
              int v149 = v204;
              sub_1000FF6EC(&v201);
              if (v149 == 1)
              {
                swift_release();
                swift_bridgeObjectRelease();
                int v153 = 1;
LABEL_152:
                uint64_t v154 = *(void *)v200;
                uint64_t v155 = *(void *)v200 + 64;
                uint64_t v156 = 1 << *(unsigned char *)(*(void *)v200 + 32);
                uint64_t v157 = -1;
                if (v156 < 64) {
                  uint64_t v157 = ~(-1 << v156);
                }
                unint64_t v158 = v157 & *(void *)(*(void *)v200 + 64);
                int64_t v159 = (unint64_t)(v156 + 63) >> 6;
                swift_bridgeObjectRetain_n();
                int64_t v160 = 0;
                while (1)
                {
                  if (v158)
                  {
                    unint64_t v161 = __clz(__rbit64(v158));
                    v158 &= v158 - 1;
                    unint64_t v162 = v161 | (v160 << 6);
                  }
                  else
                  {
                    int64_t v164 = v160 + 1;
                    if (__OFADD__(v160, 1)) {
                      goto LABEL_202;
                    }
                    if (v164 >= v159)
                    {
LABEL_177:
                      swift_release();
                      swift_bridgeObjectRelease();
                      int v167 = 0;
LABEL_178:
                      swift_bridgeObjectRelease();
                      uint64_t v168 = v190;
                      int v169 = *(unsigned __int8 *)(v190 + 64);
                      if (v169 == 2 || ((((v169 & 1) == 0) ^ v153) & 1) == 0)
                      {
                        *(unsigned char *)(v190 + 64) = v153;
                        uint64_t v170 = swift_unknownObjectWeakLoadStrong();
                        if (v170)
                        {
                          uint64_t v171 = *(void *)(v170
                                           + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_preferredChromelessBarStates);
                          swift_beginAccess();
                          int v172 = HIBYTE(*(unsigned __int16 *)(v171 + 16)) & 1;
                          if (*(_WORD *)(v171 + 16) == 2) {
                            LOBYTE(v172) = 0;
                          }
                          LOBYTE(v201) = v153;
                          BYTE1(v201) = v172;
                          sub_1000FF71C();
                          TTRObservableViewModel<A>.update(with:forcePublish:)();
                          swift_unknownObjectRelease();
                        }
                      }
                      int v173 = *(unsigned __int8 *)(v168 + 65);
                      if (v173 == 2 || ((((v173 & 1) == 0) ^ v167) & 1) == 0)
                      {
                        *(unsigned char *)(v168 + 65) = v167;
                        uint64_t v174 = swift_unknownObjectWeakLoadStrong();
                        if (v174)
                        {
                          uint64_t v175 = *(void *)(v174
                                           + OBJC_IVAR____TtC9Reminders36TTRIRemindersBoardMainViewController_preferredChromelessBarStates);
                          swift_beginAccess();
                          v210[0] = *(unsigned char *)(v175 + 16) & 1;
                          v210[1] = v167 ^ 1;
                          sub_1000FF71C();
                          TTRObservableViewModel<A>.update(with:forcePublish:)();
                          swift_unknownObjectRelease();
                        }
                      }
                      if (qword_100785280 != -1) {
                        goto LABEL_203;
                      }
                      goto LABEL_189;
                    }
                    unint64_t v165 = *(void *)(v155 + 8 * v164);
                    ++v160;
                    if (!v165)
                    {
                      int64_t v160 = v164 + 1;
                      if (v164 + 1 >= v159) {
                        goto LABEL_177;
                      }
                      unint64_t v165 = *(void *)(v155 + 8 * v160);
                      if (!v165)
                      {
                        int64_t v160 = v164 + 2;
                        if (v164 + 2 >= v159) {
                          goto LABEL_177;
                        }
                        unint64_t v165 = *(void *)(v155 + 8 * v160);
                        if (!v165)
                        {
                          int64_t v160 = v164 + 3;
                          if (v164 + 3 >= v159) {
                            goto LABEL_177;
                          }
                          unint64_t v165 = *(void *)(v155 + 8 * v160);
                          if (!v165)
                          {
                            int64_t v160 = v164 + 4;
                            if (v164 + 4 >= v159) {
                              goto LABEL_177;
                            }
                            unint64_t v165 = *(void *)(v155 + 8 * v160);
                            if (!v165)
                            {
                              int64_t v166 = v164 + 5;
                              if (v166 >= v159) {
                                goto LABEL_177;
                              }
                              unint64_t v165 = *(void *)(v155 + 8 * v166);
                              if (!v165)
                              {
                                while (1)
                                {
                                  int64_t v160 = v166 + 1;
                                  if (__OFADD__(v166, 1)) {
                                    break;
                                  }
                                  if (v160 >= v159) {
                                    goto LABEL_177;
                                  }
                                  unint64_t v165 = *(void *)(v155 + 8 * v160);
                                  ++v166;
                                  if (v165) {
                                    goto LABEL_175;
                                  }
                                }
LABEL_206:
                                __break(1u);
LABEL_207:
                                __break(1u);
LABEL_208:
                                uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
                                __break(1u);
                                return result;
                              }
                              int64_t v160 = v166;
                            }
                          }
                        }
                      }
                    }
LABEL_175:
                    unint64_t v158 = (v165 - 1) & v165;
                    unint64_t v162 = __clz(__rbit64(v165)) + (v160 << 6);
                  }
                  sub_1000FF6B4(*(void *)(v154 + 56) + 32 * v162, (uint64_t)&v206);
                  sub_1000960E8((uint64_t)&v206, (uint64_t)&v201);
                  int v163 = v205;
                  sub_1000FF6EC(&v201);
                  if (v163 == 1)
                  {
                    swift_release();
                    swift_bridgeObjectRelease();
                    int v167 = 1;
                    goto LABEL_178;
                  }
                }
              }
            }
          }
        }
LABEL_118:
        unint64_t v119 = (v127 - 1) & v127;
        for (unint64_t i = __clz(__rbit64(v127)) + (v121 << 6); ; unint64_t i = v124 | (v121 << 6))
        {
          uint64_t v129 = v194;
          sub_1000FF3FC(*(void *)(v115 + 48) + *(void *)(v199 + 72) * i, v194);
          sub_1000FF4BC(v129, v122);
          uint64_t v130 = (uint64_t *)v200;
          swift_beginAccess();
          uint64_t v131 = *v130;
          if (*(void *)(v131 + 16) && (unint64_t v132 = sub_10035C1D4(v122), (v133 & 1) != 0))
          {
            sub_1000FF6B4(*(void *)(v131 + 56) + 32 * v132, (uint64_t)&v201);
            sub_1000960E8((uint64_t)&v201, (uint64_t)&v206);
            swift_endAccess();
            if (v206 != __PAIR128__(1, 0))
            {
              uint64_t v134 = swift_unknownObjectWeakLoadStrong();
              if (v134)
              {
                uint64_t v135 = *(void *)(v134
                                 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration
                                 + 32);
                long long v136 = *(_OWORD *)(v134
                                 + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration
                                 + 16);
                int64x2_t v212 = *(int64x2_t *)(v134
                                    + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_chromelessBarsContributorConfiguration);
                long long v213 = v136;
                uint64_t v214 = v135;
                id v137 = (id)v212.i64[0];
                uint64_t v138 = v190;
                __int16 v208 = sub_1000FDE18((uint64_t)&v212) & 0x101;
                sub_1000FF3FC((uint64_t)v183, v123);
                swift_beginAccess();
                sub_1000FF6B4((uint64_t)&v206, (uint64_t)&v201);
                char v139 = swift_isUniquelyReferenced_nonNull_native();
                uint64_t v209 = *(void *)(v138 + 48);
                *(void *)(v138 + 48) = 0x8000000000000000;
                sub_1000BC3C8((uint64_t)&v201, v123, v139);
                *(void *)(v138 + 48) = v209;
                uint64_t v122 = (uint64_t)v183;
                swift_bridgeObjectRelease();
                sub_1000FF460(v123);
                swift_endAccess();
                sub_1000496E4((id *)&v212);
                swift_unknownObjectRelease();
              }
            }
            sub_1000FF460(v122);
            sub_1000FF6EC(&v206);
            if (!v119) {
              goto LABEL_107;
            }
          }
          else
          {
            swift_endAccess();
            sub_1000FF460(v122);
            if (!v119) {
              goto LABEL_107;
            }
          }
LABEL_106:
          unint64_t v124 = __clz(__rbit64(v119));
          v119 &= v119 - 1;
        }
      }
      unint64_t v74 = *(void *)(v185 + 8 * v75);
      if (!v74)
      {
        while (1)
        {
          int64_t v60 = v75 + 1;
          if (__OFADD__(v75, 1)) {
            goto LABEL_197;
          }
          if (v60 >= v184) {
            goto LABEL_101;
          }
          unint64_t v74 = *(void *)(v185 + 8 * v60);
          ++v75;
          if (v74) {
            goto LABEL_60;
          }
        }
      }
      int64_t v60 = v75;
LABEL_60:
      unint64_t v65 = (v74 - 1) & v74;
      unint64_t v72 = __clz(__rbit64(v74)) + (v60 << 6);
LABEL_61:
      uint64_t v76 = v195;
      uint64_t v77 = *(void *)(v199 + 72);
      sub_1000FF3FC(*(void *)(v196 + 48) + v77 * v72, v195);
      sub_1000FF4BC(v76, v67);
      if (v41[2] && (unint64_t v78 = sub_10035C1D4(v67), (v79 & 1) != 0))
      {
        uint64_t v80 = (uint64_t *)(v41[7] + 16 * v78);
        uint64_t v81 = *v80;
        uint64_t v82 = v80[1];
        swift_unknownObjectRetain();
      }
      else
      {
        uint64_t v81 = 0;
        uint64_t v82 = 0;
      }
      uint64_t v83 = (uint64_t *)v200;
      swift_beginAccess();
      uint64_t v84 = *v83;
      if (*(void *)(v84 + 16) && (unint64_t v85 = sub_10035C1D4(v67), (v86 & 1) != 0))
      {
        sub_1000FF6B4(*(void *)(v84 + 56) + 32 * v85, (uint64_t)&v212);
        uint64_t v87 = v212.i64[1];
        if (v212.i64[0] != 1)
        {
LABEL_74:
          sub_1000FF560((uint64_t)&v212, (uint64_t)&v206);
          sub_10003B6F8((uint64_t)&v212, (uint64_t *)&unk_100788E10);
          swift_endAccess();
          if (v81) {
            goto LABEL_75;
          }
LABEL_72:
          sub_1000FF560((uint64_t)&v206, (uint64_t)&v212);
          if (*(_OWORD *)&v212 == __PAIR128__(1, 0))
          {
            sub_10003B6F8((uint64_t)&v212, v66);
          }
          else
          {
            uint64_t v91 = v213;
            swift_retain();
            sub_1000FE570((uint64_t)&v212);
            if (v91)
            {
              AnyCancellable.cancel()();
              swift_release();
            }
          }
          uint64_t v92 = v191;
          sub_1000FF3FC(v67, v191);
          swift_beginAccess();
          uint64_t v94 = sub_1000FBB90((int64x2_t ****)&v212, v92);
          uint64_t v95 = v93;
          if (*v93 != 1 || v93[1] != 1)
          {
            sub_10003B6F8((uint64_t)v93, v66);
            *(_OWORD *)uint64_t v95 = v193;
            v95[2] = 0;
          }
          ((void (*)(int64x2_t *, void))v94)(&v212, 0);
          swift_endAccess();
          sub_1000FF460(v191);
LABEL_88:
          sub_10003B6F8((uint64_t)&v206, v66);
          sub_1000FF460(v67);
          if (!v65) {
            continue;
          }
LABEL_48:
          unint64_t v71 = __clz(__rbit64(v65));
          v65 &= v65 - 1;
          unint64_t v72 = v71 | (v60 << 6);
          goto LABEL_61;
        }
      }
      else
      {
        int64x2_t v212 = vdupq_n_s64(1uLL);
        *(void *)&long long v213 = 0;
        WORD4(v213) = 0;
        uint64_t v87 = 1;
      }
      break;
    }
    if (v87 != 1) {
      goto LABEL_74;
    }
    sub_10003B6F8((uint64_t)&v212, (uint64_t *)&unk_100788E10);
    swift_endAccess();
    long long v206 = v193;
    uint64_t v207 = 0;
    if (!v81) {
      goto LABEL_72;
    }
LABEL_75:
    sub_1000FF560((uint64_t)&v206, (uint64_t)&v201);
    if (!v201 && v202 == 1)
    {
      swift_unknownObjectRetain();
      sub_10003B6F8((uint64_t)&v201, v66);
      goto LABEL_92;
    }
    sub_1000FF678((uint64_t)&v201, (uint64_t)&v212);
    uint64_t v88 = swift_unknownObjectWeakLoadStrong();
    if (!v88)
    {
      swift_unknownObjectRetain();
      sub_1000FF678((uint64_t)&v212, (uint64_t)&v201);
      goto LABEL_91;
    }
    uint64_t v89 = v88;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
    sub_1000FF678((uint64_t)&v212, (uint64_t)&v201);
    if (v89 != v81)
    {
LABEL_91:
      sub_1000FE570((uint64_t)&v201);
      goto LABEL_92;
    }
    uint64_t v90 = v203;
    sub_1000FE570((uint64_t)&v201);
    if (v90)
    {
      swift_unknownObjectRelease_n();
      goto LABEL_88;
    }
LABEL_92:
    uint64_t v192 = v77;
    unint64_t v197 = v65;
    int64_t v96 = v60;
    uint64_t v97 = v66;
    v212.i64[0] = *(void *)(v81
                            + OBJC_IVAR____TtC9Reminders45TTRIBoardColumnChromelessBarsStateContributor_stateChangeSubject);
    sub_10003B754(&qword_10079F4B0);
    sub_100037EA0(&qword_10078CAD8, &qword_10079F4B0);
    v212.i64[0] = Publisher.eraseToAnyPublisher()();
    swift_allocObject();
    uint64_t v98 = v190;
    swift_weakInit();
    sub_10003B754(&qword_10078CAE0);
    sub_100037EA0(&qword_10078CAE8, &qword_10078CAE0);
    uint64_t v99 = Publisher<>.sink(receiveValue:)();
    swift_release();
    swift_release();
    uint64_t v202 = v82;
    swift_unknownObjectWeakInit();
    uint64_t v203 = v99;
    uint64_t v100 = v198;
    sub_1000FF3FC(v67, v198);
    sub_1000FF5D0((uint64_t)&v201, (uint64_t)v210);
    swift_beginAccess();
    swift_retain();
    char v101 = swift_isUniquelyReferenced_nonNull_native();
    v212.i64[0] = *(void *)(v98 + 48);
    uint64_t v102 = v212.i64[0];
    *(void *)(v98 + 48) = 0x8000000000000000;
    unint64_t v104 = sub_10035C1D4(v100);
    uint64_t v105 = *(void *)(v102 + 16);
    BOOL v106 = (v103 & 1) == 0;
    uint64_t v107 = v105 + v106;
    if (!__OFADD__(v105, v106))
    {
      char v108 = v103;
      if (*(void *)(v102 + 24) >= v107)
      {
        if ((v101 & 1) == 0)
        {
          sub_100363888();
          uint64_t v102 = v212.i64[0];
        }
      }
      else
      {
        sub_100576670(v107, v101);
        uint64_t v102 = v212.i64[0];
        unint64_t v109 = sub_10035C1D4(v198);
        if ((v108 & 1) != (v110 & 1)) {
          goto LABEL_208;
        }
        unint64_t v104 = v109;
      }
      uint64_t v67 = (uint64_t)v188;
      uint64_t v111 = (void *)v200;
      *(void *)long long v200 = v102;
      swift_bridgeObjectRelease();
      id v112 = (void *)*v111;
      if (v108)
      {
        uint64_t v68 = 32 * v104;
      }
      else
      {
        int64x2_t v212 = (int64x2_t)v193;
        *(void *)&long long v213 = 0;
        WORD4(v213) = 0;
        v112[(v104 >> 6) + 8] |= 1 << v104;
        sub_1000FF3FC(v198, v112[6] + v104 * v192);
        uint64_t v68 = 32 * v104;
        sub_1000960E8((uint64_t)&v212, v112[7] + 32 * v104);
        uint64_t v113 = v112[2];
        BOOL v55 = __OFADD__(v113, 1);
        uint64_t v114 = v113 + 1;
        if (v55) {
          goto LABEL_199;
        }
        v112[2] = v114;
      }
      sub_1000FF610((uint64_t)v210, v112[7] + v68);
      swift_endAccess();
      sub_1000FF460(v198);
      uint64_t v69 = v187;
      sub_1000FF3FC(v67, v187);
      uint64_t v70 = v189;
      sub_1005A2CAC(v189, v69);
      swift_unknownObjectRelease_n();
      swift_release();
      sub_1000FF460(v70);
      sub_1000FE570((uint64_t)&v201);
      uint64_t v66 = v97;
      sub_10003B6F8((uint64_t)&v206, v97);
      sub_1000FF460(v67);
      int64_t v60 = v96;
      uint64_t v41 = v186;
      unint64_t v65 = v197;
      if (!v197) {
        continue;
      }
      goto LABEL_48;
    }
    break;
  }
  __break(1u);
LABEL_194:
  __break(1u);
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  __break(1u);
LABEL_201:
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  swift_once();
LABEL_189:
  char v176 = byte_10078C9D0;
  uint64_t v177 = qword_10078C9D8;
  if (HIBYTE(word_10078C9E0)) {
    __int16 v178 = 256;
  }
  else {
    __int16 v178 = 0;
  }
  __int16 v179 = v178 | word_10078C9E0;
  swift_bridgeObjectRetain();
  return sub_1000FDA3C(v176, v177, v179);
}

uint64_t sub_1000FD4C8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000FD528(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FD528(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t *)(v1 + 48);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v8 = swift_bridgeObjectRetain();
  sub_1000FF010(v8, a1);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v12 = *(unsigned __int8 *)(v4 + 80);
    v21[1] = v10;
    uint64_t v13 = v10 + ((v12 + 32) & ~v12);
    uint64_t v14 = *(void *)(v4 + 72);
    int64x2_t v22 = vdupq_n_s64(1uLL);
    do
    {
      sub_1000FF3FC(v13, (uint64_t)v6);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v15 = sub_10035C1D4((uint64_t)v6);
      char v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v19 = *v7;
        uint64_t v23 = *v7;
        *uint64_t v7 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100363888();
          uint64_t v19 = v23;
        }
        sub_1000FF460(*(void *)(v19 + 48) + v15 * v14);
        sub_1000960E8(*(void *)(v19 + 56) + 32 * v15, (uint64_t)&v24);
        sub_100360910(v15, v19);
        *uint64_t v7 = v19;
        swift_bridgeObjectRelease();
      }
      else
      {
        int64x2_t v24 = v22;
        uint64_t v25 = 0;
        __int16 v26 = 0;
      }
      swift_endAccess();
      sub_10003B6F8((uint64_t)&v24, (uint64_t *)&unk_100788E10);
      sub_1000FF460((uint64_t)v6);
      v13 += v14;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1000FD750()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    swift_beginAccess();
    *(unsigned char *)(v1 + 72) = 1;
    uint64_t v2 = *(void *)(v1 + 80);
    int v3 = *(unsigned __int8 *)(v1 + 88);
    int v4 = *(unsigned __int8 *)(v1 + 89);
    uint64_t v5 = qword_100785280;
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    if (byte_10078C9D0 == 1)
    {
      int v6 = HIBYTE(word_10078C9E0);
      int v7 = word_10078C9E0;
      char v8 = sub_10040FC28(v2, qword_10078C9D8);
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0 && ((v3 ^ v7) & 1) == 0 && ((v4 ^ v6) & 1) == 0) {
        return swift_release();
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v9 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_1000FD898()
{
  swift_beginAccess();
  *(unsigned char *)(v0 + 88) = 1;
  int v1 = *(unsigned __int8 *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 89);
  uint64_t v4 = qword_100785280;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  if (v1 != byte_10078C9D0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v9 = *(void *)(v0 + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(ObjectType, v9);
  }
  int v5 = HIBYTE(word_10078C9E0);
  int v6 = word_10078C9E0;
  char v7 = sub_10040FC28(v2, qword_10078C9D8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 & 1) == 0 || !v6 || ((v3 ^ v5)) {
    goto LABEL_8;
  }
  return result;
}

void sub_1000FD9A8()
{
  byte_10078C9D0 = 0;
  qword_10078C9D8 = (uint64_t)&_swiftEmptySetSingleton;
  word_10078C9E0 = 0;
}

uint64_t sub_1000FD9C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  int v3 = a1[17];
  int v4 = a2[17];
  unsigned __int8 v5 = a2[16];
  unsigned __int8 v6 = a1[16];
  char v7 = sub_10040FC28(*((void *)a1 + 1), *((void *)a2 + 1));
  if ((v5 ^ v6)) {
    unsigned int v8 = 0;
  }
  else {
    unsigned int v8 = v3 ^ v4 ^ 1;
  }
  if (v7) {
    return v8;
  }
  else {
    return 0;
  }
}

uint64_t sub_1000FDA3C(char a1, uint64_t a2, __int16 a3)
{
  swift_beginAccess();
  *(unsigned char *)(v3 + 72) = a1;
  *(void *)(v3 + 80) = a2;
  *(unsigned char *)(v3 + 88) = a3 & 1;
  *(unsigned char *)(v3 + 89) = HIBYTE(a3) & 1;
  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v3 + 72);
  uint64_t v8 = *(void *)(v3 + 80);
  int v9 = *(unsigned __int8 *)(v3 + 88);
  int v10 = *(unsigned __int8 *)(v3 + 89);
  uint64_t v11 = qword_100785280;
  swift_bridgeObjectRetain();
  if (v11 != -1) {
    swift_once();
  }
  if (v7 != byte_10078C9D0)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v16 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
  }
  int v12 = HIBYTE(word_10078C9E0);
  int v13 = word_10078C9E0;
  char v14 = sub_10040FC28(v8, qword_10078C9D8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v14 & 1) == 0 || ((v9 ^ v13) & 1) != 0 || ((v10 ^ v12)) {
    goto LABEL_8;
  }
  return result;
}

uint64_t sub_1000FDB80(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v2 - 8);
  int v4 = &v24[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10003B754(&qword_10078CAF8);
  __chkstk_darwin(v5 - 8);
  int v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v9 = sub_10003B754(&qword_10078CB00);
  uint64_t v10 = v9;
  if (Strong)
  {
    uint64_t v11 = (uint64_t)&v7[*(int *)(v9 + 48)];
    sub_1000FF3FC(a1, (uint64_t)v4);
    swift_beginAccess();
    char v12 = sub_1005A2CAC(v11, (uint64_t)v4);
    swift_endAccess();
    int v13 = *(unsigned __int8 *)(Strong + 72);
    uint64_t v14 = *(void *)(Strong + 80);
    int v15 = *(unsigned __int8 *)(Strong + 88);
    int v16 = *(unsigned __int8 *)(Strong + 89);
    uint64_t v17 = qword_100785280;
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    if (v13 == byte_10078C9D0)
    {
      int v18 = HIBYTE(word_10078C9E0);
      int v19 = word_10078C9E0;
      char v20 = sub_10040FC28(v14, qword_10078C9D8);
      swift_bridgeObjectRelease();
      if ((v20 & 1) != 0 && ((v15 ^ v19) & 1) == 0 && ((v16 ^ v18) & 1) == 0) {
        goto LABEL_11;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v21 = *(void *)(Strong + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(ObjectType, v21);
LABEL_11:
    swift_release();
    *int v7 = v12 & 1;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 0, 1, v10);
    return sub_10003B6F8((uint64_t)v7, &qword_10078CAF8);
  }
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
  return sub_10003B6F8((uint64_t)v7, &qword_10078CAF8);
}

uint64_t sub_1000FDE18(uint64_t a1)
{
  id v2 = *(id *)a1;
  [v2 bounds];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;
  CGFloat v10 = v9;
  [v2 safeAreaInsets];
  double v12 = v11;
  double v14 = v13;
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  CGFloat rect1_8 = v12;
  if (Strong)
  {
    id v16 = [Strong parentViewController];
    if (v16)
    {
      uint64_t v17 = v16;
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        int v18 = v17;
      }
      else {
        int v18 = 0;
      }
      if (v18)
      {
        id v19 = sub_10033A304();
        swift_unknownObjectRelease();

        if ([v19 isHidden])
        {
        }
        else
        {
          [v19 bounds];
          [v2 convertPoint:v19 fromCoordinateSpace:];
          double v21 = v20;
          v43.origin.x = v4;
          v43.origin.y = v6;
          v43.size.width = v8;
          v43.size.height = v10;
          double MaxY = CGRectGetMaxY(v43);

          double v23 = MaxY - v21;
          if (MaxY - v21 < 0.0) {
            double v23 = 0.0;
          }
          if (v14 <= v23) {
            double v14 = v23;
          }
        }
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  v44.origin.x = v4;
  v44.origin.y = v6;
  v44.size.width = v8;
  v44.size.height = v10;
  CGFloat Width = CGRectGetWidth(v44);
  v45.origin.x = v4;
  v45.origin.y = v6;
  v45.size.width = v8;
  v45.size.height = v10;
  CGFloat rect1 = CGRectGetMinX(v45);
  v46.origin.x = v4;
  v46.origin.y = v6;
  v46.size.width = v8;
  v46.size.height = v10;
  CGFloat v24 = CGRectGetMaxY(v46) - v14;
  v47.origin.x = v4;
  v47.origin.y = v6;
  v47.size.width = v8;
  v47.size.height = v10;
  CGFloat v25 = CGRectGetWidth(v47);
  [v2 contentSize];
  double v28 = sub_10004980C(0.0, 0.0, v26, v27, *(double *)(a1 + 8), *(double *)(a1 + 16));
  v48.origin.x = v4;
  CGFloat v29 = v14;
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  CGFloat v35 = v34;
  v48.origin.y = v6;
  v48.size.width = Width;
  v48.size.height = rect1_8;
  v50.origin.x = v28;
  v50.origin.y = v31;
  v50.size.width = v33;
  v50.size.height = v35;
  BOOL v36 = CGRectIntersectsRect(v48, v50);
  v49.origin.x = rect1;
  v49.origin.y = v24;
  v49.size.width = v25;
  v49.size.height = v29;
  v51.origin.x = v28;
  v51.origin.y = v31;
  v51.size.width = v33;
  v51.size.height = v35;
  BOOL v37 = CGRectIntersectsRect(v49, v51);
  sub_1000496E4((id *)a1);
  if (v37) {
    int v38 = 256;
  }
  else {
    int v38 = 0;
  }
  return v38 | v36;
}

uint64_t sub_1000FE0B4()
{
  sub_1000499D4(v0 + 16);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersBoardChromelessBarsController()
{
  return self;
}

uint64_t initializeWithCopy for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  double v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnChromelessBarsContributorConfiguration()
{
  return &type metadata for TTRIBoardColumnChromelessBarsContributorConfiguration;
}

uint64_t sub_1000FE230(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersBoardChromelessBarsController.InvalidationContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 initializeWithTake for TTRIRemindersBoardChromelessBarsController.InvalidationContext(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for TTRIRemindersBoardChromelessBarsController.InvalidationContext(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardChromelessBarsController.InvalidationContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardChromelessBarsController.InvalidationContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardChromelessBarsController.InvalidationContext()
{
  return &type metadata for TTRIRemindersBoardChromelessBarsController.InvalidationContext;
}

void *destroy for TTRIRemindersBoardChromelessBarsController.ColumnState(void *result)
{
  if (*result) {
    BOOL v1 = 0;
  }
  else {
    BOOL v1 = result[1] == 1;
  }
  if (!v1)
  {
    swift_unknownObjectWeakDestroy();
    return (void *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for TTRIRemindersBoardChromelessBarsController.ColumnState(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = *(void *)(a2 + 8) == 1;
  }
  if (v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    swift_unknownObjectWeakCopyInit();
    uint64_t v5 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    *(void *)(a1 + 16) = v5;
    swift_retain();
  }
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersBoardChromelessBarsController.ColumnState(uint64_t a1, long long *a2)
{
  if (*(void *)a2) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = *((void *)a2 + 1) == 1;
  }
  char v5 = v4;
  if (*(void *)a1) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = *(void *)(a1 + 8) == 1;
  }
  if (v6)
  {
    if (v5)
    {
      long long v8 = *a2;
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v8;
    }
    else
    {
      swift_unknownObjectWeakCopyInit();
      *(void *)(a1 + 8) = *((void *)a2 + 1);
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      swift_retain();
    }
  }
  else if (v5)
  {
    sub_1000FE570(a1);
    uint64_t v7 = *((void *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(void *)(a1 + 16) = v7;
  }
  else
  {
    swift_unknownObjectWeakCopyAssign();
    *(void *)(a1 + 8) = *((void *)a2 + 1);
    *(void *)(a1 + 16) = *((void *)a2 + 2);
    swift_retain();
    swift_release();
  }
  *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
  *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
  return a1;
}

uint64_t sub_1000FE570(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for TTRIRemindersBoardChromelessBarsController.ColumnState(uint64_t result, uint64_t a2)
{
  if (*(void *)a2) {
    BOOL v3 = 0;
  }
  else {
    BOOL v3 = *(void *)(a2 + 8) == 1;
  }
  if (v3)
  {
    *(_OWORD *)__n128 result = *(_OWORD *)a2;
    *(void *)(result + 16) = *(void *)(a2 + 16);
  }
  else
  {
    __n128 result = swift_unknownObjectWeakTakeInit();
    *(_OWORD *)(result + 8) = *(_OWORD *)(a2 + 8);
  }
  *(_WORD *)(result + 24) = *(_WORD *)(a2 + 24);
  return result;
}

uint64_t assignWithTake for TTRIRemindersBoardChromelessBarsController.ColumnState(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2) {
    BOOL v4 = 0;
  }
  else {
    BOOL v4 = *(void *)(a2 + 8) == 1;
  }
  char v5 = v4;
  if (*(void *)a1) {
    BOOL v6 = 0;
  }
  else {
    BOOL v6 = *(void *)(a1 + 8) == 1;
  }
  if (v6)
  {
    if ((v5 & 1) == 0)
    {
      swift_unknownObjectWeakTakeInit();
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      goto LABEL_17;
    }
  }
  else
  {
    if ((v5 & 1) == 0)
    {
      swift_unknownObjectWeakTakeAssign();
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      swift_release();
      goto LABEL_17;
    }
    sub_1000FE570(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
LABEL_17:
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardChromelessBarsController.ColumnState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 26)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v3 = (*(_DWORD *)a1 & 0x7FFFFFFF) - 1;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardChromelessBarsController.ColumnState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(_WORD *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 26) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 26) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = a2;
      *(void *)(result + 8) = 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardChromelessBarsController.ColumnState()
{
  return &type metadata for TTRIRemindersBoardChromelessBarsController.ColumnState;
}

uint64_t destroy for TTRIRemindersBoardChromelessBarsController.TrackingContext()
{
  swift_unknownObjectWeakDestroy();

  return swift_release();
}

uint64_t initializeWithCopy for TTRIRemindersBoardChromelessBarsController.TrackingContext(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersBoardChromelessBarsController.TrackingContext(uint64_t a1, uint64_t a2)
{
  *(void *)(swift_unknownObjectWeakCopyAssign() + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TTRIRemindersBoardChromelessBarsController.TrackingContext(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v3 + 8) = result;
  return result;
}

uint64_t assignWithTake for TTRIRemindersBoardChromelessBarsController.TrackingContext(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersBoardChromelessBarsController.TrackingContext(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersBoardChromelessBarsController.TrackingContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersBoardChromelessBarsController.TrackingContext()
{
  return &type metadata for TTRIRemindersBoardChromelessBarsController.TrackingContext;
}

uint64_t sub_1000FE93C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1000FE974()
{
  return sub_1000FC038();
}

uint64_t sub_1000FE97C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1000FE9B4(uint64_t a1)
{
  return sub_100435270(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1000FE9BC(uint64_t *a1)
{
  return sub_1000FD4C8(a1);
}

uint64_t sub_1000FE9C4()
{
  return sub_1000FD750();
}

void (*sub_1000FE9CC(int64x2_t ***a1, uint64_t a2))(uint64_t a1)
{
  uint64_t v4 = (int64x2_t **)malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  BOOL v6 = (int64x2_t *)malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1000FF3FC(a2, (uint64_t)v6);
  v4[9] = (int64x2_t *)sub_1000FEFA4(v4);
  v4[10] = (int64x2_t *)sub_1000FEC34(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_1000FEA98;
}

void sub_1000FEA98(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 80))();
  sub_1000FF460((uint64_t)v3);
  v2(v1, 0);
  free(v3);

  free(v1);
}

void (*sub_1000FEB14(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  BOOL v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1000FEFE0(v6);
  v6[10] = sub_1000FEDD0(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1000FEBC0;
}

void sub_1000FEBC0(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  int v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);

  free(v1);
}

void (*sub_1000FEC34(int64x2_t **a1, uint64_t a2, char a3))(uint64_t *a1)
{
  uint64_t v4 = v3;
  long long v8 = (int64x2_t *)malloc(0x38uLL);
  *a1 = v8;
  v8[2].i64[0] = a2;
  v8[2].i64[1] = (uint64_t)v3;
  uint64_t v9 = *v3;
  unint64_t v11 = sub_10035C1D4(a2);
  v8[1].i8[10] = v10 & 1;
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
  }
  else
  {
    char v15 = v10;
    uint64_t v16 = *(void *)(v9 + 24);
    if (v16 >= v14 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3].i64[0] = v11;
      if (v15)
      {
LABEL_8:
        sub_1000960E8(*(void *)(*v4 + 56) + 32 * v11, (uint64_t)v8);
        return sub_1000FED78;
      }
LABEL_11:
      int64x2_t *v8 = vdupq_n_s64(1uLL);
      v8[1].i64[0] = 0;
      v8[1].i16[4] = 0;
      return sub_1000FED78;
    }
    if (v16 >= v14 && (a3 & 1) == 0)
    {
      sub_100363888();
      goto LABEL_7;
    }
    sub_100576670(v14, a3 & 1);
    unint64_t v17 = sub_10035C1D4(a2);
    if ((v15 & 1) == (v18 & 1))
    {
      unint64_t v11 = v17;
      v8[3].i64[0] = v17;
      if (v15) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  __n128 result = (void (*)(uint64_t *))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1000FED78(uint64_t *a1)
{
  uint64_t v1 = (void *)*a1;
  sub_100090CFC(*a1, *(unsigned char *)(*a1 + 26), *(uint64_t **)(*a1 + 40), *(void *)(*a1 + 48), *(void *)(*a1 + 32));
  sub_10003B6F8((uint64_t)v1, (uint64_t *)&unk_100788E10);

  free(v1);
}

void (*sub_1000FEDD0(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  char v10 = malloc(0x60uLL);
  *a1 = v10;
  v10[8] = a3;
  v10[9] = v4;
  v10[7] = a2;
  uint64_t v11 = *v4;
  unint64_t v13 = sub_100009B88(a2, a3);
  *((unsigned char *)v10 + 88) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[10] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v5 + 56) + 56 * v13;
        long long v20 = *(_OWORD *)v19;
        uint64_t v21 = *(void *)(v19 + 16);
        uint64_t v22 = *(void *)(v19 + 24);
        long long v23 = *(_OWORD *)(v19 + 32);
        uint64_t v24 = *(void *)(v19 + 48);
LABEL_12:
        *(_OWORD *)char v10 = v20;
        void v10[2] = v21;
        v10[3] = v22;
        *((_OWORD *)v10 + 2) = v23;
        v10[6] = v24;
        return sub_1000FEF48;
      }
LABEL_11:
      uint64_t v21 = 0;
      uint64_t v22 = 0;
      uint64_t v24 = 0;
      long long v20 = 0uLL;
      long long v23 = 0uLL;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_100362DE0();
      goto LABEL_7;
    }
    sub_100575504(v16, a4 & 1);
    unint64_t v25 = sub_100009B88(a2, a3);
    if ((v17 & 1) == (v26 & 1))
    {
      unint64_t v13 = v25;
      v10[10] = v25;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  __n128 result = (void (*)(uint64_t **))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

void sub_1000FEF48(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_100090E90(*a1, *((unsigned char *)*a1 + 88), (uint64_t *)(*a1)[9], (*a1)[10], (*a1)[7], (*a1)[8]);
  sub_1000FF770(*v1, v1[1], v1[2], v1[3], v1[4], (void *)v1[5]);

  free(v1);
}

uint64_t (*sub_1000FEFA4(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1000FEFD4;
}

uint64_t sub_1000FEFD4(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

uint64_t (*sub_1000FEFE0(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_1000FF7D0;
}

void sub_1000FF010(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v47 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v45 = (uint64_t)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  long long v8 = (char *)&v40 - v7;
  __chkstk_darwin(v9);
  uint64_t v43 = (uint64_t)&v40 - v10;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v40 - v12;
  int64_t v14 = 0;
  uint64_t v44 = a1;
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v16 = a1 + 64;
  uint64_t v15 = v17;
  CGRect v46 = _swiftEmptyArrayStorage;
  CGRect v49 = _swiftEmptyArrayStorage;
  uint64_t v18 = 1 << *(unsigned char *)(v16 - 32);
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  else {
    uint64_t v19 = -1;
  }
  unint64_t v20 = v19 & v15;
  uint64_t v41 = v16;
  int64_t v42 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v21 = a2 + 56;
  if ((v19 & v15) != 0) {
    goto LABEL_32;
  }
LABEL_7:
  int64_t v22 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v22 < v42)
    {
      unint64_t v23 = *(void *)(v41 + 8 * v22);
      int64_t i = v14 + 1;
      if (v23) {
        goto LABEL_21;
      }
      int64_t i = v14 + 2;
      if (v14 + 2 < v42)
      {
        unint64_t v23 = *(void *)(v41 + 8 * i);
        if (v23) {
          goto LABEL_21;
        }
        int64_t i = v14 + 3;
        if (v14 + 3 < v42)
        {
          unint64_t v23 = *(void *)(v41 + 8 * i);
          if (v23) {
            goto LABEL_21;
          }
          int64_t i = v14 + 4;
          if (v14 + 4 < v42)
          {
            unint64_t v23 = *(void *)(v41 + 8 * i);
            if (v23) {
              goto LABEL_21;
            }
            uint64_t v25 = v14 + 5;
            if (v14 + 5 < v42)
            {
              unint64_t v23 = *(void *)(v41 + 8 * v25);
              for (int64_t i = v14 + 5; !v23; ++v25)
              {
                int64_t i = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_35;
                }
                if (i >= v42) {
                  goto LABEL_33;
                }
                unint64_t v23 = *(void *)(v41 + 8 * i);
              }
LABEL_21:
              unint64_t v20 = (v23 - 1) & v23;
              int64_t v48 = i;
              for (unint64_t j = __clz(__rbit64(v23)) + (i << 6); ; unint64_t j = v39 | (v14 << 6))
              {
                uint64_t v27 = v43;
                uint64_t v28 = *(void *)(v47 + 72);
                sub_1000FF3FC(*(void *)(v44 + 48) + v28 * j, v43);
                sub_1000FF4BC(v27, (uint64_t)v13);
                if (*(void *)(a2 + 16)
                  && (Hasher.init(_seed:)(),
                      TTRRemindersListViewModel.ItemID.hash(into:)(),
                      Swift::Int v29 = Hasher._finalize()(),
                      uint64_t v30 = -1 << *(unsigned char *)(a2 + 32),
                      unint64_t v31 = v29 & ~v30,
                      ((*(void *)(v21 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) != 0))
                {
                  uint64_t v32 = ~v30;
                  while (1)
                  {
                    sub_1000FF3FC(*(void *)(a2 + 48) + v31 * v28, (uint64_t)v8);
                    char v33 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
                    sub_1000FF460((uint64_t)v8);
                    if (v33) {
                      break;
                    }
                    unint64_t v31 = (v31 + 1) & v32;
                    if (((*(void *)(v21 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
                      goto LABEL_27;
                    }
                  }
                  sub_1000FF460((uint64_t)v13);
                  int64_t v14 = v48;
                  if (!v20) {
                    goto LABEL_7;
                  }
                }
                else
                {
LABEL_27:
                  sub_1000FF4BC((uint64_t)v13, v45);
                  double v34 = v46;
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    sub_1004D3A98(0, v34[2] + 1, 1);
                  }
                  CGFloat v35 = v49;
                  unint64_t v37 = v49[2];
                  unint64_t v36 = v49[3];
                  if (v37 >= v36 >> 1)
                  {
                    sub_1004D3A98(v36 > 1, v37 + 1, 1);
                    CGFloat v35 = v49;
                  }
                  _OWORD v35[2] = v37 + 1;
                  uint64_t v38 = *(unsigned __int8 *)(v47 + 80);
                  CGRect v46 = v35;
                  sub_1000FF4BC(v45, (uint64_t)v35 + ((v38 + 32) & ~v38) + v37 * v28);
                  int64_t v14 = v48;
                  if (!v20) {
                    goto LABEL_7;
                  }
                }
LABEL_32:
                unint64_t v39 = __clz(__rbit64(v20));
                v20 &= v20 - 1;
                int64_t v48 = v14;
              }
            }
          }
        }
      }
    }
LABEL_33:
    swift_release();
    return;
  }
  __break(1u);
LABEL_35:
  __break(1u);
}

uint64_t sub_1000FF3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FF460(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1000FF4BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1000FF520()
{
  unint64_t result = qword_10078CAC8;
  if (!qword_10078CAC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078CAC8);
  }
  return result;
}

uint64_t sub_1000FF560(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078CAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FF5C8(uint64_t a1)
{
  return sub_1000FDB80(a1);
}

uint64_t sub_1000FF5D0(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = *(void *)(a1 + 16);
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  *(void *)(a2 + 16) = v4;
  swift_retain();
  return a2;
}

uint64_t sub_1000FF610(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078CAD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1000FF678(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  return a2;
}

uint64_t sub_1000FF6B4(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_1000FF6EC(void *a1)
{
  return a1;
}

unint64_t sub_1000FF71C()
{
  unint64_t result = qword_10078CAF0;
  if (!qword_10078CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078CAF0);
  }
  return result;
}

uint64_t sub_1000FF770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1000FF7DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v7 initWithDebugIdentifier:v8];

  type metadata accessor for TTRTemplateSharingInteractor();
  swift_allocObject();
  uint64_t v10 = TTRTemplateSharingInteractor.init(template:)();
  id v11 = [a1 store];
  uint64_t v12 = type metadata accessor for TTRITemplateSharingRouter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTRIActivityAlertRouterCapability();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v13 + 56) = v14;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v13 + 80) = 0;
  *(void *)(v13 + 16) = v11;
  swift_unknownObjectWeakAssign();
  *(void *)(v13 + 32) = a3;
  *(void *)(v13 + 40) = a4;
  *(void *)(v13 + 48) = v9;
  long long v31[3] = v12;
  _OWORD v31[4] = &off_10073FFC0;
  v31[0] = v13;
  type metadata accessor for TTRITemplateSharingPresenter();
  uint64_t v15 = swift_allocObject();
  uint64_t v16 = sub_100038E88((uint64_t)v31, v12);
  __chkstk_darwin(v16);
  uint64_t v18 = (void *)((char *)v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0) + 16);
  (*(void (**)(uint64_t *))(v19 + 16))(v18);
  uint64_t v20 = *v18;
  v30[3] = v12;
  v30[4] = &off_10073FFC0;
  v30[0] = v20;
  *(void *)(v15 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v15 + 40) = 0;
  swift_unknownObjectWeakInit();
  *(unsigned char *)(v15 + 48) = 0;
  *(void *)(v15 + 56) = 0;
  *(_DWORD *)(v15 + 63) = 0;
  id v21 = objc_allocWithZone((Class)TTRUndoManager);
  swift_retain_n();
  swift_retain();
  id v22 = v9;
  swift_retain();
  NSString v23 = String._bridgeToObjectiveC()();
  id v24 = [v21 initWithDebugIdentifier:v23];

  *(void *)(v15 + 152) = v24;
  *(unsigned char *)(v15 + 160) = 1;
  uint64_t v25 = v15 + OBJC_IVAR____TtC9Reminders28TTRITemplateSharingPresenter_continuationForPerformAction;
  uint64_t v26 = sub_10003B754((uint64_t *)&unk_1007886A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  *(void *)(v15 + 72) = v10;
  *(void *)(v15 + 80) = &protocol witness table for TTRTemplateSharingInteractor;
  sub_1000145EC((uint64_t)v30, v15 + 88);
  *(void *)(v15 + 136) = v22;
  type metadata accessor for TTRTemplateSharingPresenterCapability();
  swift_allocObject();
  *(void *)(v15 + 128) = TTRTemplateSharingPresenterCapability.init(interactor:)();
  type metadata accessor for TTRMainActorDeferredAction();
  swift_allocObject();
  swift_retain();
  uint64_t v27 = TTRMainActorDeferredAction.init()();
  sub_100038CD8((uint64_t)v30);
  *(void *)(v15 + 144) = v27;
  swift_beginAccess();
  *(void *)(v27 + 24) = &off_1007370D0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v31);
  swift_release_n();
  swift_beginAccess();
  *(void *)(v10 + 24) = &off_1007370F0;
  swift_unknownObjectWeakAssign();
  swift_release();
  return v15;
}

uint64_t sub_1000FFBF8(uint64_t a1)
{
  return sub_1000204D4(a1, (uint64_t (*)(uint64_t))sub_1005AF668, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_100598760);
}

uint64_t sub_1000FFC24(uint64_t a1)
{
  uint64_t result = sub_10003D7C0(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v5 = 1;
  if (result != 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v5 = sub_1005B1F44(result, v3, 0, a1);
    id v6 = (id)v5;
  }
  return v5;
}

uint64_t sub_1000FFC8C(uint64_t a1)
{
  uint64_t result = sub_100105094(a1);
  uint64_t v5 = result;
  uint64_t v6 = v3;
  int v7 = v4 & 1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaDictionary.endIndex.getter();
    if (v7)
    {
      uint64_t v9 = result;
      uint64_t v10 = v8;
      char v11 = static __CocoaDictionary.Index.== infix(_:_:)();
      sub_1000205F8(v9, v10, 1);
      if (v11)
      {
LABEL_4:
        sub_1000205F8(v5, v6, v7);
        return 0;
      }
LABEL_8:
      sub_100105158(&v14, v5, v6, v7, a1);
      uint64_t v12 = v13;
      sub_1000205F8(v5, v6, v7);
      return v12;
    }
  }
  else if ((v4 & 1) == 0)
  {
    if (*(_DWORD *)(a1 + 36) == v3)
    {
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1000FFDA8(uint64_t a1)
{
  return sub_1000204D4(a1, (uint64_t (*)(uint64_t))sub_1005AF668, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_1005989E4);
}

uint64_t sub_1000FFDD4(uint64_t a1)
{
  uint64_t result = sub_10003D7C0(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  uint64_t v5 = sub_1005B44E4(result, v3, 0, a1);
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1000FFE54(uint64_t a1)
{
  return sub_1000204D4(a1, sub_10003D7C0, (uint64_t (*)(uint64_t, uint64_t, BOOL, uint64_t))sub_100598CFC);
}

uint64_t sub_1000FFE80()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078CB08);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078CB08);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1000FFF48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v44 = a1;
  uint64_t v3 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v43 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v5 - 8);
  uint64_t v42 = (uint64_t)v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v40 = sub_1001020BC();
  uint64_t v13 = v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1001057DC(v13, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v14 = type metadata accessor for REMRemindersListDataView.SortingStyle();
    (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v12, v14);
  }
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 16);
  swift_unknownObjectRetain();
  v17(ObjectType, v15);
  uint64_t v19 = v18;
  swift_unknownObjectRelease();
  uint64_t v20 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
  swift_unknownObjectRelease();
  uint64_t v21 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 0, 1, v21);
  uint64_t v22 = sub_10010253C();
  uint64_t v37 = v23;
  uint64_t v38 = v22;
  type metadata accessor for TTRListColors();
  uint64_t v36 = static TTRListColors.tagged.getter();
  uint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t v25 = swift_getObjectType();
  uint64_t v26 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8);
  if (v26(v25, v24)) {
    swift_unknownObjectRelease();
  }
  uint64_t v27 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(v25, v24);
  if (v27) {
    swift_unknownObjectRelease();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v24 + 56))(v45, v25, v24);
  sub_10003B6F8((uint64_t)v45, &qword_100791FA0);
  uint64_t v28 = v26(v25, v24);
  uint64_t v41 = v9;
  if (v28)
  {
    uint64_t v30 = v29;
    uint64_t v31 = swift_getObjectType();
    int v35 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v31, v30);
    swift_unknownObjectRelease();
  }
  else
  {
    int v35 = 0;
  }
  v34[2] = v27 != 0;
  sub_100102304();
  sub_1001027CC(v42);
  uint64_t v32 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v43, 1, 1, v32);
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

void *sub_100100470()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);
  swift_unknownObjectRetain();
  uint64_t v5 = v4(ObjectType, v2);
  uint64_t v7 = v6;
  swift_unknownObjectRelease();
  type metadata accessor for ShowTaggedViewModelSourceHashtagContext();
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v5;
  void v8[3] = v7;
  v8[4] = v1;
  swift_retain();
  return v8;
}

uint64_t sub_100100528()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v1 = TTRUserDefaults.showingLargeAttachments(forType:)();

  return v1 & 1;
}

void sub_100100568()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

id sub_1001005CC()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_1001058AC(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 0;
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_100105844((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_1001006F4()
{
  int v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasIncompleteOrCompletedReminders);
  if (v1 != 2) {
    return v1 & 1 | 0x40u;
  }
  uint64_t result = 64;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_completedRemindersCount + 8) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_completedRemindersCount) <= 0) {
      return 64;
    }
    else {
      return 65;
    }
  }
  return result;
}

uint64_t sub_10010073C@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_10066EDA0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = sub_1001058A4;
  *(void *)(a1 + 32) = v1;
  return swift_retain();
}

uint64_t sub_10010076C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v8, 1, 1, v2);
  swift_retain();
  swift_retain();
  uint64_t v10 = (void *)TTRMutableTreeStorage.children(of:)();
  swift_release();
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
  if (v10[2])
  {
    sub_1001057DC((uint64_t)v10 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_100105844((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      swift_retain();
      uint64_t v12 = sub_100475E28((uint64_t)v10, v9);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v10 = v12;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  v14[1] = v10;
  sub_10003B754(&qword_10078C4F0);
  type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_100037EA0((unint64_t *)&qword_100791E80, &qword_10078C4F0);
  Sequence.firstMap<A>(_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100100A14()
{
  return 0;
}

uint64_t sub_100100A24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100100B70();
  sub_1001057DC(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_100105844((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = &off_10073C570;
    uint64_t v10 = sub_1000394A8((uint64_t *)a2);
    uint64_t result = sub_1001057DC(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(uint64_t *)((char *)v10 + *(int *)(v9 + 20)) = v7;
    *((unsigned char *)v10 + *(int *)(v9 + 24)) = 0;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return swift_release();
  }
  return result;
}

uint64_t sub_100100B70()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    uint64_t v3 = (void *)REMSmartListTypeTagged;
    type metadata accessor for TTRAttributeMatchingDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(unsigned char *)(v2 + 40) = 1;
    *(void *)(v2 + 24) = &off_10073A618;
    *(void *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    id v4 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

double TTRListDetailCreationChangeItem.ttrShareeContext.getter@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

uint64_t sub_100100C38(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v39 = *(void *)(v4 - 8);
  uint64_t v40 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v38 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v37 - v8;
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v37 - v10;
  uint64_t v11 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 16);
  swift_unknownObjectRetain();
  v17(ObjectType, v15);
  uint64_t v19 = v18;
  swift_unknownObjectRelease();
  uint64_t v20 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v20, v19);
  swift_unknownObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v14, v11);
  if (result == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v14, v11);
    uint64_t v22 = *v14;
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t)v14 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
    id v23 = [*(id *)(a2 + 16) hashtagContext];
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = [v23 hashtags];

      sub_1000368FC(0, &qword_10078D220);
      sub_100105774();
      uint64_t v26 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

      sub_10035E1EC(v22);
      swift_bridgeObjectRelease();
      REMHashtagLabelCollection.init(labels:)();
      uint64_t v42 = v26;
      sub_10003B754(&qword_10078D210);
      sub_100037EA0((unint64_t *)&qword_10078D218, &qword_10078D210);
      uint64_t v27 = v38;
      REMHashtagLabelCollection.init<A>(hashtags:)();
      REMHashtagLabelCollection.subtracting(_:)();
      uint64_t v28 = *(void (**)(char *, uint64_t))(v39 + 8);
      uint64_t v29 = v27;
      uint64_t v30 = v40;
      v28(v29, v40);
      v28(v9, v30);
      uint64_t v31 = REMHashtagLabelCollection.labels.getter();
      uint64_t v32 = *(void *)(v31 + 16);
      if (v32)
      {
        uint64_t v33 = v31 + 40;
        do
        {
          swift_bridgeObjectRetain();
          double v34 = (void *)TTRReminderEditor.addHashtag(_:)();
          swift_bridgeObjectRelease();

          v33 += 16;
          --v32;
        }
        while (v32);
      }
      swift_bridgeObjectRelease();
      v28(v41, v30);
      goto LABEL_13;
    }
LABEL_12:
    swift_bridgeObjectRelease();
LABEL_13:
    uint64_t v36 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v11, v36);
  }
  if (result != enum case for REMHashtagLabelSpecifier.allLabels(_:)
    && result != enum case for REMHashtagLabelSpecifier.noLabels(_:))
  {
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1001010B4(void *a1)
{
  uint64_t v93 = sub_10003B754(&qword_10078D208);
  __chkstk_darwin(v93);
  uint64_t v92 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
  uint64_t v94 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  int64_t v96 = (char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v84 - v9;
  uint64_t v11 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  char v86 = (char *)&v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v88 = (char *)&v84 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v85 = (char *)&v84 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v87 = (char *)&v84 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v98 = (char *)&v84 - v22;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v99 = (char *)&v84 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v84 - v25;
  uint64_t v28 = a1[3];
  uint64_t v27 = a1[4];
  sub_100038D28(a1, v28);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v27 + 208))(v100, v28, v27);
  uint64_t v29 = v101;
  if (!v101)
  {
    sub_10003B6F8((uint64_t)v100, &qword_100787488);
LABEL_8:
    char v62 = 0;
    return v62 & 1;
  }
  uint64_t v90 = v12;
  uint64_t v91 = v11;
  uint64_t v30 = v102;
  sub_100038D28(v100, v101);
  uint64_t v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  sub_100038CD8((uint64_t)v100);
  v100[0] = v31;
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078D210);
  sub_100037EA0((unint64_t *)&qword_10078D218, &qword_10078D210);
  uint64_t v89 = v26;
  REMHashtagLabelCollection.init<A>(hashtags:)();
  uint64_t v32 = *(void *)&v95[OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v34 = v4;
  uint64_t v35 = v5;
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v32 + 16);
  swift_unknownObjectRetain();
  v36(ObjectType, v32);
  uint64_t v37 = v35;
  uint64_t v38 = v34;
  uint64_t v40 = v39;
  swift_unknownObjectRelease();
  uint64_t v41 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v40);
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(v8, v10, v34);
  int v42 = (*(uint64_t (**)(uint64_t *, uint64_t))(v37 + 88))(v8, v34);
  if (v42 != enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    if (v42 == enum case for REMHashtagLabelSpecifier.allLabels(_:))
    {
      uint64_t v64 = v90;
      uint64_t v63 = v91;
      if ((v31 & 0xC000000000000001) != 0) {
        uint64_t v65 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v65 = *(void *)(v31 + 16);
      }
      swift_bridgeObjectRelease();
      char v62 = v65 != 0;
    }
    else
    {
      uint64_t v64 = v90;
      uint64_t v63 = v91;
      if (v42 != enum case for REMHashtagLabelSpecifier.noLabels(_:)) {
        goto LABEL_42;
      }
      if ((v31 & 0xC000000000000001) != 0) {
        uint64_t v67 = __CocoaSet.count.getter();
      }
      else {
        uint64_t v67 = *(void *)(v31 + 16);
      }
      swift_bridgeObjectRelease();
      char v62 = v67 == 0;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v10, v34);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v89, v63);
    return v62 & 1;
  }
  uint64_t v95 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t *, uint64_t))(v37 + 96))(v8, v34);
  uint64_t v43 = *v8;
  uint64_t v44 = v8[1];
  uint64_t v45 = sub_10003B754((uint64_t *)&unk_1007AD340);
  uint64_t v46 = v94;
  int64_t v48 = v96;
  uint64_t v47 = v97;
  (*(void (**)(char *, char *, uint64_t))(v94 + 32))(v96, (char *)v8 + *(int *)(v45 + 64), v97);
  sub_10035E1EC(v43);
  swift_bridgeObjectRelease();
  REMHashtagLabelCollection.init(labels:)();
  sub_10035E1EC(v44);
  swift_bridgeObjectRelease();
  REMHashtagLabelCollection.init(labels:)();
  char v49 = REMHashtagLabelCollection.isEmpty.getter();
  char v50 = REMHashtagLabelCollection.isEmpty.getter();
  CGRect v51 = v92;
  uint64_t v52 = *(int *)(v93 + 48);
  uint64_t v53 = *(int *)(v93 + 64);
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v92, v48, v47);
  v51[v52] = (v49 & 1) == 0;
  v51[v53] = (v50 & 1) == 0;
  int v54 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v51, v47);
  if (v54 == enum case for REMHashtagLabelSpecifier.Operation.or(_:))
  {
    uint64_t v56 = v90;
    uint64_t v55 = v91;
    uint64_t v57 = v89;
    if ((v49 & 1) == 0)
    {
      uint64_t v68 = v99;
      char v59 = REMHashtagLabelCollection.isDisjoint(with:)();
      if ((v50 & 1) == 0)
      {
        unint64_t v72 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
        v72(v88, v57, v55);
        int64_t v73 = v86;
        v72(v86, v98, v55);
        if (v59)
        {
          char v74 = REMHashtagLabelCollection.isDisjoint(with:)();
          int64_t v75 = *(void (**)(char *, uint64_t))(v56 + 8);
          v75(v73, v55);
          char v62 = v74 ^ 1;
        }
        else
        {
          int64_t v75 = *(void (**)(char *, uint64_t))(v56 + 8);
          v75(v73, v55);
          char v62 = 1;
        }
        char v79 = v95;
        v75(v88, v55);
        v75(v98, v55);
        v75(v99, v55);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v96, v97);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v79, v38);
        v75(v57, v55);
        return v62 & 1;
      }
      int64_t v60 = *(void (**)(char *, uint64_t))(v56 + 8);
      v60(v98, v55);
      uint64_t v61 = v68;
      goto LABEL_21;
    }
    if ((v50 & 1) == 0)
    {
      uint64_t v58 = v98;
      char v59 = REMHashtagLabelCollection.isDisjoint(with:)();
      int64_t v60 = *(void (**)(char *, uint64_t))(v56 + 8);
      v60(v58, v55);
      uint64_t v61 = v99;
LABEL_21:
      v60(v61, v55);
      (*(void (**)(char *, uint64_t))(v46 + 8))(v96, v97);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v95, v38);
      v60(v57, v55);
      char v62 = v59 ^ 1;
      return v62 & 1;
    }
    goto LABEL_15;
  }
  uint64_t v56 = v90;
  uint64_t v55 = v91;
  uint64_t v57 = v89;
  if (v54 == enum case for REMHashtagLabelSpecifier.Operation.and(_:))
  {
    if (v49)
    {
      if (v50)
      {
LABEL_15:
        uint64_t v66 = *(void (**)(char *, uint64_t))(v56 + 8);
        v66(v98, v55);
        v66(v99, v55);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v96, v97);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v95, v38);
        v66(v57, v55);
        goto LABEL_8;
      }
      uint64_t v76 = v98;
      char v62 = REMHashtagLabelCollection.isDisjoint(with:)();
      uint64_t v70 = *(void (**)(char *, uint64_t))(v56 + 8);
      v70(v76, v55);
      unint64_t v71 = v99;
    }
    else
    {
      uint64_t v69 = v99;
      char v62 = REMHashtagLabelCollection.isSuperset(of:)();
      if ((v50 & 1) == 0)
      {
        uint64_t v77 = *(void (**)(char *, char *, uint64_t))(v56 + 16);
        v77(v87, v57, v55);
        unint64_t v78 = v85;
        v77(v85, v98, v55);
        if (v62) {
          char v62 = REMHashtagLabelCollection.isDisjoint(with:)();
        }
        else {
          char v62 = 0;
        }
        uint64_t v80 = v99;
        uint64_t v81 = v78;
        uint64_t v82 = v95;
        uint64_t v70 = *(void (**)(char *, uint64_t))(v56 + 8);
        v70(v81, v55);
        v70(v87, v55);
        v70(v98, v55);
        v70(v80, v55);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v96, v97);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v82, v38);
        goto LABEL_39;
      }
      uint64_t v70 = *(void (**)(char *, uint64_t))(v56 + 8);
      v70(v98, v55);
      unint64_t v71 = v69;
    }
    v70(v71, v55);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v96, v97);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v95, v38);
LABEL_39:
    v70(v57, v55);
    return v62 & 1;
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
LABEL_42:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100101BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_100100B70();
  sub_10016B49C(a1, a2, a3);

  return swift_release();
}

uint64_t sub_100101BFC()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_unknownObjectRetain();
  v7(ObjectType, v5);
  uint64_t v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v10 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
  swift_unknownObjectRelease();
  uint64_t v13[3] = type metadata accessor for TTRUserActivityListPayload();
  v13[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
  sub_1000394A8(v13);
  (*(void (**)(void))(v2 + 16))();
  type metadata accessor for TTRUserActivityListPayload.State();
  swift_storeEnumTagMultiPayload();
  NSUserActivity.setPayload(_:)();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_100038CD8((uint64_t)v13);
}

uint64_t sub_100101DBC()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v18[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v8 + 16);
  swift_unknownObjectRetain();
  v10(ObjectType, v8);
  uint64_t v12 = v11;
  swift_unknownObjectRelease();
  uint64_t v13 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v13, v12);
  swift_unknownObjectRelease();
  sub_1000368FC(0, (unint64_t *)&qword_1007A1BC0);
  uint64_t v14 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  swift_storeEnumTagMultiPayload();
  v18[3] = v1;
  v18[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  uint64_t v15 = sub_1000394A8(v18);
  sub_1001057DC((uint64_t)v3, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)();
  sub_100105844((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100038CD8((uint64_t)v18);
  return v14;
}

void *sub_10010201C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList);
  id v2 = v1;
  return v1;
}

uint64_t sub_100102058()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_100018C30(v0, qword_10078CB20);
  *(unsigned char *)sub_100018BF8(v0, (uint64_t)qword_10078CB20) = 4;

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001020BC()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_unknownObjectRetain();
  v7(ObjectType, v5);
  uint64_t v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v10 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
  swift_unknownObjectRelease();
  int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v4, v1);
  if (v11 == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v1);
    uint64_t v12 = *v4;
    swift_bridgeObjectRelease();
    uint64_t v13 = (char *)v4 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
    uint64_t v14 = *(void *)(v12 + 16);
    swift_bridgeObjectRelease();
    BOOL v15 = v14 != 0;
    uint64_t v16 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v13, v16);
    int v17 = v15;
  }
  else
  {
    if (v11 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
      && v11 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    BOOL v15 = 0;
    int v17 = *(unsigned __int8 *)(v0
                             + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasDefaultNewReminderButtonWhenSelectingAllTags);
  }
  if (v17) {
    int v19 = 256;
  }
  else {
    int v19 = 0;
  }
  return v19 | v15;
}

uint64_t sub_100102304()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_unknownObjectRetain();
  v7(ObjectType, v5);
  uint64_t v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v10 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
  swift_unknownObjectRelease();
  int v11 = (*(uint64_t (**)(void *, uint64_t))(v2 + 88))(v4, v1);
  if (v11 == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(void *, uint64_t))(v2 + 96))(v4, v1);
    uint64_t v12 = v4[1];
    uint64_t v13 = *(void *)(*v4 + 16);
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();
      BOOL v14 = 1;
    }
    else
    {
      uint64_t v16 = *(void *)(v12 + 16);
      swift_bridgeObjectRelease();
      BOOL v14 = v16 != 0;
    }
    int v17 = (char *)v4 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
    uint64_t v18 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
  }
  else
  {
    if (v11 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
      && v11 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    return 0;
  }
  return v14;
}

uint64_t sub_10010253C()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
  swift_unknownObjectRetain();
  v7(ObjectType, v5);
  uint64_t v9 = v8;
  swift_unknownObjectRelease();
  uint64_t v10 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v10, v9);
  swift_unknownObjectRelease();
  int v11 = (*(uint64_t (**)(uint64_t *, uint64_t))(v2 + 88))(v4, v1);
  if (v11 == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v2 + 96))(v4, v1);
    uint64_t v12 = *v4;
    uint64_t v13 = v4[1];
    BOOL v14 = (char *)v4 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
    uint64_t v15 = sub_100597328(v13, v12);
    if (*(void *)(v15 + 16) == 1)
    {
      sub_1000FFDD4(v15);
      uint64_t v17 = v16;
      swift_bridgeObjectRelease();
      if (v17)
      {
        uint64_t countAndFlagsBits = String.addingHashtagPrefix()()._countAndFlagsBits;
        swift_bridgeObjectRelease();
LABEL_9:
        uint64_t v20 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
        (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v14, v20);
        return countAndFlagsBits;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t countAndFlagsBits = static TTRLocalizableStrings.Hashtags.taggedListName(forSelectedLabelCount:)();
    goto LABEL_9;
  }
  if (v11 == enum case for REMHashtagLabelSpecifier.allLabels(_:)) {
    return static TTRLocalizableStrings.Hashtags.taggedListNameForAllTags.getter();
  }
  if (v11 == enum case for REMHashtagLabelSpecifier.noLabels(_:)) {
    return static TTRLocalizableStrings.Hashtags.taggedListNameForUntagged.getter();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1001027CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = sub_100102A28();
  uint64_t v6 = v4;
  uint64_t v8 = v7;
  if ((*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_canShowHashtagLabelSelector) & 1) != 0
    || v4)
  {
    uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    BOOL v14 = *(void (**)(uint64_t, uint64_t))(v12 + 16);
    swift_unknownObjectRetain();
    v14(ObjectType, v12);
    uint64_t v16 = v15;
    swift_unknownObjectRelease();
    uint64_t v17 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v16 + 32))(v17, v16);
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
    swift_unknownObjectRelease();
    TTRRemindersListViewModel.HashtagLabelSelectorState.init(labels:selection:)();
    uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 0, 1, v18);
    uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    uint64_t v20 = (uint64_t *)(a1 + *(int *)(v19 + 20));
    *uint64_t v20 = v5;
    v20[1] = v6;
    v20[2] = v8;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a1, 0, 1, v19);
  }
  else
  {
    uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a1, 1, 1, v9);
  }
}

uint64_t sub_100102A28()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v44 = *(char **)(v1 - 8);
  uint64_t v45 = v1;
  uint64_t v2 = __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v38 - v6;
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v38 - v8;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v13 + 16);
  swift_unknownObjectRetain();
  v15(ObjectType, v13);
  uint64_t v17 = v16;
  swift_unknownObjectRelease();
  uint64_t v18 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v18, v17);
  swift_unknownObjectRelease();
  int v19 = (*(uint64_t (**)(uint64_t *, uint64_t))(v10 + 88))(v12, v9);
  if (v19 == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v10 + 96))(v12, v9);
    uint64_t v20 = *v12;
    uint64_t v21 = v12[1];
    uint64_t v22 = (char *)v12 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
    sub_10035E1EC(v20);
    swift_bridgeObjectRelease();
    REMHashtagLabelCollection.init(labels:)();
    uint64_t v23 = swift_bridgeObjectRetain();
    sub_10035E1EC(v23);
    swift_bridgeObjectRelease();
    REMHashtagLabelCollection.init(labels:)();
    uint64_t v24 = v43;
    REMHashtagLabelCollection.union(_:)();
    uint64_t v25 = v45;
    uint64_t v26 = (void (*)(char *, uint64_t))*((void *)v44 + 1);
    v26(v4, v45);
    v26(v7, v25);
    unint64_t v27 = *(void *)(REMHashtagLabelCollection.labels.getter() + 16);
    swift_bridgeObjectRelease();
    uint64_t v28 = static TTRLocalizableStrings.Hashtags.genericHashtagSelectionWithMenuDescription(forLabelCount:)();
    if (v27 == 2)
    {
      uint64_t v41 = v28;
      uint64_t v42 = v29;
      uint64_t v44 = v22;
      uint64_t v39 = static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForTwoTagsFormat.getter();
      uint64_t v46 = REMHashtagLabelCollection.labels.getter();
      sub_10003B754(&qword_10078E670);
      sub_100037EA0((unint64_t *)&qword_10079D020, &qword_10078E670);
      uint64_t v30 = static REMHashtagLabelCollection.sortedLabels<A>(from:)();
      uint64_t v34 = swift_bridgeObjectRelease();
      uint64_t v40 = &v38;
      __chkstk_darwin(v34);
      *(&v38 - 2) = v21;
      uint64_t v32 = sub_1001054DC;
    }
    else
    {
      if (v27 != 1)
      {
        swift_bridgeObjectRelease();
        v26(v24, v25);
        if (v27 <= 2)
        {
          swift_bridgeObjectRelease();
          uint64_t v37 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
          (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v22, v37);
          return 0;
        }
        goto LABEL_12;
      }
      uint64_t v41 = v28;
      uint64_t v42 = v29;
      uint64_t v44 = v22;
      uint64_t v39 = static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForOneTagFormat.getter();
      uint64_t v46 = REMHashtagLabelCollection.labels.getter();
      sub_10003B754(&qword_10078E670);
      sub_100037EA0((unint64_t *)&qword_10079D020, &qword_10078E670);
      uint64_t v30 = static REMHashtagLabelCollection.sortedLabels<A>(from:)();
      uint64_t v31 = swift_bridgeObjectRelease();
      uint64_t v40 = &v38;
      __chkstk_darwin(v31);
      *(&v38 - 2) = v21;
      uint64_t v32 = sub_100105914;
    }
    sub_100105384(v30, v32);
    sub_1000368FC(0, &qword_10078D1F0);
    sub_100421E1C((uint64_t)_swiftEmptyArrayStorage);
    static NSAttributedString.formattedString(format:formatAttributes:attributedStringsToInsert:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v26(v24, v25);
    uint64_t v22 = v44;
LABEL_12:
    uint64_t v33 = TTRRemindersListViewModel.HashtagSelectionDescription.init(generic:preferred:)();
    uint64_t v35 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v22, v35);
    return v33;
  }
  if (v19 == enum case for REMHashtagLabelSpecifier.allLabels(_:))
  {
    static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionAllTags.getter();
    return TTRRemindersListViewModel.HashtagSelectionDescription.init(generic:preferred:)();
  }
  if (v19 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
  {
    static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionUntagged.getter();
    return TTRRemindersListViewModel.HashtagSelectionDescription.init(generic:preferred:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

id sub_100103088(uint64_t a1, uint64_t a2, char a3)
{
  String.addingHashtagPrefix()();
  sub_10003B754(&qword_10078D1F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  uint64_t v5 = (void **)NSAttributedStringKey.ttrHashtagSelectionDescriptionEmphasized.unsafeMutableAddressor();
  uint64_t v6 = *v5;
  *(void *)(inited + 32) = *v5;
  *(unsigned char *)(inited + 40) = 1;
  id v7 = v6;
  unint64_t v8 = sub_1004227B4(inited);
  sub_10003B754(&qword_100793B40);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_10066C680;
  uint64_t v10 = *v5;
  *(void *)(v9 + 32) = *v5;
  *(unsigned char *)(v9 + 40) = 1;
  *(void *)(v9 + 64) = &type metadata for Bool;
  *(void *)(v9 + 72) = NSStrikethroughStyleAttributeName;
  *(void *)(v9 + 104) = &type metadata for Int;
  *(void *)(v9 + 80) = 1;
  id v11 = v10;
  uint64_t v12 = NSStrikethroughStyleAttributeName;
  sub_100421E1C(v9);
  if ((a3 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_100103234(v8);
  }
  swift_bridgeObjectRelease();
  id v13 = objc_allocWithZone((Class)NSAttributedString);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_1001054E4();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v16 = [v13 initWithString:v14 attributes:isa];

  return v16;
}

uint64_t sub_100103234(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_10003B754(&qword_10078D200);
    uint64_t v2 = (unsigned char *)static _DictionaryStorage.allocate(capacity:)();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v29 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v29 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v27) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v11);
    int64_t v13 = v29 + 1;
    if (!v12)
    {
      int64_t v13 = v29 + 2;
      if (v29 + 2 >= v27) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v28 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v29 + 3;
        if (v29 + 3 >= v27) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v28 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v29 + 4;
          if (v29 + 4 >= v27) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v28 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v29 = v13;
LABEL_28:
    uint64_t v15 = *(void **)(*(void *)(a1 + 48) + 8 * v10);
    char v16 = *(unsigned char *)(*(void *)(a1 + 56) + v10);
    *(void *)&v32[0] = v15;
    LOBYTE(v31[0]) = v16;
    id v17 = v15;
    swift_dynamicCast();
    uint64_t v18 = *(void *)&v32[0];
    sub_100038E1C((_OWORD *)((char *)v32 + 8), v30);
    sub_100038E1C(v30, v32);
    sub_100038E1C(v32, v31);
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    Hasher.init(_seed:)();
    String.hash(into:)();
    Swift::Int v19 = Hasher._finalize()();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v20 = -1 << v2[32];
    unint64_t v21 = v19 & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v21) & ~*(void *)&v6[8 * (v21 >> 6)])) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)&v6[8 * v22];
      }
      while (v26 == -1);
      unint64_t v8 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v18;
    uint64_t result = (uint64_t)sub_100038E1C(v31, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v29 + 5;
  if (v29 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_100051244();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v28 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v29 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v27) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v28 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

void sub_1001035C8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.Diff();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v40 = v5;
  __chkstk_darwin(v4);
  id v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10078D1E0);
  __chkstk_darwin(v8 - 8);
  uint64_t v41 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.TaggedModel();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v42 = (uint64_t)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785288 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100018BF8(v13, (uint64_t)qword_10078CB08);
  int64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  BOOL v16 = os_log_type_enabled(v14, v15);
  uint64_t v43 = v11;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v38 = v2;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v37 = v10;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v45 = v19;
    if (a1) {
      uint64_t v20 = 1702195828;
    }
    else {
      uint64_t v20 = 0x65736C6166;
    }
    char v21 = a1;
    if (a1) {
      unint64_t v22 = 0xE400000000000000;
    }
    else {
      unint64_t v22 = 0xE500000000000000;
    }
    uint64_t v44 = sub_1000385A8(v20, v22, &v45);
    uint64_t v10 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a1 = v21;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TTRShowTaggedViewModelSource: canShowHashtagLabelSelector did change {newValue: %s}", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v38;
    swift_slowDealloc();
  }

  if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_canShowHashtagLabelSelector) != (a1 & 1))
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_canShowHashtagLabelSelector) = a1 & 1;
    uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    BOOL v25 = *(void (**)(uint64_t, uint64_t))(v23 + 24);
    swift_unknownObjectRetain();
    uint64_t v26 = v23;
    uint64_t v27 = (uint64_t)v41;
    v25(ObjectType, v26);
    swift_unknownObjectRelease();
    uint64_t v28 = v43;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v27, 1, v10) == 1)
    {
      sub_10003B6F8(v27, &qword_10078D1E0);
      int64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v29, v30))
      {
        uint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "TTRShowTaggedViewModelSource: skip refreshing view model; missing last fetch result.",
          v31,
          2u);
        swift_slowDealloc();
      }

      return;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 32))(v42, v27, v10);
    uint64_t v32 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v34 = 0;
      _os_log_impl((void *)&_mh_execute_header, v32, v33, "TTRShowTaggedViewModelSource: refreshing view model due to canShowHashtagLabelSelector change", v34, 2u);
      swift_slowDealloc();
    }

    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0)
    {
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
      }
      else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
      {
        goto LABEL_19;
      }
      if (_CocoaArrayWrapper.endIndex.getter())
      {
        sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
LABEL_20:
        if (_CocoaArrayWrapper.endIndex.getter())
        {
          sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
          goto LABEL_23;
        }
LABEL_22:
        if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0)
        {
LABEL_25:
          REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
          uint64_t v35 = v42;
          sub_100103BC4(v42, (uint64_t)v7, 1);
          (*(void (**)(char *, uint64_t))(v40 + 8))(v7, v39);
          (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v35, v10);
          return;
        }
LABEL_23:
        if (_CocoaArrayWrapper.endIndex.getter()) {
          sub_1005B24CC((unint64_t)_swiftEmptyArrayStorage);
        }
        goto LABEL_25;
      }
    }
LABEL_19:
    if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) == 0) {
      goto LABEL_22;
    }
    goto LABEL_20;
  }
}

uint64_t sub_100103BC4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v90 = a3;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v92 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v86 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v88 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v80);
  uint64_t v81 = (uint64_t)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v82 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v95 = (uint64_t)&v76 - v18;
  uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v83 = *(void *)(v19 - 8);
  uint64_t v84 = v19;
  __chkstk_darwin(v19);
  uint64_t v87 = (uint64_t)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v78 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v77 = (char *)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v98 = type metadata accessor for REMRemindersListDataView.FlatModel();
  uint64_t v94 = *(void *)(v98 - 8);
  uint64_t v23 = __chkstk_darwin(v98);
  BOOL v25 = (char *)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v76 - v26;
  uint64_t v28 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v28 - 8);
  os_log_type_t v30 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList;
  uint64_t v97 = a1;
  uint64_t v31 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_smartList);
  uint64_t v91 = a2;
  uint64_t v89 = v11;
  uint64_t v85 = v12;
  uint64_t v79 = v21;
  if (!v31)
  {
    uint64_t v35 = REMRemindersListDataView.TaggedModel.taggedSmartList.getter();
    if (v35)
    {
      uint64_t v34 = (void *)v35;
      id v32 = 0;
LABEL_6:
      id v36 = [v34 sortingStyle];

      if (!v32)
      {
        uint64_t v42 = v94;
        if (v36)
        {

          int v93 = 0;
        }
        else
        {
          int v93 = 1;
        }
        goto LABEL_19;
      }
      if (v36)
      {
        uint64_t v37 = v4;
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v39;
        if (v38 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v40 == v41) {
          int v93 = 1;
        }
        else {
          int v93 = _stringCompareWithSmolCheck(_:_:expecting:)();
        }
        uint64_t v4 = v37;

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      goto LABEL_12;
    }
LABEL_15:
    int v93 = 1;
    goto LABEL_18;
  }
  id v32 = [v31 sortingStyle];
  uint64_t v33 = REMRemindersListDataView.TaggedModel.taggedSmartList.getter();
  if (v33)
  {
    uint64_t v34 = (void *)v33;
    goto LABEL_6;
  }
  if (!v32) {
    goto LABEL_15;
  }
LABEL_12:

  int v93 = 0;
LABEL_18:
  uint64_t v42 = v94;
LABEL_19:
  uint64_t v43 = REMRemindersListDataView.TaggedModel.taggedSmartList.getter();
  uint64_t v44 = *(void **)(v4 + v96);
  uint64_t v45 = v4;
  *(void *)(v4 + v96) = v43;

  REMRemindersListDataView.TaggedModel.flatModel.getter();
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v42 + 8);
  v46(v27, v98);
  uint64_t v47 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v48 = *(void *)(v47 - 8);
  int v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48))(v30, 1, v47);
  if (v49 == 1)
  {
    sub_10003B6F8((uint64_t)v30, &qword_100786F00);
    uint64_t v50 = 0;
  }
  else
  {
    uint64_t v50 = REMRemindersListDataView.CountByCompleted.completed.getter();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v30, v47);
  }
  uint64_t v51 = v45;
  uint64_t v52 = v45 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_completedRemindersCount;
  *(void *)uint64_t v52 = v50;
  *(unsigned char *)(v52 + 8) = v49 == 1;
  REMRemindersListDataView.TaggedModel.flatModel.getter();
  char v53 = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter();
  v46(v25, v98);
  *(unsigned char *)(v45 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_hasIncompleteOrCompletedReminders) = v53;
  if ((v93 & 1) != 0 || (int v54 = *(void **)(v45 + v96)) == 0)
  {
    uint64_t v59 = v87;
    sub_1000FFF48(v87);
    if (qword_100785290 != -1) {
      swift_once();
    }
    uint64_t v60 = sub_100018BF8(v80, (uint64_t)qword_10078CB20);
    sub_1001057DC(v60, v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_100105478(v101);
    sub_100050E5C((uint64_t)v101, (uint64_t)v102);
    uint64_t v61 = v95;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v62 = v61;
    uint64_t v63 = v82;
    sub_1001057DC(v62, v82, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    REMRemindersListDataView.TaggedModel.flatModel.getter();
    uint64_t v64 = REMRemindersListDataView.FlatModel.reminders.getter();
    v46(v25, v98);
    uint64_t v65 = v88;
    sub_10010570C(v63, v88, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v66 = v85;
    *(void *)(v65 + *(int *)(v85 + 20)) = v64;
    *(unsigned char *)(v65 + *(int *)(v66 + 24)) = 0;
    uint64_t v67 = (uint64_t)v89;
    sub_1001057DC(v59, (uint64_t)v89, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v83 + 56))(v67, 0, 1, v84);
    sub_10003B754(&qword_10078D1E8);
    unint64_t v68 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
    uint64_t v69 = swift_allocObject();
    *(_OWORD *)(v69 + 16) = xmmword_10066C6F0;
    sub_1001057DC(v65, v69 + v68, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    uint64_t v70 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v71 = swift_allocObject();
    uint64_t v72 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v73 = v59;
    uint64_t v74 = (uint64_t)v92;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v92, 1, 1, v72);
    void v100[3] = v70;
    v100[4] = &off_10074D320;
    v100[0] = v71;
    sub_1000145EC((uint64_t)v100, (uint64_t)v99);
    uint64_t v75 = swift_allocObject();
    *(void *)(v75 + 16) = v69;
    sub_100038ED8(v99, v75 + 24);
    *(void *)(v75 + 64) = v51;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10059DBB0(1, v67, (uint64_t (*)(uint64_t))sub_100051174, v75, v91, v90 & 1, v74);
    swift_release();
    sub_100038CD8((uint64_t)v100);
    swift_bridgeObjectRelease();
    sub_10003B6F8(v74, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v67, &qword_100786EF0);
    sub_100105844(v65, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_100105844(v95, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_100105844(v73, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    return swift_release();
  }
  else
  {
    id v55 = v54;
    id v56 = [v55 sortingStyle];
    uint64_t v57 = (uint64_t)v77;
    REMSortingStyle.dataViewSortingStyle.getter();

    sub_10059388C(v57, 1);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v78 + 8))(v57, v79);
  }
}

uint64_t sub_100104620()
{
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_100104670()
{
  uint64_t v0 = sub_100588C8C();
  swift_release();

  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100104704()
{
  return type metadata accessor for TTRShowTaggedViewModelSource();
}

uint64_t type metadata accessor for TTRShowTaggedViewModelSource()
{
  uint64_t result = qword_10078CB98;
  if (!qword_10078CB98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100104758()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1001047C8(uint64_t a1, uint64_t a2)
{
  return sub_100103BC4(a1, a2, 0);
}

uint64_t sub_1001047D0()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = result;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v3 = v2;
    }
    else {
      uint64_t v3 = 0;
    }
    if (v3) {
      sub_1002F75C0(*(unsigned __int8 *)(v0
    }
                                       + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_canShowHashtagLabelSelector));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100104864()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1001057DC(v11, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    char v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v5, v1);
    v13(v7, v1);
  }
  return v12 & 1;
}

uint64_t sub_100104A6C@<X0>(uint64_t a1@<X8>)
{
  if (qword_100785290 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_100018BF8(v3, (uint64_t)qword_10078CB20);
  if (static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)())
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders28TTRShowTaggedViewModelSource_taggedDataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 16);
    swift_unknownObjectRetain();
    v6(ObjectType, v4);
    uint64_t v8 = v7;
    swift_unknownObjectRelease();
    uint64_t v9 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v9, v8);
    swift_unknownObjectRelease();
    uint64_t v10 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v12 = a1;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v15 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v14 = v15;
    uint64_t v12 = a1;
    uint64_t v13 = 1;
  }

  return v11(v12, v13, 1, v14);
}

void *sub_100104C10()
{
  return sub_10010553C();
}

uint64_t sub_100104C1C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ShowTaggedViewModelSourceHashtagContext()
{
  return self;
}

uint64_t sub_100104C80()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(ObjectType, v1);
}

uint64_t sub_100104CD4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v6, ObjectType, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_100104DF4(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x40uLL);
  *a1 = v3;
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  *uint64_t v3 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[1] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[2] = malloc(v6);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = *(void *)(v1 + 24);
  v3[4] = v7;
  v3[5] = v8;
  void v3[6] = v9;
  v3[7] = swift_getObjectType();
  (*(void (**)(void))(v9 + 8))();
  return sub_100104EF8;
}

void sub_100104EF8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 8) + 16);
  v4(*(void *)(*(void *)a1 + 24), v3[4], *v3);
  uint64_t v5 = v3[6];
  uint64_t v13 = (void *)v3[4];
  uint64_t v7 = (void *)v3[2];
  size_t v6 = (void *)v3[3];
  uint64_t v8 = *v3;
  uint64_t v9 = v3[1];
  if (a2)
  {
    uint64_t v10 = v3[7];
    v4(v3[2], v3[3], *v3);
    (*(void (**)(void *, uint64_t, uint64_t))(v5 + 16))(v7, v10, v5);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v9 + 8);
    v11(v6, v8);
    uint64_t v12 = v13;
    v11(v13, v8);
  }
  else
  {
    (*(void (**)(void, void, uint64_t))(v5 + 16))(v3[3], v3[7], v5);
    uint64_t v12 = v13;
    (*(void (**)(void *, uint64_t))(v9 + 8))(v13, v8);
  }
  free(v12);
  free(v6);
  free(v7);

  free(v3);
}

uint64_t sub_100105048()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 32))(ObjectType, v1);
}

uint64_t sub_100105094(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return __CocoaDictionary.startIndex.getter();
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v1 = 1 << v5;
  if (v6 < 7) {
    return v1;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  unint64_t v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v3 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v2 = v10;
    --v8;
    v3 += 64;
    if (v10) {
      return __clz(__rbit64(v2)) + v3;
    }
  }
  return v1;
}

void sub_100105158(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      __CocoaDictionary.lookup(_:)();
      sub_1000368FC(0, qword_10078E3D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      sub_1000368FC(0, (unint64_t *)&unk_1007A1A90);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v13;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (__CocoaDictionary.Index.age.getter() == *(_DWORD *)(a5 + 36))
    {
      __CocoaDictionary.Index.key.getter();
      sub_1000368FC(0, qword_10078E3D0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v6 = sub_10035C188((uint64_t)v13);
      char v9 = v8;

      if (v9) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = *(void **)(*(void *)(a5 + 48) + 8 * v6);
  uint64_t v11 = *(void **)(*(void *)(a5 + 56) + 8 * v6);
  *a1 = v11;
  v10;
  id v12 = v11;
}

void *sub_100105384(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    specialized ContiguousArray.reserveCapacity(_:)();
    unint64_t v6 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v7 = *(v6 - 1);
      uint64_t v8 = *v6;
      swift_bridgeObjectRetain();
      char v9 = a2(v7, v8);
      sub_100103088(v7, v8, v9 & 1);
      swift_bridgeObjectRelease();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      v6 += 2;
      --v3;
    }
    while (v3);
    return _swiftEmptyArrayStorage;
  }
  return result;
}

double sub_100105478(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 106) = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100105494()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1001054DC(uint64_t a1, uint64_t a2)
{
  return sub_1004578D8(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_1001054E4()
{
  unint64_t result = qword_100793B50;
  if (!qword_100793B50)
  {
    type metadata accessor for Key(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100793B50);
  }
  return result;
}

void *sub_10010553C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_100105844((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_10010570C((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      char v9 = *v4;
      unint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_100105844((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_10010570C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100105774()
{
  unint64_t result = qword_100791EF0;
  if (!qword_100791EF0)
  {
    sub_1000368FC(255, &qword_10078D220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100791EF0);
  }
  return result;
}

uint64_t sub_1001057DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100105844(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001058A4()
{
  return sub_10010076C(v0);
}

uint64_t sub_1001058AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100786EF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_100105918(uint64_t *a1, void **a2, uint64_t a3)
{
  uint64_t v86 = a1;
  uint64_t v87 = a3;
  uint64_t v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v80 = (char *)&v75 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v85);
  uint64_t v91 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRListType.SortingCapability();
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v82 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v90 = (uint64_t)&v75 - v10;
  uint64_t v89 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v11 = *(void *)(v89 - 8);
  uint64_t v12 = __chkstk_darwin(v89);
  uint64_t v14 = (char *)&v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v88 = (char *)&v75 - v15;
  uint64_t v16 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v75 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (void **)((char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10010630C((uint64_t)a2, (uint64_t)v21, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.nonAssignableLists.getter();
  sub_100055D48(v21, (uint64_t)v18, (void *)1, (uint64_t)v95);
  uint64_t v22 = (void *)TTRListType.PredefinedSmartListType.smartList(in:)();
  if (v22)
  {
    *(void *)&v94[0] = sub_100106818();
    *((void *)&v94[0] + 1) = &protocol witness table for REMSmartList;
    uint64_t v23 = v22;
  }
  else
  {
    uint64_t v23 = 0;
    long long v93 = 0u;
    v94[0] = 0u;
  }
  LODWORD(v78) = v22 != 0;
  uint64_t v92 = v22;
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
  id v81 = v23;
  uint64_t v24 = v88;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
  uint64_t v25 = v89;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v84 = v11 + 8;
  v83(v14, v89);
  sub_10003B6F8((uint64_t)&v92, &qword_100787480);
  uint64_t v26 = *a2;
  uint64_t v79 = a2;
  uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v27(v14, v24, v25);
  type metadata accessor for TTRShowAssignedDataModelSource();
  swift_allocObject();
  id v28 = v26;
  uint64_t v29 = TTRShowAssignedDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)();
  v27(v14, v24, v25);
  uint64_t v30 = v90;
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)();
  id v31 = v95[0];
  uint64_t v32 = v82;
  sub_10010630C(v30, v82, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  type metadata accessor for TTRShowAssignedViewModelSource();
  uint64_t v33 = (void *)swift_allocObject();
  id v34 = v81;
  swift_retain();
  id v35 = v31;
  uint64_t v36 = sub_100106374(v22, v29, v35, v32, 0, v33);
  id v81 = v34;

  uint64_t v82 = v29;
  swift_release();

  sub_10010630C((uint64_t)v79, (uint64_t)v21, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100057134((uint64_t)v95, (uint64_t)&v92);
  swift_retain();
  uint64_t v78 = v36;
  sub_100056B24((uint64_t)v21, (uint64_t)&v92, v36, (uint64_t)&off_1007512D8, v91);
  uint64_t v37 = (uint64_t)v80;
  sub_100056CAC((uint64_t)v80);
  uint64_t v79 = (void *)type metadata accessor for TTRIRemindersCommonPresenter(0);
  uint64_t v38 = swift_allocObject();
  uint64_t v39 = v87;
  swift_unknownObjectRetain();
  uint64_t v40 = sub_1003585DC(v37, v39, v38);
  uint64_t v41 = *(void *)(v40 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 104))(ObjectType, v41);
  if (v43)
  {
    uint64_t v45 = v44;
    uint64_t v46 = swift_getObjectType();
    LOBYTE(v45) = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 16))(v46, v45);
    swift_unknownObjectRelease();
    LOBYTE(v43) = v45 & 1;
  }
  uint64_t v47 = sub_1001D0C84(v43, v40);
  id v77 = v48;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v76 = swift_getObjectType();
  *(void *)(v40 + 24) = *(void *)(v52 + 8);
  uint64_t v87 = v50;
  swift_unknownObjectWeakAssign();
  uint64_t v53 = *(void *)(v40 + 144);
  uint64_t v54 = swift_getObjectType();
  id v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 104);
  swift_retain();
  id v56 = v47;
  if (v55(v54, v53))
  {
    uint64_t v58 = v57;
    uint64_t v59 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v58 + 16))(v59, v58);
    swift_unknownObjectRelease();
  }
  id v60 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v80 = v56;
  uint64_t v61 = (void *)sub_10035A06C(v40);
  swift_release();

  uint64_t v62 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v52 + 32);
  id v77 = v61;
  v62(v61, &off_1007464D0, v76, v52);
  uint64_t v63 = (char *)v95[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v63 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v64 = (char *)v95[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v64 + 1) = &protocol witness table for TTRShowAssignedDataModelSource;
  uint64_t v65 = v82;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v66 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v65 + 392);
  uint64_t v67 = swift_retain();
  v66(v67, &off_100739ED0);
  swift_retain();
  uint64_t v68 = swift_retain();
  sub_1005B1F9C(v68, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v69 = v91;
  *(void *)(*(void *)(v91 + *(int *)(v85 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v96, (uint64_t)&v92);
  *(_OWORD *)((char *)v94 + 8) = v97;
  *(_OWORD *)((char *)&v94[1] + 8) = v98;
  *(void *)(v97 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)&v92);
  sub_100038DC0((uint64_t)v99, (uint64_t)&v92);
  uint64_t v70 = v100;
  *((void *)&v94[0] + 1) = v99[4];
  *(void *)&v94[1] = v100;
  uint64_t v71 = swift_getObjectType();
  uint64_t v72 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v70 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v72(v40, &off_10073CA90, v71, v70);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)&v92);
  uint64_t v73 = v86;
  v86[3] = (uint64_t)v79;
  v73[4] = (uint64_t)&off_10073A6A0;
  *uint64_t v73 = v40;

  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1001067B8(v69, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_1001067B8(v90, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  v83(v88, v89);
  sub_100057B44(v95);
  return v77;
}

id TTRIShowAssignedAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowAssignedAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowAssignedAssembly()
{
  return self;
}

id TTRIShowAssignedAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowAssignedAssembly();
  return [super dealloc];
}

uint64_t sub_10010630C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100106374(void *a1, uint64_t a2, void *a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v11 = *a6;
  id v42 = a3;
  uint64_t v43 = v11;
  uint64_t v44 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v12 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_smartList;
  *(void *)((char *)a6 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_smartList) = 0;
  uint64_t v22 = (char *)a6 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_completedRemindersCount;
  *(void *)uint64_t v22 = 0;
  v22[8] = 1;
  *((unsigned char *)a6 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_hasCompletedReminders) = 2;
  *(void *)((char *)a6
            + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  uint64_t v23 = *(void **)((char *)a6 + v21);
  *(void *)((char *)a6 + v21) = a1;
  swift_retain();
  id v24 = a1;

  uint64_t v25 = (void *)((char *)a6 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_assignedDataModelSource);
  *uint64_t v25 = a2;
  v25[1] = (uint64_t)&protocol witness table for TTRShowAssignedDataModelSource;
  *((unsigned char *)a6 + OBJC_IVAR____TtC9Reminders30TTRShowAssignedViewModelSource_hasDefaultNewReminderButton) = a5;
  swift_retain();
  swift_release();
  sub_10010630C(a4, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain();
  uint64_t v26 = sub_100359DC4(a2, (uint64_t)v42, (uint64_t)v20, (uint64_t)a6);
  swift_retain();
  sub_1000DA4EC((uint64_t)v17);
  uint64_t v27 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 0, 1, v27);
  sub_1005885DC((uint64_t)v17);
  sub_10003B6F8((uint64_t)v17, &qword_100786EF0);
  id v28 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v29 = v28;
  static REMAnalyticsManager.shared.getter();
  uint64_t v30 = sub_10003B754(&qword_10078D258);
  id v31 = (uint64_t *)&v14[*(int *)(v30 + 48)];
  uint64_t v32 = (uint64_t *)&v14[*(int *)(v30 + 80)];
  uint64_t v33 = enum case for REMRemindersOpenUserOperation.SmartListType.assigned(_:);
  uint64_t v34 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 104))(v14, v33, v34);
  uint64_t v35 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  uint64_t v36 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 104))(v14, v35, v36);
  *id v31 = TTRUserDefaults.activitySessionId.getter();
  v31[1] = v37;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *uint64_t v32 = _typeName(_:qualified:)();
  v32[1] = v38;
  uint64_t v39 = v44;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for REMAnalyticsEvent.openListUserOperation(_:), v44);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1001067B8(a4, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v39);
  return v26;
}

uint64_t sub_1001067B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_100106818()
{
  unint64_t result = qword_10078D250;
  if (!qword_10078D250)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10078D250);
  }
  return result;
}

uint64_t sub_100106858(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1001068AC(void *a1, void *a2, unsigned __int8 a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = type metadata accessor for TTRAutoCategorizationOverlayView();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v39 = (char *)&v38 - v14;
  if (a3 >> 6)
  {
    if (a3 >> 6 == 1)
    {
      id v15 = a2;
      uint64_t v38 = static TTRLocalizableStrings.AutoCategorization.multipleItemsTitle(withCount:)();
      TTRSection.displayName.getter();
      sub_1001086F0(a1, a2, a3);
    }
    else
    {
      uint64_t v38 = static TTRLocalizableStrings.AutoCategorization.multipleItemsTitle(withCount:)();
      static TTRLocalizableStrings.AutoCategorization.multipleItemsSubtitle.getter();
    }
  }
  else
  {
    id v16 = a2;
    uint64_t v38 = static TTRLocalizableStrings.AutoCategorization.singleItemTitle.getter();
    TTRSection.displayName.getter();
  }
  sub_1001086A4(a1, a2, a3);
  sub_100108514(a1, a2, a3);
  sub_1001086F0(a1, a2, a3);
  if (a4) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = a1;
  *(void *)(v18 + 32) = a2;
  *(unsigned char *)(v18 + 40) = a3;
  uint64_t v19 = (uint64_t)v39;
  TTRAutoCategorizationOverlayView.init(titleString:subtitleString:shouldShowArrow:tapHandler:)();
  uint64_t v20 = OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController;
  uint64_t v21 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
  if (v21)
  {
    sub_100108834(v19, (uint64_t)v13);
    sub_1001086A4(a1, a2, a3);
    id v22 = v21;
    dispatch thunk of UIHostingController.rootView.setter();
  }
  else
  {
    sub_1001086A4(a1, a2, a3);
    id v23 = sub_10010702C(v19);
    id v24 = *(void **)(v5 + v20);
    *(void *)(v5 + v20) = v23;

    uint64_t v25 = self;
    uint64_t v44 = sub_1001087C8;
    uint64_t v45 = v5;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v41 = 1107296256;
    id v42 = sub_10000AD88;
    uint64_t v43 = &unk_10073A700;
    uint64_t v26 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v25 animateWithDuration:0 delay:v26 usingSpringWithDamping:0 initialSpringVelocity:0.24 options:0.0 animations:0.2 completion:0.0];
    _Block_release(v26);
  }
  uint64_t v27 = OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayTimer;
  id v28 = *(void **)(v5 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayTimer);
  if (v28) {
    [v28 invalidate];
  }
  double v29 = 10.0;
  if (!UIAccessibilityIsSwitchControlRunning() && (static UIAccessibility.ttriIsVoiceControlRunning.getter() & 1) == 0)
  {
    if (static UIAccessibility.ttriIsFullKeyboardAccessRunning.getter()) {
      double v29 = 10.0;
    }
    else {
      double v29 = 3.0;
    }
  }
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v44 = sub_1001087D0;
  uint64_t v45 = v30;
  id aBlock = _NSConcreteStackBlock;
  uint64_t v41 = 1107296256;
  id v42 = sub_1001077FC;
  uint64_t v43 = &unk_10073A728;
  id v31 = _Block_copy(&aBlock);
  uint64_t v32 = self;
  swift_retain();
  id v33 = [v32 timerWithTimeInterval:0 repeats:v31 block:v29];
  _Block_release(v31);
  swift_release();
  swift_release();
  uint64_t v34 = *(void **)(v5 + v27);
  *(void *)(v5 + v27) = v33;
  id v35 = v33;

  id v36 = [self currentRunLoop];
  [v36 addTimer:v35 forMode:NSRunLoopCommonModes];

  return sub_1001087D8(v19);
}

void sub_100106DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = Strong;
    uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
    if (v9)
    {
      id v10 = v9;
      id v11 = [v10 view];
      if (v11)
      {
        uint64_t v12 = v11;
        unsigned __int8 v13 = [v11 isHidden];

        if ((v13 & 1) == 0)
        {
          uint64_t v14 = swift_unknownObjectWeakLoadStrong();
          if (v14)
          {
            uint64_t v15 = *(void *)(v14 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 936))(a2, a3, a4, ObjectType, v15);
            swift_unknownObjectRelease();
          }
          uint64_t v17 = self;
          id v24 = sub_100108898;
          uint64_t v25 = v8;
          id aBlock = _NSConcreteStackBlock;
          uint64_t v21 = 1107296256;
          id v22 = sub_10000AD88;
          id v23 = &unk_10073A7A0;
          uint64_t v18 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          id v24 = sub_1001088A0;
          uint64_t v25 = v8;
          id aBlock = _NSConcreteStackBlock;
          uint64_t v21 = 1107296256;
          id v22 = sub_100106858;
          id v23 = &unk_10073A7C8;
          uint64_t v19 = _Block_copy(&aBlock);
          swift_retain();
          swift_release();
          [v17 animateWithDuration:0 delay:v18 usingSpringWithDamping:v19 initialSpringVelocity:0.24 options:0.0 animations:0.2 completion:0.0];
          _Block_release(v19);
          _Block_release(v18);
        }
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_release();
    }
  }
}

id sub_10010702C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for UIHostingControllerSizingOptions();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for TTRAutoCategorizationOverlayView();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v9 = (void *)Strong;
  sub_100108834(a1, (uint64_t)v7);
  id v10 = objc_allocWithZone((Class)sub_10003B754(&qword_10078D380));
  id v11 = (void *)UIHostingController.init(rootView:)();
  static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
  dispatch thunk of UIHostingController.sizingOptions.setter();
  UIHostingController.safeAreaRegions.setter();
  id result = [v11 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_22;
  }
  unsigned __int8 v13 = result;
  [result setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = [v11 view];
  if (!result)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v14 = result;
  [result setAlpha:0.0];

  id result = [v11 view];
  if (!result)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v15 = result;
  id v16 = [self clearColor];
  [v15 setBackgroundColor:v16];

  [v9 addChildViewController:v11];
  id result = [v9 view];
  if (!result)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v17 = result;
  id result = [v11 view];
  if (result)
  {
    uint64_t v18 = result;
    [v17 addSubview:result];

    [v11 didMoveToParentViewController:v9];
    id v19 = [v11 view];
    if (v19)
    {
      uint64_t v20 = v19;
      id v21 = [v9 view];
      if (v21)
      {
        id v22 = v21;
        char v23 = *(unsigned char *)(v2
                       + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_alreadyAppliedWorkaround);
        id v24 = [v20 bottomAnchor];
        if (v23)
        {
          id v25 = [v22 keyboardLayoutGuide];
          id v26 = [v25 topAnchor];

          if (qword_100785298 != -1) {
            swift_once();
          }
          double v27 = -*(double *)&qword_10078D260;
        }
        else
        {
          id v28 = [v22 layoutMarginsGuide];
          id v26 = [v28 bottomAnchor];

          double v29 = -*(double *)(v2 + 32);
          if (qword_100785298 != -1)
          {
            *(double *)uint64_t v47 = -*(double *)(v2 + 32);
            swift_once();
            double v29 = *(double *)v47;
          }
          double v27 = v29 - *(double *)&qword_10078D260;
        }
        id v30 = [v24 constraintEqualToAnchor:v26 constant:v27];

        id v31 = *(void **)(v2
                       + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_workaroundOverlayBottomConstraint);
        *(void *)(v2
                  + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_workaroundOverlayBottomConstraint) = v30;
        id v32 = v30;

        v47[0] = self;
        sub_10003B754((uint64_t *)&unk_1007894B0);
        uint64_t v33 = swift_allocObject();
        *(_OWORD *)(v33 + 16) = xmmword_10066C4F0;
        *(void *)(v33 + 32) = v32;
        id v34 = v32;
        id v35 = [v20 centerXAnchor];
        id v36 = [v22 centerXAnchor];
        id v37 = [v35 constraintEqualToAnchor:v36];

        *(void *)(v33 + 40) = v37;
        id v38 = [v20 leadingAnchor];
        id v39 = [v22 layoutMarginsGuide];
        id v40 = [v39 leadingAnchor];

        id v41 = [v38 constraintGreaterThanOrEqualToAnchor:v40];
        *(void *)(v33 + 48) = v41;
        id v42 = [v20 trailingAnchor];
        id v43 = [v22 layoutMarginsGuide];
        id v44 = [v43 trailingAnchor];

        id v45 = [v42 constraintLessThanOrEqualToAnchor:v44];
        *(void *)(v33 + 56) = v45;
        v47[1] = (id)v33;
        specialized Array._endMutation()();
        sub_1001088A8();
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v47[0] activateConstraints:isa];

        swift_unknownObjectRelease();
        return v11;
      }
    }
    swift_unknownObjectRelease();
    return 0;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10010765C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = self;
    uint64_t v9 = sub_100108898;
    uint64_t v10 = v1;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v6 = 1107296256;
    uint64_t v7 = sub_10000AD88;
    uint64_t v8 = &unk_10073A750;
    uint64_t v3 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    uint64_t v9 = sub_1001088A0;
    uint64_t v10 = v1;
    id aBlock = _NSConcreteStackBlock;
    uint64_t v6 = 1107296256;
    uint64_t v7 = sub_100106858;
    uint64_t v8 = &unk_10073A778;
    uint64_t v4 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    [v2 animateWithDuration:0 delay:v3 usingSpringWithDamping:v4 initialSpringVelocity:0.24 options:0.0 animations:0.2 completion:0.0];
    _Block_release(v4);
    _Block_release(v3);
    return swift_release();
  }
  return result;
}

void sub_1001077FC(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_100107864()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayTimer);
  if (v1) {
    [v1 invalidate];
  }
  uint64_t v2 = OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
  if (v3)
  {
    id v4 = v3;
    id v5 = [v4 view];
    if (v5)
    {
      uint64_t v6 = v5;
      [v5 setHidden:1];

      id v7 = [v4 view];
      if (v7)
      {
        uint64_t v8 = v7;
        [v7 removeFromSuperview];

        [v4 willMoveToParentViewController:0];
        [v4 removeFromParentViewController];

        uint64_t v9 = *(void **)(v0 + v2);
        *(void *)(v0 + v2) = 0;

        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
  }
}

void sub_10010797C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_alreadyAppliedWorkaround;
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_alreadyAppliedWorkaround) & 1) == 0)
  {
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
    if (v2)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        id v4 = (void *)Strong;
        id v5 = v2;
        id v6 = [v4 view];
        if (v6)
        {
          id v19 = v6;
          id v7 = *(void **)(v0
                        + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_workaroundOverlayBottomConstraint);
          if (v7)
          {
            id v8 = v7;
            [v8 setActive:0];
            id v9 = [v5 view];
            if (v9)
            {
              uint64_t v10 = v9;
              id v11 = [v9 bottomAnchor];

              id v12 = [v19 keyboardLayoutGuide];
              id v13 = [v12 topAnchor];

              if (qword_100785298 != -1) {
                swift_once();
              }
              id v14 = [v11 constraintEqualToAnchor:v13 constant:-*(double *)&qword_10078D260];

              [v14 setActive:1];
              uint64_t v15 = self;
              uint64_t v16 = swift_allocObject();
              *(void *)(v16 + 16) = v19;
              aBlock[4] = sub_100108A78;
              aBlock[5] = v16;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_10000AD88;
              void aBlock[3] = &unk_10073A818;
              uint64_t v17 = _Block_copy(aBlock);
              id v18 = v19;
              swift_release();
              [v15 animateWithDuration:v17 animations:0.2];

              swift_unknownObjectRelease();
              _Block_release(v17);
              *(unsigned char *)(v0 + v1) = 1;
            }
            else
            {
              __break(1u);
            }
          }
          else
          {

            swift_unknownObjectRelease();
          }
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
    }
  }
}

uint64_t sub_100107C8C()
{
  uint64_t v1 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v29 - v9;
  __chkstk_darwin(v11);
  id v13 = (char *)&v29 - v12;
  uint64_t v14 = v0
      + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary;
  uint64_t v15 = *(unsigned __int8 *)(v0
                           + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary
                           + 16);
  if (v15 > 0xFB) {
    goto LABEL_9;
  }
  uint64_t v16 = *(void **)(v14 + 8);
  id v31 = *(void **)v14;
  uint64_t v17 = v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityTimeOfMostRecentChange;
  swift_beginAccess();
  sub_100108978(v17, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_1001089E0((uint64_t)v3);
LABEL_9:
    char v27 = 0;
    return v27 & 1;
  }
  id v18 = v31;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v13, v3, v4);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v13, v4);
    goto LABEL_9;
  }
  uint64_t v20 = Strong;
  id v30 = v16;
  sub_1001086A4(v18, v16, v15);
  static Date.+ infix(_:_:)();
  static Date.now.getter();
  char v21 = static Date.> infix(_:_:)();
  id v22 = *(void (**)(char *, uint64_t))(v5 + 8);
  v22(v7, v4);
  v22(v10, v4);
  if ((v21 & 1) == 0)
  {
    v22(v13, v4);
    sub_1001088FC(v31, v30, v15);
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  sub_100108514(0, 0, 0xFCu);
  uint64_t v23 = *(void *)(v20 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v26 = v30;
  id v25 = v31;
  char v27 = (*(uint64_t (**)(void *, void *, uint64_t, uint64_t, uint64_t))(v23 + 936))(v31, v30, v15, ObjectType, v23);
  sub_1001088FC(v25, v26, v15);
  swift_unknownObjectRelease();
  v22(v13, v4);
  return v27 & 1;
}

void sub_100107FC4()
{
  qword_10078D260 = 0x4024000000000000;
}

void sub_100107FD4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
  if (!v1) {
    return;
  }
  id v2 = v1;
  id v3 = [v2 view];
  if (!v3)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v4 = v3;
  [v3 setHidden:0];

  id v5 = [v2 view];
  if (!v5)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v6 = v5;
  [v5 setAlpha:1.0];
}

void sub_1001080A8(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
  if (v1)
  {
    id v2 = [v1 view];
    if (v2)
    {
      id v3 = v2;
      [v2 setAlpha:0.0];
    }
  }
}

void sub_100108120(char a1, uint64_t a2)
{
  if ((a1 & 1) == 0) {
    return;
  }
  uint64_t v3 = OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController;
  uint64_t v4 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController);
  if (!v4) {
    return;
  }
  id v5 = v4;
  id v6 = [v5 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_10;
  }
  id v7 = v6;
  [v6 setHidden:1];

  id v8 = [v5 view];
  if (!v8)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v9 = v8;
  [v8 removeFromSuperview];

  [v5 willMoveToParentViewController:0];
  [v5 removeFromParentViewController];

  uint64_t v10 = *(void **)(a2 + v3);
  *(void *)(a2 + v3) = 0;
}

uint64_t sub_100108224()
{
  sub_1000499D4(v0 + 16);
  sub_1001089E0(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityTimeOfMostRecentChange);
  sub_1001088FC(*(void **)(v0+ OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary), *(void **)(v0+ OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary+ 8), *(unsigned char *)(v0+ OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary+ 16));

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_workaroundOverlayBottomConstraint));

  return swift_deallocClassInstance();
}

uint64_t sub_1001082D8()
{
  return type metadata accessor for TTRIAutoCategorizationOverlayController();
}

uint64_t type metadata accessor for TTRIAutoCategorizationOverlayController()
{
  uint64_t result = qword_10078D2C0;
  if (!qword_10078D2C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10010832C()
{
  sub_1001083F4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001083F4()
{
  if (!qword_1007AD5E0)
  {
    type metadata accessor for Date();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007AD5E0);
    }
  }
}

uint64_t sub_10010844C()
{
  *(void *)(v0 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v0 + 32) = 0;
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityTimeOfMostRecentChange;
  uint64_t v2 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary;
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(unsigned char *)(v3 + 16) = -4;
  *(void *)(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayTimer) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_overlayHostingController) = 0;
  *(void *)(v0
            + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_workaroundOverlayBottomConstraint) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController__115183495_alreadyAppliedWorkaround) = 0;
  return v0;
}

uint64_t sub_100108514(void *a1, void *a2, unsigned __int8 a3)
{
  uint64_t v7 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3
      + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary;
  uint64_t v11 = *(void **)(v3
                 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary);
  uint64_t v12 = *(void **)(v3
                 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityMostRecentChangeSummary
                 + 8);
  *(void *)uint64_t v10 = a1;
  *(void *)(v10 + 8) = a2;
  unsigned __int8 v13 = *(unsigned char *)(v10 + 16);
  *(unsigned char *)(v10 + 16) = a3;
  sub_1001088E8(a1, a2, a3);
  sub_1001088FC(v11, v12, v13);
  if (*(unsigned __int8 *)(v10 + 16) < 0xFCu)
  {
    static Date.now.getter();
    uint64_t v15 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    uint64_t v14 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 1, 1, v14);
  }
  uint64_t v16 = v3 + OBJC_IVAR____TtC9Reminders39TTRIAutoCategorizationOverlayController_ttriAccessibilityTimeOfMostRecentChange;
  swift_beginAccess();
  sub_100108910((uint64_t)v9, v16);
  return swift_endAccess();
}

id sub_1001086A4(id result, void *a2, unsigned __int8 a3)
{
  if (a3 >> 6 != 1)
  {
    if (a3 >> 6) {
      return result;
    }
    id v5 = result;
    id v4 = a2;
    a2 = v5;
  }
  return a2;
}

void sub_1001086F0(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 >> 6 != 1)
  {
    if (a3 >> 6) {
      return;
    }
    id v4 = a2;

    a2 = v4;
  }
}

uint64_t sub_10010873C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100108774()
{
  swift_release();
  sub_1001086F0(*(void **)(v0 + 24), *(void **)(v0 + 32), *(unsigned char *)(v0 + 40));

  return _swift_deallocObject(v0, 41, 7);
}

void sub_1001087B8()
{
  sub_100106DBC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

void sub_1001087C8()
{
  sub_100107FD4(v0);
}

uint64_t sub_1001087D0()
{
  return sub_10010765C();
}

uint64_t sub_1001087D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRAutoCategorizationOverlayView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100108834(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAutoCategorizationOverlayView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100108898()
{
  sub_1001080A8(v0);
}

void sub_1001088A0(char a1)
{
  sub_100108120(a1, v1);
}

unint64_t sub_1001088A8()
{
  unint64_t result = qword_100793B60;
  if (!qword_100793B60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100793B60);
  }
  return result;
}

id sub_1001088E8(id result, void *a2, unsigned __int8 a3)
{
  if (a3 <= 0xFBu) {
    return sub_1001086A4(result, a2, a3);
  }
  return result;
}

void sub_1001088FC(void *a1, void *a2, unsigned __int8 a3)
{
  if (a3 <= 0xFBu) {
    sub_1001086F0(a1, a2, a3);
  }
}

uint64_t sub_100108910(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100799F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100108978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100799F20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001089E0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100799F20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100108A40()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_100108A78()
{
  return [*(id *)(v0 + 16) layoutIfNeeded];
}

uint64_t sub_100108AB0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t, uint64_t))(a2 + 104))(0, 0, a1, a2);
}

uint64_t sub_100108AD4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078D388);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078D388);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

char *TTRListDetailInteractor.__allocating_init(editor:undoManager:)(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  swift_allocObject();
  id v6 = sub_10010D024(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8))(a1);
  return v6;
}

char *TTRListDetailInteractor.init(editor:undoManager:)(uint64_t a1, void *a2)
{
  uint64_t v4 = *v2;
  id v5 = sub_10010D024(a1, a2);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v4 + 80) - 8) + 8))(a1);
  return v5;
}

uint64_t sub_100108CA0(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(a1 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t *TTRListDetailInteractor.deinit()
{
  uint64_t v1 = *v0;
  if (*(uint64_t *)((char *)v0 + *(void *)(*v0 + 112)))
  {
    sub_1000368FC(0, (unint64_t *)&qword_1007A46F0);
    swift_retain();
    static NSUndoManager.removeObserver(with:)();
    swift_release();
    sub_1000499D4((uint64_t)(v0 + 2));
    (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TTRListDetailInteractor.__deallocating_deinit()
{
  TTRListDetailInteractor.deinit();

  return swift_deallocClassInstance();
}

uint64_t TTRListDetailInteractor.changeItem.getter()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)v0 + 88) + 24))(*(void *)(*(void *)v0 + 80));
}

uint64_t TTRListDetailInteractor.hasUnsavedChanges.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = *(void *)(*v0 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = (char *)v15 - v6;
  uint64_t v8 = *(uint64_t *)((char *)v0 + *(void *)(v1 + 120));
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 24);
  swift_unknownObjectRetain();
  v9(v3, v2);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(AssociatedTypeWitness, AssociatedConformanceWitness);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, AssociatedTypeWitness);
  if (v8)
  {
    v15[0] = v11;
    v15[1] = v8;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_unknownObjectRetain();
    char v12 = dispatch thunk of static Equatable.== infix(_:_:)();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    char v13 = v12 ^ 1;
  }
  else
  {
    swift_unknownObjectRelease();
    char v13 = 1;
  }
  return v13 & 1;
}

Swift::Void __swiftcall TTRListDetailInteractor.update(name:)(Swift::String name)
{
  uint64_t v2 = *v1;
  unint64_t v3 = (unint64_t)String.validatedListName()();
  (*(void (**)(unint64_t))(*(void *)(v2 + 88) + 56))(v3);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = v1[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
    swift_unknownObjectRelease();
  }
}

uint64_t TTRListDetailInteractor.update(color:)(uint64_t a1)
{
  (*(void (**)(uint64_t, void))(*(void *)(*v1 + 88) + 64))(a1, *(void *)(*v1 + 80));
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = v1[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall TTRListDetailInteractor.update(badgeEmblem:)(__C::REMListBadgeEmblem badgeEmblem)
{
  (*(void (**)(NSString, void))(*(void *)(*v1 + 88) + 72))(badgeEmblem._rawValue, *(void *)(*v1 + 80));
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = v1[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
}

Swift::Void __swiftcall TTRListDetailInteractor.update(badgeEmoji:)(Swift::String badgeEmoji)
{
  (*(void (**)(uint64_t, void *, void))(*(void *)(*v1 + 88) + 80))(badgeEmoji._countAndFlagsBits, badgeEmoji._object, *(void *)(*v1 + 80));
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = v1[3];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
}

void TTRListDetailInteractor.update(filter:)(uint64_t a1)
{
  (*(void (**)(long long *__return_ptr, void))(*(void *)(*v1 + 88) + 32))(&v11, *(void *)(*v1 + 80));
  if (v12)
  {
    sub_100038ED8(&v11, (uint64_t)v13);
    uint64_t v3 = v14;
    uint64_t v4 = v15;
    sub_100038D28(v13, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v5 = v1[3];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
      swift_unknownObjectRelease();
    }
    sub_100038CD8((uint64_t)v13);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v11, &qword_10078D3A0);
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10078D388);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRListDetailInteractor: failed to update filter; missing editor.filterEditingContext",
        v10,
        2u);
      swift_slowDealloc();
    }
  }
}

void TTRListDetailInteractor.update(listType:)(uint64_t a1)
{
  (*(void (**)(long long *__return_ptr, void))(*(void *)(*v1 + 88) + 40))(&v11, *(void *)(*v1 + 80));
  if (v12)
  {
    sub_100038ED8(&v11, (uint64_t)v13);
    uint64_t v3 = v14;
    uint64_t v4 = v15;
    sub_100038D28(v13, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 8))(a1, v3, v4);
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v5 = v1[3];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(ObjectType, v5);
      swift_unknownObjectRelease();
    }
    sub_100038CD8((uint64_t)v13);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v11, &qword_10078D3A8);
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10078D388);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "TTRListDetailInteractor: failed to update filter; missing editor.listTypeEditingContext",
        v10,
        2u);
      swift_slowDealloc();
    }
  }
}

Swift::Void __swiftcall TTRListDetailInteractor.removeExistingSections()()
{
  (*(void (**)(long long *__return_ptr, void))(*(void *)(*(void *)v0 + 88) + 48))(&v7, *(void *)(*(void *)v0 + 80));
  if (v8)
  {
    sub_100038ED8(&v7, (uint64_t)v9);
    uint64_t v1 = v10;
    uint64_t v2 = v11;
    sub_100038D28(v9, v10);
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
    sub_100038CD8((uint64_t)v9);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v7, &qword_10078D3B0);
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10078D388);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRListDetailInteractor: failed to remove existing sections; missing editor.sectionsEditingContext",
        v6,
        2u);
      swift_slowDealloc();
    }
  }
}

uint64_t TTRListDetailInteractor.save(completion:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(*(void *)v2 + 88) + 88))(a1, a2, *(void *)(*(void *)v2 + 80));
}

BOOL static TTRListDetailSavedObjectID.ObjectType.__derived_enum_equals(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

void TTRListDetailSavedObjectID.ObjectType.hash(into:)(uint64_t a1, unsigned __int8 a2)
{
}

Swift::Int TTRListDetailSavedObjectID.ObjectType.hashValue.getter(unsigned __int8 a1)
{
  return Hasher._finalize()();
}

uint64_t TTRListDetailSavedObjectID.objectType.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t TTRListDetailSavedObjectID.undoNavigationEditingTarget.getter(void *a1, char a2)
{
  if (a2)
  {
    if (a2 == 1) {
      uint64_t v3 = (unint64_t *)&qword_10078D250;
    }
    else {
      uint64_t v3 = (unint64_t *)&qword_10078D3B8;
    }
  }
  else
  {
    uint64_t v3 = &qword_100791CF0;
  }
  sub_1000368FC(0, v3);
  sub_1000368FC(0, qword_10078E3D0);
  swift_getMetatypeMetadata();
  id v4 = a1;
  return TTRUndoNavigationEditingTarget.init(id:itemType:)();
}

void TTRListEditor.listTypeEditingContext.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = [(id)v1[2] accountCapabilities];
  unsigned int v5 = [v4 supportsGroceriesList];

  if (v5)
  {
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = &protocol witness table for TTRListEditor;
    swift_retain();
  }
  else
  {
    uint64_t v1 = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  *(void *)a1 = v1;
}

id REMListChangeItem.canMakeIntoGroceriesList.getter()
{
  id v1 = [v0 accountCapabilities];
  id v2 = [v1 supportsGroceriesList];

  return v2;
}

void TTRListEditor.sectionsEditingContext.getter(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = [(id)v1[2] accountCapabilities];
  unsigned int v5 = [v4 supportsSections];

  if (v5)
  {
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = &protocol witness table for TTRListEditor;
    swift_retain();
  }
  else
  {
    id v1 = 0;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
  }
  *(void *)a1 = v1;
}

id TTRListEditor.listDetailSave(completion:)(uint64_t a1, uint64_t a2)
{
  unsigned int v5 = *(void **)(v2 + 16);
  id v6 = [v5 saveRequest];
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  long long v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v11[4] = sub_10010D550;
  void v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100009ADC;
  _OWORD v11[3] = &unk_10073A868;
  os_log_type_t v9 = _Block_copy(v11);
  sub_10006C140(a1);
  swift_release();
  [v6 saveWithQueue:v7 completion:v9];
  _Block_release(v9);

  return [v5 objectID];
}

void TTRListEditor.edit(listType:)(char a1)
{
  TTRListEditor.edit(shouldCategorizeGroceryItems:)(a1 == 1);
}

Swift::Void __swiftcall TTRListEditor.removeExistingSections()()
{
  id v1 = v0;
  Class isa = v0[2].isa;
  id v3 = [(objc_class *)isa sectionsContextChangeItem];
  if (v3)
  {
    id v4 = v3;
    unsigned int v5 = (void *)TTRListEditor.store.getter();
    id v20 = 0;
    id v6 = [v5 fetchListSectionsForListSectionContextChangeItem:v4 error:&v20];

    id v7 = v20;
    if (v6)
    {
      sub_1000368FC(0, &qword_10078B5E8);
      uint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v9 = v7;

      if ((unint64_t)v8 >> 62) {
        goto LABEL_22;
      }
      unint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
      while (v10)
      {
        while (1)
        {
          if (__OFSUB__(v10--, 1))
          {
            __break(1u);
            goto LABEL_18;
          }
          if ((v8 & 0xC000000000000001) == 0) {
            break;
          }
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_7:
          uint64_t v12 = v11;
          id v6 = v1;
          TTRListEditor.deleteSection(_:)();

          if (!v10) {
            goto LABEL_26;
          }
        }
        if ((v10 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v10 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v11 = *(id *)(v8 + 32 + 8 * v10);
          goto LABEL_7;
        }
        __break(1u);
LABEL_22:
        if (v8 < 0) {
          id v6 = v8;
        }
        else {
          id v6 = (v8 & 0xFFFFFFFFFFFFFF8);
        }
        swift_bridgeObjectRetain();
        unint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
LABEL_26:

      swift_bridgeObjectRelease();
    }
    else
    {
      id v14 = v20;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007852A0 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100018BF8(v15, (uint64_t)qword_10078D388);
      swift_retain();
      id v6 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v6, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        uint64_t v18 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 138412290;
        id v19 = [(objc_class *)isa objectID];
        id v20 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v18 = v19;
        swift_release();
        _os_log_impl((void *)&_mh_execute_header, v6, v16, "TTRListEditor#removeExistingSections() : Failed to fetch sections in list {listID: %@}", v17, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
LABEL_18:
        swift_release();
      }
      swift_errorRelease();
    }
  }
}

id sub_10010A2E4@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 16);
  *a1 = v2;
  return v2;
}

void sub_10010A2F4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  id v6 = [*(id *)(v5 + 16) accountCapabilities];
  unsigned int v7 = [v6 supportsGroceriesList];

  if (v7)
  {
    *(void *)(a2 + 24) = a1;
    *(void *)(a2 + 32) = &protocol witness table for TTRListEditor;
    swift_retain();
  }
  else
  {
    uint64_t v5 = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 8) = 0u;
  }
  *(void *)a2 = v5;
}

void sub_10010A38C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  id v6 = [*(id *)(v5 + 16) accountCapabilities];
  unsigned int v7 = [v6 supportsSections];

  if (v7)
  {
    *(void *)(a2 + 24) = a1;
    *(void *)(a2 + 32) = &protocol witness table for TTRListEditor;
    swift_retain();
  }
  else
  {
    uint64_t v5 = 0;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 8) = 0u;
  }
  *(void *)a2 = v5;
}

void sub_10010A424(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10010A448()
{
  return TTRListEditor.edit(color:)();
}

void sub_10010A46C(__C::REMListBadgeEmblem a1)
{
}

void sub_10010A490(uint64_t a1, uint64_t a2)
{
}

id sub_10010A4B4(uint64_t a1, uint64_t a2)
{
  return TTRListEditor.listDetailSave(completion:)(a1, a2);
}

void sub_10010A4DC(char a1)
{
  TTRListEditor.edit(shouldCategorizeGroceryItems:)(a1 == 1);
}

void sub_10010A50C()
{
}

id REMListChangeItem.badge.getter()
{
  return sub_10010B0EC((SEL *)&selRef_appearanceContext, (SEL *)&selRef_badge);
}

id REMListChangeItem.hasExistingSections.getter()
{
  uint64_t v1 = v0;
  id result = [v0 sectionsContextChangeItem];
  if (result)
  {
    id v3 = result;
    id v4 = [v1 saveRequest];
    id v5 = [v4 store];

    id v19 = 0;
    id v6 = [v5 fetchListSectionsForListSectionContextChangeItem:v3 error:&v19];

    id v7 = v19;
    if (v6)
    {
      sub_1000368FC(0, &qword_10078B5E8);
      unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
      id v9 = v7;

      if (v8 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();

        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
      }
      return (id)(v10 != 0);
    }
    else
    {
      id v11 = v19;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007852A0 != -1) {
        swift_once();
      }
      uint64_t v12 = type metadata accessor for Logger();
      sub_100018BF8(v12, (uint64_t)qword_10078D388);
      id v13 = v1;
      id v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v14, v15))
      {
        os_log_type_t v16 = (uint8_t *)swift_slowAlloc();
        uint64_t v17 = (void *)swift_slowAlloc();
        *(_DWORD *)os_log_type_t v16 = 138412290;
        id v18 = [v13 objectID];
        id v19 = v18;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v17 = v18;

        _os_log_impl((void *)&_mh_execute_header, v14, v15, "REMListChangeItem#hasExistingSections : Failed to fetch sections in list {listID: %@}", v16, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      swift_errorRelease();

      return 0;
    }
  }
  return result;
}

id sub_10010A854()
{
  id v1 = [*v0 saveRequest];

  return v1;
}

id sub_10010A88C()
{
  id v1 = [*v0 storage];

  return v1;
}

id sub_10010A8C4()
{
  id v1 = [*v0 objectID];

  return v1;
}

id sub_10010A8FC()
{
  id v1 = [*v0 accountID];

  return v1;
}

id sub_10010A938()
{
  id v1 = [*v0 color];

  return v1;
}

id sub_10010A970(uint64_t a1, uint64_t a2)
{
  return sub_10010B1FC(a1, a2, (SEL *)&selRef_appearanceContext, (SEL *)&selRef_badge);
}

id sub_10010A984()
{
  id v1 = [*v0 accountCapabilities];
  id v2 = [v1 supportsGroceriesList];

  return v2;
}

unint64_t sub_10010A9D4()
{
  return (unint64_t)REMListChangeItem.hasExistingSections.getter() & 1;
}

double TTRSmartListEditor.filterEditingContext.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  id v4 = [(id)v1[2] customContext];

  if (v4)
  {
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = &protocol witness table for TTRSmartListEditor;
    *(void *)a1 = v1;
    swift_retain();
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
  return result;
}

double TTRSmartListEditor.sectionsEditingContext.getter@<D0>(uint64_t a1@<X8>)
{
  return sub_10010C700("TTRSmartListEditor#sectionsEditingContext : Not implemented because not expected to be called", a1);
}

id TTRSmartListEditor.listDetailSave(completion:)(uint64_t a1, uint64_t a2)
{
  id v5 = *(void **)(v2 + 16);
  id v6 = [v5 saveRequest];
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  id v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v11[4] = sub_10010DB10;
  void v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100009ADC;
  _OWORD v11[3] = &unk_10073A8B8;
  id v9 = _Block_copy(v11);
  sub_10006C140(a1);
  swift_release();
  [v6 saveWithQueue:v7 completion:v9];
  _Block_release(v9);

  return [v5 objectID];
}

void sub_10010AC1C(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1)
  {
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10078D388);
    swift_errorRetain();
    swift_errorRetain();
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)id v6 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = Error.localizedDescription.getter();
      sub_1000385A8(v7, v8, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Error saving list: %s", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!a2) {
        return;
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      if (!a2) {
        return;
      }
    }
    goto LABEL_12;
  }
  if (qword_1007852A0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_10078D388);
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "List saved!", v13, 2u);
    swift_slowDealloc();
  }

  if (a2) {
LABEL_12:
  }
    a2(v9);
}

double sub_10010AEC0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  id v6 = [*(id *)(v5 + 16) customContext];

  if (v6)
  {
    *(void *)(a2 + 24) = a1;
    *(void *)(a2 + 32) = &protocol witness table for TTRSmartListEditor;
    *(void *)a2 = v5;
    swift_retain();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

double sub_10010AF54@<D0>(uint64_t a1@<X8>)
{
  return sub_10010CC1C("TTRSmartListEditor#sectionsEditingContext : Not implemented because not expected to be called", a1);
}

void sub_10010AF60(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10010AF84()
{
  return TTRSmartListEditor.edit(color:)();
}

void sub_10010AFA8(__C::REMListBadgeEmblem a1)
{
}

void sub_10010AFCC(uint64_t a1, uint64_t a2)
{
}

id sub_10010AFF0(uint64_t a1, uint64_t a2)
{
  return TTRSmartListEditor.listDetailSave(completion:)(a1, a2);
}

uint64_t sub_10010B018()
{
  return TTRSmartListEditor.edit(filter:)();
}

void *REMSmartListChangeItem.name.getter()
{
  id v1 = [v0 customContext];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 name];

    uint64_t v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v2;
}

id REMSmartListChangeItem.color.getter()
{
  return sub_10010B0EC((SEL *)&selRef_customContext, (SEL *)&selRef_color);
}

id REMSmartListChangeItem.badge.getter()
{
  return sub_10010B0EC((SEL *)&selRef_customContext, (SEL *)&selRef_badge);
}

id sub_10010B0EC(SEL *a1, SEL *a2)
{
  id v4 = [v2 *a1];
  id v5 = [v4 *a2];

  return v5;
}

uint64_t REMSmartListChangeItem.hasExistingSections.getter()
{
  return sub_10010CDD0("REMSmartListChangeItem#sectionsEditingContext : Not implemented because not expected to be called");
}

void *sub_10010B14C()
{
  id v1 = [*v0 customContext];
  uint64_t v2 = v1;
  if (v1)
  {
    id v3 = [v1 name];

    uint64_t v2 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  return v2;
}

id sub_10010B1D4(uint64_t a1, uint64_t a2)
{
  return sub_10010B1FC(a1, a2, (SEL *)&selRef_customContext, (SEL *)&selRef_color);
}

id sub_10010B1E8(uint64_t a1, uint64_t a2)
{
  return sub_10010B1FC(a1, a2, (SEL *)&selRef_customContext, (SEL *)&selRef_badge);
}

id sub_10010B1FC(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  id v6 = [*v4 *a3];
  id v7 = [v6 *a4];

  return v7;
}

uint64_t sub_10010B250(uint64_t a1, uint64_t a2)
{
  return sub_10010CF48(a1, a2, "REMSmartListChangeItem#sectionsEditingContext : Not implemented because not expected to be called");
}

void TTRListDetailInteractor<>.update(hashtags:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_100789FF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100789FA0);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v34 = v1;
  uint64_t v32 = *(void *)(v1 + 32);
  id v18 = [*(id *)(v32 + 16) customContext];
  if (!v18 || (v19 = v18, id v20 = (void *)REMSmartListCustomContextChangeItem.filter.getter(), v19, !v20))
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    id v20 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  REMCustomSmartListFilterDescriptor.hashtags.getter();
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10003B694((uint64_t)v17, (uint64_t)v9, &qword_100789FA0);
  uint64_t v35 = a1;
  sub_10003B694(a1, v21, &qword_100789FA0);
  id v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_100789FA0);
    if (v22(v21, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v9, &qword_100789FA0);
      goto LABEL_14;
    }
  }
  else
  {
    sub_10003B694((uint64_t)v9, (uint64_t)v15, &qword_100789FA0);
    if (v22(v21, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v21, v3);
      sub_10010D570(&qword_100789FF8, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v6, v3);
      sub_10003B6F8((uint64_t)v17, &qword_100789FA0);
      v25(v15, v3);
      sub_10003B6F8((uint64_t)v9, &qword_100789FA0);
      uint64_t v23 = v35;
      if (v24) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    sub_10003B6F8((uint64_t)v17, &qword_100789FA0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_10003B6F8((uint64_t)v9, &qword_100789FF0);
  uint64_t v23 = v35;
LABEL_11:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v23, v33, &qword_100789FA0);
  id v26 = v20;
  char v27 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:hashtags:)();
  TTRSmartListEditor.edit(filter:)();
  uint64_t v28 = v34;
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v29 = *(void *)(v28 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(ObjectType, v29);
    swift_unknownObjectRelease();
  }

LABEL_14:
}

void TTRListDetailInteractor<>.update(date:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A000);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100789F98);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v34 = v1;
  uint64_t v32 = *(void *)(v1 + 32);
  id v18 = [*(id *)(v32 + 16) customContext];
  if (!v18 || (v19 = v18, id v20 = (void *)REMSmartListCustomContextChangeItem.filter.getter(), v19, !v20))
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    id v20 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  REMCustomSmartListFilterDescriptor.date.getter();
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10003B694((uint64_t)v17, (uint64_t)v9, &qword_100789F98);
  uint64_t v35 = a1;
  sub_10003B694(a1, v21, &qword_100789F98);
  id v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_100789F98);
    if (v22(v21, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v9, &qword_100789F98);
      goto LABEL_14;
    }
  }
  else
  {
    sub_10003B694((uint64_t)v9, (uint64_t)v15, &qword_100789F98);
    if (v22(v21, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v21, v3);
      sub_10010D570(&qword_10078A008, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v6, v3);
      sub_10003B6F8((uint64_t)v17, &qword_100789F98);
      v25(v15, v3);
      sub_10003B6F8((uint64_t)v9, &qword_100789F98);
      uint64_t v23 = v35;
      if (v24) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    sub_10003B6F8((uint64_t)v17, &qword_100789F98);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_10003B6F8((uint64_t)v9, &qword_10078A000);
  uint64_t v23 = v35;
LABEL_11:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v23, v33, &qword_100789F98);
  id v26 = v20;
  char v27 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:date:)();
  TTRSmartListEditor.edit(filter:)();
  uint64_t v28 = v34;
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v29 = *(void *)(v28 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(ObjectType, v29);
    swift_unknownObjectRelease();
  }

LABEL_14:
}

void TTRListDetailInteractor<>.update(time:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A010);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100789F90);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v34 = v1;
  uint64_t v32 = *(void *)(v1 + 32);
  id v18 = [*(id *)(v32 + 16) customContext];
  if (!v18 || (v19 = v18, id v20 = (void *)REMSmartListCustomContextChangeItem.filter.getter(), v19, !v20))
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    id v20 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  REMCustomSmartListFilterDescriptor.time.getter();
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10003B694((uint64_t)v17, (uint64_t)v9, &qword_100789F90);
  uint64_t v35 = a1;
  sub_10003B694(a1, v21, &qword_100789F90);
  id v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_100789F90);
    if (v22(v21, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v9, &qword_100789F90);
      goto LABEL_14;
    }
  }
  else
  {
    sub_10003B694((uint64_t)v9, (uint64_t)v15, &qword_100789F90);
    if (v22(v21, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v21, v3);
      sub_10010D570(&qword_10078A018, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v6, v3);
      sub_10003B6F8((uint64_t)v17, &qword_100789F90);
      v25(v15, v3);
      sub_10003B6F8((uint64_t)v9, &qword_100789F90);
      uint64_t v23 = v35;
      if (v24) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    sub_10003B6F8((uint64_t)v17, &qword_100789F90);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_10003B6F8((uint64_t)v9, &qword_10078A010);
  uint64_t v23 = v35;
LABEL_11:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v23, v33, &qword_100789F90);
  id v26 = v20;
  char v27 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:time:)();
  TTRSmartListEditor.edit(filter:)();
  uint64_t v28 = v34;
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v29 = *(void *)(v28 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(ObjectType, v29);
    swift_unknownObjectRelease();
  }

LABEL_14:
}

void TTRListDetailInteractor<>.update(priorities:)(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [*(id *)(*(void *)(v1 + 32) + 16) customContext];
  if (!v4
    || (uint64_t v5 = v4,
        id v13 = (id)REMSmartListCustomContextChangeItem.filter.getter(),
        v5,
        (uint64_t v6 = (uint64_t)v13) == 0))
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    uint64_t v6 = REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  id v14 = (id)v6;
  uint64_t v7 = (void *)REMCustomSmartListFilterDescriptor.priorities.getter();
  if (!v7)
  {
    if (!a1) {
      goto LABEL_9;
    }
LABEL_13:
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    swift_bridgeObjectRetain();
    id v9 = v14;
    uint64_t v10 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:priorities:)();
    TTRSmartListEditor.edit(filter:)();
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v11 = *(void *)(v2 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
      swift_unknownObjectRelease();
    }

    return;
  }
  if (!a1)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  BOOL v8 = sub_1000BA9BC(v7, a1);
  swift_bridgeObjectRelease();
  if (!v8) {
    goto LABEL_13;
  }
LABEL_9:
}

void TTRListDetailInteractor<>.update(flagged:)(char a1)
{
  uint64_t v2 = v1;
  id v4 = [*(id *)(*(void *)(v1 + 32) + 16) customContext];
  if (!v4
    || (uint64_t v5 = v4,
        id v12 = (id)REMSmartListCustomContextChangeItem.filter.getter(),
        v5,
        (uint64_t v6 = (uint64_t)v12) == 0))
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    uint64_t v6 = REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  id v13 = (id)v6;
  int v7 = REMCustomSmartListFilterDescriptor.flagged.getter();
  if (v7 == 2)
  {
    if (a1 != 2) {
      goto LABEL_12;
    }
  }
  else if (a1 == 2 || ((((a1 & 1) == 0) ^ v7) & 1) == 0)
  {
LABEL_12:
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    id v8 = v13;
    id v9 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:flagged:)();
    TTRSmartListEditor.edit(filter:)();
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v10 = *(void *)(v2 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(ObjectType, v10);
      swift_unknownObjectRelease();
    }

    return;
  }
}

void TTRListDetailInteractor<>.update(location:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078A020);
  __chkstk_darwin(v7);
  id v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100789F88);
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  uint64_t v33 = (uint64_t)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  os_log_type_t v15 = (char *)&v31 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v31 - v16;
  uint64_t v34 = v1;
  uint64_t v32 = *(void *)(v1 + 32);
  id v18 = [*(id *)(v32 + 16) customContext];
  if (!v18 || (v19 = v18, id v20 = (void *)REMSmartListCustomContextChangeItem.filter.getter(), v19, !v20))
  {
    type metadata accessor for REMCustomSmartListFilterDescriptor();
    id v20 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init()();
  }
  REMCustomSmartListFilterDescriptor.location.getter();
  uint64_t v21 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10003B694((uint64_t)v17, (uint64_t)v9, &qword_100789F88);
  uint64_t v35 = a1;
  sub_10003B694(a1, v21, &qword_100789F88);
  id v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v22((uint64_t)v9, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_100789F88);
    if (v22(v21, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v9, &qword_100789F88);
      goto LABEL_14;
    }
  }
  else
  {
    sub_10003B694((uint64_t)v9, (uint64_t)v15, &qword_100789F88);
    if (v22(v21, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v21, v3);
      sub_10010D570(&qword_10078A028, (void (*)(uint64_t))&type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation);
      char v24 = dispatch thunk of static Equatable.== infix(_:_:)();
      id v25 = *(void (**)(char *, uint64_t))(v4 + 8);
      v25(v6, v3);
      sub_10003B6F8((uint64_t)v17, &qword_100789F88);
      v25(v15, v3);
      sub_10003B6F8((uint64_t)v9, &qword_100789F88);
      uint64_t v23 = v35;
      if (v24) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
    sub_10003B6F8((uint64_t)v17, &qword_100789F88);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
  }
  sub_10003B6F8((uint64_t)v9, &qword_10078A020);
  uint64_t v23 = v35;
LABEL_11:
  type metadata accessor for REMCustomSmartListFilterDescriptor();
  sub_10003B694(v23, v33, &qword_100789F88);
  id v26 = v20;
  char v27 = (void *)REMCustomSmartListFilterDescriptor.__allocating_init(source:location:)();
  TTRSmartListEditor.edit(filter:)();
  uint64_t v28 = v34;
  swift_beginAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v29 = *(void *)(v28 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(ObjectType, v29);
    swift_unknownObjectRelease();
  }

LABEL_14:
}

double TTRTemplateEditor.sectionsEditingContext.getter@<D0>(uint64_t a1@<X8>)
{
  return sub_10010C700("TTRTemplateEditor#sectionsEditingContext : Not implemented because not expected to be called", a1);
}

double sub_10010C700@<D0>(const char *a1@<X0>, uint64_t a2@<X8>)
{
  if (qword_1007852A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_10078D388);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
    swift_slowDealloc();
  }

  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

id TTRTemplateEditor.listDetailSave(completion:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void **)(v2 + 16);
  id v6 = [v5 saveRequest];
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t v7 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  v11[4] = sub_10010D5BC;
  void v11[5] = v8;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_100009ADC;
  _OWORD v11[3] = &unk_10073A908;
  id v9 = _Block_copy(v11);
  sub_10006C140(a1);
  swift_release();
  [v6 saveWithQueue:v7 completion:v9];
  _Block_release(v9);

  return [v5 objectID];
}

void sub_10010C950(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1)
  {
    swift_errorRetain();
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10078D388);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)id v6 = 136315138;
      swift_getErrorValue();
      uint64_t v7 = Error.rem_errorDescription.getter();
      sub_1000385A8(v7, v8, &v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed to save template: {error: %s}", v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v9 = swift_errorRelease();
      if (!a2) {
        return;
      }
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      if (!a2) {
        return;
      }
    }
    goto LABEL_12;
  }
  if (qword_1007852A0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100018BF8(v10, (uint64_t)qword_10078D388);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Template saved!", v13, 2u);
    swift_slowDealloc();
  }

  if (a2) {
LABEL_12:
  }
    a2(v9);
}

double sub_10010CC10@<D0>(uint64_t a1@<X8>)
{
  return sub_10010CC1C("TTRTemplateEditor#sectionsEditingContext : Not implemented because not expected to be called", a1);
}

double sub_10010CC1C@<D0>(const char *a1@<X2>, uint64_t a2@<X8>)
{
  if (qword_1007852A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_10078D388);
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a1, v7, 2u);
    swift_slowDealloc();
  }

  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void sub_10010CD0C(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10010CD30()
{
  return TTRTemplateEditor.edit(color:)();
}

void sub_10010CD54(__C::REMListBadgeEmblem a1)
{
}

void sub_10010CD78(uint64_t a1, uint64_t a2)
{
}

id sub_10010CD9C(uint64_t a1, uint64_t a2)
{
  return TTRTemplateEditor.listDetailSave(completion:)(a1, a2);
}

uint64_t REMTemplateChangeItem.hasExistingSections.getter()
{
  return sub_10010CDD0("REMTemplateChangeItem#sectionsEditingContext : Not implemented because not expected to be called");
}

uint64_t sub_10010CDD0(const char *a1)
{
  if (qword_1007852A0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10078D388);
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, a1, v5, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_10010CEAC()
{
  id v1 = [*v0 name];
  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v2;
}

id sub_10010CF04()
{
  id v1 = [*v0 badge];

  return v1;
}

uint64_t sub_10010CF3C(uint64_t a1, uint64_t a2)
{
  return sub_10010CF48(a1, a2, "REMTemplateChangeItem#sectionsEditingContext : Not implemented because not expected to be called");
}

uint64_t sub_10010CF48(uint64_t a1, uint64_t a2, const char *a3)
{
  if (qword_1007852A0 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_10078D388);
  os_log_type_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, a3, v7, 2u);
    swift_slowDealloc();
  }

  return 0;
}

char *sub_10010D024(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v31 = *(void *)v3;
  uint64_t v6 = *(void *)(v31 + 88);
  uint64_t v7 = *(void *)(v31 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = __chkstk_darwin(AssociatedTypeWitness);
  id v30 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - v12;
  *((void *)v3 + 3) = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[*(void *)(*(void *)v3 + 112)] = 0;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v7, v6);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v3[*(void *)(*(void *)v3 + 104)], a1, v7);
  uint64_t AssociatedConformanceWitness = (uint64_t (**)(void, void))swift_getAssociatedConformanceWitness();
  uint64_t v15 = AssociatedConformanceWitness[7](AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v16 = (uint64_t *)&v3[*(void *)(*(void *)v3 + 128)];
  *uint64_t v16 = v15;
  v16[1] = v17;
  [AssociatedConformanceWitness[4](AssociatedTypeWitness, AssociatedConformanceWitness) copyWithZone:0];
  swift_unknownObjectRelease();
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCast())
  {
    uint64_t v18 = v32;
  }
  else
  {
    uint64_t v29 = a2;
    if (qword_1007852A0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100018BF8(v19, (uint64_t)qword_10078D388);
    id v20 = v30;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v30, v13, AssociatedTypeWitness);
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 138412290;
      char v27 = v23 + 4;
      uint64_t v24 = AssociatedConformanceWitness[5](AssociatedTypeWitness, AssociatedConformanceWitness);
      uint64_t v33 = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v28 = v24;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v30, AssociatedTypeWitness);
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to set initialListStorage by copying REMListStorage {listID: %@}", v23, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v20, AssociatedTypeWitness);
    }
    a2 = v29;

    uint64_t v18 = 0;
  }
  *(void *)&v3[*(void *)(*(void *)v3 + 120)] = v18;
  uint64_t v25 = NSUndoManager.observeChanges<A>(target:handler:)();

  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, AssociatedTypeWitness);
  *(void *)&v3[*(void *)(*(void *)v3 + 112)] = v25;
  swift_release();
  return v3;
}

void sub_10010D550(uint64_t a1)
{
  sub_10010AC1C(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10010D570(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_10010D5BC(uint64_t a1)
{
  sub_10010C950(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_10010D5C4()
{
  return swift_getAssociatedConformanceWitness();
}

unint64_t sub_10010D5E0()
{
  unint64_t result = qword_10078D430;
  if (!qword_10078D430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078D430);
  }
  return result;
}

uint64_t sub_10010D634()
{
  return sub_1000280B4(&qword_10078D438, &qword_100789A38);
}

uint64_t sub_10010D678()
{
  return sub_1000280B4(&qword_10078D4A0, &qword_10078D4A8);
}

uint64_t sub_10010D6BC()
{
  return sub_1000280B4(&qword_10078D510, &qword_100789A40);
}

uint64_t sub_10010D700()
{
  return sub_1000280B4(&qword_10078D578, &qword_10078D580);
}

uint64_t sub_10010D744()
{
  return sub_1000280B4(&qword_10078D5E8, &qword_10078B648);
}

uint64_t sub_10010D788()
{
  return sub_1000280B4(&qword_10078D650, &qword_10078D658);
}

uint64_t sub_10010D7CC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRListDetailInteractor()
{
  return sub_10003BC54();
}

uint64_t initializeBufferWithCopyOfBuffer for TTRListDetailSavedObjectID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for TTRListDetailSavedObjectID(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a2;
  os_log_type_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for TTRListDetailSavedObjectID(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRListDetailSavedObjectID(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRListDetailSavedObjectID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListDetailSavedObjectID()
{
  return &type metadata for TTRListDetailSavedObjectID;
}

unsigned char *storeEnumTagSinglePayload for TTRListDetailSavedObjectID.ObjectType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10010DAC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRListDetailSavedObjectID.ObjectType()
{
  return &type metadata for TTRListDetailSavedObjectID.ObjectType;
}

uint64_t sub_10010DB28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v33 = a4;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v28 - v15;
  char v17 = sub_1004571F4(a1, a2);
  uint64_t result = 0;
  if (v17)
  {
    Swift::String v19 = REMRemindersListDataView.SortingStyle.labelTextForSortingStyle()();
    object = v19._object;
    uint64_t countAndFlagsBits = v19._countAndFlagsBits;
    LOBYTE(v29) = REMRemindersListDataView.SortingStyle.isEqualIgnoringDirection(_:)() & 1;
    uint64_t v29 = v29;
    v28[1] = sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v32 = v6;
    id v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v20(v16, a3, v10);
    v20(v13, a1, v10);
    uint64_t v21 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v22 = (v21 + 16) & ~v21;
    uint64_t v23 = (v12 + v21 + v22) & ~v21;
    uint64_t v24 = swift_allocObject();
    uint64_t v25 = *(void (**)(uint64_t, char *, uint64_t))(v11 + 32);
    v25(v24 + v22, v16, v10);
    v25(v24 + v23, v13, v10);
    id v26 = (void *)(v24 + ((v12 + v23 + 7) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v27 = v34;
    *id v26 = v33;
    v26[1] = v27;
    swift_retain();
    uint64_t result = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  *uint64_t v35 = result;
  return result;
}

uint64_t sub_10010DD7C(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4, uint64_t a5, unsigned int *a6)
{
  Swift::String v19 = a3;
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.SortingDirection();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v12 + 104))(v15, *a6, v11, v13);
  sub_10010ED78(&qword_10078D748);
  char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if ((v16 & 1) == 0)
  {
    REMRemindersListDataView.SortingStyle.flipped()();
    v19(v10);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

UIMenu sub_10010DF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_10003B754(&qword_10078D750);
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 72);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_100670000;
  unint64_t v8 = v19 + v7;
  uint64_t v9 = *(void (**)(unint64_t, void, uint64_t))(v5 + 104);
  v9(v19 + v7, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v4);
  uint64_t v10 = enum case for REMRemindersListDataView.SortingDirection.ascending(_:);
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.SortingDirection();
  uint64_t v12 = *(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 104);
  v12(v8 + v6, v10, v11);
  v9(v8 + v6, enum case for REMRemindersListDataView.SortingStyle.displayDate(_:), v4);
  v12(v8 + 2 * v6, v10, v11);
  v9(v8 + 2 * v6, enum case for REMRemindersListDataView.SortingStyle.creationDate(_:), v4);
  v12(v8 + 3 * v6, enum case for REMRemindersListDataView.SortingDirection.descending(_:), v11);
  v9(v8 + 3 * v6, enum case for REMRemindersListDataView.SortingStyle.priority(_:), v4);
  unint64_t v13 = v8 + 4 * v6;
  v12(v13, v10, v11);
  v9(v13, enum case for REMRemindersListDataView.SortingStyle.title(_:), v4);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  UIMenuElementSize v14 = (UIMenuElementSize)sub_100596C00((void (*)(uint64_t *__return_ptr, uint64_t))sub_10010EDBC, (uint64_t)v24, v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if ((unint64_t)v14 >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    UIMenuElementSize preferredElementSize = v14;
  }
  swift_bridgeObjectRelease();
  sub_1000368FC(0, &qword_1007894E0);
  v16._uint64_t countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  v29.value.super.Class isa = 0;
  v29.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v16, (Swift::String_optional)0, v29, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, v18);
}

Class sub_10010E2F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v100 = a3;
  uint64_t v101 = a4;
  uint64_t v6 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  long long v97 = (char *)&v73 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v99 = (char *)&v73 - v10;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v73 - v12;
  uint64_t v14 = type metadata accessor for REMRemindersListDataView.SortingDirection();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  char v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v103 = (char *)&v73 - v19;
  if (sub_1004571F4(a2, a1))
  {
    uint64_t v95 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    v95(v13, a2, v6);
    uint64_t v86 = *(uint64_t (**)(char *, uint64_t))(v7 + 88);
    uint64_t v87 = v7 + 88;
    int v20 = v86(v13, v6);
    uint64_t v102 = a2;
    uint64_t v96 = v7 + 16;
    uint64_t v94 = v6;
    uint64_t v85 = v16;
    uint64_t v84 = v8;
    if (v20 == enum case for REMRemindersListDataView.SortingStyle.displayDate(_:)
      || v20 == enum case for REMRemindersListDataView.SortingStyle.priority(_:)
      || v20 == enum case for REMRemindersListDataView.SortingStyle.creationDate(_:)
      || v20 == enum case for REMRemindersListDataView.SortingStyle.title(_:))
    {
      (*(void (**)(char *, uint64_t))(v7 + 96))(v13, v6);
      uint64_t v21 = *(void (**)(uint64_t, char *, uint64_t))(v15 + 32);
      uint64_t v92 = (v15 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
      long long v93 = v21;
      v21((uint64_t)v103, v13, v14);
      uint64_t v22 = v7;
      uint64_t v98 = v7;
      uint64_t v23 = enum case for REMRemindersListDataView.SortingDirection.ascending(_:);
      uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 104);
      v24(v17, enum case for REMRemindersListDataView.SortingDirection.ascending(_:), v14);
      id v81 = v24;
      uint64_t v82 = v15 + 104;
      uint64_t v25 = v99;
      REMRemindersListDataView.SortingStyle.cloned(withSortingDirection:)();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8);
      uint64_t v88 = v15 + 8;
      v26(v17, v14);
      uint64_t v73 = v26;
      Swift::String v27 = REMRemindersListDataView.SortingStyle.labelTextForSortingDirection()();
      uint64_t countAndFlagsBits = v27._countAndFlagsBits;
      object = v27._object;
      uint64_t v28 = *(void (**)(char *, uint64_t))(v22 + 8);
      uint64_t v90 = v22 + 8;
      uint64_t v91 = v28;
      UIImage_optional v29 = v25;
      uint64_t v30 = v94;
      v28(v29, v94);
      v24(v17, v23, v14);
      uint64_t v83 = sub_10010ED78(&qword_10078D740);
      uint64_t v31 = v103;
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      v26(v17, v14);
      uint64_t v89 = sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v31, v14);
      uint64_t v32 = v99;
      uint64_t v33 = v30;
      v95(v99, v102, v30);
      uint64_t v34 = *(unsigned __int8 *)(v15 + 80);
      uint64_t v35 = (v34 + 16) & ~v34;
      uint64_t v76 = v35;
      uint64_t v36 = v98;
      uint64_t v37 = *(unsigned __int8 *)(v98 + 80);
      unint64_t v38 = (v85 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v78 = v38;
      v84 += (v37 + v38 + 16) & ~v37;
      uint64_t v39 = (v37 + v38 + 16) & ~v37;
      uint64_t v77 = v39;
      uint64_t v75 = v34 | v37 | 7;
      uint64_t v40 = swift_allocObject();
      v93(v40 + v35, v17, v14);
      id v41 = (void *)(v40 + v38);
      uint64_t v42 = v101;
      *id v41 = v100;
      v41[1] = v42;
      id v43 = *(void (**)(uint64_t, char *, uint64_t))(v36 + 32);
      uint64_t v98 = v36 + 32;
      uint64_t v74 = v43;
      v43(v40 + v39, v32, v33);
      swift_retain();
      uint64_t v85 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      uint64_t v44 = enum case for REMRemindersListDataView.SortingDirection.descending(_:);
      id v45 = v81;
      v81(v17, enum case for REMRemindersListDataView.SortingDirection.descending(_:), v14);
      uint64_t v46 = v32;
      REMRemindersListDataView.SortingStyle.cloned(withSortingDirection:)();
      uint64_t v47 = v73;
      v73(v17, v14);
      Swift::String v48 = REMRemindersListDataView.SortingStyle.labelTextForSortingDirection()();
      uint64_t countAndFlagsBits = v48._countAndFlagsBits;
      object = v48._object;
      uint64_t v49 = v32;
      uint64_t v50 = v94;
      v91(v49, v94);
      v45(v17, v44, v14);
      uint64_t v51 = v103;
      dispatch thunk of RawRepresentable.rawValue.getter();
      dispatch thunk of RawRepresentable.rawValue.getter();
      uint64_t v83 = v105 == v104;
      v47(v17, v14);
      uint64_t v52 = v93;
      v93((uint64_t)v17, v51, v14);
      uint64_t v53 = v46;
      uint64_t v54 = v46;
      uint64_t v55 = v102;
      uint64_t v56 = v50;
      uint64_t v57 = v50;
      uint64_t v58 = v95;
      v95(v54, v102, v57);
      uint64_t v59 = swift_allocObject();
      v52(v59 + v76, v17, v14);
      id v60 = (void *)(v59 + v78);
      uint64_t v61 = v101;
      *id v60 = v100;
      v60[1] = v61;
      uint64_t v62 = v56;
      v74(v59 + v77, v53, v56);
      swift_retain();
      uint64_t v63 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      uint64_t v64 = v97;
      v58(v97, v55, v62);
      LODWORD(v53) = v86(v64, v62);
      LODWORD(v55) = enum case for REMRemindersListDataView.SortingStyle.priority(_:);
      v91(v64, v62);
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v65 = swift_allocObject();
      *(_OWORD *)(v65 + 16) = xmmword_10066C430;
      if (v53 == v55)
      {
        uint64_t v66 = v85;
        *(void *)(v65 + 32) = v63;
        *(void *)(v65 + 40) = v66;
      }
      else
      {
        *(void *)(v65 + 32) = v85;
        *(void *)(v65 + 40) = v63;
      }
      uint64_t v105 = (void *)v65;
      specialized Array._endMutation()();
      UIMenuElementSize v67 = (UIMenuElementSize)v105;
      goto LABEL_16;
    }
    if (v20 != enum case for REMRemindersListDataView.SortingStyle.default(_:)
      && v20 != enum case for REMRemindersListDataView.SortingStyle.manual(_:))
    {
      Class result = (Class)_diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
  }
  UIMenuElementSize v67 = (UIMenuElementSize)_swiftEmptyArrayStorage;
LABEL_16:
  if ((unint64_t)v67 >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    swift_bridgeObjectRetain();
    UIMenuElementSize v69 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    UIMenuElementSize v69 = v67;
  }
  swift_bridgeObjectRelease();
  sub_1000368FC(0, &qword_1007894E0);
  v70._uint64_t countAndFlagsBits = 0;
  v70._object = (void *)0xE000000000000000;
  v106.value.super.Class isa = 0;
  v106.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v70, (Swift::String_optional)0, v106, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v69, v72).super.super.isa;
}

uint64_t sub_10010EC70(uint64_t a1)
{
  return sub_10010EC8C(a1, (unsigned int *)&enum case for REMRemindersListDataView.SortingDirection.ascending(_:));
}

uint64_t sub_10010EC80(uint64_t a1)
{
  return sub_10010EC8C(a1, (unsigned int *)&enum case for REMRemindersListDataView.SortingDirection.descending(_:));
}

uint64_t sub_10010EC8C(uint64_t a1, unsigned int *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for REMRemindersListDataView.SortingDirection() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for REMRemindersListDataView.SortingStyle() - 8);
  return sub_10010DD7C(a1, v2 + v6, *(void (**)(char *))(v2 + v7), *(void *)(v2 + v7 + 8), v2 + ((v7 + *(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a2);
}

uint64_t sub_10010ED78(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for REMRemindersListDataView.SortingDirection();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10010EDBC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10010DB28(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10010EDDC()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  int v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  unint64_t v9 = ((v6 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);
  swift_release();

  return _swift_deallocObject(v0, v9, v7);
}

uint64_t sub_10010EEB8()
{
  uint64_t v1 = *(void *)(type metadata accessor for REMRemindersListDataView.SortingStyle() - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  unint64_t v3 = (v2
      + *(unsigned __int8 *)(v1 + 80)
      + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = v0 + v3;
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + ((v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t result = REMRemindersListDataView.SortingStyle.isEqualIgnoringDirection(_:)();
  if ((result & 1) == 0) {
    return v5(v4);
  }
  return result;
}

uint64_t sub_10010EF78()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078D758);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078D758);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t TTRHashtagLabelInteractor.delegate.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t TTRHashtagLabelInteractor.delegate.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*TTRHashtagLabelInteractor.delegate.modify(void *a1))(uint64_t a1, char a2)
{
  unint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_delegate;
  v3[5] = v1;
  void v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_10010F184;
}

void sub_10010F184(uint64_t a1, char a2)
{
  unint64_t v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + *(void *)(*(void *)a1 + 48) + 8) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

id TTRHashtagLabelInteractor.store.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_store);
}

uint64_t TTRHashtagLabelInteractor.__allocating_init(store:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return TTRHashtagLabelInteractor.init(store:)(a1);
}

uint64_t TTRHashtagLabelInteractor.init(store:)(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_dataViewMonitor] = 0;
  *(void *)&v1[OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_store] = a1;
  type metadata accessor for TTRHashtagLabelMonitorableDataView();
  *(void *)(swift_allocObject() + 16) = a1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  id v4 = a1;
  id v5 = [super init];
  sub_10007CD0C();
  uint64_t v6 = (char *)v5;
  swift_retain();
  static OS_dispatch_queue.main.getter();
  type metadata accessor for RDIDispatchQueue();
  static RDIDispatchQueue.storeQueue.getter();
  static RDIDispatchQueue.storeUserInteractiveQueue.getter();
  TTRDataViewMonitorEnvironmentInfo.init()();
  sub_10003B754(&qword_10078D788);
  swift_allocObject();
  uint64_t v7 = TTRDataViewMonitor.init<A>(initialData:dataView:delegate:queue:backgroundQueue:userInteractiveBackgroundQueue:environmentInfo:)();
  uint64_t v8 = OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_dataViewMonitor;
  *(void *)&v6[OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_dataViewMonitor] = v7;
  uint64_t result = swift_release();
  if (*(void *)&v6[v8])
  {
    swift_retain();
    TTRDataViewMonitor.resume(userInteractive:)(1);
    swift_release();
    swift_release();

    return (uint64_t)v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t TTRHashtagLabelMonitorableDataView.__allocating_init(store:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

uint64_t type metadata accessor for TTRHashtagLabelMonitorableDataView()
{
  return self;
}

void TTRHashtagLabelInteractor.init()()
{
}

uint64_t TTRHashtagLabelInteractor.monitor(_:didFetch:diff:transitioningFrom:)(uint64_t a1, uint64_t a2)
{
  return sub_10010F824(a2);
}

void TTRHashtagLabelInteractor.monitor(_:didHit:transitioningFrom:)()
{
}

uint64_t sub_10010F544(uint64_t a1, uint64_t *a2)
{
  return sub_10010F824(*a2);
}

uint64_t TTRHashtagLabelMonitorableDataView.init(store:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return v1;
}

uint64_t TTRHashtagLabelMonitorableDataView.fetchData(from:userInteractive:)()
{
  uint64_t v0 = type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMHashtagLabelDataView();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.alphabetical(_:), v0);
  uint64_t v4 = static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t TTRHashtagLabelMonitorableDataView.deinit()
{
  return v0;
}

uint64_t TTRHashtagLabelMonitorableDataView.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_10010F6D4(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for REMHashtagLabelDataView();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle.alphabetical(_:), v3);
  uint64_t v7 = static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)();
  if (v1) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v9 = v7;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v9;
  return result;
}

uint64_t sub_10010F824(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_1007852A8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_10078D758);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRAccountListsMonitorableDataView did fetch data", v7, 2u);
    swift_slowDealloc();
  }

  uint64_t v8 = v2 + OBJC_IVAR____TtC9Reminders25TTRHashtagLabelInteractor_delegate;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v10 = *(void *)(v8 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8))(v2, a1, ObjectType, v10);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10010F978()
{
  if (qword_1007852A8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10078D758);
  swift_errorRetain();
  id v2 = v0;
  swift_errorRetain();
  id v10 = v2;
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    os_log_type_t v6 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_getErrorValue();
    uint64_t v7 = Error.localizedDescription.getter();
    sub_1000385A8(v7, v8, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    *(_WORD *)(v5 + 12) = 2112;
    id v9 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *os_log_type_t v6 = v10;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRAccountListsMonitorableDataView did hit error {error: %s, interactor: %@}", (uint8_t *)v5, 0x16u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
}

_UNKNOWN **sub_10010FC14()
{
  return &protocol witness table for TTRHashtagLabelMonitorableDataView;
}

uint64_t type metadata accessor for TTRHashtagLabelInteractor()
{
  return self;
}

uint64_t sub_10010FC44(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  v7[4] = *(_OWORD *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  void v9[3] = v4;
  v9[4] = *(_OWORD *)(a2 + 64);
  uint64_t v10 = *(void *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_1001101AC((uint64_t)v7, (uint64_t)v9) & 1;
}

void sub_10010FCB0(char *a1, uint64_t a2)
{
  sub_1001105E0(a2, (uint64_t)v7);
  sub_100110648((uint64_t)v7);
  TTRIStaticTableViewStandardCell.icon.setter();
  long long v3 = *(void **)&a1[direct field offset for TTRIDetailListTableViewCell.listNameLabel];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setText:v4];

  NSString v5 = String._bridgeToObjectiveC()();
  [a1 setAccessibilityLabel:v5];

  NSString v6 = String._bridgeToObjectiveC()();
  [a1 setAccessibilityValue:v6];
}

id sub_10010FD94()
{
  id v1 = *v0;
  sub_100057BB8(*v0);
  return v1;
}

uint64_t sub_10010FDC0()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10010FDF0()
{
  return TTRIStaticTableViewStandardCell.performBatchUpdates(_:)();
}

uint64_t type metadata accessor for TTRIListDetailEditFiltersCellContent()
{
  uint64_t result = qword_10078D8D0;
  if (!qword_10078D8D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10010FEA8()
{
  return swift_initClassMetadata2();
}

void sub_10010FEE0()
{
}

uint64_t sub_10010FF10()
{
  return type metadata accessor for TTRIListDetailEditFiltersCellContent();
}

uint64_t destroy for TTRIListDetailEditFiltersCellStateAdaptor(id *a1)
{
  if ((unint64_t)*a1 >= 2) {

  }
  return swift_bridgeObjectRelease();
}

void *_s9Reminders41TTRIListDetailEditFiltersCellStateAdaptorVwCP_0(void *a1, uint64_t a2)
{
  NSString v4 = *(void **)a2;
  if (*(void *)a2 >= 2uLL) {
    id v5 = v4;
  }
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  *a1 = v4;
  a1[1] = v7;
  a1[2] = v6;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIListDetailEditFiltersCellStateAdaptor(uint64_t a1, uint64_t a2)
{
  NSString v4 = *(void **)a1;
  id v5 = *(void **)a2;
  if (*(void *)a1 >= 2uLL)
  {
    if ((unint64_t)v5 >= 2)
    {
      *(void *)a1 = v5;
      id v7 = v5;

      goto LABEL_8;
    }

    id v5 = *(void **)a2;
    goto LABEL_6;
  }
  if ((unint64_t)v5 < 2)
  {
LABEL_6:
    *(void *)a1 = v5;
    goto LABEL_8;
  }
  *(void *)a1 = v5;
  id v6 = v5;
LABEL_8:
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRIListDetailEditFiltersCellStateAdaptor(uint64_t a1, unint64_t *a2)
{
  NSString v4 = *(void **)a1;
  unint64_t v5 = *a2;
  if (*(void *)a1 >= 2uLL)
  {
    if (v5 >= 2)
    {
      *(void *)a1 = v5;

      goto LABEL_6;
    }
  }
  *(void *)a1 = v5;
LABEL_6:
  unint64_t v6 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIListDetailEditFiltersCellStateAdaptor(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailEditFiltersCellStateAdaptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailEditFiltersCellStateAdaptor()
{
  return &type metadata for TTRIListDetailEditFiltersCellStateAdaptor;
}

unint64_t sub_100110158()
{
  unint64_t result = qword_10078DA48;
  if (!qword_10078DA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078DA48);
  }
  return result;
}

uint64_t sub_1001101AC(uint64_t a1, uint64_t a2)
{
  NSString v4 = *(void **)a1;
  unint64_t v5 = *(void **)(a1 + 8);
  unint64_t v6 = *(void **)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  unsigned int v12 = *(unsigned __int8 *)(a1 + 64);
  uint64_t v14 = *(void **)a2;
  unint64_t v13 = *(void **)(a2 + 8);
  uint64_t v15 = *(void **)(a2 + 16);
  unint64_t v16 = *(void *)(a2 + 24);
  uint64_t v18 = *(void *)(a2 + 32);
  uint64_t v17 = *(void *)(a2 + 40);
  unsigned int v19 = *(unsigned __int8 *)(a2 + 64);
  BOOL v21 = v16 >> 1 == 0xFFFFFFFF && v19 < 2;
  uint64_t v22 = *(void *)(a2 + 48);
  uint64_t v23 = *(void *)(a2 + 56);
  if (v8 >> 1 == 0xFFFFFFFF && v12 < 2)
  {
    if (v21) {
      goto LABEL_15;
    }
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    uint64_t v47 = v4;
    Swift::String v48 = v5;
    uint64_t v49 = v6;
    unint64_t v50 = v8;
    uint64_t v51 = v7;
    uint64_t v52 = v9;
    uint64_t v53 = v10;
    uint64_t v54 = v11;
    char v55 = v12;
    uint64_t v56 = v14;
    uint64_t v57 = v13;
    uint64_t v58 = v15;
    unint64_t v59 = v16;
    uint64_t v60 = v18;
    uint64_t v61 = v17;
    uint64_t v62 = v22;
    uint64_t v63 = v23;
    char v64 = v19;
    unsigned __int8 v32 = v12;
    unint64_t v24 = v8;
    uint64_t v25 = v15;
    uint64_t v26 = v13;
    Swift::String v27 = v14;
    sub_100110400(v4, v5, v6, v24, v7, v9, v10, v11, v32);
    sub_100110400(v27, v26, v25, v16, v18, v17, v22, v23, v19);
    sub_10011049C((uint64_t)&v47);
    return 0;
  }
  uint64_t v65 = v4;
  uint64_t v66 = v5;
  UIMenuElementSize v67 = v6;
  unint64_t v68 = v8;
  uint64_t v69 = v7;
  uint64_t v70 = v9;
  uint64_t v71 = v10;
  uint64_t v72 = v11;
  char v73 = v12;
  uint64_t v47 = v14;
  Swift::String v48 = v13;
  uint64_t v49 = v15;
  unint64_t v50 = v16;
  uint64_t v51 = v18;
  uint64_t v52 = v17;
  uint64_t v53 = v22;
  uint64_t v54 = v23;
  char v55 = v19;
  id v41 = v4;
  uint64_t v42 = v5;
  uint64_t v40 = v6;
  uint64_t v43 = v7;
  uint64_t v44 = v9;
  uint64_t v45 = v10;
  uint64_t v46 = v11;
  uint64_t v34 = v17;
  uint64_t v35 = v23;
  UIImage_optional v29 = v15;
  uint64_t v37 = v13;
  unint64_t v38 = v15;
  uint64_t v30 = v13;
  uint64_t v33 = v18;
  uint64_t v31 = v14;
  uint64_t v36 = v14;
  sub_100110400(v4, v5, v6, v8, v7, v9, v10, v11, v12);
  sub_100110400(v31, v30, v29, v16, v33, v34, v22, v35, v19);
  char v39 = static TTRIStaticTableViewStandardCell.Icon.__derived_enum_equals(_:_:)();
  sub_100110544(v36, v37, v38, v16, v33, v34, v22, v35, v19);
  sub_100110544(v41, v42, v40, v8, v43, v44, v45, v46, v12);
  if ((v39 & 1) == 0) {
    return 0;
  }
LABEL_15:
  if (*(void *)(a1 + 72) == *(void *)(a2 + 72) && *(void *)(a1 + 80) == *(void *)(a2 + 80)) {
    return 1;
  }

  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

id sub_100110400(id result, void *a2, void *a3, unint64_t a4, int a5, int a6, int a7, int a8, unsigned __int8 a9)
{
  if (a4 >> 1 != 0xFFFFFFFF || a9 >= 2u) {
    return sub_100110428(result, a2, a3, a4, a5, a6, a7, a8, a9);
  }
  return result;
}

id sub_100110428(id result, id a2, void *a3, int a4, int a5, int a6, int a7, int a8, unsigned __int8 a9)
{
  id v9 = result;
  int v10 = a9 >> 6;
  if (v10 != 1)
  {
    if (v10) {
      return result;
    }
    id v11 = a3;
    id v12 = v9;
    unint64_t result = a2;
  }

  return result;
}

uint64_t sub_10011049C(uint64_t a1)
{
  unint64_t v2 = *(void **)(a1 + 72);
  long long v3 = *(void **)(a1 + 80);
  NSString v4 = *(void **)(a1 + 88);
  unint64_t v5 = *(void *)(a1 + 96);
  uint64_t v6 = *(void *)(a1 + 104);
  uint64_t v7 = *(void *)(a1 + 112);
  uint64_t v8 = *(void *)(a1 + 120);
  uint64_t v9 = *(void *)(a1 + 128);
  unsigned __int8 v10 = *(unsigned char *)(a1 + 136);
  sub_100110544(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
  sub_100110544(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  return a1;
}

void sub_100110544(void *a1, void *a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a4 >> 1 != 0xFFFFFFFF || a9 >= 2u) {
    sub_10011056C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  }
}

void sub_10011056C(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  int v9 = a9 >> 6;
  if (v9 != 1)
  {
    if (v9) {
      return;
    }

    a1 = a3;
  }
}

void sub_1001105D8()
{
  sub_10010FCB0(*(char **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1001105E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078DA88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100110648(uint64_t a1)
{
  return a1;
}

uint64_t destroy for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  unsigned int v2 = *(unsigned __int8 *)(a1 + 64);
  if (v1 >> 1 != 0xFFFFFFFF || v2 >= 2) {
    sub_10011056C(*(void **)a1, *(void **)(a1 + 8), *(void **)(a1 + 16), v1, *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v2);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 24);
  unsigned int v5 = *(unsigned __int8 *)(a2 + 64);
  if (v4 >> 1 != 0xFFFFFFFF || v5 >= 2)
  {
    id v7 = *(id *)a2;
    uint64_t v8 = *(void **)(a2 + 8);
    int v9 = *(void **)(a2 + 16);
    uint64_t v10 = *(void *)(a2 + 40);
    uint64_t v17 = *(void *)(a2 + 32);
    uint64_t v11 = *(void *)(a2 + 48);
    uint64_t v12 = *(void *)(a2 + 56);
    sub_100110428(*(id *)a2, v8, v9, v4, v17, v10, v11, v12, v5);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(void *)(a1 + 16) = v9;
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v17;
    *(void *)(a1 + 40) = v10;
    *(void *)(a1 + 48) = v11;
    *(void *)(a1 + 56) = v12;
    *(unsigned char *)(a1 + 64) = v5;
  }
  else
  {
    long long v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
  }
  uint64_t v15 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v15;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[3];
  unsigned int v5 = *((unsigned __int8 *)a2 + 64);
  BOOL v7 = v4 >> 1 == 0xFFFFFFFF && v5 < 2;
  if (*(void *)(a1 + 24) >> 1 != 0xFFFFFFFFLL || *(unsigned __int8 *)(a1 + 64) >= 2u)
  {
    if (v7)
    {
      sub_100110994(a1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      long long v10 = *((_OWORD *)a2 + 2);
      long long v9 = *((_OWORD *)a2 + 3);
      long long v11 = *((_OWORD *)a2 + 1);
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 48) = v9;
      *(_OWORD *)(a1 + 16) = v11;
    }
    else
    {
      uint64_t v15 = *a2;
      unint64_t v16 = (void *)a2[1];
      uint64_t v17 = (void *)a2[2];
      uint64_t v18 = a2[5];
      uint64_t v37 = a2[4];
      uint64_t v19 = a2[6];
      uint64_t v20 = a2[7];
      sub_100110428((id)*a2, v16, v17, v4, v37, v18, v19, v20, v5);
      BOOL v21 = *(void **)a1;
      uint64_t v22 = *(void **)(a1 + 8);
      uint64_t v23 = *(void **)(a1 + 16);
      uint64_t v24 = *(void *)(a1 + 24);
      uint64_t v25 = *(void *)(a1 + 32);
      uint64_t v26 = *(void *)(a1 + 40);
      uint64_t v27 = *(void *)(a1 + 48);
      uint64_t v28 = *(void *)(a1 + 56);
      unsigned __int8 v29 = *(unsigned char *)(a1 + 64);
      *(void *)a1 = v15;
      *(void *)(a1 + 8) = v16;
      *(void *)(a1 + 16) = v17;
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = v37;
      *(void *)(a1 + 40) = v18;
      *(void *)(a1 + 48) = v19;
      *(void *)(a1 + 56) = v20;
      *(unsigned char *)(a1 + 64) = v5;
      sub_10011056C(v21, v22, v23, v24, v25, v26, v27, v28, v29);
    }
  }
  else if (v7)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    long long v12 = *((_OWORD *)a2 + 1);
    long long v13 = *((_OWORD *)a2 + 2);
    long long v14 = *((_OWORD *)a2 + 3);
    *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v14;
    *(_OWORD *)(a1 + 16) = v12;
  }
  else
  {
    id v30 = (id)*a2;
    uint64_t v31 = (void *)a2[1];
    unsigned __int8 v32 = (void *)a2[2];
    uint64_t v33 = a2[5];
    uint64_t v38 = a2[4];
    uint64_t v34 = a2[6];
    uint64_t v35 = a2[7];
    sub_100110428((id)*a2, v31, v32, v4, v38, v33, v34, v35, v5);
    *(void *)a1 = v30;
    *(void *)(a1 + 8) = v31;
    *(void *)(a1 + 16) = v32;
    *(void *)(a1 + 24) = v4;
    *(void *)(a1 + 32) = v38;
    *(void *)(a1 + 40) = v33;
    *(void *)(a1 + 48) = v34;
    *(void *)(a1 + 56) = v35;
    *(unsigned char *)(a1 + 64) = v5;
  }
  *(void *)(a1 + 72) = a2[9];
  *(void *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100110994(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 24);
  unsigned int v5 = *(unsigned __int8 *)(a1 + 64);
  if (v4 >> 1 == 0xFFFFFFFF && v5 < 2) {
    goto LABEL_12;
  }
  unint64_t v7 = *(void *)(a2 + 24);
  unsigned int v8 = *(unsigned __int8 *)(a2 + 64);
  if (v7 >> 1 == 0xFFFFFFFF && v8 < 2)
  {
    sub_100110994(a1);
LABEL_12:
    long long v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
    long long v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
    goto LABEL_13;
  }
  uint64_t v10 = *(void *)(a2 + 16);
  long long v11 = *(void **)a1;
  long long v12 = *(void **)(a1 + 8);
  long long v13 = *(void **)(a1 + 16);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v17 = *(void *)(a1 + 56);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v10;
  *(void *)(a1 + 24) = v7;
  long long v18 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v18;
  *(unsigned char *)(a1 + 64) = v8;
  sub_10011056C(v11, v12, v13, v4, v14, v15, v16, v17, v5);
LABEL_13:
  uint64_t v21 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v21;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIListDetailEditFiltersCellStateAdaptor.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIListDetailEditFiltersCellStateAdaptor.State()
{
  return &type metadata for TTRIListDetailEditFiltersCellStateAdaptor.State;
}

char *sub_100110B80(void *a1)
{
  unint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_tableDataController] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___deferredUpdateAction] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___nukeCell] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___populateCell] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___animationSlowModeCell] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___pencilAutoCommitDelayCell] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___suggestedAttributeModelCells] = 0;
  unsigned int v5 = v2;
  static TTRTypedController.currentArgument.getter();
  *(objc_super *)&v5[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_eventHandler] = v9[1];
  swift_unknownObjectRetain();

  v9[0].receiver = v5;
  v9[0].super_class = ObjectType;
  uint64_t v6 = (char *)[(objc_super *)v9 initWithCoder:a1];
  unint64_t v7 = v6;
  if (v6)
  {
    *(void *)(*(void *)&v6[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_eventHandler] + 24) = &off_10073ACE8;
    swift_unknownObjectWeakAssign();
  }
  swift_unknownObjectRelease();

  return v7;
}

void sub_100110CE4()
{
  unint64_t v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C4F0;
  TTRITableSectionHeaderFooter.init(title:height:)();
  sub_10003B754(&qword_100792AE0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10066C680;
  *(void *)(v3 + 32) = sub_10011115C();
  *(void *)(v3 + 40) = &protocol witness table for TTRITableCell<A>;
  *(void *)(v3 + 48) = sub_1001112AC();
  *(void *)(v3 + 56) = &protocol witness table for TTRITableCell<A>;
  type metadata accessor for TTRITableSection();
  swift_allocObject();
  *(void *)(inited + 32) = TTRITableSection.init(header:footer:items:)();
  TTRITableSectionHeaderFooter.init(title:height:)();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C6F0;
  *(void *)(v4 + 32) = sub_100111660();
  *(void *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
  swift_allocObject();
  *(void *)(inited + 40) = TTRITableSection.init(header:footer:items:)();
  TTRITableSectionHeaderFooter.init(title:height:)();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066C6F0;
  *(void *)(v5 + 32) = sub_1001117B8();
  *(void *)(v5 + 40) = &protocol witness table for TTRITableCell<A>;
  swift_allocObject();
  *(void *)(inited + 48) = TTRITableSection.init(header:footer:items:)();
  TTRITableSectionHeaderFooter.init(title:height:)();
  uint64_t v6 = sub_100111910();
  sub_100399E5C((unint64_t)v6);
  swift_bridgeObjectRelease();
  swift_allocObject();
  *(void *)(inited + 56) = TTRITableSection.init(header:footer:items:)();
  specialized Array._endMutation()();
  if (!swift_unknownObjectWeakLoadStrong())
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100399E7C(inited);
  swift_bridgeObjectRelease();
  sub_1000368FC(0, (unint64_t *)&qword_10078E3B0);
  id v7 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController());
  unsigned int v8 = (void *)TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)();
  uint64_t v9 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_tableDataController;
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_tableDataController];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_tableDataController] = v8;
  id v11 = v8;

  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  long long v13 = Strong;
  [Strong setDataSource:v11];

  uint64_t v14 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v14)
  {
LABEL_10:
    __break(1u);
    return;
  }
  uint64_t v15 = v14;
  [v14 setDelegate:v11];

  if (*(void *)&v1[v9])
  {
    __chkstk_darwin(v16);
    id v18 = v17;
    TTRITableDataController.performBatchUpdates(by:updates:)();
  }
  else
  {
  }
}

uint64_t sub_10011115C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___nukeCell;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___nukeCell))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___nukeCell);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = objc_allocWithZone((Class)type metadata accessor for TTRIActionCellContent());
    uint64_t v5 = (void *)TTRIActionCellContent.init(state:)();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v7 = (void *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x108));
    swift_beginAccess();
    uint64_t v8 = *v7;
    *id v7 = (uint64_t)sub_100112708;
    v7[1] = v6;
    sub_1000499C4(v8);
    sub_10003B754(&qword_100792AD0);
    swift_allocObject();
    uint64_t v2 = TTRITableCell.init(_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001112AC()
{
  if (*(void *)&v0[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___populateCell])
  {
    uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___populateCell];
  }
  else
  {
    uint64_t v13 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___populateCell;
    uint64_t v14 = v0;
    uint64_t v2 = v0;
    specialized ContiguousArray.reserveCapacity(_:)();
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v3 = 0;
    do
    {
      uint64_t v6 = (char *)&off_100735400 + v3++;
      char v7 = v6[32];
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v4;
      *(unsigned char *)(v5 + 24) = v7;
      UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v3 != 5);

    if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0
      || ((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
    {
      sub_1000368FC(0, &qword_10079AF80);
      UIMenuElementSize preferredElementSize = (void *)_bridgeCocoaArray<A>(_:)();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_1000368FC(0, &qword_10079AF80);
      UIMenuElementSize preferredElementSize = _swiftEmptyArrayStorage;
    }
    swift_release();
    sub_1000368FC(0, &qword_1007894E0);
    v9._uint64_t countAndFlagsBits = 0;
    v9._object = (void *)0xE000000000000000;
    v15.value.super.Class isa = 0;
    v15.is_nil = 0;
    uint64_t v10 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v15, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, 0).super.super.isa;
    TTRIMenuCellContentState.init(title:menu:)();
    id v11 = objc_allocWithZone((Class)type metadata accessor for TTRIMenuCellContent());
    TTRIMenuCellContent.init(state:)();
    sub_10003B754(&qword_10078DB20);
    swift_allocObject();
    uint64_t v1 = TTRITableCell.init(_:)();

    *(void *)&v14[v13] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_100111660()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___animationSlowModeCell;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___animationSlowModeCell))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___animationSlowModeCell);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    TTRUserDefaults.animationSlowModeEnabled.getter();

    TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)();
    id v5 = objc_allocWithZone((Class)type metadata accessor for TTRIToggleCellContent());
    uint64_t v6 = (uint64_t *)(TTRIToggleCellContent.init(state:)()
                   + direct field offset for TTRIToggleCellContent.stateChangeBlock);
    swift_beginAccess();
    uint64_t v7 = *v6;
    *uint64_t v6 = (uint64_t)sub_1001121E0;
    v6[1] = 0;
    sub_1000499C4(v7);
    sub_10003B754((uint64_t *)&unk_100793D30);
    swift_allocObject();
    uint64_t v2 = TTRITableCell.init(_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1001117B8()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___pencilAutoCommitDelayCell;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___pencilAutoCommitDelayCell))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___pencilAutoCommitDelayCell);
  }
  else
  {
    uint64_t v3 = v0;
    id v4 = objc_allocWithZone((Class)type metadata accessor for TTRISliderCellContent());
    uint64_t v5 = TTRISliderCellContent.init(state:)();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = (uint64_t *)(v5 + direct field offset for TTRISliderCellContent.stateChangeBlock);
    swift_beginAccess();
    uint64_t v8 = *v7;
    *uint64_t v7 = (uint64_t)sub_1001125B4;
    v7[1] = v6;
    sub_1000499C4(v8);
    sub_10003B754(&qword_10078DB18);
    swift_allocObject();
    uint64_t v2 = TTRITableCell.init(_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void *sub_100111910()
{
  uint64_t v1 = type metadata accessor for REMSuggestedAttributeOutput.Pipeline();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = __chkstk_darwin(v1);
  uint64_t v5 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___suggestedAttributeModelCells;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___suggestedAttributeModelCells))
  {
    Swift::String v9 = *(void **)(v0
                    + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___suggestedAttributeModelCells);
  }
  else
  {
    uint64_t v10 = static REMSuggestedAttributeOutput.Pipeline.allCases.getter();
    uint64_t v11 = *(void *)(v10 + 16);
    if (v11)
    {
      uint64_t v29 = v8;
      uint64_t v30 = v0;
      uint64_t v38 = _swiftEmptyArrayStorage;
      specialized ContiguousArray.reserveCapacity(_:)();
      uint64_t v12 = type metadata accessor for REMSuggestedAttributesHarvester();
      uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
      uint64_t v13 = v2 + 16;
      uint64_t v36 = v14;
      uint64_t v37 = v12;
      uint64_t v15 = *(unsigned __int8 *)(v13 + 64);
      v28[1] = v10;
      uint64_t v16 = v10 + ((v15 + 32) & ~v15);
      uint64_t v17 = *(void *)(v13 + 56);
      uint64_t v34 = (v15 + 16) & ~v15;
      uint64_t v35 = v17;
      uint64_t v32 = v15 | 7;
      uint64_t v33 = v34 + v3;
      uint64_t v31 = (void (**)(uint64_t, char *, uint64_t))(v13 + 16);
      id v18 = (void (**)(char *, uint64_t))(v13 - 8);
      do
      {
        objc_super v19 = v36;
        v36(v7, (char *)v16, v1);
        static REMSuggestedAttributesHarvester.modelPipelineValueFromUserDefaults(for:)();
        REMSuggestedAttributeOutput.Pipeline.rawValue.getter();
        TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)();
        id v20 = objc_allocWithZone((Class)type metadata accessor for TTRIToggleCellContent());
        uint64_t v21 = TTRIToggleCellContent.init(state:)();
        v19(v5, v7, v1);
        uint64_t v22 = swift_allocObject();
        (*v31)(v22 + v34, v5, v1);
        uint64_t v23 = v5;
        uint64_t v24 = v13;
        uint64_t v25 = (uint64_t *)(v21 + direct field offset for TTRIToggleCellContent.stateChangeBlock);
        swift_beginAccess();
        uint64_t v26 = *v25;
        *uint64_t v25 = (uint64_t)sub_10011264C;
        v25[1] = v22;
        sub_1000499C4(v26);
        sub_10003B754((uint64_t *)&unk_100793D30);
        swift_allocObject();
        TTRITableCell.init(_:)();
        (*v18)(v7, v1);
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        uint64_t v13 = v24;
        uint64_t v5 = v23;
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        v16 += v35;
        --v11;
      }
      while (v11);
      Swift::String v9 = v38;
      swift_bridgeObjectRelease();
      uint64_t v0 = v30;
      uint64_t v8 = v29;
    }
    else
    {
      swift_bridgeObjectRelease();
      Swift::String v9 = _swiftEmptyArrayStorage;
    }
    *(void *)(v0 + v8) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v9;
}

uint64_t sub_100111D20()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___deferredUpdateAction;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___deferredUpdateAction))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController____lazy_storage___deferredUpdateAction);
  }
  else
  {
    uint64_t v3 = v0;
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    static OS_dispatch_queue.main.getter();
    type metadata accessor for TTRDeferredAction();
    swift_allocObject();
    uint64_t v2 = TTRDeferredAction.init(queue:)();
    swift_beginAccess();
    *(void *)(v2 + 24) = &off_10073ACD8;
    swift_unknownObjectWeakAssign();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_100111E04()
{
  uint64_t v0 = qword_100799CE8;
  uint64_t v1 = *(id *)(sub_1001117B8() + 32);
  swift_release();
  uint64_t v2 = (id *)((char *)v1 + *(void *)((swift_isaMask & *v1) + 0x78));
  swift_beginAccess();
  sub_100112528(*v2, v2[1], v2[2]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  TTRITableCellContent.state.setter();

  uint64_t v3 = *(id *)(sub_1001117B8() + 32);
  swift_release();
  sub_10003B754((uint64_t *)&unk_100788EE0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C6F0;
  *(void *)(v4 + 56) = &type metadata for Double;
  *(void *)(v4 + 64) = &protocol witness table for Double;
  *(void *)(v4 + 32) = v0;
  String.init(format:_:)();
  uint64_t v5 = (id *)((char *)v3 + *(void *)((swift_isaMask & *v3) + 0x78));
  swift_beginAccess();
  sub_100112528(*v5, v5[1], v5[2]);
  swift_bridgeObjectRetain();
  TTRITableCellContent.state.setter();
}

void sub_10011200C(uint64_t a1, uint64_t a2, char a3)
{
  switch(a3)
  {
    case 1:
      uint64_t v3 = 3;
      uint64_t v4 = 2;
      uint64_t v5 = 10;
      goto LABEL_6;
    case 2:
      uint64_t v3 = 3;
      uint64_t v4 = 10;
      uint64_t v5 = 100;
      goto LABEL_6;
    case 3:
      uint64_t v3 = 5;
      uint64_t v4 = 30;
      uint64_t v5 = 1000;
      goto LABEL_6;
    case 4:
      sub_100399840(2, 10, 0, 0);
      return;
    default:
      uint64_t v3 = 2;
      uint64_t v4 = 2;
      uint64_t v5 = 3;
LABEL_6:
      sub_1003996E4(v3, v4, v5, 1, 0, 0);
      return;
  }
}

void sub_1001120EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    [*(id *)(*(void *)(*(void *)(*(void *)(Strong+ OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_eventHandler)+ 32)+ 32)+ 16) nukeDatabase];
  }
}

uint64_t sub_100112160(uint64_t a1, uint64_t a2, char a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    uint64_t v6 = swift_unknownObjectRetain();
    sub_10011200C(v6, v7, a3);

    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001121E0()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.animationSlowModeEnabled.setter();
}

uint64_t sub_100112240(uint64_t a1)
{
  *(double *)&qword_100799CE8 = *(float *)(a1 + 64);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v2 = (void *)result;
    sub_100111D20();
    v3._object = (void *)0x80000001006A9CA0;
    v3._uint64_t countAndFlagsBits = 0xD000000000000018;
    TTRDeferredAction.scheduleNextRunLoop(reason:)(v3);

    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for TTRIDebugMenuViewController()
{
  return self;
}

void sub_100112490(uint64_t a1)
{
  if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders27TTRIDebugMenuViewController_tableDataController))
  {
    __chkstk_darwin(a1);
    id v3 = v2;
    TTRITableDataController.performBatchUpdates(by:updates:)();
  }
}

void sub_100112520()
{
}

id sub_100112528(id result, void *a2, void *a3)
{
  if (result != (id)1)
  {
    uint64_t v4 = result;
    id v5 = a3;
    id v6 = v4;
    return a2;
  }
  return result;
}

uint64_t sub_10011257C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1001125B4(uint64_t a1)
{
  return sub_100112240(a1);
}

uint64_t sub_1001125BC()
{
  uint64_t v1 = type metadata accessor for REMSuggestedAttributeOutput.Pipeline();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10011264C()
{
  return static REMSuggestedAttributesHarvester.setModelPipelineValueInUserDefaults(for:value:)();
}

uint64_t sub_1001126C4()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001126FC(uint64_t a1)
{
  return sub_100112160(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_100112708()
{
}

ValueMetadata *type metadata accessor for TTRIDebugMenuViewController.Argument()
{
  return &type metadata for TTRIDebugMenuViewController.Argument;
}

void **sub_100112724(uint64_t *a1, void **a2, uint64_t a3)
{
  id v81 = a1;
  uint64_t v82 = a3;
  uint64_t v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v74 = (char *)&v71 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v77);
  uint64_t v83 = (uint64_t)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v76);
  uint64_t v75 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle();
  uint64_t v8 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  unint64_t v78 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v71 - v15;
  uint64_t v17 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v17 - 8);
  objc_super v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (void **)((char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = a2;
  char v73 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  sub_10010630C((uint64_t)a2, (uint64_t)v22, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.dueDates.getter();
  sub_100055D48(v22, (uint64_t)v19, 0, (uint64_t)v87);
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
  uint64_t v23 = *a2;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v78, enum case for REMRemindersListDataView.ScheduledByDateBucketsStyle.regular(_:), v80);
  uint64_t v79 = v11;
  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v24(v14, v16, v10);
  type metadata accessor for TTRShowScheduledByDateBucketsDataModelSource();
  swift_allocObject();
  id v25 = v23;
  uint64_t v26 = TTRShowScheduledByDateBucketsDataModelSource.init(store:style:countCompleted:sortingStyle:canChangeSortingStyle:)();
  id v27 = v87[0];
  uint64_t v28 = v75;
  unint64_t v78 = v16;
  uint64_t v80 = v10;
  v24(v75, v16, v10);
  uint64_t v29 = (uint64_t)v28;
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTRShowScheduledViewModelSource(0);
  uint64_t v30 = (void *)swift_allocObject();
  id v31 = v27;
  uint64_t v76 = v26;
  uint64_t v32 = (uint64_t (*)(uint64_t))sub_10011309C(v26, v31, v29, 0, v30);

  sub_10010630C((uint64_t)v72, (uint64_t)v22, v73);
  sub_100057134((uint64_t)v87, (uint64_t)v84);
  swift_retain();
  char v73 = v32;
  sub_100056B24((uint64_t)v22, (uint64_t)v84, (uint64_t)v32, (uint64_t)&off_1007512D8, v83);
  uint64_t v33 = (uint64_t)v74;
  sub_100056CAC((uint64_t)v74);
  uint64_t v75 = (char *)type metadata accessor for TTRIRemindersCommonPresenter(0);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v82;
  swift_unknownObjectRetain();
  uint64_t v36 = sub_1003585DC(v33, v35, v34);
  uint64_t v37 = *(void *)(v36 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 104))(ObjectType, v37);
  if (v39)
  {
    uint64_t v41 = v40;
    uint64_t v42 = swift_getObjectType();
    LOBYTE(v41) = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v42, v41);
    swift_unknownObjectRelease();
    LOBYTE(v39) = v41 & 1;
  }
  uint64_t v43 = sub_1001D0C84(v39, v36);
  uint64_t v72 = v44;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v71 = swift_getObjectType();
  *(void *)(v36 + 24) = *(void *)(v48 + 8);
  uint64_t v82 = v46;
  swift_unknownObjectWeakAssign();
  uint64_t v49 = *(void *)(v36 + 144);
  uint64_t v50 = swift_getObjectType();
  uint64_t v51 = *(uint64_t (**)(uint64_t, uint64_t))(v49 + 104);
  swift_retain();
  uint64_t v52 = v43;
  if (v51(v50, v49))
  {
    uint64_t v54 = v53;
    uint64_t v55 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v54 + 16))(v55, v54);
    swift_unknownObjectRelease();
  }
  id v56 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v74 = v52;
  uint64_t v57 = (void *)sub_10035A06C(v36);
  swift_release();

  uint64_t v58 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v48 + 32);
  uint64_t v72 = v57;
  v58(v57, &off_1007464D0, v71, v48);
  unint64_t v59 = (char *)v87[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v59 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v60 = (char *)v87[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v60 + 1) = &protocol witness table for TTRShowScheduledByDateBucketsDataModelSource;
  uint64_t v61 = v76;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v62 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v61 + 392);
  uint64_t v63 = swift_retain();
  v62(v63, &off_1007411B0);
  swift_retain();
  uint64_t v64 = swift_retain();
  sub_1005B1F9C(v64, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v65 = v83;
  *(void *)(*(void *)(v83 + *(int *)(v77 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v88, (uint64_t)v84);
  long long v85 = v89;
  long long v86 = v90;
  *(void *)(v89 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v84);
  sub_100038DC0((uint64_t)&v91, (uint64_t)v84);
  uint64_t v66 = *((void *)&v92 + 1);
  long long v85 = v92;
  uint64_t v67 = swift_getObjectType();
  unint64_t v68 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v66 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v68(v36, &off_10073CA90, v67, v66);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v84);
  uint64_t v69 = v81;
  v81[3] = (uint64_t)v75;
  v69[4] = (uint64_t)&off_10073ADE8;
  uint64_t *v69 = v36;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1001067B8(v65, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
  sub_100057B44(v87);
  return v72;
}

id TTRIShowScheduledAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowScheduledAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowScheduledAssembly()
{
  return self;
}

id TTRIShowScheduledAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowScheduledAssembly();
  return [super dealloc];
}

uint64_t sub_10011309C(uint64_t a1, void *a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v10 = *a5;
  uint64_t v39 = a3;
  uint64_t v40 = v10;
  uint64_t v41 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v11 = *(void *)(v41 - 8);
  __chkstk_darwin(v41);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v17 - 8);
  objc_super v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((unsigned char *)a5 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_cachedEmptyListMessaging) = 0x80;
  uint64_t v20 = (char *)a5 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_completedRemindersCount;
  *(void *)uint64_t v20 = 0;
  v20[8] = 1;
  uint64_t v21 = (char *)a5 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_defaultSectionID;
  uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  *(void *)((char *)a5
            + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_sectionHeadersNeedingPlaceholderReminderItems) = &_swiftEmptySetSingleton;
  *(void *)((char *)a5 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_tappedSectionHeaders) = &_swiftEmptySetSingleton;
  *(void *)((char *)a5 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_lastSectionsSnapshot) = 0;
  *((unsigned char *)a5 + OBJC_IVAR____TtC9Reminders31TTRShowScheduledViewModelSource_hasDefaultNewReminderButton) = a4;
  sub_10010630C(a3, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain();
  uint64_t v23 = sub_100359DC4(a1, (uint64_t)a2, (uint64_t)v19, (uint64_t)a5);
  swift_retain();
  sub_100280A78((uint64_t)v16);
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v16, 0, 1, v24);
  sub_1005885DC((uint64_t)v16);
  sub_1000A1724((uint64_t)v16);
  id v25 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v26 = v25;
  static REMAnalyticsManager.shared.getter();
  uint64_t v27 = sub_10003B754(&qword_10078D258);
  uint64_t v28 = (uint64_t *)&v13[*(int *)(v27 + 48)];
  uint64_t v29 = (uint64_t *)&v13[*(int *)(v27 + 80)];
  uint64_t v30 = enum case for REMRemindersOpenUserOperation.SmartListType.scheduled(_:);
  uint64_t v31 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 104))(v13, v30, v31);
  uint64_t v32 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  uint64_t v33 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 104))(v13, v32, v33);
  *uint64_t v28 = TTRUserDefaults.activitySessionId.getter();
  v28[1] = v34;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *uint64_t v29 = _typeName(_:qualified:)();
  v29[1] = v35;
  uint64_t v36 = v41;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for REMAnalyticsEvent.openListUserOperation(_:), v41);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1001067B8(v39, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v36);
  return v23;
}

uint64_t sub_1001134F4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078DB50);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078DB50);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1001135BC()
{
  uint64_t v1 = v0;
  if (qword_1007852B0 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_10078DB50);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  sub_100038D28((void *)(v0 + 48), *(void *)(v0 + 72));
  if (qword_1007851D0 != -1) {
    swift_once();
  }
  sub_100018BF8(v2, (uint64_t)qword_100788460);
  sub_1003AA294(0x6F4D206E7261654CLL, 0xEA00000000006572);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v1 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v6 + 8))(v1, &off_10073ADF8, ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10011375C()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  sub_100038CD8(v0 + 48);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRILearnMorePresenter()
{
  return self;
}

uint64_t getEnumTagSinglePayload for TTRApplicationRunProperties(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[6]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRApplicationRunProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 6) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 6) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRApplicationRunProperties()
{
  return &type metadata for TTRApplicationRunProperties;
}

uint64_t sub_1001138CC()
{
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for TTRIListDetailContainerViewController()
{
  return self;
}

void sub_1001139D4(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_10006C44C(a1, (uint64_t)&v12);
  if (!v13)
  {
    sub_100113DEC((uint64_t)&v12);
    [*(id *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentHostingView) setHostedView:0];
    uint64_t v6 = (void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentView);
    uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentView);
    *uint64_t v6 = 0;
    v6[1] = 0;

    return;
  }
  sub_100038ED8(&v12, (uint64_t)v14);
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentView;
  BOOL v4 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentView);
  if (!v4) {
    goto LABEL_7;
  }
  swift_getObjectType();
  id v5 = v4;
  if ((dispatch thunk of UIContentView.supports(_:)() & 1) == 0)
  {

LABEL_7:
    sub_100038D28(v14, v14[3]);
    uint64_t v8 = dispatch thunk of UIContentConfiguration.makeContentView()();
    uint64_t v10 = v9;
    [*(id *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentHostingView) setHostedView:v8];
    uint64_t v11 = *(void **)v3;
    *(void *)uint64_t v3 = v8;
    *(void *)(v3 + 8) = v10;

    goto LABEL_8;
  }
  sub_1000145EC((uint64_t)v14, (uint64_t)&v12);
  dispatch thunk of UIContentView.configuration.setter();

LABEL_8:
  sub_100038CD8((uint64_t)v14);
}

void sub_100113B28(void *a1, void *a2, void *a3)
{
  [a1 setDirectionalLayoutMargins:8.0, 16.0, 8.0, 16.0];
  [a1 setLayoutMarginsRelativeArrangement:0];
  [a1 setDebugBoundingBoxesEnabled:0];
  [a1 setEdgesPreservingSuperviewLayoutMargins:10];
  [a1 setHorizontalAlignment:0];
  [a1 setVerticalAlignment:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10066C430;
  *(void *)(v6 + 32) = a2;
  *(void *)(v6 + 40) = a3;
  specialized Array._endMutation()();
  sub_1001141B8();
  id v7 = a2;
  id v8 = a3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setArrangedSubviews:isa];
}

uint64_t type metadata accessor for TTRIRemindersBoardTipHeaderView()
{
  return self;
}

uint64_t sub_100113DEC(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10079CA30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100113E4C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = &v1[OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentConfiguration];
  *(_OWORD *)uint64_t v3 = 0u;
  *((_OWORD *)v3 + 1) = 0u;
  *((void *)v3 + 4) = 0;
  BOOL v4 = &v1[OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentView];
  *(void *)BOOL v4 = 0;
  *((void *)v4 + 1) = 0;
  id v5 = objc_allocWithZone((Class)UIView);
  uint64_t v6 = v1;
  id v7 = [v5 init];
  id v8 = [self systemBackgroundColor];
  [v7 setBackgroundColor:v8];

  *(void *)&v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_backgroundView] = v7;
  type metadata accessor for TTRIConstraintBasedLayoutHostingView();
  id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v10 = v7;
  id v11 = [v9 init];
  *(void *)&v6[OBJC_IVAR____TtC9Reminders31TTRIRemindersBoardTipHeaderView_contentHostingView] = v11;
  id v12 = v11;

  v29.receiver = v6;
  v29.super_class = ObjectType;
  id v13 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10066D470;
  *(void *)(v14 + 32) = v12;
  v28[0] = v14;
  specialized Array._endMutation()();
  id v15 = objc_allocWithZone((Class)NUIContainerBoxView);
  sub_1001141B8();
  id v16 = v12;
  id v17 = v13;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v19 = [v15 initWithArrangedSubviews:isa, v28[0]];

  [v19 setPreservesSuperviewLayoutMargins:1];
  [v19 setLayoutMarginsRelativeArrangement:1];
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = v17;
  _OWORD v20[3] = v10;
  v20[4] = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_100114240;
  *(void *)(v21 + 24) = v20;
  v28[4] = sub_1000218B0;
  v28[5] = v21;
  v28[0] = _NSConcreteStackBlock;
  v28[1] = 1107296256;
  void v28[2] = sub_100021888;
  v28[3] = &unk_10073AF10;
  uint64_t v22 = _Block_copy(v28);
  id v23 = v17;
  id v24 = v10;
  id v25 = v23;
  id v26 = v19;
  swift_retain();
  swift_release();
  [v25 performBatchUpdates:v22];

  _Block_release(v22);
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v16 & 1) == 0) {
    return (uint64_t)v25;
  }
  __break(1u);
  return result;
}

unint64_t sub_1001141B8()
{
  unint64_t result = qword_100788600;
  if (!qword_100788600)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100788600);
  }
  return result;
}

uint64_t sub_1001141F8()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_100114240()
{
  sub_100113B28(v0[2], v0[3], v0[4]);
}

uint64_t sub_10011424C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t TTRITipContentConfiguration.init(tip:assetColor:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for AnyTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for TTRITipContentConfiguration(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for TTRITipContentConfiguration(uint64_t a1)
{
  return sub_100030FD4(a1, qword_10078DD68);
}

id TTRITipContentConfiguration.makeContentView()()
{
  uint64_t v1 = type metadata accessor for TTRITipContentConfiguration(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100114434(v0, (uint64_t)v3);
  BOOL v4 = (objc_class *)type metadata accessor for TipContentView(0);
  id v5 = (char *)objc_allocWithZone(v4);
  *(void *)&v5[OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_tipView] = 0;
  sub_100114434((uint64_t)v3, (uint64_t)&v5[OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_internalConfiguration]);
  v8.receiver = v5;
  v8.super_class = v4;
  id v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  [v6 setPreservesSuperviewLayoutMargins:1];
  sub_1001144C8((uint64_t)v3);

  sub_10011494C((uint64_t)v3);
  sub_1001158F4(&qword_10078DD08, (void (*)(uint64_t))type metadata accessor for TipContentView);
  return v6;
}

uint64_t sub_100114434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRITipContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TipContentView(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_10078DDC8);
}

uint64_t TTRITipContentConfiguration.updated(for:)@<X0>(uint64_t a1@<X8>)
{
  return sub_100114434(v1, a1);
}

void sub_1001144C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for AnyTip();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = v5;
  objc_super v8 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v8(v7, a1, v4);
  *((void *)&v35 + 1) = v4;
  uint64_t v36 = (void *)sub_1001158F4(&qword_10078DDE8, (void (*)(uint64_t))&type metadata accessor for AnyTip);
  id v9 = sub_1000394A8((uint64_t *)&v34);
  v8((char *)v9, (uint64_t)v7, v4);
  id v10 = objc_allocWithZone((Class)type metadata accessor for TipUIView());
  id v11 = (void *)TipUIView.init(_:arrowEdge:actionHandler:)();
  uint64_t v12 = *(void *)(a1 + *(int *)(type metadata accessor for TTRITipContentConfiguration(0) + 20));
  if (v12)
  {
    *((void *)&v35 + 1) = &type metadata for Color;
    uint64_t v36 = &protocol witness table for Color;
    *(void *)&long long v34 = v12;
  }
  else
  {
    uint64_t v36 = 0;
    long long v34 = 0u;
    long long v35 = 0u;
  }
  swift_retain();
  TipUIView.imageStyle.setter();
  [v11 setIsAccessibilityElement:0];
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 addSubview:v11];
  id v32 = self;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10066C4F0;
  id v14 = [v2 layoutMarginsGuide];
  id v15 = [v14 leadingAnchor];

  id v16 = [v11 leadingAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16];

  *(void *)(v13 + 32) = v17;
  id v18 = [v2 layoutMarginsGuide];
  id v19 = [v18 topAnchor];

  id v20 = [v11 topAnchor];
  id v21 = [v19 constraintEqualToAnchor:v20];

  *(void *)(v13 + 40) = v21;
  id v22 = [v2 layoutMarginsGuide];
  id v23 = [v22 trailingAnchor];

  id v24 = [v11 trailingAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24];

  *(void *)(v13 + 48) = v25;
  id v26 = [v2 layoutMarginsGuide];
  id v27 = [v26 bottomAnchor];

  id v28 = [v11 bottomAnchor];
  id v29 = [v27 constraintEqualToAnchor:v28];

  *(void *)(v13 + 56) = v29;
  *(void *)&long long v34 = v13;
  specialized Array._endMutation()();
  sub_1001088A8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];

  (*(void (**)(char *, uint64_t))(v33 + 8))(v7, v4);
  uint64_t v31 = *(void **)&v2[OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_tipView];
  *(void *)&v2[OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_tipView] = v11;
}

uint64_t sub_10011494C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRITipContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t *initializeBufferWithCopyOfBuffer for TTRITipContentConfiguration(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = type metadata accessor for AnyTip();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for TTRITipContentConfiguration(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AnyTip();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t initializeWithCopy for TTRITipContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRITipContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for TTRITipContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TTRITipContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyTip();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRITipContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100114D08);
}

uint64_t sub_100114D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AnyTip();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TTRITipContentConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100114DE8);
}

uint64_t sub_100114DE8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AnyTip();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t sub_100114EA4()
{
  uint64_t result = type metadata accessor for AnyTip();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100114FB0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TTRITipContentConfiguration(0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = &v16[-v8];
  __chkstk_darwin(v7);
  int v11 = &v16[-v10];
  uint64_t v12 = v1 + OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_internalConfiguration;
  swift_beginAccess();
  sub_100114434(v12, (uint64_t)v11);
  swift_beginAccess();
  sub_100115A00(a1, v12);
  swift_endAccess();
  sub_100114434(v12, (uint64_t)v9);
  char v13 = sub_100115A64((uint64_t)v11, (uint64_t)v9);
  sub_10011494C((uint64_t)v9);
  if (v13)
  {
    sub_100114434(v12, (uint64_t)v6);
    id v14 = *(void **)(v1 + OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_tipView);
    if (v14) {
      [v14 removeFromSuperview];
    }
    sub_1001144C8((uint64_t)v6);
    sub_10011494C((uint64_t)v6);
  }
  sub_10011494C(a1);
  return sub_10011494C((uint64_t)v11);
}

uint64_t sub_1001151B4()
{
  return type metadata accessor for TipContentView(0);
}

uint64_t sub_1001151BC()
{
  uint64_t result = type metadata accessor for TTRITipContentConfiguration(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100115258(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078DDE0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v5 = type metadata accessor for TTRITipContentConfiguration(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = &v16[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __chkstk_darwin(v7);
  int v11 = &v16[-v10 - 8];
  sub_1000145EC(a1, (uint64_t)v16);
  sub_10003B754(&qword_10078DDD8);
  int v12 = swift_dynamicCast();
  char v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  if (v12)
  {
    v13(v4, 0, 1, v5);
    sub_10011599C((uint64_t)v4, (uint64_t)v11);
    sub_100114434((uint64_t)v11, (uint64_t)v9);
    sub_100114FB0((uint64_t)v9);
    sub_100038CD8(a1);
    return sub_10011494C((uint64_t)v11);
  }
  else
  {
    v13(v4, 1, 1, v5);
    sub_100038CD8(a1);
    return sub_10011593C((uint64_t)v4);
  }
}

void (*sub_10011542C(uint64_t **a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = (uint64_t *)malloc(0xC0uLL);
  *a1 = v3;
  v3[18] = v1;
  uint64_t v4 = sub_10003B754(&qword_10078DDE0);
  v3[19] = (uint64_t)malloc(*(void *)(*(void *)(v4 - 8) + 64));
  uint64_t v5 = type metadata accessor for TTRITipContentConfiguration(0);
  v3[20] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[21] = v6;
  size_t v7 = *(void *)(v6 + 64);
  v3[22] = (uint64_t)malloc(v7);
  v3[23] = (uint64_t)malloc(v7);
  uint64_t v8 = v1 + OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_internalConfiguration;
  swift_beginAccess();
  v3[3] = v5;
  v3[4] = sub_1001158F4((unint64_t *)&unk_100791B20, (void (*)(uint64_t))type metadata accessor for TTRITipContentConfiguration);
  uint64_t v9 = sub_1000394A8(v3);
  sub_100114434(v8, (uint64_t)v9);
  return sub_100115594;
}

void sub_100115594(uint64_t *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    uint64_t v4 = (void *)v2[22];
    uint64_t v3 = (void *)v2[23];
    uint64_t v5 = (void *)v2[19];
    sub_1000145EC(*a1, (uint64_t)(v2 + 5));
    sub_100115258((uint64_t)(v2 + 5));
    sub_100038CD8((uint64_t)v2);
  }
  else
  {
    uint64_t v6 = v2[21];
    sub_1000145EC(*a1, (uint64_t)(v2 + 10));
    sub_10003B754(&qword_10078DDD8);
    int v7 = swift_dynamicCast();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v6 + 56);
    if (v7)
    {
      uint64_t v10 = v2[22];
      uint64_t v9 = v2[23];
      uint64_t v11 = v2[19];
      v8(v11, 0, 1, v2[20]);
      sub_10011599C(v11, v9);
      sub_100114434(v9, v10);
      sub_100114FB0(v10);
      sub_100038CD8((uint64_t)v2);
      sub_10011494C(v9);
    }
    else
    {
      uint64_t v12 = v2[19];
      v8(v12, 1, 1, v2[20]);
      sub_100038CD8((uint64_t)v2);
      sub_10011593C(v12);
    }
    uint64_t v4 = (void *)v2[22];
    uint64_t v3 = (void *)v2[23];
    uint64_t v5 = (void *)v2[19];
  }
  free(v3);
  free(v4);
  free(v5);

  free(v2);
}

uint64_t sub_1001156F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9RemindersP33_A1F076770714D25C3B77983D252A1B6E14TipContentView_internalConfiguration;
  swift_beginAccess();
  a1[3] = type metadata accessor for TTRITipContentConfiguration(0);
  a1[4] = sub_1001158F4((unint64_t *)&unk_100791B20, (void (*)(uint64_t))type metadata accessor for TTRITipContentConfiguration);
  uint64_t v4 = sub_1000394A8(a1);
  return sub_100114434(v3, (uint64_t)v4);
}

void (*sub_100115794(uint64_t ***a1))(void *a1)
{
  uint64_t v2 = (uint64_t **)malloc(0x28uLL);
  *a1 = v2;
  v2[4] = (uint64_t *)sub_10011542C(v2);
  return sub_1001157EC;
}

void sub_1001157EC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_100115834(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRITipContentConfiguration(0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_1000145EC(a1, (uint64_t)v8);
  sub_10003B754(&qword_10078DDD8);
  uint64_t v5 = swift_dynamicCast();
  if (v5) {
    sub_10011494C((uint64_t)v4);
  }
  return v5;
}

uint64_t sub_1001158F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10011593C(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078DDE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10011599C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRITipContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100115A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRITipContentConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100115A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRITipContentConfiguration(0);
  uint64_t v5 = __chkstk_darwin(v4);
  int v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = AnyTip.id.getter();
  uint64_t v12 = v11;
  if (v10 == AnyTip.id.getter() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
    sub_100114434(a1, (uint64_t)v9);
    sub_100114434(a2, (uint64_t)v7);
  }
  else
  {
    char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100114434(a1, (uint64_t)v9);
    sub_100114434(a2, (uint64_t)v7);
    if ((v14 & 1) == 0)
    {
      sub_10011494C((uint64_t)v7);
      sub_10011494C((uint64_t)v9);
LABEL_13:
      char v18 = 1;
      return v18 & 1;
    }
  }
  uint64_t v15 = *(int *)(v4 + 20);
  uint64_t v16 = *(void *)&v7[v15];
  if (!*(void *)&v9[v15])
  {
    swift_retain();
    sub_10011494C((uint64_t)v7);
    sub_10011494C((uint64_t)v9);
    if (!v16)
    {
      char v18 = 0;
      return v18 & 1;
    }
    goto LABEL_12;
  }
  if (!v16)
  {
    swift_retain();
    sub_10011494C((uint64_t)v7);
    sub_10011494C((uint64_t)v9);
LABEL_12:
    swift_release();
    goto LABEL_13;
  }
  swift_retain();
  swift_retain();
  char v17 = static Color.== infix(_:_:)();
  swift_release();
  sub_10011494C((uint64_t)v7);
  sub_10011494C((uint64_t)v9);
  swift_release();
  char v18 = v17 ^ 1;
  return v18 & 1;
}

uint64_t type metadata accessor for TTRIReminderCellAutoCompleteViewController()
{
  return self;
}

void sub_100115D0C(Swift::OpaquePointer a1)
{
  swift_getObjectType();

  TTRAccessibilityReminderAutoCompleteAnnouncing.ttrAccessibilityAnnounceAutocompletionSuggestionChanges(_:)(a1);
}

void sub_100115D5C(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_10003B754(&qword_10078DE28);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack;
  uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_autoCompleteStack);
  if (v12)
  {
    sub_100115FF8(a1, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_100116060((uint64_t)v6);
      uint64_t v13 = *(void **)(v2 + v11);
      if (!v13) {
        return;
      }
      goto LABEL_9;
    }
    sub_1001160C0((uint64_t)v6, (uint64_t)v10);
    char v14 = &v10[*(int *)(v7 + 24)];
    uint64_t v15 = *((void *)v14 + 1);
    if (v15)
    {
      uint64_t v16 = *(void *)&v10[*(int *)(v7 + 28)];
      if (*(void *)(v16 + 16))
      {
        uint64_t v17 = *(void *)v14;
        id v18 = v12;
        swift_bridgeObjectRetain();
        __chkstk_darwin([v18 setHidden:0]);
        *(&v22 - 6) = v16;
        *(&v22 - 5) = (uint64_t)v18;
        *(&v22 - 4) = v17;
        *(&v22 - 3) = v15;
        *(&v22 - 2) = v2;
        swift_bridgeObjectRetain();
        TTRIRemindersListCellAutoCompleteSuggestionsStackView.performSubviewUpdates(block:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v19 = swift_bridgeObjectRetain();
        TTRAccessibilityReminderAutoCompleteAnnouncing.ttrAccessibilityAnnounceAutocompletionSuggestionChanges(_:)((Swift::OpaquePointer)v19);

        swift_bridgeObjectRelease();
        sub_100116124((uint64_t)v10);
        return;
      }
    }
    sub_100116124((uint64_t)v10);
    uint64_t v13 = *(void **)(v2 + v11);
    if (v13)
    {
LABEL_9:
      id v20 = v13;
      TTRIRemindersListCellAutoCompleteSuggestionsStackView.setExclusiveHighlighted(on:)();

      id v21 = *(void **)(v2 + v11);
      if (v21) {
        [v21 setHidden:1];
      }
    }
  }
}

uint64_t sub_100115FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078DE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100116060(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10078DE28);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001160C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100116124(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100116180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = 0;
  unint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = a5 + OBJC_IVAR____TtC9Reminders42TTRIReminderCellAutoCompleteViewController_presenter;
  uint64_t v8 = a1 + 32;
  do
  {
    if (v5 >= v6)
    {
      TTRIRemindersListCellAutoCompleteSuggestionsStackView.makeHidden(at:)(v5);
    }
    else
    {
      sub_100116334(v8, (uint64_t)v17);
      type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row();
      uint64_t v9 = TTRIRemindersListCellAutoCompleteSuggestionsStackView.cachedView<A>(ofType:at:)();
      if (v9)
      {
        uint64_t v10 = (void *)v9;
        uint64_t v11 = (char *)v9;
      }
      else
      {
        uint64_t v11 = (char *)TTRIRemindersListCellAutoCompleteSuggestionsStackView.createRow()();
        uint64_t v10 = 0;
      }
      sub_100116334((uint64_t)v17, (uint64_t)v15);
      TTRIRemindersListCellAutoCompleteSuggestionsStackView.RowConfiguration.init(suggestion:query:isLast:leftInset:)();
      sub_100116390((uint64_t)v16, (uint64_t)v15);
      id v12 = v10;
      swift_bridgeObjectRetain();
      TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row.configuration.setter();
      uint64_t v13 = *(void *)(*(void *)(v7 + 8) + 8);
      char v14 = &v11[direct field offset for TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row.suggestionDelegate];
      swift_beginAccess();
      *((void *)v14 + 1) = v13;
      swift_unknownObjectWeakAssign();
      TTRIRemindersListCellAutoCompleteSuggestionsStackView.makeVisible(_:at:alignment:beforeSpacing:bottomMarginIfLast:)();

      sub_1001163EC((uint64_t)v16);
      sub_100116440((uint64_t)v17);
    }
    ++v5;
    v8 += 192;
  }
  while (v5 != 3);
}

void sub_100116324()
{
  sub_100116180(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_100116334(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100116390(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(&type metadata for TTRIRemindersListCellAutoCompleteSuggestionsStackView.RowConfiguration
                                             - 1)
                                           + 16))(a2, a1);
  return a2;
}

uint64_t sub_1001163EC(uint64_t a1)
{
  (*(void (**)(void))(*(&type metadata for TTRIRemindersListCellAutoCompleteSuggestionsStackView.RowConfiguration - 1)
                    + 8))();
  return a1;
}

uint64_t sub_100116440(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001165A4@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v11 = *(void **)(v7 + 16);
  id v12 = *(void **)(v7 + 24);
  uint64_t v13 = *(void **)(v7 + 32);
  char v70 = *(unsigned char *)(v7 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_100134910(v14, &v114);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_100134910(v15, v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v116;
  uint64_t v62 = v116;
  uint64_t v18 = v114;
  uint64_t v17 = v115;
  uint64_t v66 = v115;
  uint64_t v63 = v114;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v51 = a3;
  sub_100134B8C(v118, v18, v17, v16, v11, v12, v13, v70, v119, a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v125 = v118[0];
  sub_10006A2C4((uint64_t)&v125);
  unint64_t v124 = v118[1];
  sub_10006A2C4((uint64_t)&v124);
  uint64_t v123 = v118[2];
  sub_10006A2C4((uint64_t)&v123);
  uint64_t v122 = v118[3];
  sub_10006A2C4((uint64_t)&v122);
  int64_t v121 = v118[4];
  sub_10006A2C4((uint64_t)&v121);
  uint64_t v52 = v119[0];
  uint64_t v54 = v119[1];
  uint64_t v48 = v119[3];
  uint64_t v68 = v119[2];
  uint64_t v59 = v119[4];
  swift_beginAccess();
  uint64_t v100 = &v114;
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_100139AB0(v19, (uint64_t)sub_10013F8E4, (uint64_t)v99, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_100135B50);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(unsigned char *)(v21 + 24) = 1;
  long long v97 = sub_10013F8F0;
  uint64_t v98 = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v11;
  *(void *)(v22 + 24) = v12;
  *(void *)(v22 + 32) = v13;
  *(unsigned char *)(v22 + 40) = v70;
  uint64_t v94 = sub_10013F92C;
  uint64_t v95 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100138180(v63, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10006A3F0, (uint64_t)v93, sub_10006AF58, (uint64_t)v96, &qword_10078E370, &qword_10078E378);
  uint64_t v57 = v23;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = *(void *)(v7 + 88);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v24;
  *(unsigned char *)(v25 + 24) = 1;
  uint64_t v91 = sub_1001431B4;
  uint64_t v92 = v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v11;
  *(void *)(v26 + 24) = v12;
  *(void *)(v26 + 32) = v13;
  *(unsigned char *)(v26 + 40) = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v56 = sub_1001378E8(v52, (void (*)(uint64_t))sub_10013F948, v26, sub_10006AF58, (uint64_t)v90, &qword_10078E370, &qword_10078E378);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void *)(v7 + 80);
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = v27;
  *(unsigned char *)(v28 + 24) = 3;
  uint64_t v88 = sub_1001431B4;
  uint64_t v89 = v28;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v11;
  *(void *)(v29 + 24) = v12;
  *(void *)(v29 + 32) = v13;
  *(unsigned char *)(v29 + 40) = v70;
  long long v85 = sub_10013F92C;
  uint64_t v86 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100138180(v62, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10006A3F0, (uint64_t)v84, sub_10006AF58, (uint64_t)v87, &qword_10078E370, &qword_10078E378);
  uint64_t v53 = v30;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void *)(v7 + 88);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v31;
  *(unsigned char *)(v32 + 24) = 3;
  uint64_t v82 = sub_1001431B4;
  uint64_t v83 = v32;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v11;
  *(void *)(v33 + 24) = v12;
  *(void *)(v33 + 32) = v13;
  *(unsigned char *)(v33 + 40) = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_1001378E8(v48, (void (*)(uint64_t))sub_10014321C, v33, sub_10006AF58, (uint64_t)v81, &qword_10078E370, &qword_10078E378);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v34 = *(void *)(v7 + 80);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v34;
  *(unsigned char *)(v35 + 24) = 0;
  uint64_t v79 = sub_1001431B4;
  uint64_t v80 = v35;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a1;
  *(void *)(v36 + 24) = a2;
  *(void *)(v36 + 32) = v51;
  *(unsigned char *)(v36 + 40) = a4;
  uint64_t v76 = sub_10013F92C;
  uint64_t v77 = v36;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100138180(v66, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10006A3F0, (uint64_t)v75, sub_10006AF58, (uint64_t)v78, &qword_10078E370, &qword_10078E378);
  uint64_t v49 = v37;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v7 + 88);
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v38;
  *(unsigned char *)(v39 + 24) = 0;
  char v73 = sub_1001431B4;
  uint64_t v74 = v39;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a1;
  *(void *)(v40 + 24) = a2;
  *(void *)(v40 + 32) = v51;
  *(unsigned char *)(v40 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v47 = sub_1001378E8(v54, (void (*)(uint64_t))sub_10014321C, v40, sub_10006AF58, (uint64_t)v72, &qword_10078E370, &qword_10078E378);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v108[0] = v11;
  v108[1] = v12;
  _OWORD v108[2] = v13;
  char v109 = v70;
  char v110 = a1;
  uint64_t v111 = a2;
  id v112 = v51;
  char v113 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v41 = swift_bridgeObjectRetain();
  sub_100136E18(v41, (uint64_t)v108, &qword_10078E370, &qword_10078E378, sub_10035C1D0);
  uint64_t v55 = v42;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v120 = v117;
  sub_10006A2C4((uint64_t)&v120);
  swift_bridgeObjectRelease();
  *(void *)&long long v101 = v11;
  *((void *)&v101 + 1) = v12;
  uint64_t v102 = v13;
  char v103 = v70;
  unint64_t v104 = a1;
  uint64_t v105 = a2;
  UIImage_optional v106 = v51;
  char v107 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v67 = sub_100135D0C(v68, &v101);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v58;
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = sub_10013F9B8;
  *(void *)(v44 + 24) = v43;
  uint64_t v45 = swift_retain();
  uint64_t v65 = sub_100133E90(v45, sub_10006AF58, v44);
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_100597028(v59, v68);
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *a7 = v49;
  a7[1] = v57;
  a7[2] = v53;
  a7[3] = v55;
  a7[4] = v47;
  a7[5] = v56;
  a7[6] = v50;
  a7[7] = v67;
  a7[8] = v65;
  a7[9] = a5;
  a7[10] = a6;
  a7[11] = v71;
  return result;
}

uint64_t sub_100117258@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v11 = *(void **)(v7 + 16);
  id v12 = *(void **)(v7 + 24);
  uint64_t v13 = *(void **)(v7 + 32);
  char v70 = *(unsigned char *)(v7 + 40);
  swift_beginAccess();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = swift_bridgeObjectRetain();
  sub_1001385C8(v14, v114);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1001385C8(v15, v115);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = v114[3];
  uint64_t v18 = v114[0];
  uint64_t v17 = v114[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v56 = a3;
  sub_10013887C(v115, v18, v17, v16, v11, v12, v13, v70, v116, a1, a2, a3, a4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v122 = v115[0];
  sub_10006A2C4((uint64_t)&v122);
  int64_t v121 = v115[1];
  sub_10006A2C4((uint64_t)&v121);
  uint64_t v120 = v115[2];
  sub_10006A2C4((uint64_t)&v120);
  unint64_t v119 = v115[3];
  sub_10006A2C4((uint64_t)&v119);
  uint64_t v118 = v115[4];
  sub_10006A2C4((uint64_t)&v118);
  uint64_t v57 = v116[0];
  uint64_t v59 = v116[1];
  uint64_t v53 = v116[3];
  uint64_t v68 = v116[2];
  uint64_t v64 = v116[4];
  swift_beginAccess();
  uint64_t v100 = v114;
  swift_bridgeObjectRetain();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v63 = sub_100139AB0(v19, (uint64_t)sub_10013F8E4, (uint64_t)v99, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_1001398D0);
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(v7 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v20;
  *(unsigned char *)(v21 + 24) = 1;
  long long v97 = sub_10013F8F0;
  uint64_t v98 = v21;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v11;
  *(void *)(v22 + 24) = v12;
  *(void *)(v22 + 32) = v13;
  *(unsigned char *)(v22 + 40) = v70;
  uint64_t v94 = sub_10013F92C;
  uint64_t v95 = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = swift_bridgeObjectRetain();
  sub_100138180(v23, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10006A3F0, (uint64_t)v93, sub_10006A3B8, (uint64_t)v96, (uint64_t *)&unk_100788D30, &qword_10078E2A8);
  uint64_t v62 = v24;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v7 + 88);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v25;
  *(unsigned char *)(v26 + 24) = 1;
  uint64_t v91 = sub_1001431B4;
  uint64_t v92 = v26;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v11;
  *(void *)(v27 + 24) = v12;
  *(void *)(v27 + 32) = v13;
  *(unsigned char *)(v27 + 40) = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v61 = sub_1001378E8(v57, (void (*)(uint64_t))sub_10013F948, v27, sub_10006AF58, (uint64_t)v90, (uint64_t *)&unk_100788D30, &qword_10078E2A8);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void *)(v7 + 80);
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v28;
  *(unsigned char *)(v29 + 24) = 3;
  uint64_t v88 = sub_1001431B4;
  uint64_t v89 = v29;
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = v11;
  *(void *)(v30 + 24) = v12;
  *(void *)(v30 + 32) = v13;
  *(unsigned char *)(v30 + 40) = v70;
  long long v85 = sub_10013F92C;
  uint64_t v86 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v31 = swift_bridgeObjectRetain();
  sub_100138180(v31, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10006A3F0, (uint64_t)v84, sub_10006AF58, (uint64_t)v87, (uint64_t *)&unk_100788D30, &qword_10078E2A8);
  uint64_t v58 = v32;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void *)(v7 + 88);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v33;
  *(unsigned char *)(v34 + 24) = 3;
  uint64_t v82 = sub_1001431B4;
  uint64_t v83 = v34;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v11;
  *(void *)(v35 + 24) = v12;
  *(void *)(v35 + 32) = v13;
  *(unsigned char *)(v35 + 40) = v70;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v55 = sub_1001378E8(v53, (void (*)(uint64_t))sub_10014321C, v35, sub_10006AF58, (uint64_t)v81, (uint64_t *)&unk_100788D30, &qword_10078E2A8);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void *)(v7 + 80);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v36;
  *(unsigned char *)(v37 + 24) = 0;
  uint64_t v79 = sub_1001431B4;
  uint64_t v80 = v37;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = a1;
  *(void *)(v38 + 24) = a2;
  *(void *)(v38 + 32) = v56;
  *(unsigned char *)(v38 + 40) = a4;
  uint64_t v76 = sub_10013F92C;
  uint64_t v77 = v38;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v39 = swift_bridgeObjectRetain();
  sub_100138180(v39, (void (*)(uint64_t *__return_ptr, uint64_t))sub_10006A3F0, (uint64_t)v75, sub_10006AF58, (uint64_t)v78, (uint64_t *)&unk_100788D30, &qword_10078E2A8);
  uint64_t v54 = v40;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = *(void *)(v7 + 88);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = v41;
  *(unsigned char *)(v42 + 24) = 0;
  char v73 = sub_1001431B4;
  uint64_t v74 = v42;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = a1;
  *(void *)(v43 + 24) = a2;
  *(void *)(v43 + 32) = v56;
  *(unsigned char *)(v43 + 40) = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v52 = sub_1001378E8(v59, (void (*)(uint64_t))sub_10014321C, v43, sub_10006AF58, (uint64_t)v72, (uint64_t *)&unk_100788D30, &qword_10078E2A8);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  v108[0] = v11;
  v108[1] = v12;
  _OWORD v108[2] = v13;
  char v109 = v70;
  char v110 = a1;
  uint64_t v111 = a2;
  id v112 = v56;
  char v113 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = swift_bridgeObjectRetain();
  sub_100136E18(v44, (uint64_t)v108, (uint64_t *)&unk_100788D30, &qword_10078E2A8, sub_10035C1D0);
  uint64_t v60 = v45;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v117 = v114[4];
  sub_10006A2C4((uint64_t)&v117);
  swift_bridgeObjectRelease();
  *(void *)&long long v101 = v11;
  *((void *)&v101 + 1) = v12;
  uint64_t v102 = v13;
  char v103 = v70;
  unint64_t v104 = a1;
  uint64_t v105 = a2;
  UIImage_optional v106 = v56;
  char v107 = a4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_10013727C(v68, &v101);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t v47 = swift_allocObject();
  *(void *)(v47 + 16) = v63;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = sub_10013F9B8;
  *(void *)(v48 + 24) = v47;
  uint64_t v49 = swift_retain();
  uint64_t v50 = sub_1001342A0(v49, sub_10006AF58, v48);
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v71 = sub_100597050(v64, v68);
  swift_release();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  uint64_t result = swift_bridgeObjectRelease_n();
  *a7 = v54;
  a7[1] = v62;
  a7[2] = v58;
  a7[3] = v60;
  a7[4] = v52;
  a7[5] = v61;
  a7[6] = v55;
  a7[7] = v46;
  a7[8] = v50;
  a7[9] = a5;
  a7[10] = a6;
  a7[11] = v71;
  return result;
}

uint64_t sub_100117ED8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, char a4@<W4>, uint64_t (*a5)(void)@<X5>, void (*a6)(uint64_t, uint64_t)@<X6>, void (*a7)(uint64_t, uint64_t *)@<X7>, uint64_t a8@<X8>)
{
  if (!*(void *)(a3 + 16)) {
    goto LABEL_37;
  }
  uint64_t result = a5();
  if ((v15 & 1) == 0) {
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(*(void *)(a3 + 56) + 8 * result);
  if (a4)
  {
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t result = swift_retain();
    uint64_t v18 = 0;
    if (Strong)
    {
      uint64_t v19 = a1;
      do
      {
        BOOL v20 = __OFADD__(v18++, 1);
        if (v20)
        {
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          goto LABEL_52;
        }
        uint64_t v21 = Strong;
        swift_beginAccess();
        unint64_t v22 = *(void *)(Strong + 64);
        if (v22 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t result = _CocoaArrayWrapper.endIndex.getter();
          uint64_t v23 = result;
          if (!result)
          {
LABEL_6:
            swift_release();
            swift_bridgeObjectRelease();
            goto LABEL_7;
          }
        }
        else
        {
          uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_retain();
          uint64_t result = swift_bridgeObjectRetain();
          if (!v23) {
            goto LABEL_6;
          }
        }
        if ((v22 & 0xC000000000000001) != 0)
        {
          uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v24 = result;
          if (result != v19) {
            goto LABEL_14;
          }
        }
        else
        {
          if (!*(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_50;
          }
          uint64_t v24 = *(void *)(v22 + 32);
          uint64_t result = swift_retain();
          if (v24 != v19)
          {
LABEL_14:
            uint64_t v25 = 0;
            uint64_t v26 = v23 - 1;
            while (1)
            {
              uint64_t v27 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                break;
              }
              if (*(unsigned char *)(v24 + 48))
              {
                uint64_t v42 = 0;
                a7(v24, &v42);
                uint64_t v28 = v42;
                *(void *)(v24 + 40) = v42;
                *(unsigned char *)(v24 + 48) = 0;
              }
              else
              {
                uint64_t v28 = *(void *)(v24 + 40);
              }
              uint64_t result = swift_release();
              BOOL v20 = __OFADD__(v27, v28);
              uint64_t v18 = v27 + v28;
              if (v20) {
                goto LABEL_46;
              }
              if (v26 == v25) {
                goto LABEL_6;
              }
              unint64_t v29 = v25 + 1;
              if ((v22 & 0xC000000000000001) != 0)
              {
                uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
                uint64_t v24 = result;
                if (__OFADD__(v29, 1)) {
                  goto LABEL_47;
                }
              }
              else
              {
                if (v29 >= *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                  goto LABEL_48;
                }
                uint64_t v24 = *(void *)(v22 + 8 * v25 + 40);
                uint64_t result = swift_retain();
                if (__OFADD__(v29, 1)) {
                  goto LABEL_47;
                }
              }
              ++v25;
              if (v24 == v19) {
                goto LABEL_28;
              }
            }
            __break(1u);
LABEL_46:
            __break(1u);
LABEL_47:
            __break(1u);
LABEL_48:
            __break(1u);
            goto LABEL_49;
          }
        }
LABEL_28:
        swift_bridgeObjectRelease();
        swift_release_n();
LABEL_7:
        uint64_t Strong = swift_weakLoadStrong();
        uint64_t result = swift_release();
        uint64_t v19 = v21;
      }
      while (Strong);
    }
    swift_release();
    uint64_t result = v18 - 1;
    if (!__OFSUB__(v18, 1))
    {
      if (result < 0)
      {
        uint64_t v40 = type metadata accessor for IndexPath();
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(a8, 1, 1, v40);
      }
      else
      {
        IndexPath.init(row:section:)();
        uint64_t v39 = type metadata accessor for IndexPath();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(a8, 0, 1, v39);
      }
    }
LABEL_53:
    __break(1u);
    return result;
  }
  if ((v16 & 0x8000000000000000) != 0) {
    goto LABEL_51;
  }
  if (v16 >= *(void *)(a2 + 16))
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  swift_retain();
  uint64_t v30 = swift_bridgeObjectRetain();
  a6(v30, a1);
  char v32 = v31;
  swift_bridgeObjectRelease();
  swift_release();
  if ((v32 & 1) == 0)
  {
    IndexPath.init(row:section:)();
    uint64_t v33 = type metadata accessor for IndexPath();
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    uint64_t v35 = v33;
    uint64_t v36 = a8;
    uint64_t v37 = 0;
  }
  else
  {
LABEL_37:
    uint64_t v38 = type metadata accessor for IndexPath();
    uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
    uint64_t v35 = v38;
    uint64_t v36 = a8;
    uint64_t v37 = 1;
  }

  return v34(v36, v37, 1, v35);
}

uint64_t sub_1001182F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(uint64_t)@<X2>, void (*a4)(uint64_t, uint64_t)@<X3>, void (*a5)(uint64_t, uint64_t *)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v92 = a5;
  uint64_t v86 = a4;
  uint64_t v8 = v6;
  uint64_t v11 = *a2;
  uint64_t v12 = a2[2];
  int v13 = *((unsigned __int8 *)a2 + 24);
  uint64_t v81 = a2[4];
  uint64_t v83 = a2[6];
  int v82 = *((unsigned __int8 *)a2 + 56);
  uint64_t v14 = sub_10003B754(&qword_10078E8F0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v84 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v89 = (char *)v75 - v17;
  uint64_t v88 = type metadata accessor for IndexPath();
  uint64_t v90 = *(void *)(v88 - 8);
  uint64_t v18 = __chkstk_darwin(v88);
  uint64_t v80 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  long long v85 = (char *)v75 - v20;
  if (!*(void *)(v12 + 16) || (uint64_t result = a3(a1), (v22 & 1) == 0))
  {
    uint64_t v36 = v89;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v89, 1, 1, v88);
    goto LABEL_35;
  }
  unint64_t v23 = *(void *)(*(void *)(v12 + 56) + 8 * result);
  if (!v13)
  {
    if ((v23 & 0x8000000000000000) != 0)
    {
LABEL_107:
      __break(1u);
    }
    else
    {
      uint64_t v43 = v90;
      if (v23 < *(void *)(v11 + 16))
      {
        swift_retain();
        uint64_t v44 = swift_bridgeObjectRetain();
        v86(v44, a1);
        char v46 = v45;
        swift_bridgeObjectRelease();
        swift_release();
        if ((v46 & 1) == 0)
        {
          uint64_t v47 = v89;
          IndexPath.init(row:section:)();
          uint64_t v48 = *(char **)(v43 + 56);
          uint64_t v49 = v88;
          ((void (*)(char *, void, uint64_t, uint64_t))v48)(v47, 0, 1, v88);
          goto LABEL_47;
        }
        uint64_t v36 = v89;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v89, 1, 1, v88);
LABEL_35:
        uint64_t v37 = (uint64_t)v36;
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_109:
    __break(1u);
LABEL_110:
    __break(1u);
    goto LABEL_111;
  }
  uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 + 56) + 8 * result);
  uint64_t v78 = a6;
  uint64_t v79 = v6;
  uint64_t Strong = swift_weakLoadStrong();
  swift_retain();
  uint64_t v77 = a1;
  uint64_t v25 = 0;
  if (Strong)
  {
    a6 = a1;
    uint64_t v87 = a3;
    do
    {
      BOOL v26 = __OFADD__(v25++, 1);
      if (v26) {
        goto LABEL_99;
      }
      uint64_t v27 = Strong;
      swift_beginAccess();
      unint64_t v28 = *(void *)(Strong + 64);
      if (v28 >> 62)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
        if (!v29)
        {
LABEL_6:
          swift_release();
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_retain();
        swift_bridgeObjectRetain();
        if (!v29) {
          goto LABEL_6;
        }
      }
      if ((v28 & 0xC000000000000001) != 0)
      {
        uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        if (v30 != a6) {
          goto LABEL_14;
        }
      }
      else
      {
        if (!*(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_100;
        }
        uint64_t v30 = *(void *)(v28 + 32);
        swift_retain();
        if (v30 != a6)
        {
LABEL_14:
          uint64_t v31 = 0;
          uint64_t v91 = v28 & 0xFFFFFFFFFFFFFF8;
          uint64_t v32 = v29 - 1;
          while (1)
          {
            BOOL v26 = __OFADD__(v25, 1);
            uint64_t v33 = v25 + 1;
            if (v26) {
              break;
            }
            if (*(unsigned char *)(v30 + 48))
            {
              v93[0] = 0;
              v92(v30, v93);
              uint64_t v34 = v93[0];
              *(void *)(v30 + 40) = v93[0];
              *(unsigned char *)(v30 + 48) = 0;
            }
            else
            {
              uint64_t v34 = *(void *)(v30 + 40);
            }
            swift_release();
            BOOL v26 = __OFADD__(v33, v34);
            uint64_t v25 = v33 + v34;
            if (v26) {
              goto LABEL_96;
            }
            if (v32 == v31)
            {
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_33;
            }
            unint64_t v35 = v31 + 1;
            if ((v28 & 0xC000000000000001) != 0)
            {
              uint64_t v30 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              if (__OFADD__(v35, 1)) {
                goto LABEL_97;
              }
            }
            else
            {
              if (v35 >= *(void *)(v91 + 16)) {
                goto LABEL_98;
              }
              uint64_t v30 = *(void *)(v28 + 8 * v31 + 40);
              swift_retain();
              if (__OFADD__(v35, 1)) {
                goto LABEL_97;
              }
            }
            ++v31;
            if (v30 == a6) {
              goto LABEL_32;
            }
          }
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
LABEL_99:
          __break(1u);
LABEL_100:
          __break(1u);
          goto LABEL_101;
        }
      }
LABEL_32:
      swift_bridgeObjectRelease();
      swift_release_n();
LABEL_33:
      a3 = v87;
LABEL_7:
      uint64_t Strong = swift_weakLoadStrong();
      swift_release();
      a6 = v27;
    }
    while (Strong);
  }
  swift_release();
  uint64_t result = v25 - 1;
  if (__OFSUB__(v25, 1)) {
    goto LABEL_109;
  }
  a6 = v78;
  uint64_t v8 = v79;
  uint64_t v49 = v88;
  uint64_t v47 = v89;
  uint64_t v43 = v90;
  a1 = v77;
  if (result < 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v90 + 56))(v89, 1, 1, v88);
    uint64_t v37 = (uint64_t)v47;
    goto LABEL_36;
  }
  IndexPath.init(row:section:)();
  uint64_t v48 = *(char **)(v43 + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v48)(v47, 0, 1, v49);
LABEL_47:
  uint64_t v76 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48);
  if (v76(v47, 1, v49) == 1)
  {
    uint64_t v37 = (uint64_t)v47;
    goto LABEL_36;
  }
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
  v75[1] = v43 + 32;
  v75[0] = v50;
  v50(v85, v89, v49);
  uint64_t v51 = v83;
  if (!*(void *)(v83 + 16)) {
    goto LABEL_88;
  }
  uint64_t v89 = v48;
  uint64_t result = a3(a1);
  if ((v52 & 1) == 0) {
    goto LABEL_87;
  }
  unint64_t v53 = *(void *)(*(void *)(v51 + 56) + 8 * result);
  if (!v82)
  {
    if ((v53 & 0x8000000000000000) == 0)
    {
      if (v53 < *(void *)(v81 + 16))
      {
        swift_retain();
        uint64_t v66 = swift_bridgeObjectRetain();
        v86(v66, a1);
        char v68 = v67;
        swift_bridgeObjectRelease();
        swift_release();
        if ((v68 & 1) == 0)
        {
          uint64_t v69 = v84;
          IndexPath.init(row:section:)();
          ((void (*)(char *, void, uint64_t, uint64_t))v89)(v69, 0, 1, v49);
          char v70 = v69;
          uint64_t v43 = v90;
          goto LABEL_93;
        }
LABEL_87:
        uint64_t v48 = v89;
        goto LABEL_88;
      }
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
LABEL_111:
    __break(1u);
    goto LABEL_112;
  }
  uint64_t v87 = *(uint64_t (**)(uint64_t))(*(void *)(v51 + 56) + 8 * result);
  uint64_t v54 = swift_weakLoadStrong();
  uint64_t result = swift_retain();
  uint64_t v55 = 0;
  if (!v54)
  {
LABEL_90:
    swift_release();
    uint64_t result = v55 - 1;
    if (!__OFSUB__(v55, 1))
    {
      uint64_t v49 = v88;
      uint64_t v48 = v89;
      if ((result & 0x8000000000000000) == 0)
      {
        uint64_t v71 = v84;
        IndexPath.init(row:section:)();
        ((void (*)(char *, void, uint64_t, uint64_t))v48)(v71, 0, 1, v49);
        char v70 = v71;
LABEL_93:
        if (v76(v70, 1, v49) != 1)
        {
          uint64_t v72 = v80;
          char v73 = (void (*)(uint64_t, char *, uint64_t))v75[0];
          ((void (*)(char *, char *, uint64_t))v75[0])(v80, v84, v49);
          v73(a6, v85, v49);
          uint64_t v74 = sub_10003B754(&qword_100787558);
          v73(a6 + *(int *)(v74 + 36), v72, v49);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(a6, 0, 1, v74);
        }
        goto LABEL_89;
      }
LABEL_88:
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v48)(v84, 1, 1, v49);
LABEL_89:
      (*(void (**)(char *, uint64_t))(v43 + 8))(v85, v49);
      uint64_t v37 = (uint64_t)v84;
LABEL_36:
      sub_10003B6F8(v37, &qword_10078E8F0);
      if (qword_1007851B0 != -1) {
        goto LABEL_104;
      }
      goto LABEL_37;
    }
LABEL_113:
    __break(1u);
    return result;
  }
  uint64_t v56 = a1;
  uint64_t v78 = a6;
  while (1)
  {
    BOOL v26 = __OFADD__(v55++, 1);
    if (v26)
    {
LABEL_106:
      __break(1u);
      goto LABEL_107;
    }
    uint64_t v57 = v54;
    swift_beginAccess();
    unint64_t v58 = *(void *)(v54 + 64);
    if (v58 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v59 = result;
      if (!result)
      {
LABEL_79:
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_55;
      }
    }
    else
    {
      uint64_t v59 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      uint64_t result = swift_bridgeObjectRetain();
      if (!v59) {
        goto LABEL_79;
      }
    }
    uint64_t v60 = v57;
    if ((v58 & 0xC000000000000001) != 0)
    {
      uint64_t v61 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_110;
      }
      uint64_t v61 = *(void *)(v58 + 32);
      swift_retain();
    }
    uint64_t v79 = v8;
    if (v61 != v56) {
      break;
    }
LABEL_54:
    swift_bridgeObjectRelease();
    swift_release_n();
    a6 = v78;
    uint64_t v8 = v79;
    uint64_t v43 = v90;
    uint64_t v57 = v60;
LABEL_55:
    uint64_t v54 = swift_weakLoadStrong();
    uint64_t result = swift_release();
    uint64_t v56 = v57;
    if (!v54) {
      goto LABEL_90;
    }
  }
  uint64_t v62 = 0;
  uint64_t v91 = v58 & 0xFFFFFFFFFFFFFF8;
  a6 = v59 - 1;
  while (1)
  {
    BOOL v26 = __OFADD__(v55, 1);
    uint64_t v63 = v55 + 1;
    if (v26) {
      break;
    }
    if (*(unsigned char *)(v61 + 48))
    {
      uint64_t v94 = 0;
      v92(v61, &v94);
      uint64_t v64 = v94;
      *(void *)(v61 + 40) = v94;
      *(unsigned char *)(v61 + 48) = 0;
    }
    else
    {
      uint64_t v64 = *(void *)(v61 + 40);
    }
    uint64_t result = swift_release();
    BOOL v26 = __OFADD__(v63, v64);
    uint64_t v55 = v63 + v64;
    if (v26) {
      goto LABEL_102;
    }
    if (a6 == v62)
    {
      uint64_t v57 = v60;
      swift_release();
      swift_bridgeObjectRelease();
      a6 = v78;
      uint64_t v8 = v79;
      uint64_t v43 = v90;
      goto LABEL_55;
    }
    unint64_t v65 = v62 + 1;
    if ((v58 & 0xC000000000000001) != 0)
    {
      uint64_t v61 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      if (__OFADD__(v65, 1)) {
        goto LABEL_103;
      }
    }
    else
    {
      if (v65 >= *(void *)(v91 + 16))
      {
        __break(1u);
        goto LABEL_106;
      }
      uint64_t v61 = *(void *)(v58 + 8 * v62 + 40);
      swift_retain();
      if (__OFADD__(v65, 1)) {
        goto LABEL_103;
      }
    }
    ++v62;
    if (v61 == v56) {
      goto LABEL_54;
    }
  }
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  swift_once();
LABEL_37:
  uint64_t v38 = type metadata accessor for Logger();
  sub_100018BF8(v38, (uint64_t)qword_1007874B0);
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "Cannot lookup from, to for moved cell", v41, 2u);
    swift_slowDealloc();
  }

  uint64_t v42 = sub_10003B754(&qword_100787558);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(a6, 1, 1, v42);
}

BOOL sub_100118E18()
{
  if ((*v0 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter()) {
      return 0;
    }
  }
  else if (*(void *)(*v0 + 16))
  {
    return 0;
  }
  uint64_t v1 = v0[1];
  if ((v1 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter()) {
      return 0;
    }
  }
  else if (*(void *)(v1 + 16))
  {
    return 0;
  }
  uint64_t v2 = v0[2];
  if ((v2 & 0xC000000000000001) == 0)
  {
    if (!*(void *)(v2 + 16)) {
      goto LABEL_13;
    }
    return 0;
  }
  if (__CocoaSet.count.getter()) {
    return 0;
  }
LABEL_13:
  uint64_t v3 = v0[3];
  if ((v3 & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter()) {
      return 0;
    }
  }
  else if (*(void *)(v3 + 16))
  {
    return 0;
  }
  uint64_t v5 = v0[4];
  if ((v5 & 0xC000000000000001) != 0) {
    uint64_t v6 = __CocoaSet.count.getter();
  }
  else {
    uint64_t v6 = *(void *)(v5 + 16);
  }
  return v6 == 0;
}

uint64_t sub_100118F10@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a1;
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v27 = a5;
  uint64_t v28 = v10;
  uint64_t v11 = ((uint64_t (*)(void))__chkstk_darwin)();
  int v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 + 16);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v11);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v22 + 16))(v21, v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, 1, 1, a4);
  }
  uint64_t v25 = v28;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v21, v15);
  v30(v19, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  if (v6) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v25 + 32))(v27, v13, a3);
  }
  return result;
}

uint64_t sub_1001191BC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(uint64_t *, uint64_t))
{
  uint64_t v6 = a2[6];
  if (!*(void *)(v6 + 16)) {
    return 0;
  }
  uint64_t v18 = *a2;
  uint64_t v11 = a2[2];
  uint64_t v12 = a2[4];
  uint64_t result = a5();
  if ((v14 & 1) == 0) {
    return 0;
  }
  unint64_t v15 = *(void *)(*(void *)(v6 + 56) + 8 * result);
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v15 >= *(void *)(v12 + 16))
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(void *)(v12 + 16 * v15 + 32) != a3) {
    return 0;
  }
  if (!*(void *)(v11 + 16)) {
    goto LABEL_12;
  }
  uint64_t result = ((uint64_t (*)(uint64_t))a5)(a1);
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
  unint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * result);
  if ((v17 & 0x8000000000000000) != 0) {
    goto LABEL_15;
  }
  if (v17 < *(void *)(v18 + 16))
  {
    if (*(void *)(v18 + 16 * v17 + 32) == a3) {
      return 0;
    }
LABEL_12:
    swift_retain();
    a6(&v19, a1);
    swift_release();
    return 1;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1001192F4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4 = a2[2];
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  uint64_t v6 = *a2;
  uint64_t result = a4();
  if ((v8 & 1) == 0) {
    return 0;
  }
  unint64_t v9 = *(void *)(*(void *)(v4 + 56) + 8 * result);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)(v6 + 16))
  {
    return *(void *)(v6 + 16 * v9 + 32) == a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100119378(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), void (*a6)(uint64_t *, uint64_t))
{
  uint64_t v6 = a2[6];
  if (!*(void *)(v6 + 16)) {
    return 0;
  }
  uint64_t v18 = *a2;
  uint64_t v11 = a2[2];
  uint64_t v12 = a2[4];
  uint64_t result = a5();
  if ((v14 & 1) == 0) {
    return 0;
  }
  unint64_t v15 = *(void *)(*(void *)(v6 + 56) + 8 * result);
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v15 >= *(void *)(v12 + 16))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(void *)(v12 + 16 * v15 + 32) != a3) {
    return 0;
  }
  if (!*(void *)(v11 + 16)) {
    goto LABEL_12;
  }
  uint64_t result = ((uint64_t (*)(uint64_t))a5)(a1);
  if ((v16 & 1) == 0) {
    goto LABEL_12;
  }
  unint64_t v17 = *(void *)(*(void *)(v11 + 56) + 8 * result);
  if ((v17 & 0x8000000000000000) != 0) {
    goto LABEL_16;
  }
  if (v17 < *(void *)(v18 + 16))
  {
    if (*(void *)(v18 + 16 * v17 + 32) == a3) {
      return 1;
    }
LABEL_12:
    swift_retain();
    a6(&v19, a1);
    swift_release();
    return 1;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_1001194B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4 = *(void *)(a2 + 48);
  if (!*(void *)(v4 + 16)) {
    return 0;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t result = a4();
  if ((v8 & 1) == 0) {
    return 0;
  }
  unint64_t v9 = *(void *)(*(void *)(v4 + 56) + 8 * result);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)(v6 + 16))
  {
    return *(void *)(v6 + 16 * v9 + 32) == a3;
  }
  __break(1u);
  return result;
}

uint64_t sub_100119534(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (sub_100456D80(a1, *a4) & 1) != 0 || (sub_100456D80(a1, a4[1])) {
    char v6 = 0;
  }
  else {
    char v6 = sub_100456D80(a1, a4[3]) ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_100119590(uint64_t a1, uint64_t a2, unsigned __int8 a3, uint64_t (*a4)(void))
{
  if (*(void *)(a2 + 16)
    && (uint64_t v6 = a4(), (v7 & 1) != 0)
    && (uint64_t v8 = *(void *)(*(void *)(a2 + 56) + 16 * v6), *(void *)(v8 + 16))
    && (unint64_t v9 = sub_10035C28C(a3), (v10 & 1) != 0))
  {
    return *(void *)(*(void *)(v8 + 56) + 8 * v9);
  }
  else
  {
    return 100;
  }
}

uint64_t sub_1001195F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_10011964C@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v59 = a3;
  uint64_t v56 = a4;
  int v57 = a2 & 1;
  uint64_t v5 = *(void *)((swift_isaMask & *v4) + 0x50);
  uint64_t v6 = type metadata accessor for Optional();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - v10;
  uint64_t inserted = type metadata accessor for TTRITreeViewTableAdapter.InsertDestination();
  __chkstk_darwin(inserted);
  char v14 = (char *)&v52 - v13;
  uint64_t v15 = *(void *)(v5 - 8);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v52 - v20;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v52 - v23;
  __chkstk_darwin(v25);
  unint64_t v53 = (char *)&v52 - v26;
  sub_10012C128(v58, v57, v59, v14);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v28 = v15;
      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
      uint64_t v30 = v18;
      v29(v18, v14, v5);
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v8, v18, v5);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v5);
      uint64_t v31 = sub_100120448((uint64_t)v8);
      char v33 = v32;
      (*(void (**)(char *, uint64_t))(v54 + 8))(v8, v55);
      if ((v33 & 1) == 0)
      {
        uint64_t v34 = v53;
        v29(v53, v30, v5);
LABEL_14:
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v44 = *(int *)(TupleTypeMetadata2 + 48);
        char v45 = v56;
        v29(v56, v34, v5);
        *(void *)&v45[v44] = v31;
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v45, 0, 1, TupleTypeMetadata2);
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v36 = type metadata accessor for Logger();
      sub_100018BF8(v36, (uint64_t)qword_10078DE60);
      uint64_t v37 = Logger.logObject.getter();
      os_log_type_t v38 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v37, v38))
      {
        uint64_t v39 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v39 = 0;
        _os_log_impl((void *)&_mh_execute_header, v37, v38, "Missing parent child count", v39, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v5);
    }
  }
  else
  {
    uint64_t v35 = v15;
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
    v29(v24, v14, v5);
    sub_10011F99C((uint64_t)v24, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v11, 1, v5) == 1)
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v55);
    }
    else
    {
      v29(v21, v11, v5);
      uint64_t v40 = sub_10011FB80((uint64_t)v24);
      uint64_t v41 = *(void (**)(char *, uint64_t))(v35 + 8);
      if ((v42 & 1) == 0)
      {
        uint64_t v31 = v40;
        v41(v24, v5);
        uint64_t v34 = v53;
        v29(v53, v21, v5);
        goto LABEL_14;
      }
      v41(v21, v5);
    }
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_100018BF8(v47, (uint64_t)qword_10078DE60);
    uint64_t v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Missing parent/childIndex", v50, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v5);
  }
  uint64_t v51 = swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v56, 1, 1, v51);
}

uint64_t sub_100119CD0()
{
  return swift_unknownObjectUnownedLoadStrong();
}

unint64_t sub_100119CE0(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  if (result == a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(*(void *)v2 + 16) > result)
    {
      uint64_t v4 = *(void *)(*(void *)v2 + 16 * result + 32);
      swift_retain();
      swift_bridgeObjectRetain();
      return v4;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = sub_1003C086C(result);
  if (*(void *)(*(void *)v2 + 16) < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (a2 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = result;
  uint64_t v7 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10054D1DC(a2, a2, v4, v7);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  if (v3 < a2)
  {
    uint64_t v8 = v3 + 1;
    uint64_t v9 = -1;
    uint64_t v10 = a2;
LABEL_11:
    sub_10008757C(v8, v10, v9);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066D470;
    *(void *)(inited + 32) = v4;
    unint64_t v13 = inited;
    specialized Array._endMutation()();
    swift_retain();
    sub_100087C30(v13, a2);
    swift_bridgeObjectRelease();
    unint64_t v12 = swift_bridgeObjectRetain();
    sub_100087C30(v12, a2);
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v10 = v3 - 1;
  if (v3 - 1 >= a2)
  {
    uint64_t v9 = 1;
    uint64_t v8 = a2;
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
  return result;
}

unint64_t sub_100119E70(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  if (result == a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(*(void *)v2 + 16) > result)
    {
      uint64_t v4 = *(void *)(*(void *)v2 + 16 * result + 32);
      swift_retain();
      swift_bridgeObjectRetain();
      return v4;
    }
    __break(1u);
    goto LABEL_15;
  }
  uint64_t result = sub_1003C0A68(result);
  if (*(void *)(*(void *)v2 + 16) < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (a2 < 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v4 = result;
  uint64_t v7 = v6;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = (unint64_t)sub_10054C2F8(a2, a2, v4, v7);
  if (v3 < a2)
  {
    uint64_t v8 = v3 + 1;
    uint64_t v9 = -1;
    uint64_t v10 = a2;
LABEL_11:
    sub_1000878BC(v8, v10, v9);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066D470;
    *(void *)(inited + 32) = v4;
    unint64_t v13 = inited;
    specialized Array._endMutation()();
    swift_retain();
    sub_1000882D0(v13, a2);
    swift_bridgeObjectRelease();
    unint64_t v12 = swift_bridgeObjectRetain();
    sub_1000882D0(v12, a2);
    swift_bridgeObjectRelease();
    return v4;
  }
  uint64_t v10 = v3 - 1;
  if (v3 - 1 >= a2)
  {
    uint64_t v9 = 1;
    uint64_t v8 = a2;
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
  return result;
}

uint64_t sub_100119FF0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078DE60);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078DE60);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  int64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10011A0B8(uint64_t a1, void *a2, uint64_t (*a3)(void *), SEL *a4)
{
  uint64_t v7 = v4;
  *(void *)(v7 + *a2) = a1;
  swift_retain();
  swift_release();
  uint64_t v9 = *(void **)(v7 + qword_10078DEA0);
  if (a1)
  {
    swift_retain();
    char v10 = a3(v9);
    swift_release();
    if (v10) {
      uint64_t v11 = v7;
    }
    else {
      uint64_t v11 = 0;
    }
  }
  else
  {
    id v12 = v9;
    uint64_t v11 = 0;
  }
  [v9 *a4:v11];

  return swift_release();
}

id sub_10011A174(uint64_t *a1, uint64_t a2, const char **a3)
{
  uint64_t v5 = *a1;
  if (*(void *)(v3 + *a1))
  {
    swift_unknownObjectWeakAssign();
    uint64_t v6 = *(void *)(v3 + v5);
  }
  else
  {
    uint64_t v6 = 0;
  }
  uint64_t v7 = *(void **)(v3 + qword_10078DEA0);
  uint64_t v8 = *a3;

  return [v7 v8:v6];
}

uint64_t sub_10011A1E4(uint64_t a1, char a2)
{
  uint64_t v4 = (uint64_t *)(v2 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v5 = v4[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  *uint64_t v4 = sub_10044A5B0(v6);
  v4[1] = v7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4[1] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a2)
  {
    *(unsigned char *)(v2 + qword_10078DEF8) = 0;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_bridgeObjectRetain();
    Set.subtracting(_:)();
    uint64_t v8 = Set.subtracting(_:)();
    Set.subtracting(_:)();
    uint64_t v9 = Set.subtracting(_:)();
    uint64_t v10 = swift_bridgeObjectRelease();
    __chkstk_darwin(v10);
    long long v12[2] = v8;
    v12[3] = v2;
    v12[4] = v9;
    char v14 = sub_100140090;
    uint64_t v15 = v12;
    sub_10011B0C0((void (*)(uint64_t))sub_10003F248, (uint64_t)v13, 0, 0, 0, 0);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v2 + qword_10078DEF8) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10011A444()
{
  uint64_t v1 = v0;
  uint64_t v2 = swift_isaMask & *v0;
  swift_retain();
  TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter();
  swift_release();
  uint64_t v3 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = *(void *)(v2 + 80);
  v4[3] = *(void *)(v2 + 88);
  v4[4] = v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Set();
  type metadata accessor for AnyPublisher();
  swift_getWitnessTable();
  uint64_t v5 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  *(void *)((char *)v1 + qword_10078DF00) = v5;
  return swift_release();
}

id sub_10011A61C(void *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_10011A660(a1, a2);
}

id sub_10011A660(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[qword_10078DE78] = 0;
  *(void *)&v2[qword_10078DE80] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = qword_10078DE90;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for TTRAnyTreeViewCollapsedStatesPersisting();
  type metadata accessor for TTRTreeViewCollapsedStatesInMemoryPersistence();
  uint64_t v7 = v2;
  uint64_t v18 = TTRTreeViewCollapsedStatesInMemoryPersistence.__allocating_init()();
  swift_getWitnessTable();
  *(void *)&v2[v6] = TTRAnyTreeViewCollapsedStatesPersisting.__allocating_init<A>(base:)();
  *(void *)&v7[qword_10078DEB0] = 0;
  *(void *)&v7[qword_10078DEB8] = 0;
  *(void *)&v7[qword_10078DEC0] = 0;
  *(void *)&v7[qword_10078DEC8] = 0;
  uint64_t v8 = &v7[qword_10078DED0];
  *((void *)v8 + 1) = 0;
  *((void *)v8 + 2) = 0;
  *(void *)uint64_t v8 = 0;
  v8[24] = 0;
  v7[qword_10078DED8] = 0;
  *(void *)&v7[qword_10078DEE0] = 0;
  uint64_t v9 = (void **)&v7[qword_10078DEE8];
  *uint64_t v9 = sub_10044A4E4();
  v9[1] = v10;
  uint64_t v11 = qword_10078DEF0;
  *(void *)&v7[v11] = sub_1003F7E4C();
  v7[qword_10078DEF8] = 1;
  *(void *)&v7[qword_10078DF00] = 0;
  uint64_t v12 = qword_10078DF08;
  type metadata accessor for TTRListContentsPrefetchExtender();
  swift_allocObject();
  *(void *)&v7[v12] = TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)();
  swift_unknownObjectUnownedInit();
  *(void *)&v7[qword_10078DEA0] = a2;
  unint64_t v13 = &v7[qword_10078DEA8];
  *((void *)v13 + 3) = sub_1000368FC(0, (unint64_t *)&qword_10078E3B0);
  *((void *)v13 + 4) = &off_100754710;
  *(void *)unint64_t v13 = a2;
  id v14 = a2;

  v17.receiver = v7;
  v17.super_class = ObjectType;
  [super init];
  sub_10011A444();

  return v15;
}

id sub_10011A950()
{
  sub_1001346B0(0);
  *(void *)(v0 + qword_10078DEB8) = 0;
  swift_release();
  sub_10011A0B8(0, &qword_10078DEC0, (uint64_t (*)(void *))sub_1002ABEC0, (SEL *)&selRef_setPrefetchDataSource_);
  sub_10011A0B8(0, &qword_10078DEC8, (uint64_t (*)(void *))sub_100032A20, (SEL *)&selRef_setDelegate_);
  sub_100134774(0, &qword_10078DE78, (uint64_t)&qword_1007A38B8, (const char **)&selRef_setDragDelegate_);
  return sub_100134774(0, &qword_10078DE80, (uint64_t)&qword_10079BDA8, (const char **)&selRef_setDropDelegate_);
}

uint64_t sub_10011AA18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for TTRITreeViewNodeReuseQueue();
  uint64_t v9 = sub_100034A30();
  uint64_t v10 = sub_100033558(a3, v9);
  swift_release();
  uint64_t v11 = sub_10020A650(v10);
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(a2 + qword_10078DEF8) == 1)
  {
    swift_beginAccess();
    type metadata accessor for TTRITreeViewCollapsedStates();
    sub_100449FFC(a3);
    swift_endAccess();
  }
  uint64_t v12 = type metadata accessor for TTRITreeViewSectionsMetadata();
  sub_1000EB300(v11, a4, v12);
  sub_100066020(a3, 4, 0, 1);
  v16[0] = v11;
  type metadata accessor for TTRITreeViewNode();
  uint64_t v13 = type metadata accessor for Array();
  swift_getWitnessTable();
  sub_1000663B8((uint64_t)v16, 0, a6, 0, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_10011ABFC(void (*a1)(long long *))
{
  *(void *)&long long v12 = sub_100032E7C();
  *((void *)&v12 + 1) = v3;
  uint64_t v13 = v4;
  char v14 = v5 & 1;
  uint64_t v6 = qword_10078DED8;
  *(unsigned char *)(v1 + qword_10078DED8) = 1;
  a1(&v12);
  uint64_t v7 = v13;
  char v8 = v14;
  uint64_t v9 = v1 + qword_10078DED0;
  uint64_t v10 = *(void *)(v1 + qword_10078DED0);
  *(_OWORD *)uint64_t v9 = v12;
  *(void *)(v9 + 16) = v7;
  *(unsigned char *)(v9 + 24) = v8;
  uint64_t result = sub_1000349CC(v10);
  *(unsigned char *)(v1 + v6) = 0;
  return result;
}

uint64_t sub_10011ACA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_10020A8E0(a1);
  if (*(unsigned char *)(a3 + qword_10078DEF8) == 1)
  {
    swift_beginAccess();
    type metadata accessor for TTRITreeViewCollapsedStates();
    sub_100449FFC(a2);
    uint64_t v5 = swift_endAccess();
  }
  __chkstk_darwin(v5);
  return sub_10011ABFC((void (*)(long long *))sub_10013FFA8);
}

uint64_t sub_10011ADC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for TTRITreeViewSectionsMetadata();
  uint64_t v11 = sub_1000EB480(a2, a3, v10);
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  sub_100066020(a5, 4, 0, 1);
  v20[0] = v11;
  v20[1] = v13;
  v20[2] = v15;
  _OWORD v20[3] = v17;
  type metadata accessor for TTRITreeViewNode();
  uint64_t v18 = type metadata accessor for ArraySlice();
  swift_getWitnessTable();
  sub_1000663B8((uint64_t)v20, 1, a6, 0, v18);
  return swift_unknownObjectRelease();
}

BOOL sub_10011AF08(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = sub_100032E7C();
  uint64_t v8 = sub_1000EBBA0(a1, v4, v6, v7, v5 & 1, *(void *)(v3 + 80), *(void *)(v3 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8) {
    return 1;
  }
  int v9 = *(unsigned __int8 *)(v8 + 72);
  swift_release();
  return v9 != 0;
}

BOOL sub_10011AFD8(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = sub_100032E7C();
  uint64_t v8 = sub_1000EBBA0(a1, v4, v6, v7, v5 & 1, *(void *)(v3 + 80), *(void *)(v3 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  int v9 = *(unsigned __int8 *)(v8 + 72);
  swift_release();
  return v9 == 2;
}

uint64_t sub_10011B0A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012BDD0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))sub_1000EBD88, a2);
}

uint64_t sub_10011B0C0(void (*a1)(uint64_t), uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v66 = swift_isaMask & *(void *)v6;
  uint64_t v68 = qword_10078DEE0;
  uint64_t v11 = *(void *)&v6[qword_10078DEE0];
  if (!v11)
  {
    uint64_t v12 = sub_100127DB4((uint64_t)v6, a3);
    if (a5) {
      goto LABEL_3;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  uint64_t v12 = *(void *)&v6[qword_10078DEE0];
  if (!a5) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  uint64_t v14 = (char **)(v12 + 64);
  swift_beginAccess();
  uint64_t v15 = *(char **)(v12 + 64);
  swift_retain();
  sub_10006C140(a5);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v12 + 64) = v15;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v15 = sub_10056FF08(0, *((void *)v15 + 2) + 1, 1, v15);
    char *v14 = v15;
  }
  unint64_t v18 = *((void *)v15 + 2);
  unint64_t v17 = *((void *)v15 + 3);
  if (v18 >= v17 >> 1)
  {
    uint64_t v15 = sub_10056FF08((char *)(v17 > 1), v18 + 1, 1, v15);
    char *v14 = v15;
  }
  *((void *)v15 + 2) = v18 + 1;
  uint64_t v19 = &v15[16 * v18];
  *((void *)v19 + 4) = sub_1001431B0;
  *((void *)v19 + 5) = v13;
  swift_endAccess();
LABEL_10:
  a1(v12);
  if (!v11)
  {
    if (*(unsigned char *)(v12 + 72))
    {
      swift_release();
    }
    else
    {
      if (sub_100065EC0())
      {
        swift_beginAccess();
        uint64_t v21 = *(void *)(v66 + 80);
        uint64_t v20 = *(void *)(v66 + 88);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v22 = sub_10044A80C();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
          swift_release();
          uint64_t v23 = swift_bridgeObjectRelease();
        }
        __chkstk_darwin(v23);
        swift_beginAccess();
        uint64_t v61 = v21;
        uint64_t v63 = v20;
        type metadata accessor for TTRITreeViewSoftReloadContext();
        sub_1003F7ED0();
        swift_endAccess();
        uint64_t v24 = sub_100032E7C();
        uint64_t v26 = v25;
        uint64_t v28 = v27;
        char v30 = v29;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v32 = _typeName(_:qualified:)();
        sub_1000665F4(v24, v26, v28, v30 & 1, v32, v33, &v72);
        uint64_t v67 = v72;
        uint64_t v34 = v74;
        uint64_t v65 = v73;
        uint64_t v35 = v75;
        uint64_t v36 = v76;
        uint64_t v38 = v77;
        uint64_t v37 = v78;
        uint64_t v39 = v79;
        uint64_t v40 = v80;
        uint64_t v41 = v82;
        uint64_t v60 = v81;
        uint64_t v62 = v83;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v72 = v67;
        uint64_t v73 = v65;
        uint64_t v74 = v34;
        uint64_t v75 = v35;
        uint64_t v76 = v36;
        uint64_t v77 = v38;
        uint64_t v78 = v37;
        uint64_t v79 = v39;
        uint64_t v80 = v40;
        uint64_t v81 = v60;
        uint64_t v82 = v41;
        if (sub_1000329D0(&qword_10078DEB8, (uint64_t (*)(uint64_t))sub_1002ABEC0))
        {
          swift_release();
          uint64_t v42 = swift_allocObject();
          *(void *)(v42 + 16) = v7;
          *(void *)(v42 + 24) = v12;
          uint64_t v43 = v42;
          uint64_t v44 = v7;
          swift_retain();
          char v45 = sub_10013F86C;
        }
        else
        {
          char v45 = 0;
          uint64_t v43 = 0;
        }
        uint64_t v49 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v50 = (void *)swift_allocObject();
        v50[2] = v61;
        v50[3] = v63;
        v50[4] = v49;
        uint64_t v64 = (uint64_t)&v7[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v7[qword_10078DEA8], (uint64_t)v69);
        uint64_t v52 = v70;
        uint64_t v51 = v71;
        sub_100038D28(v69, v70);
        unint64_t v53 = *(void (**)(uint64_t *, uint64_t (*)(), void *, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v51 + 32);
        swift_retain();
        v53(&v72, sub_10013F85C, v50, v45, v43, sub_10013C070, v12, v52, v51);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v69);
        uint64_t v54 = *(void *)(v12 + 16);
        uint64_t v55 = *(void *)(v12 + 24);
        uint64_t v56 = *(void *)(v12 + 32);
        LOBYTE(v49) = *(unsigned char *)(v12 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100129A5C(v62, v54, v55, v56, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v64, (uint64_t)v69);
        uint64_t v57 = v70;
        uint64_t v58 = v71;
        sub_100038D28(v69, v70);
        (*(void (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);
        swift_release();
        sub_1000499C4((uint64_t)v45);
        swift_release();
        uint64_t v48 = v69;
      }
      else
      {
        sub_1000145EC((uint64_t)&v6[qword_10078DEA8], (uint64_t)&v72);
        uint64_t v46 = v75;
        uint64_t v47 = v76;
        sub_100038D28(&v72, v75);
        (*(void (**)(uint64_t, uint64_t))(v47 + 24))(v46, v47);
        swift_release();
        uint64_t v48 = &v72;
      }
      sub_100038CD8((uint64_t)v48);
    }
    *(void *)&v7[v68] = 0;
  }
  return swift_release();
}

uint64_t sub_10011B880(char *a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v46 = a3;
  uint64_t v44 = swift_isaMask & *(void *)v4;
  uint64_t v7 = v44;
  uint64_t v8 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for IndexPath();
  uint64_t v42 = *(void *)(v11 - 8);
  uint64_t v43 = v11;
  __chkstk_darwin(v11);
  uint64_t v41 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v7 + 80);
  uint64_t v14 = type metadata accessor for Optional();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  unint64_t v18 = (char *)&v41 - v17;
  uint64_t v19 = *(void *)(v13 - 8);
  __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v41 - v20;
  char v45 = a1;
  uint64_t result = IndexSet.isEmpty.getter();
  if ((result & 1) == 0)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a2, v14);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v18, 1, v13) == 1)
    {
      uint64_t v23 = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
      __chkstk_darwin(v23);
      uint64_t v24 = v45;
      *(&v41 - 4) = v4;
      *(&v41 - 3) = v24;
      *(&v41 - 2) = v46;
      return sub_10011B0C0((void (*)(uint64_t))sub_10013FBFC, (uint64_t)(&v41 - 6), 0, 0, 0, 0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v18, v13);
      uint64_t v25 = sub_100032E7C();
      uint64_t v29 = sub_1000EBBA0((uint64_t)v21, v25, v27, v28, v26 & 1, v13, *(void *)(v44 + 88));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29)
      {
        uint64_t v30 = v19;
        if (*(unsigned char *)(v29 + 72) == 2)
        {
          sub_100032E7C();
          sub_1000EC2F4(v29, v31 & 1, v10);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = v42;
          uint64_t v32 = v43;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v10, 1, v43) == 1)
          {
            sub_10003B6F8((uint64_t)v10, &qword_10078E8F0);
            if (qword_1007852B8 != -1) {
              swift_once();
            }
            uint64_t v34 = type metadata accessor for Logger();
            sub_100018BF8(v34, (uint64_t)qword_10078DE60);
            uint64_t v35 = Logger.logObject.getter();
            os_log_type_t v36 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v35, v36))
            {
              uint64_t v37 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v37 = 0;
              _os_log_impl((void *)&_mh_execute_header, v35, v36, "Unable to find childrenStartIndexPath", v37, 2u);
              swift_slowDealloc();
            }
            swift_release();

            return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v21, v13);
          }
          else
          {
            uint64_t v38 = v41;
            uint64_t v39 = (*(uint64_t (**)(char *, char *, uint64_t))(v33 + 32))(v41, v10, v32);
            __chkstk_darwin(v39);
            uint64_t v40 = v45;
            *(&v41 - 6) = v4;
            *(&v41 - 5) = v40;
            *(&v41 - 4) = (char *)v29;
            *(&v41 - 3) = v38;
            *(&v41 - 2) = v46;
            sub_10011B0C0((void (*)(uint64_t))sub_10013FC54, (uint64_t)(&v41 - 8), 0, 0, 0, 0);
            (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v13);
            swift_release();
            return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v38, v32);
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v13);
          return swift_release();
        }
      }
      else
      {
        return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v13);
      }
    }
  }
  return result;
}

void (*sub_10011BE74(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7))(uint64_t *, void)
{
  uint64_t v71 = a7;
  uint64_t v70 = a6;
  uint64_t v84 = a5;
  uint64_t v75 = a4;
  uint64_t v82 = a2;
  uint64_t v69 = a1;
  uint64_t v7 = *a3;
  uint64_t v74 = a3;
  uint64_t v68 = v7;
  uint64_t v85 = type metadata accessor for IndexPath();
  uint64_t v64 = *(char ***)(v85 - 8);
  uint64_t v8 = __chkstk_darwin(v85);
  uint64_t v72 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v86 = (char *)&v63 - v10;
  uint64_t v11 = type metadata accessor for IndexSet.Index();
  uint64_t v83 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v81 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v63 - v14;
  uint64_t v16 = sub_10003B754(&qword_10078E2E8);
  __chkstk_darwin(v16 - 8);
  unint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754(&qword_10078E2F0);
  uint64_t v20 = v19 - 8;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v63 - v24;
  uint64_t v26 = type metadata accessor for IndexSet();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 16);
  v28(v18, v82, v26);
  v28(v23, (uint64_t)v18, v26);
  uint64_t v78 = sub_100040194(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  dispatch thunk of Collection.endIndex.getter();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v27 + 8);
  uint64_t v79 = v26;
  v29(v18, v26);
  uint64_t v30 = &v23[*(int *)(v20 + 44)];
  uint64_t v31 = v83;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v83 + 32);
  uint64_t v80 = v15;
  uint64_t v82 = v11;
  v32(v30, v15, v11);
  sub_100028C3C((uint64_t)v23, (uint64_t)v25, &qword_10078E2F0);
  uint64_t v33 = *(int *)(v20 + 44);
  uint64_t v34 = (uint64_t)v25;
  uint64_t v35 = &v25[v33];
  uint64_t v65 = &v84[qword_10078DEE8];
  os_log_type_t v36 = *(void (**)(char *, char *, uint64_t))(v31 + 16);
  uint64_t v83 = v31 + 16;
  uint64_t v76 = (void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v77 = v36;
  uint64_t v73 = (void (**)(char *, uint64_t, uint64_t))(v64 + 2);
  ++v64;
  uint64_t v67 = &v25[v33];
  uint64_t v66 = v25;
  while (1)
  {
    uint64_t v37 = v80;
    uint64_t v38 = v82;
    v77(v80, v35, v82);
    uint64_t v39 = v81;
    dispatch thunk of Collection.startIndex.getter();
    sub_100040194(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v40 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v41 = *v76;
    (*v76)(v39, v38);
    v41(v37, v38);
    if (v40) {
      return (void (*)(uint64_t *, void))sub_10003B6F8(v34, &qword_10078E2F0);
    }
    sub_100040194(&qword_10078E308, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    uint64_t v42 = (void (*)(uint64_t *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v44 = *v43;
    v42(&v87, 0);
    uint64_t v45 = sub_10020AA70(v44);
    uint64_t v47 = v46;
    uint64_t v48 = *v73;
    (*v73)(v86, v75, v85);
    uint64_t result = (void (*)(uint64_t *, void))IndexPath.row.modify();
    if (__OFADD__(*v50, v45)) {
      break;
    }
    *v50 += v45;
    result(&v87, 0);
    uint64_t v51 = (uint64_t)v72;
    uint64_t result = (void (*)(uint64_t *, void))((uint64_t (*)(char *, char *, uint64_t))v48)(v72, v86, v85);
    if (__OFSUB__(v47, v45)) {
      goto LABEL_8;
    }
    uint64_t v52 = v85;
    uint64_t v53 = type metadata accessor for TTRITreeViewSectionsMetadata();
    uint64_t v54 = sub_1000EB480(v51, v47 - v45, v53);
    uint64_t v56 = v55;
    uint64_t v58 = v57;
    uint64_t v60 = v59;
    uint64_t v84 = *v64;
    ((void (*)(uint64_t, uint64_t))v84)(v51, v52);
    uint64_t v87 = v54;
    uint64_t v88 = v56;
    uint64_t v89 = v58;
    uint64_t v90 = v60;
    swift_beginAccess();
    uint64_t v61 = type metadata accessor for TTRITreeViewCollapsedStates();
    type metadata accessor for TTRITreeViewNode();
    uint64_t v62 = type metadata accessor for ArraySlice();
    swift_getWitnessTable();
    sub_10044A268((uint64_t)&v87, v61, v62);
    swift_endAccess();
    uint64_t v87 = v54;
    uint64_t v88 = v56;
    uint64_t v89 = v58;
    uint64_t v90 = v60;
    sub_1000663B8((uint64_t)&v87, 1, v71, 0, v62);
    ((void (*)(char *, uint64_t))v84)(v86, v52);
    uint64_t v34 = (uint64_t)v66;
    uint64_t v35 = v67;
    swift_unknownObjectRelease();
  }
  __break(1u);
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_10011C5C4(uint64_t a1, char *a2, char *a3, uint64_t a4, uint64_t a5)
{
  v46[3] = a4;
  uint64_t v47 = a5;
  uint64_t v50 = a2;
  _OWORD v46[2] = a1;
  uint64_t v48 = a3;
  v46[1] = swift_isaMask & *(void *)a3;
  uint64_t v5 = type metadata accessor for IndexSet.Index();
  uint64_t v52 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  uint64_t v51 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v46 - v8;
  uint64_t v10 = sub_10003B754(&qword_10078E2E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754(&qword_10078E2F0);
  uint64_t v14 = v13 - 8;
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v46 - v18;
  uint64_t v20 = type metadata accessor for IndexSet();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  v22(v12, v50, v20);
  v22(v17, v12, v20);
  uint64_t v23 = sub_100040194(&qword_10078E2F8, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  dispatch thunk of Collection.endIndex.getter();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v12, v20);
  uint64_t v24 = &v17[*(int *)(v14 + 44)];
  uint64_t v25 = v52;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v52 + 32);
  uint64_t v49 = v5;
  uint64_t v50 = v9;
  v26(v24, v9, v5);
  sub_100028C3C((uint64_t)v17, (uint64_t)v19, &qword_10078E2F0);
  uint64_t v27 = &v19[*(int *)(v14 + 44)];
  v46[0] = &v48[qword_10078DEE8];
  uint64_t v48 = *(char **)(v25 + 16);
  uint64_t v52 = v25 + 16;
  uint64_t v28 = (void (**)(char *, uint64_t))(v25 + 8);
  while (1)
  {
    uint64_t v29 = v49;
    uint64_t v30 = v50;
    ((void (*)(char *, char *, uint64_t))v48)(v50, v27, v49);
    uint64_t v31 = v51;
    dispatch thunk of Collection.startIndex.getter();
    sub_100040194(&qword_10078E300, (void (*)(uint64_t))&type metadata accessor for IndexSet.Index);
    char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v33 = *v28;
    (*v28)(v31, v29);
    v33(v30, v29);
    if (v32) {
      break;
    }
    sub_100040194(&qword_10078E308, (void (*)(uint64_t))&type metadata accessor for IndexSet);
    dispatch thunk of BidirectionalCollection.formIndex(before:)();
    uint64_t v34 = (void (*)(char *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v36 = *v35;
    v34(v53, 0);
    uint64_t v37 = type metadata accessor for TTRITreeViewSectionsMetadata();
    uint64_t v38 = sub_1000EAC30(v36, v37);
    uint64_t v39 = v20;
    char v40 = v19;
    uint64_t v41 = v23;
    uint64_t v43 = v42;
    swift_beginAccess();
    uint64_t v44 = type metadata accessor for TTRITreeViewCollapsedStates();
    sub_10044A458(v38, v43, v44);
    swift_endAccess();
    sub_1000665E4(v38, v43, 1, v47, 0);
    uint64_t v23 = v41;
    uint64_t v19 = v40;
    uint64_t v20 = v39;
    swift_bridgeObjectRelease();
    swift_release();
  }
  return sub_10003B6F8((uint64_t)v19, &qword_10078E2F0);
}

uint64_t sub_10011CADC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v116 = a4;
  uint64_t v117 = a2;
  uint64_t v104 = a1;
  uint64_t v115 = swift_isaMask & *v5;
  uint64_t v8 = v115;
  uint64_t v9 = type metadata accessor for IndexSet();
  uint64_t v113 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  __chkstk_darwin(v9);
  id v112 = (void (*)(char *, char *, uint64_t))((char *)&v102 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_10003B754(&qword_10078E8F0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  UIImage_optional v106 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v107 = (char *)&v102 - v14;
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v109 = *(void *)(v15 - 8);
  uint64_t v110 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v105 = (char *)&v102 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  char v108 = (char *)&v102 - v19;
  int64_t v121 = v5;
  uint64_t v20 = *(void *)(v8 + 80);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v18);
  uint64_t v118 = (char *)&v102 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  unint64_t v119 = (char *)&v102 - v24;
  uint64_t v25 = type metadata accessor for Optional();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v111 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v102 - v29;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v32 = __chkstk_darwin(TupleTypeMetadata2 - 8);
  uint64_t v34 = (char *)&v102 - v33;
  uint64_t v35 = (char *)&v102 + *(int *)(v32 + 56) - v33;
  uint64_t v120 = v26;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v36((char *)&v102 - v33, a3, v25);
  v36(v35, a5, v25);
  uint64_t v37 = v21;
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
  if (v38(v34, 1, v20) != 1)
  {
    char v103 = v34;
    v36(v30, (uint64_t)v34, v25);
    if (v38(v35, 1, v20) == 1)
    {
      (*(void (**)(char *, uint64_t))(v21 + 8))(v30, v20);
      goto LABEL_34;
    }
    uint64_t v44 = v25;
    uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
    uint64_t v46 = (uint64_t)v119;
    v45(v119, v30, v20);
    uint64_t v47 = (uint64_t)v118;
    v45(v118, v35, v20);
    uint64_t v48 = sub_100032E7C();
    uint64_t v49 = *(void *)(v115 + 88);
    uint64_t v53 = sub_1000EBBA0(v46, v48, v51, v52, v50 & 1, v20, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v53)
    {
      uint64_t v54 = sub_100032E7C();
      uint64_t v58 = sub_1000EBBA0(v47, v54, v56, v57, v55 & 1, v20, v49);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v58)
      {
        if (*(unsigned char *)(v58 + 72) == 2)
        {
          uint64_t v115 = v58;
          sub_100032E7C();
          uint64_t v60 = v107;
          uint64_t v114 = v53;
          sub_1000EC2F4(v53, v59 & 1, v107);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v62 = v109;
          uint64_t v61 = v110;
          uint64_t v63 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48);
          if (v63(v60, 1, v110) != 1)
          {
            id v112 = *(void (**)(char *, char *, uint64_t))(v62 + 32);
            uint64_t v113 = v62 + 32;
            v112(v108, v60, v61);
            sub_100032E7C();
            uint64_t v65 = v106;
            sub_1000EC2F4(v115, v64 & 1, v106);
            swift_bridgeObjectRelease();
            uint64_t v66 = v110;
            swift_bridgeObjectRelease();
            uint64_t v60 = v65;
            swift_bridgeObjectRelease();
            if (v63(v65, 1, v66) != 1)
            {
              uint64_t v87 = v105;
              uint64_t v88 = ((uint64_t (*)(char *, char *, uint64_t))v112)(v105, v65, v66);
              uint64_t v89 = v66;
              uint64_t v90 = v114;
              if (*(unsigned char *)(v114 + 72) == 1)
              {
                __chkstk_darwin(v88);
                uint64_t v91 = v104;
                *(&v102 - 4) = (uint64_t)v121;
                *(&v102 - 3) = v91;
                uint64_t v100 = v115;
                uint64_t v101 = v116;
                sub_10011B0C0((void (*)(uint64_t))sub_10013FD94, (uint64_t)(&v102 - 6), 0, 0, 0, 0);
                swift_release();
                uint64_t v92 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
                v92(v47, v20);
                v92((uint64_t)v119, v20);
                swift_release();
                long long v93 = *(void (**)(char *, uint64_t))(v109 + 8);
                v93(v87, v66);
                uint64_t v94 = v108;
              }
              else
              {
                __chkstk_darwin(v88);
                *(&v102 - 8) = (uint64_t)v121;
                *(&v102 - 7) = v90;
                uint64_t v95 = v117;
                uint64_t v117 = &v102;
                uint64_t v96 = v115;
                *(&v102 - 6) = (uint64_t)v95;
                *(&v102 - 5) = v96;
                uint64_t v97 = (uint64_t)v87;
                uint64_t v98 = v108;
                *(&v102 - 4) = v116;
                *(&v102 - 3) = (uint64_t)v98;
                uint64_t v100 = v97;
                sub_10011B0C0((void (*)(uint64_t))sub_10013FD30, (uint64_t)(&v102 - 10), 0, 0, 0, 0);
                swift_release();
                swift_release();
                uint64_t v99 = *(void (**)(uint64_t, uint64_t))(v37 + 8);
                v99(v47, v20);
                v99((uint64_t)v119, v20);
                long long v93 = *(void (**)(char *, uint64_t))(v109 + 8);
                v93((char *)v97, v89);
                uint64_t v94 = v98;
              }
              v93(v94, v89);
              uint64_t v42 = v120;
              goto LABEL_27;
            }
            (*(void (**)(char *, uint64_t))(v109 + 8))(v108, v66);
          }
          sub_10003B6F8((uint64_t)v60, &qword_10078E8F0);
          uint64_t v42 = v120;
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v67 = type metadata accessor for Logger();
          sub_100018BF8(v67, (uint64_t)qword_10078DE60);
          uint64_t v68 = Logger.logObject.getter();
          os_log_type_t v69 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v70 = 0;
            _os_log_impl((void *)&_mh_execute_header, v68, v69, "Unable to find old/newChildrenStartIndexPath", v70, 2u);
            swift_slowDealloc();
          }
          swift_release();
          swift_release();
LABEL_20:

          uint64_t v75 = *(void (**)(char *, uint64_t))(v37 + 8);
          v75(v118, v20);
          v75(v119, v20);
LABEL_27:
          uint64_t v43 = v103;
          return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v44);
        }
        swift_release();
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v76 = type metadata accessor for Logger();
      sub_100018BF8(v76, (uint64_t)qword_10078DE60);
      uint64_t v77 = Logger.logObject.getter();
      os_log_type_t v78 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v77, v78))
      {
        uint64_t v79 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v79 = 0;
        _os_log_impl((void *)&_mh_execute_header, v77, v78, "newParentNode is not found or not expanded, treating this as a delete.", v79, 2u);
        swift_slowDealloc();
      }

      sub_10003B754((uint64_t *)&unk_100797A30);
      uint64_t v80 = swift_allocObject();
      *(_OWORD *)(v80 + 16) = xmmword_10066C6F0;
      *(void *)(v80 + 32) = v117;
      uint64_t v122 = v80;
      sub_100040194((unint64_t *)&qword_10078E310, (void (*)(uint64_t))&type metadata accessor for IndexSet);
      sub_10003B754(&qword_100789060);
      sub_100037EA0((unint64_t *)&qword_10078E320, &qword_100789060);
      uint64_t v81 = (char *)v112;
      uint64_t v82 = v114;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v83 = (uint64_t)v111;
      uint64_t v84 = v119;
      (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v111, v119, v20);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v37 + 56))(v83, 0, 1, v20);
      sub_10011B880(v81, v83, (char *)0x64);
      swift_release();
      uint64_t v42 = v120;
      (*(void (**)(uint64_t, uint64_t))(v120 + 8))(v83, v44);
      (*(void (**)(char *, uint64_t))(v113 + 8))(v81, v82);
      uint64_t v85 = *(void (**)(char *, uint64_t))(v37 + 8);
      v85(v118, v20);
      v85(v84, v20);
      goto LABEL_27;
    }
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v71 = type metadata accessor for Logger();
    sub_100018BF8(v71, (uint64_t)qword_10078DE60);
    uint64_t v68 = Logger.logObject.getter();
    os_log_type_t v72 = static os_log_type_t.info.getter();
    BOOL v73 = os_log_type_enabled(v68, v72);
    uint64_t v42 = v120;
    if (v73)
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v74 = 0;
      _os_log_impl((void *)&_mh_execute_header, v68, v72, "oldParentNode is not found, nothing to do.", v74, 2u);
      swift_slowDealloc();
    }
    goto LABEL_20;
  }
  uint64_t v39 = v25;
  uint64_t v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v38)(v35, 1, v20);
  if (v40 == 1)
  {
    __chkstk_darwin(v40);
    uint64_t v41 = v117;
    *(&v102 - 4) = (uint64_t)v121;
    *(&v102 - 3) = (uint64_t)v41;
    uint64_t v100 = v116;
    sub_10011B0C0((void (*)(uint64_t))sub_10013FDEC, (uint64_t)(&v102 - 6), 0, 0, 0, 0);
    uint64_t v42 = v120;
    uint64_t v43 = v34;
    uint64_t v44 = v39;
    return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v43, v44);
  }
LABEL_34:
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_10011D878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for TTRITreeViewSectionsMetadata();
  uint64_t v6 = sub_1000EB0DC(a2, a3, v5);
  sub_1000665E4(v6, v7, 2, 0, 1);
  swift_bridgeObjectRelease();

  return swift_release();
}

void (*sub_10011D92C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6))(void *, void)
{
  v34[2] = a1;
  _DWORD v34[3] = a6;
  uint64_t v35 = a5;
  uint64_t v8 = swift_isaMask & *a2;
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)v34 - v17;
  uint64_t v19 = *(void *)(v8 + 80);
  v34[0] = *(void *)(v8 + 88);
  v34[1] = v19;
  type metadata accessor for TTRITreeViewNodeReuseQueue();
  uint64_t v20 = sub_100034A30();
  uint64_t v21 = sub_100033AD4(a3, a4, v20);
  swift_release();
  v34[4] = v21;
  uint64_t v22 = sub_10020ACA0((uint64_t)v21, v35);
  uint64_t v35 = v23;
  sub_100032E7C();
  sub_1000EC2F4(a4, v24 & 1, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    swift_bridgeObjectRelease();
    sub_10003B6F8((uint64_t)v11, &qword_10078E8F0);
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100018BF8(v25, (uint64_t)qword_10078DE60);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Can't find indexPath to insert currentItem into", v28, 2u);
      swift_slowDealloc();
    }

    return (void (*)(void *, void))swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v11, v12);
    uint64_t result = (void (*)(void *, void))IndexPath.row.modify();
    if (__OFADD__(*v30, v35))
    {
      __break(1u);
    }
    else
    {
      *v30 += v35;
      result(v36, 0);
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v12);
      uint64_t v31 = type metadata accessor for TTRITreeViewSectionsMetadata();
      sub_1000EB300(v22, (uint64_t)v16, v31);
      uint64_t v32 = *(void (**)(char *, uint64_t))(v13 + 8);
      v32(v16, v12);
      v36[0] = v22;
      type metadata accessor for TTRITreeViewNode();
      uint64_t v33 = type metadata accessor for Array();
      swift_getWitnessTable();
      sub_1000663B8((uint64_t)v36, 0, 0, 1, v33);
      swift_release();
      v32(v18, v12);
      return (void (*)(void *, void))swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10011DD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = sub_10020AF78(a3, a4, a5);
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t result = IndexPath.row.getter();
  BOOL v11 = __OFADD__(result, v5);
  uint64_t v12 = result + v5;
  if (v11)
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v11 = __OFADD__(result, v7);
  uint64_t v13 = result + v7;
  if (v11)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v13 < v12)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t result = IndexPath.row.getter();
  BOOL v11 = __OFADD__(result, v9);
  uint64_t v14 = result + v9;
  if (v11)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v15 = IndexPath.section.getter();
  uint64_t result = IndexPath.section.getter();
  if (v15 != result || v12 >= v14) {
    goto LABEL_9;
  }
  uint64_t v16 = v13 - v12;
  if (__OFSUB__(v13, v12)) {
    goto LABEL_14;
  }
  BOOL v11 = __OFSUB__(v14, v16);
  v14 -= v16;
  if (!v11)
  {
LABEL_9:
    unint64_t v17 = IndexPath.section.getter();
    unint64_t v18 = IndexPath.section.getter();
    uint64_t v19 = type metadata accessor for TTRITreeViewSectionsMetadata();
    v24[0] = sub_1000EB654(v12, v13, v17, v18, v14, v19);
    v24[1] = v20;
    void v24[2] = v21;
    v24[3] = v22;
    type metadata accessor for TTRITreeViewNode();
    uint64_t v23 = type metadata accessor for ArraySlice();
    swift_getWitnessTable();
    sub_1000663B8((uint64_t)v24, 2, 0, 1, v23);
    return swift_unknownObjectRelease();
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_10011DF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v87 = a4;
  uint64_t v88 = a5;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (char *)&v79 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v12 - 8);
  uint64_t v94 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v79 - v15;
  uint64_t v17 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v17 - 8);
  v95.i64[0] = (uint64_t)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = a1;
  uint64_t v22 = *(void *)(*(void *)a1 + 16);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v21, 1, 1, v8);
  char v24 = *(uint64_t (**)(void *, char *))(a2 + 32);
  char v25 = 1;
  uint64_t v26 = v24(Strong, v21);

  sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_100788DC0);
  os_log_type_t v27 = _swiftEmptyArrayStorage;
  uint64_t v99 = _swiftEmptyArrayStorage;
  v100.i64[0] = (uint64_t)_swiftEmptyDictionarySingleton;
  v100.i64[1] = (uint64_t)_swiftEmptyDictionarySingleton;
  char v101 = 1;
  uint64_t v82 = a3;
  uint64_t v28 = (void *)(a3 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v80 = v28;
  uint64_t v29 = *v28;
  uint64_t v30 = v28[1];
  uint64_t v97 = v29;
  uint64_t v98 = v30;
  uint64_t v90 = v26;
  unint64_t v91 = v22;
  if (v26 <= v22) {
    uint64_t v26 = v22;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v89 = v26;
  if (!v26)
  {
    int64x2_t v95 = vdupq_n_s64((unint64_t)_swiftEmptyDictionarySingleton);
LABEL_54:
    uint64_t v77 = v80;
    uint64_t v78 = v83;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v78 = v27;
    *(int64x2_t *)(v78 + 8) = v95;
    *(unsigned char *)(v78 + 24) = v25;
    *uint64_t v77 = v29;
    v77[1] = v30;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  unint64_t v32 = 0;
  long long v81 = xmmword_10066D470;
  while (1)
  {
    int64_t v93 = v32;
    if (v32 >= v91)
    {
      uint64_t v33 = 0;
      uint64_t v43 = 0;
      uint64_t v44 = 0;
      unint64_t v45 = (unint64_t)_swiftEmptyArrayStorage;
      if ((uint64_t)v32 < v90) {
        goto LABEL_23;
      }
      goto LABEL_6;
    }
    if (v32 >= *(void *)(*(void *)v83 + 16)) {
      break;
    }
    long long v92 = *(_OWORD *)(*(void *)v83 + 16 * v32 + 32);
    uint64_t v34 = v92;
    uint64_t v35 = v92 + *(void *)(*(void *)v92 + 144);
    swift_beginAccess();
    sub_1000244A8(v35, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    unint64_t v36 = *((void *)&v92 + 1);
    swift_bridgeObjectRetain();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v37 = v95.i64[0];
    sub_10012F180(v95.i64[0]);
    sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10003B6F8(v37, (uint64_t *)&unk_10078E360);
    uint64_t v86 = v34;
    if (v36 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v38 = result;
      if (result)
      {
LABEL_12:
        if (v38 < 1) {
          goto LABEL_56;
        }
        if ((v36 & 0xC000000000000001) != 0)
        {
          uint64_t v39 = 0;
          do
          {
            uint64_t v40 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            ++v39;
            uint64_t v41 = v40 + *(void *)(*(void *)v40 + 144);
            swift_beginAccess();
            sub_1000244A8(v41, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
            sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v42 = v95.i64[0];
            sub_10012F180(v95.i64[0]);
            sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            sub_10003B6F8(v42, (uint64_t *)&unk_10078E360);
            swift_unknownObjectRelease();
          }
          while (v38 != v39);
        }
        else
        {
          uint64_t v46 = (uint64_t *)(v36 + 32);
          do
          {
            uint64_t v47 = *v46++;
            uint64_t v48 = v47 + *(void *)(*(void *)v47 + 144);
            swift_beginAccess();
            sub_1000244A8(v48, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            swift_retain();
            TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
            sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v49 = v95.i64[0];
            sub_10012F180(v95.i64[0]);
            sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
            sub_10003B6F8(v49, (uint64_t *)&unk_10078E360);
            swift_release();
            --v38;
          }
          while (v38);
        }
      }
    }
    else
    {
      uint64_t v38 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v38) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v50 = swift_allocObject();
    *(_OWORD *)(v50 + 16) = v92;
    uint64_t v51 = v86;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1003CB440(1, v51, 3, v88, 0);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v32 = v93;
    if (v93 < v90)
    {
      swift_retain();
      unint64_t v45 = sub_10011F908(*(void *)(v50 + 16), *(void *)(v50 + 24), (void (*)(uint64_t))sub_1005698B8);
      uint64_t v43 = sub_10014036C;
      sub_1000499C4((uint64_t)sub_10014036C);
      uint64_t v44 = v50;
LABEL_23:
      uint64_t v85 = v44;
      sub_10003B754((uint64_t *)&unk_10078E3A0);
      uint64_t v52 = swift_allocObject();
      int64_t v53 = swift_bridgeObjectRetain();
      uint64_t result = sub_10008FE70(v53);
      *(void *)&long long v92 = v52;
      *(void *)(v52 + 16) = result;
      if (v45 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v54 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v86 = (uint64_t)v43;
        if (v54)
        {
LABEL_25:
          if (v54 < 1) {
            goto LABEL_57;
          }
          if ((v45 & 0xC000000000000001) != 0)
          {
            uint64_t v55 = 0;
            do
            {
              uint64_t v56 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              ++v55;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v56 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
            }
            while (v54 != v55);
          }
          else
          {
            uint64_t v57 = 0;
            do
            {
              uint64_t v58 = *(void *)(v45 + 8 * v57++ + 32);
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v58 + 64) = _swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
            }
            while (v54 != v57);
          }
        }
      }
      else
      {
        uint64_t v54 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v86 = (uint64_t)v43;
        if (v54) {
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease();
      sub_10008E1F8(v32, v92);
      unint64_t v60 = v59;
      uint64_t v84 = v61;
      sub_1003CE1BC(v61);
      if (v60 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v62 = result;
        if (result)
        {
LABEL_34:
          if (v62 < 1) {
            goto LABEL_58;
          }
          if ((v60 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v62; ++i)
            {
              uint64_t v65 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v66 = (uint64_t)&v65[*(void *)(*(void *)v65 + 144)];
              if (v65[72] == 1)
              {
                swift_beginAccess();
                sub_1000244A8(v66, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                uint64_t v64 = (uint64_t)v94;
                TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_1005A2CAC((uint64_t)v16, v64);
                sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
              }
              else
              {
                swift_beginAccess();
                sub_1000244A8(v66, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                uint64_t v67 = v95.i64[0];
                sub_10012F180(v95.i64[0]);
                sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                sub_10003B6F8(v67, (uint64_t *)&unk_10078E360);
              }
              swift_unknownObjectRelease();
            }
          }
          else
          {
            unint64_t v68 = v60 + 32;
            do
            {
              uint64_t v70 = *(void *)v68 + *(void *)(**(void **)v68 + 144);
              if (*(unsigned char *)(*(void *)v68 + 72) == 1)
              {
                swift_beginAccess();
                sub_1000244A8(v70, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                swift_retain();
                uint64_t v69 = (uint64_t)v94;
                TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                sub_1005A2CAC((uint64_t)v16, v69);
                sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
              }
              else
              {
                swift_beginAccess();
                sub_1000244A8(v70, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                swift_retain();
                TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
                uint64_t v71 = v95.i64[0];
                sub_10012F180(v95.i64[0]);
                sub_100024388((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
                sub_10003B6F8(v71, (uint64_t *)&unk_10078E360);
              }
              swift_release();
              v68 += 8;
              --v62;
            }
            while (v62);
          }
        }
      }
      else
      {
        uint64_t v62 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
        if (v62) {
          goto LABEL_34;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v72 = v99[2];
      swift_bridgeObjectRetain();
      uint64_t v73 = (uint64_t)v84;
      swift_retain();
      sub_10054D1DC(v72, v72, v73, v60);
      swift_release();
      swift_bridgeObjectRelease();
      sub_1000872B8(v72, 1);
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v81;
      *(void *)(inited + 32) = v73;
      unint64_t v96 = inited;
      specialized Array._endMutation()();
      unint64_t v75 = v96;
      swift_retain();
      sub_100087C30(v75, v72);
      swift_bridgeObjectRelease();
      unint64_t v76 = swift_bridgeObjectRetain();
      sub_100087C30(v76, v72);
      swift_bridgeObjectRelease();
      sub_1003CB440(1, v73, 3, v88, 0);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = sub_1000499C4(v86);
      unint64_t v32 = v93;
      goto LABEL_7;
    }
    uint64_t v33 = sub_10014036C;
LABEL_6:
    uint64_t result = sub_1000499C4((uint64_t)v33);
LABEL_7:
    if (++v32 == v89)
    {
      uint64_t v30 = v98;
      os_log_type_t v27 = v99;
      int64x2_t v95 = v100;
      char v25 = v101;
      uint64_t v29 = v97;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_10011EC28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v87 = a4;
  uint64_t v88 = a5;
  uint64_t v93 = a2;
  uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v94 = (char *)&v79 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v79 - v14;
  uint64_t v16 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v79 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v79 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = a1;
  uint64_t v22 = *(void *)(*(void *)a1 + 16);
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v21, 1, 1, v7);
  uint64_t v24 = (*(uint64_t (**)(void *, char *))(v93 + 32))(Strong, v21);

  sub_10003B6F8((uint64_t)v21, (uint64_t *)&unk_100788D10);
  uint64_t v99 = &_swiftEmptyArrayStorage;
  v100.i64[0] = (uint64_t)&_swiftEmptyDictionarySingleton;
  v100.i64[1] = (uint64_t)&_swiftEmptyDictionarySingleton;
  char v101 = 1;
  uint64_t v82 = a3;
  char v25 = (void *)(a3 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v80 = v25;
  uint64_t v26 = *v25;
  uint64_t v27 = v25[1];
  uint64_t v97 = v26;
  uint64_t v98 = v27;
  uint64_t v90 = v24;
  unint64_t v91 = v22;
  if (v24 <= v22) {
    uint64_t v24 = v22;
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v89 = v24;
  if (!v24)
  {
    int64x2_t v95 = vdupq_n_s64((unint64_t)&_swiftEmptyDictionarySingleton);
    unint64_t v75 = &_swiftEmptyArrayStorage;
    uint64_t v77 = v80;
    char v76 = 1;
LABEL_54:
    uint64_t v78 = v83;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v78 = v75;
    *(int64x2_t *)(v78 + 8) = v95;
    *(unsigned char *)(v78 + 24) = v76;
    *uint64_t v77 = v26;
    v77[1] = v27;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  unint64_t v29 = 0;
  long long v81 = xmmword_10066D470;
  v95.i64[0] = (uint64_t)v18;
  while (1)
  {
    uint64_t v93 = v29;
    if (v29 >= v91)
    {
      uint64_t v30 = 0;
      uint64_t v39 = 0;
      uint64_t v40 = 0;
      unint64_t v41 = (unint64_t)&_swiftEmptyArrayStorage;
      if ((uint64_t)v29 < v90) {
        goto LABEL_23;
      }
      goto LABEL_6;
    }
    if (v29 >= *(void *)(*(void *)v83 + 16)) {
      break;
    }
    long long v92 = *(_OWORD *)(*(void *)v83 + 16 * v29 + 32);
    uint64_t v31 = v92;
    uint64_t v32 = v92 + *(void *)(*(void *)v92 + 144);
    swift_beginAccess();
    sub_1000244A8(v32, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_retain();
    unint64_t v33 = *((void *)&v92 + 1);
    swift_bridgeObjectRetain();
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10012F618((uint64_t)v18);
    sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10003B6F8((uint64_t)v18, (uint64_t *)&unk_10078E260);
    uint64_t v86 = v31;
    if (v33 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v34 = result;
      if (result)
      {
LABEL_12:
        if (v34 < 1) {
          goto LABEL_56;
        }
        if ((v33 & 0xC000000000000001) != 0)
        {
          uint64_t v35 = 0;
          uint64_t v36 = v95.i64[0];
          do
          {
            uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            ++v35;
            uint64_t v38 = v37 + *(void *)(*(void *)v37 + 144);
            swift_beginAccess();
            sub_1000244A8(v38, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
            sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            sub_10012F618(v36);
            sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
            sub_10003B6F8(v36, (uint64_t *)&unk_10078E260);
            swift_unknownObjectRelease();
          }
          while (v34 != v35);
        }
        else
        {
          uint64_t v42 = (uint64_t *)(v33 + 32);
          uint64_t v43 = v95.i64[0];
          do
          {
            uint64_t v44 = *v42++;
            uint64_t v45 = v44 + *(void *)(*(void *)v44 + 144);
            swift_beginAccess();
            sub_1000244A8(v45, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            swift_retain();
            TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
            sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            sub_10012F618(v43);
            sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
            sub_10003B6F8(v43, (uint64_t *)&unk_10078E260);
            swift_release();
            --v34;
          }
          while (v34);
        }
      }
    }
    else
    {
      uint64_t v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      if (v34) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease_n();
    uint64_t v46 = swift_allocObject();
    *(_OWORD *)(v46 + 16) = v92;
    uint64_t v47 = v86;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1003CB6D0(1, v47, 3, v88, 0);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v29 = v93;
    if (v93 < v90)
    {
      swift_retain();
      unint64_t v41 = sub_10011F908(*(void *)(v46 + 16), *(void *)(v46 + 24), (void (*)(uint64_t))sub_100569D64);
      uint64_t v39 = sub_10013FEB0;
      sub_1000499C4((uint64_t)sub_10013FEB0);
      uint64_t v40 = v46;
LABEL_23:
      uint64_t v86 = v40;
      *(void *)&long long v92 = v39;
      sub_10003B754((uint64_t *)&unk_100788D20);
      uint64_t inited = swift_initStackObject();
      unint64_t v49 = swift_bridgeObjectRetain();
      *(void *)(inited + 16) = sub_100090290(v49);
      if (v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v50 = result;
        if (result)
        {
LABEL_25:
          if (v50 < 1) {
            goto LABEL_57;
          }
          if ((v41 & 0xC000000000000001) != 0)
          {
            uint64_t v51 = 0;
            do
            {
              uint64_t v52 = specialized _ArrayBuffer._getElementSlowPath(_:)();
              ++v51;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v52 + 64) = &_swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
            }
            while (v50 != v51);
          }
          else
          {
            int64_t v53 = (uint64_t *)(v41 + 32);
            do
            {
              uint64_t v54 = *v53++;
              swift_weakAssign();
              swift_beginAccess();
              *(void *)(v54 + 64) = &_swiftEmptyArrayStorage;
              swift_bridgeObjectRelease();
              --v50;
            }
            while (v50);
          }
        }
      }
      else
      {
        uint64_t v50 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain();
        if (v50) {
          goto LABEL_25;
        }
      }
      swift_bridgeObjectRelease_n();
      sub_10008E50C(v93, inited);
      unint64_t v56 = v55;
      uint64_t v84 = v57;
      sub_1003CE408(v57);
      uint64_t v85 = inited;
      if (v56 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t result = _CocoaArrayWrapper.endIndex.getter();
        uint64_t v58 = result;
        if (result)
        {
LABEL_34:
          if (v58 < 1) {
            goto LABEL_58;
          }
          unint64_t v59 = v56;
          if ((v56 & 0xC000000000000001) != 0)
          {
            for (uint64_t i = 0; i != v58; ++i)
            {
              uint64_t v63 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
              uint64_t v64 = (uint64_t)&v63[*(void *)(*(void *)v63 + 144)];
              if (v63[72] == 1)
              {
                swift_beginAccess();
                sub_1000244A8(v64, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v61 = v94;
                TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v62 = (uint64_t)v61;
                unint64_t v56 = v59;
                sub_1005A3E00((uint64_t)v15, v62);
                sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
              }
              else
              {
                swift_beginAccess();
                sub_1000244A8(v64, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v65 = v95.i64[0];
                sub_10012F618(v95.i64[0]);
                sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                sub_10003B6F8(v65, (uint64_t *)&unk_10078E260);
              }
              swift_unknownObjectRelease();
            }
          }
          else
          {
            unint64_t v66 = v56 + 32;
            do
            {
              uint64_t v69 = *(void *)v66 + *(void *)(**(void **)v66 + 144);
              if (*(unsigned char *)(*(void *)v66 + 72) == 1)
              {
                swift_beginAccess();
                sub_1000244A8(v69, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                swift_retain();
                uint64_t v67 = v94;
                TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v68 = (uint64_t)v67;
                unint64_t v56 = v59;
                sub_1005A3E00((uint64_t)v15, v68);
                sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
              }
              else
              {
                swift_beginAccess();
                sub_1000244A8(v69, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                swift_retain();
                TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
                sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                uint64_t v70 = v95.i64[0];
                sub_10012F618(v95.i64[0]);
                sub_100024388((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
                sub_10003B6F8(v70, (uint64_t *)&unk_10078E260);
              }
              swift_release();
              v66 += 8;
              --v58;
            }
            while (v58);
          }
        }
      }
      else
      {
        uint64_t v58 = *(void *)((v56 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t result = swift_bridgeObjectRetain_n();
        if (v58) {
          goto LABEL_34;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v71 = v99[2];
      swift_bridgeObjectRetain();
      uint64_t v72 = (uint64_t)v84;
      swift_retain();
      sub_10054C2F8(v71, v71, v72, v56);
      sub_1000875C4(v71, 1);
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v73 = swift_initStackObject();
      *(_OWORD *)(v73 + 16) = v81;
      *(void *)(v73 + 32) = v72;
      unint64_t v96 = v73;
      specialized Array._endMutation()();
      unint64_t v74 = v96;
      swift_retain();
      sub_1000882D0(v74, v71);
      swift_bridgeObjectRelease();
      sub_1000882D0(v56, v71);
      sub_1003CB6D0(1, v72, 3, v88, 0);
      swift_release();
      swift_bridgeObjectRelease();
      swift_setDeallocating();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1000499C4(v92);
      unint64_t v29 = v93;
      uint64_t v18 = (char *)v95.i64[0];
      goto LABEL_7;
    }
    uint64_t v30 = sub_10013FEB0;
    uint64_t v18 = (char *)v95.i64[0];
LABEL_6:
    uint64_t result = sub_1000499C4((uint64_t)v30);
LABEL_7:
    if (++v29 == v89)
    {
      uint64_t v27 = v98;
      unint64_t v75 = v99;
      int64x2_t v95 = v100;
      char v76 = v101;
      uint64_t v26 = v97;
      uint64_t v77 = v80;
      goto LABEL_54;
    }
  }
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
  return result;
}

uint64_t sub_10011F908(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066D470;
  *(void *)(v5 + 32) = a1;
  uint64_t v8 = v5;
  specialized Array._endMutation()();
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  a3(v6);
  return v8;
}

uint64_t sub_10011F99C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = sub_100032E7C();
  uint64_t v7 = *(void *)(v5 + 80);
  uint64_t v11 = sub_1000EBBA0(a1, v6, v9, v10, v8 & 1, v7, *(void *)(v5 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v11 && (uint64_t Strong = swift_weakLoadStrong(), swift_release(), Strong))
  {
    uint64_t v13 = Strong + *(void *)(*(void *)Strong + 144);
    swift_beginAccess();
    uint64_t v14 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a2, v13, v7);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a2, 0, 1, v7);
  }
  else
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    return v16(a2, 1, 1, v7);
  }
}

uint64_t sub_10011FB80(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = sub_100032E7C();
  uint64_t v8 = sub_1000EBBA0(a1, v4, v6, v7, v5 & 1, *(void *)(v3 + 80), *(void *)(v3 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v8) {
    return 0;
  }
  if (!swift_weakLoadStrong())
  {
    sub_100032E7C();
    char v10 = sub_1000EC2B8(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      sub_100032E7C();
      uint64_t v9 = sub_1000EA248();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    swift_release();
    return 0;
  }
  swift_beginAccess();
  type metadata accessor for TTRITreeViewNode();
  type metadata accessor for Array();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  Collection.firstIndex(where:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10011FDC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v6 = swift_isaMask & *v3;
  uint64_t v7 = *(void *)(v6 + 0x50);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v37 - v12;
  uint64_t v14 = *(void *)(v7 - 8);
  double v16 = __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v37 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v9 + 16))(v13, a2, v8, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v8);
    sub_100032E7C();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for TTRITreeViewSectionsMetadata.Section();
    Array.subscript.getter();
    swift_bridgeObjectRelease();
    uint64_t v19 = v43;
    swift_bridgeObjectRelease();
    uint64_t v20 = v19 + *(void *)(*(void *)v19 + 144);
    swift_beginAccess();
    uint64_t v21 = v42;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v42, v20, v7);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(v21, 0, 1, v7);
  }
  uint64_t v40 = a1;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v18, v13, v7);
  uint64_t v23 = sub_100032E7C();
  uint64_t v24 = v14;
  uint64_t v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v6 + 88);
  uint64_t v28 = sub_1000EBBA0((uint64_t)v18, v23, v26, v27, v25 & 1, v7, (uint64_t)v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v28)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v42, 1, 1, v7);
  }
  unint64_t v29 = v18;
  if (!*(unsigned char *)(v28 + 72))
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v7);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v42, 1, 1, v7);
  }
  if (*(unsigned char *)(v28 + 72) == 1)
  {
    if (sub_1000329D0(&qword_10078DEB0, (uint64_t (*)(uint64_t))sub_100032A20))
    {
      uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
      uint64_t v37 = v28;
      uint64_t v38 = v18;
      uint64_t v31 = (void *)Strong;
      uint64_t v32 = v41;
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v41, v29, v7);
      uint64_t v33 = v42;
      uint64_t v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
      v39(v32, 0, 1, v7);
      sub_100033A04();
      swift_release();
      swift_release();

      (*(void (**)(char *, uint64_t))(v9 + 8))(v32, v8);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v38, v7);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v39)(v33, 0, 1, v7);
    }
  }
  else
  {
    swift_beginAccess();
    *(void *)&long long v45 = *(void *)(v28 + 64);
    type metadata accessor for TTRITreeViewNode();
    type metadata accessor for Array();
    swift_getWitnessTable();
    RandomAccessCollection<>.indices.getter();
    long long v45 = v43;
    uint64_t v44 = v40;
    sub_10003B754(&qword_10078C648);
    if (Range.contains(_:)())
    {
      swift_beginAccess();
      Array.subscript.getter();
      uint64_t v34 = v45;
      swift_endAccess();
      swift_release();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v7);
      uint64_t v35 = v34 + *(void *)(*(void *)v34 + 144);
      swift_beginAccess();
      uint64_t v36 = v42;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 16))(v42, v35, v7);
      swift_release();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v36, 0, 1, v7);
    }
  }
  swift_release();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v18, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v42, 1, 1, v7);
}

uint64_t sub_100120448(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = *(void *)(v3 + 0x50);
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (char *)&v26 - v11;
  uint64_t v13 = *(void *)(v4 - 8);
  __chkstk_darwin(v10);
  uint64_t v15 = (char *)&v26 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v12, a1, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v4) != 1)
  {
    uint64_t v26 = v9;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v4);
    uint64_t v17 = sub_100032E7C();
    uint64_t v21 = (unsigned char *)sub_1000EBBA0((uint64_t)v15, v17, v19, v20, v18 & 1, v4, *(void *)(v3 + 88));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v21)
    {
      (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v4);
      return 0;
    }
    if (v21[72])
    {
      if (v21[72] != 1)
      {
        swift_beginAccess();
        type metadata accessor for TTRITreeViewNode();
        swift_bridgeObjectRetain();
        uint64_t v16 = Array.count.getter();
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_11;
      }
      if (sub_1000329D0(&qword_10078DEB0, (uint64_t (*)(uint64_t))sub_100032A20))
      {
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        uint64_t v23 = &v21[*(void *)(*(void *)v21 + 144)];
        swift_beginAccess();
        uint64_t v24 = v26;
        (*(void (**)(char *, unsigned char *, uint64_t))(v13 + 16))(v26, v23, v4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v24, 0, 1, v4);
        uint64_t v16 = sub_100034F4C();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v6 + 8))(v24, v5);
LABEL_11:
        (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v4);
        return v16;
      }
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v4);
    return 0;
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v12, v5);
  sub_100032E7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  uint64_t v16 = Array.count.getter();
  swift_bridgeObjectRelease();
  return v16;
}

id sub_1001208E8(uint64_t a1)
{
  uint64_t v2 = sub_100032E7C();
  id v6 = sub_100120960(a1, v2, v4, v5, v3 & 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

id sub_100120960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v23 = a5;
  uint64_t v10 = swift_isaMask & *v5;
  uint64_t v11 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for IndexPath();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v22[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000EC14C(a1, a2, a3, a4, v23, *(void *)(v10 + 80), *(void *)(v10 + 88), (uint64_t)v13);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10003B6F8((uint64_t)v13, &qword_10078E8F0);
    return 0;
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 32))(v17, v13, v14);
    id v19 = *(id *)((char *)v5 + qword_10078DEA0);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v18 = [v19 cellForRowAtIndexPath:isa];

    (*(void (**)(unsigned char *, uint64_t))(v15 + 8))(v17, v14);
  }
  return v18;
}

uint64_t sub_100120B94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100120BAC(a1, a2, a3, a4, a5, (SEL *)&selRef_headerViewForSection_);
}

uint64_t sub_100120BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_100120C94(a1, a2, a3, a4, a5, (SEL *)&selRef_headerViewForSection_);
}

uint64_t sub_100120BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v8 = v6;
  uint64_t v11 = sub_100091DF0(a1, a3);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = v11;
  if (!*(void *)(a4 + 16) || (uint64_t result = sub_10035C1D0(v11), (v14 & 1) == 0))
  {
LABEL_7:
    swift_release();
    return 0;
  }
  unint64_t v15 = *(void *)(*(void *)(a4 + 56) + 8 * result);
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v15 < *(void *)(a2 + 16))
  {
    if (*(void *)(a2 + 16 * v15 + 32) == v12)
    {
      if (*(void *)(a4 + 16))
      {
        uint64_t v17 = sub_10035C1D0(v12);
        if (v18)
        {
          id v16 = [*(id *)(v8 + qword_10078DEA0) *a6 *(void *)(*(void *)(a4 + 56) + 8 * v17)];
          swift_release();
          return (uint64_t)v16;
        }
      }
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_100120C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v8 = v6;
  uint64_t v11 = sub_100091FDC(a1, a3);
  if (!v11) {
    return 0;
  }
  uint64_t v12 = v11;
  if (!*(void *)(a4 + 16) || (uint64_t result = sub_10035C1D0(v11), (v14 & 1) == 0))
  {
LABEL_7:
    swift_release();
    return 0;
  }
  unint64_t v15 = *(void *)(*(void *)(a4 + 56) + 8 * result);
  if ((v15 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v15 < *(void *)(a2 + 16))
  {
    if (*(void *)(a2 + 16 * v15 + 32) == v12)
    {
      if (*(void *)(a4 + 16))
      {
        uint64_t v17 = sub_10035C1D0(v12);
        if (v18)
        {
          id v16 = [*(id *)(v8 + qword_10078DEA0) *a6 *(void *)(*(void *)(a4 + 56) + 8 * v17)];
          swift_release();
          return (uint64_t)v16;
        }
      }
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

id sub_100120D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  uint64_t v8 = sub_1000EBBA0(a1, a2, a3, a4, a5, *(void *)((swift_isaMask & *v6) + 0x50), *(void *)((swift_isaMask & *v6) + 0x58));
  if (!v8) {
    return 0;
  }
  if (sub_1000EC2B8(v8) & 1) == 0 || (uint64_t v9 = sub_1000EA248(), (v10))
  {
    swift_release();
    return 0;
  }
  id v11 = [*(id *)((char *)v6 + qword_10078DEA0) *a6 v9];
  swift_release();
  return v11;
}

uint64_t sub_100120E84(char a1)
{
  id v3 = [*(id *)(v1 + qword_10078DEA0) indexPathsForSelectedRows];
  if (!v3) {
    return static Array._allocateUninitialized(_:)();
  }
  uint64_t v4 = v3;
  type metadata accessor for IndexPath();
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = v5;
  if (a1) {
    sub_10012F030((unint64_t *)&v9);
  }
  __chkstk_darwin(v6);
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E328);
  sub_100037EA0(&qword_10078E330, &qword_10078E328);
  uint64_t v7 = Sequence.compactMap<A>(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_100121024(uint64_t a1, int a2)
{
  int v20 = a2;
  uint64_t v4 = swift_isaMask & *v2;
  uint64_t v5 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = &v19[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = &v19[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_100032E7C();
  sub_1000EC14C(a1, v12, v14, v15, v13 & 1, *(void *)(v4 + 80), *(void *)(v4 + 88), (uint64_t)v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_10003B6F8((uint64_t)v7, &qword_10078E8F0);
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v7, v8);
  id v17 = *(id *)((char *)v2 + qword_10078DEA0);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v17 deselectRowAtIndexPath:isa animated:v20 & 1];

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100121268(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10000E324((uint64_t)v4, (SEL *)&selRef_scrollViewWillBeginDragging_);
}

void *sub_1001212D8(uint64_t a1, char a2)
{
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v5 = result;
    if ([result respondsToSelector:"scrollViewDidEndDragging:willDecelerate:"]) {
      [v5 scrollViewDidEndDragging:a1 willDecelerate:a2 & 1];
    }
    return (void *)swift_unknownObjectRelease();
  }
  return result;
}

void sub_10012136C(void *a1, uint64_t a2, void *a3, char a4)
{
  id v6 = a3;
  id v7 = a1;
  sub_1001212D8((uint64_t)v6, a4);
}

void sub_1001213DC(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10000E324((uint64_t)v4, (SEL *)&selRef_scrollViewDidEndDecelerating_);
}

void sub_10012144C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10000E324((uint64_t)v4, (SEL *)&selRef_scrollViewDidEndScrollingAnimation_);
}

uint64_t sub_1001214BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003B694(a1, (uint64_t)&v28, &qword_100788D60);
  if (!*((void *)&v29 + 1))
  {
    id v11 = &qword_100788D60;
LABEL_11:
    sub_10003B6F8((uint64_t)&v28, v11);
    return 0;
  }
  sub_100038E1C(&v28, v43);
  sub_100038DC0((uint64_t)v43, (uint64_t)v39);
  sub_10003B754(&qword_10078E288);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    sub_100038CD8((uint64_t)v43);
    id v11 = (uint64_t *)&unk_10078E290;
    goto LABEL_11;
  }
  sub_100038ED8(&v28, (uint64_t)v40);
  uint64_t v4 = v41;
  uint64_t v5 = v42;
  sub_100038E88((uint64_t)v40, v41);
  id v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = swift_unknownObjectRetain();
  v6(v7, &off_10073B090, v4, v5);
  sub_10012A5BC((uint64_t)v39);
  uint64_t v8 = v41;
  uint64_t v9 = v42;
  sub_100038D28(v40, v41);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v36, v8, v9);
  sub_100038E2C((uint64_t)v39, (uint64_t)v35);
  sub_10003B694((uint64_t)v36, (uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
  sub_10003B694((uint64_t)v35, (uint64_t)v32, (uint64_t *)&unk_1007A3EE0);
  if (!v31)
  {
    sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
    if (!*((void *)&v33 + 1))
    {
      sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  sub_10003B694((uint64_t)&v28, (uint64_t)&v26, (uint64_t *)&unk_1007A3EE0);
  if (!*((void *)&v33 + 1))
  {
    sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
    sub_100038D6C((uint64_t)&v26);
LABEL_17:
    char v13 = (uint64_t *)&unk_10078E2A0;
    goto LABEL_18;
  }
  v24[0] = v32[0];
  v24[1] = v32[1];
  void v24[2] = v33;
  uint64_t v25 = v34;
  if (v26 == *(void *)&v32[0] && v27 == BYTE8(v24[0]))
  {
    char v10 = static AnyHashable.== infix(_:_:)();
    sub_100038D6C((uint64_t)v24);
    sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
    sub_100038D6C((uint64_t)&v26);
    sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
    if ((v10 & 1) == 0) {
      goto LABEL_19;
    }
LABEL_14:
    sub_100038D6C((uint64_t)v39);
    sub_100038CD8((uint64_t)v43);
    sub_100038CD8((uint64_t)v40);
    return 0;
  }
  sub_100038D6C((uint64_t)v24);
  sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
  sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
  sub_100038D6C((uint64_t)&v26);
  char v13 = (uint64_t *)&unk_1007A3EE0;
LABEL_18:
  sub_10003B6F8((uint64_t)&v28, v13);
LABEL_19:
  sub_10003B694(a3, (uint64_t)&v28, (uint64_t *)&unk_10078E278);
  if (*((void *)&v29 + 1))
  {
    sub_100038ED8(&v28, (uint64_t)v36);
  }
  else
  {
    uint64_t v14 = type metadata accessor for TTRITreeViewAnimatingUnanimatedWrapper();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = _swiftEmptyArrayStorage;
    *(void *)(v15 + 24) = _swiftEmptyArrayStorage;
    uint64_t v37 = v14;
    uint64_t v38 = &off_10073B040;
    v36[0] = v15;
    sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_10078E278);
  }
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  sub_100038D28(v40, v41);
  sub_100038E2C((uint64_t)v39, (uint64_t)&v28);
  uint64_t v18 = v37;
  id v19 = v38;
  int v20 = sub_100038D28(v36, v37);
  v35[3] = v18;
  v35[4] = (uint64_t)v19[1];
  uint64_t v21 = sub_1000394A8(v35);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  (*(void (**)(long long *, uint64_t *, uint64_t, uint64_t))(v17 + 40))(&v28, v35, v16, v17);
  sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
  sub_100038CD8((uint64_t)v35);
  uint64_t v22 = v37;
  int v23 = v38;
  sub_100038D28(v36, v37);
  ((void (*)(uint64_t, _UNKNOWN **))v23[2])(v22, v23);
  sub_100038D6C((uint64_t)v39);
  sub_100038CD8((uint64_t)v43);
  sub_100038CD8((uint64_t)v36);
  sub_100038CD8((uint64_t)v40);
  return 1;
}

uint64_t sub_100121960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003B694(a1, (uint64_t)&v28, &qword_100788D60);
  if (!*((void *)&v29 + 1))
  {
    id v11 = &qword_100788D60;
LABEL_11:
    sub_10003B6F8((uint64_t)&v28, v11);
    return 0;
  }
  sub_100038E1C(&v28, v43);
  sub_100038DC0((uint64_t)v43, (uint64_t)v39);
  sub_10003B754(&qword_10078E288);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
    sub_100038CD8((uint64_t)v43);
    id v11 = (uint64_t *)&unk_10078E290;
    goto LABEL_11;
  }
  sub_100038ED8(&v28, (uint64_t)v40);
  uint64_t v4 = v41;
  uint64_t v5 = v42;
  sub_100038E88((uint64_t)v40, v41);
  id v6 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = swift_unknownObjectRetain();
  v6(v7, &off_10073B090, v4, v5);
  sub_10012A7C0((uint64_t)v39);
  uint64_t v8 = v41;
  uint64_t v9 = v42;
  sub_100038D28(v40, v41);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 8))(v36, v8, v9);
  sub_100038E2C((uint64_t)v39, (uint64_t)v35);
  sub_10003B694((uint64_t)v36, (uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
  sub_10003B694((uint64_t)v35, (uint64_t)v32, (uint64_t *)&unk_1007A3EE0);
  if (!v31)
  {
    sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
    if (!*((void *)&v33 + 1))
    {
      sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
      goto LABEL_14;
    }
    goto LABEL_17;
  }
  sub_10003B694((uint64_t)&v28, (uint64_t)&v26, (uint64_t *)&unk_1007A3EE0);
  if (!*((void *)&v33 + 1))
  {
    sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
    sub_100038D6C((uint64_t)&v26);
LABEL_17:
    char v13 = (uint64_t *)&unk_10078E2A0;
    goto LABEL_18;
  }
  v24[0] = v32[0];
  v24[1] = v32[1];
  void v24[2] = v33;
  uint64_t v25 = v34;
  if (v26 == *(void *)&v32[0] && v27 == BYTE8(v24[0]))
  {
    char v10 = static AnyHashable.== infix(_:_:)();
    sub_100038D6C((uint64_t)v24);
    sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
    sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
    sub_100038D6C((uint64_t)&v26);
    sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
    if ((v10 & 1) == 0) {
      goto LABEL_19;
    }
LABEL_14:
    sub_100038D6C((uint64_t)v39);
    sub_100038CD8((uint64_t)v43);
    sub_100038CD8((uint64_t)v40);
    return 0;
  }
  sub_100038D6C((uint64_t)v24);
  sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007A3EE0);
  sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_1007A3EE0);
  sub_100038D6C((uint64_t)&v26);
  char v13 = (uint64_t *)&unk_1007A3EE0;
LABEL_18:
  sub_10003B6F8((uint64_t)&v28, v13);
LABEL_19:
  sub_10003B694(a3, (uint64_t)&v28, (uint64_t *)&unk_10078E278);
  if (*((void *)&v29 + 1))
  {
    sub_100038ED8(&v28, (uint64_t)v36);
  }
  else
  {
    uint64_t v14 = type metadata accessor for TTRITreeViewAnimatingUnanimatedWrapper();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = &_swiftEmptyArrayStorage;
    *(void *)(v15 + 24) = &_swiftEmptyArrayStorage;
    uint64_t v37 = v14;
    uint64_t v38 = &off_10073B040;
    v36[0] = v15;
    sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_10078E278);
  }
  uint64_t v16 = v41;
  uint64_t v17 = v42;
  sub_100038D28(v40, v41);
  sub_100038E2C((uint64_t)v39, (uint64_t)&v28);
  uint64_t v18 = v37;
  id v19 = v38;
  int v20 = sub_100038D28(v36, v37);
  v35[3] = v18;
  v35[4] = (uint64_t)v19[1];
  uint64_t v21 = sub_1000394A8(v35);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v18 - 8) + 16))(v21, v20, v18);
  (*(void (**)(long long *, uint64_t *, uint64_t, uint64_t))(v17 + 40))(&v28, v35, v16, v17);
  sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_1007A3EE0);
  sub_100038CD8((uint64_t)v35);
  uint64_t v22 = v37;
  int v23 = v38;
  sub_100038D28(v36, v37);
  ((void (*)(uint64_t, _UNKNOWN **))v23[2])(v22, v23);
  sub_100038D6C((uint64_t)v39);
  sub_100038CD8((uint64_t)v43);
  sub_100038CD8((uint64_t)v36);
  sub_100038CD8((uint64_t)v40);
  return 1;
}

id sub_100121E04(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10000ADCC(a1, a2, a3, a4, (void (*)(uint64_t))sub_10013DB78);
}

void sub_100121E1C()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  sub_1002ABD5C();
}

uint64_t sub_100121E88(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v11 = a3;
  id v12 = a1;
  sub_10013DD98(a4, (uint64_t)v10);

  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_100121F94(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10001E9C4(a1, a2, a3, a4, &qword_10078DEB0, (uint64_t (*)(uint64_t))sub_100032A20, (uint64_t (*)(void, void, void))type metadata accessor for TTRIAnyTreeViewDataSource, (void (*)(char *, char *))sub_100140934);
}

uint64_t sub_100121FDC(void *a1, uint64_t a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v94 = a3;
  id v87 = a1;
  uint64_t v6 = swift_isaMask & *(void *)v3;
  uint64_t v90 = type metadata accessor for IndexPath();
  uint64_t v89 = *(void *)(v90 - 8);
  uint64_t v7 = __chkstk_darwin(v90);
  unint64_t v91 = (char *)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v88 = (char *)&v82 - v9;
  uint64_t v10 = *(void *)(v6 + 80);
  TupleTypeMetadata2 = (os_log_t)swift_getTupleTypeMetadata2();
  uint64_t v85 = type metadata accessor for Optional();
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v92 = (uint64_t)&v82 - v11;
  uint64_t v83 = swift_getTupleTypeMetadata2();
  __chkstk_darwin(v83);
  uint64_t v82 = (char *)&v82 - v12;
  uint64_t v13 = type metadata accessor for Optional();
  uint64_t v96 = *(void *)(v13 - 8);
  uint64_t v97 = (char *)v13;
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v82 - v15;
  uint64_t v17 = *(void *)(v10 - 8);
  uint64_t v18 = __chkstk_darwin(v14);
  uint64_t v86 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v98 = (char *)&v82 - v21;
  __chkstk_darwin(v20);
  int v23 = (char *)&v82 - v22;
  sub_100032E7C();
  uint64_t v95 = a2;
  uint64_t v24 = sub_10003BA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v24) {
    return result;
  }
  uint64_t v26 = v24 + *(void *)(*(void *)v24 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v23, v26, v10);
  sub_10011F99C((uint64_t)v23, (uint64_t)v16);
  uint64_t v27 = v17;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v10) == 1)
  {
    (*(void (**)(char *, char *))(v96 + 8))(v16, v97);
LABEL_11:
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v53 = type metadata accessor for Logger();
    sub_100018BF8(v53, (uint64_t)qword_10078DE60);
    uint64_t v54 = Logger.logObject.getter();
    os_log_type_t v55 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v54, v55))
    {
      unint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v56 = 0;
      _os_log_impl((void *)&_mh_execute_header, v54, v55, "Unexpected: parent/childIndex not found for item to be moved", v56, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v23, v10);
  }
  long long v28 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  long long v29 = v98;
  v28(v98, v16, v10);
  uint64_t v97 = v23;
  uint64_t v30 = sub_10011FB80((uint64_t)v23);
  if (v31)
  {
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v10);
    int v23 = v97;
    goto LABEL_11;
  }
  uint64_t v32 = v30;
  uint64_t v33 = v92;
  sub_100122B38(v95, v94, 1, 1, v92);
  os_log_t v34 = TupleTypeMetadata2;
  if ((*((unsigned int (**)(uint64_t, uint64_t, os_log_t))TupleTypeMetadata2[-1].isa + 6))(v33, 1, TupleTypeMetadata2) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v33, v85);
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100018BF8(v35, (uint64_t)qword_10078DE60);
    uint64_t v36 = v89;
    uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 16);
    uint64_t v38 = v88;
    uint64_t v39 = v90;
    v37(v88, v95, v90);
    uint64_t v40 = v91;
    v37(v91, (uint64_t)v94, v39);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      TupleTypeMetadata2 = v41;
      uint64_t v44 = v43;
      long long v45 = (char *)swift_slowAlloc();
      uint64_t v96 = v10;
      uint64_t v94 = v45;
      v99[0] = (uint64_t)v45;
      *(_DWORD *)uint64_t v44 = 136315394;
      uint64_t v46 = IndexPath.description.getter();
      *(void *)&long long v100 = sub_1000385A8(v46, v47, v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v95 = v27;
      uint64_t v48 = *(void (**)(char *, uint64_t))(v36 + 8);
      v48(v38, v39);
      *(_WORD *)(v44 + 12) = 2080;
      unint64_t v49 = v91;
      uint64_t v50 = IndexPath.description.getter();
      *(void *)&long long v100 = sub_1000385A8(v50, v51, v99);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v48(v49, v39);
      uint64_t v27 = v95;
      os_log_t v52 = TupleTypeMetadata2;
      _os_log_impl((void *)&_mh_execute_header, TupleTypeMetadata2, v42, "Unexpected: cannot find target parent/index for moving. {from: %s, to: %s}", (uint8_t *)v44, 0x16u);
      swift_arrayDestroy();
      uint64_t v10 = v96;
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {
      swift_release();
      unint64_t v75 = *(void (**)(char *, uint64_t))(v36 + 8);
      v75(v38, v39);
      v75(v40, v39);
    }
    char v76 = v97;
    uint64_t v77 = *(void (**)(char *, uint64_t))(v27 + 8);
    v77(v98, v10);
    return ((uint64_t (*)(char *, uint64_t))v77)(v76, v10);
  }
  else
  {
    uint64_t v96 = *(void *)(v33 + SLODWORD(v34[6].isa));
    uint64_t v94 = v4;
    uint64_t v57 = v10;
    uint64_t v58 = (char *)v32;
    uint64_t v59 = v83;
    uint64_t v60 = *(int *)(v83 + 48);
    uint64_t v61 = v82;
    v28(v82, (char *)v33, v57);
    *(void *)&v61[v60] = v96;
    uint64_t v62 = *(char **)&v61[*(int *)(v59 + 48)];
    uint64_t v63 = v86;
    uint64_t v96 = v57;
    uint64_t v64 = v57;
    uint64_t v65 = v94;
    v28(v86, v61, v64);
    uint64_t v66 = sub_1000329D0(&qword_10078DEB0, (uint64_t (*)(uint64_t))sub_100032A20);
    uint64_t v67 = v97;
    uint64_t v68 = v98;
    if (v66)
    {
      id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      sub_1002ABDB0();
      swift_release();
    }
    __chkstk_darwin(v66);
    *(&v82 - 6) = v65;
    *(&v82 - 5) = v67;
    *(&v82 - 4) = v58;
    *(&v82 - 3) = v68;
    *(&v82 - 2) = v62;
    *(&v82 - 1) = v63;
    sub_1001242AC((uint64_t)sub_1001408E8);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v71 = [v87 cellForRowAtIndexPath:isa];

    id v72 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:3 curve:0 animations:0.3];
    uint64_t v73 = type metadata accessor for TTRITreeViewAnimatingWrapper();
    uint64_t v74 = swift_allocObject();
    *(void *)(v74 + 16) = v72;
    if (v71)
    {
      *((void *)&v101 + 1) = sub_1000368FC(0, (unint64_t *)&qword_10078E270);
      *(void *)&long long v100 = v71;
    }
    else
    {
      long long v100 = 0u;
      long long v101 = 0u;
    }
    v99[3] = v73;
    v99[4] = (uint64_t)&off_10073B078;
    v99[0] = v74;
    id v78 = v72;
    id v79 = v71;
    swift_retain();
    sub_100038838((uint64_t)&v100, v24, (uint64_t)v99);
    swift_release();
    swift_release();

    uint64_t v80 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v81 = v96;
    v80(v63, v96);
    v80(v68, v81);
    v80(v67, v81);
    sub_10003B6F8((uint64_t)v99, (uint64_t *)&unk_10078E278);
    return sub_10003B6F8((uint64_t)&v100, &qword_100788D60);
  }
}

uint64_t sub_100122B38@<X0>(uint64_t a1@<X0>, char *a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X8>)
{
  int v165 = a4;
  LODWORD(v181) = a3;
  v180 = a2;
  uint64_t v183 = a5;
  uint64_t v7 = *(void *)((swift_isaMask & *v5) + 0x58);
  uint64_t v8 = *(void *)((swift_isaMask & *v5) + 0x50);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v158 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v157 = (char *)&v156 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  int64_t v160 = (char *)&v156 - v11;
  uint64_t v12 = type metadata accessor for Optional();
  uint64_t v176 = *(void *)(v12 - 8);
  uint64_t v177 = v12;
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v161 = (uint64_t)&v156 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v170 = (char *)&v156 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v168 = (uint64_t)&v156 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v167 = (uint64_t)&v156 - v20;
  __chkstk_darwin(v19);
  uint64_t v166 = (uint64_t)&v156 - v21;
  uint64_t v174 = v7;
  uint64_t v22 = (char *)type metadata accessor for TTRITreeViewTableAdapter.MoveDestination();
  uint64_t v23 = *((void *)v22 - 1);
  uint64_t v24 = __chkstk_darwin(v22);
  int v172 = (char *)&v156 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  long long v28 = (char *)&v156 - v27;
  uint64_t v29 = __chkstk_darwin(v26);
  char v31 = (char *)&v156 - v30;
  uint64_t v179 = v8;
  uint64_t v184 = *(void *)(v8 - 8);
  uint64_t v32 = __chkstk_darwin(v29);
  unint64_t v162 = (char *)&v156 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  int v163 = (char *)&v156 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  int v169 = (char *)&v156 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  uint64_t v40 = (char *)&v156 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  uint64_t v43 = (char *)&v156 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  uint64_t v46 = (char *)&v156 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  unint64_t v49 = (char *)&v156 - v48;
  uint64_t v50 = __chkstk_darwin(v47);
  int64_t v164 = (char *)&v156 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  uint64_t v171 = (char *)&v156 - v53;
  __chkstk_darwin(v52);
  uint64_t v175 = (char *)&v156 - v54;
  uint64_t v173 = a1;
  __int16 v178 = v5;
  sub_10012C840(v180, v181, (uint64_t)v31);
  uint64_t v181 = v23;
  uint64_t v182 = v31;
  uint64_t v57 = *(void (**)(char *, char *, char *))(v23 + 16);
  os_log_type_t v55 = (void (*)(char *, char *))(v23 + 16);
  unint64_t v56 = v57;
  v57(v28, v31, v22);
  v180 = v22;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v156 = v56;
      uint64_t v64 = v184;
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v184 + 32);
      uint64_t v63 = v179;
      v65(v43, v28, v179);
      uint64_t v66 = v168;
      sub_10011F99C((uint64_t)v43, v168);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48))(v66, 1, v63) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v66, v177);
      }
      else
      {
        v65(v40, (char *)v66, v63);
        uint64_t v92 = sub_10011FB80((uint64_t)v43);
        if ((v93 & 1) == 0)
        {
          uint64_t v170 = (char *)v92;
          (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v63);
          uint64_t v74 = v175;
          unint64_t v75 = v40;
          goto LABEL_18;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v40, v63);
      }
      uint64_t v106 = v183;
      char v108 = v180;
      uint64_t v107 = v181;
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v130 = type metadata accessor for Logger();
      sub_100018BF8(v130, (uint64_t)qword_10078DE60);
      uint64_t v131 = Logger.logObject.getter();
      os_log_type_t v132 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v131, v132))
      {
        char v133 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v133 = 0;
        _os_log_impl((void *)&_mh_execute_header, v131, v132, "Missing parent/childIndex", v133, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v64 + 8))(v43, v63);
      goto LABEL_53;
    case 2u:
      uint64_t v156 = v56;
      uint64_t v67 = v184;
      uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v184 + 32);
      uint64_t v68 = v169;
      uint64_t v63 = v179;
      v65(v169, v28, v179);
      id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v70 = (uint64_t)v170;
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v170, v68, v63);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v70, 0, 1, v63);
      uint64_t v71 = sub_10054FFA8(v70);
      char v73 = v72;

      (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v70, v177);
      if (v73)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v102 = type metadata accessor for Logger();
        sub_100018BF8(v102, (uint64_t)qword_10078DE60);
        char v103 = Logger.logObject.getter();
        os_log_type_t v104 = static os_log_type_t.fault.getter();
        BOOL v105 = os_log_type_enabled(v103, v104);
        uint64_t v106 = v183;
        char v108 = v180;
        uint64_t v107 = v181;
        if (v105)
        {
          uint64_t v109 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v109 = 0;
          _os_log_impl((void *)&_mh_execute_header, v103, v104, "Missing parent child count", v109, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v67 + 8))(v68, v63);
        goto LABEL_53;
      }
      uint64_t v170 = (char *)v71;
      uint64_t v74 = v175;
      unint64_t v75 = v68;
LABEL_18:
      uint64_t v171 = (char *)v65;
      v65(v74, v75, v63);
      uint64_t v91 = v183;
      uint64_t v84 = v180;
      uint64_t v83 = v181;
      goto LABEL_19;
    case 3u:
      uint64_t v156 = v56;
      sub_100032E7C();
      uint64_t v63 = v179;
      uint64_t v76 = sub_10003BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v76)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v110 = type metadata accessor for Logger();
        sub_100018BF8(v110, (uint64_t)qword_10078DE60);
        uint64_t v111 = Logger.logObject.getter();
        os_log_type_t v112 = static os_log_type_t.fault.getter();
        BOOL v113 = os_log_type_enabled(v111, v112);
        uint64_t v106 = v183;
        char v108 = v180;
        uint64_t v107 = v181;
        if (v113)
        {
          uint64_t v114 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v114 = 0;
          _os_log_impl((void *)&_mh_execute_header, v111, v112, "Unexpected: node not found at sourceIndexPath", v114, 2u);
          swift_slowDealloc();
        }

LABEL_53:
        (*(void (**)(char *, char *))(v107 + 8))(v182, v108);
        goto LABEL_54;
      }
      uint64_t v77 = v76 + *(void *)(*(void *)v76 + 144);
      swift_beginAccess();
      uint64_t v78 = v184;
      uint64_t v79 = (uint64_t)v171;
      (*(void (**)(char *, uint64_t, uint64_t))(v184 + 16))(v171, v77, v63);
      uint64_t v80 = v166;
      sub_10011F99C(v79, v166);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v80, 1, v63) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v80, v177);
        uint64_t v82 = v182;
        uint64_t v81 = v183;
        uint64_t v84 = v180;
        uint64_t v83 = v181;
      }
      else
      {
        uint64_t v115 = *(void (**)(char *, uint64_t, uint64_t))(v78 + 32);
        uint64_t v116 = v164;
        v115(v164, v80, v63);
        uint64_t v170 = (char *)sub_10011FB80(v79);
        uint64_t v117 = v79;
        uint64_t v84 = v180;
        uint64_t v83 = v181;
        uint64_t v118 = v182;
        if ((v119 & 1) == 0)
        {
          (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v117, v63);
          swift_release();
          uint64_t v171 = (char *)v115;
          v115(v175, (uint64_t)v116, v63);
          uint64_t v91 = v183;
          uint64_t v94 = v172;
          uint64_t v59 = v118;
          goto LABEL_20;
        }
        (*(void (**)(char *, uint64_t))(v78 + 8))(v116, v63);
        uint64_t v81 = v183;
        uint64_t v82 = v118;
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v134 = type metadata accessor for Logger();
      sub_100018BF8(v134, (uint64_t)qword_10078DE60);
      uint64_t v135 = Logger.logObject.getter();
      os_log_type_t v136 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v135, v136))
      {
        id v137 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v137 = 0;
        _os_log_impl((void *)&_mh_execute_header, v135, v136, "Unexpected: parent/childIndex not found for item to be moved", v137, 2u);
        swift_slowDealloc();
      }
      swift_release();

      (*(void (**)(char *, uint64_t))(v184 + 8))(v171, v63);
      (*(void (**)(char *, char *))(v83 + 8))(v82, v84);
      goto LABEL_61;
    case 4u:
      (*(void (**)(char *, char *))(v181 + 8))(v182, v180);
      goto LABEL_12;
    default:
      uint64_t v58 = v184;
      uint64_t v59 = (char *)(v184 + 32);
      uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v184 + 32);
      uint64_t v61 = v179;
      v60(v49, v28, v179);
      uint64_t v62 = v167;
      sub_10011F99C((uint64_t)v49, v167);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v62, 1, v61) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v62, v177);
        uint64_t v63 = v61;
        goto LABEL_42;
      }
      uint64_t v156 = v56;
      v60(v46, (char *)v62, v61);
      uint64_t v88 = sub_10011FB80((uint64_t)v49);
      uint64_t v63 = v61;
      if (v89)
      {
        (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v61);
LABEL_42:
        uint64_t v81 = v183;
        uint64_t v125 = v180;
        uint64_t v124 = v181;
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v126 = type metadata accessor for Logger();
        sub_100018BF8(v126, (uint64_t)qword_10078DE60);
        unint64_t v127 = Logger.logObject.getter();
        os_log_type_t v128 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v127, v128))
        {
          uint64_t v129 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v129 = 0;
          _os_log_impl((void *)&_mh_execute_header, v127, v128, "Missing parent/childIndex", v129, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v63);
        (*(void (**)(char *, char *))(v124 + 8))(v182, v125);
LABEL_61:
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
        uint64_t v87 = v81;
        return v86(v87, 1, 1, TupleTypeMetadata2);
      }
      uint64_t v90 = v88;
      (*(void (**)(char *, uint64_t))(v58 + 8))(v49, v61);
      uint64_t v171 = (char *)v60;
      v60(v175, v46, v61);
      uint64_t v170 = (char *)(v90 + 1);
      uint64_t v84 = v180;
      uint64_t v83 = v181;
      if (__OFADD__(v90, 1))
      {
        __break(1u);
LABEL_76:
        swift_once();
LABEL_72:
        uint64_t v151 = type metadata accessor for Logger();
        sub_100018BF8(v151, (uint64_t)qword_10078DE60);
        int64_t v152 = Logger.logObject.getter();
        os_log_type_t v153 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v152, v153))
        {
          uint64_t v154 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v154 = 0;
          _os_log_impl((void *)&_mh_execute_header, v152, v153, "Unexpected: parent/childIndex not found for item to be moved", v154, 2u);
          uint64_t v46 = v163;
          swift_slowDealloc();
        }
        swift_release();

        uint64_t v155 = *(void (**)(char *, uint64_t))(v184 + 8);
        v155(v46, v63);
        v55(v59, v84);
        v155(v175, v63);
LABEL_12:
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
        uint64_t v87 = v183;
        return v86(v87, 1, 1, TupleTypeMetadata2);
      }
      uint64_t v91 = v183;
LABEL_19:
      uint64_t v59 = v182;
      uint64_t v94 = v172;
LABEL_20:
      v156(v94, v59, v84);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      os_log_type_t v55 = *(void (**)(char *, char *))(v83 + 8);
      if (EnumCaseMultiPayload == 3)
      {
        v55(v59, v84);
        uint64_t v96 = v94;
LABEL_39:
        v55(v96, v84);
        uint64_t v120 = v170;
LABEL_40:
        uint64_t v121 = swift_getTupleTypeMetadata2();
        uint64_t v122 = *(int *)(v121 + 48);
        ((void (*)(uint64_t, char *, uint64_t))v171)(v91, v175, v63);
        *(void *)(v91 + v122) = v120;
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v91, 0, 1, v121);
      }
      v55(v94, v84);
      if ((v165 & 1) == 0)
      {
        uint64_t v96 = v59;
        goto LABEL_39;
      }
      sub_100032E7C();
      uint64_t v97 = sub_10003BA80();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v97)
      {
        uint64_t v98 = *(void *)(*(void *)v97 + 144);
        uint64_t v181 = v97;
        uint64_t v99 = v97 + v98;
        swift_beginAccess();
        uint64_t v100 = v184;
        uint64_t v46 = v163;
        (*(void (**)(char *, uint64_t, uint64_t))(v184 + 16))(v163, v99, v63);
        uint64_t v101 = v161;
        sub_10011F99C((uint64_t)v46, v161);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v100 + 48))(v101, 1, v63) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v176 + 8))(v101, v177);
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t))v171)(v162, v101, v63);
          uint64_t v142 = (char *)sub_10011FB80((uint64_t)v46);
          if ((v143 & 1) == 0)
          {
            uint64_t v144 = v174;
            int64_t v145 = *(void (**)(uint64_t, uint64_t))(v174 + 24);
            v180 = v142;
            v145(v63, v174);
            int64_t v146 = v157;
            v145(v63, v144);
            uint64_t v147 = AssociatedTypeWitness;
            swift_getAssociatedConformanceWitness();
            unsigned __int8 v148 = dispatch thunk of static Equatable.== infix(_:_:)();
            swift_release();
            int v149 = *(void (**)(char *, uint64_t))(v158 + 8);
            v149(v146, v147);
            v149(v160, v147);
            int64_t v150 = *(void (**)(char *, uint64_t))(v100 + 8);
            v150(v162, v63);
            v150(v163, v63);
            v55(v182, v84);
            uint64_t v120 = &v170[-(v148 & ((uint64_t)v180 < (uint64_t)v170))];
            uint64_t v91 = v183;
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v100 + 8))(v162, v63);
        }
        if (qword_1007852B8 == -1) {
          goto LABEL_72;
        }
        goto LABEL_76;
      }
      uint64_t v106 = v183;
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v138 = type metadata accessor for Logger();
      sub_100018BF8(v138, (uint64_t)qword_10078DE60);
      char v139 = Logger.logObject.getter();
      os_log_type_t v140 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v139, v140))
      {
        uint64_t v141 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v141 = 0;
        _os_log_impl((void *)&_mh_execute_header, v139, v140, "Unexpected: node not found at sourceIndexPath", v141, 2u);
        swift_slowDealloc();
      }

      v55(v59, v84);
      (*(void (**)(char *, uint64_t))(v184 + 8))(v175, v63);
LABEL_54:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);
      uint64_t v87 = v106;
      return v86(v87, 1, 1, TupleTypeMetadata2);
  }
}

uint64_t sub_1001240B8(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v20 = a6;
  uint64_t v21 = a2;
  uint64_t v22 = a3;
  uint64_t v23 = a5;
  uint64_t v7 = *(void *)((swift_isaMask & *a1) + 0x50);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(v7 - 8);
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v16((char *)&v20 - v13, a4, v7);
  uint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v17(v14, 0, 1, v7);
  v16(v12, v20, v7);
  v17(v12, 0, 1, v7);
  sub_10011CADC(v21, v22, (uint64_t)v14, v23, (uint64_t)v12);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v9 + 8);
  v18(v12, v8);
  return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
}

void sub_1001242AC(uint64_t a1)
{
  if (*(void *)(v1 + qword_10078DEE0))
  {
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10078DE60);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v7, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v3, "performBatchUpdateWithoutTableViewUpdates cannot be called during a batch update", v4, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    v6[2] = __chkstk_darwin(a1);
    v6[3] = v5;
    sub_10011B0C0((void (*)(uint64_t))sub_1000218B8, (uint64_t)v6, (void (*)(uint64_t))sub_1001408F8, 0, 0, 0);
  }
}

uint64_t sub_10012441C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v16 - v10;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  sub_100121FDC(v12, (uint64_t)v11, v9);

  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v14)(v11, v5);
}

uint64_t sub_100124568(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)v13 - v7;
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v10 = a2 + *(void *)(*(void *)a2 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v10, v5);
  sub_1000239DC();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v15[3] = sub_1000368FC(0, (unint64_t *)&qword_10078E270);
  uint64_t v14 = 0;
  v15[0] = a1;
  memset(v13, 0, sizeof(v13));
  id v11 = a1;
  sub_100038838((uint64_t)v15, a2, (uint64_t)v13);
  sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_10078E278);
  return sub_10003B6F8((uint64_t)v15, &qword_100788D60);
}

void sub_100124734(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  sub_10000E928(v9, a5, (void (*)(void *, id, char *))sub_1000BCD74);
}

uint64_t sub_1001247D0(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10001E9C4(a1, a2, a3, a4, &qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20, (uint64_t (*)(void, void, void))type metadata accessor for TTRIAnyTreeViewDelegate, (void (*)(char *, char *))sub_1001408B8);
}

uint64_t sub_100124818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_isaMask & *v3;
  uint64_t v12 = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  void v11[2] = *(void *)(v7 + 80);
  _OWORD v11[3] = *(void *)(v7 + 88);
  v11[4] = a2;
  void v11[5] = a3;
  uint64_t v8 = type metadata accessor for TTRIAnyTreeViewDelegate();
  sub_100032AC4(a1, (uint64_t)&v12, v9, (void (*)(char *, char *))sub_1001404F0, (uint64_t)v11, v8, (uint64_t)&type metadata for () + 8, (uint64_t)&type metadata for ());
  return swift_release();
}

uint64_t sub_100124908(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013DE74);
}

void sub_100124920(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_10013DEB0();
}

double sub_100124980(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  double v8 = sub_10002EFAC(a4, sub_10002F5D8, (uint64_t (*)(void, void, void))type metadata accessor for TTRIAnyTreeViewSectionFooterViewProviding, (void (*)(char *, char *))sub_100140858);

  return v8;
}

id sub_100124A18(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  double v8 = (void *)sub_10000E67C(a4, (uint64_t)sub_10002F5D8, (uint64_t (*)(void *, char *, uint64_t))sub_10003FEB4);

  return v8;
}

uint64_t sub_100124AA4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013DF44);
}

uint64_t sub_100124ABC(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10001E9C4(a1, a2, a3, a4, &qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20, (uint64_t (*)(void, void, void))type metadata accessor for TTRIAnyTreeViewDelegate, (void (*)(char *, char *))sub_1001407F8);
}

uint64_t sub_100124B04(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013DF80);
}

uint64_t sub_100124B1C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013DFBC);
}

uint64_t sub_100124B34@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([a1 isEditing]
    && (Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
        id v12 = [a1 cellForRowAtIndexPath:isa],
        isa,
        v12)
    && (unsigned int v13 = [v12 isSelected], v12, v13))
  {
    uint64_t v14 = type metadata accessor for IndexPath();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a3, 1, 1, v14);
  }
  else
  {
    uint64_t v17 = type metadata accessor for IndexPath();
    uint64_t v18 = *(void *)(v17 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v10, a2, v17);
    uint64_t v19 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v10, 0, 1, v17);
    __chkstk_darwin(v19);
    *(&v20 - 2) = v4;
    *(&v20 - 1) = (uint64_t)v10;
    sub_100124818(a2, (uint64_t)sub_100140734, (uint64_t)(&v20 - 4));
    return sub_100028C3C((uint64_t)v10, a3, &qword_10078E8F0);
  }
}

Class sub_100124D6C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  sub_100124B34(v12, (uint64_t)v8, (uint64_t)v11);

  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14(v11, v5);
  }

  return isa;
}

uint64_t sub_100124F1C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, a1, v5);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a2, 0, 1, v5);
  uint64_t v9 = v2;
  uint64_t v10 = a2;
  return sub_100124818(a1, (uint64_t)sub_100140688, (uint64_t)&v8);
}

uint64_t sub_100125008(uint64_t *a1, uint64_t a2, char *a3, uint64_t a4, void (*a5)(void *, uint64_t), void (*a6)(char *, char *))
{
  uint64_t v71 = a6;
  uint64_t v72 = a4;
  uint64_t v74 = a5;
  uint64_t v8 = *a1;
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v70 = (uint64_t)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v8 + 88);
  uint64_t v12 = *(void *)(v8 + 80);
  uint64_t v77 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v66 = (char *)&v66 - v14;
  uint64_t v83 = v15;
  uint64_t v16 = type metadata accessor for Optional();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v68 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v17 = __chkstk_darwin(TupleTypeMetadata2);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v80 = *(void *)(v16 - 8);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v67 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v78 = (char *)&v66 - v23;
  __chkstk_darwin(v22);
  uint64_t v82 = (char *)&v66 - v24;
  uint64_t v25 = type metadata accessor for Optional();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v29 = (char *)&v66 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  char v31 = (void (*)(void *, uint64_t))((char *)&v66 - v30);
  uint64_t v69 = a3;
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v73 = a2;
  v74(Strong, a2);

  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  uint64_t v74 = v31;
  v33(v29, (char *)v31, v25);
  uint64_t v34 = *(void *)(v12 - 8);
  int v35 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 1, v12);
  uint64_t v75 = v26;
  uint64_t v76 = v25;
  if (v35 == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v25);
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
    v36(v82, 1, 1, v83);
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v77 + 24);
  }
  else
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v77 + 24);
    uint64_t v38 = v82;
    v37(v12, v77);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v29, v12);
    uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 + 56);
    v36(v38, 0, 1, v83);
  }
  uint64_t v39 = v78;
  uint64_t v73 = v12;
  ((void (*)(uint64_t))v37)(v12);
  uint64_t v40 = v83;
  v36(v39, 0, 1, v83);
  uint64_t v41 = v80;
  uint64_t v42 = &v19[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
  v43(v19, v82, v16);
  v43(v42, v39, v16);
  uint64_t v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v81 + 48);
  if (v44(v19, 1, v40) == 1)
  {
    uint64_t v45 = v19;
    uint64_t v46 = *(void (**)(char *, uint64_t))(v41 + 8);
    v46(v39, v16);
    v46(v82, v16);
    int v47 = v44(v42, 1, v83);
    uint64_t v49 = v75;
    uint64_t v48 = v76;
    if (v47 == 1)
    {
      v46(v19, v16);
      return (*(uint64_t (**)(void, uint64_t))(v49 + 8))(v74, v48);
    }
    goto LABEL_9;
  }
  uint64_t v50 = v82;
  uint64_t v51 = v67;
  v43(v67, v19, v16);
  if (v44(v42, 1, v83) == 1)
  {
    uint64_t v45 = v19;
    uint64_t v52 = *(void (**)(char *, uint64_t))(v80 + 8);
    v52(v78, v16);
    v52(v50, v16);
    (*(void (**)(char *, uint64_t))(v81 + 8))(v51, v83);
    uint64_t v49 = v75;
    uint64_t v48 = v76;
LABEL_9:
    uint64_t v53 = (*(uint64_t (**)(char *, uint64_t))(v68 + 8))(v45, TupleTypeMetadata2);
    goto LABEL_12;
  }
  uint64_t v54 = v81;
  os_log_type_t v55 = v51;
  unint64_t v56 = v66;
  uint64_t v57 = v83;
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v66, v42, v83);
  swift_getAssociatedConformanceWitness();
  char v58 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v56, v57);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v80 + 8);
  v60(v78, v16);
  v60(v50, v16);
  v59(v55, v57);
  uint64_t v53 = ((uint64_t (*)(char *, uint64_t))v60)(v19, v16);
  uint64_t v49 = v75;
  uint64_t v48 = v76;
  if (v58) {
    return (*(uint64_t (**)(void, uint64_t))(v49 + 8))(v74, v48);
  }
LABEL_12:
  __chkstk_darwin(v53);
  *(&v66 - 2) = v69;
  uint64_t v62 = type metadata accessor for IndexPath();
  uint64_t v63 = v70;
  uint64_t v64 = v74;
  sub_100118F10(v71, (uint64_t)(&v66 - 4), (uint64_t)&type metadata for Never, v62, v65, v70);
  (*(void (**)(void, uint64_t))(v49 + 8))(v64, v48);
  return sub_1001406CC(v63, v72);
}

uint64_t sub_10012581C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = swift_isaMask & *a2;
  uint64_t v6 = sub_100032E7C();
  sub_1000EC14C(a1, v6, v8, v9, v7 & 1, *(void *)(v5 + 80), *(void *)(v5 + 88), a3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Class sub_1001258E4(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  sub_100124F1C((uint64_t)v8, (uint64_t)v11);

  uint64_t v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v8, v5);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) != 1)
  {
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    v14(v11, v5);
  }

  return isa;
}

uint64_t sub_100125A90(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013DFF8);
}

uint64_t sub_100125AA8(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013E034);
}

void sub_100125AC0(uint64_t *a1@<X8>)
{
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v3 = sub_1000BCF08();

  *a1 = v3;
}

uint64_t sub_100125B18(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  uint64_t v11 = sub_10013E070((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

id sub_100125C18(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125CB0(a1, a2, a3, a4, (void (*)(char *, char *))sub_1001405F0);
}

void sub_100125C30(uint64_t a1@<X0>, uint64_t (*a2)(void *, uint64_t)@<X3>, uint64_t *a3@<X8>)
{
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v7 = a2(Strong, a1);

  *a3 = v7;
}

id sub_100125C98(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125CB0(a1, a2, a3, a4, (void (*)(char *, char *))sub_1001405C0);
}

id sub_100125CB0(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  uint64_t v14 = (void *)sub_10013E15C((uint64_t)v11, a5);

  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);

  return v14;
}

uint64_t sub_100125DD0(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  LOBYTE(a1) = sub_10013E23C((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return a1 & 1;
}

void sub_100125ED0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(id, uint64_t))
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  a4(Strong, a2);
}

uint64_t sub_100125F40(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_100125F58(a1, a2, a3, a4, (void (*)(char *))sub_10013E324);
}

uint64_t sub_100125F58(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(char *))
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v12 = a3;
  id v13 = a1;
  a5(v11);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

void sub_100126060(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a2, (uint64_t)v6, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, &qword_10078E8F0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    id v12 = [a1 cellForRowAtIndexPath:isa];

    if (v12)
    {
      [v12 setEditing:0 animated:0];
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  if (sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20))
  {
    id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1000BCFD4();
    swift_release();
  }
}

uint64_t sub_100126288(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  id v12 = a3;
  id v13 = a1;
  sub_100126060(v12, (uint64_t)v9);

  return sub_10003B6F8((uint64_t)v9, &qword_10078E8F0);
}

uint64_t sub_1001263BC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

Class sub_100126428()
{
  uint64_t v0 = type metadata accessor for IndexPath();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v2);
  uint64_t v7 = (char *)&v13 - v6;
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v13 - v8;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  sub_1001263BC((uint64_t)v4, (uint64_t)v9);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
  v10(v4, v0);
  v10(v7, v0);
  v11.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  v10(v9, v0);

  return v11.super.isa;
}

uint64_t sub_1001265A4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10001E9C4(a1, a2, a3, a4, &qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20, (uint64_t (*)(void, void, void))type metadata accessor for TTRIAnyTreeViewDelegate, (void (*)(char *, char *))sub_100140530);
}

void sub_1001265EC(unsigned char *a1@<X8>)
{
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  char v3 = sub_1000BD054();

  *a1 = v3 & 1;
}

uint64_t sub_100126660(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  if (a6)
  {
    id v14 = a3;
    id v15 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v20, 0, sizeof(v20));
    id v16 = a3;
    id v17 = a1;
  }
  char v18 = sub_10013E360(a4, (uint64_t)v13, (uint64_t)v20);

  sub_10003B6F8((uint64_t)v20, &qword_100788D60);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v18 & 1;
}

void sub_1001267B4()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  sub_1000BD080();
}

uint64_t sub_10012682C(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  if (a6)
  {
    id v14 = a3;
    id v15 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
    id v16 = a3;
    id v17 = a1;
  }
  sub_10013E458(a4, (uint64_t)v13, (uint64_t)v19);

  sub_10003B6F8((uint64_t)v19, &qword_100788D60);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_100126978(uint64_t a1, uint64_t a2, double a3, double a4)
{
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  [Strong convertPoint:a1 fromCoordinateSpace:a3];
  uint64_t v11 = v10;
  uint64_t v13 = v12;

  uint64_t v21 = 0;
  uint64_t v22 = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  uint64_t v18 = v4;
  uint64_t v19 = v11;
  uint64_t v20 = v13;
  uint64_t v14 = type metadata accessor for TTRIAnyTreeViewDelegate();
  uint64_t v15 = sub_10003B754(&qword_10078E3B8);
  sub_100032AC4(a2, (uint64_t)&v22, (uint64_t)&v21, (void (*)(char *, char *))sub_1001404D8, (uint64_t)&v17, v14, v15, (uint64_t)&v23);
  swift_release();
  return v23;
}

void sub_100126ABC(uint64_t *a1@<X8>)
{
  id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v3 = sub_1000BD124();

  *a1 = v3;
}

id sub_100126B2C(void *a1, double a2, double a3, uint64_t a4, void *a5)
{
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v13 = a5;
  id v14 = a1;
  uint64_t v15 = (void *)sub_100126978((uint64_t)v13, (uint64_t)v12, a2, a3);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);

  return v15;
}

void sub_100126C58(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  id v8 = a3;
  id v9 = a4;
  swift_unknownObjectRetain();
  id v10 = a1;
  sub_10013E49C((uint64_t)v9, a5, (void (*)(id, uint64_t, uint64_t))sub_1000BD1A0);

  swift_unknownObjectRelease();
}

void sub_100126D04(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
}

void sub_100126D1C(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
}

void sub_100126D34(void *a1, uint64_t a2, void *a3, void *a4, uint64_t a5, void (*a6)(id, uint64_t, uint64_t))
{
  id v10 = a3;
  id v11 = a4;
  swift_unknownObjectRetain();
  id v12 = a1;
  sub_10013E49C((uint64_t)v11, a5, a6);

  swift_unknownObjectRelease();
}

uint64_t sub_100126DD4(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  return sub_10001E9C4(a1, a2, a3, a4, &qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20, (uint64_t (*)(void, void, void))type metadata accessor for TTRIAnyTreeViewDelegate, (void (*)(char *, char *))sub_1001404A8);
}

uint64_t sub_100126E1C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  LOBYTE(a4) = sub_10013E560(a4, 1, (void (*)(char *, char *))sub_100140478);

  return a4 & 1;
}

uint64_t sub_100126E88(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  id v7 = a1;
  LOBYTE(a4) = sub_10013E560(a4, 0, (void (*)(char *, char *))sub_100140448);

  return a4 & 1;
}

void sub_100126EF4()
{
  if (sub_1000329D0(&qword_10078DEC0, (uint64_t (*)(uint64_t))sub_1002ABEC0))
  {
    uint64_t v1 = TTRListContentsPrefetchExtender.extendFetchIndexPaths(_:sectionCountProvider:rowCountProvider:)();
    __chkstk_darwin(v1);
    sub_10003B754(&qword_10078E328);
    sub_100037EA0(&qword_10078E330, &qword_10078E328);
    Sequence.compactMap<A>(_:)();
    swift_bridgeObjectRelease();
    id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    sub_1002ABDD8();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001270C8@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = swift_isaMask & *a1;
  sub_100032E7C();
  uint64_t v4 = *(void *)(v3 + 80);
  uint64_t v5 = sub_10003BA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a2, 1, 1, v4);
  }
  uint64_t v6 = v5 + *(void *)(*(void *)v5 + 144);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a2, v6, v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a2, 0, 1, v4);
}

uint64_t sub_100127288(void *a1, uint64_t a2, void *a3)
{
  type metadata accessor for IndexPath();
  static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = a3;
  id v6 = a1;
  sub_100126EF4();

  return swift_bridgeObjectRelease();
}

id sub_100127308(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v46 = a3;
  int v47 = a2;
  uint64_t v6 = *(void *)((swift_isaMask & *v4) + 0x50);
  uint64_t v49 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v45 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v48 = (char *)&v43 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = type metadata accessor for Optional();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v13);
  uint64_t v18 = (char *)&v43 - v17;
  type metadata accessor for TTRITreeViewContextMenuItemIdentifier();
  sub_100585274(a1, AssociatedTypeWitness, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v43 = v16;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, AssociatedTypeWitness);
    sub_100032E7C();
    uint64_t v44 = v18;
    uint64_t v23 = sub_1000EBD88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v23)
    {
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100018BF8(v30, (uint64_t)qword_10078DE60);
      char v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.default.getter();
      BOOL v33 = os_log_type_enabled(v31, v32);
      uint64_t v34 = v44;
      if (v33)
      {
        int v35 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v35 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "TTRITreeViewTableAdapter: unable to generate UITargetedPreview; item may have been deleted",
          v35,
          2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v43 + 8))(v34, AssociatedTypeWitness);
      return 0;
    }
    uint64_t v24 = v23 + *(void *)(*(void *)v23 + 144);
    swift_beginAccess();
    uint64_t v25 = v49;
    uint64_t v26 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v45, v24, v6);
    swift_release();
    uint64_t v27 = (uint64_t)v48;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v48, v26, v6);
    uint64_t v28 = v47(v27);
    if (v28)
    {
      id v29 = (id)v28;
    }
    else
    {
      id v36 = sub_1001208E8(v27);
      if (!v36)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v39 = type metadata accessor for Logger();
        sub_100018BF8(v39, (uint64_t)qword_10078DE60);
        uint64_t v40 = Logger.logObject.getter();
        os_log_type_t v41 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v40, v41))
        {
          uint64_t v42 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v42 = 0;
          _os_log_impl((void *)&_mh_execute_header, v40, v41, "TTRITreeViewTableAdapter: unable to generate UITargetedPreview; cell not found",
            v42,
            2u);
          swift_slowDealloc();
        }

        (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v6);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v44, AssociatedTypeWitness);
        return 0;
      }
      uint64_t v37 = v36;
      id v29 = [objc_allocWithZone((Class)UITargetedPreview) initWithView:v36];
    }
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v27, v6);
    (*(void (**)(char *, uint64_t))(v43 + 8))(v44, AssociatedTypeWitness);
    return v29;
  }
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  if (qword_1007852B8 != -1) {
    swift_once();
  }
  uint64_t v19 = type metadata accessor for Logger();
  sub_100018BF8(v19, (uint64_t)qword_10078DE60);
  uint64_t v20 = Logger.logObject.getter();
  os_log_type_t v21 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "TTRITreeViewTableAdapter: unexpected type for context menu item ID", v22, 2u);
    swift_slowDealloc();
  }

  return 0;
}

uint64_t sub_10012797C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t result = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  if (result)
  {
    id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    uint64_t v9 = a4(Strong, a1, a3);
    swift_release();

    return v9;
  }
  return result;
}

id sub_100127A1C(void *a1)
{
  id v1 = a1;
  sub_100127A84();

  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_100127A84()
{
  uint64_t v1 = swift_isaMask & *v0;
  NSString v2 = (char *)v0 + qword_10078DED0;
  uint64_t v3 = *(void *)((char *)v0 + qword_10078DED0);
  if (v3)
  {
    uint64_t v5 = *((void *)v2 + 1);
    uint64_t v4 = *((void *)v2 + 2);
    unint64_t v6 = *(void *)(v1 + 80);
    unint64_t v7 = *(void *)(v1 + 88);
    char v8 = v2[24];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1000EC5AC(v3, v5, v4, v8 & 1, v6, v7);
    sub_1000349CC(v3);
    return v9;
  }
  else
  {
    v13.receiver = v0;
    v13.super_class = (Class)swift_getObjectType();
    id v11 = [super debugDescription];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();

    return v12;
  }
}

uint64_t sub_100127BA8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  return sub_100127C10(a1, a2, a3, sub_1000890D8, (uint64_t *)&unk_10078E390, (uint64_t (*)(void *))sub_10042521C);
}

uint64_t sub_100127BDC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3)
{
  return sub_100127C10(a1, a2, a3, sub_100089354, &qword_10078E2E0, (uint64_t (*)(void *))sub_100425314);
}

uint64_t sub_100127C10(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(void), uint64_t *a5, uint64_t (*a6)(void *))
{
  uint64_t v9 = a4();
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v14 = (uint64_t *)(a1 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  sub_10003B754(a5);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 64) = &_swiftEmptyArrayStorage;
  *(unsigned char *)(v17 + 72) = 0;
  uint64_t v18 = a6(&_swiftEmptyArrayStorage);
  uint64_t v19 = a6(&_swiftEmptyArrayStorage);
  *(void *)(v17 + 80) = v18;
  *(void *)(v17 + 88) = v19;
  *(void *)(v17 + 96) = &_swiftEmptyDictionarySingleton;
  *(void *)(v17 + 16) = v9;
  *(void *)(v17 + 24) = v11;
  *(void *)(v17 + 32) = v13;
  *(unsigned char *)(v17 + 40) = 0;
  *(void *)(v17 + 48) = v16;
  *(void *)(v17 + 56) = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (a2) {
    a2(v17);
  }
  *(void *)(a1 + qword_10078DEE0) = v17;
  swift_retain();
  swift_release();
  if ((*(unsigned char *)(v17 + 72) & 1) == 0)
  {
    sub_1000145EC(a1 + qword_10078DEA8, (uint64_t)v24);
    uint64_t v20 = v25;
    uint64_t v21 = v26;
    sub_100038D28(v24, v25);
    (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
    sub_100038CD8((uint64_t)v24);
  }
  return v17;
}

uint64_t sub_100127DB4(uint64_t a1, void (*a2)(uint64_t))
{
  type metadata accessor for TTRITreeViewBatchUpdatesContext();
  uint64_t v4 = sub_100032E7C();
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  char v10 = v9;
  uint64_t v11 = (uint64_t *)(a1 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v14 = sub_100068EEC(v4, v6, v8, v10 & 1, v13, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a2) {
    a2(v14);
  }
  *(void *)(a1 + qword_10078DEE0) = v14;
  swift_retain();
  swift_release();
  if ((*(unsigned char *)(v14 + 72) & 1) == 0)
  {
    sub_1000145EC(a1 + qword_10078DEA8, (uint64_t)v18);
    uint64_t v15 = v19;
    uint64_t v16 = v20;
    sub_100038D28(v18, v19);
    (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
    sub_100038CD8((uint64_t)v18);
  }
  return v14;
}

uint64_t sub_100127F60(unsigned __int8 *a1, uint64_t (*a2)(void))
{
  return a2(*a1);
}

uint64_t sub_100127F8C(uint64_t a1, uint64_t a2)
{
  return sub_10012800C(a1, a2, (void (*)(void))sub_1000890D8, (void (*)(uint64_t))sub_10035C1D4, sub_1000FFBF8);
}

uint64_t sub_100127FCC(uint64_t a1, uint64_t a2)
{
  return sub_10012800C(a1, a2, (void (*)(void))sub_100089354, (void (*)(uint64_t))sub_10035C64C, sub_1000FFDA8);
}

uint64_t sub_10012800C(uint64_t a1, uint64_t a2, void (*a3)(void), void (*a4)(uint64_t), uint64_t (*a5)(uint64_t))
{
  a3();
  if (*(void *)(v8 + 16) && (a4(a1), (v9 & 1) != 0))
  {
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = a5(v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v11)
    {
      swift_release();
      return 0;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 1;
}

BOOL sub_1001280E0()
{
  sub_100032E7C();
  uint64_t v0 = sub_1000EBD88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0) {
    swift_release();
  }
  return v0 == 0;
}

uint64_t sub_1001281A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001281D8(a1, a2, a3, sub_10013E6AC);
}

uint64_t sub_1001281C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1001281D8(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_10013EF80);
}

uint64_t sub_1001281D8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  swift_retain();
  a4(a1, a2, a3);

  return swift_release();
}

uint64_t sub_10012823C(uint64_t a1, uint64_t (*a2)(char *), uint64_t a3)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v5 = *(void *)((swift_isaMask & *v3) + 0x58);
  uint64_t v39 = *(void *)((swift_isaMask & *v3) + 0x50);
  uint64_t v40 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v8 = (char *)v32 - v7;
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v42 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000329D0(&qword_10078DEB8, (uint64_t (*)(uint64_t))sub_1002ABEC0);
  _OWORD v32[3] = result;
  if (result)
  {
    uint64_t v16 = *(void *)(a1 + 16);
    _OWORD v32[2] = a1;
    if (v16)
    {
      uint64_t v38 = qword_10078DEA0;
      uint64_t v34 = (char *)v3 + qword_10078DEF0;
      int v35 = v8;
      uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
      uint64_t v17 = a1;
      uint64_t v18 = v3;
      uint64_t v19 = v10 + 16;
      uint64_t v20 = v17 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
      uint64_t v45 = *(void *)(v19 + 56);
      uint64_t v46 = (unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 32);
      uint64_t v37 = (void (**)(uint64_t, uint64_t))(v6 + 8);
      uint64_t v43 = (void (**)(char *, uint64_t))(v19 - 8);
      uint64_t v44 = (void (**)(char *, char *, uint64_t))(v19 + 16);
      swift_bridgeObjectRetain();
      int v47 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 40);
      v32[1] = (v19 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v21 = v42;
      uint64_t v36 = v19;
      BOOL v33 = v3;
      while (1)
      {
        v48(v14, v20, v9);
        uint64_t v23 = *v47;
        (*v47)(v14, 0, 1, v9);
        if ((*v46)(v14, 1, v9) == 1) {
          break;
        }
        (*v44)(v21, v14, v9);
        uint64_t v24 = v49(v21);
        if (v24)
        {
          uint64_t v25 = v24;
          id v26 = *(id *)((char *)v18 + v38);
          Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
          id v28 = [v26 cellForRowAtIndexPath:isa];

          if (v28)
          {
            uint64_t v18 = v33;
            uint64_t v30 = sub_100124568(v28, v25);
            uint64_t v22 = (uint64_t)v35;
            sub_100039A88(v30);
            swift_beginAccess();
            type metadata accessor for TTRITreeViewSoftReloadContext();
            sub_100025208(v22);
            swift_endAccess();
            swift_release();
          }
          else
          {
            uint64_t v22 = (uint64_t)v35;
            sub_100039A88(v29);
            swift_beginAccess();
            type metadata accessor for TTRITreeViewSoftReloadContext();
            sub_1003F7F88(v22);
            swift_endAccess();
            swift_release();
            uint64_t v18 = v33;
          }
          (*v37)(v22, AssociatedTypeWitness);
          uint64_t v21 = v42;
        }
        (*v43)(v21, v9);
        v20 += v45;
        if (!--v16)
        {
          v23(v14, 1, 1, v9);
          break;
        }
      }
    }
    else
    {
      char v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      swift_bridgeObjectRetain();
      v31(v14, 1, 1, v9);
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10012871C()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v0 - 8);
  NSString v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AnyHashable.base.getter();
  if (swift_dynamicCast())
  {
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    sub_10014011C((uint64_t)v2, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      uint64_t v9 = sub_100128DB8((uint64_t)v6);
    }
    else
    {
      uint64_t v9 = 0;
    }
    sub_100024388((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    sub_10003B6F8((uint64_t)v2, (uint64_t *)&unk_10078E360);
    return 0;
  }
  return v9;
}

uint64_t sub_100128934()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v0 - 8);
  NSString v2 = &v11[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  AnyHashable.base.getter();
  if (swift_dynamicCast())
  {
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v3);
    sub_10014011C((uint64_t)v2, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v8 = (void *)Strong;
      uint64_t v9 = sub_100128F3C((uint64_t)v6);
    }
    else
    {
      uint64_t v9 = 0;
    }
    sub_100024388((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    sub_10003B6F8((uint64_t)v2, (uint64_t *)&unk_10078E260);
    return 0;
  }
  return v9;
}

uint64_t sub_100128B4C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = type metadata accessor for Optional();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v5 = &v13[-v4];
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v3);
  uint64_t v8 = &v13[-v7];
  AnyHashable.base.getter();
  if (swift_dynamicCast())
  {
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v5, 0, 1, AssociatedTypeWitness);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v5, AssociatedTypeWitness);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v10 = (void *)Strong;
      uint64_t v11 = sub_1001290C0();
    }
    else
    {
      uint64_t v11 = 0;
    }
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v5, 1, 1, AssociatedTypeWitness);
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v5, v1);
    return 0;
  }
  return v11;
}

uint64_t sub_100128DB8(uint64_t a1)
{
  sub_1000890D8();
  if (!*(void *)(v2 + 16) || (sub_10035C1D4(a1), (v3 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000FFBF8(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  uint64_t v6 = sub_1000890D8();
  char v8 = sub_100139C3C(v5, v6, v7, (uint64_t (*)(void))sub_10035C1D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  sub_1000890D8();
  uint64_t v10 = v9;
  if (*(void *)(v9 + 16) && (uint64_t v11 = sub_10035C1D0(v5), (v12 & 1) != 0)) {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  }
  else {
    uint64_t v13 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_100128F3C(uint64_t a1)
{
  sub_100089354();
  if (!*(void *)(v2 + 16) || (sub_10035C64C(a1), (v3 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1000FFDA8(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5) {
    return 0;
  }
  uint64_t v6 = sub_100089354();
  char v8 = sub_100139C3C(v5, v6, v7, (uint64_t (*)(void))sub_10035C1D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  sub_100089354();
  uint64_t v10 = v9;
  if (*(void *)(v9 + 16) && (uint64_t v11 = sub_10035C1D0(v5), (v12 & 1) != 0)) {
    uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 8 * v11);
  }
  else {
    uint64_t v13 = 0;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1001290C0()
{
  sub_100032E7C();
  uint64_t v0 = sub_1000EBD88();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0) {
    return 0;
  }
  sub_100032E7C();
  char v1 = sub_1000EC2B8(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
    swift_release();
    return 0;
  }
  sub_100032E7C();
  uint64_t v2 = sub_1000EA248();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_10012922C(char a1, uint64_t a2)
{
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *(void *)(a2 + 64);
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v5 + 40;
    do
    {
      char v8 = *(void (**)(char *))(v7 - 8);
      char v9 = a1 & 1;
      swift_retain();
      v8(&v9);
      swift_release();
      v7 += 16;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1001292D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754(&qword_10078E370);
    sub_100037EA0(&qword_10078E378, &qword_10078E370);
    unint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v39[4];
    uint64_t v29 = v39[5];
    uint64_t v8 = v39[6];
    uint64_t v9 = v39[7];
    unint64_t v10 = v39[8];
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v29 = a1 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(a1 + 56);
    unint64_t result = swift_bridgeObjectRetain();
    uint64_t v9 = 0;
  }
  int64_t v28 = (unint64_t)(v8 + 64) >> 6;
  char v31 = a5 & 1;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v6 < 0)
    {
      uint64_t v17 = __CocoaSet.Iterator.next()();
      if (!v17) {
        return sub_100051244();
      }
      v39[0] = v17;
      swift_unknownObjectRetain();
      sub_10003B754(&qword_10078E370);
      swift_dynamicCast();
      uint64_t v18 = *(void *)&v37[0];
      swift_unknownObjectRelease();
      uint64_t v16 = v9;
      uint64_t v14 = v10;
      if (!v18) {
        return sub_100051244();
      }
    }
    else
    {
      if (v10)
      {
        uint64_t v14 = (v10 - 1) & v10;
        unint64_t v15 = __clz(__rbit64(v10)) | (v9 << 6);
        uint64_t v16 = v9;
      }
      else
      {
        int64_t v19 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_40;
        }
        if (v19 >= v28) {
          return sub_100051244();
        }
        unint64_t v20 = *(void *)(v29 + 8 * v19);
        uint64_t v16 = v9 + 1;
        if (!v20)
        {
          uint64_t v16 = v9 + 2;
          if (v9 + 2 >= v28) {
            return sub_100051244();
          }
          unint64_t v20 = *(void *)(v29 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v9 + 3;
            if (v9 + 3 >= v28) {
              return sub_100051244();
            }
            unint64_t v20 = *(void *)(v29 + 8 * v16);
            if (!v20)
            {
              uint64_t v21 = v9 + 4;
              while (v28 != v21)
              {
                unint64_t v20 = *(void *)(v29 + 8 * v21++);
                if (v20)
                {
                  uint64_t v16 = v21 - 1;
                  goto LABEL_26;
                }
              }
              return sub_100051244();
            }
          }
        }
LABEL_26:
        uint64_t v14 = (v20 - 1) & v20;
        unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v6 + 48) + 8 * v15);
      swift_retain();
      if (!v18) {
        return sub_100051244();
      }
    }
    unint64_t v35 = v14;
    uint64_t v36 = v16;
    unint64_t result = (unint64_t)sub_100129E2C(v18, a2, a3, a4, v31);
    unint64_t v22 = result;
    if (result >> 62)
    {
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v23 = result;
      if (!result) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v23) {
        goto LABEL_8;
      }
    }
    if (v23 < 1) {
      break;
    }
    uint64_t v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v25 = *(id *)(v22 + 8 * v24 + 32);
      }
      id v26 = v25;
      ++v24;
      v39[3] = sub_1000368FC(0, (unint64_t *)&qword_100788600);
      v39[0] = v26;
      uint64_t v38 = 0;
      memset(v37, 0, sizeof(v37));
      id v27 = v26;
      sub_1001214BC((uint64_t)v39, v18, (uint64_t)v37);

      sub_10003B6F8((uint64_t)v37, (uint64_t *)&unk_10078E278);
      sub_10003B6F8((uint64_t)v39, &qword_100788D60);
    }
    while (v23 != v24);
LABEL_8:
    swift_release();
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v10 = v35;
    uint64_t v9 = v36;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_100129688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754((uint64_t *)&unk_100788D30);
    sub_100037EA0(&qword_10078E2A8, (uint64_t *)&unk_100788D30);
    unint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v39[4];
    uint64_t v29 = v39[5];
    uint64_t v8 = v39[6];
    uint64_t v9 = v39[7];
    unint64_t v10 = v39[8];
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v29 = a1 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(a1 + 56);
    unint64_t result = swift_bridgeObjectRetain();
    uint64_t v9 = 0;
  }
  int64_t v28 = (unint64_t)(v8 + 64) >> 6;
  char v31 = a5 & 1;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v6 < 0)
    {
      uint64_t v17 = __CocoaSet.Iterator.next()();
      if (!v17) {
        return sub_100051244();
      }
      v39[0] = v17;
      swift_unknownObjectRetain();
      sub_10003B754((uint64_t *)&unk_100788D30);
      swift_dynamicCast();
      uint64_t v18 = *(void *)&v37[0];
      swift_unknownObjectRelease();
      uint64_t v16 = v9;
      uint64_t v14 = v10;
      if (!v18) {
        return sub_100051244();
      }
    }
    else
    {
      if (v10)
      {
        uint64_t v14 = (v10 - 1) & v10;
        unint64_t v15 = __clz(__rbit64(v10)) | (v9 << 6);
        uint64_t v16 = v9;
      }
      else
      {
        int64_t v19 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_42;
        }
        if (v19 >= v28) {
          return sub_100051244();
        }
        unint64_t v20 = *(void *)(v29 + 8 * v19);
        uint64_t v16 = v9 + 1;
        if (!v20)
        {
          uint64_t v16 = v9 + 2;
          if (v9 + 2 >= v28) {
            return sub_100051244();
          }
          unint64_t v20 = *(void *)(v29 + 8 * v16);
          if (!v20)
          {
            uint64_t v16 = v9 + 3;
            if (v9 + 3 >= v28) {
              return sub_100051244();
            }
            unint64_t v20 = *(void *)(v29 + 8 * v16);
            if (!v20)
            {
              uint64_t v16 = v9 + 4;
              if (v9 + 4 >= v28) {
                return sub_100051244();
              }
              unint64_t v20 = *(void *)(v29 + 8 * v16);
              if (!v20)
              {
                uint64_t v21 = v9 + 5;
                while (v28 != v21)
                {
                  unint64_t v20 = *(void *)(v29 + 8 * v21++);
                  if (v20)
                  {
                    uint64_t v16 = v21 - 1;
                    goto LABEL_28;
                  }
                }
                return sub_100051244();
              }
            }
          }
        }
LABEL_28:
        uint64_t v14 = (v20 - 1) & v20;
        unint64_t v15 = __clz(__rbit64(v20)) + (v16 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v6 + 48) + 8 * v15);
      swift_retain();
      if (!v18) {
        return sub_100051244();
      }
    }
    unint64_t v35 = v14;
    uint64_t v36 = v16;
    unint64_t result = (unint64_t)sub_10012A0A0(v18, a2, a3, a4, v31);
    unint64_t v22 = result;
    if (result >> 62)
    {
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v23 = result;
      if (!result) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v23) {
        goto LABEL_8;
      }
    }
    if (v23 < 1) {
      break;
    }
    uint64_t v24 = 0;
    do
    {
      if ((v22 & 0xC000000000000001) != 0) {
        id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v25 = *(id *)(v22 + 8 * v24 + 32);
      }
      id v26 = v25;
      ++v24;
      v39[3] = sub_1000368FC(0, (unint64_t *)&qword_100788600);
      v39[0] = v26;
      uint64_t v38 = 0;
      memset(v37, 0, sizeof(v37));
      id v27 = v26;
      sub_100121960((uint64_t)v39, v18, (uint64_t)v37);

      sub_10003B6F8((uint64_t)v37, (uint64_t *)&unk_10078E278);
      sub_10003B6F8((uint64_t)v39, &qword_100788D60);
    }
    while (v23 != v24);
LABEL_8:
    swift_release();
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v10 = v35;
    uint64_t v9 = v36;
  }
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

unint64_t sub_100129A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    type metadata accessor for TTRITreeViewNode();
    swift_getWitnessTable();
    unint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v38[4];
    uint64_t v28 = v38[5];
    uint64_t v8 = v38[6];
    uint64_t v9 = v38[7];
    unint64_t v10 = v38[8];
  }
  else
  {
    uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v28 = a1 + 56;
    uint64_t v8 = ~v11;
    uint64_t v12 = -v11;
    if (v12 < 64) {
      uint64_t v13 = ~(-1 << v12);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v10 = v13 & *(void *)(a1 + 56);
    unint64_t result = swift_bridgeObjectRetain();
    uint64_t v9 = 0;
  }
  int64_t v27 = (unint64_t)(v8 + 64) >> 6;
  char v30 = a5 & 1;
  for (i = v6; ; uint64_t v6 = i)
  {
    if (v6 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        return sub_100051244();
      }
      type metadata accessor for TTRITreeViewNode();
      _forceBridgeFromObjectiveC<A>(_:_:)();
      swift_unknownObjectRelease();
      uint64_t v17 = *(void *)&v36[0];
      uint64_t v16 = v9;
      uint64_t v14 = v10;
      if (!*(void *)&v36[0]) {
        return sub_100051244();
      }
    }
    else
    {
      if (v10)
      {
        uint64_t v14 = (v10 - 1) & v10;
        unint64_t v15 = __clz(__rbit64(v10)) | (v9 << 6);
        uint64_t v16 = v9;
      }
      else
      {
        int64_t v18 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_40;
        }
        if (v18 >= v27) {
          return sub_100051244();
        }
        unint64_t v19 = *(void *)(v28 + 8 * v18);
        uint64_t v16 = v9 + 1;
        if (!v19)
        {
          uint64_t v16 = v9 + 2;
          if (v9 + 2 >= v27) {
            return sub_100051244();
          }
          unint64_t v19 = *(void *)(v28 + 8 * v16);
          if (!v19)
          {
            uint64_t v16 = v9 + 3;
            if (v9 + 3 >= v27) {
              return sub_100051244();
            }
            unint64_t v19 = *(void *)(v28 + 8 * v16);
            if (!v19)
            {
              uint64_t v20 = v9 + 4;
              while (v27 != v20)
              {
                unint64_t v19 = *(void *)(v28 + 8 * v20++);
                if (v19)
                {
                  uint64_t v16 = v20 - 1;
                  goto LABEL_26;
                }
              }
              return sub_100051244();
            }
          }
        }
LABEL_26:
        uint64_t v14 = (v19 - 1) & v19;
        unint64_t v15 = __clz(__rbit64(v19)) + (v16 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v6 + 48) + 8 * v15);
      swift_retain();
      if (!v17) {
        return sub_100051244();
      }
    }
    unint64_t v34 = v14;
    uint64_t v35 = v16;
    unint64_t result = (unint64_t)sub_10012A314(v17, a2, a3, a4, v30);
    unint64_t v21 = result;
    if (result >> 62)
    {
      unint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v22 = result;
      if (!result) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22) {
        goto LABEL_8;
      }
    }
    if (v22 < 1) {
      break;
    }
    uint64_t v23 = 0;
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v24 = *(id *)(v21 + 8 * v23 + 32);
      }
      id v25 = v24;
      ++v23;
      void v38[3] = sub_1000368FC(0, (unint64_t *)&qword_100788600);
      v38[0] = v25;
      uint64_t v37 = 0;
      memset(v36, 0, sizeof(v36));
      id v26 = v25;
      sub_100038838((uint64_t)v38, v17, (uint64_t)v36);

      sub_10003B6F8((uint64_t)v36, (uint64_t *)&unk_10078E278);
      sub_10003B6F8((uint64_t)v38, &qword_100788D60);
    }
    while (v22 != v23);
LABEL_8:
    swift_release();
    unint64_t result = swift_bridgeObjectRelease();
    unint64_t v10 = v34;
    uint64_t v9 = v35;
  }
  __break(1u);
LABEL_40:
  __break(1u);
  return result;
}

void *sub_100129E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + *(void *)(*(void *)a1 + 144);
  swift_beginAccess();
  sub_1000244A8(v13, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  LOBYTE(a1) = sub_100139C3C(a1, a2, a4, (uint64_t (*)(void))sub_10035C1D0);
  sub_10003B754((uint64_t *)&unk_100793B30);
  if (a1)
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10066C680;
    uint64_t v15 = a5 & 1;
    *(void *)(v14 + 32) = sub_100120BAC((uint64_t)v12, a2, a3, a4, v15, (SEL *)&selRef_headerViewForSection_);
    *(void *)(v14 + 40) = sub_100120BAC((uint64_t)v12, a2, a3, a4, v15, (SEL *)&selRef_footerViewForSection_);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10066C6F0;
    *(void *)(v14 + 32) = sub_10008E820((uint64_t)v12, a2, a3, a4, a5 & 1);
  }
  uint64_t v24 = v14;
  specialized Array._endMutation()();
  uint64_t v16 = v24;
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v24 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    unint64_t v19 = (void **)(v16 + 32);
    do
    {
      unint64_t v21 = *v19++;
      uint64_t v20 = v21;
      if (v21)
      {
        id v22 = v20;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      --v18;
    }
    while (v18);
    uint64_t v17 = (void *)v24;
  }
  swift_bridgeObjectRelease();
  sub_100024388((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v17;
}

void *sub_10012A0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + *(void *)(*(void *)a1 + 144);
  swift_beginAccess();
  sub_1000244A8(v13, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  LOBYTE(a1) = sub_100139C3C(a1, a2, a4, (uint64_t (*)(void))sub_10035C1D0);
  sub_10003B754((uint64_t *)&unk_100793B30);
  if (a1)
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10066C680;
    uint64_t v15 = a5 & 1;
    *(void *)(v14 + 32) = sub_100120C94((uint64_t)v12, a2, a3, a4, v15, (SEL *)&selRef_headerViewForSection_);
    *(void *)(v14 + 40) = sub_100120C94((uint64_t)v12, a2, a3, a4, v15, (SEL *)&selRef_footerViewForSection_);
  }
  else
  {
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_10066C6F0;
    *(void *)(v14 + 32) = sub_10008E860((uint64_t)v12, a2, a3, a4, a5 & 1);
  }
  uint64_t v24 = v14;
  specialized Array._endMutation()();
  uint64_t v16 = v24;
  uint64_t v17 = &_swiftEmptyArrayStorage;
  uint64_t v24 = (uint64_t)&_swiftEmptyArrayStorage;
  uint64_t v18 = *(void *)(v16 + 16);
  if (v18)
  {
    unint64_t v19 = (void **)(v16 + 32);
    do
    {
      unint64_t v21 = *v19++;
      uint64_t v20 = v21;
      if (v21)
      {
        id v22 = v20;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      --v18;
    }
    while (v18);
    uint64_t v17 = (void *)v24;
  }
  swift_bridgeObjectRelease();
  sub_100024388((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  return v17;
}

void *sub_10012A314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = a1;
  uint64_t v10 = *(void *)(*(void *)a1 + 80);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v16 = v12 + *(void *)(v15 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, v16, v10);
  LOBYTE(v9) = sub_1000EC2B8(v9);
  sub_10003B754((uint64_t *)&unk_100793B30);
  if (v9)
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10066C680;
    uint64_t v18 = a5 & 1;
    *(void *)(v17 + 32) = sub_100120D7C((uint64_t)v14, a2, a3, a4, v18, (SEL *)&selRef_headerViewForSection_);
    *(void *)(v17 + 40) = sub_100120D7C((uint64_t)v14, a2, a3, a4, v18, (SEL *)&selRef_footerViewForSection_);
  }
  else
  {
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_10066C6F0;
    *(void *)(v17 + 32) = sub_100120960((uint64_t)v14, a2, a3, a4, a5 & 1);
  }
  uint64_t v27 = v17;
  specialized Array._endMutation()();
  uint64_t v19 = v27;
  uint64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v27 = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v21 = *(void *)(v19 + 16);
  if (v21)
  {
    id v22 = (void **)(v19 + 32);
    do
    {
      uint64_t v24 = *v22++;
      uint64_t v23 = v24;
      if (v24)
      {
        id v25 = v23;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      --v21;
    }
    while (v21);
    uint64_t v20 = (void *)v27;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v20;
}

double sub_10012A5BC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v17 - v10;
  if (*(unsigned char *)(v1 + 32)) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = *(void *)(v1 + 24);
  }
  char v13 = *(unsigned char *)(v1 + 72);
  uint64_t v14 = v1 + *(void *)(*(void *)v1 + 144);
  swift_beginAccess();
  sub_1000244A8(v14, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  sub_100024388((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1000244A8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  sub_100040194((unint64_t *)&qword_10078C880, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  AnyHashable.init<A>(_:)();
  sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v13;
  double result = *(double *)v17;
  long long v16 = v17[1];
  *(_OWORD *)(a1 + 16) = v17[0];
  *(_OWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 48) = v18;
  return result;
}

double sub_10012A7C0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  if (*(unsigned char *)(v1 + 32)) {
    uint64_t v12 = 0;
  }
  else {
    uint64_t v12 = *(void *)(v1 + 24);
  }
  char v13 = *(unsigned char *)(v1 + 72);
  uint64_t v14 = v1 + *(void *)(*(void *)v1 + 144);
  swift_beginAccess();
  sub_1000244A8(v14, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
  sub_100024388((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  sub_1000244A8((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  sub_100040194(&qword_100788D98, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  AnyHashable.init<A>(_:)();
  sub_100024388((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  *(void *)a1 = v12;
  *(unsigned char *)(a1 + 8) = v13;
  double result = *(double *)v17;
  long long v16 = v17[1];
  *(_OWORD *)(a1 + 16) = v17[0];
  *(_OWORD *)(a1 + 32) = v16;
  *(void *)(a1 + 48) = v18;
  return result;
}

uint64_t sub_10012A9C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  uint64_t result = IndexPath.row.getter();
  if (__OFADD__(result, v1))
  {
    __break(1u);
  }
  else
  {
    IndexPath.section.getter();
    return IndexPath.init(row:section:)();
  }
  return result;
}

void sub_10012AA20(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_10078DE60);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRITreeViewTableAdapter: updating for collapsed states change", v7, 2u);
      swift_slowDealloc();
    }

    sub_10011A1E4(v1, 1);
  }
}

uint64_t sub_10012AB48(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v86 = a3;
  char v89 = a2;
  uint64_t v4 = swift_isaMask & *a2;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v83 = type metadata accessor for Optional();
  uint64_t v85 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v79 = (char *)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v70 - v8;
  uint64_t v10 = *(void *)(v5 - 8);
  __chkstk_darwin(v11);
  uint64_t v75 = (char *)v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v84 = (char *)v70 - v14;
  uint64_t v15 = *(void *)(v4 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v74 = (char *)v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v70 - v19;
  type metadata accessor for Optional();
  __chkstk_darwin(a1);
  uint64_t v77 = (char *)v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v25 = (char *)v70 - v24;
  v70[1] = v15;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    swift_getAssociatedConformanceWitness();
    Set.Iterator.init(_cocoa:)();
    uint64_t result = v91;
    int64_t v72 = v92;
    uint64_t v27 = v93;
    uint64_t v78 = v94;
    unint64_t v28 = v95;
  }
  else
  {
    uint64_t v29 = -1 << *(unsigned char *)(v23 + 32);
    uint64_t v30 = *(void *)(v23 + 56);
    int64_t v72 = v23 + 56;
    uint64_t v27 = ~v29;
    uint64_t v31 = -v29;
    if (v31 < 64) {
      uint64_t v32 = ~(-1 << v31);
    }
    else {
      uint64_t v32 = -1;
    }
    unint64_t v28 = v32 & v30;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v78 = 0;
  }
  uint64_t v73 = result & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v90 = (char **)(v88 + 56);
  v70[2] = v27;
  int64_t v71 = (unint64_t)(v27 + 64) >> 6;
  uint64_t v87 = v88 + 16;
  BOOL v33 = (void (**)(char *, char *, uint64_t))(v88 + 32);
  unint64_t v34 = (unsigned int (**)(void, void, void))(v10 + 48);
  uint64_t v81 = (void (**)(uint64_t, uint64_t))(v10 + 8);
  uint64_t v82 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  uint64_t v35 = (uint64_t (**)(uint64_t, uint64_t))(v88 + 8);
  uint64_t v80 = (void (**)(char *, uint64_t))(v85 + 8);
  uint64_t v85 = result;
  uint64_t v76 = AssociatedTypeWitness;
  if ((result & 0x8000000000000000) == 0) {
    goto LABEL_12;
  }
LABEL_10:
  if (__CocoaSet.Iterator.next()())
  {
    _forceBridgeFromObjectiveC<A>(_:_:)();
    swift_unknownObjectRelease();
    while (1)
    {
      ((void (*)(char *, void, uint64_t, uint64_t))*v90)(v25, 0, 1, AssociatedTypeWitness);
      (*v33)(v20, v25, AssociatedTypeWitness);
      sub_10012BDD0((uint64_t)v20, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))sub_1000EBD88, (uint64_t)v9);
      if ((*v34)(v9, 1, v5) == 1)
      {
        (*v35)((uint64_t)v20, AssociatedTypeWitness);
        (*v80)(v9, v83);
        uint64_t result = v85;
        if (v85 < 0) {
          goto LABEL_10;
        }
      }
      else
      {
        unint64_t v36 = v28;
        uint64_t v37 = v25;
        uint64_t v38 = v20;
        uint64_t v39 = v35;
        uint64_t v40 = v34;
        os_log_type_t v41 = v33;
        uint64_t v42 = v5;
        uint64_t v43 = (uint64_t)v84;
        (*v82)(v84, v9, v42);
        sub_10013C0D4(v43, 5);
        uint64_t v44 = v43;
        uint64_t v5 = v42;
        BOOL v33 = v41;
        unint64_t v34 = v40;
        uint64_t v35 = v39;
        uint64_t v20 = v38;
        id v25 = v37;
        unint64_t v28 = v36;
        uint64_t AssociatedTypeWitness = v76;
        (*v81)(v44, v5);
        (*v35)((uint64_t)v20, AssociatedTypeWitness);
        uint64_t result = v85;
        if (v85 < 0) {
          goto LABEL_10;
        }
      }
LABEL_12:
      if (v28)
      {
        unint64_t v45 = __clz(__rbit64(v28));
        v28 &= v28 - 1;
        unint64_t v46 = v45 | (v78 << 6);
      }
      else
      {
        int64_t v47 = v78 + 1;
        if (__OFADD__(v78, 1))
        {
          __break(1u);
LABEL_63:
          __break(1u);
          return result;
        }
        if (v47 >= v71) {
          goto LABEL_30;
        }
        unint64_t v48 = *(void *)(v72 + 8 * v47);
        uint64_t v49 = v78 + 1;
        if (!v48)
        {
          uint64_t v49 = v78 + 2;
          if (v78 + 2 >= v71) {
            goto LABEL_30;
          }
          unint64_t v48 = *(void *)(v72 + 8 * v49);
          if (!v48)
          {
            uint64_t v49 = v78 + 3;
            if (v78 + 3 >= v71) {
              goto LABEL_30;
            }
            unint64_t v48 = *(void *)(v72 + 8 * v49);
            if (!v48)
            {
              uint64_t v50 = v78 + 4;
              while (v71 != v50)
              {
                unint64_t v48 = *(void *)(v72 + 8 * v50++);
                if (v48)
                {
                  uint64_t v49 = v50 - 1;
                  goto LABEL_25;
                }
              }
LABEL_30:
              uint64_t v51 = v77;
              goto LABEL_32;
            }
          }
        }
LABEL_25:
        unint64_t v28 = (v48 - 1) & v48;
        unint64_t v46 = __clz(__rbit64(v48)) + (v49 << 6);
        uint64_t v78 = v49;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v25, *(void *)(result + 48) + *(void *)(v88 + 72) * v46, AssociatedTypeWitness);
    }
  }
  uint64_t v51 = v77;
LABEL_32:
  uint64_t v84 = *v90;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v84)(v25, 1, 1, AssociatedTypeWitness);
  sub_100051244();
  if ((v86 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    swift_getAssociatedConformanceWitness();
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v52 = v96;
    uint64_t v73 = v97;
    int64_t v53 = v98;
    uint64_t v85 = v99;
    unint64_t v54 = v100;
  }
  else
  {
    uint64_t v55 = -1 << *(unsigned char *)(v86 + 32);
    uint64_t v56 = *(void *)(v86 + 56);
    uint64_t v73 = v86 + 56;
    uint64_t v57 = ~v55;
    uint64_t v58 = -v55;
    if (v58 < 64) {
      uint64_t v59 = ~(-1 << v58);
    }
    else {
      uint64_t v59 = -1;
    }
    unint64_t v54 = v59 & v56;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v53 = v57;
    uint64_t v52 = v86;
    uint64_t v85 = 0;
  }
  uint64_t v60 = (uint64_t)v74;
  uint64_t v78 = v52 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v71 = v53;
  int64_t v72 = (unint64_t)(v53 + 64) >> 6;
  uint64_t v86 = v52;
  uint64_t v61 = (uint64_t)v79;
  if ((v52 & 0x8000000000000000) == 0) {
    goto LABEL_43;
  }
LABEL_41:
  if (__CocoaSet.Iterator.next()())
  {
    _forceBridgeFromObjectiveC<A>(_:_:)();
    swift_unknownObjectRelease();
    uint64_t v60 = (uint64_t)v74;
    while (1)
    {
      ((void (*)(char *, void, uint64_t, uint64_t))v84)(v51, 0, 1, AssociatedTypeWitness);
      (*v33)((char *)v60, v51, AssociatedTypeWitness);
      sub_10012BDD0(v60, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))sub_1000EBD88, v61);
      if ((*v34)(v61, 1, v5) == 1)
      {
        (*v35)(v60, AssociatedTypeWitness);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))*v80)(v61, v83);
        uint64_t v52 = v86;
        if (v86 < 0) {
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v62 = (uint64_t)v75;
        (*v82)(v75, (char *)v61, v5);
        sub_10013C48C(v62, 5);
        uint64_t v63 = v62;
        uint64_t v51 = v77;
        (*v81)(v63, v5);
        uint64_t result = (*v35)(v60, AssociatedTypeWitness);
        uint64_t v52 = v86;
        if (v86 < 0) {
          goto LABEL_41;
        }
      }
LABEL_43:
      if (v54)
      {
        unint64_t v64 = __clz(__rbit64(v54));
        v54 &= v54 - 1;
        unint64_t v65 = v64 | (v85 << 6);
      }
      else
      {
        int64_t v66 = v85 + 1;
        if (__OFADD__(v85, 1)) {
          goto LABEL_63;
        }
        if (v66 >= v72) {
          break;
        }
        unint64_t v67 = *(void *)(v73 + 8 * v66);
        uint64_t v68 = v85 + 1;
        if (!v67)
        {
          uint64_t v68 = v85 + 2;
          if (v85 + 2 >= v72) {
            break;
          }
          unint64_t v67 = *(void *)(v73 + 8 * v68);
          if (!v67)
          {
            uint64_t v68 = v85 + 3;
            if (v85 + 3 >= v72) {
              break;
            }
            unint64_t v67 = *(void *)(v73 + 8 * v68);
            if (!v67)
            {
              uint64_t v69 = v85 + 4;
              while (v72 != v69)
              {
                unint64_t v67 = *(void *)(v73 + 8 * v69++);
                if (v67)
                {
                  uint64_t v68 = v69 - 1;
                  goto LABEL_56;
                }
              }
              break;
            }
          }
        }
LABEL_56:
        unint64_t v54 = (v67 - 1) & v67;
        unint64_t v65 = __clz(__rbit64(v67)) + (v68 << 6);
        uint64_t v85 = v68;
      }
      (*(void (**)(char *, unint64_t, uint64_t))(v88 + 16))(v51, *(void *)(v52 + 48) + *(void *)(v88 + 72) * v65, AssociatedTypeWitness);
    }
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v84)(v51, 1, 1, AssociatedTypeWitness);
  return sub_100051244();
}

void sub_10012B608()
{
}

uint64_t sub_10012B64C(uint64_t a1)
{
  sub_1000499D4(a1 + qword_10078DE88);
  swift_release();
  swift_unknownObjectUnownedDestroy();

  sub_100038CD8(a1 + qword_10078DEA8);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1000349CC(*(void *)(a1 + qword_10078DED0));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

id sub_10012B7A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013E63C(a2, a3, sub_10013FF10);
}

id sub_10012B7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10013E63C(a2, a3, sub_10013FEE0);
}

uint64_t sub_10012B808(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v41 = *(void *)(*(void *)((swift_isaMask & *v2) + 0x50) - 8);
  __chkstk_darwin(a1);
  uint64_t v39 = &v37[-v4];
  uint64_t v40 = *(void *)(v5 + 88);
  uint64_t v7 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = type metadata accessor for Optional();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v37[-v12];
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v11);
  uint64_t v42 = &v37[-v14];
  uint64_t v16 = a1[3];
  uint64_t v15 = a1[4];
  sub_100038D28(a1, v16);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v15 + 8))(v45, v16, v15);
  if (v46[3])
  {
    sub_10013FF40((uint64_t)v46, (uint64_t)v44);
    sub_100038D6C((uint64_t)v45);
    AnyHashable.base.getter();
    sub_100055AE8((uint64_t)v44);
  }
  else
  {
    sub_10003B6F8((uint64_t)v45, (uint64_t *)&unk_1007A3EE0);
    long long v47 = 0u;
    long long v48 = 0u;
  }
  uint64_t v17 = v7;
  uint64_t v18 = v43;
  sub_10003B754(&qword_100788D60);
  char v19 = swift_dynamicCast();
  uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if (v19)
  {
    v20(v13, 0, 1, AssociatedTypeWitness);
    uint64_t v21 = v42;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v42, v13, AssociatedTypeWitness);
    sub_100032E7C();
    uint64_t v22 = sub_1000EBD88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v22)
    {
      uint64_t v23 = v22 + *(void *)(*(void *)v22 + 144);
      swift_beginAccess();
      uint64_t v24 = v41;
      id v25 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v41 + 16);
      uint64_t v26 = (uint64_t)v39;
      v25(v39, v23, v17);
      BOOL v27 = sub_10011AF08(v26);
      uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
      uint64_t v28 = v24 + 8;
      uint64_t v30 = v26;
      uint64_t v31 = v29;
      v29(v30, v17);
      if (v27)
      {
        uint64_t v41 = v28;
        if ([*(id *)((char *)v2 + qword_10078DEA0) style] == (id)2
          && (uint64_t v40 = sub_100032E7C(),
              int v38 = sub_1000EC2B8(v22),
              swift_bridgeObjectRelease(),
              swift_bridgeObjectRelease(),
              swift_bridgeObjectRelease(),
              (v38 & 1) != 0))
        {
          uint64_t v32 = v31;
          uint64_t v40 = 0;
        }
        else
        {
          uint64_t v32 = v31;
          uint64_t v40 = 3;
        }
        uint64_t v34 = (uint64_t)v39;
        v25(v39, v23, v17);
        BOOL v35 = sub_10011AFD8(v34);
        v32(v34, v17);
        v25((unsigned char *)v34, v23, v17);
        unint64_t v36 = (uint64_t (**)(unsigned char *, uint64_t))(v43 + 8);
        if (v35) {
          sub_10013C0D4(v34, v40);
        }
        else {
          sub_10013C48C(v34, v40);
        }
        swift_release();
        v32(v34, v17);
        return (*v36)(v42, AssociatedTypeWitness);
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v42, AssociatedTypeWitness);
        return swift_release();
      }
    }
    else
    {
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8))(v21, AssociatedTypeWitness);
    }
  }
  else
  {
    v20(v13, 1, 1, AssociatedTypeWitness);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
  }
}

uint64_t sub_10012BDB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012BDD0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void))sub_10003BA80, a2);
}

uint64_t sub_10012BDD0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = swift_isaMask & *v3;
  uint64_t v8 = sub_100032E7C();
  uint64_t v9 = *(void *)(v7 + 80);
  uint64_t v13 = a2(a1, v8, v11, v12, v10 & 1, v9, *(void *)(v7 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = v13 + *(void *)(*(void *)v13 + 144);
    swift_beginAccess();
    uint64_t v15 = *(void *)(v9 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(a3, v14, v9);
    swift_release();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56))(a3, 0, 1, v9);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v17(a3, 1, 1, v9);
  }
}

uint64_t sub_10012BFB0(uint64_t a1)
{
  uint64_t v3 = swift_isaMask & *v1;
  uint64_t v4 = sub_100032E7C();
  uint64_t v8 = sub_1000EBBA0(a1, v4, v6, v7, v5 & 1, *(void *)(v3 + 80), *(void *)(v3 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v8)
  {
    if (*(unsigned char *)(v8 + 72) && *(unsigned char *)(v8 + 72) != 1)
    {
      swift_beginAccess();
      type metadata accessor for TTRITreeViewNode();
      type metadata accessor for Array();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      char v10 = Collection.isEmpty.getter();
      swift_bridgeObjectRelease();
      swift_release();
      char v9 = v10 ^ 1;
      return v9 & 1;
    }
    swift_release();
  }
  char v9 = 0;
  return v9 & 1;
}

uint64_t sub_10012C128@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  int v43 = a2;
  uint64_t v44 = a1;
  long long v47 = a4;
  long long v48 = (void *)(swift_isaMask & *v4);
  unint64_t v46 = v4;
  uint64_t v6 = v48[10];
  uint64_t v7 = type metadata accessor for Optional();
  uint64_t v42 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  char v9 = (char *)v37 - v8;
  uint64_t v45 = *(void *)(v6 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v37 - v14;
  uint64_t v16 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for IndexPath();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a3, (uint64_t)v18, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10003B6F8((uint64_t)v18, &qword_10078E8F0);
LABEL_7:
    type metadata accessor for TTRITreeViewTableAdapter.InsertDestination();
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v40 = v12;
  uint64_t v41 = v9;
  int v38 = v15;
  uint64_t v39 = v7;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v49, v18, v19);
  uint64_t v22 = sub_100032E7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&unsigned long long v52 = v22;
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  swift_bridgeObjectRelease();
  unsigned long long v52 = v50;
  uint64_t v51 = IndexPath.section.getter();
  sub_10003B754(&qword_10078C648);
  uint64_t v23 = v19;
  if ((Range.contains(_:)() & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    goto LABEL_7;
  }
  sub_100032E7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  IndexPath.section.getter();
  Array.subscript.getter();
  swift_bridgeObjectRelease();
  v37[1] = *((void *)&v50 + 1);
  unsigned long long v24 = v50;
  *(void *)&unsigned long long v52 = v24 >> 64;
  long long v48 = (void *)v24;
  type metadata accessor for TTRITreeViewNode();
  type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  unsigned long long v52 = v50;
  uint64_t v51 = IndexPath.row.getter();
  if ((Range.contains(_:)() & 1) == 0)
  {
    int v28 = v43 & 1;
    uint64_t v29 = (char *)v48 + *(void *)(*v48 + 144);
    swift_beginAccess();
    uint64_t v30 = v45;
    uint64_t v31 = (uint64_t)v40;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v40, v29, v6);
    uint64_t v32 = (uint64_t)v41;
    sub_10012DC04(v44, v28, v31, (uint64_t)v41);
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v31, v6);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v23);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v32, 1, v6);
    uint64_t v34 = v47;
    if (v33 == 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v32, v39);
    }
    else
    {
      BOOL v35 = *(void (**)(char *, uint64_t, uint64_t))(v30 + 32);
      unint64_t v36 = v38;
      v35(v38, v32, v6);
      v35(v34, (uint64_t)v36, v6);
    }
    goto LABEL_7;
  }
  id v25 = v49;
  IndexPath.row.getter();
  Array.subscript.getter();
  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
  uint64_t v26 = v52 + *(void *)(*(void *)v52 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v47, v26, v6);
  swift_release();
  type metadata accessor for TTRITreeViewTableAdapter.InsertDestination();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10012C840@<X0>(char *a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  LODWORD(v133) = a2;
  uint64_t v145 = a3;
  uint64_t v5 = swift_isaMask & *v3;
  uint64_t v6 = *(void *)(v5 + 80);
  uint64_t v128 = type metadata accessor for Optional();
  uint64_t v132 = *(void *)(v128 - 8);
  uint64_t v7 = __chkstk_darwin(v128);
  unint64_t v127 = (uint64_t *)((char *)&v115 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v129 = (uint64_t)&v115 - v10;
  __chkstk_darwin(v9);
  uint64_t v125 = (uint64_t)&v115 - v11;
  uint64_t v12 = *(void *)(v5 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v135 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v136 = AssociatedTypeWitness;
  uint64_t v14 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v134 = (char *)&v115 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  char v139 = (char *)&v115 - v17;
  uint64_t v138 = *(void *)(v6 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v126 = (char *)&v115 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v130 = (char *)&v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v124 = (char *)&v115 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v131 = (void (*)(char *, char *, uint64_t))((char *)&v115 - v25);
  __chkstk_darwin(v24);
  id v137 = (char *)&v115 - v26;
  uint64_t v146 = type metadata accessor for TTRITreeViewTableAdapter.MoveDestination();
  uint64_t v141 = *(void *)(v146 - 8);
  __chkstk_darwin(v146);
  uint64_t v142 = (char *)&v115 - v27;
  uint64_t v144 = type metadata accessor for IndexPath();
  uint64_t v28 = *(void *)(v144 - 8);
  uint64_t v29 = __chkstk_darwin(v144);
  os_log_type_t v140 = (char *)&v115 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  char v143 = (char *)&v115 - v31;
  uint64_t v32 = sub_100032E7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v148 = v32;
  type metadata accessor for TTRITreeViewSectionsMetadata.Section();
  type metadata accessor for Array();
  swift_getWitnessTable();
  RandomAccessCollection<>.indices.getter();
  swift_bridgeObjectRelease();
  long long v148 = v147;
  uint64_t v149 = IndexPath.section.getter();
  sub_10003B754(&qword_10078C648);
  if ((Range.contains(_:)() & 1) == 0) {
    return swift_storeEnumTagMultiPayload();
  }
  sub_100032E7C();
  uint64_t v33 = sub_10003BA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v33) {
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1007852B8 == -1) {
      goto LABEL_10;
    }
    goto LABEL_52;
  }
  uint64_t v118 = v33 + 56;
  uint64_t v122 = v33;
  uint64_t v119 = *(void *)(Strong + 16);
  swift_release();
  sub_100032E7C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  IndexPath.section.getter();
  Array.subscript.getter();
  swift_bridgeObjectRelease();
  uint64_t v123 = *((void *)&v147 + 1);
  uint64_t v35 = v147;
  uint64_t v36 = v28;
  uint64_t v37 = v28 + 16;
  int v38 = *(void (**)(char *, char *, uint64_t))(v28 + 16);
  uint64_t v40 = v143;
  uint64_t v39 = v144;
  uint64_t v121 = v37;
  uint64_t v120 = v38;
  v38(v143, a1, v144);
  uint64_t v41 = IndexPath.section.getter();
  if (v41 == IndexPath.section.getter())
  {
    uint64_t v42 = IndexPath.row.getter();
    uint64_t v43 = IndexPath.row.getter();
    BOOL v44 = v42 < v43;
    if (v42 < v43 && (v133 & 1) != 0)
    {
      uint64_t v45 = (void (*)(long long *, void))IndexPath.row.modify();
      if (__OFADD__(*v46, 1))
      {
        __break(1u);
        goto LABEL_54;
      }
      ++*v46;
      v45(&v147, 0);
      LODWORD(v44) = 1;
    }
  }
  else
  {
    LODWORD(v44) = 0;
  }
  type metadata accessor for TTRITreeViewNode();
  uint64_t v51 = Array.count.getter();
  uint64_t v52 = IndexPath.row.getter();
  if (v51 < 0)
  {
    __break(1u);
LABEL_52:
    swift_once();
LABEL_10:
    uint64_t v47 = type metadata accessor for Logger();
    sub_100018BF8(v47, (uint64_t)qword_10078DE60);
    long long v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v48, v49))
    {
      unsigned long long v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned long long v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "section node cannot be moved", v50, 2u);
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release();
    }
    return swift_storeEnumTagMultiPayload();
  }
  if (v52 < 0 || v52 >= v51)
  {
    if (v51 == v52)
    {
      uint64_t v133 = v35;
      uint64_t v69 = v140;
      v120(v140, v40, v39);
      uint64_t v70 = v129;
      sub_10012E968(v119, v129);
      int64_t v71 = *(char **)(v36 + 8);
      uint64_t v119 = v36 + 8;
      os_log_type_t v140 = v71;
      ((void (*)(char *, uint64_t))v71)(v69, v39);
      uint64_t v72 = v138;
      uint64_t v73 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48);
      if (v73(v70, 1, v6) != 1)
      {
        uint64_t v96 = *(void (**)(char *, char *, uint64_t))(v72 + 32);
        uint64_t v132 = v72 + 32;
        uint64_t v131 = v96;
        v96(v130, (char *)v70, v6);
        uint64_t v97 = *(void (**)(uint64_t, uint64_t))(v12 + 24);
        int64_t v98 = v139;
        v97(v6, v12);
        uint64_t v99 = v122 + *(void *)(*(void *)v122 + 144);
        swift_beginAccess();
        unint64_t v100 = v137;
        (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v137, v99, v6);
        uint64_t v101 = v134;
        v97(v6, v12);
        uint64_t v102 = *(void (**)(char *, uint64_t))(v72 + 8);
        v102(v100, v6);
        uint64_t v103 = v136;
        swift_getAssociatedConformanceWitness();
        LOBYTE(v99) = dispatch thunk of static Equatable.== infix(_:_:)();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        os_log_type_t v104 = (void (*)(char *, uint64_t))v135[1];
        v104(v101, v103);
        v104(v98, v103);
        ((void (*)(char *, uint64_t))v140)(v143, v144);
        if ((v99 & 1) == 0)
        {
          uint64_t v84 = v142;
          v131(v142, v130, v6);
          uint64_t v85 = v146;
          goto LABEL_41;
        }
        v102(v130, v6);
        goto LABEL_37;
      }
      uint64_t v74 = *(void **)(v132 + 8);
      v132 += 8;
      uint64_t v135 = v74;
      ((void (*)(uint64_t, uint64_t))v74)(v70, v128);
      sub_10012F110(v6, v6);
      swift_allocObject();
      uint64_t v75 = static Array._adoptStorage(_:count:)();
      char v139 = (char *)v73;
      uint64_t v76 = v75;
      uint64_t v78 = v77;
      uint64_t v79 = v122 + *(void *)(*(void *)v122 + 144);
      swift_beginAccess();
      uint64_t v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 16);
      v80(v78, v79, v6);
      uint64_t v136 = sub_1000EA1C8(v76);
      uint64_t v81 = v133 + *(void *)(*(void *)v133 + 144);
      swift_beginAccess();
      uint64_t v82 = (uint64_t)v137;
      v80((uint64_t)v137, v81, v6);
      uint64_t v83 = (void (*)(void, void))v127;
      sub_10012DC04(v136, 0, v82, (uint64_t)v127);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v82, v6);
      ((void (*)(char *, uint64_t))v140)(v143, v144);
      if (((unsigned int (*)(void (*)(void, void), uint64_t, uint64_t))v139)(v83, 1, v6) != 1)
      {
        BOOL v105 = *(void (**)(char *, void (*)(void, void), uint64_t))(v72 + 32);
        uint64_t v106 = v126;
        v105(v126, v83, v6);
        uint64_t v84 = v142;
        v105(v142, (void (*)(void, void))v106, v6);
        uint64_t v85 = v146;
        goto LABEL_41;
      }
      ((void (*)(void, uint64_t))v135)(v83, v128);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v40, v39);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v84 = v142;
    uint64_t v85 = v146;
LABEL_41:
    swift_storeEnumTagMultiPayload();
    goto LABEL_42;
  }
  LODWORD(v130) = v44;
  uint64_t v133 = v35;
  sub_100032E7C();
  int64_t v53 = v140;
  v120(v140, v40, v144);
  uint64_t v54 = sub_10003BA80();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v55 = v36 + 8;
  BOOL v44 = (BOOL)v56;
  v56(v53, v144);
  if (!v54)
  {
    if (qword_1007852B8 == -1)
    {
LABEL_27:
      uint64_t v86 = type metadata accessor for Logger();
      sub_100018BF8(v86, (uint64_t)qword_10078DE60);
      uint64_t v87 = Logger.logObject.getter();
      os_log_type_t v88 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v87, v88))
      {
        char v89 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v89 = 0;
        _os_log_impl((void *)&_mh_execute_header, v87, v88, "Failed to lookup node given a valid destinationIndexPath", v89, 2u);
        swift_slowDealloc();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();

      ((void (*)(char *, uint64_t))v44)(v40, v144);
      return swift_storeEnumTagMultiPayload();
    }
LABEL_54:
    swift_once();
    goto LABEL_27;
  }
  uint64_t v126 = (char *)v44;
  uint64_t v119 = v55;
  uint64_t v57 = v54 + *(void *)(*(void *)v54 + 144);
  swift_beginAccess();
  uint64_t v129 = v54;
  uint64_t v58 = v137;
  uint64_t v59 = v138;
  uint64_t v60 = (char *)(v138 + 16);
  uint64_t v61 = *(void (**)(char *, uint64_t, uint64_t))(v138 + 16);
  uint64_t v117 = v57;
  v61(v137, v57, v6);
  unint64_t v127 = *(uint64_t **)(v12 + 24);
  ((void (*)(uint64_t, uint64_t))v127)(v6, v12);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v59 + 8);
  v62(v58, v6);
  uint64_t v63 = v122 + *(void *)(*(void *)v122 + 144);
  swift_beginAccess();
  unint64_t v64 = (char *)v131;
  id v137 = v60;
  uint64_t v116 = v61;
  v61((char *)v131, v63, v6);
  unint64_t v65 = v134;
  ((void (*)(uint64_t, uint64_t))v127)(v6, v12);
  v62(v64, v6);
  uint64_t v66 = v136;
  swift_getAssociatedConformanceWitness();
  unint64_t v67 = v139;
  LOBYTE(v64) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v68 = (void (*)(char *, uint64_t))v135[1];
  v68(v65, v66);
  v68(v67, v66);
  if (v64)
  {
    ((void (*)(char *, uint64_t))v126)(v143, v144);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
LABEL_37:
    uint64_t v84 = v142;
    uint64_t v85 = v146;
    goto LABEL_41;
  }
  uint64_t v91 = v129;
  uint64_t v84 = v142;
  v116(v142, v117, v6);
  uint64_t v85 = v146;
  swift_storeEnumTagMultiPayload();
  int64_t v92 = v143;
  if (!v130)
  {
    ((void (*)(char *, uint64_t))v126)(v143, v144);
LABEL_49:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_42;
  }
  uint64_t v93 = swift_weakLoadStrong();
  uint64_t v94 = v122;
  if (!v93) {
    goto LABEL_48;
  }
  uint64_t v95 = *(void *)(v93 + 16);
  swift_release();
  if (*(unsigned char *)(v94 + 32))
  {
    ((void (*)(char *, uint64_t))v126)(v92, v144);
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_42;
  }
  if (*(unsigned char *)(v91 + 32) == 1 || *(void *)(v91 + 24) >= *(void *)(v94 + 24))
  {
LABEL_48:
    ((void (*)(char *, uint64_t))v126)(v92, v144);
    goto LABEL_49;
  }
  v120(v140, v92, v144);
  uint64_t v109 = v125;
  sub_10012E968(v95, v125);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v110 = v144;
  uint64_t v111 = (void (*)(char *, uint64_t))v126;
  ((void (*)(char *, uint64_t))v126)(v140, v144);
  v111(v92, v110);
  uint64_t v112 = v138;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v138 + 48))(v109, 1, v6) != 1)
  {
    uint64_t v108 = v141;
    (*(void (**)(char *, uint64_t))(v141 + 8))(v84, v85);
    BOOL v113 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 32);
    uint64_t v114 = v124;
    v113(v124, v109, v6);
    v113(v84, (uint64_t)v114, v6);
    swift_storeEnumTagMultiPayload();
    uint64_t v107 = v145;
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v108 + 32))(v107, v84, v85);
  }
  (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v109, v128);
LABEL_42:
  uint64_t v107 = v145;
  uint64_t v108 = v141;
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v108 + 32))(v107, v84, v85);
}

uint64_t sub_10012DC04@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  int v27 = a2;
  uint64_t v28 = a1;
  uint64_t v33 = a4;
  uint64_t v6 = swift_isaMask & *v4;
  uint64_t v7 = *(void *)(v6 + 0x50);
  uint64_t v8 = type metadata accessor for Optional();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v30 = &v26[-v10];
  uint64_t v11 = *(void *)(v7 - 8);
  __chkstk_darwin(v9);
  uint64_t v13 = &v26[-v12];
  uint64_t v36 = Array.init()();
  uint64_t v14 = sub_100032E7C();
  uint64_t v15 = *(void *)(v6 + 88);
  uint64_t v29 = a3;
  uint64_t v19 = sub_1000EBBA0(a3, v14, v17, v18, v16 & 1, v7, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
    while (*(unsigned char *)(v19 + 72) == 2)
    {
      uint64_t v20 = v19 + *(void *)(*(void *)v19 + 144);
      swift_beginAccess();
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, v20, v7);
      type metadata accessor for Array();
      swift_retain();
      Array.append(_:)();
      swift_beginAccess();
      uint64_t v34 = *(void *)(v19 + 64);
      type metadata accessor for TTRITreeViewNode();
      type metadata accessor for Array();
      swift_bridgeObjectRetain();
      swift_getWitnessTable();
      BidirectionalCollection.last.getter();
      swift_bridgeObjectRelease();
      swift_release_n();
      uint64_t v19 = v35;
      if (!v35) {
        goto LABEL_6;
      }
    }
    swift_release();
  }
LABEL_6:
  uint64_t v21 = v36;
  uint64_t v35 = v36;
  type metadata accessor for Array();
  swift_getWitnessTable();
  if (Collection.isEmpty.getter())
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v33, 1, 1, v7);
  }
  else
  {
    if (sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20))
    {
      char v23 = v27 & 1;
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v25 = v30;
      sub_1000BCFFC((uint64_t)Strong, v28, v23);
      swift_release();
    }
    else
    {
      uint64_t v35 = v21;
      uint64_t v25 = v30;
      Collection.first.getter();
    }
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v31 + 32))(v33, v25, v32);
  }
}

void sub_10012E01C(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  int64_t v92 = (void *)a1;
  uint64_t v93 = a3;
  uint64_t v91 = a4;
  int v7 = a2 & 1;
  uint64_t v8 = swift_isaMask & *v5;
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v87 = (uint64_t)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v90 = (uint64_t)&v85 - v12;
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v88 = *(void *)(v13 - 8);
  uint64_t v89 = v13;
  __chkstk_darwin(v13);
  uint64_t v86 = (char *)&v85 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v85 - v16;
  uint64_t v18 = *(void *)(*(void *)(v8 + 80) - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v85 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v85 - v23;
  uint64_t v25 = *(void *)(v8 + 88);
  uint64_t v27 = v26;
  uint64_t inserted = type metadata accessor for TTRITreeViewTableAdapter.InsertDestination();
  __chkstk_darwin(inserted);
  uint64_t v30 = (char *)&v85 - v29;
  sub_10012C128((uint64_t)v92, v7, v93, (char *)&v85 - v29);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v32 = 0;
  if (!EnumCaseMultiPayload)
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v24, v30, v27);
    uint64_t v49 = sub_100032E7C();
    uint64_t v51 = v90;
    sub_1000EC14C((uint64_t)v24, v49, v52, v53, v50 & 1, v27, v25, v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v55 = v88;
    uint64_t v54 = v89;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v51, 1, v89) == 1)
    {
      (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v27);
      sub_10003B6F8(v90, &qword_10078E8F0);
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v17, v90, v54);
    id v56 = *(id *)((char *)v5 + qword_10078DEA0);
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    [v56 rectForRowAtIndexPath:isa];
    CGFloat x = v58;
    double v61 = v60;
    CGFloat width = v62;
    CGFloat v65 = v64;

    v97.origin.CGFloat x = x;
    v97.origin.double y = v61;
    v97.size.CGFloat width = width;
    v97.size.height = v65;
    LOBYTE(v56) = CGRectIsEmpty(v97);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v54);
    (*(void (**)(char *, uint64_t))(v18 + 8))(v24, v27);
    if (v56) {
      goto LABEL_20;
    }
    uint64_t v66 = v91;
LABEL_25:
    v102.size.height = 0.0;
    v102.origin.CGFloat x = x;
    v102.origin.double y = v61;
    v102.size.CGFloat width = width;
    *(CGRect *)(&v79 - 1) = CGRectInset(v102, 0.0, a5 * -0.5);
    uint64_t v32 = v84;
    char v78 = 0;
    goto LABEL_21;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v33 = v18;
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v21, v30, v27);
    uint64_t v34 = sub_100032E7C();
    uint64_t v38 = sub_1000EBBA0((uint64_t)v21, v34, v36, v37, v35 & 1, v27, v25);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v38)
    {
LABEL_19:
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v27);
      goto LABEL_20;
    }
    sub_100032E7C();
    uint64_t v39 = sub_1000EA498();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!v39)
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v27);
      swift_release();
      goto LABEL_20;
    }
    sub_100032E7C();
    uint64_t v40 = sub_1000EA248();
    int64_t v92 = v5;
    uint64_t v93 = v40;
    char v42 = v41;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v42 & 1) == 0)
    {
      uint64_t v90 = v39;
      uint64_t v43 = (uint64_t)v92;
      sub_100032E7C();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      type metadata accessor for TTRITreeViewSectionsMetadata.Section();
      Array.subscript.getter();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v94 = v96;
      type metadata accessor for TTRITreeViewNode();
      type metadata accessor for Array();
      swift_getWitnessTable();
      BidirectionalCollection.last.getter();
      swift_bridgeObjectRelease();
      if (v95)
      {
        sub_100032E7C();
        uint64_t v45 = v87;
        sub_1000EA30C(v44 & 1, v87);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v46 = v45;
        swift_bridgeObjectRelease();
        uint64_t v48 = v88;
        uint64_t v47 = v89;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v88 + 48))(v46, 1, v89) == 1)
        {
          (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v27);
          swift_release();
          swift_release();
          swift_release();
          sub_10003B6F8(v46, &qword_10078E8F0);
          goto LABEL_20;
        }
        uint64_t v69 = v86;
        (*(void (**)(char *, uint64_t, uint64_t))(v48 + 32))(v86, v46, v47);
        id v70 = *(id *)((char *)v92 + qword_10078DEA0);
        Class v71 = IndexPath._bridgeToObjectiveC()().super.isa;
        [v70 rectForRowAtIndexPath:v71];
        CGFloat x = v72;
        double v74 = v73;
        CGFloat width = v75;
        CGFloat v77 = v76;

        v99.origin.CGFloat x = x;
        v99.origin.double y = v74;
        v99.size.CGFloat width = width;
        v99.size.height = v77;
        if (CGRectIsEmpty(v99))
        {
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v48 + 8))(v69, v47);
          goto LABEL_19;
        }
        v101.origin.CGFloat x = x;
        v101.origin.double y = v74;
        v101.size.CGFloat width = width;
        v101.size.height = v77;
        double Height = CGRectGetHeight(v101);
        swift_release();
        swift_release();
        swift_release();
        double v61 = v74 + Height;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v69, v47);
        goto LABEL_24;
      }
      [*(id *)(v43 + qword_10078DEA0) rectForHeaderInSection:v93];
      CGFloat x = v98.origin.x;
      double y = v98.origin.y;
      CGFloat width = v98.size.width;
      CGFloat v68 = v98.size.height;
      if (!CGRectIsEmpty(v98))
      {
        v100.origin.CGFloat x = x;
        v100.origin.double y = y;
        v100.size.CGFloat width = width;
        v100.size.height = v68;
        double v82 = CGRectGetHeight(v100);
        swift_release();
        swift_release();
        double v61 = y + v82;
LABEL_24:
        uint64_t v66 = v91;
        (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v27);
        goto LABEL_25;
      }
    }
    (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v27);
    swift_release();
    swift_release();
  }
LABEL_20:
  char v78 = 1;
  uint64_t v79 = 0;
  uint64_t v80 = 0;
  uint64_t v81 = 0;
  uint64_t v66 = v91;
LABEL_21:
  *(void *)uint64_t v66 = v32;
  *(void *)(v66 + 8) = v79;
  *(void *)(v66 + 16) = v80;
  *(void *)(v66 + 24) = v81;
  *(unsigned char *)(v66 + 32) = v78;
}

uint64_t sub_10012E968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = IndexPath.row.getter();
  if (!__OFSUB__(result, 1))
  {
    uint64_t v19 = a2;
    IndexPath.section.getter();
    IndexPath.init(row:section:)();
    sub_100032E7C();
    uint64_t v11 = *(void *)(v5 + 80);
    uint64_t v12 = sub_10003BA80();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v12)
    {
      uint64_t Strong = swift_weakLoadStrong();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if (Strong)
      {
        uint64_t v14 = *(void *)(Strong + 16);
        swift_release();
        if (v14 == a1)
        {
          uint64_t v15 = v12 + *(void *)(*(void *)v12 + 144);
          swift_beginAccess();
          uint64_t v16 = *(void *)(v11 - 8);
          uint64_t v17 = v19;
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v19, v15, v11);
          swift_release();
          uint64_t v18 = 0;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17, v18, 1, v11);
        }
      }
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    uint64_t v16 = *(void *)(v11 - 8);
    uint64_t v18 = 1;
    uint64_t v17 = v19;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v17, v18, 1, v11);
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for TTRITreeViewAnimatingWrapper()
{
  return self;
}

id sub_10012EC4C()
{
  return [*(id *)(*(void *)v0 + 16) startAnimation];
}

void sub_10012EC60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)v2 + 16);
  v5[4] = a1;
  void v5[5] = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_10000AD88;
  v5[3] = &unk_10073B4F0;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  [v3 addAnimations:v4];
  _Block_release(v4);
}

void sub_10012ED1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(*(void *)v2 + 16);
  v5[4] = a1;
  void v5[5] = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  _OWORD v5[2] = sub_1001195F8;
  v5[3] = &unk_10073B4C8;
  uint64_t v4 = _Block_copy(v5);
  swift_retain();
  swift_release();
  [v3 addCompletion:v4];
  _Block_release(v4);
}

uint64_t sub_10012EDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = (char **)(v2 + 16);
  swift_beginAccess();
  uint64_t v7 = *(char **)(v2 + 16);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_10056FF50(0, *((void *)v7 + 2) + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_10056FF50((char *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  *((void *)v7 + 2) = v10 + 1;
  uint64_t v11 = &v7[16 * v10];
  *((void *)v11 + 4) = sub_1000218B8;
  *((void *)v11 + 5) = v5;
  return swift_endAccess();
}

uint64_t sub_10012EEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  uint64_t v6 = (char **)(v2 + 24);
  swift_beginAccess();
  uint64_t v7 = *(char **)(v2 + 24);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 24) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_100570080(0, *((void *)v7 + 2) + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = *((void *)v7 + 2);
  unint64_t v9 = *((void *)v7 + 3);
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_100570080((char *)(v9 > 1), v10 + 1, 1, v7);
    *uint64_t v6 = v7;
  }
  *((void *)v7 + 2) = v10 + 1;
  uint64_t v11 = &v7[16 * v10];
  *((void *)v11 + 4) = sub_100140020;
  *((void *)v11 + 5) = v5;
  return swift_endAccess();
}

uint64_t sub_10012EFE8(uint64_t a1, uint64_t a2)
{
  return sub_10012EDD8(a1, a2);
}

uint64_t sub_10012F00C(uint64_t a1, uint64_t a2)
{
  return sub_10012EEE0(a1, a2);
}

void sub_10012F030(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_100366F3C(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v5[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100132870(v5);
  *a1 = v3;
}

uint64_t sub_10012F0DC(uint64_t a1, uint64_t (*a2)(void))
{
  return a2() & 1;
}

uint64_t sub_10012F110(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return sub_10003B754((uint64_t *)&unk_1007894B0);
  }
  else
  {
    return type metadata accessor for _ContiguousArrayStorage();
  }
}

uint64_t sub_10012F180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRRemindersListViewModel.ItemID.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v20 = v1;
    uint64_t v21 = v4;
    uint64_t v22 = v3;
    uint64_t v23 = a1;
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v4 + 72);
    while (1)
    {
      sub_1000244A8(*(void *)(v7 + 48) + v12 * v10, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      char v13 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
      sub_100024388((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = 1;
        a1 = v23;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v15;
    uint64_t v24 = *v15;
    *uint64_t v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1005A5290();
      uint64_t v17 = v24;
    }
    a1 = v23;
    sub_10014011C(*(void *)(v17 + 48) + v12 * v10, v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_1001309F8(v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(char *))&TTRRemindersListViewModel.ItemID.hash(into:));
    *uint64_t v15 = v24;
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
LABEL_10:
    uint64_t v4 = v21;
    uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v14, 1, v3);
}

uint64_t sub_10012F414(uint64_t a1)
{
  return sub_10012F8D8(a1, (void (*)(void))sub_1005A5528, (uint64_t (*)(uint64_t, uint64_t))sub_100130478);
}

uint64_t sub_10012F440(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_100130598();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1005A56C0();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_100130854(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10012F618@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v20 = v1;
    uint64_t v21 = v4;
    uint64_t v22 = v3;
    uint64_t v23 = a1;
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v4 + 72);
    while (1)
    {
      sub_1000244A8(*(void *)(v7 + 48) + v12 * v10, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      char v13 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
      sub_100024388((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = 1;
        a1 = v23;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    id v15 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v15;
    uint64_t v24 = *v15;
    *id v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1005A5D4C();
      uint64_t v17 = v24;
    }
    a1 = v23;
    sub_10014011C(*(void *)(v17 + 48) + v12 * v10, v23, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_1001309F8(v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(char *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:));
    *id v15 = v24;
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
LABEL_10:
    uint64_t v4 = v21;
    uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v14, 1, v3);
}

uint64_t sub_10012F8AC(uint64_t a1)
{
  return sub_10012F8D8(a1, (void (*)(void))sub_1005A600C, (uint64_t (*)(uint64_t, uint64_t))sub_100130734);
}

uint64_t sub_10012F8D8(uint64_t a1, void (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = v3;
  uint64_t v6 = *v4;
  if ((*v4 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v8 = *v4;
    }
    else {
      uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    char v9 = __CocoaSet.contains(_:)();
    swift_release();
    if (v9)
    {
      uint64_t v10 = a3(v8, a1);
      swift_bridgeObjectRelease();
      return v10;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  Hasher.init(_seed:)();
  Swift::UInt v12 = *(void *)(a1 + 16);
  Hasher._combine(_:)(v12);
  Swift::Int v13 = Hasher._finalize()();
  uint64_t v14 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v15 = v13 & ~v14;
  if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
    return 0;
  }
  uint64_t v16 = *(void *)(v6 + 48);
  if (*(void *)(*(void *)(v16 + 8 * v15) + 16) != v12)
  {
    uint64_t v17 = ~v14;
    do
    {
      unint64_t v15 = (v15 + 1) & v17;
      if (((*(void *)(v6 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(*(void *)(v16 + 8 * v15) + 16) != v12);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v4;
  uint64_t v21 = *v4;
  *uint64_t v4 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a2();
    uint64_t v19 = v21;
  }
  uint64_t v10 = *(void *)(*(void *)(v19 + 48) + 8 * v15);
  sub_100130C94(v15);
  *uint64_t v4 = v21;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10012FA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100040194((unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100040194((unint64_t *)&qword_100787548, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1005A636C();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_100130FEC(v12, (uint64_t (*)(void))&type metadata accessor for IndexPath, (unint64_t *)&qword_10078E340, (void (*)(uint64_t))&type metadata accessor for IndexPath, (uint64_t)&protocol conformance descriptor for IndexPath);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

uint64_t sub_10012FD9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  TTRRemindersListViewModel.SectionID.hash(into:)();
  Swift::Int v8 = Hasher._finalize()();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v20 = v1;
    uint64_t v21 = v4;
    uint64_t v22 = v3;
    uint64_t v23 = a1;
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v4 + 72);
    while (1)
    {
      sub_1000244A8(*(void *)(v7 + 48) + v12 * v10, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      char v13 = static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)();
      sub_100024388((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v14 = 1;
        a1 = v23;
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v15 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v15;
    uint64_t v24 = *v15;
    *uint64_t v15 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1005A5248();
      uint64_t v17 = v24;
    }
    a1 = v23;
    sub_10014011C(*(void *)(v17 + 48) + v12 * v10, v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_1001309F8(v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID, (void (*)(char *))&TTRRemindersListViewModel.SectionID.hash(into:));
    *uint64_t v15 = v24;
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
LABEL_10:
    uint64_t v4 = v21;
    uint64_t v3 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v14, 1, v3);
}

uint64_t sub_100130030(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 7;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 7;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1005A638C();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_100130E40(v6);
  uint64_t *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_100130154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100040194(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v31 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v13 = v9;
  uint64_t v30 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v26 = v2;
    uint64_t v27 = v6;
    uint64_t v28 = a2;
    uint64_t v29 = ~v11;
    uint64_t v16 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v15 = v6 + 16;
    uint64_t v14 = v16;
    uint64_t v17 = *(void *)(v15 + 56);
    while (1)
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v13 + 48) + v17 * v12, v5);
      sub_100040194((unint64_t *)&qword_10078E350, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v19 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v15 - 8))(v8, v5);
      if (v19) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v29;
      uint64_t v13 = v18;
      if (((*(void *)(v30 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v20 = 1;
        uint64_t v6 = v27;
        a2 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v21 = v26;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    uint64_t v32 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1005A6524();
      uint64_t v23 = v32;
    }
    uint64_t v6 = v27;
    a2 = v28;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v27 + 32))(v28, *(void *)(v23 + 48) + v17 * v12, v5);
    sub_100130FEC(v12, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
    *uint64_t v21 = v32;
    swift_bridgeObjectRelease();
    uint64_t v20 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v20 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v20, 1, v5);
}

unint64_t sub_100130478(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = __CocoaSet.count.getter();
  uint64_t v6 = swift_unknownObjectRetain();
  Swift::Int v7 = sub_1005ACADC(v6, v5);
  Swift::Int v16 = v7;
  Hasher.init(_seed:)();
  Swift::UInt v8 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v8);
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t result = v9 & ~v10;
  Swift::Int v12 = v7 + 56;
  if (((*(void *)(v7 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v7 + 48);
  uint64_t v14 = *(void *)(v13 + 8 * result);
  if (*(void *)(v14 + 16) != v8)
  {
    uint64_t v15 = ~v10;
    while (1)
    {
      unint64_t result = (result + 1) & v15;
      if (((*(void *)(v12 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        break;
      }
      uint64_t v14 = *(void *)(v13 + 8 * result);
      if (*(void *)(v14 + 16) == v8) {
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_6:
  unint64_t result = sub_100130C94(result);
  if (v8 == *(void *)(v14 + 16))
  {
    *uint64_t v3 = v16;
    return v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_100130598()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1005ACB04(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_1000368FC(0, qword_10078E3D0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_100130854(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_100130734(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v5 = __CocoaSet.count.getter();
  uint64_t v6 = swift_unknownObjectRetain();
  Swift::Int v7 = sub_1005ACF0C(v6, v5);
  Swift::Int v16 = v7;
  Hasher.init(_seed:)();
  Swift::UInt v8 = *(void *)(a2 + 16);
  Hasher._combine(_:)(v8);
  Swift::Int v9 = Hasher._finalize()();
  uint64_t v10 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t result = v9 & ~v10;
  Swift::Int v12 = v7 + 56;
  if (((*(void *)(v7 + 56 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v13 = *(void *)(v7 + 48);
  uint64_t v14 = *(void *)(v13 + 8 * result);
  if (*(void *)(v14 + 16) != v8)
  {
    uint64_t v15 = ~v10;
    while (1)
    {
      unint64_t result = (result + 1) & v15;
      if (((*(void *)(v12 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
        break;
      }
      uint64_t v14 = *(void *)(v13 + 8 * result);
      if (*(void *)(v14 + 16) == v8) {
        goto LABEL_6;
      }
    }
    __break(1u);
    goto LABEL_9;
  }
LABEL_6:
  unint64_t result = sub_100130C94(result);
  if (v8 == *(void *)(v14 + 16))
  {
    *uint64_t v3 = v16;
    return v14;
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_100130854(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    unint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1001309F8(unint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void), void (*a4)(char *))
{
  uint64_t v30 = a4;
  uint64_t v29 = a2(0);
  uint64_t result = __chkstk_darwin(v29);
  Swift::Int v10 = (char *)&v27 - v9;
  uint64_t v11 = *v4;
  uint64_t v12 = *v4 + 56;
  uint64_t v13 = -1 << *(unsigned char *)(*v4 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(v12 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v27 = v8;
    uint64_t v28 = v4;
    uint64_t v15 = ~v13;
    swift_retain();
    uint64_t v16 = _HashTable.previousHole(before:)();
    uint64_t v31 = v12;
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v17 = (v16 + 1) & v15;
      uint64_t v18 = *(void *)(v27 + 72);
      while (1)
      {
        int64_t v19 = v18 * v14;
        sub_1000244A8(*(void *)(v11 + 48) + v18 * v14, (uint64_t)v10, a3);
        Hasher.init(_seed:)();
        v30(v32);
        Swift::Int v20 = Hasher._finalize()();
        sub_100024388((uint64_t)v10, a3);
        unint64_t v21 = v20 & v15;
        if ((uint64_t)a1 >= (uint64_t)v17) {
          break;
        }
        if (v21 < v17) {
          goto LABEL_11;
        }
LABEL_12:
        unint64_t v22 = v18 * a1;
        if ((uint64_t)(v18 * a1) < v19 || *(void *)(v11 + 48) + v18 * a1 >= *(void *)(v11 + 48) + v19 + v18)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v14;
          if (v22 == v19) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v14;
LABEL_6:
        unint64_t v14 = (v14 + 1) & v15;
        if (((*(void *)(v31 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v21 < v17) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v21) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    *(void *)(v31 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v4 = v28;
  }
  else
  {
    *(void *)(v12 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v23 = *v4;
  uint64_t v24 = *(void *)(*v4 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v23 + 16) = v26;
    ++*(_DWORD *)(v23 + 36);
  }
  return result;
}

unint64_t sub_100130C94(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(*(void *)(v10 + 16));
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (void *)(v12 + 8 * v2);
          unint64_t v14 = (void *)(v12 + 8 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_100130E40(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (unsigned char *)(v12 + v2);
          unint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_100130FEC(int64_t a1, uint64_t (*a2)(void), unint64_t *a3, void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  char v42 = a3;
  uint64_t v7 = a2(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = *v5;
  uint64_t v13 = *v5 + 56;
  uint64_t v14 = -1 << *(unsigned char *)(*v5 + 32);
  unint64_t v15 = (a1 + 1) & ~v14;
  if (((1 << v15) & *(void *)(v13 + 8 * (v15 >> 6))) != 0)
  {
    uint64_t v38 = v5;
    uint64_t v16 = ~v14;
    swift_retain();
    uint64_t v17 = _HashTable.previousHole(before:)();
    uint64_t v18 = v12;
    if ((*(void *)(v13 + 8 * (v15 >> 6)) & (1 << v15)) != 0)
    {
      unint64_t v40 = (v17 + 1) & v16;
      Swift::Int v20 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
      uint64_t v19 = v8 + 16;
      uint64_t v39 = v20;
      uint64_t v45 = *(void *)(v19 + 56);
      uint64_t v41 = v19;
      unint64_t v21 = (void (**)(char *, uint64_t))(v19 - 8);
      do
      {
        uint64_t v22 = v13;
        int64_t v23 = v45 * v15;
        v39(v11, *(void *)(v18 + 48) + v45 * v15, v7);
        uint64_t v24 = v18;
        sub_100040194(v42, v43);
        uint64_t v25 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v21)(v11, v7);
        unint64_t v26 = v25 & v16;
        if (a1 >= (uint64_t)v40)
        {
          if (v26 >= v40 && a1 >= (uint64_t)v26)
          {
LABEL_16:
            uint64_t v18 = v24;
            uint64_t v29 = *(void *)(v24 + 48);
            int64_t v30 = v45 * a1;
            unint64_t v31 = v29 + v45 * a1;
            unint64_t v32 = v29 + v23 + v45;
            if (v45 * a1 < v23 || v31 >= v32)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v15;
            }
            else
            {
              a1 = v15;
              if (v30 != v23)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v15;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v26 >= v40 || a1 >= (uint64_t)v26)
        {
          goto LABEL_16;
        }
        uint64_t v18 = v24;
LABEL_5:
        unint64_t v15 = (v15 + 1) & v16;
        uint64_t v13 = v22;
      }
      while (((*(void *)(v22 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    }
    *(void *)(v13 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v5 = v38;
  }
  else
  {
    *(void *)(v13 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v34 = *v5;
  uint64_t v35 = *(void *)(*v5 + 16);
  BOOL v36 = __OFSUB__(v35, 1);
  uint64_t v37 = v35 - 1;
  if (v36)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v34 + 16) = v37;
    ++*(_DWORD *)(v34 + 36);
  }
  return result;
}

uint64_t sub_1001312D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10003B754(&qword_10078E380);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  unint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_38;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v17 = v15 + 2;
          if (v17 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v17];
          if (!v16)
          {
            while (1)
            {
              uint64_t v11 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_39;
              }
              if (v11 >= v33) {
                return v9;
              }
              unint64_t v16 = v32[v11];
              ++v17;
              if (v16) {
                goto LABEL_22;
              }
            }
          }
          uint64_t v11 = v17;
        }
      }
LABEL_22:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v19 = *(void *)(v4 + 56) + 16 * v14;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(*(void *)(v18 + 16));
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_37;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    *(void *)(*(void *)(v9 + 48) + 8 * v25) = v18;
    uint64_t v30 = *(void *)(v9 + 56) + 16 * v25;
    *(void *)uint64_t v30 = v20;
    *(unsigned char *)(v30 + 8) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_retain();
    if (!v5) {
      return v9;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_10013155C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_10003B754(&qword_10078E2D0);
  uint64_t result = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v9 = result;
  unint64_t v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v19 = *(void *)(v4 + 56) + 16 * v14;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    Hasher.init(_seed:)();
    Hasher._combine(_:)(*(void *)(v18 + 16));
    uint64_t result = Hasher._finalize()();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    *(void *)(*(void *)(v9 + 48) + 8 * v25) = v18;
    uint64_t v30 = *(void *)(v9 + 56) + 16 * v25;
    *(void *)uint64_t v30 = v20;
    *(unsigned char *)(v30 + 8) = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_retain();
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_1001317F4(uint64_t a1)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v24 - v11;
  if (!*(void *)(*(void *)v1 + 16)) {
    return;
  }
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_24;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_24;
        }
        unint64_t v22 = *(void *)(v25 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v17) {
            goto LABEL_24;
          }
          unint64_t v22 = *(void *)(v25 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    sub_1000244A8(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10014011C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_10012F180((uint64_t)v5);
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_10078E360);
    sub_100024388((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v17) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_100131AC0(uint64_t a1, uint64_t *a2, unint64_t *a3, void (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t))
{
  if ((*(void *)v5 & 0xC000000000000001) != 0)
  {
    uint64_t result = __CocoaSet.count.getter();
    if (!result) {
      return result;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10003B754(a2);
      sub_100037EA0(a3, a2);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      a1 = v29;
      uint64_t v27 = v30;
      uint64_t v11 = v31;
      uint64_t v12 = v32;
      unint64_t v13 = v33;
    }
    else
    {
      uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v27 = a1 + 56;
      uint64_t v15 = ~v14;
      uint64_t v16 = -v14;
      if (v16 < 64) {
        uint64_t v17 = ~(-1 << v16);
      }
      else {
        uint64_t v17 = -1;
      }
      unint64_t v13 = v17 & *(void *)(a1 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v11 = v15;
      uint64_t v12 = 0;
    }
    int64_t v25 = (unint64_t)(v11 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v13)
      {
        uint64_t v18 = (v13 - 1) & v13;
        unint64_t v19 = __clz(__rbit64(v13)) | (v12 << 6);
        uint64_t v20 = v12;
      }
      else
      {
        int64_t v22 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
          return result;
        }
        if (v22 >= v25) {
          return sub_100051244();
        }
        unint64_t v23 = *(void *)(v27 + 8 * v22);
        uint64_t v20 = v12 + 1;
        if (!v23)
        {
          uint64_t v20 = v12 + 2;
          if (v12 + 2 >= v25) {
            return sub_100051244();
          }
          unint64_t v23 = *(void *)(v27 + 8 * v20);
          if (!v23)
          {
            uint64_t v20 = v12 + 3;
            if (v12 + 3 >= v25) {
              return sub_100051244();
            }
            unint64_t v23 = *(void *)(v27 + 8 * v20);
            if (!v23)
            {
              uint64_t v20 = v12 + 4;
              if (v12 + 4 >= v25) {
                return sub_100051244();
              }
              unint64_t v23 = *(void *)(v27 + 8 * v20);
              if (!v23)
              {
                uint64_t v20 = v12 + 5;
                if (v12 + 5 >= v25) {
                  return sub_100051244();
                }
                unint64_t v23 = *(void *)(v27 + 8 * v20);
                if (!v23)
                {
                  uint64_t v24 = v12 + 6;
                  while (v25 != v24)
                  {
                    unint64_t v23 = *(void *)(v27 + 8 * v24++);
                    if (v23)
                    {
                      uint64_t v20 = v24 - 1;
                      goto LABEL_32;
                    }
                  }
                  return sub_100051244();
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v18 = (v23 - 1) & v23;
        unint64_t v19 = __clz(__rbit64(v23)) + (v20 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v19);
      swift_retain();
      if (!v21) {
        return sub_100051244();
      }
      while (1)
      {
        sub_10012F8D8(v21, a4, a5);
        swift_release();
        uint64_t result = swift_release();
        uint64_t v12 = v20;
        unint64_t v13 = v18;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (__CocoaSet.Iterator.next()())
        {
          swift_unknownObjectRetain();
          sub_10003B754(a2);
          swift_dynamicCast();
          uint64_t v21 = v28;
          swift_unknownObjectRelease();
          uint64_t v20 = v12;
          uint64_t v18 = v13;
          if (v28) {
            continue;
          }
        }
        return sub_100051244();
      }
    }
  }
  uint64_t result = *(void *)(*(void *)v5 + 16);
  if (result) {
    goto LABEL_5;
  }
  return result;
}

uint64_t sub_100131DDC(uint64_t a1)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6 - 8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v25 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v26 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v18 = (unint64_t)(v15 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v17)
    {
      unint64_t v20 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v21 = v20 | (v19 << 6);
      goto LABEL_6;
    }
    int64_t v22 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v22);
    ++v19;
    if (!v23)
    {
      int64_t v19 = v22 + 1;
      if (v22 + 1 >= v18) {
        return swift_release();
      }
      unint64_t v23 = *(void *)(v26 + 8 * v19);
      if (!v23)
      {
        int64_t v19 = v22 + 2;
        if (v22 + 2 >= v18) {
          return swift_release();
        }
        unint64_t v23 = *(void *)(v26 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 3;
          if (v22 + 3 >= v18) {
            return swift_release();
          }
          unint64_t v23 = *(void *)(v26 + 8 * v19);
          if (!v23) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v17 = (v23 - 1) & v23;
    unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
LABEL_6:
    sub_1000244A8(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v21, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10014011C((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_10012F618((uint64_t)v5);
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_10078E260);
    uint64_t result = sub_100024388((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  int64_t v24 = v22 + 4;
  if (v24 >= v18) {
    return swift_release();
  }
  unint64_t v23 = *(void *)(v26 + 8 * v24);
  if (v23)
  {
    int64_t v19 = v24;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v18) {
      return swift_release();
    }
    unint64_t v23 = *(void *)(v26 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1001320A8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IndexPath();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8);
  unint64_t v13 = (char *)&v24 - v12;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v14 = *(void *)(a1 + 56);
  uint64_t v24 = a1 + 56;
  uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v27 = v4 + 16;
  uint64_t v28 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  int64_t v25 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v26 = v4 + 48;
  uint64_t v29 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v18 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_5:
  unint64_t v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (unint64_t i = v19 | (v18 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v18 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v13, *(void *)(v29 + 48) + *(void *)(v4 + 72) * i, v3);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v13, 0, 1, v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v13, 1, v3) == 1) {
      return swift_release();
    }
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v13, v3);
    sub_10012FA78((uint64_t)v6, (uint64_t)v10);
    sub_10003B6F8((uint64_t)v10, &qword_10078E8F0);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    if (v17) {
      goto LABEL_5;
    }
LABEL_6:
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v24 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v24 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v25) {
            goto LABEL_25;
          }
          unint64_t v22 = *(void *)(v24 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_21:
    unint64_t v17 = (v22 - 1) & v22;
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v25)
  {
LABEL_25:
    (*v28)(v13, 1, 1, v3);
    return swift_release();
  }
  unint64_t v22 = *(void *)(v24 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v25) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v24 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_21;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100132430(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_100130030(*(unsigned char *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

void sub_1001325A4(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8);
  unint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v24 - v11;
  if (!*(void *)(*(void *)v1 + 16)) {
    return;
  }
  uint64_t v13 = *(void *)(a1 + 56);
  uint64_t v25 = a1 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v18 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_6;
    }
    int64_t v21 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v18;
    if (!v22)
    {
      int64_t v18 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_24;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v18);
      if (!v22)
      {
        int64_t v18 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_24;
        }
        unint64_t v22 = *(void *)(v25 + 8 * v18);
        if (!v22)
        {
          int64_t v18 = v21 + 3;
          if (v21 + 3 >= v17) {
            goto LABEL_24;
          }
          unint64_t v22 = *(void *)(v25 + 8 * v18);
          if (!v22) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v18 << 6);
LABEL_6:
    sub_1000244A8(*(void *)(a1 + 48) + *(void *)(v7 + 72) * v20, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10014011C((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_10012FD9C((uint64_t)v5);
    sub_10003B6F8((uint64_t)v5, &qword_10078C890);
    sub_100024388((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
  }
  int64_t v23 = v21 + 4;
  if (v23 >= v17)
  {
LABEL_24:
    swift_release();
    return;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v18 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v18 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v18 >= v17) {
      goto LABEL_24;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v18);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

void sub_100132870(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void **)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v136 = (char *)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v151 = (char *)&v131 - v8;
  __chkstk_darwin(v9);
  uint64_t v146 = (char *)&v131 - v10;
  __chkstk_darwin(v11);
  long long v147 = (char *)&v131 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int v14 = _minimumMergeRunLength(_:)(v13);
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_140;
    }
    if (v13) {
      sub_100133430(0, v13, 1, a1);
    }
    return;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_148;
  }
  uint64_t v149 = v4;
  int64_t v150 = a1;
  Swift::Int v133 = v14;
  if (v13 < 2)
  {
    unint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v138 = (unint64_t)_swiftEmptyArrayStorage
         + ((*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80));
    uint64_t v132 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = _swiftEmptyArrayStorage[2];
LABEL_106:
      if (v21 >= 2)
      {
        uint64_t v125 = *v150;
        do
        {
          unint64_t v126 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_135;
          }
          if (!v125) {
            goto LABEL_147;
          }
          uint64_t v127 = *(void *)&v19[16 * v126 + 32];
          uint64_t v128 = *(void *)&v19[16 * v21 + 24];
          sub_100133750(v125 + v5[9] * v127, v125 + v5[9] * *(void *)&v19[16 * v21 + 16], v125 + v5[9] * v128, v138);
          if (v2) {
            break;
          }
          if (v128 < v127) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v19 = sub_10047596C((uint64_t)v19);
          }
          if (v126 >= *((void *)v19 + 2)) {
            goto LABEL_137;
          }
          uint64_t v129 = &v19[16 * v126 + 32];
          *(void *)uint64_t v129 = v127;
          *((void *)v129 + 1) = v128;
          unint64_t v130 = *((void *)v19 + 2);
          if (v21 > v130) {
            goto LABEL_138;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v130 - v21));
          *((void *)v19 + 2) = v130 - 1;
          unint64_t v21 = v130 - 1;
        }
        while (v130 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v132[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*((unsigned __int8 *)v5 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v5 + 80);
    uint64_t v132 = (void *)v17;
    unint64_t v138 = v17 + v18;
  }
  Swift::Int v20 = 0;
  uint64_t v144 = (void (**)(char *, uint64_t))(v5 + 1);
  uint64_t v145 = v5 + 2;
  uint64_t v154 = (void (**)(char *, uint64_t, uint64_t))(v5 + 4);
  unint64_t v19 = (char *)_swiftEmptyArrayStorage;
  char v139 = v5;
  while (1)
  {
    Swift::Int v22 = v20;
    Swift::Int v23 = v20 + 1;
    Swift::Int v137 = v20;
    if (v20 + 1 >= v13) {
      goto LABEL_37;
    }
    uint64_t v24 = v149;
    uint64_t v25 = *v150;
    uint64_t v141 = v25;
    Swift::Int v142 = v20 + 1;
    Swift::Int v153 = v139[9];
    Swift::Int v26 = v153;
    uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v139[2];
    v27(v147, v25 + v153 * v23, v149);
    uint64_t v28 = v25 + v26 * v22;
    uint64_t v29 = v146;
    v27(v146, v28, v24);
    uint64_t v30 = sub_100040194(&qword_10078E338, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v31 = v147;
    Swift::Int v148 = v30;
    LODWORD(v152) = dispatch thunk of static Comparable.< infix(_:_:)();
    Swift::Int v32 = v13;
    unint64_t v33 = (void (*)(char *, uint64_t))v139[1];
    uint64_t v34 = v29;
    Swift::Int v22 = v137;
    v33(v34, v24);
    v33(v31, v24);
    Swift::Int v35 = v153;
    Swift::Int v23 = v22 + 2;
    Swift::Int v143 = v32;
    if (v22 + 2 >= v32)
    {
      Swift::Int v13 = v143;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      v142 *= v153;
      uint64_t v36 = v141;
      Swift::Int v37 = v153 * v23;
      while (1)
      {
        Swift::Int v38 = v23;
        uint64_t v39 = v147;
        uint64_t v40 = v149;
        v27(v147, v36 + v37, v149);
        uint64_t v41 = v146;
        v27(v146, v36 + v142, v40);
        int v42 = dispatch thunk of static Comparable.< infix(_:_:)();
        v33(v41, v40);
        v33(v39, v40);
        if ((v152 ^ v42)) {
          break;
        }
        Swift::Int v23 = v38 + 1;
        Swift::Int v35 = v153;
        v36 += v153;
        if (v143 == v38 + 1)
        {
          Swift::Int v13 = v143;
          Swift::Int v23 = v143;
          uint64_t v2 = v131;
          unint64_t v19 = v134;
          Swift::Int v22 = v137;
          if (v152) {
            goto LABEL_25;
          }
          goto LABEL_37;
        }
      }
      uint64_t v2 = v131;
      unint64_t v19 = v134;
      Swift::Int v23 = v38;
      Swift::Int v22 = v137;
      Swift::Int v13 = v143;
      Swift::Int v35 = v153;
      if ((v152 & 1) == 0) {
        goto LABEL_37;
      }
    }
LABEL_25:
    if (v23 < v22) {
      goto LABEL_141;
    }
    if (v22 >= v23)
    {
LABEL_37:
      uint64_t v47 = v150;
      goto LABEL_38;
    }
    uint64_t v134 = v19;
    uint64_t v43 = 0;
    uint64_t v44 = v35 * (v23 - 1);
    Swift::Int v45 = v23 * v35;
    uint64_t v46 = v22 * v35;
    uint64_t v47 = v150;
    Swift::Int v148 = v23;
    do
    {
      if (v22 != v23 + v43 - 1)
      {
        uint64_t v49 = v141;
        if (!v141) {
          goto LABEL_146;
        }
        uint64_t v50 = v2;
        unint64_t v51 = v141 + v46;
        uint64_t v52 = (char *)(v141 + v44);
        int64_t v152 = *v154;
        v152(v136, v141 + v46, v149);
        if (v46 < v44 || v51 >= v49 + v45)
        {
          uint64_t v48 = v149;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v48 = v149;
          if (v46 != v44) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v152(v52, (uint64_t)v136, v48);
        uint64_t v2 = v50;
        uint64_t v47 = v150;
        Swift::Int v23 = v148;
        Swift::Int v35 = v153;
      }
      ++v22;
      --v43;
      v44 -= v35;
      v45 -= v35;
      v46 += v35;
    }
    while (v22 < v23 + v43);
    unint64_t v19 = v134;
    Swift::Int v22 = v137;
    Swift::Int v13 = v143;
LABEL_38:
    uint64_t v53 = v149;
    if (v23 >= v13) {
      goto LABEL_57;
    }
    if (__OFSUB__(v23, v22)) {
      goto LABEL_139;
    }
    if (v23 - v22 >= v133) {
      goto LABEL_57;
    }
    if (__OFADD__(v22, v133)) {
      goto LABEL_142;
    }
    Swift::Int v54 = v22 + v133 >= v13 ? v13 : v22 + v133;
    if (v54 < v22) {
      break;
    }
    if (v23 != v54)
    {
      uint64_t v134 = v19;
      uint64_t v131 = v2;
      uint64_t v55 = v139[9];
      os_log_type_t v140 = (void (*)(char *, uint64_t, uint64_t))v139[2];
      uint64_t v141 = v55;
      uint64_t v56 = v55 * (v23 - 1);
      Swift::Int v57 = v23 * v55;
      Swift::Int v135 = v54;
      do
      {
        uint64_t v59 = 0;
        Swift::Int v148 = v23;
        Swift::Int v142 = v57;
        Swift::Int v143 = v56;
        while (1)
        {
          uint64_t v60 = *v47;
          int64_t v152 = (void (*)(char *, uint64_t, uint64_t))(v57 + v59);
          Swift::Int v153 = v22;
          Swift::Int v61 = v57 + v59 + v60;
          double v62 = v147;
          uint64_t v63 = v47;
          double v64 = v140;
          v140(v147, v61, v53);
          uint64_t v65 = v56 + v59 + v60;
          uint64_t v66 = v146;
          v64(v146, v65, v53);
          sub_100040194(&qword_10078E338, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          LOBYTE(v60) = dispatch thunk of static Comparable.< infix(_:_:)();
          unint64_t v67 = *v144;
          (*v144)(v66, v53);
          v67(v62, v53);
          if ((v60 & 1) == 0) {
            break;
          }
          uint64_t v68 = *v63;
          if (!*v63) {
            goto LABEL_144;
          }
          Swift::Int v57 = v142;
          uint64_t v56 = v143;
          uint64_t v69 = (char *)(v68 + v143 + v59);
          id v70 = *v154;
          uint64_t v71 = v149;
          (*v154)(v151, v68 + v142 + v59, v149);
          uint64_t v53 = v71;
          swift_arrayInitWithTakeFrontToBack();
          v70(v69, (uint64_t)v151, v71);
          v59 -= v141;
          Swift::Int v22 = v153 + 1;
          Swift::Int v58 = v148;
          uint64_t v47 = v150;
          if (v148 == v153 + 1) {
            goto LABEL_49;
          }
        }
        Swift::Int v58 = v148;
        uint64_t v53 = v149;
        uint64_t v47 = v63;
        Swift::Int v57 = v142;
        uint64_t v56 = v143;
LABEL_49:
        Swift::Int v23 = v58 + 1;
        v56 += v141;
        v57 += v141;
        Swift::Int v22 = v137;
      }
      while (v23 != v135);
      Swift::Int v23 = v135;
      uint64_t v2 = v131;
      unint64_t v19 = v134;
    }
LABEL_57:
    if (v23 < v22) {
      goto LABEL_134;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v148 = v23;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      unint64_t v19 = sub_100475454(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v74 = *((void *)v19 + 2);
    unint64_t v73 = *((void *)v19 + 3);
    unint64_t v21 = v74 + 1;
    if (v74 >= v73 >> 1) {
      unint64_t v19 = sub_100475454((char *)(v73 > 1), v74 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    double v75 = v19 + 32;
    double v76 = &v19[16 * v74 + 32];
    Swift::Int v77 = v148;
    *(void *)double v76 = v22;
    *((void *)v76 + 1) = v77;
    if (v74)
    {
      while (1)
      {
        unint64_t v78 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v83 = &v75[16 * v21];
          uint64_t v84 = *((void *)v83 - 8);
          uint64_t v85 = *((void *)v83 - 7);
          BOOL v89 = __OFSUB__(v85, v84);
          uint64_t v86 = v85 - v84;
          if (v89) {
            goto LABEL_123;
          }
          uint64_t v88 = *((void *)v83 - 6);
          uint64_t v87 = *((void *)v83 - 5);
          BOOL v89 = __OFSUB__(v87, v88);
          uint64_t v81 = v87 - v88;
          char v82 = v89;
          if (v89) {
            goto LABEL_124;
          }
          unint64_t v90 = v21 - 2;
          uint64_t v91 = &v75[16 * v21 - 32];
          uint64_t v93 = *(void *)v91;
          uint64_t v92 = *((void *)v91 + 1);
          BOOL v89 = __OFSUB__(v92, v93);
          uint64_t v94 = v92 - v93;
          if (v89) {
            goto LABEL_126;
          }
          BOOL v89 = __OFADD__(v81, v94);
          uint64_t v95 = v81 + v94;
          if (v89) {
            goto LABEL_129;
          }
          if (v95 >= v86)
          {
            BOOL v113 = &v75[16 * v78];
            uint64_t v115 = *(void *)v113;
            uint64_t v114 = *((void *)v113 + 1);
            BOOL v89 = __OFSUB__(v114, v115);
            uint64_t v116 = v114 - v115;
            if (v89) {
              goto LABEL_133;
            }
            BOOL v106 = v81 < v116;
            goto LABEL_94;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v107 = *((void *)v19 + 4);
            uint64_t v108 = *((void *)v19 + 5);
            BOOL v89 = __OFSUB__(v108, v107);
            uint64_t v100 = v108 - v107;
            char v101 = v89;
            goto LABEL_88;
          }
          uint64_t v80 = *((void *)v19 + 4);
          uint64_t v79 = *((void *)v19 + 5);
          BOOL v89 = __OFSUB__(v79, v80);
          uint64_t v81 = v79 - v80;
          char v82 = v89;
        }
        if (v82) {
          goto LABEL_125;
        }
        unint64_t v90 = v21 - 2;
        uint64_t v96 = &v75[16 * v21 - 32];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v99 = __OFSUB__(v97, v98);
        uint64_t v100 = v97 - v98;
        char v101 = v99;
        if (v99) {
          goto LABEL_128;
        }
        CGRect v102 = &v75[16 * v78];
        uint64_t v104 = *(void *)v102;
        uint64_t v103 = *((void *)v102 + 1);
        BOOL v89 = __OFSUB__(v103, v104);
        uint64_t v105 = v103 - v104;
        if (v89) {
          goto LABEL_131;
        }
        if (__OFADD__(v100, v105)) {
          goto LABEL_132;
        }
        if (v100 + v105 >= v81)
        {
          BOOL v106 = v81 < v105;
LABEL_94:
          if (v106) {
            unint64_t v78 = v90;
          }
          goto LABEL_96;
        }
LABEL_88:
        if (v101) {
          goto LABEL_127;
        }
        uint64_t v109 = &v75[16 * v78];
        uint64_t v111 = *(void *)v109;
        uint64_t v110 = *((void *)v109 + 1);
        BOOL v89 = __OFSUB__(v110, v111);
        uint64_t v112 = v110 - v111;
        if (v89) {
          goto LABEL_130;
        }
        if (v112 < v100) {
          goto LABEL_14;
        }
LABEL_96:
        unint64_t v117 = v78 - 1;
        if (v78 - 1 >= v21)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        if (!*v150) {
          goto LABEL_145;
        }
        uint64_t v118 = v19;
        uint64_t v119 = &v75[16 * v117];
        uint64_t v120 = *(void *)v119;
        uint64_t v121 = &v75[16 * v78];
        uint64_t v122 = *((void *)v121 + 1);
        sub_100133750(*v150 + v139[9] * *(void *)v119, *v150 + v139[9] * *(void *)v121, *v150 + v139[9] * v122, v138);
        if (v2) {
          goto LABEL_117;
        }
        if (v122 < v120) {
          goto LABEL_120;
        }
        if (v78 > *((void *)v118 + 2)) {
          goto LABEL_121;
        }
        uint64_t v123 = v118;
        *(void *)uint64_t v119 = v120;
        *(void *)&v75[16 * v117 + 8] = v122;
        unint64_t v124 = *((void *)v118 + 2);
        if (v78 >= v124) {
          goto LABEL_122;
        }
        unint64_t v19 = v123;
        unint64_t v21 = v124 - 1;
        memmove(&v75[16 * v78], v121 + 16, 16 * (v124 - 1 - v78));
        *((void *)v19 + 2) = v124 - 1;
        if (v124 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = v150[1];
    Swift::Int v20 = v148;
    uint64_t v5 = v139;
    if (v148 >= v13) {
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100133430(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v7 = type metadata accessor for IndexPath();
  __chkstk_darwin(v7);
  uint64_t v41 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  Swift::Int v37 = (char *)&v29 - v10;
  v13.n128_f64[0] = __chkstk_darwin(v11);
  uint64_t v36 = (char *)&v29 - v14;
  uint64_t v39 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    Swift::Int v32 = (void (**)(char *, uint64_t))(v15 - 8);
    unint64_t v33 = v16;
    uint64_t v34 = a4;
    uint64_t v35 = v15;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v44 = v17 * (v39 - 1);
    uint64_t v38 = v17;
    uint64_t v43 = v17 * v39;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v42 = v31;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v43 + v18 + *a4;
      unint64_t v21 = v36;
      Swift::Int v22 = (void (*)(char *, uint64_t, uint64_t))v33;
      v33(v36, v20, v7, v13);
      Swift::Int v23 = v37;
      v22(v37, v44 + v18 + v19, v7);
      sub_100040194(&qword_10078E338, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      LOBYTE(v22) = dispatch thunk of static Comparable.< infix(_:_:)();
      uint64_t v24 = *v32;
      (*v32)(v23, v7);
      uint64_t v25 = v21;
      a4 = v34;
      v24(v25, v7);
      if ((v22 & 1) == 0)
      {
LABEL_4:
        v44 += v38;
        v43 += v38;
        if (++v39 == v30) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v26 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v27 = (char *)(v26 + v44 + v18);
      uint64_t v28 = *v40;
      (*v40)(v41, v26 + v43 + v18, v7);
      swift_arrayInitWithTakeFrontToBack();
      v28(v27, (uint64_t)v41, v7);
      v18 -= v38;
      if (v39 == ++v42) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_100133750(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v56 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v55 = (char *)v49 - v12;
  uint64_t v57 = *(void *)(v13 + 72);
  if (!v57)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_68;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v57 == -1) {
    goto LABEL_69;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v57;
  unint64_t v60 = a1;
  unint64_t v59 = a4;
  uint64_t v16 = v14 / v57;
  if (v15 >= v14 / v57)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v57;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
        uint64_t v19 = v9;
      }
      else
      {
        uint64_t v19 = v9;
        if (a4 != a2) {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      unint64_t v34 = a4 + v18;
      unint64_t v58 = a4 + v18;
      unint64_t v60 = a2;
      unint64_t v52 = a1;
      if (v18 >= 1 && a1 < a2)
      {
        unint64_t v36 = -v57;
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v19 + 16);
        uint64_t v37 = v19 + 16;
        v49[1] = v37 - 8;
        uint64_t v50 = v38;
        unint64_t v53 = -v57;
        uint64_t v54 = v37;
        unint64_t v51 = a4;
        uint64_t v39 = v55;
        uint64_t v40 = (void (**)(char *, uint64_t))(v37 - 8);
        do
        {
          uint64_t v57 = a3 + v36;
          uint64_t v41 = v50;
          v50(v39, v34 + v36, v8);
          unint64_t v42 = a2 + v36;
          unint64_t v43 = a3;
          uint64_t v44 = v56;
          v41(v56, v42, v8);
          sub_100040194(&qword_10078E338, (void (*)(uint64_t))&type metadata accessor for IndexPath);
          LOBYTE(v41) = dispatch thunk of static Comparable.< infix(_:_:)();
          Swift::Int v45 = *v40;
          (*v40)(v44, v8);
          v45(v39, v8);
          if (v41)
          {
            a3 = v57;
            if (v43 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != a2) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            unint64_t v36 = v53;
            v60 += v53;
          }
          else
          {
            a3 = v57;
            unint64_t v47 = v58;
            v58 += v53;
            if (v43 < v47 || v57 >= v47)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v36 = v53;
              unint64_t v46 = v51;
            }
            else
            {
              unint64_t v46 = v51;
              if (v43 != v47) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v36 = v53;
            }
          }
          unint64_t v34 = v58;
          if (v58 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v52);
      }
      goto LABEL_66;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v57;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v53 = a4 + v17;
    unint64_t v58 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      unint64_t v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v54 = v9 + 16;
      Swift::Int v22 = (void (**)(char *, uint64_t))(v9 + 8);
      do
      {
        unint64_t v23 = a3;
        uint64_t v24 = v55;
        v21(v55, a2, v8);
        unint64_t v25 = a4;
        uint64_t v26 = v56;
        v21(v56, v25, v8);
        sub_100040194(&qword_10078E338, (void (*)(uint64_t))&type metadata accessor for IndexPath);
        char v27 = dispatch thunk of static Comparable.< infix(_:_:)();
        uint64_t v28 = *v22;
        (*v22)(v26, v8);
        v28(v24, v8);
        unint64_t v29 = v60;
        if (v27)
        {
          unint64_t v30 = a2 + v57;
          if (v60 < a2 || v60 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v32 = v59 + v57;
          if (v60 < v59 || v60 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v23;
          }
          else
          {
            a3 = v23;
            if (v60 != v59) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v59 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v60 = v29 + v57;
        a4 = v59;
        if (v59 >= v53) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_66:
    sub_100475550(&v60, &v59, (uint64_t *)&v58);
    return 1;
  }
LABEL_70:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100133D84(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100133E34(void *a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (!*(void *)(a2 + 16)) {
    return 100;
  }
  uint64_t v4 = a3(*a1);
  if ((v5 & 1) == 0) {
    return 100;
  }
  unsigned int v6 = (unsigned char *)(*(void *)(a2 + 56) + 16 * v4);
  if (v6[8]) {
    return 100;
  }
  else {
    return *(void *)v6;
  }
}

uint64_t sub_100133E90(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  unint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v43 = (char *)v39 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  v39[1] = v3;
  uint64_t v54 = _swiftEmptyArrayStorage;
  sub_1004D33AC(0, v10, 0);
  uint64_t v11 = v54;
  uint64_t result = sub_100133D84(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  v39[0] = a1 + 88;
  int64_t v40 = v10;
  uint64_t v41 = v13;
  uint64_t v42 = a1 + 64;
  uint64_t v17 = (uint64_t)v43;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v49 = v15;
    uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v14);
    uint64_t v22 = *(void *)(*(void *)v21 + 144);
    uint64_t v50 = v11;
    uint64_t v23 = v21 + v22;
    swift_beginAccess();
    uint64_t v24 = v23;
    uint64_t v25 = v46;
    sub_1000244A8(v24, v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    sub_100024388(v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000244A8(v17, v44, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    sub_100040194((unint64_t *)&qword_10078C880, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    AnyHashable.init<A>(_:)();
    sub_100024388(v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v26 = v47(v21);
    uint64_t v11 = v50;
    uint64_t v27 = v26;
    uint64_t result = swift_release();
    uint64_t v54 = v11;
    uint64_t v28 = a1;
    unint64_t v30 = v11[2];
    unint64_t v29 = v11[3];
    if (v30 >= v29 >> 1)
    {
      uint64_t result = sub_1004D33AC(v29 > 1, v30 + 1, 1);
      uint64_t v11 = v54;
    }
    void v11[2] = v30 + 1;
    uint64_t v31 = &v11[6 * v30];
    long long v32 = v52;
    uint64_t v33 = v53;
    *((_OWORD *)v31 + 2) = v51;
    *((_OWORD *)v31 + 3) = v32;
    v31[8] = v33;
    v31[9] = v27;
    int64_t v18 = 1 << *(unsigned char *)(v28 + 32);
    if (v14 >= v18) {
      goto LABEL_27;
    }
    uint64_t v16 = v42;
    uint64_t v34 = *(void *)(v42 + 8 * v20);
    if ((v34 & (1 << v14)) == 0) {
      goto LABEL_28;
    }
    a1 = v28;
    LODWORD(v13) = v41;
    if (*(_DWORD *)(v28 + 36) != v41) {
      goto LABEL_29;
    }
    unint64_t v35 = v34 & (-2 << (v14 & 0x3F));
    if (v35)
    {
      int64_t v18 = __clz(__rbit64(v35)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v40;
    }
    else
    {
      unint64_t v36 = v20 + 1;
      unint64_t v37 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v40;
      if (v20 + 1 < v37)
      {
        unint64_t v38 = *(void *)(v42 + 8 * v36);
        if (!v38)
        {
          unint64_t v36 = v20 + 2;
          if (v20 + 2 >= v37) {
            goto LABEL_4;
          }
          unint64_t v38 = *(void *)(v42 + 8 * v36);
          if (!v38)
          {
            while (v37 - 3 != v20)
            {
              unint64_t v38 = *(void *)(v39[0] + 8 * v20++);
              if (v38)
              {
                unint64_t v36 = v20 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v18 = __clz(__rbit64(v38)) + (v36 << 6);
      }
    }
LABEL_4:
    uint64_t v15 = v49 + 1;
    uint64_t v14 = v18;
    if (v49 + 1 == v19) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001342A0(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  unint64_t v47 = a2;
  uint64_t v48 = a3;
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v46 = (uint64_t)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v7 = __chkstk_darwin(v45);
  uint64_t v44 = (uint64_t)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unint64_t v43 = (char *)v39 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = (unint64_t *)&_swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  v39[1] = v3;
  uint64_t v54 = (unint64_t *)&_swiftEmptyArrayStorage;
  sub_1004D33AC(0, v10, 0);
  uint64_t v11 = v54;
  uint64_t result = sub_100133D84(a1);
  uint64_t v14 = result;
  uint64_t v15 = 0;
  uint64_t v16 = a1 + 64;
  v39[0] = a1 + 88;
  int64_t v40 = v10;
  uint64_t v41 = v13;
  uint64_t v42 = a1 + 64;
  uint64_t v17 = (uint64_t)v43;
  while ((v14 & 0x8000000000000000) == 0 && v14 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v20 = (unint64_t)v14 >> 6;
    if ((*(void *)(v16 + 8 * ((unint64_t)v14 >> 6)) & (1 << v14)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v13) {
      goto LABEL_26;
    }
    uint64_t v49 = v15;
    uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v14);
    uint64_t v22 = *(void *)(*(void *)v21 + 144);
    uint64_t v50 = v11;
    uint64_t v23 = v21 + v22;
    swift_beginAccess();
    uint64_t v24 = v23;
    uint64_t v25 = v46;
    sub_1000244A8(v24, v46, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_retain();
    TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
    sub_100024388(v25, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_1000244A8(v17, v44, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    sub_100040194(&qword_100788D98, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    AnyHashable.init<A>(_:)();
    sub_100024388(v17, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v26 = v47(v21);
    uint64_t v11 = v50;
    uint64_t v27 = v26;
    uint64_t result = swift_release();
    uint64_t v54 = v11;
    uint64_t v28 = a1;
    unint64_t v30 = v11[2];
    unint64_t v29 = v11[3];
    if (v30 >= v29 >> 1)
    {
      uint64_t result = sub_1004D33AC(v29 > 1, v30 + 1, 1);
      uint64_t v11 = v54;
    }
    void v11[2] = v30 + 1;
    uint64_t v31 = &v11[6 * v30];
    long long v32 = v52;
    unint64_t v33 = v53;
    *((_OWORD *)v31 + 2) = v51;
    *((_OWORD *)v31 + 3) = v32;
    v31[8] = v33;
    v31[9] = v27;
    int64_t v18 = 1 << *(unsigned char *)(v28 + 32);
    if (v14 >= v18) {
      goto LABEL_27;
    }
    uint64_t v16 = v42;
    uint64_t v34 = *(void *)(v42 + 8 * v20);
    if ((v34 & (1 << v14)) == 0) {
      goto LABEL_28;
    }
    a1 = v28;
    LODWORD(v13) = v41;
    if (*(_DWORD *)(v28 + 36) != v41) {
      goto LABEL_29;
    }
    unint64_t v35 = v34 & (-2 << (v14 & 0x3F));
    if (v35)
    {
      int64_t v18 = __clz(__rbit64(v35)) | v14 & 0xFFFFFFFFFFFFFFC0;
      int64_t v19 = v40;
    }
    else
    {
      unint64_t v36 = v20 + 1;
      unint64_t v37 = (unint64_t)(v18 + 63) >> 6;
      int64_t v19 = v40;
      if (v20 + 1 < v37)
      {
        unint64_t v38 = *(void *)(v42 + 8 * v36);
        if (!v38)
        {
          unint64_t v36 = v20 + 2;
          if (v20 + 2 >= v37) {
            goto LABEL_4;
          }
          unint64_t v38 = *(void *)(v42 + 8 * v36);
          if (!v38)
          {
            while (v37 - 3 != v20)
            {
              unint64_t v38 = *(void *)(v39[0] + 8 * v20++);
              if (v38)
              {
                unint64_t v36 = v20 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v18 = __clz(__rbit64(v38)) + (v36 << 6);
      }
    }
LABEL_4:
    uint64_t v15 = v49 + 1;
    uint64_t v14 = v18;
    if (v49 + 1 == v19) {
      return (uint64_t)v11;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1001346B0(uint64_t a1)
{
  uint64_t v2 = v1;
  *(void *)(v2 + qword_10078DEB0) = a1;
  swift_retain();
  swift_release();
  uint64_t v4 = *(void **)(v2 + qword_10078DEA0);
  if (a1)
  {
    swift_retain();
    id v5 = v4;
    char v6 = sub_100032A20();
    swift_release();
    if (v6) {
      uint64_t v7 = v2;
    }
    else {
      uint64_t v7 = 0;
    }
  }
  else
  {
    id v8 = v4;
    uint64_t v7 = 0;
  }
  [v4 setDataSource:v7];

  uint64_t v9 = v2 + qword_10078DED0;
  uint64_t v10 = *(void *)(v2 + qword_10078DED0);
  *(void *)(v9 + 8) = 0;
  *(void *)(v9 + 16) = 0;
  *(void *)uint64_t v9 = 0;
  *(unsigned char *)(v9 + 24) = 0;
  return sub_1000349CC(v10);
}

id sub_100134774(void *a1, uint64_t *a2, uint64_t a3, const char **a4)
{
  id v8 = *(void **)(v4 + *a2);
  *(void *)(v4 + *a2) = a1;
  id v9 = a1;

  return sub_10011A174(a2, a3, a4);
}

uint64_t sub_1001347D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = IndexPath.section.getter();
  uint64_t v5 = 0;
  if (v4 < 0 || v4 >= v3) {
    return v5;
  }
  uint64_t v6 = IndexPath.section.getter();
  if (v6 < 0 || v6 >= v3)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v3 = *(void *)(a2 + 16 * v6 + 40);
  if ((unint64_t)v3 >> 62)
  {
LABEL_14:
    swift_retain();
    swift_bridgeObjectRetain();
    unint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    if ((v9 & 0x8000000000000000) == 0) {
      goto LABEL_19;
    }
    __break(1u);
LABEL_16:
    uint64_t v5 = specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_12:
    swift_bridgeObjectRelease();
    swift_release();
    return v5;
  }
  unint64_t v7 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_retain();
  swift_bridgeObjectRetain();
  unint64_t v8 = IndexPath.row.getter();
  if ((v8 & 0x8000000000000000) == 0)
  {
    while (v8 < v7)
    {
      unint64_t v9 = IndexPath.row.getter();
      if ((v3 & 0xC000000000000001) != 0) {
        goto LABEL_16;
      }
      if ((v9 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v9 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        uint64_t v5 = *(void *)(v3 + 8 * v9 + 32);
        swift_retain();
        goto LABEL_12;
      }
      __break(1u);
LABEL_19:
      unint64_t v7 = v9;
      unint64_t v8 = IndexPath.row.getter();
      if ((v8 & 0x8000000000000000) != 0) {
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  return 0;
}

uint64_t sub_100134910@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  unint64_t v30 = &_swiftEmptySetSingleton;
  uint64_t v31 = &_swiftEmptySetSingleton;
  uint64_t v28 = &_swiftEmptySetSingleton;
  unint64_t v29 = &_swiftEmptySetSingleton;
  uint64_t v27 = &_swiftEmptySetSingleton;
  uint64_t v24 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v23 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (v4) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v6++, 1))
  {
    __break(1u);
  }
  else
  {
    if (v6 >= v23) {
      goto LABEL_28;
    }
    unint64_t v10 = *(void *)(v24 + 8 * v6);
    if (v10)
    {
LABEL_15:
      unint64_t v4 = (v10 - 1) & v10;
      for (unint64_t i = __clz(__rbit64(v10)) + (v6 << 6); ; unint64_t i = v7 | (v6 << 6))
      {
        uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8 * i);
        uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 16 * i + 8);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v14 = swift_bridgeObjectRetain();
        char v15 = sub_100136BBC(v14, v12);
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v16 = swift_bridgeObjectRetain();
        char v17 = sub_100136BBC(v16, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v15)
        {
          if ((v17 & 1) != 0 && (~(_BYTE)v13 & 3) == 0)
          {
            swift_retain();
            sub_1005A2F30(v26, v12);
            swift_release();
          }
        }
        else if ((v17 & 1) == 0)
        {
          uint64_t result = swift_release();
          if (!v4) {
            goto LABEL_7;
          }
          goto LABEL_6;
        }
        sub_1005A2F30(v26, v12);
        uint64_t result = swift_release();
        if (!v4) {
          goto LABEL_7;
        }
LABEL_6:
        unint64_t v7 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
      }
    }
    int64_t v11 = v6 + 1;
    if (v6 + 1 >= v23) {
      goto LABEL_28;
    }
    unint64_t v10 = *(void *)(v24 + 8 * v11);
    if (v10)
    {
LABEL_14:
      int64_t v6 = v11;
      goto LABEL_15;
    }
    int64_t v11 = v6 + 2;
    if (v6 + 2 >= v23)
    {
LABEL_28:
      uint64_t result = swift_release();
      int64_t v18 = v30;
      unint64_t v20 = v28;
      int64_t v19 = v29;
      uint64_t v21 = v27;
      *a2 = v31;
      a2[1] = v18;
      a2[2] = v19;
      a2[3] = v20;
      a2[4] = v21;
      return result;
    }
    unint64_t v10 = *(void *)(v24 + 8 * v11);
    if (v10) {
      goto LABEL_14;
    }
    while (1)
    {
      int64_t v6 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        break;
      }
      if (v6 >= v23) {
        goto LABEL_28;
      }
      unint64_t v10 = *(void *)(v24 + 8 * v6);
      ++v11;
      if (v10) {
        goto LABEL_15;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100134B8C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, char a8@<W7>, void *a9@<X8>, void *a10, void *a11, void *a12, char a13)
{
  uint64_t v144 = a7;
  long long v147 = a6;
  uint64_t v141 = a5;
  int v163 = &_swiftEmptySetSingleton;
  int64_t v164 = &_swiftEmptySetSingleton;
  uint64_t v161 = &_swiftEmptySetSingleton;
  unint64_t v162 = &_swiftEmptySetSingleton;
  int64_t v160 = &_swiftEmptySetSingleton;
  int64_t v18 = *a1;
  uint64_t v183 = a1[1];
  v184[0] = v18;
  int64_t v19 = a1[2];
  uint64_t v181 = a1[3];
  uint64_t v182 = v19;
  v180 = a1[4];
  uint64_t v158 = (uint64_t)v183;
  uint64_t v159 = (uint64_t)v18;
  uint64_t v156 = (uint64_t)v181;
  uint64_t v157 = (uint64_t)v19;
  uint64_t v155 = (uint64_t)v180;
  sub_100028CA0((uint64_t)v184);
  sub_100028CA0((uint64_t)&v183);
  sub_100028CA0((uint64_t)&v182);
  sub_100028CA0((uint64_t)&v181);
  sub_100028CA0((uint64_t)&v180);
  sub_100028CA0((uint64_t)v184);
  sub_100028CA0((uint64_t)&v183);
  sub_100028CA0((uint64_t)&v182);
  sub_100028CA0((uint64_t)&v181);
  sub_100028CA0((uint64_t)&v180);
  BOOL v20 = sub_100118E18();
  sub_10006A2C4((uint64_t)v184);
  sub_10006A2C4((uint64_t)&v183);
  sub_10006A2C4((uint64_t)&v182);
  sub_10006A2C4((uint64_t)&v181);
  sub_10006A2C4((uint64_t)&v180);
  if (v20)
  {
    sub_10006A2C4((uint64_t)v184);
    sub_10006A2C4((uint64_t)&v183);
    sub_10006A2C4((uint64_t)&v182);
    sub_10006A2C4((uint64_t)&v181);
    uint64_t result = sub_10006A2C4((uint64_t)&v180);
    uint64_t v22 = &_swiftEmptySetSingleton;
    int64_t v23 = &_swiftEmptySetSingleton;
    uint64_t v24 = &_swiftEmptySetSingleton;
    uint64_t v25 = &_swiftEmptySetSingleton;
    uint64_t v26 = &_swiftEmptySetSingleton;
LABEL_97:
    *a9 = v26;
    a9[1] = v25;
    a9[2] = v24;
    a9[3] = v23;
    a9[4] = v22;
    return result;
  }
  BOOL v113 = a9;
  unint64_t v129 = a2 & 0xC000000000000001;
  unint64_t v126 = a3 & 0xC000000000000001;
  unint64_t v124 = a4 & 0xC000000000000001;
  Swift::Int v143 = a12;
  uint64_t v122 = &v152;
  uint64_t v123 = &v151;
  uint64_t v121 = &v153;
  os_log_type_t v140 = a11;
  Swift::Int v142 = a10;
  uint64_t v27 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v27 = a2;
  }
  uint64_t v119 = v27;
  uint64_t v120 = &v154;
  uint64_t v127 = a3;
  uint64_t v128 = a2;
  int v146 = a8 & 1;
  int v145 = a13 & 1;
  if (a3 < 0) {
    uint64_t v28 = a3;
  }
  else {
    uint64_t v28 = a3 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v115 = a3 + 56;
  uint64_t v116 = a2 + 56;
  uint64_t v29 = a4 & 0xFFFFFFFFFFFFFF8;
  if (a4 < 0) {
    uint64_t v29 = a4;
  }
  uint64_t v117 = v29;
  uint64_t v118 = v28;
  uint64_t v125 = a4;
  uint64_t v114 = a4 + 56;
  uint64_t v131 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    int64_t v150 = &_swiftEmptySetSingleton;
    uint64_t v151 = &_swiftEmptySetSingleton;
    int64_t v152 = &_swiftEmptySetSingleton;
    Swift::Int v153 = &_swiftEmptySetSingleton;
    uint64_t v154 = &_swiftEmptySetSingleton;
    if (v129)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10003B754(&qword_10078E370);
      sub_100037EA0(&qword_10078E378, &qword_10078E370);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      uint64_t v39 = v165;
      unint64_t v139 = v166;
      uint64_t v41 = v167;
      int64_t v40 = v168;
      unint64_t v42 = v169;
    }
    else
    {
      uint64_t v39 = v128;
      uint64_t v43 = -1 << *(unsigned char *)(v128 + 32);
      uint64_t v41 = ~v43;
      uint64_t v44 = -v43;
      uint64_t v45 = v44 < 64 ? ~(-1 << v44) : -1;
      unint64_t v42 = v45 & *(void *)(v128 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v40 = 0;
      unint64_t v139 = v116;
    }
    Swift::Int v137 = (void *)(v39 & 0x7FFFFFFFFFFFFFFFLL);
    int64_t v138 = (unint64_t)(v41 + 64) >> 6;
    if ((v39 & 0x8000000000000000) == 0) {
      break;
    }
    while (1)
    {
      uint64_t v49 = __CocoaSet.Iterator.next()();
      if (!v49) {
        break;
      }
      uint64_t v148 = v49;
      swift_unknownObjectRetain();
      sub_10003B754(&qword_10078E370);
      swift_dynamicCast();
      uint64_t v50 = v149;
      uint64_t v51 = swift_unknownObjectRelease();
      int64_t v48 = v40;
      uint64_t v46 = v42;
      if (!v50) {
        break;
      }
LABEL_38:
      __chkstk_darwin(v51);
      uint64_t v54 = v147;
      *(&v113 - 10) = v141;
      *(&v113 - 9) = v54;
      *(&v113 - 8) = v144;
      *((unsigned char *)&v113 - 56) = v146;
      uint64_t v55 = v140;
      *(&v113 - 6) = v142;
      *(&v113 - 5) = v55;
      *(&v113 - 4) = v143;
      *((unsigned char *)&v113 - 24) = v145;
      *(&v113 - 2) = v50;
      sub_10003B754(&qword_10078E388);
      Set.removeAll(where:)();
      uint64_t result = swift_release();
      int64_t v40 = v48;
      unint64_t v42 = v46;
      if ((v39 & 0x8000000000000000) == 0) {
        goto LABEL_19;
      }
    }
LABEL_40:
    sub_100051244();
    if (v126)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10003B754(&qword_10078E370);
      sub_100037EA0(&qword_10078E378, &qword_10078E370);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      uint64_t v56 = v170;
      uint64_t v134 = v171;
      uint64_t v57 = v172;
      int64_t v58 = v173;
      unint64_t v59 = v174;
    }
    else
    {
      uint64_t v56 = v127;
      uint64_t v60 = -1 << *(unsigned char *)(v127 + 32);
      uint64_t v57 = ~v60;
      uint64_t v61 = -v60;
      if (v61 < 64) {
        uint64_t v62 = ~(-1 << v61);
      }
      else {
        uint64_t v62 = -1;
      }
      unint64_t v59 = v62 & *(void *)(v127 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v58 = 0;
      uint64_t v134 = v115;
    }
    uint64_t v132 = v56 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v133 = (unint64_t)(v57 + 64) >> 6;
    uint64_t v135 = v56;
    uint64_t v136 = v57;
    if (v56 < 0)
    {
      while (1)
      {
        uint64_t v66 = __CocoaSet.Iterator.next()();
        if (!v66) {
          break;
        }
        uint64_t v148 = v66;
        swift_unknownObjectRetain();
        sub_10003B754(&qword_10078E370);
        swift_dynamicCast();
        unint64_t v67 = v149;
        uint64_t v68 = swift_unknownObjectRelease();
        int64_t v65 = v58;
        uint64_t v63 = v59;
        if (!v67) {
          break;
        }
LABEL_66:
        uint64_t v71 = v144;
        Swift::Int v137 = &v113;
        __chkstk_darwin(v68);
        unint64_t v139 = v63;
        double v72 = v141;
        unint64_t v73 = v142;
        unint64_t v74 = v147;
        *(&v113 - 10) = v141;
        *(&v113 - 9) = v74;
        *(&v113 - 8) = v71;
        *((unsigned char *)&v113 - 56) = v146;
        double v75 = v140;
        *(&v113 - 6) = v73;
        *(&v113 - 5) = v75;
        *(&v113 - 4) = v143;
        *((unsigned char *)&v113 - 24) = v145;
        *(&v113 - 2) = v67;
        sub_10003B754(&qword_10078E388);
        int64_t v138 = v65;
        uint64_t v76 = Set.removeAll(where:)();
        Swift::Int v137 = &v113;
        __chkstk_darwin(v76);
        *(&v113 - 10) = v72;
        *(&v113 - 9) = v74;
        *(&v113 - 8) = v71;
        uint64_t v56 = v135;
        *((unsigned char *)&v113 - 56) = v146;
        *(&v113 - 6) = v73;
        *(&v113 - 5) = v75;
        *(&v113 - 4) = v143;
        *((unsigned char *)&v113 - 24) = v145;
        *(&v113 - 2) = v67;
        *(&v113 - 1) = &v150;
        Set.removeAll(where:)();
        uint64_t result = swift_release();
        int64_t v58 = v138;
        unint64_t v59 = v139;
        if ((v56 & 0x8000000000000000) == 0) {
          goto LABEL_47;
        }
      }
    }
    else
    {
LABEL_47:
      if (v59)
      {
        uint64_t v63 = (v59 - 1) & v59;
        unint64_t v64 = __clz(__rbit64(v59)) | (v58 << 6);
        int64_t v65 = v58;
        goto LABEL_65;
      }
      int64_t v65 = v58 + 1;
      if (__OFADD__(v58, 1)) {
        goto LABEL_99;
      }
      if (v65 < v133)
      {
        unint64_t v69 = *(void *)(v134 + 8 * v65);
        if (v69) {
          goto LABEL_64;
        }
        if (v58 + 2 >= v133) {
          goto LABEL_68;
        }
        unint64_t v69 = *(void *)(v134 + 8 * (v58 + 2));
        if (v69)
        {
          int64_t v65 = v58 + 2;
LABEL_64:
          uint64_t v63 = (v69 - 1) & v69;
          unint64_t v64 = __clz(__rbit64(v69)) + (v65 << 6);
LABEL_65:
          unint64_t v67 = *(void **)(*(void *)(v56 + 48) + 8 * v64);
          uint64_t v68 = swift_retain();
          if (!v67) {
            goto LABEL_68;
          }
          goto LABEL_66;
        }
        int64_t v65 = v58 + 3;
        if (v58 + 3 >= v133) {
          goto LABEL_68;
        }
        unint64_t v69 = *(void *)(v134 + 8 * v65);
        if (v69) {
          goto LABEL_64;
        }
        int64_t v70 = v58 + 4;
        while (v133 != v70)
        {
          unint64_t v69 = *(void *)(v134 + 8 * v70++);
          if (v69)
          {
            int64_t v65 = v70 - 1;
            goto LABEL_64;
          }
        }
      }
    }
LABEL_68:
    sub_100051244();
    if (v124)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10003B754(&qword_10078E370);
      sub_100037EA0(&qword_10078E378, &qword_10078E370);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      uint64_t v77 = v175;
      uint64_t v134 = v176;
      int64_t v78 = v178;
      uint64_t v130 = v177;
      unint64_t v79 = v179;
    }
    else
    {
      uint64_t v77 = v125;
      uint64_t v80 = -1 << *(unsigned char *)(v125 + 32);
      uint64_t v130 = ~v80;
      uint64_t v81 = -v80;
      if (v81 < 64) {
        uint64_t v82 = ~(-1 << v81);
      }
      else {
        uint64_t v82 = -1;
      }
      unint64_t v79 = v82 & *(void *)(v125 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      int64_t v78 = 0;
      uint64_t v134 = v114;
    }
    uint64_t v132 = v77 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v133 = (unint64_t)(v130 + 64) >> 6;
    uint64_t v135 = v77;
    if (v77 < 0) {
      goto LABEL_77;
    }
    while (1)
    {
      if (v79)
      {
        uint64_t v83 = (v79 - 1) & v79;
        unint64_t v84 = __clz(__rbit64(v79)) | (v78 << 6);
        int64_t v85 = v78;
      }
      else
      {
        int64_t v85 = v78 + 1;
        if (__OFADD__(v78, 1)) {
          goto LABEL_100;
        }
        if (v85 >= v133) {
          break;
        }
        unint64_t v89 = *(void *)(v134 + 8 * v85);
        if (!v89)
        {
          if (v78 + 2 >= v133) {
            break;
          }
          unint64_t v89 = *(void *)(v134 + 8 * (v78 + 2));
          if (v89)
          {
            int64_t v85 = v78 + 2;
          }
          else
          {
            int64_t v85 = v78 + 3;
            if (v78 + 3 >= v133) {
              break;
            }
            unint64_t v89 = *(void *)(v134 + 8 * v85);
            if (!v89)
            {
              int64_t v90 = v78 + 4;
              while (v133 != v90)
              {
                unint64_t v89 = *(void *)(v134 + 8 * v90++);
                if (v89)
                {
                  int64_t v85 = v90 - 1;
                  goto LABEL_92;
                }
              }
              break;
            }
          }
        }
LABEL_92:
        uint64_t v83 = (v89 - 1) & v89;
        unint64_t v84 = __clz(__rbit64(v89)) + (v85 << 6);
      }
      uint64_t v87 = *(void **)(*(void *)(v77 + 48) + 8 * v84);
      uint64_t v88 = swift_retain();
      if (!v87) {
        break;
      }
      while (1)
      {
        Swift::Int v137 = &v113;
        __chkstk_darwin(v88);
        uint64_t v91 = v141;
        *(&v113 - 10) = v141;
        uint64_t v92 = v91;
        uint64_t v93 = v147;
        *(&v113 - 9) = v147;
        uint64_t v94 = v93;
        unint64_t v139 = v83;
        *(&v113 - 8) = v144;
        *((unsigned char *)&v113 - 56) = v146;
        uint64_t v95 = v140;
        *(&v113 - 6) = v142;
        *(&v113 - 5) = v95;
        uint64_t v96 = v95;
        uint64_t v97 = v143;
        *(&v113 - 4) = v143;
        uint64_t v98 = v97;
        *((unsigned char *)&v113 - 24) = v145;
        *(&v113 - 2) = v87;
        uint64_t v99 = sub_10003B754(&qword_10078E388);
        int64_t v138 = v85;
        uint64_t v136 = v99;
        uint64_t v100 = Set.removeAll(where:)();
        Swift::Int v137 = &v113;
        __chkstk_darwin(v100);
        *(&v113 - 10) = v92;
        *(&v113 - 9) = v94;
        char v101 = v144;
        *(&v113 - 8) = v144;
        LOBYTE(v94) = v146;
        *((unsigned char *)&v113 - 56) = v146;
        CGRect v102 = v142;
        *(&v113 - 6) = v142;
        *(&v113 - 5) = v96;
        *(&v113 - 4) = v98;
        *((unsigned char *)&v113 - 24) = v145;
        *(&v113 - 2) = v87;
        uint64_t v103 = Set.removeAll(where:)();
        Swift::Int v137 = &v113;
        __chkstk_darwin(v103);
        uint64_t v104 = v141;
        uint64_t v105 = v147;
        *(&v113 - 10) = v141;
        *(&v113 - 9) = v105;
        *(&v113 - 8) = v101;
        *((unsigned char *)&v113 - 56) = (_BYTE)v94;
        *(&v113 - 6) = v102;
        *(&v113 - 5) = v96;
        BOOL v106 = v96;
        *(&v113 - 4) = v98;
        LOBYTE(v96) = v145;
        *((unsigned char *)&v113 - 24) = v145;
        *(&v113 - 2) = v87;
        uint64_t v107 = Set.removeAll(where:)();
        Swift::Int v137 = &v113;
        __chkstk_darwin(v107);
        uint64_t v108 = v147;
        *(&v113 - 10) = v104;
        *(&v113 - 9) = v108;
        *(&v113 - 8) = v101;
        LOBYTE(v101) = v146;
        *((unsigned char *)&v113 - 56) = v146;
        *(&v113 - 6) = v102;
        *(&v113 - 5) = v106;
        uint64_t v109 = v143;
        *(&v113 - 4) = v143;
        *((unsigned char *)&v113 - 24) = (_BYTE)v96;
        *(&v113 - 2) = v87;
        *(&v113 - 1) = &v150;
        uint64_t v110 = Set.removeAll(where:)();
        Swift::Int v137 = &v113;
        __chkstk_darwin(v110);
        uint64_t v111 = v147;
        *(&v113 - 10) = v104;
        *(&v113 - 9) = v111;
        uint64_t v77 = v135;
        *(&v113 - 8) = v144;
        *((unsigned char *)&v113 - 56) = (_BYTE)v101;
        uint64_t v112 = v140;
        *(&v113 - 6) = v142;
        *(&v113 - 5) = v112;
        *(&v113 - 4) = v109;
        *((unsigned char *)&v113 - 24) = (_BYTE)v96;
        *(&v113 - 2) = v87;
        Set.removeAll(where:)();
        uint64_t result = swift_release();
        int64_t v78 = v138;
        unint64_t v79 = v139;
        if ((v77 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_77:
        uint64_t v86 = __CocoaSet.Iterator.next()();
        if (v86)
        {
          uint64_t v148 = v86;
          swift_unknownObjectRetain();
          sub_10003B754(&qword_10078E370);
          swift_dynamicCast();
          uint64_t v87 = v149;
          uint64_t v88 = swift_unknownObjectRelease();
          int64_t v85 = v78;
          uint64_t v83 = v79;
          if (v87) {
            continue;
          }
        }
        goto LABEL_11;
      }
    }
LABEL_11:
    sub_100051244();
    uint64_t v31 = v158;
    uint64_t v30 = v159;
    uint64_t v33 = v156;
    uint64_t v32 = v157;
    uint64_t v34 = v155;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v139 = v30;
    sub_1005979A8(v30);
    uint64_t v35 = swift_bridgeObjectRetain();
    sub_1005979A8(v35);
    uint64_t v36 = swift_bridgeObjectRetain();
    Swift::Int v137 = (void *)v32;
    sub_1005979A8(v36);
    uint64_t v37 = swift_bridgeObjectRetain();
    sub_1005979A8(v37);
    uint64_t v38 = swift_bridgeObjectRetain();
    sub_1005979A8(v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v138 = v31;
    swift_bridgeObjectRelease();
    sub_100131AC0(v30, &qword_10078E370, &qword_10078E378, (void (*)(void))sub_1005A5528, (uint64_t (*)(uint64_t, uint64_t))sub_100130478);
    sub_100131AC0(v31, &qword_10078E370, &qword_10078E378, (void (*)(void))sub_1005A5528, (uint64_t (*)(uint64_t, uint64_t))sub_100130478);
    sub_100131AC0((uint64_t)v137, &qword_10078E370, &qword_10078E378, (void (*)(void))sub_1005A5528, (uint64_t (*)(uint64_t, uint64_t))sub_100130478);
    sub_100131AC0(v33, &qword_10078E370, &qword_10078E378, (void (*)(void))sub_1005A5528, (uint64_t (*)(uint64_t, uint64_t))sub_100130478);
    sub_100131AC0(v34, &qword_10078E370, &qword_10078E378, (void (*)(void))sub_1005A5528, (uint64_t (*)(uint64_t, uint64_t))sub_100130478);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v158 = (uint64_t)v151;
    uint64_t v159 = (uint64_t)v150;
    uint64_t v156 = (uint64_t)v153;
    uint64_t v157 = (uint64_t)v152;
    uint64_t v155 = (uint64_t)v154;
    v184[1] = v150;
    v184[2] = v151;
    v184[3] = v152;
    v184[4] = v153;
    v184[5] = v154;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v32) = sub_100118E18();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v32)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v25 = v163;
      uint64_t v26 = v164;
      int64_t v23 = v161;
      uint64_t v24 = v162;
      uint64_t v22 = v160;
      a9 = v113;
      goto LABEL_97;
    }
  }
LABEL_19:
  if (v42)
  {
    uint64_t v46 = (v42 - 1) & v42;
    unint64_t v47 = __clz(__rbit64(v42)) | (v40 << 6);
    int64_t v48 = v40;
    goto LABEL_37;
  }
  int64_t v48 = v40 + 1;
  if (!__OFADD__(v40, 1))
  {
    if (v48 >= v138) {
      goto LABEL_40;
    }
    unint64_t v52 = *(void *)(v139 + 8 * v48);
    if (!v52)
    {
      if (v40 + 2 >= v138) {
        goto LABEL_40;
      }
      unint64_t v52 = *(void *)(v139 + 8 * (v40 + 2));
      if (v52)
      {
        int64_t v48 = v40 + 2;
      }
      else
      {
        int64_t v48 = v40 + 3;
        if (v40 + 3 >= v138) {
          goto LABEL_40;
        }
        unint64_t v52 = *(void *)(v139 + 8 * v48);
        if (!v52)
        {
          int64_t v53 = v40 + 4;
          do
          {
            if (v138 == v53) {
              goto LABEL_40;
            }
            unint64_t v52 = *(void *)(v139 + 8 * v53++);
          }
          while (!v52);
          int64_t v48 = v53 - 1;
        }
      }
    }
    uint64_t v46 = (v52 - 1) & v52;
    unint64_t v47 = __clz(__rbit64(v52)) + (v48 << 6);
LABEL_37:
    uint64_t v50 = *(void **)(*(void *)(v39 + 48) + 8 * v47);
    uint64_t v51 = swift_retain();
    if (!v50) {
      goto LABEL_40;
    }
    goto LABEL_38;
  }
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
  return result;
}

uint64_t sub_100135B50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v22 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v24 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_24;
    }
    if (v17 >= v10) {
      return sub_1001312D8(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v10) {
        return sub_1001312D8(v22, a2, v23, a3);
      }
      unint64_t v18 = *(void *)(v24 + 8 * v6);
      if (!v18) {
        break;
      }
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a3 + 56) + 16 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(unsigned __int8 *)(v13 + 8);
    uint64_t v16 = swift_retain();
    LOBYTE(v15) = a4(v16, v14, v15);
    uint64_t result = swift_release();
    if (v15)
    {
      *(unint64_t *)((char *)v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_1001312D8(v22, a2, v23, a3);
      }
    }
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v10) {
    return sub_1001312D8(v22, a2, v23, a3);
  }
  unint64_t v18 = *(void *)(v24 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v10) {
      return sub_1001312D8(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_100135D0C(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  long long v50 = *a2;
  uint64_t v49 = *((void *)a2 + 2);
  int v48 = *((unsigned __int8 *)a2 + 24);
  long long v47 = a2[2];
  uint64_t v46 = *((void *)a2 + 6);
  int v45 = *((unsigned __int8 *)a2 + 56);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10078E2B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10003B754(&qword_100787558);
  uint64_t v8 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v38 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v36 = (uint64_t)&v35 - v11;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754(&qword_10078E370);
    sub_100037EA0(&qword_10078E378, &qword_10078E370);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v59;
    uint64_t v43 = v60;
    uint64_t v13 = v61;
    int64_t v14 = v62;
    uint64_t v15 = v63;
  }
  else
  {
    uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v43 = a1 + 56;
    uint64_t v13 = ~v16;
    uint64_t v18 = -v16;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    uint64_t v15 = v19 & v17;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v14 = 0;
  }
  uint64_t v39 = v13;
  int64_t v42 = (unint64_t)(v13 + 64) >> 6;
  int64_t v40 = _swiftEmptyArrayStorage;
  uint64_t v37 = v8;
  BOOL v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v41 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v51 = a1;
LABEL_8:
  int64_t v21 = v14;
  unint64_t v22 = v15;
  if ((a1 & 0x8000000000000000) == 0)
  {
    do
    {
      if (v22)
      {
        uint64_t v15 = (v22 - 1) & v22;
        unint64_t v25 = __clz(__rbit64(v22)) | (v21 << 6);
        int64_t v14 = v21;
      }
      else
      {
        int64_t v14 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
          return result;
        }
        if (v14 >= v42) {
          goto LABEL_43;
        }
        unint64_t v26 = *(void *)(v43 + 8 * v14);
        if (!v26)
        {
          int64_t v27 = v21 + 2;
          if (v21 + 2 >= v42) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v43 + 8 * v27);
          if (v26) {
            goto LABEL_23;
          }
          int64_t v27 = v21 + 3;
          if (v21 + 3 >= v42) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v43 + 8 * v27);
          if (v26) {
            goto LABEL_23;
          }
          int64_t v27 = v21 + 4;
          if (v21 + 4 >= v42) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v43 + 8 * v27);
          if (v26)
          {
LABEL_23:
            int64_t v14 = v27;
          }
          else
          {
            int64_t v14 = v21 + 5;
            if (v21 + 5 >= v42) {
              goto LABEL_43;
            }
            unint64_t v26 = *(void *)(v43 + 8 * v14);
            if (!v26)
            {
              int64_t v28 = v21 + 6;
              while (v42 != v28)
              {
                unint64_t v26 = *(void *)(v43 + 8 * v28++);
                if (v26)
                {
                  int64_t v14 = v28 - 1;
                  goto LABEL_24;
                }
              }
              goto LABEL_43;
            }
          }
        }
LABEL_24:
        uint64_t v15 = (v26 - 1) & v26;
        unint64_t v25 = __clz(__rbit64(v26)) + (v14 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 8 * v25);
      swift_retain();
      if (!v24) {
        goto LABEL_43;
      }
LABEL_26:
      long long v53 = v50;
      uint64_t v54 = v49;
      char v55 = v48;
      long long v56 = v47;
      uint64_t v57 = v46;
      char v58 = v45;
      sub_1001182F0(v24, (uint64_t *)&v53, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (uint64_t)v7);
      if (v3)
      {
        swift_release();
        sub_100051244();
        uint64_t v34 = v40;
        swift_bridgeObjectRelease();
        return (uint64_t)v34;
      }
      swift_release();
      if ((*v20)(v7, 1, v44) != 1)
      {
        uint64_t v29 = v36;
        sub_100028C3C((uint64_t)v7, v36, &qword_100787558);
        sub_100028C3C(v29, v38, &qword_100787558);
        unint64_t v30 = (unint64_t)v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v30 = sub_10056FA40(0, *(void *)(v30 + 16) + 1, 1, v30);
        }
        unint64_t v32 = *(void *)(v30 + 16);
        unint64_t v31 = *(void *)(v30 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v30 = sub_10056FA40(v31 > 1, v32 + 1, 1, v30);
        }
        *(void *)(v30 + 16) = v32 + 1;
        unint64_t v33 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
        int64_t v40 = (void *)v30;
        uint64_t result = sub_100028C3C(v38, v30 + v33 + *(void *)(v37 + 72) * v32, &qword_100787558);
        a1 = v51;
        goto LABEL_8;
      }
      uint64_t result = sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_10078E2B0);
      int64_t v21 = v14;
      unint64_t v22 = v15;
      a1 = v51;
    }
    while ((v51 & 0x8000000000000000) == 0);
  }
  uint64_t v23 = __CocoaSet.Iterator.next()();
  if (v23)
  {
    uint64_t v52 = v23;
    swift_unknownObjectRetain();
    sub_10003B754(&qword_10078E370);
    swift_dynamicCast();
    uint64_t v24 = v64;
    swift_unknownObjectRelease();
    int64_t v14 = v21;
    uint64_t v15 = v22;
    if (v24) {
      goto LABEL_26;
    }
  }
LABEL_43:
  sub_100051244();
  return (uint64_t)v40;
}

uint64_t sub_100136378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100139C3C(a1, a2, a3, (uint64_t (*)(void))sub_10035C1D0);
}

uint64_t sub_100136390(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7 = (char *)a5;
  uint64_t v76 = qword_10078DEE0;
  uint64_t v10 = *(void *)(a5 + qword_10078DEE0);
  if (v10)
  {
    uint64_t v11 = *(void *)(a5 + qword_10078DEE0);
    if (a3) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v20 = swift_retain();
    a6(v20);
    if (!v10) {
      goto LABEL_11;
    }
    return swift_release();
  }
  uint64_t v11 = sub_100127C10(a5, a1, a2, sub_1000890D8, (uint64_t *)&unk_10078E390, (uint64_t (*)(void *))sub_10042521C);
  if (!a3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = (char **)(v11 + 64);
  swift_beginAccess();
  int64_t v14 = *(char **)(v11 + 64);
  swift_retain();
  sub_10006C140(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v11 + 64) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    int64_t v14 = sub_10056FF08(0, *((void *)v14 + 2) + 1, 1, v14);
    *uint64_t v13 = v14;
  }
  unint64_t v17 = *((void *)v14 + 2);
  unint64_t v16 = *((void *)v14 + 3);
  if (v17 >= v16 >> 1)
  {
    int64_t v14 = sub_10056FF08((char *)(v16 > 1), v17 + 1, 1, v14);
    *uint64_t v13 = v14;
  }
  *((void *)v14 + 2) = v17 + 1;
  uint64_t v18 = &v14[16 * v17];
  *((void *)v18 + 4) = sub_1001431B0;
  *((void *)v18 + 5) = v12;
  uint64_t v19 = swift_endAccess();
  a6(v19);
  if (!v10)
  {
LABEL_11:
    if (*(unsigned char *)(v11 + 72))
    {
      swift_release();
LABEL_27:
      *(void *)&v7[v76] = 0;
      return swift_release();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(v11 + 80) + 16) && !*(void *)(*(void *)(v11 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v11 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&v7[qword_10078DEA8], (uint64_t)&v80);
        uint64_t v67 = v83;
        uint64_t v68 = v84;
        sub_100038D28(&v80, v83);
        (*(void (**)(uint64_t, uint64_t))(v68 + 24))(v67, v68);
        swift_release();
        int64_t v65 = &v80;
LABEL_26:
        sub_100038CD8((uint64_t)v65);
        goto LABEL_27;
      }
    }
    uint64_t v21 = *(void *)(v11 + 48);
    uint64_t v22 = *(void *)(v11 + 56);
    uint64_t v23 = (uint64_t *)&v7[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10040FC28(v21, v24))
    {
      char v26 = sub_10040FC28(v22, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_21:
        __chkstk_darwin(v27);
        uint64_t v28 = swift_beginAccess();
        __chkstk_darwin(v28);
        sub_10003B754((uint64_t *)&unk_10078EED0);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v29 = (void *)sub_1000890D8();
        unint64_t v31 = v30;
        unint64_t v33 = v32;
        char v35 = v34;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v37 = _typeName(_:qualified:)();
        sub_1001165A4(v29, v31, v33, v35 & 1, v37, v38, &v80);
        uint64_t v39 = v81;
        uint64_t v75 = v80;
        uint64_t v40 = v83;
        uint64_t v74 = v82;
        uint64_t v42 = v84;
        uint64_t v41 = v85;
        double v72 = v7;
        uint64_t v44 = v86;
        uint64_t v43 = v87;
        uint64_t v45 = v88;
        uint64_t v71 = v89;
        uint64_t v46 = v90;
        uint64_t v73 = v91;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v75;
        uint64_t v81 = v39;
        uint64_t v82 = v74;
        uint64_t v83 = v40;
        uint64_t v84 = v42;
        uint64_t v85 = v41;
        uint64_t v86 = v44;
        uint64_t v87 = v43;
        uint64_t v7 = v72;
        uint64_t v88 = v45;
        uint64_t v89 = v71;
        uint64_t v90 = v46;
        uint64_t v47 = *(void *)&v72[qword_10078DEB8];
        if (v47
          && (int v48 = *(uint64_t (**)(uint64_t))(v47 + 16),
              uint64_t v49 = swift_retain(),
              char v50 = v48(v49),
              swift_release(),
              (v50 & 1) != 0))
        {
          uint64_t v51 = swift_allocObject();
          *(void *)(v51 + 16) = v72;
          *(void *)(v51 + 24) = v11;
          uint64_t v52 = v51;
          long long v53 = v72;
          swift_retain();
          uint64_t v54 = sub_100140104;
        }
        else
        {
          uint64_t v54 = 0;
          uint64_t v52 = 0;
        }
        uint64_t v55 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v70 = (uint64_t)&v72[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v72[qword_10078DEA8], (uint64_t)v77);
        uint64_t v56 = v78;
        uint64_t v57 = v79;
        sub_100038D28(v77, v78);
        char v58 = *(void (**)(uint64_t *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v57 + 32);
        swift_retain();
        uint64_t v69 = (uint64_t)v54;
        v58(&v80, sub_1001400F8, v55, v54, v52, sub_10013C070, v11, v56, v57);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v77);
        uint64_t v59 = *(void *)(v11 + 16);
        uint64_t v60 = *(void *)(v11 + 24);
        uint64_t v61 = *(void *)(v11 + 32);
        char v62 = *(unsigned char *)(v11 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001292D0(v73, v59, v60, v61, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v70, (uint64_t)v77);
        uint64_t v63 = v78;
        uint64_t v64 = v79;
        sub_100038D28(v77, v78);
        (*(void (**)(uint64_t, uint64_t))(v64 + 24))(v63, v64);
        swift_release();
        sub_1000499C4(v69);
        swift_release();
        int64_t v65 = v77;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v27 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  return swift_release();
}

uint64_t sub_100136BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (v7)
  {
    unint64_t v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v13 = v12 | (v10 << 6);
LABEL_19:
    uint64_t v17 = *(void *)(*(void *)(a1 + 56) + 8 * v13);
    if ((v17 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
      char v11 = __CocoaSet.contains(_:)();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      if (v11) {
        goto LABEL_33;
      }
    }
    else if (*(void *)(v17 + 16))
    {
      Hasher.init(_seed:)();
      Swift::UInt v18 = *(void *)(a2 + 16);
      Hasher._combine(_:)(v18);
      uint64_t result = Hasher._finalize()();
      uint64_t v19 = -1 << *(unsigned char *)(v17 + 32);
      unint64_t v20 = result & ~v19;
      if ((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
      {
        uint64_t v21 = *(void *)(v17 + 48);
        if (*(void *)(*(void *)(v21 + 8 * v20) + 16) == v18)
        {
LABEL_33:
          swift_release();
          return 1;
        }
        uint64_t v22 = ~v19;
        while (1)
        {
          unint64_t v20 = (v20 + 1) & v22;
          if (((*(void *)(v17 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
            break;
          }
          if (*(void *)(*(void *)(v21 + 8 * v20) + 16) == v18) {
            goto LABEL_33;
          }
        }
      }
    }
  }
  if (__OFADD__(v10++, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v10 >= v8) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v10);
  if (v15)
  {
LABEL_18:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    goto LABEL_19;
  }
  int64_t v16 = v10 + 1;
  if (v10 + 1 >= v8) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v10 + 2;
  if (v10 + 2 >= v8) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v10 + 3;
  if (v10 + 3 >= v8) {
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_17:
    int64_t v10 = v16;
    goto LABEL_18;
  }
  int64_t v23 = v10 + 4;
  if (v10 + 4 >= v8)
  {
LABEL_34:
    swift_release();
    return 0;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v23);
  v10 += 4;
  if (v15) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v23;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_100136E18(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = a1;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v40 = *(void *)(a2 + 48);
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754(a3);
    sub_100037EA0(a4, a3);
    Set.Iterator.init(_cocoa:)();
    uint64_t v6 = v41;
    uint64_t v39 = v42;
    uint64_t v10 = v43;
    uint64_t v11 = v44;
    unint64_t v12 = v45;
  }
  else
  {
    uint64_t v13 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v39 = a1 + 56;
    uint64_t v10 = ~v13;
    uint64_t v14 = -v13;
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v12 = v15 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v11 = 0;
  }
  int64_t v38 = (unint64_t)(v10 + 64) >> 6;
  uint64_t v36 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v16 = v11;
    if ((v6 & 0x8000000000000000) == 0) {
      break;
    }
    if (!__CocoaSet.Iterator.next()()) {
      goto LABEL_45;
    }
    swift_unknownObjectRetain();
    sub_10003B754(a3);
    swift_dynamicCast();
    uint64_t v19 = v46;
    swift_unknownObjectRelease();
    if (!v46) {
      goto LABEL_45;
    }
LABEL_32:
    if (*(void *)(v7 + 16)
      && (uint64_t v23 = a5(v19), (v24 & 1) != 0)
      && *(void *)(v40 + 16)
      && (uint64_t v25 = *(void *)(*(void *)(v7 + 56) + 8 * v23), v26 = a5(v19), (v27 & 1) != 0))
    {
      uint64_t v32 = *(void *)(*(void *)(v40 + 56) + 8 * v26);
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v36 = sub_10056FCC0(0, *((void *)v36 + 2) + 1, 1, v36);
      }
      unint64_t v34 = *((void *)v36 + 2);
      unint64_t v33 = *((void *)v36 + 3);
      if (v34 >= v33 >> 1) {
        uint64_t v36 = sub_10056FCC0((char *)(v33 > 1), v34 + 1, 1, v36);
      }
      *((void *)v36 + 2) = v34 + 1;
      char v35 = &v36[16 * v34];
      *((void *)v35 + 4) = v25;
      *((void *)v35 + 5) = v32;
    }
    else
    {
      if (qword_1007851B0 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_100018BF8(v28, (uint64_t)qword_1007874B0);
      uint64_t v29 = Logger.logObject.getter();
      os_log_type_t v30 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v29, v30))
      {
        unint64_t v31 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v31 = 0;
        _os_log_impl((void *)&_mh_execute_header, v29, v30, "Cannot lookup from, to for moved section", v31, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
  }
  if (v12)
  {
    unint64_t v17 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_31:
    uint64_t v19 = *(void *)(*(void *)(v6 + 48) + 8 * v18);
    swift_retain();
    if (!v19) {
      goto LABEL_45;
    }
    goto LABEL_32;
  }
  int64_t v20 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v20 >= v38) {
      goto LABEL_45;
    }
    unint64_t v21 = *(void *)(v39 + 8 * v20);
    ++v11;
    if (!v21)
    {
      uint64_t v11 = v16 + 2;
      if (v16 + 2 >= v38) {
        goto LABEL_45;
      }
      unint64_t v21 = *(void *)(v39 + 8 * v11);
      if (!v21)
      {
        uint64_t v11 = v16 + 3;
        if (v16 + 3 >= v38) {
          goto LABEL_45;
        }
        unint64_t v21 = *(void *)(v39 + 8 * v11);
        if (!v21)
        {
          uint64_t v11 = v16 + 4;
          if (v16 + 4 >= v38) {
            goto LABEL_45;
          }
          unint64_t v21 = *(void *)(v39 + 8 * v11);
          if (!v21)
          {
            uint64_t v11 = v16 + 5;
            if (v16 + 5 >= v38) {
              goto LABEL_45;
            }
            unint64_t v21 = *(void *)(v39 + 8 * v11);
            if (!v21)
            {
              uint64_t v22 = v16 + 6;
              while (v38 != v22)
              {
                unint64_t v21 = *(void *)(v39 + 8 * v22++);
                if (v21)
                {
                  uint64_t v11 = v22 - 1;
                  goto LABEL_30;
                }
              }
LABEL_45:
              sub_100051244();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v11 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_10013727C(uint64_t a1, long long *a2)
{
  uint64_t v3 = v2;
  long long v50 = *a2;
  uint64_t v49 = *((void *)a2 + 2);
  int v48 = *((unsigned __int8 *)a2 + 24);
  long long v47 = a2[2];
  uint64_t v46 = *((void *)a2 + 6);
  int v45 = *((unsigned __int8 *)a2 + 56);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10078E2B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_10003B754(&qword_100787558);
  uint64_t v8 = *(void *)(v44 - 8);
  uint64_t v9 = __chkstk_darwin(v44);
  uint64_t v38 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v36 = (uint64_t)&v35 - v11;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754((uint64_t *)&unk_100788D30);
    sub_100037EA0(&qword_10078E2A8, (uint64_t *)&unk_100788D30);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    a1 = v59;
    uint64_t v43 = v60;
    uint64_t v13 = v61;
    int64_t v14 = v62;
    uint64_t v15 = v63;
  }
  else
  {
    uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v43 = a1 + 56;
    uint64_t v13 = ~v16;
    uint64_t v18 = -v16;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    uint64_t v15 = v19 & v17;
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v14 = 0;
  }
  uint64_t v39 = v13;
  int64_t v42 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v40 = &_swiftEmptyArrayStorage;
  uint64_t v37 = v8;
  int64_t v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v41 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v51 = a1;
LABEL_8:
  int64_t v21 = v14;
  unint64_t v22 = v15;
  if ((a1 & 0x8000000000000000) == 0)
  {
    do
    {
      if (v22)
      {
        uint64_t v15 = (v22 - 1) & v22;
        unint64_t v25 = __clz(__rbit64(v22)) | (v21 << 6);
        int64_t v14 = v21;
      }
      else
      {
        int64_t v14 = v21 + 1;
        if (__OFADD__(v21, 1))
        {
          __break(1u);
          return result;
        }
        if (v14 >= v42) {
          goto LABEL_43;
        }
        unint64_t v26 = *(void *)(v43 + 8 * v14);
        if (!v26)
        {
          int64_t v27 = v21 + 2;
          if (v21 + 2 >= v42) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v43 + 8 * v27);
          if (v26) {
            goto LABEL_23;
          }
          int64_t v27 = v21 + 3;
          if (v21 + 3 >= v42) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v43 + 8 * v27);
          if (v26) {
            goto LABEL_23;
          }
          int64_t v27 = v21 + 4;
          if (v21 + 4 >= v42) {
            goto LABEL_43;
          }
          unint64_t v26 = *(void *)(v43 + 8 * v27);
          if (v26)
          {
LABEL_23:
            int64_t v14 = v27;
          }
          else
          {
            int64_t v14 = v21 + 5;
            if (v21 + 5 >= v42) {
              goto LABEL_43;
            }
            unint64_t v26 = *(void *)(v43 + 8 * v14);
            if (!v26)
            {
              int64_t v28 = v21 + 6;
              while (v42 != v28)
              {
                unint64_t v26 = *(void *)(v43 + 8 * v28++);
                if (v26)
                {
                  int64_t v14 = v28 - 1;
                  goto LABEL_24;
                }
              }
              goto LABEL_43;
            }
          }
        }
LABEL_24:
        uint64_t v15 = (v26 - 1) & v26;
        unint64_t v25 = __clz(__rbit64(v26)) + (v14 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 8 * v25);
      swift_retain();
      if (!v24) {
        goto LABEL_43;
      }
LABEL_26:
      long long v53 = v50;
      uint64_t v54 = v49;
      char v55 = v48;
      long long v56 = v47;
      uint64_t v57 = v46;
      char v58 = v45;
      sub_1001182F0(v24, (uint64_t *)&v53, sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, (uint64_t)v7);
      if (v3)
      {
        swift_release();
        sub_100051244();
        unint64_t v34 = v40;
        swift_bridgeObjectRelease();
        return (uint64_t)v34;
      }
      swift_release();
      if ((*v20)(v7, 1, v44) != 1)
      {
        uint64_t v29 = v36;
        sub_100028C3C((uint64_t)v7, v36, &qword_100787558);
        sub_100028C3C(v29, v38, &qword_100787558);
        unint64_t v30 = (unint64_t)v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v30 = sub_10056FA40(0, *(void *)(v30 + 16) + 1, 1, v30);
        }
        unint64_t v32 = *(void *)(v30 + 16);
        unint64_t v31 = *(void *)(v30 + 24);
        if (v32 >= v31 >> 1) {
          unint64_t v30 = sub_10056FA40(v31 > 1, v32 + 1, 1, v30);
        }
        *(void *)(v30 + 16) = v32 + 1;
        unint64_t v33 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
        uint64_t v40 = (void *)v30;
        uint64_t result = sub_100028C3C(v38, v30 + v33 + *(void *)(v37 + 72) * v32, &qword_100787558);
        a1 = v51;
        goto LABEL_8;
      }
      uint64_t result = sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_10078E2B0);
      int64_t v21 = v14;
      unint64_t v22 = v15;
      a1 = v51;
    }
    while ((v51 & 0x8000000000000000) == 0);
  }
  uint64_t v23 = __CocoaSet.Iterator.next()();
  if (v23)
  {
    uint64_t v52 = v23;
    swift_unknownObjectRetain();
    sub_10003B754((uint64_t *)&unk_100788D30);
    swift_dynamicCast();
    uint64_t v24 = v64;
    swift_unknownObjectRelease();
    int64_t v14 = v21;
    uint64_t v15 = v22;
    if (v24) {
      goto LABEL_26;
    }
  }
LABEL_43:
  sub_100051244();
  return (uint64_t)v40;
}

void *sub_1001378E8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t *a6, unint64_t *a7)
{
  uint64_t v75 = a4;
  uint64_t v76 = a5;
  uint64_t v79 = a2;
  uint64_t v80 = a3;
  uint64_t v10 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v10 - 8);
  unint64_t v12 = (char *)v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v74 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v73 = (char *)v59 - v17;
  uint64_t v18 = sub_10003B754((uint64_t *)&unk_10078E2C0);
  __chkstk_darwin(v18 - 8);
  int64_t v20 = (char *)v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_10003B754(qword_10078A138);
  uint64_t v61 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v60 = (uint64_t)v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  v59[0] = (uint64_t)v59 - v24;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754(a6);
    sub_100037EA0(a7, a6);
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    a1 = v85;
    uint64_t v67 = v86;
    uint64_t v26 = v87;
    uint64_t v83 = v88;
    unint64_t v27 = v89;
  }
  else
  {
    uint64_t v28 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v29 = *(void *)(a1 + 56);
    uint64_t v67 = a1 + 56;
    uint64_t v26 = ~v28;
    uint64_t v30 = -v28;
    if (v30 < 64) {
      uint64_t v31 = ~(-1 << v30);
    }
    else {
      uint64_t v31 = -1;
    }
    unint64_t v27 = v31 & v29;
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v83 = 0;
  }
  uint64_t v64 = a6;
  uint64_t v65 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v59[1] = v26;
  int64_t v66 = (unint64_t)(v26 + 64) >> 6;
  uint64_t v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  double v72 = (void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v69 = (void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v14 + 16);
  unint64_t v32 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
  uint64_t v77 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
  int64_t v62 = &_swiftEmptyArrayStorage;
  uint64_t v63 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v81 = a1;
  uint64_t v71 = v20;
  uint64_t v68 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
LABEL_8:
  uint64_t v33 = v83;
  if (a1 < 0)
  {
    do
    {
      uint64_t v36 = __CocoaSet.Iterator.next()();
      if (!v36) {
        goto LABEL_47;
      }
      uint64_t v84 = v36;
      swift_unknownObjectRetain();
      sub_10003B754(v64);
      swift_dynamicCast();
      uint64_t v37 = v90;
      swift_unknownObjectRelease();
      uint64_t v35 = v33;
      uint64_t v82 = v27;
      if (!v37) {
        goto LABEL_47;
      }
LABEL_31:
      uint64_t v83 = v35;
      v79(v37);
      if ((*v78)(v12, 1, v13) == 1)
      {
        sub_10003B6F8((uint64_t)v12, &qword_10078E8F0);
        if (qword_1007851B0 != -1) {
          swift_once();
        }
        uint64_t v41 = type metadata accessor for Logger();
        sub_100018BF8(v41, (uint64_t)qword_1007874B0);
        int64_t v42 = Logger.logObject.getter();
        os_log_type_t v43 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v44 = 0;
          _os_log_impl((void *)&_mh_execute_header, v42, v43, "Unable to look up index/indexPath", v44, 2u);
          swift_slowDealloc();
        }

        uint64_t v45 = 1;
      }
      else
      {
        uint64_t v46 = *v72;
        uint64_t v47 = v21;
        int v48 = v12;
        uint64_t v49 = v73;
        (*v72)(v73, v48, v13);
        long long v50 = v74;
        (*v70)(v74, v49, v13);
        uint64_t v51 = v75(v37);
        uint64_t v52 = v49;
        unint64_t v12 = v48;
        uint64_t v21 = v47;
        int64_t v20 = v71;
        (*v69)(v52, v13);
        v46(v20, v50, v13);
        unint64_t v32 = v68;
        uint64_t v45 = 0;
        *(void *)&v20[*(int *)(v21 + 36)] = v51;
      }
      (*v32)(v20, v45, 1, v21);
      swift_release();
      BOOL v53 = (*v77)(v20, 1, v21) == 1;
      unint64_t v27 = v82;
      if (!v53)
      {
        uint64_t v54 = v59[0];
        sub_100028C3C((uint64_t)v20, v59[0], qword_10078A138);
        sub_100028C3C(v54, v60, qword_10078A138);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        a1 = v81;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          int64_t v62 = (void *)sub_10056FDD0(0, v62[2] + 1, 1, (unint64_t)v62);
        }
        unint64_t v57 = v62[2];
        unint64_t v56 = v62[3];
        if (v57 >= v56 >> 1) {
          int64_t v62 = (void *)sub_10056FDD0(v56 > 1, v57 + 1, 1, (unint64_t)v62);
        }
        char v58 = v62;
        v62[2] = v57 + 1;
        uint64_t result = (void *)sub_100028C3C(v60, (uint64_t)v58+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v57, qword_10078A138);
        unint64_t v27 = v82;
        goto LABEL_8;
      }
      uint64_t result = (void *)sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10078E2C0);
      uint64_t v33 = v83;
      a1 = v81;
    }
    while (v81 < 0);
  }
  if (v27)
  {
    uint64_t v82 = (v27 - 1) & v27;
    unint64_t v34 = __clz(__rbit64(v27)) | (v33 << 6);
    uint64_t v35 = v33;
    goto LABEL_30;
  }
  int64_t v38 = v33 + 1;
  if (!__OFADD__(v33, 1))
  {
    if (v38 < v66)
    {
      unint64_t v39 = *(void *)(v67 + 8 * v38);
      uint64_t v35 = v33 + 1;
      if (v39) {
        goto LABEL_29;
      }
      uint64_t v35 = v33 + 2;
      if (v33 + 2 >= v66) {
        goto LABEL_47;
      }
      unint64_t v39 = *(void *)(v67 + 8 * v35);
      if (v39) {
        goto LABEL_29;
      }
      uint64_t v35 = v33 + 3;
      if (v33 + 3 >= v66) {
        goto LABEL_47;
      }
      unint64_t v39 = *(void *)(v67 + 8 * v35);
      if (v39) {
        goto LABEL_29;
      }
      uint64_t v35 = v33 + 4;
      if (v33 + 4 >= v66) {
        goto LABEL_47;
      }
      unint64_t v39 = *(void *)(v67 + 8 * v35);
      if (v39)
      {
LABEL_29:
        uint64_t v82 = (v39 - 1) & v39;
        unint64_t v34 = __clz(__rbit64(v39)) + (v35 << 6);
LABEL_30:
        uint64_t v37 = *(void *)(*(void *)(a1 + 48) + 8 * v34);
        swift_retain();
        if (v37) {
          goto LABEL_31;
        }
        goto LABEL_47;
      }
      uint64_t v35 = v33 + 5;
      if (v33 + 5 < v66)
      {
        unint64_t v39 = *(void *)(v67 + 8 * v35);
        if (!v39)
        {
          uint64_t v40 = v33 + 6;
          while (v66 != v40)
          {
            unint64_t v39 = *(void *)(v67 + 8 * v40++);
            if (v39)
            {
              uint64_t v35 = v40 - 1;
              a1 = v81;
              goto LABEL_29;
            }
          }
          goto LABEL_47;
        }
        goto LABEL_29;
      }
    }
LABEL_47:
    sub_100051244();
    return v62;
  }
  __break(1u);
  return result;
}

void sub_100138180(uint64_t a1, void (*a2)(uint64_t *__return_ptr, uint64_t), uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5, uint64_t *a6, unint64_t *a7)
{
  uint64_t v8 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754(a6);
    sub_100037EA0(a7, a6);
    Set.Iterator.init(_cocoa:)();
    uint64_t v8 = v41;
    uint64_t v38 = v42;
    uint64_t v11 = v43;
    uint64_t v12 = v44;
    unint64_t v13 = v45;
  }
  else
  {
    uint64_t v14 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v38 = a1 + 56;
    uint64_t v11 = ~v14;
    uint64_t v15 = -v14;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    else {
      uint64_t v16 = -1;
    }
    unint64_t v13 = v16 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v12 = 0;
  }
  int64_t v37 = (unint64_t)(v11 + 64) >> 6;
  uint64_t v35 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v17 = v12;
    if ((v8 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v20 = __CocoaSet.Iterator.next()();
    if (!v20) {
      goto LABEL_42;
    }
    uint64_t v46 = v20;
    swift_unknownObjectRetain();
    sub_10003B754(a6);
    swift_dynamicCast();
    uint64_t v21 = v39;
    swift_unknownObjectRelease();
    if (!v21) {
      goto LABEL_42;
    }
LABEL_32:
    a2(&v39, v21);
    if (v40 == 1)
    {
      if (qword_1007851B0 != -1) {
        swift_once();
      }
      uint64_t v25 = type metadata accessor for Logger();
      sub_100018BF8(v25, (uint64_t)qword_1007874B0);
      uint64_t v26 = Logger.logObject.getter();
      os_log_type_t v27 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v28 = 0;
        _os_log_impl((void *)&_mh_execute_header, v26, v27, "Unable to look up index/indexPath", v28, 2u);
        swift_slowDealloc();
      }
      swift_release();
    }
    else
    {
      uint64_t v29 = v39;
      uint64_t v30 = a4(v21);
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v35 = sub_10056FDE4(0, *((void *)v35 + 2) + 1, 1, v35);
      }
      unint64_t v32 = *((void *)v35 + 2);
      unint64_t v31 = *((void *)v35 + 3);
      if (v32 >= v31 >> 1) {
        uint64_t v35 = sub_10056FDE4((char *)(v31 > 1), v32 + 1, 1, v35);
      }
      *((void *)v35 + 2) = v32 + 1;
      uint64_t v33 = &v35[16 * v32];
      *((void *)v33 + 4) = v29;
      *((void *)v33 + 5) = v30;
    }
  }
  if (v13)
  {
    unint64_t v18 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v19 = v18 | (v12 << 6);
LABEL_31:
    uint64_t v21 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
    swift_retain();
    if (!v21) {
      goto LABEL_42;
    }
    goto LABEL_32;
  }
  int64_t v22 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v22 >= v37) {
      goto LABEL_42;
    }
    unint64_t v23 = *(void *)(v38 + 8 * v22);
    ++v12;
    if (!v23)
    {
      uint64_t v12 = v17 + 2;
      if (v17 + 2 >= v37) {
        goto LABEL_42;
      }
      unint64_t v23 = *(void *)(v38 + 8 * v12);
      if (!v23)
      {
        uint64_t v12 = v17 + 3;
        if (v17 + 3 >= v37) {
          goto LABEL_42;
        }
        unint64_t v23 = *(void *)(v38 + 8 * v12);
        if (!v23)
        {
          uint64_t v12 = v17 + 4;
          if (v17 + 4 >= v37) {
            goto LABEL_42;
          }
          unint64_t v23 = *(void *)(v38 + 8 * v12);
          if (!v23)
          {
            uint64_t v12 = v17 + 5;
            if (v17 + 5 >= v37) {
              goto LABEL_42;
            }
            unint64_t v23 = *(void *)(v38 + 8 * v12);
            if (!v23)
            {
              uint64_t v24 = v17 + 6;
              while (v37 != v24)
              {
                unint64_t v23 = *(void *)(v38 + 8 * v24++);
                if (v23)
                {
                  uint64_t v12 = v24 - 1;
                  goto LABEL_30;
                }
              }
LABEL_42:
              sub_100051244();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v12 << 6);
    goto LABEL_31;
  }
  __break(1u);
}

uint64_t sub_1001385C8@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v30 = &_swiftEmptySetSingleton;
  unint64_t v31 = &_swiftEmptySetSingleton;
  uint64_t v28 = &_swiftEmptySetSingleton;
  uint64_t v29 = &_swiftEmptySetSingleton;
  os_log_type_t v27 = &_swiftEmptySetSingleton;
  uint64_t v23 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v24 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  if (v4) {
    goto LABEL_6;
  }
LABEL_7:
  if (!__OFADD__(v6++, 1))
  {
    if (v6 >= v24) {
      goto LABEL_30;
    }
    unint64_t v10 = *(void *)(v23 + 8 * v6);
    if (v10)
    {
LABEL_17:
      unint64_t v4 = (v10 - 1) & v10;
      for (unint64_t i = __clz(__rbit64(v10)) + (v6 << 6); ; unint64_t i = v7 | (v6 << 6))
      {
        uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8 * i);
        uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 16 * i + 8);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v14 = swift_bridgeObjectRetain();
        char v15 = sub_100136BBC(v14, v12);
        swift_bridgeObjectRelease();
        swift_retain();
        uint64_t v16 = swift_bridgeObjectRetain();
        char v17 = sub_100136BBC(v16, v12);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        if (v15)
        {
          if ((v17 & 1) != 0 && (~(_BYTE)v13 & 3) == 0)
          {
            swift_retain();
            sub_1005A4084(v26, v12);
            swift_release();
          }
        }
        else if ((v17 & 1) == 0)
        {
          uint64_t result = swift_release();
          if (!v4) {
            goto LABEL_7;
          }
          goto LABEL_6;
        }
        sub_1005A4084(v26, v12);
        uint64_t result = swift_release();
        if (!v4) {
          goto LABEL_7;
        }
LABEL_6:
        unint64_t v7 = __clz(__rbit64(v4));
        v4 &= v4 - 1;
      }
    }
    int64_t v11 = v6 + 1;
    if (v6 + 1 >= v24) {
      goto LABEL_30;
    }
    unint64_t v10 = *(void *)(v23 + 8 * v11);
    if (!v10)
    {
      int64_t v11 = v6 + 2;
      if (v6 + 2 >= v24) {
        goto LABEL_30;
      }
      unint64_t v10 = *(void *)(v23 + 8 * v11);
      if (!v10)
      {
        int64_t v11 = v6 + 3;
        if (v6 + 3 < v24)
        {
          unint64_t v10 = *(void *)(v23 + 8 * v11);
          if (v10) {
            goto LABEL_16;
          }
          while (1)
          {
            int64_t v6 = v11 + 1;
            if (__OFADD__(v11, 1)) {
              goto LABEL_32;
            }
            if (v6 >= v24) {
              break;
            }
            unint64_t v10 = *(void *)(v23 + 8 * v6);
            ++v11;
            if (v10) {
              goto LABEL_17;
            }
          }
        }
LABEL_30:
        uint64_t result = swift_release();
        unint64_t v18 = v30;
        uint64_t v20 = v28;
        unint64_t v19 = v29;
        uint64_t v21 = v27;
        *a2 = v31;
        a2[1] = v18;
        a2[2] = v19;
        a2[3] = v20;
        a2[4] = v21;
        return result;
      }
    }
LABEL_16:
    int64_t v6 = v11;
    goto LABEL_17;
  }
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_10013887C@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, char a8@<W7>, void *a9@<X8>, void *a10, void *a11, void *a12, char a13)
{
  uint64_t v176 = &_swiftEmptySetSingleton;
  uint64_t v177 = &_swiftEmptySetSingleton;
  unint64_t v174 = &_swiftEmptySetSingleton;
  uint64_t v175 = &_swiftEmptySetSingleton;
  int64_t v173 = &_swiftEmptySetSingleton;
  uint64_t v21 = *a1;
  uint64_t v196 = a1[1];
  v197[0] = v21;
  int64_t v22 = a1[2];
  uint64_t v194 = a1[3];
  uint64_t v195 = v22;
  long long v193 = a1[4];
  uint64_t v171 = (uint64_t)v196;
  uint64_t v172 = (uint64_t)v21;
  uint64_t v169 = (uint64_t)v194;
  uint64_t v170 = (uint64_t)v22;
  uint64_t v168 = (uint64_t)v193;
  sub_100028CA0((uint64_t)v197);
  sub_100028CA0((uint64_t)&v196);
  sub_100028CA0((uint64_t)&v195);
  sub_100028CA0((uint64_t)&v194);
  sub_100028CA0((uint64_t)&v193);
  sub_100028CA0((uint64_t)v197);
  sub_100028CA0((uint64_t)&v196);
  sub_100028CA0((uint64_t)&v195);
  sub_100028CA0((uint64_t)&v194);
  sub_100028CA0((uint64_t)&v193);
  BOOL v23 = sub_100118E18();
  sub_10006A2C4((uint64_t)v197);
  sub_10006A2C4((uint64_t)&v196);
  sub_10006A2C4((uint64_t)&v195);
  sub_10006A2C4((uint64_t)&v194);
  sub_10006A2C4((uint64_t)&v193);
  if (v23)
  {
    sub_10006A2C4((uint64_t)v197);
    sub_10006A2C4((uint64_t)&v196);
    sub_10006A2C4((uint64_t)&v195);
    sub_10006A2C4((uint64_t)&v194);
    uint64_t result = sub_10006A2C4((uint64_t)&v193);
    uint64_t v25 = &_swiftEmptySetSingleton;
    uint64_t v26 = &_swiftEmptySetSingleton;
    os_log_type_t v27 = &_swiftEmptySetSingleton;
    uint64_t v28 = &_swiftEmptySetSingleton;
    uint64_t v29 = &_swiftEmptySetSingleton;
LABEL_107:
    *a9 = v29;
    a9[1] = v28;
    a9[2] = v27;
    a9[3] = v26;
    a9[4] = v25;
    return result;
  }
  uint64_t v157 = a6;
  uint64_t v125 = a9;
  unint64_t v139 = a2 & 0xC000000000000001;
  unint64_t v136 = a4 & 0xC000000000000001;
  unint64_t v137 = a3 & 0xC000000000000001;
  uint64_t v158 = a12;
  uint64_t v134 = &v165;
  uint64_t v135 = &v164;
  int64_t v133 = &v166;
  uint64_t v156 = a11;
  Swift::Int v153 = a10;
  uint64_t v30 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v30 = a2;
  }
  uint64_t v131 = v30;
  uint64_t v132 = &v167;
  uint64_t v138 = a2;
  int v155 = a8 & 1;
  int v160 = a13 & 1;
  if (a3 < 0) {
    uint64_t v31 = a3;
  }
  else {
    uint64_t v31 = a3 & 0xFFFFFFFFFFFFFF8;
  }
  uint64_t v140 = a4;
  uint64_t v141 = a3;
  uint64_t v127 = a3 + 56;
  uint64_t v128 = a2 + 56;
  uint64_t v32 = a4 & 0xFFFFFFFFFFFFFF8;
  if (a4 < 0) {
    uint64_t v32 = a4;
  }
  uint64_t v129 = v32;
  uint64_t v130 = v31;
  int64_t v126 = a4 + 56;
  Swift::Int v143 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v159 = a7;
  uint64_t v154 = a5;
LABEL_12:
  int v163 = &_swiftEmptySetSingleton;
  int64_t v164 = &_swiftEmptySetSingleton;
  uint64_t v165 = &_swiftEmptySetSingleton;
  unint64_t v166 = &_swiftEmptySetSingleton;
  uint64_t v167 = &_swiftEmptySetSingleton;
  if (v139)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10003B754((uint64_t *)&unk_100788D30);
    sub_100037EA0(&qword_10078E2A8, (uint64_t *)&unk_100788D30);
    uint64_t result = Set.Iterator.init(_cocoa:)();
    uint64_t v42 = v178;
    unint64_t v152 = v179;
    uint64_t v43 = v180;
    uint64_t v44 = v181;
    unint64_t v45 = v182;
  }
  else
  {
    uint64_t v42 = v138;
    uint64_t v46 = -1 << *(unsigned char *)(v138 + 32);
    uint64_t v47 = ~v46;
    uint64_t v48 = -v46;
    if (v48 < 64) {
      uint64_t v49 = ~(-1 << v48);
    }
    else {
      uint64_t v49 = -1;
    }
    unint64_t v45 = v49 & *(void *)(v138 + 56);
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v43 = v47;
    uint64_t v44 = 0;
    unint64_t v152 = v128;
  }
  uint64_t v149 = v43;
  int64_t v150 = (void *)(v42 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v151 = (unint64_t)(v43 + 64) >> 6;
  if ((v42 & 0x8000000000000000) == 0) {
    goto LABEL_22;
  }
LABEL_19:
  uint64_t v50 = __CocoaSet.Iterator.next()();
  if (!v50) {
    goto LABEL_42;
  }
  uint64_t v161 = v50;
  swift_unknownObjectRetain();
  sub_10003B754((uint64_t *)&unk_100788D30);
  swift_dynamicCast();
  uint64_t v51 = v162;
  uint64_t v52 = swift_unknownObjectRelease();
  uint64_t v53 = v44;
  uint64_t v54 = v45;
  if (!v51)
  {
LABEL_42:
    uint64_t v61 = v141;
LABEL_43:
    sub_100051244();
    if (v137)
    {
      swift_bridgeObjectRetain();
      __CocoaSet.makeIterator()();
      sub_10003B754((uint64_t *)&unk_100788D30);
      sub_100037EA0(&qword_10078E2A8, (uint64_t *)&unk_100788D30);
      uint64_t result = Set.Iterator.init(_cocoa:)();
      unint64_t v62 = (unint64_t)v183;
      uint64_t v147 = v184;
      uint64_t v63 = v185;
      uint64_t v64 = v186;
      unint64_t v65 = v187;
    }
    else
    {
      uint64_t v66 = -1 << *(unsigned char *)(v61 + 32);
      uint64_t v63 = ~v66;
      uint64_t v67 = -v66;
      if (v67 < 64) {
        uint64_t v68 = ~(-1 << v67);
      }
      else {
        uint64_t v68 = -1;
      }
      unint64_t v65 = v68 & *(void *)(v61 + 56);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v64 = 0;
      unint64_t v62 = v61;
      uint64_t v147 = v127;
    }
    int64_t v145 = v62 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v146 = (unint64_t)(v63 + 64) >> 6;
    uint64_t v148 = (void *)v62;
    uint64_t v149 = v63;
    if ((v62 & 0x8000000000000000) == 0) {
      goto LABEL_53;
    }
LABEL_50:
    uint64_t v69 = __CocoaSet.Iterator.next()();
    if (!v69) {
      goto LABEL_73;
    }
    uint64_t v161 = v69;
    swift_unknownObjectRetain();
    sub_10003B754((uint64_t *)&unk_100788D30);
    swift_dynamicCast();
    uint64_t v70 = v162;
    uint64_t v71 = swift_unknownObjectRelease();
    uint64_t v72 = v64;
    uint64_t v73 = v65;
    uint64_t v74 = v159;
    if (!v70)
    {
LABEL_73:
      uint64_t v85 = v140;
      goto LABEL_74;
    }
    while (1)
    {
      int64_t v150 = &v125;
      __chkstk_darwin(v71);
      unint64_t v152 = v73;
      uint64_t v79 = v153;
      uint64_t v78 = v154;
      uint64_t v81 = v156;
      uint64_t v80 = v157;
      *(&v125 - 10) = v154;
      *(&v125 - 9) = v80;
      *(&v125 - 8) = v74;
      char v82 = v155;
      *((unsigned char *)&v125 - 56) = v155;
      *(&v125 - 6) = v79;
      *(&v125 - 5) = v81;
      *(&v125 - 4) = v158;
      *((unsigned char *)&v125 - 24) = v160;
      *(&v125 - 2) = v70;
      sub_10003B754(&qword_10078E2D8);
      uint64_t v151 = v72;
      uint64_t v83 = Set.removeAll(where:)();
      int64_t v150 = &v125;
      __chkstk_darwin(v83);
      *(&v125 - 10) = v78;
      *(&v125 - 9) = v80;
      *(&v125 - 8) = v159;
      *((unsigned char *)&v125 - 56) = v82;
      *(&v125 - 6) = v79;
      *(&v125 - 5) = v81;
      unint64_t v62 = (unint64_t)v148;
      *(&v125 - 4) = v158;
      *((unsigned char *)&v125 - 24) = v160;
      *(&v125 - 2) = v70;
      *(&v125 - 1) = &v163;
      Set.removeAll(where:)();
      uint64_t result = swift_release();
      uint64_t v64 = v151;
      unint64_t v65 = v152;
      if ((v62 & 0x8000000000000000) != 0) {
        goto LABEL_50;
      }
LABEL_53:
      if (v65)
      {
        uint64_t v73 = (v65 - 1) & v65;
        unint64_t v75 = __clz(__rbit64(v65)) | (v64 << 6);
        uint64_t v72 = v64;
        uint64_t v74 = v159;
      }
      else
      {
        uint64_t v72 = v64 + 1;
        uint64_t v74 = v159;
        if (__OFADD__(v64, 1)) {
          goto LABEL_109;
        }
        if (v72 >= v146) {
          goto LABEL_73;
        }
        unint64_t v76 = *(void *)(v147 + 8 * v72);
        if (!v76)
        {
          uint64_t v77 = v64 + 2;
          if (v64 + 2 >= v146) {
            goto LABEL_73;
          }
          unint64_t v76 = *(void *)(v147 + 8 * v77);
          if (v76) {
            goto LABEL_62;
          }
          uint64_t v77 = v64 + 3;
          if (v64 + 3 >= v146) {
            goto LABEL_73;
          }
          unint64_t v76 = *(void *)(v147 + 8 * v77);
          if (v76)
          {
LABEL_62:
            uint64_t v72 = v77;
          }
          else
          {
            uint64_t v72 = v64 + 4;
            if (v64 + 4 >= v146) {
              goto LABEL_73;
            }
            unint64_t v76 = *(void *)(v147 + 8 * v72);
            if (!v76)
            {
              uint64_t v84 = v64 + 5;
              uint64_t v85 = v140;
              while (v146 != v84)
              {
                unint64_t v76 = *(void *)(v147 + 8 * v84++);
                if (v76)
                {
                  uint64_t v72 = v84 - 1;
                  goto LABEL_63;
                }
              }
LABEL_74:
              sub_100051244();
              if (v136)
              {
                swift_bridgeObjectRetain();
                __CocoaSet.makeIterator()();
                sub_10003B754((uint64_t *)&unk_100788D30);
                sub_100037EA0(&qword_10078E2A8, (uint64_t *)&unk_100788D30);
                uint64_t result = Set.Iterator.init(_cocoa:)();
                uint64_t v86 = v190;
                int64_t v146 = v189;
                uint64_t v147 = v188;
                uint64_t v88 = v191;
                unint64_t v87 = v192;
              }
              else
              {
                uint64_t v89 = -1 << *(unsigned char *)(v85 + 32);
                uint64_t v86 = ~v89;
                uint64_t v90 = -v89;
                if (v90 < 64) {
                  uint64_t v91 = ~(-1 << v90);
                }
                else {
                  uint64_t v91 = -1;
                }
                unint64_t v87 = v91 & *(void *)(v85 + 56);
                uint64_t result = swift_bridgeObjectRetain();
                uint64_t v88 = 0;
                int64_t v146 = v126;
                uint64_t v147 = v85;
              }
              uint64_t v142 = v86;
              uint64_t v144 = v147 & 0x7FFFFFFFFFFFFFFFLL;
              int64_t v145 = (unint64_t)(v86 + 64) >> 6;
              if (v147 < 0)
              {
LABEL_81:
                uint64_t v92 = __CocoaSet.Iterator.next()();
                a5 = v154;
                if (!v92) {
                  goto LABEL_11;
                }
                uint64_t v161 = v92;
                swift_unknownObjectRetain();
                sub_10003B754((uint64_t *)&unk_100788D30);
                swift_dynamicCast();
                uint64_t v93 = v162;
                uint64_t v94 = swift_unknownObjectRelease();
                uint64_t v95 = v88;
                uint64_t v96 = v87;
                if (!v93) {
                  goto LABEL_11;
                }
                goto LABEL_96;
              }
              while (1)
              {
                a5 = v154;
                if (v87)
                {
                  uint64_t v96 = (v87 - 1) & v87;
                  unint64_t v97 = __clz(__rbit64(v87)) | (v88 << 6);
                  uint64_t v95 = v88;
                }
                else
                {
                  uint64_t v95 = v88 + 1;
                  if (__OFADD__(v88, 1)) {
                    goto LABEL_110;
                  }
                  if (v95 >= v145) {
                    goto LABEL_11;
                  }
                  unint64_t v98 = *(void *)(v146 + 8 * v95);
                  if (!v98)
                  {
                    uint64_t v99 = v88 + 2;
                    if (v88 + 2 >= v145) {
                      goto LABEL_11;
                    }
                    unint64_t v98 = *(void *)(v146 + 8 * v99);
                    if (v98) {
                      goto LABEL_93;
                    }
                    uint64_t v99 = v88 + 3;
                    if (v88 + 3 >= v145) {
                      goto LABEL_11;
                    }
                    unint64_t v98 = *(void *)(v146 + 8 * v99);
                    if (v98)
                    {
LABEL_93:
                      uint64_t v95 = v99;
                    }
                    else
                    {
                      uint64_t v95 = v88 + 4;
                      if (v88 + 4 >= v145)
                      {
LABEL_11:
                        sub_100051244();
                        uint64_t v33 = v171;
                        uint64_t v34 = v172;
                        uint64_t v36 = v169;
                        uint64_t v35 = v170;
                        uint64_t v37 = v168;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        unint64_t v152 = v34;
                        sub_100597C9C(v34);
                        uint64_t v38 = swift_bridgeObjectRetain();
                        sub_100597C9C(v38);
                        uint64_t v39 = swift_bridgeObjectRetain();
                        uint64_t v149 = v35;
                        sub_100597C9C(v39);
                        uint64_t v40 = swift_bridgeObjectRetain();
                        sub_100597C9C(v40);
                        uint64_t v151 = v37;
                        uint64_t v41 = swift_bridgeObjectRetain();
                        sub_100597C9C(v41);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        int64_t v150 = (void *)v33;
                        swift_bridgeObjectRelease();
                        sub_100131AC0(v34, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(void))sub_1005A600C, (uint64_t (*)(uint64_t, uint64_t))sub_100130734);
                        sub_100131AC0(v33, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(void))sub_1005A600C, (uint64_t (*)(uint64_t, uint64_t))sub_100130734);
                        sub_100131AC0(v149, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(void))sub_1005A600C, (uint64_t (*)(uint64_t, uint64_t))sub_100130734);
                        sub_100131AC0(v36, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(void))sub_1005A600C, (uint64_t (*)(uint64_t, uint64_t))sub_100130734);
                        sub_100131AC0(v151, (uint64_t *)&unk_100788D30, &qword_10078E2A8, (void (*)(void))sub_1005A600C, (uint64_t (*)(uint64_t, uint64_t))sub_100130734);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v171 = (uint64_t)v164;
                        uint64_t v172 = (uint64_t)v163;
                        uint64_t v169 = (uint64_t)v166;
                        uint64_t v170 = (uint64_t)v165;
                        uint64_t v168 = (uint64_t)v167;
                        v197[1] = v163;
                        v197[2] = v164;
                        v197[3] = v165;
                        v197[4] = v166;
                        v197[5] = v167;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        LOBYTE(v33) = sub_100118E18();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if (v33)
                        {
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          uint64_t result = swift_bridgeObjectRelease();
                          uint64_t v28 = v176;
                          uint64_t v29 = v177;
                          uint64_t v26 = v174;
                          os_log_type_t v27 = v175;
                          uint64_t v25 = v173;
                          a9 = v125;
                          goto LABEL_107;
                        }
                        goto LABEL_12;
                      }
                      unint64_t v98 = *(void *)(v146 + 8 * v95);
                      if (!v98)
                      {
                        uint64_t v124 = v88 + 5;
                        while (v145 != v124)
                        {
                          unint64_t v98 = *(void *)(v146 + 8 * v124++);
                          if (v98)
                          {
                            uint64_t v95 = v124 - 1;
                            goto LABEL_94;
                          }
                        }
                        goto LABEL_11;
                      }
                    }
                  }
LABEL_94:
                  uint64_t v96 = (v98 - 1) & v98;
                  unint64_t v97 = __clz(__rbit64(v98)) + (v95 << 6);
                }
                uint64_t v93 = *(void **)(*(void *)(v147 + 48) + 8 * v97);
                uint64_t v94 = swift_retain();
                if (!v93) {
                  goto LABEL_11;
                }
LABEL_96:
                uint64_t v148 = &v125;
                __chkstk_darwin(v94);
                uint64_t v100 = v157;
                char v101 = v158;
                *(&v125 - 10) = a5;
                *(&v125 - 9) = v100;
                CGRect v102 = v100;
                uint64_t v103 = v159;
                *(&v125 - 8) = v159;
                uint64_t v104 = v103;
                char v105 = v155;
                *((unsigned char *)&v125 - 56) = v155;
                int64_t v150 = (void *)v96;
                BOOL v106 = v153;
                *(&v125 - 6) = v153;
                uint64_t v107 = v106;
                *(&v125 - 5) = v156;
                *(&v125 - 4) = v101;
                *((unsigned char *)&v125 - 24) = v160;
                unint64_t v152 = (unint64_t)v93;
                *(&v125 - 2) = v93;
                uint64_t v151 = sub_10003B754(&qword_10078E2D8);
                uint64_t v149 = v95;
                uint64_t v108 = Set.removeAll(where:)();
                uint64_t v148 = &v125;
                __chkstk_darwin(v108);
                uint64_t v109 = v154;
                *(&v125 - 10) = v154;
                *(&v125 - 9) = v102;
                *(&v125 - 8) = v104;
                *((unsigned char *)&v125 - 56) = v105;
                uint64_t v110 = v107;
                uint64_t v111 = v156;
                *(&v125 - 6) = v107;
                *(&v125 - 5) = v111;
                *(&v125 - 4) = v101;
                LOBYTE(v107) = v160;
                *((unsigned char *)&v125 - 24) = v160;
                *(&v125 - 2) = (void *)v152;
                uint64_t v112 = Set.removeAll(where:)();
                uint64_t v148 = &v125;
                __chkstk_darwin(v112);
                BOOL v113 = v157;
                *(&v125 - 10) = v109;
                *(&v125 - 9) = v113;
                *(&v125 - 8) = v104;
                LOBYTE(v109) = v155;
                *((unsigned char *)&v125 - 56) = v155;
                *(&v125 - 6) = v110;
                *(&v125 - 5) = v111;
                *(&v125 - 4) = v101;
                *((unsigned char *)&v125 - 24) = (_BYTE)v107;
                unint64_t v114 = v152;
                *(&v125 - 2) = (void *)v152;
                uint64_t v115 = Set.removeAll(where:)();
                uint64_t v148 = &v125;
                __chkstk_darwin(v115);
                uint64_t v116 = (void *)v114;
                uint64_t v117 = v153;
                uint64_t v118 = v154;
                uint64_t v119 = v157;
                *(&v125 - 10) = v154;
                *(&v125 - 9) = v119;
                uint64_t v120 = v159;
                *(&v125 - 8) = v159;
                *((unsigned char *)&v125 - 56) = (_BYTE)v109;
                uint64_t v121 = v156;
                *(&v125 - 6) = v117;
                *(&v125 - 5) = v121;
                *(&v125 - 4) = v101;
                *((unsigned char *)&v125 - 24) = (_BYTE)v107;
                *(&v125 - 2) = v116;
                uint64_t v122 = v116;
                *(&v125 - 1) = &v163;
                uint64_t v123 = Set.removeAll(where:)();
                uint64_t v148 = &v125;
                __chkstk_darwin(v123);
                *(&v125 - 10) = v118;
                *(&v125 - 9) = v119;
                *(&v125 - 8) = v120;
                *((unsigned char *)&v125 - 56) = v155;
                *(&v125 - 6) = v117;
                *(&v125 - 5) = v121;
                *(&v125 - 4) = v158;
                *((unsigned char *)&v125 - 24) = v160;
                *(&v125 - 2) = v122;
                Set.removeAll(where:)();
                uint64_t result = swift_release();
                uint64_t v88 = v149;
                unint64_t v87 = (unint64_t)v150;
                if (v147 < 0) {
                  goto LABEL_81;
                }
              }
            }
          }
        }
LABEL_63:
        uint64_t v73 = (v76 - 1) & v76;
        unint64_t v75 = __clz(__rbit64(v76)) + (v72 << 6);
      }
      uint64_t v70 = *(void **)(*(void *)(v62 + 48) + 8 * v75);
      uint64_t v71 = swift_retain();
      if (!v70) {
        goto LABEL_73;
      }
    }
  }
  while (1)
  {
    __chkstk_darwin(v52);
    char v58 = v157;
    *(&v125 - 10) = a5;
    *(&v125 - 9) = v58;
    *(&v125 - 8) = v159;
    *((unsigned char *)&v125 - 56) = v155;
    uint64_t v59 = v156;
    *(&v125 - 6) = v153;
    *(&v125 - 5) = v59;
    *(&v125 - 4) = v158;
    *((unsigned char *)&v125 - 24) = v160;
    *(&v125 - 2) = v51;
    sub_10003B754(&qword_10078E2D8);
    Set.removeAll(where:)();
    uint64_t result = swift_release();
    uint64_t v44 = v53;
    unint64_t v45 = v54;
    if (v42 < 0) {
      goto LABEL_19;
    }
LABEL_22:
    if (v45)
    {
      uint64_t v54 = (v45 - 1) & v45;
      unint64_t v55 = __clz(__rbit64(v45)) | (v44 << 6);
      uint64_t v53 = v44;
      goto LABEL_33;
    }
    uint64_t v53 = v44 + 1;
    if (__OFADD__(v44, 1)) {
      break;
    }
    if (v53 >= v151) {
      goto LABEL_42;
    }
    unint64_t v56 = *(void *)(v152 + 8 * v53);
    if (!v56)
    {
      uint64_t v57 = v44 + 2;
      if (v44 + 2 >= v151) {
        goto LABEL_42;
      }
      unint64_t v56 = *(void *)(v152 + 8 * v57);
      if (v56) {
        goto LABEL_31;
      }
      uint64_t v57 = v44 + 3;
      if (v44 + 3 >= v151) {
        goto LABEL_42;
      }
      unint64_t v56 = *(void *)(v152 + 8 * v57);
      if (v56)
      {
LABEL_31:
        uint64_t v53 = v57;
      }
      else
      {
        uint64_t v53 = v44 + 4;
        if (v44 + 4 >= v151) {
          goto LABEL_42;
        }
        unint64_t v56 = *(void *)(v152 + 8 * v53);
        if (!v56)
        {
          uint64_t v60 = v44 + 5;
          uint64_t v61 = v141;
          do
          {
            if (v151 == v60) {
              goto LABEL_43;
            }
            unint64_t v56 = *(void *)(v152 + 8 * v60++);
          }
          while (!v56);
          uint64_t v53 = v60 - 1;
        }
      }
    }
    uint64_t v54 = (v56 - 1) & v56;
    unint64_t v55 = __clz(__rbit64(v56)) + (v53 << 6);
LABEL_33:
    uint64_t v51 = *(void **)(*(void *)(v42 + 48) + 8 * v55);
    uint64_t v52 = swift_retain();
    if (!v51) {
      goto LABEL_42;
    }
  }
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
  return result;
}

uint64_t sub_1001398D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  int64_t v22 = (unint64_t *)result;
  int64_t v6 = 0;
  uint64_t v24 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v10) {
      return sub_10013155C(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v10) {
        return sub_10013155C(v22, a2, v23, a3);
      }
      unint64_t v18 = *(void *)(v24 + 8 * v6);
      if (!v18)
      {
        int64_t v6 = v17 + 2;
        if (v17 + 2 >= v10) {
          return sub_10013155C(v22, a2, v23, a3);
        }
        unint64_t v18 = *(void *)(v24 + 8 * v6);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(a3 + 56) + 16 * v12;
    uint64_t v14 = *(void *)v13;
    uint64_t v15 = *(unsigned __int8 *)(v13 + 8);
    uint64_t v16 = swift_retain();
    LOBYTE(v15) = a4(v16, v14, v15);
    uint64_t result = swift_release();
    if (v15)
    {
      *(unint64_t *)((char *)v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_10013155C(v22, a2, v23, a3);
      }
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v10) {
    return sub_10013155C(v22, a2, v23, a3);
  }
  unint64_t v18 = *(void *)(v24 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v10) {
      return sub_10013155C(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v24 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100139AB0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = isStackAllocationSafe;
  char v10 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v11 = (unint64_t)((1 << v10) + 63) >> 6;
  size_t v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    uint64_t v13 = a4((char *)&v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, v9, a2, a3);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v13;
    }
  }
  else
  {
    uint64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    uint64_t v6 = a4((char *)v14, v11, v9, a2, a3);
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_100139C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  uint64_t result = a4();
  if ((v8 & 1) == 0) {
    return 0;
  }
  unint64_t v9 = *(void *)(*(void *)(a3 + 56) + 8 * result);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)(a2 + 16))
  {
    return *(void *)(a2 + 16 * v9 + 32) == a1;
  }
  __break(1u);
  return result;
}

uint64_t sub_100139CB8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v11 = (char *)a5;
  uint64_t v82 = qword_10078DEE0;
  uint64_t v14 = *(void *)(a5 + qword_10078DEE0);
  if (!v14)
  {
    uint64_t v15 = sub_100127C10(a5, a1, a2, sub_100089354, &qword_10078E2E0, (uint64_t (*)(void *))sub_100425314);
    if (a3) {
      goto LABEL_3;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  uint64_t v15 = *(void *)(a5 + qword_10078DEE0);
  if (!a3) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v83 = v11;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  int64_t v17 = (char **)(v15 + 64);
  swift_beginAccess();
  unint64_t v18 = *(char **)(v15 + 64);
  swift_retain();
  sub_10006C140(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v15 + 64) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v18 = sub_10056FF08(0, *((void *)v18 + 2) + 1, 1, v18);
    *int64_t v17 = v18;
  }
  unint64_t v21 = *((void *)v18 + 2);
  unint64_t v20 = *((void *)v18 + 3);
  if (v21 >= v20 >> 1)
  {
    unint64_t v18 = sub_10056FF08((char *)(v20 > 1), v21 + 1, 1, v18);
    *int64_t v17 = v18;
  }
  *((void *)v18 + 2) = v21 + 1;
  int64_t v22 = &v18[16 * v21];
  *((void *)v22 + 4) = sub_1001431B0;
  *((void *)v22 + 5) = v16;
  swift_endAccess();
  unint64_t v11 = v83;
LABEL_10:
  *(void *)&long long v88 = sub_100089354();
  *((void *)&v88 + 1) = v23;
  uint64_t v89 = v24;
  LOBYTE(v90) = v25 & 1;
  uint64_t v26 = qword_10078DED8;
  *(unsigned char *)(a6 + qword_10078DED8) = 1;
  sub_10011EC28((uint64_t)&v88, a7, a6, v15, a8);
  uint64_t v27 = v89;
  char v28 = v90;
  uint64_t v29 = a6 + qword_10078DED0;
  uint64_t v30 = *(void *)(a6 + qword_10078DED0);
  *(_OWORD *)uint64_t v29 = v88;
  *(void *)(v29 + 16) = v27;
  *(unsigned char *)(v29 + 24) = v28;
  sub_1000349CC(v30);
  *(unsigned char *)(a6 + v26) = 0;
  if (!v14)
  {
    if (*(unsigned char *)(v15 + 72))
    {
      swift_release();
LABEL_27:
      *(void *)&v11[v82] = 0;
      return swift_release();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(v15 + 80) + 16) && !*(void *)(*(void *)(v15 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v15 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&v11[qword_10078DEA8], (uint64_t)&v88);
        uint64_t v77 = v90;
        uint64_t v78 = v91;
        sub_100038D28(&v88, v90);
        (*(void (**)(uint64_t, uint64_t))(v78 + 24))(v77, v78);
        swift_release();
        unint64_t v75 = &v88;
LABEL_26:
        sub_100038CD8((uint64_t)v75);
        goto LABEL_27;
      }
    }
    uint64_t v31 = *(void *)(v15 + 48);
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v84 = v11;
    uint64_t v33 = (uint64_t *)&v11[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_100410230(v31, v35))
    {
      char v36 = sub_100410230(v32, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_21:
        __chkstk_darwin(v37);
        uint64_t v38 = swift_beginAccess();
        __chkstk_darwin(v38);
        sub_10003B754(&qword_100788D88);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v39 = (void *)sub_100089354();
        uint64_t v41 = v40;
        uint64_t v43 = v42;
        char v45 = v44;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v47 = _typeName(_:qualified:)();
        sub_100117258(v39, v41, v43, v45 & 1, v47, v48, &v88);
        long long v49 = v88;
        uint64_t v50 = v90;
        uint64_t v81 = v89;
        uint64_t v51 = v91;
        uint64_t v52 = v92;
        uint64_t v54 = v93;
        uint64_t v53 = v94;
        uint64_t v55 = v95;
        uint64_t v79 = v96;
        uint64_t v56 = v97;
        uint64_t v80 = v98;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v88 = v49;
        uint64_t v89 = v81;
        uint64_t v90 = v50;
        uint64_t v91 = v51;
        uint64_t v92 = v52;
        uint64_t v93 = v54;
        uint64_t v94 = v53;
        uint64_t v95 = v55;
        uint64_t v96 = v79;
        uint64_t v97 = v56;
        uint64_t v57 = *(void *)&v84[qword_10078DEB8];
        if (v57
          && (char v58 = *(uint64_t (**)(uint64_t))(v57 + 16),
              uint64_t v59 = swift_retain(),
              char v60 = v58(v59),
              swift_release(),
              (v60 & 1) != 0))
        {
          uint64_t v61 = swift_allocObject();
          *(void *)(v61 + 16) = v84;
          *(void *)(v61 + 24) = v15;
          unint64_t v62 = v84;
          swift_retain();
          uint64_t v63 = sub_10013C090;
        }
        else
        {
          uint64_t v63 = 0;
          uint64_t v61 = 0;
        }
        uint64_t v64 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v65 = (uint64_t)&v84[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v84[qword_10078DEA8], (uint64_t)v85);
        uint64_t v66 = v86;
        uint64_t v67 = v87;
        sub_100038D28(v85, v86);
        uint64_t v68 = *(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v67 + 32);
        swift_retain();
        v68(&v88, sub_10013C068, v64, v63, v61, sub_10013C070, v15, v66, v67);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v85);
        uint64_t v69 = *(void *)(v15 + 16);
        uint64_t v70 = *(void *)(v15 + 24);
        uint64_t v71 = *(void *)(v15 + 32);
        char v72 = *(unsigned char *)(v15 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100129688(v80, v69, v70, v71, v72);
        unint64_t v11 = v84;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v65, (uint64_t)v85);
        uint64_t v73 = v86;
        uint64_t v74 = v87;
        sub_100038D28(v85, v86);
        (*(void (**)(uint64_t, uint64_t))(v74 + 24))(v73, v74);
        swift_release();
        sub_1000499C4((uint64_t)v63);
        swift_release();
        unint64_t v75 = (long long *)v85;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v37 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  return swift_release();
}

uint64_t sub_10013A560(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t))
{
  uint64_t v7 = (char *)a5;
  uint64_t v76 = qword_10078DEE0;
  uint64_t v10 = *(void *)(a5 + qword_10078DEE0);
  if (v10)
  {
    uint64_t v11 = *(void *)(a5 + qword_10078DEE0);
    if (a3) {
      goto LABEL_3;
    }
LABEL_10:
    uint64_t v20 = swift_retain();
    a6(v20);
    if (!v10) {
      goto LABEL_11;
    }
    return swift_release();
  }
  uint64_t v11 = sub_100127C10(a5, a1, a2, sub_100089354, &qword_10078E2E0, (uint64_t (*)(void *))sub_100425314);
  if (!a3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = (char **)(v11 + 64);
  swift_beginAccess();
  uint64_t v14 = *(char **)(v11 + 64);
  swift_retain();
  sub_10006C140(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v11 + 64) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = sub_10056FF08(0, *((void *)v14 + 2) + 1, 1, v14);
    *uint64_t v13 = v14;
  }
  unint64_t v17 = *((void *)v14 + 2);
  unint64_t v16 = *((void *)v14 + 3);
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = sub_10056FF08((char *)(v16 > 1), v17 + 1, 1, v14);
    *uint64_t v13 = v14;
  }
  *((void *)v14 + 2) = v17 + 1;
  unint64_t v18 = &v14[16 * v17];
  *((void *)v18 + 4) = sub_1001431B0;
  *((void *)v18 + 5) = v12;
  uint64_t v19 = swift_endAccess();
  a6(v19);
  if (!v10)
  {
LABEL_11:
    if (*(unsigned char *)(v11 + 72))
    {
      swift_release();
LABEL_27:
      *(void *)&v7[v76] = 0;
      return swift_release();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(v11 + 80) + 16) && !*(void *)(*(void *)(v11 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v11 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&v7[qword_10078DEA8], (uint64_t)&v80);
        uint64_t v67 = v83;
        uint64_t v68 = v84;
        sub_100038D28(&v80, v83);
        (*(void (**)(uint64_t, uint64_t))(v68 + 24))(v67, v68);
        swift_release();
        uint64_t v65 = &v80;
LABEL_26:
        sub_100038CD8((uint64_t)v65);
        goto LABEL_27;
      }
    }
    uint64_t v21 = *(void *)(v11 + 48);
    uint64_t v22 = *(void *)(v11 + 56);
    uint64_t v23 = (uint64_t *)&v7[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_100410230(v21, v24))
    {
      char v26 = sub_100410230(v22, v25);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = swift_bridgeObjectRelease();
      if (v26)
      {
LABEL_21:
        __chkstk_darwin(v27);
        uint64_t v28 = swift_beginAccess();
        __chkstk_darwin(v28);
        sub_10003B754(&qword_100788D88);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v29 = (void *)sub_100089354();
        uint64_t v31 = v30;
        uint64_t v33 = v32;
        char v35 = v34;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v37 = _typeName(_:qualified:)();
        sub_100117258(v29, v31, v33, v35 & 1, v37, v38, &v80);
        uint64_t v39 = v81;
        uint64_t v75 = v80;
        uint64_t v40 = v83;
        uint64_t v74 = v82;
        uint64_t v42 = v84;
        uint64_t v41 = v85;
        char v72 = v7;
        uint64_t v44 = v86;
        uint64_t v43 = v87;
        uint64_t v45 = v88;
        uint64_t v71 = v89;
        uint64_t v46 = v90;
        uint64_t v73 = v91;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v80 = v75;
        uint64_t v81 = v39;
        uint64_t v82 = v74;
        uint64_t v83 = v40;
        uint64_t v84 = v42;
        uint64_t v85 = v41;
        uint64_t v86 = v44;
        uint64_t v87 = v43;
        uint64_t v7 = v72;
        uint64_t v88 = v45;
        uint64_t v89 = v71;
        uint64_t v90 = v46;
        uint64_t v47 = *(void *)&v72[qword_10078DEB8];
        if (v47
          && (uint64_t v48 = *(uint64_t (**)(uint64_t))(v47 + 16),
              uint64_t v49 = swift_retain(),
              char v50 = v48(v49),
              swift_release(),
              (v50 & 1) != 0))
        {
          uint64_t v51 = swift_allocObject();
          *(void *)(v51 + 16) = v72;
          *(void *)(v51 + 24) = v11;
          uint64_t v52 = v51;
          uint64_t v53 = v72;
          swift_retain();
          uint64_t v54 = sub_10013C090;
        }
        else
        {
          uint64_t v54 = 0;
          uint64_t v52 = 0;
        }
        uint64_t v55 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v70 = (uint64_t)&v72[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v72[qword_10078DEA8], (uint64_t)v77);
        uint64_t v56 = v78;
        uint64_t v57 = v79;
        sub_100038D28(v77, v78);
        char v58 = *(void (**)(uint64_t *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v57 + 32);
        swift_retain();
        uint64_t v69 = (uint64_t)v54;
        v58(&v80, sub_10013C068, v55, v54, v52, sub_10013C070, v11, v56, v57);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v77);
        uint64_t v59 = *(void *)(v11 + 16);
        uint64_t v60 = *(void *)(v11 + 24);
        uint64_t v61 = *(void *)(v11 + 32);
        char v62 = *(unsigned char *)(v11 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100129688(v73, v59, v60, v61, v62);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v70, (uint64_t)v77);
        uint64_t v63 = v78;
        uint64_t v64 = v79;
        sub_100038D28(v77, v78);
        (*(void (**)(uint64_t, uint64_t))(v64 + 24))(v63, v64);
        swift_release();
        sub_1000499C4(v69);
        swift_release();
        uint64_t v65 = v77;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v27 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  return swift_release();
}

uint64_t sub_10013AD8C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v86 = qword_10078DEE0;
  uint64_t v14 = *(void *)(a5 + qword_10078DEE0);
  if (v14) {
    uint64_t v15 = *(void *)(a5 + qword_10078DEE0);
  }
  else {
    uint64_t v15 = sub_100127C10(a5, a1, a2, sub_100089354, &qword_10078E2E0, (uint64_t (*)(void *))sub_100425314);
  }
  uint64_t v87 = (char *)a5;
  if (a3)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    unint64_t v17 = (char **)(v15 + 64);
    swift_beginAccess();
    unint64_t v18 = *(char **)(v15 + 64);
    swift_retain();
    sub_10006C140(a3);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v15 + 64) = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v18 = sub_10056FF08(0, *((void *)v18 + 2) + 1, 1, v18);
      *unint64_t v17 = v18;
    }
    unint64_t v21 = *((void *)v18 + 2);
    unint64_t v20 = *((void *)v18 + 3);
    if (v21 >= v20 >> 1)
    {
      unint64_t v18 = sub_10056FF08((char *)(v20 > 1), v21 + 1, 1, v18);
      *unint64_t v17 = v18;
    }
    *((void *)v18 + 2) = v21 + 1;
    uint64_t v22 = &v18[16 * v21];
    *((void *)v22 + 4) = sub_1001431B0;
    *((void *)v22 + 5) = v16;
    swift_endAccess();
  }
  else
  {
    swift_retain();
  }
  *(void *)&long long v91 = sub_100089354();
  *((void *)&v91 + 1) = v23;
  uint64_t v92 = v24;
  LOBYTE(v93) = v25 & 1;
  uint64_t v26 = qword_10078DED8;
  *(unsigned char *)(a6 + qword_10078DED8) = 1;
  unint64_t v27 = sub_100119E70(a7, a8);
  sub_1003CB6D0(1, v27, 2, 0, 1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = v92;
  char v29 = v93;
  uint64_t v30 = a6 + qword_10078DED0;
  uint64_t v31 = *(void *)(a6 + qword_10078DED0);
  *(_OWORD *)uint64_t v30 = v91;
  *(void *)(v30 + 16) = v28;
  *(unsigned char *)(v30 + 24) = v29;
  sub_1000349CC(v31);
  *(unsigned char *)(a6 + v26) = 0;
  if (!v14)
  {
    if (*(unsigned char *)(v15 + 72))
    {
      swift_release();
      uint64_t v32 = v87;
LABEL_28:
      *(void *)&v32[v86] = 0;
      return swift_release();
    }
    swift_beginAccess();
    uint64_t v32 = v87;
    if (!*(void *)(*(void *)(v15 + 80) + 16) && !*(void *)(*(void *)(v15 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v15 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&v87[qword_10078DEA8], (uint64_t)&v91);
        uint64_t v80 = v93;
        uint64_t v81 = v94;
        sub_100038D28(&v91, v93);
        (*(void (**)(uint64_t, uint64_t))(v81 + 24))(v80, v81);
        swift_release();
        uint64_t v78 = &v91;
LABEL_27:
        sub_100038CD8((uint64_t)v78);
        goto LABEL_28;
      }
    }
    uint64_t v33 = *(void *)(v15 + 48);
    uint64_t v34 = *(void *)(v15 + 56);
    char v35 = (uint64_t *)&v87[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_100410230(v33, v37))
    {
      char v38 = sub_100410230(v34, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = swift_bridgeObjectRelease();
      if (v38)
      {
LABEL_22:
        __chkstk_darwin(v39);
        uint64_t v40 = swift_beginAccess();
        __chkstk_darwin(v40);
        sub_10003B754(&qword_100788D88);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v41 = (void *)sub_100089354();
        uint64_t v43 = v42;
        uint64_t v45 = v44;
        char v47 = v46;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v49 = _typeName(_:qualified:)();
        sub_100117258(v41, v43, v45, v47 & 1, v49, v50, &v91);
        uint64_t v51 = *((void *)&v91 + 1);
        uint64_t v85 = v91;
        uint64_t v53 = v92;
        uint64_t v52 = v93;
        uint64_t v54 = v94;
        uint64_t v55 = v95;
        uint64_t v56 = v96;
        uint64_t v57 = v97;
        uint64_t v58 = v98;
        uint64_t v83 = v99;
        uint64_t v59 = v100;
        uint64_t v84 = v101;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v91 = v85;
        *((void *)&v91 + 1) = v51;
        uint64_t v92 = v53;
        uint64_t v93 = v52;
        uint64_t v94 = v54;
        uint64_t v95 = v55;
        uint64_t v96 = v56;
        uint64_t v97 = v57;
        uint64_t v98 = v58;
        uint64_t v99 = v83;
        uint64_t v100 = v59;
        uint64_t v60 = *(void *)&v87[qword_10078DEB8];
        if (v60
          && (uint64_t v61 = *(uint64_t (**)(uint64_t))(v60 + 16),
              uint64_t v62 = swift_retain(),
              char v63 = v61(v62),
              swift_release(),
              (v63 & 1) != 0))
        {
          uint64_t v64 = swift_allocObject();
          *(void *)(v64 + 16) = v87;
          *(void *)(v64 + 24) = v15;
          uint64_t v65 = v64;
          uint64_t v66 = v87;
          swift_retain();
          uint64_t v67 = sub_10013C090;
        }
        else
        {
          uint64_t v67 = 0;
          uint64_t v65 = 0;
        }
        uint64_t v68 = swift_allocObject();
        uint64_t v32 = v87;
        swift_unknownObjectWeakInit();
        uint64_t v82 = (uint64_t)&v87[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v87[qword_10078DEA8], (uint64_t)v88);
        uint64_t v69 = v89;
        uint64_t v70 = v90;
        sub_100038D28(v88, v89);
        uint64_t v71 = *(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v70 + 32);
        swift_retain();
        v71(&v91, sub_10013C068, v68, v67, v65, sub_10013C070, v15, v69, v70);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v88);
        uint64_t v72 = *(void *)(v15 + 16);
        uint64_t v73 = *(void *)(v15 + 24);
        uint64_t v74 = *(void *)(v15 + 32);
        char v75 = *(unsigned char *)(v15 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_100129688(v84, v72, v73, v74, v75);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v82, (uint64_t)v88);
        uint64_t v76 = v89;
        uint64_t v77 = v90;
        sub_100038D28(v88, v89);
        (*(void (**)(uint64_t, uint64_t))(v77 + 24))(v76, v77);
        swift_release();
        sub_1000499C4((uint64_t)v67);
        swift_release();
        uint64_t v78 = (long long *)v88;
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v39 = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  return swift_release();
}

uint64_t sub_10013B674(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, char *a5, uint64_t (*a6)(uint64_t), uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v82 = qword_10078DEE0;
  uint64_t v14 = *(void *)&a5[qword_10078DEE0];
  if (!v14)
  {
    swift_bridgeObjectRetain();
    id v27 = a9;
    uint64_t v16 = sub_100127C10((uint64_t)a5, a1, a2, sub_100089354, &qword_10078E2E0, (uint64_t (*)(void *))sub_100425314);
    if (a3) {
      goto LABEL_3;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  id v15 = a9;
  uint64_t v16 = v14;
  if (!a3) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v83 = a8;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a3;
  *(void *)(v17 + 24) = a4;
  unint64_t v18 = (char **)(v16 + 64);
  swift_beginAccess();
  uint64_t v19 = *(char **)(v16 + 64);
  swift_retain();
  sub_10006C140(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v16 + 64) = v19;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v19 = sub_10056FF08(0, *((void *)v19 + 2) + 1, 1, v19);
    *unint64_t v18 = v19;
  }
  unint64_t v22 = *((void *)v19 + 2);
  unint64_t v21 = *((void *)v19 + 3);
  if (v22 >= v21 >> 1)
  {
    uint64_t v19 = sub_10056FF08((char *)(v21 > 1), v22 + 1, 1, v19);
    *unint64_t v18 = v19;
  }
  *((void *)v19 + 2) = v22 + 1;
  uint64_t v23 = &v19[16 * v22];
  *((void *)v23 + 4) = sub_10013C0A8;
  *((void *)v23 + 5) = v17;
  swift_endAccess();
  a8 = v83;
LABEL_10:
  swift_bridgeObjectRetain();
  id v28 = a9;
  sub_1003DFE60(a6, a7, a8, (uint64_t)v28, a10);
  swift_bridgeObjectRelease();

  if (!v14)
  {
    if (*(unsigned char *)(v16 + 72))
    {
      swift_release();
      char v29 = a5;
LABEL_27:
      *(void *)&v29[v82] = 0;
      goto LABEL_28;
    }
    swift_beginAccess();
    char v29 = a5;
    if (!*(void *)(*(void *)(v16 + 80) + 16) && !*(void *)(*(void *)(v16 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v16 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&a5[qword_10078DEA8], (uint64_t)&v90);
        uint64_t v75 = v93;
        uint64_t v76 = v94;
        sub_100038D28(&v90, v93);
        (*(void (**)(uint64_t, uint64_t))(v76 + 24))(v75, v76);
        swift_release();
        sub_100038CD8((uint64_t)&v90);
        goto LABEL_27;
      }
    }
    uint64_t v30 = *(void *)(v16 + 48);
    uint64_t v31 = *(void *)(v16 + 56);
    uint64_t v86 = v16;
    uint64_t v32 = (uint64_t *)&a5[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v77 = v28;
    if (sub_100410230(v30, v34))
    {
      char v35 = sub_100410230(v31, v33);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v36 = swift_bridgeObjectRelease();
      if (v35) {
        goto LABEL_21;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v36 = swift_bridgeObjectRelease();
LABEL_21:
    __chkstk_darwin(v36);
    uint64_t v37 = swift_beginAccess();
    __chkstk_darwin(v37);
    sub_10003B754(&qword_100788D88);
    Set.removeAll(where:)();
    swift_endAccess();
    char v38 = (void *)sub_100089354();
    uint64_t v40 = v39;
    uint64_t v42 = v41;
    char v44 = v43;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    swift_getObjectType();

    uint64_t v46 = _typeName(_:qualified:)();
    sub_100117258(v38, v40, v42, v44 & 1, v46, v47, &v90);
    uint64_t v48 = v90;
    uint64_t v49 = v91;
    uint64_t v50 = v93;
    uint64_t v81 = v92;
    uint64_t v51 = v94;
    uint64_t v52 = v95;
    uint64_t v54 = v96;
    uint64_t v53 = v97;
    uint64_t v55 = v98;
    uint64_t v79 = v99;
    uint64_t v56 = v100;
    uint64_t v80 = v101;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v90 = v48;
    uint64_t v91 = v49;
    uint64_t v92 = v81;
    uint64_t v93 = v50;
    uint64_t v94 = v51;
    uint64_t v95 = v52;
    uint64_t v96 = v54;
    uint64_t v97 = v53;
    uint64_t v98 = v55;
    uint64_t v99 = v79;
    uint64_t v100 = v56;
    uint64_t v57 = *(void *)&a5[qword_10078DEB8];
    if (v57)
    {
      uint64_t v58 = *(uint64_t (**)(uint64_t))(v57 + 16);
      uint64_t v59 = swift_retain();
      char v60 = v58(v59);
      swift_release();
      id v28 = v77;
      if (v60)
      {
        uint64_t v61 = swift_allocObject();
        *(void *)(v61 + 16) = a5;
        *(void *)(v61 + 24) = v86;
        uint64_t v62 = a5;
        swift_retain();
        char v63 = sub_10013C090;
      }
      else
      {
        char v63 = 0;
        uint64_t v61 = 0;
      }
    }
    else
    {
      char v63 = 0;
      uint64_t v61 = 0;
      id v28 = v77;
    }
    uint64_t v64 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v78 = (uint64_t)&a5[qword_10078DEA8];
    sub_1000145EC((uint64_t)&a5[qword_10078DEA8], (uint64_t)v87);
    uint64_t v65 = v88;
    uint64_t v66 = v89;
    sub_100038D28(v87, v88);
    uint64_t v67 = *(void (**)(uint64_t *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v66 + 32);
    swift_retain();
    v67(&v90, sub_10013C068, v64, v63, v61, sub_10013C070, v86, v65, v66);
    char v29 = a5;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038CD8((uint64_t)v87);
    uint64_t v68 = *(void *)(v86 + 16);
    uint64_t v69 = *(void *)(v86 + 24);
    uint64_t v70 = *(void *)(v86 + 32);
    char v71 = *(unsigned char *)(v86 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100129688(v80, v68, v69, v70, v71);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000145EC(v78, (uint64_t)v87);
    uint64_t v72 = v88;
    uint64_t v73 = v89;
    sub_100038D28(v87, v88);
    (*(void (**)(uint64_t, uint64_t))(v73 + 24))(v72, v73);
    swift_release();
    sub_1000499C4((uint64_t)v63);
    swift_release();
    sub_100038CD8((uint64_t)v87);
    goto LABEL_27;
  }
LABEL_28:
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10013BFA0(uint64_t a1)
{
  return sub_10012800C(a1, *(void *)(v1 + 16), (void (*)(void))sub_100089354, (void (*)(uint64_t))sub_10035C64C, sub_1000FFDA8) & 1;
}

uint64_t sub_10013BFFC()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_10013C030()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10013C068()
{
  return sub_100128934();
}

uint64_t sub_10013C070(char a1)
{
  return sub_10012922C(a1, v1);
}

uint64_t sub_10013C090(uint64_t a1)
{
  return sub_10013FCD0(a1, (void (*)(uint64_t, uint64_t, uint64_t))sub_10013EF80);
}

uint64_t sub_10013C0A8(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_10013C0D4(uint64_t a1, uint64_t a2)
{
  uint64_t v25 = a2;
  uint64_t v4 = swift_isaMask & *v2;
  uint64_t v5 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100032E7C();
  uint64_t v16 = sub_1000EBBA0(a1, v12, v14, v15, v13 & 1, *(void *)(v4 + 80), *(void *)(v4 + 88));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16)
  {
    if (*(unsigned char *)(v16 + 72) == 2)
    {
      sub_100032E7C();
      sub_1000EC2F4(v16, v17 & 1, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
      {
        sub_10003B6F8((uint64_t)v7, &qword_10078E8F0);
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v18 = type metadata accessor for Logger();
        sub_100018BF8(v18, (uint64_t)qword_10078DE60);
        uint64_t v19 = Logger.logObject.getter();
        os_log_type_t v20 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v19, v20))
        {
          unint64_t v21 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v21 = 0;
          _os_log_impl((void *)&_mh_execute_header, v19, v20, "Unable to find index path", v21, 2u);
          swift_slowDealloc();
          swift_release();
        }
        else
        {

          swift_release();
        }
      }
      else
      {
        uint64_t v22 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
        __chkstk_darwin(v22);
        *(&v24 - 4) = v16;
        *(&v24 - 3) = (uint64_t)v2;
        uint64_t v23 = v25;
        *(&v24 - 2) = (uint64_t)v11;
        *(&v24 - 1) = v23;
        sub_10011B0C0((void (*)(uint64_t))sub_10013FF9C, (uint64_t)(&v24 - 6), 0, 0, 0, 0);
        swift_release();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_10013C48C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v5 = swift_isaMask & *v2;
  uint64_t v6 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v36 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100032E7C();
  uint64_t v12 = *(void *)(v5 + 80);
  uint64_t v13 = *(void *)(v5 + 88);
  uint64_t v34 = a1;
  uint64_t v17 = sub_1000EBBA0(a1, v11, v15, v16, v14 & 1, v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v17)
  {
    if (*(unsigned char *)(v17 + 72) == 1)
    {
      sub_100032E7C();
      sub_1000EC2F4(v17, v18 & 1, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v19 = v9;
      os_log_type_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      uint64_t v21 = v37;
      if (v20(v8, 1, v37) == 1)
      {
        sub_10003B6F8((uint64_t)v8, &qword_10078E8F0);
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v22 = type metadata accessor for Logger();
        sub_100018BF8(v22, (uint64_t)qword_10078DE60);
        uint64_t v23 = Logger.logObject.getter();
        os_log_type_t v24 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v23, v24))
        {
          uint64_t v25 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v25 = 0;
          _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unable to find index path", v25, 2u);
          swift_slowDealloc();
          swift_release();
        }
        else
        {

          swift_release();
        }
      }
      else
      {
        uint64_t v26 = v36;
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v36, v8, v21);
        swift_beginAccess();
        uint64_t v38 = *(void *)(v17 + 64);
        type metadata accessor for TTRITreeViewNode();
        type metadata accessor for Array();
        swift_getWitnessTable();
        uint64_t v27 = Collection.isEmpty.getter();
        if ((v27 & 1) == 0)
        {
          if (qword_1007852B8 != -1) {
            swift_once();
          }
          uint64_t v28 = type metadata accessor for Logger();
          sub_100018BF8(v28, (uint64_t)qword_10078DE60);
          char v29 = Logger.logObject.getter();
          os_log_type_t v30 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v29, v30))
          {
            uint64_t v31 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v31 = 0;
            _os_log_impl((void *)&_mh_execute_header, v29, v30, "Collapsed node should have no child nodes", v31, 2u);
            swift_slowDealloc();
          }
        }
        __chkstk_darwin(v27);
        *(&v34 - 4) = (uint64_t)v3;
        *(&v34 - 3) = v17;
        uint64_t v32 = v35;
        *(&v34 - 2) = (uint64_t)v26;
        *(&v34 - 1) = v32;
        sub_10011B0C0((void (*)(uint64_t))sub_10013FFB8, (uint64_t)(&v34 - 6), 0, 0, 0, 0);
        if (sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20))
        {
          uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
          sub_1000BCEE0();
          swift_release();
          swift_release();
        }
        else
        {
          swift_release();
        }
        (*(void (**)(char *, uint64_t))(v19 + 8))(v26, v21);
      }
    }
    else
    {
      swift_release();
    }
  }
}

uint64_t sub_10013C9E8(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v86 = qword_10078DEE0;
  uint64_t v14 = *(void *)(a5 + qword_10078DEE0);
  if (v14) {
    uint64_t v15 = *(void *)(a5 + qword_10078DEE0);
  }
  else {
    uint64_t v15 = sub_100127C10(a5, a1, a2, sub_1000890D8, (uint64_t *)&unk_10078E390, (uint64_t (*)(void *))sub_10042521C);
  }
  uint64_t v87 = (char *)a5;
  if (a3)
  {
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a3;
    *(void *)(v16 + 24) = a4;
    uint64_t v17 = (char **)(v15 + 64);
    swift_beginAccess();
    char v18 = *(char **)(v15 + 64);
    swift_retain();
    sub_10006C140(a3);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v15 + 64) = v18;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      char v18 = sub_10056FF08(0, *((void *)v18 + 2) + 1, 1, v18);
      *uint64_t v17 = v18;
    }
    unint64_t v21 = *((void *)v18 + 2);
    unint64_t v20 = *((void *)v18 + 3);
    if (v21 >= v20 >> 1)
    {
      char v18 = sub_10056FF08((char *)(v20 > 1), v21 + 1, 1, v18);
      *uint64_t v17 = v18;
    }
    *((void *)v18 + 2) = v21 + 1;
    uint64_t v22 = &v18[16 * v21];
    *((void *)v22 + 4) = sub_1001431B0;
    *((void *)v22 + 5) = v16;
    swift_endAccess();
  }
  else
  {
    swift_retain();
  }
  *(void *)&long long v91 = sub_1000890D8();
  *((void *)&v91 + 1) = v23;
  uint64_t v92 = v24;
  LOBYTE(v93) = v25 & 1;
  uint64_t v26 = qword_10078DED8;
  *(unsigned char *)(a6 + qword_10078DED8) = 1;
  unint64_t v27 = sub_100119CE0(a7, a8);
  sub_1003CB440(1, v27, 2, 0, 1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = v92;
  char v29 = v93;
  uint64_t v30 = a6 + qword_10078DED0;
  uint64_t v31 = *(void *)(a6 + qword_10078DED0);
  *(_OWORD *)uint64_t v30 = v91;
  *(void *)(v30 + 16) = v28;
  *(unsigned char *)(v30 + 24) = v29;
  sub_1000349CC(v31);
  *(unsigned char *)(a6 + v26) = 0;
  if (!v14)
  {
    if (*(unsigned char *)(v15 + 72))
    {
      swift_release();
      uint64_t v32 = v87;
LABEL_28:
      *(void *)&v32[v86] = 0;
      return swift_release();
    }
    swift_beginAccess();
    uint64_t v32 = v87;
    if (!*(void *)(*(void *)(v15 + 80) + 16) && !*(void *)(*(void *)(v15 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v15 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&v87[qword_10078DEA8], (uint64_t)&v91);
        uint64_t v80 = v93;
        uint64_t v81 = v94;
        sub_100038D28(&v91, v93);
        (*(void (**)(uint64_t, uint64_t))(v81 + 24))(v80, v81);
        swift_release();
        uint64_t v78 = &v91;
LABEL_27:
        sub_100038CD8((uint64_t)v78);
        goto LABEL_28;
      }
    }
    uint64_t v33 = *(void *)(v15 + 48);
    uint64_t v34 = *(void *)(v15 + 56);
    uint64_t v35 = (uint64_t *)&v87[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v37 = *v35;
    uint64_t v36 = v35[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10040FC28(v33, v37))
    {
      char v38 = sub_10040FC28(v34, v36);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = swift_bridgeObjectRelease();
      if (v38)
      {
LABEL_22:
        __chkstk_darwin(v39);
        uint64_t v40 = swift_beginAccess();
        __chkstk_darwin(v40);
        sub_10003B754((uint64_t *)&unk_10078EED0);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v41 = (void *)sub_1000890D8();
        char v43 = v42;
        uint64_t v45 = v44;
        char v47 = v46;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v49 = _typeName(_:qualified:)();
        sub_1001165A4(v41, v43, v45, v47 & 1, v49, v50, &v91);
        uint64_t v51 = *((void *)&v91 + 1);
        uint64_t v85 = v91;
        uint64_t v53 = v92;
        uint64_t v52 = v93;
        uint64_t v54 = v94;
        uint64_t v55 = v95;
        uint64_t v56 = v96;
        uint64_t v57 = v97;
        uint64_t v58 = v98;
        uint64_t v83 = v99;
        uint64_t v59 = v100;
        uint64_t v84 = v101;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)&long long v91 = v85;
        *((void *)&v91 + 1) = v51;
        uint64_t v92 = v53;
        uint64_t v93 = v52;
        uint64_t v94 = v54;
        uint64_t v95 = v55;
        uint64_t v96 = v56;
        uint64_t v97 = v57;
        uint64_t v98 = v58;
        uint64_t v99 = v83;
        uint64_t v100 = v59;
        uint64_t v60 = *(void *)&v87[qword_10078DEB8];
        if (v60
          && (uint64_t v61 = *(uint64_t (**)(uint64_t))(v60 + 16),
              uint64_t v62 = swift_retain(),
              char v63 = v61(v62),
              swift_release(),
              (v63 & 1) != 0))
        {
          uint64_t v64 = swift_allocObject();
          *(void *)(v64 + 16) = v87;
          *(void *)(v64 + 24) = v15;
          uint64_t v65 = v64;
          uint64_t v66 = v87;
          swift_retain();
          uint64_t v67 = sub_100140104;
        }
        else
        {
          uint64_t v67 = 0;
          uint64_t v65 = 0;
        }
        uint64_t v68 = swift_allocObject();
        uint64_t v32 = v87;
        swift_unknownObjectWeakInit();
        uint64_t v82 = (uint64_t)&v87[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v87[qword_10078DEA8], (uint64_t)v88);
        uint64_t v69 = v89;
        uint64_t v70 = v90;
        sub_100038D28(v88, v89);
        char v71 = *(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v70 + 32);
        swift_retain();
        v71(&v91, sub_1001400F8, v68, v67, v65, sub_10013C070, v15, v69, v70);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v88);
        uint64_t v72 = *(void *)(v15 + 16);
        uint64_t v73 = *(void *)(v15 + 24);
        uint64_t v74 = *(void *)(v15 + 32);
        char v75 = *(unsigned char *)(v15 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001292D0(v84, v72, v73, v74, v75);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v82, (uint64_t)v88);
        uint64_t v76 = v89;
        uint64_t v77 = v90;
        sub_100038D28(v88, v89);
        (*(void (**)(uint64_t, uint64_t))(v77 + 24))(v76, v77);
        swift_release();
        sub_1000499C4((uint64_t)v67);
        swift_release();
        uint64_t v78 = (long long *)v88;
        goto LABEL_27;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v39 = swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  return swift_release();
}

uint64_t sub_10013D2D0(void (*a1)(uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11 = (char *)a5;
  uint64_t v82 = qword_10078DEE0;
  uint64_t v14 = *(void *)(a5 + qword_10078DEE0);
  if (!v14)
  {
    uint64_t v15 = sub_100127C10(a5, a1, a2, sub_1000890D8, (uint64_t *)&unk_10078E390, (uint64_t (*)(void *))sub_10042521C);
    if (a3) {
      goto LABEL_3;
    }
LABEL_9:
    swift_retain();
    goto LABEL_10;
  }
  uint64_t v15 = *(void *)(a5 + qword_10078DEE0);
  if (!a3) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v83 = v11;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  uint64_t v17 = (char **)(v15 + 64);
  swift_beginAccess();
  char v18 = *(char **)(v15 + 64);
  swift_retain();
  sub_10006C140(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v15 + 64) = v18;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    char v18 = sub_10056FF08(0, *((void *)v18 + 2) + 1, 1, v18);
    *uint64_t v17 = v18;
  }
  unint64_t v21 = *((void *)v18 + 2);
  unint64_t v20 = *((void *)v18 + 3);
  if (v21 >= v20 >> 1)
  {
    char v18 = sub_10056FF08((char *)(v20 > 1), v21 + 1, 1, v18);
    *uint64_t v17 = v18;
  }
  *((void *)v18 + 2) = v21 + 1;
  uint64_t v22 = &v18[16 * v21];
  *((void *)v22 + 4) = sub_1001431B0;
  *((void *)v22 + 5) = v16;
  swift_endAccess();
  uint64_t v11 = v83;
LABEL_10:
  *(void *)&long long v88 = sub_1000890D8();
  *((void *)&v88 + 1) = v23;
  uint64_t v89 = v24;
  LOBYTE(v90) = v25 & 1;
  uint64_t v26 = qword_10078DED8;
  *(unsigned char *)(a6 + qword_10078DED8) = 1;
  sub_10011DF54((uint64_t)&v88, a7, a6, v15, a8);
  uint64_t v27 = v89;
  char v28 = v90;
  uint64_t v29 = a6 + qword_10078DED0;
  uint64_t v30 = *(void *)(a6 + qword_10078DED0);
  *(_OWORD *)uint64_t v29 = v88;
  *(void *)(v29 + 16) = v27;
  *(unsigned char *)(v29 + 24) = v28;
  sub_1000349CC(v30);
  *(unsigned char *)(a6 + v26) = 0;
  if (!v14)
  {
    if (*(unsigned char *)(v15 + 72))
    {
      swift_release();
LABEL_27:
      *(void *)&v11[v82] = 0;
      return swift_release();
    }
    swift_beginAccess();
    if (!*(void *)(*(void *)(v15 + 80) + 16) && !*(void *)(*(void *)(v15 + 88) + 16))
    {
      swift_beginAccess();
      if (!*(void *)(*(void *)(v15 + 96) + 16))
      {
        sub_1000145EC((uint64_t)&v11[qword_10078DEA8], (uint64_t)&v88);
        uint64_t v77 = v90;
        uint64_t v78 = v91;
        sub_100038D28(&v88, v90);
        (*(void (**)(uint64_t, uint64_t))(v78 + 24))(v77, v78);
        swift_release();
        char v75 = &v88;
LABEL_26:
        sub_100038CD8((uint64_t)v75);
        goto LABEL_27;
      }
    }
    uint64_t v31 = *(void *)(v15 + 48);
    uint64_t v32 = *(void *)(v15 + 56);
    uint64_t v84 = v11;
    uint64_t v33 = (uint64_t *)&v11[qword_10078DEE8];
    swift_beginAccess();
    uint64_t v35 = *v33;
    uint64_t v34 = v33[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_10040FC28(v31, v35))
    {
      char v36 = sub_10040FC28(v32, v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_21:
        __chkstk_darwin(v37);
        uint64_t v38 = swift_beginAccess();
        __chkstk_darwin(v38);
        sub_10003B754((uint64_t *)&unk_10078EED0);
        Set.removeAll(where:)();
        swift_endAccess();
        uint64_t v39 = (void *)sub_1000890D8();
        uint64_t v41 = v40;
        char v43 = v42;
        char v45 = v44;
        uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        swift_getObjectType();

        uint64_t v47 = _typeName(_:qualified:)();
        sub_1001165A4(v39, v41, v43, v45 & 1, v47, v48, &v88);
        long long v49 = v88;
        uint64_t v50 = v90;
        uint64_t v81 = v89;
        uint64_t v51 = v91;
        uint64_t v52 = v92;
        uint64_t v54 = v93;
        uint64_t v53 = v94;
        uint64_t v55 = v95;
        uint64_t v79 = v96;
        uint64_t v56 = v97;
        uint64_t v80 = v98;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v88 = v49;
        uint64_t v89 = v81;
        uint64_t v90 = v50;
        uint64_t v91 = v51;
        uint64_t v92 = v52;
        uint64_t v93 = v54;
        uint64_t v94 = v53;
        uint64_t v95 = v55;
        uint64_t v96 = v79;
        uint64_t v97 = v56;
        uint64_t v57 = *(void *)&v84[qword_10078DEB8];
        if (v57
          && (uint64_t v58 = *(uint64_t (**)(uint64_t))(v57 + 16),
              uint64_t v59 = swift_retain(),
              char v60 = v58(v59),
              swift_release(),
              (v60 & 1) != 0))
        {
          uint64_t v61 = swift_allocObject();
          *(void *)(v61 + 16) = v84;
          *(void *)(v61 + 24) = v15;
          uint64_t v62 = v84;
          swift_retain();
          char v63 = sub_100140104;
        }
        else
        {
          char v63 = 0;
          uint64_t v61 = 0;
        }
        uint64_t v64 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v65 = (uint64_t)&v84[qword_10078DEA8];
        sub_1000145EC((uint64_t)&v84[qword_10078DEA8], (uint64_t)v85);
        uint64_t v66 = v86;
        uint64_t v67 = v87;
        sub_100038D28(v85, v86);
        uint64_t v68 = *(void (**)(long long *, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(char), uint64_t, uint64_t, uint64_t))(v67 + 32);
        swift_retain();
        v68(&v88, sub_1001400F8, v64, v63, v61, sub_10013C070, v15, v66, v67);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v85);
        uint64_t v69 = *(void *)(v15 + 16);
        uint64_t v70 = *(void *)(v15 + 24);
        uint64_t v71 = *(void *)(v15 + 32);
        char v72 = *(unsigned char *)(v15 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1001292D0(v80, v69, v70, v71, v72);
        uint64_t v11 = v84;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1000145EC(v65, (uint64_t)v85);
        uint64_t v73 = v86;
        uint64_t v74 = v87;
        sub_100038D28(v85, v86);
        (*(void (**)(uint64_t, uint64_t))(v74 + 24))(v73, v74);
        swift_release();
        sub_1000499C4((uint64_t)v63);
        swift_release();
        char v75 = (long long *)v85;
        goto LABEL_26;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
    swift_release();
    uint64_t v37 = swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  return swift_release();
}

uint64_t sub_10013DB78(uint64_t a1)
{
  uint64_t v2 = *(void *)((swift_isaMask & *v1) + 0x50);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v11 - v4;
  sub_100032E7C();
  uint64_t v6 = sub_10002F4A4();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v6) {
    return 0;
  }
  if (!sub_1000329D0(&qword_10078DEB0, (uint64_t (*)(uint64_t))sub_100032A20))
  {
    swift_release();
    return 0;
  }
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v8 = v6 + *(void *)(*(void *)v6 + 144);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v8, v2);
  uint64_t v9 = sub_1002ABD34();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v9;
}

uint64_t sub_10013DD98(uint64_t a1, uint64_t a2)
{
  uint64_t v11 = sub_1000329D0(&qword_10078DEB0, (uint64_t (*)(uint64_t))sub_100032A20);
  uint64_t v9 = v2;
  uint64_t v10 = a1;
  uint64_t v5 = type metadata accessor for TTRIAnyTreeViewDataSource();
  sub_100032AC4(a2, (uint64_t)&v11, v6, (void (*)(char *, char *))sub_100140964, (uint64_t)&v8, v5, (uint64_t)&type metadata for () + 8, (uint64_t)&type metadata for ());
  return swift_release();
}

uint64_t sub_10013DE74(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_100140888, (uint64_t)&v2);
}

void sub_10013DEB0()
{
  if (sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20))
  {
    id Strong = (id)swift_unknownObjectUnownedLoadStrong();
    sub_1000BD0FC();
    swift_release();
  }
}

uint64_t sub_10013DF44(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_100140828, (uint64_t)&v2);
}

uint64_t sub_10013DF80(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_1001407C8, (uint64_t)&v2);
}

uint64_t sub_10013DFBC(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_100140798, (uint64_t)&v2);
}

uint64_t sub_10013DFF8(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_100140658, (uint64_t)&v2);
}

uint64_t sub_10013E034(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_100140628, (uint64_t)&v2);
}

uint64_t sub_10013E070(uint64_t a1)
{
  uint64_t v8 = 1;
  uint64_t v9 = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  uint64_t v7 = v1;
  uint64_t v3 = type metadata accessor for TTRIAnyTreeViewDelegate();
  type metadata accessor for EditingStyle(0);
  sub_100032AC4(a1, (uint64_t)&v9, (uint64_t)&v8, (void (*)(char *, char *))sub_100140620, (uint64_t)&v6, v3, v4, (uint64_t)&v10);
  swift_release();
  return v10;
}

uint64_t sub_10013E15C(uint64_t a1, void (*a2)(char *, char *))
{
  uint64_t v10 = 0;
  uint64_t v11 = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  uint64_t v9 = v2;
  uint64_t v5 = type metadata accessor for TTRIAnyTreeViewDelegate();
  uint64_t v6 = sub_10003B754(&qword_10078E3C0);
  sub_100032AC4(a1, (uint64_t)&v11, (uint64_t)&v10, a2, (uint64_t)&v8, v5, v6, (uint64_t)&v12);
  swift_release();
  return v12;
}

uint64_t sub_10013E23C(uint64_t a1)
{
  uint64_t v8 = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  char v7 = 1;
  uint64_t v6 = v1;
  uint64_t v3 = type metadata accessor for TTRIAnyTreeViewDelegate();
  sub_100032AC4(a1, (uint64_t)&v8, (uint64_t)&v7, (void (*)(char *, char *))sub_100140590, (uint64_t)&v5, v3, (uint64_t)&type metadata for Bool, (uint64_t)&v9);
  swift_release();
  return v9;
}

uint64_t sub_10013E324(uint64_t a1)
{
  return sub_100124818(a1, (uint64_t)sub_100140560, (uint64_t)&v2);
}

uint64_t sub_10013E360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20);
  char v13 = 0;
  uint64_t v10 = v3;
  uint64_t v11 = a1;
  uint64_t v12 = a3;
  uint64_t v7 = type metadata accessor for TTRIAnyTreeViewDelegate();
  sub_100032AC4(a2, (uint64_t)&v14, (uint64_t)&v13, (void (*)(char *, char *))sub_100140524, (uint64_t)&v9, v7, (uint64_t)&type metadata for Bool, (uint64_t)&v15);
  swift_release();
  return v15;
}

uint64_t sub_10013E458(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[3] = a1;
  v4[4] = a3;
  return sub_100124818(a2, (uint64_t)sub_1001404E4, (uint64_t)v4);
}

void sub_10013E49C(uint64_t a1, uint64_t a2, void (*a3)(id, uint64_t, uint64_t))
{
  if (sub_1000329D0(&qword_10078DEC8, (uint64_t (*)(uint64_t))sub_100032A20))
  {
    id Strong = (id)swift_unknownObjectUnownedLoadStrong();
    a3(Strong, a1, a2);
    swift_release();
  }
}

uint64_t sub_10013E560(uint64_t a1, char a2, void (*a3)(char *, char *))
{
  uint64_t v12 = sub_10002F078(sub_10002F640);
  char v11 = a2;
  uint64_t v10 = v3;
  uint64_t v7 = type metadata accessor for TTRIAnyTreeViewCellSeparatorCustomizing();
  sub_10002F0EC(a1, (uint64_t)&v12, (uint64_t)&v11, a3, (uint64_t)&v9, v7, (uint64_t)&type metadata for Bool, (uint64_t)&v13);
  swift_release();
  return v13;
}

id sub_10013E63C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  v12[3] = swift_getObjectType();
  uint64_t v11 = a2;
  v12[0] = a1;
  uint64_t v10 = v3;
  swift_unknownObjectRetain();
  id v7 = sub_100127308((uint64_t)v12, a3, (uint64_t)&v9);
  sub_100038CD8((uint64_t)v12);
  return v7;
}

void sub_10013E6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v6 - 8);
  uint64_t v66 = (uint64_t)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unsigned __int8 v13 = (char *)v56 - v12;
  __chkstk_darwin(v14);
  uint64_t v70 = (uint64_t)v56 - v15;
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v16 - 8);
  uint64_t v68 = (uint64_t)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for IndexPath();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *(void *)(a2 + qword_10078DEB8);
  if (!v25) {
    return;
  }
  uint64_t v69 = a2;
  uint64_t v59 = v13;
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v25 + 16);
  uint64_t v27 = swift_retain();
  if ((v26(v27) & 1) == 0)
  {
    swift_release();
    return;
  }
  uint64_t v65 = v25;
  uint64_t v57 = v10;
  uint64_t v28 = *(void *)(a1 + 16);
  if (!v28)
  {
    uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
LABEL_33:
    v32(v24, 1, 1, v18);
    swift_release();
LABEL_34:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v63 = qword_10078DEA0;
  uint64_t v64 = v69 + qword_10078DEF0;
  uint64_t v58 = v69 + qword_10078DE98;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v29 = v19 + 16;
  uint64_t v77 = v30;
  uint64_t v31 = a1 + ((*(unsigned __int8 *)(v29 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64));
  uint64_t v72 = *(void *)(v29 + 56);
  uint64_t v74 = (void (**)(char *, char *, uint64_t))(v29 + 16);
  char v75 = (unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 32);
  uint64_t v71 = (void (**)(char *, uint64_t))(v29 - 8);
  v56[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v76 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 40);
  v56[0] = (v29 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v67 = a3;
  uint64_t v73 = v29;
  while (1)
  {
    v77(v24, v31, v18);
    uint64_t v32 = *v76;
    (*v76)(v24, 0, 1, v18);
    if ((*v75)(v24, 1, v18) == 1)
    {
      swift_release();
      goto LABEL_34;
    }
    (*v74)(v21, v24, v18);
    uint64_t v33 = *(void *)(a3 + 16);
    uint64_t v34 = *(void *)(v33 + 16);
    uint64_t v35 = IndexPath.section.getter();
    if (v35 < 0 || v35 >= v34) {
      goto LABEL_7;
    }
    uint64_t v36 = IndexPath.section.getter();
    if (v36 < 0 || v36 >= v34) {
      break;
    }
    unint64_t v37 = *(void *)(v33 + 16 * v36 + 40);
    if (v37 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v55 = _CocoaArrayWrapper.endIndex.getter();
      if (v55 < 0) {
        goto LABEL_37;
      }
      unint64_t v38 = v55;
    }
    else
    {
      unint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
    }
    unint64_t v39 = IndexPath.row.getter();
    if ((v39 & 0x8000000000000000) != 0 || v39 >= v38)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      unint64_t v40 = IndexPath.row.getter();
      if ((v37 & 0xC000000000000001) != 0)
      {
        uint64_t v78 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if ((v40 & 0x8000000000000000) != 0) {
          goto LABEL_38;
        }
        if (v40 >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_39;
        }
        uint64_t v78 = *(void *)(v37 + 8 * v40 + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      swift_release();
      id v41 = *(id *)(v69 + v63);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v43 = [v41 cellForRowAtIndexPath:isa v56[0]];

      if (v43)
      {
        id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        uint64_t v61 = v78 + *(void *)(*(void *)v78 + 144);
        uint64_t v45 = v61;
        swift_beginAccess();
        char v60 = &type metadata accessor for TTRRemindersListViewModel.Item;
        uint64_t v46 = v68;
        sub_1000244A8(v45, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        (*(void (**)(void *, id, uint64_t))(v65 + 32))(Strong, v43, v46);

        uint64_t v47 = v60;
        sub_100024388(v46, (uint64_t (*)(void))v60);
        v81[3] = sub_1000368FC(0, (unint64_t *)&qword_10078E270);
        uint64_t v80 = 0;
        v81[0] = v43;
        memset(v79, 0, sizeof(v79));
        id v62 = v43;
        sub_1001214BC((uint64_t)v81, v78, (uint64_t)v79);
        sub_10003B6F8((uint64_t)v79, (uint64_t *)&unk_10078E278);
        sub_10003B6F8((uint64_t)v81, &qword_100788D60);
        sub_1000244A8(v61, v46, (uint64_t (*)(void))v47);
        uint64_t v48 = v70;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100024388(v46, (uint64_t (*)(void))v47);
        swift_beginAccess();
        uint64_t v49 = v66;
        sub_10012F180(v66);
        sub_10003B6F8(v49, (uint64_t *)&unk_10078E360);
        swift_endAccess();
        swift_release();

        uint64_t v50 = v48;
      }
      else
      {
        uint64_t v51 = v78 + *(void *)(*(void *)v78 + 144);
        swift_beginAccess();
        uint64_t v52 = v68;
        sub_1000244A8(v51, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100024388(v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_beginAccess();
        uint64_t v53 = (uint64_t)v57;
        sub_1000244A8(v70, (uint64_t)v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        uint64_t v54 = (uint64_t)v59;
        sub_1005A2CAC((uint64_t)v59, v53);
        sub_100024388(v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        swift_endAccess();
        swift_release();
        uint64_t v50 = v70;
      }
      sub_100024388(v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    }
    a3 = v67;
LABEL_7:
    (*v71)(v21, v18);
    v31 += v72;
    if (!--v28) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

uint64_t sub_10013EF80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078E260);
  __chkstk_darwin(v6 - 8);
  uint64_t v64 = (uint64_t)v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)v54 - v13;
  __chkstk_darwin(v12);
  uint64_t v68 = (uint64_t)v54 - v15;
  uint64_t v16 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v16 - 8);
  uint64_t v66 = (uint64_t)v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for IndexPath();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_10003B754(&qword_10078E8F0);
  uint64_t result = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)v54 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = *(void *)(a2 + qword_10078DEB8);
  if (!v26) {
    return result;
  }
  uint64_t v67 = a2;
  uint64_t v57 = v14;
  uint64_t v27 = *(uint64_t (**)(uint64_t))(v26 + 16);
  uint64_t v28 = swift_retain();
  if ((v27(v28) & 1) == 0)
  {
    return swift_release();
  }
  uint64_t v63 = v26;
  uint64_t v55 = v11;
  uint64_t v29 = *(void *)(a1 + 16);
  if (!v29)
  {
    uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
LABEL_33:
    v33(v25, 1, 1, v18);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v61 = qword_10078DEA0;
  uint64_t v62 = v67 + qword_10078DEF0;
  uint64_t v56 = v67 + qword_10078DE98;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v30 = v19 + 16;
  char v75 = v31;
  uint64_t v32 = a1 + ((*(unsigned __int8 *)(v30 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 64));
  uint64_t v70 = *(void *)(v30 + 56);
  uint64_t v72 = (void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 32);
  uint64_t v69 = (void (**)(char *, uint64_t))(v30 - 8);
  v54[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v74 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 40);
  v54[0] = (v30 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  uint64_t v65 = a3;
  uint64_t v71 = v30;
  while (1)
  {
    v75(v25, v32, v18);
    uint64_t v33 = *v74;
    (*v74)(v25, 0, 1, v18);
    if ((*v73)(v25, 1, v18) == 1)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    (*v72)(v21, v25, v18);
    uint64_t v34 = *(void *)(a3 + 16);
    uint64_t v35 = *(void *)(v34 + 16);
    uint64_t v36 = IndexPath.section.getter();
    if (v36 < 0 || v36 >= v35) {
      goto LABEL_7;
    }
    uint64_t result = IndexPath.section.getter();
    if (result < 0 || result >= v35) {
      break;
    }
    unint64_t v37 = *(void *)(v34 + 16 * result + 40);
    if (v37 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      if (result < 0) {
        goto LABEL_37;
      }
      unint64_t v38 = result;
    }
    else
    {
      unint64_t v38 = *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      swift_bridgeObjectRetain();
    }
    unint64_t v39 = IndexPath.row.getter();
    if ((v39 & 0x8000000000000000) != 0 || v39 >= v38)
    {
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t result = IndexPath.row.getter();
      if ((v37 & 0xC000000000000001) != 0)
      {
        uint64_t v76 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (result < 0) {
          goto LABEL_38;
        }
        if ((unint64_t)result >= *(void *)((v37 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_39;
        }
        uint64_t v76 = *(void *)(v37 + 8 * result + 32);
        swift_retain();
      }
      swift_bridgeObjectRelease();
      swift_release();
      id v40 = *(id *)(v67 + v61);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v42 = [v40 cellForRowAtIndexPath:isa v54[0]];

      if (v42)
      {
        id Strong = (void *)swift_unknownObjectUnownedLoadStrong();
        uint64_t v59 = v76 + *(void *)(*(void *)v76 + 144);
        uint64_t v44 = v59;
        swift_beginAccess();
        uint64_t v58 = &type metadata accessor for TTRAccountsListsViewModel.Item;
        uint64_t v45 = v66;
        sub_1000244A8(v44, v66, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        (*(void (**)(void *, id, uint64_t))(v63 + 32))(Strong, v42, v45);

        uint64_t v46 = v58;
        sub_100024388(v45, (uint64_t (*)(void))v58);
        v79[3] = sub_1000368FC(0, (unint64_t *)&qword_10078E270);
        uint64_t v78 = 0;
        v79[0] = v42;
        memset(v77, 0, sizeof(v77));
        id v60 = v42;
        sub_100121960((uint64_t)v79, v76, (uint64_t)v77);
        sub_10003B6F8((uint64_t)v77, (uint64_t *)&unk_10078E278);
        sub_10003B6F8((uint64_t)v79, &qword_100788D60);
        sub_1000244A8(v59, v45, (uint64_t (*)(void))v46);
        uint64_t v47 = v68;
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100024388(v45, (uint64_t (*)(void))v46);
        swift_beginAccess();
        uint64_t v48 = v64;
        sub_10012F618(v64);
        sub_10003B6F8(v48, (uint64_t *)&unk_10078E260);
        swift_endAccess();
        swift_release();

        uint64_t v49 = v47;
      }
      else
      {
        uint64_t v50 = v76 + *(void *)(*(void *)v76 + 144);
        swift_beginAccess();
        uint64_t v51 = v66;
        sub_1000244A8(v50, v66, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100024388(v51, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_beginAccess();
        uint64_t v52 = (uint64_t)v55;
        sub_1000244A8(v68, (uint64_t)v55, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        uint64_t v53 = (uint64_t)v57;
        sub_1005A3E00((uint64_t)v57, v52);
        sub_100024388(v53, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        swift_endAccess();
        swift_release();
        uint64_t v49 = v68;
      }
      sub_100024388(v49, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    }
    a3 = v65;
LABEL_7:
    (*v69)(v21, v18);
    v32 += v70;
    if (!--v29) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

BOOL sub_10013F854()
{
  return sub_1001280E0();
}

uint64_t sub_10013F85C()
{
  return sub_100128B4C();
}

uint64_t sub_10013F86C(uint64_t a1)
{
  return sub_10012823C(a1, (uint64_t (*)(char *))sub_10013F8A8, *(void *)(v1 + 24));
}

uint64_t sub_10013F8A8()
{
  return sub_10003BA80();
}

uint64_t sub_10013F8E4(uint64_t a1, uint64_t a2, char a3)
{
  return sub_100119534(a1, a2, a3 & 1, *(void **)(v3 + 16));
}

uint64_t sub_10013F8F0(uint64_t *a1)
{
  return sub_100119590(*a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24), (uint64_t (*)(void))sub_10035C1D0);
}

uint64_t sub_10013F92C(uint64_t a1)
{
  return sub_1001401D0(a1, (uint64_t (*)(void))sub_10035C1D0);
}

uint64_t sub_10013F948@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100117ED8(a1, *(void *)(v2 + 16), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), (uint64_t (*)(void))sub_10035C1D0, (void (*)(uint64_t, uint64_t))sub_100091DD8, (void (*)(uint64_t, uint64_t *))sub_10020B4F8, a2);
}

uint64_t sub_10013F9B8(void *a1)
{
  return sub_100133E34(a1, *(void *)(v1 + 16), sub_10035C1D0);
}

uint64_t sub_10013F9E8(uint64_t *a1)
{
  return sub_10013FA70(a1, (uint64_t)sub_10035C1D0, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t))sub_1001192F4) & 1;
}

uint64_t sub_10013FA2C(uint64_t *a1)
{
  return sub_10013FA70(a1, (uint64_t)sub_10035C1D0, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t))sub_1001194B0) & 1;
}

uint64_t sub_10013FA70(uint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t, long long *, uint64_t, uint64_t))
{
  uint64_t v5 = *(void *)(v3 + 32);
  char v6 = *(unsigned char *)(v3 + 40);
  uint64_t v7 = *(void *)(v3 + 64);
  char v8 = *(unsigned char *)(v3 + 72);
  uint64_t v9 = *(void *)(v3 + 80);
  uint64_t v10 = *a1;
  long long v12 = *(_OWORD *)(v3 + 16);
  uint64_t v13 = v5;
  char v14 = v6;
  long long v15 = *(_OWORD *)(v3 + 48);
  uint64_t v16 = v7;
  char v17 = v8;
  return a3(v10, &v12, v9, a2) & 1;
}

uint64_t sub_10013FADC(uint64_t *a1)
{
  return sub_10013FB8C(a1, (uint64_t)sub_10035C1D0, (uint64_t)sub_1005A4084, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100119378) & 1;
}

uint64_t sub_10013FB34(uint64_t *a1)
{
  return sub_10013FB8C(a1, (uint64_t)sub_10035C1D0, (uint64_t)sub_1005A4084, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001191BC) & 1;
}

uint64_t sub_10013FB8C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v7 = *(void *)(v4 + 32);
  char v8 = *(unsigned char *)(v4 + 40);
  uint64_t v9 = *(void *)(v4 + 64);
  char v10 = *(unsigned char *)(v4 + 72);
  uint64_t v11 = *(void *)(v4 + 80);
  uint64_t v12 = *(void *)(v4 + 88);
  uint64_t v13 = *a1;
  long long v15 = *(_OWORD *)(v4 + 16);
  uint64_t v16 = v7;
  char v17 = v8;
  long long v18 = *(_OWORD *)(v4 + 48);
  uint64_t v19 = v9;
  char v20 = v10;
  return a4(v13, &v15, v11, v12, a2, a3) & 1;
}

uint64_t sub_10013FBFC()
{
  return sub_10011ABFC((void (*)(long long *))sub_10013FCC0);
}

uint64_t sub_10013FC54()
{
  return sub_10011ABFC((void (*)(long long *))sub_10013FCB0);
}

void (*sub_10013FCB0(uint64_t a1))(uint64_t *, void)
{
  return sub_10011BE74(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(char **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10013FCC0(uint64_t a1)
{
  return sub_10011C5C4(a1, *(char **)(v1 + 16), *(char **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10013FCD0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  swift_retain();
  a2(a1, v6, v5);

  return swift_release();
}

uint64_t sub_10013FD30()
{
  return sub_10011ABFC((void (*)(long long *))sub_10013FE5C);
}

uint64_t sub_10013FD94()
{
  return sub_10011ABFC((void (*)(long long *))sub_10013FE4C);
}

uint64_t sub_10013FDEC()
{
  return sub_10011ABFC((void (*)(long long *))sub_10013FE40);
}

uint64_t sub_10013FE40(uint64_t a1)
{
  return sub_10011D878(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void (*sub_10013FE4C(uint64_t a1))(void *, void)
{
  return sub_10011D92C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10013FE5C(uint64_t a1)
{
  return sub_10011DD80(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_10013FE74()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10013FEB0()
{
  return sub_10011F908(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))sub_100569D64);
}

uint64_t sub_10013FEE0(uint64_t a1)
{
  return sub_10012797C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000BD174);
}

uint64_t sub_10013FF10(uint64_t a1)
{
  return sub_10012797C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t (*)(void *, uint64_t, uint64_t))sub_1000BD14C);
}

uint64_t sub_10013FF40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10013FF9C(uint64_t a1)
{
  return sub_10011ACA8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10013FFA8(uint64_t a1)
{
  return sub_10011ADC8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10013FFB8()
{
  return sub_10011ABFC((void (*)(long long *))sub_100140010);
}

uint64_t sub_100140010(uint64_t a1)
{
  return sub_10011AA18(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_100140020(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10014004C()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100140084(uint64_t *a1)
{
}

uint64_t sub_100140090()
{
  return sub_10012AB48(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10014009C(uint64_t a1)
{
  return sub_10012800C(a1, *(void *)(v1 + 16), (void (*)(void))sub_1000890D8, (void (*)(uint64_t))sub_10035C1D4, sub_1000FFBF8) & 1;
}

uint64_t sub_1001400F8()
{
  return sub_10012871C();
}

uint64_t sub_100140104(uint64_t a1)
{
  return sub_10013FCD0(a1, sub_10013E6AC);
}

uint64_t sub_10014011C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100140184()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1001401D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *(void *)(v2 + 32);
  if (*(void *)(v3 + 16) && (uint64_t v4 = a2(), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(v3 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_100140220()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100140258(uint64_t *a1)
{
  return sub_10013FB8C(a1, (uint64_t)sub_10035C1D0, (uint64_t)sub_1005A2F30, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_100119378) & 1;
}

uint64_t sub_1001402B0(uint64_t *a1)
{
  return sub_10013FB8C(a1, (uint64_t)sub_10035C1D0, (uint64_t)sub_1005A2F30, (uint64_t (*)(uint64_t, long long *, uint64_t, uint64_t, uint64_t, uint64_t))sub_1001191BC) & 1;
}

BOOL sub_100140308(uint64_t a1)
{
  return *(void *)(*(void *)a1 + 16) == *(void *)(v1 + 16);
}

uint64_t sub_10014032C()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10014036C()
{
  return sub_10011F908(*(void *)(v0 + 16), *(void *)(v0 + 24), (void (*)(uint64_t))sub_1005698B8);
}

uint64_t type metadata accessor for TTRITreeViewTableAdapter.InsertDestination()
{
  return sub_10003BC54();
}

void sub_1001403B4()
{
}

uint64_t sub_1001403E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001270C8(*(void **)(v1 + 16), a1);
}

uint64_t sub_100140400()
{
  return sub_10001E86C();
}

uint64_t sub_100140424()
{
  return sub_10001BAA4();
}

void sub_100140448(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_100140478(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1001404A8(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1001404D8(uint64_t *a1@<X8>)
{
}

void sub_1001404E4()
{
}

uint64_t sub_1001404F0(uint64_t a1, void *a2)
{
  return (*(uint64_t (**)(void, uint64_t))(v2 + 32))(*a2, a1);
}

void sub_100140524(unsigned char *a1@<X8>)
{
}

void sub_100140530(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_100140560(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BCFAC);
}

void sub_100140590(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_1001405C0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_1001405F0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_100140620(uint64_t *a1@<X8>)
{
}

void sub_100140628(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BCEB8);
}

void sub_100140658(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BCE90);
}

uint64_t sub_100140688(uint64_t *a1, uint64_t a2)
{
  return sub_100125008(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), (void (*)(void *, uint64_t))sub_1000BCE68, (void (*)(char *, char *))sub_100143198);
}

uint64_t sub_1001406CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100140734(uint64_t *a1, uint64_t a2)
{
  return sub_100125008(a1, a2, *(char **)(v2 + 16), *(void *)(v2 + 24), (void (*)(void *, uint64_t))sub_1000BCE40, (void (*)(char *, char *))sub_100140778);
}

uint64_t sub_100140778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10012581C(a1, *(void **)(v2 + 16), a2);
}

void sub_100140798(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BCE18);
}

void sub_1001407C8(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BCDF0);
}

void sub_1001407F8(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_100140828(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BCD9C);
}

void sub_100140858(uint64_t a1@<X0>, double *a2@<X8>)
{
}

void sub_100140888(uint64_t a1, uint64_t a2)
{
  sub_100125ED0(a1, a2, *(void *)(v2 + 16), (void (*)(id, uint64_t))sub_1000BD0D4);
}

void sub_1001408B8(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

uint64_t sub_1001408E8()
{
  return sub_1001240B8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

void sub_1001408F8()
{
}

uint64_t type metadata accessor for TTRITreeViewTableAdapter.MoveDestination()
{
  return sub_10003BC54();
}

void sub_100140934(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
}

void sub_100140964()
{
}

uint64_t sub_100140970()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1001409FC(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    unsigned int v10 = a2[v5];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v5 <= 3) {
        uint64_t v12 = v5;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a2;
          goto LABEL_18;
        case 2:
          int v13 = *(unsigned __int16 *)a2;
          goto LABEL_18;
        case 3:
          int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_18;
        case 4:
          int v13 = *(_DWORD *)a2;
LABEL_18:
          int v14 = (v13 | (v11 << (8 * v5))) + 2;
          unsigned int v10 = v13 + 2;
          if (v5 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1)
    {
      (*(void (**)(void *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 1;
    }
    else if (v10)
    {
      memcpy(__dst, a2, v5 + 1);
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(__dst);
      *((unsigned char *)v3 + v5) = 0;
    }
  }
  else
  {
    uint64_t v9 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

unsigned __int8 *sub_100140B84(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unsigned int v3 = result[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *result;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)result;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)result;
LABEL_10:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 <= 1) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

unsigned char *sub_100140C74(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_10;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_10:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    __dst[v5] = 1;
  }
  else if (v6)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100140DC0(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_11:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 <= 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_24;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_24;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_24;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_24:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_100140FEC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  unsigned int v6 = a2[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a2;
        goto LABEL_10;
      case 2:
        int v9 = *(unsigned __int16 *)a2;
        goto LABEL_10;
      case 3:
        int v9 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_10;
      case 4:
        int v9 = *(_DWORD *)a2;
LABEL_10:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1)
  {
    (*(void (**)(unsigned char *))(v4 + 32))(__dst);
    __dst[v5] = 1;
  }
  else if (v6)
  {
    memcpy(__dst, a2, v5 + 1);
  }
  else
  {
    (*(void (**)(unsigned char *))(v4 + 32))(__dst);
    __dst[v5] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100141138(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    unsigned int v8 = __dst[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *__dst;
          goto LABEL_11;
        case 2:
          int v11 = *(unsigned __int16 *)__dst;
          goto LABEL_11;
        case 3:
          int v11 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
          goto LABEL_11;
        case 4:
          int v11 = *(_DWORD *)__dst;
LABEL_11:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 <= 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *__src;
          goto LABEL_24;
        case 2:
          int v16 = *(unsigned __int16 *)__src;
          goto LABEL_24;
        case 3:
          int v16 = *(unsigned __int16 *)__src | (__src[2] << 16);
          goto LABEL_24;
        case 4:
          int v16 = *(_DWORD *)__src;
LABEL_24:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v7 + 1);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      __dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_100141364(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_20;
  }
  uint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 253) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_20;
      }
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_20:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 3) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_20;
  }
LABEL_12:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 254;
}

void sub_10014148C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_32:
        __break(1u);
        JUMPOUT(0x100141648);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_20;
      case 3:
        goto LABEL_32;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_21;
      default:
LABEL_20:
        if (a2) {
LABEL_21:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_100141670(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_10;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_10;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_10;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_10:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_10014171C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1001417E8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100141878(void *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = __dst;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (v5 > 3) {
    goto LABEL_5;
  }
  unsigned int v6 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  uint64_t v7 = 2;
  if (v6 > 0xFFFC) {
    uint64_t v7 = 4;
  }
  if (v6 <= 0xFC) {
LABEL_5:
  }
    uint64_t v7 = 1;
  unint64_t v8 = v7 + v5;
  uint64_t v9 = *(_DWORD *)(v4 + 80);
  if (v9 > 7 || v8 > 0x18 || (*(_DWORD *)(v4 + 80) & 0x100000) != 0)
  {
    uint64_t v12 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v12 + ((v9 + 16) & ~v9));
    swift_retain();
    return v3;
  }
  if (v5 > 3) {
    goto LABEL_18;
  }
  unsigned int v14 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v14 > 0xFFFC)
  {
    unsigned int v15 = *(_DWORD *)&a2[v5];
    unsigned int v16 = v15 - 3;
    if (v15 < 3) {
      goto LABEL_36;
    }
    goto LABEL_23;
  }
  if (v14 > 0xFC)
  {
    unsigned int v15 = *(unsigned __int16 *)&a2[v5];
    unsigned int v16 = v15 - 3;
    if (v15 < 3) {
      goto LABEL_36;
    }
  }
  else
  {
LABEL_18:
    unsigned int v15 = a2[v5];
    unsigned int v16 = v15 - 3;
    if (v15 < 3) {
      goto LABEL_36;
    }
  }
LABEL_23:
  if (v5 <= 3) {
    uint64_t v17 = v5;
  }
  else {
    uint64_t v17 = 4;
  }
  switch(v17)
  {
    case 1:
      int v18 = *a2;
      if (v5 < 4) {
        goto LABEL_34;
      }
      goto LABEL_35;
    case 2:
      int v18 = *(unsigned __int16 *)a2;
      if (v5 >= 4) {
        goto LABEL_35;
      }
      goto LABEL_34;
    case 3:
      int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      if (v5 >= 4) {
        goto LABEL_35;
      }
      goto LABEL_34;
    case 4:
      int v18 = *(_DWORD *)a2;
      if (v5 < 4) {
LABEL_34:
      }
        v18 |= v16 << (8 * v5);
LABEL_35:
      unsigned int v15 = v18 + 3;
      break;
    default:
      break;
  }
LABEL_36:
  if (v15 == 2)
  {
    (*(void (**)(void *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      unsigned int v19 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v19 > 0xFFFC)
      {
        int v20 = 2;
        goto LABEL_59;
      }
      if (v19 > 0xFC)
      {
        LOWORD(v20) = 2;
        goto LABEL_62;
      }
    }
    *((unsigned char *)v3 + v5) = 2;
    return v3;
  }
  if (v15 == 1)
  {
    (*(void (**)(void *))(v4 + 16))(__dst);
    if (v5 > 3)
    {
LABEL_48:
      *((unsigned char *)v3 + v5) = 1;
      return v3;
    }
    int v20 = 1;
    unsigned int v21 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v21 <= 0xFFFC)
    {
      if (v21 <= 0xFC) {
        goto LABEL_48;
      }
LABEL_62:
      *(_WORD *)((char *)v3 + v5) = v20;
      return v3;
    }
LABEL_59:
    *(_DWORD *)((char *)v3 + v5) = v20;
    return v3;
  }
  if (v15)
  {
    if (v5 > 3) {
      goto LABEL_53;
    }
    unsigned int v22 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    uint64_t v23 = 2;
    if (v22 > 0xFFFC) {
      uint64_t v23 = 4;
    }
    if (v22 <= 0xFC) {
LABEL_53:
    }
      uint64_t v23 = 1;
    memcpy(__dst, a2, v23 + v5);
  }
  else
  {
    (*(void (**)(void *))(v4 + 16))(__dst);
    if (v5 > 3) {
      goto LABEL_40;
    }
    unsigned int v24 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v24 > 0xFFFC)
    {
      *(_DWORD *)((char *)v3 + v5) = 0;
      return v3;
    }
    if (v24 <= 0xFC) {
LABEL_40:
    }
      *((unsigned char *)v3 + v5) = 0;
    else {
      *(_WORD *)((char *)v3 + v5) = 0;
    }
  }
  return v3;
}

unsigned __int8 *sub_100141BBC(unsigned __int8 *result, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 > 3) {
    goto LABEL_2;
  }
  unsigned int v4 = ((1 << (8 * v2)) + 1) >> (8 * v2);
  if (v4 > 0xFFFC)
  {
    unsigned int v3 = *(_DWORD *)&result[v2];
  }
  else
  {
    if (v4 <= 0xFC)
    {
LABEL_2:
      unsigned int v3 = result[v2];
      goto LABEL_7;
    }
    unsigned int v3 = *(unsigned __int16 *)&result[v2];
  }
LABEL_7:
  unsigned int v5 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v6 = v2;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *result;
        goto LABEL_16;
      case 2:
        int v7 = *(unsigned __int16 *)result;
        goto LABEL_16;
      case 3:
        int v7 = *(unsigned __int16 *)result | (result[2] << 16);
        goto LABEL_16;
      case 4:
        int v7 = *(_DWORD *)result;
LABEL_16:
        int v8 = (v7 | (v5 << (8 * v2))) + 3;
        unsigned int v3 = v7 + 3;
        if (v2 < 4) {
          unsigned int v3 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v3 <= 2) {
    return (unsigned __int8 *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

unsigned char *sub_100141CEC(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (v5 > 3) {
    goto LABEL_4;
  }
  unsigned int v6 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v6 > 0xFFFC)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_19;
    }
    goto LABEL_9;
  }
  if (v6 > 0xFC)
  {
    unsigned int v7 = *(unsigned __int16 *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_19;
    }
  }
  else
  {
LABEL_4:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_19;
    }
  }
LABEL_9:
  if (v5 <= 3) {
    uint64_t v9 = v5;
  }
  else {
    uint64_t v9 = 4;
  }
  switch(v9)
  {
    case 1:
      int v10 = *a2;
      goto LABEL_17;
    case 2:
      int v10 = *(unsigned __int16 *)a2;
      goto LABEL_17;
    case 3:
      int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_17;
    case 4:
      int v10 = *(_DWORD *)a2;
LABEL_17:
      int v11 = (v10 | (v8 << (8 * v5))) + 3;
      unsigned int v7 = v10 + 3;
      if (v5 < 4) {
        unsigned int v7 = v11;
      }
      break;
    default:
      break;
  }
LABEL_19:
  if (v7 == 2)
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    if (v5 <= 3)
    {
      unsigned int v12 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v12 > 0xFFFC)
      {
        int v13 = 2;
        goto LABEL_42;
      }
      if (v12 > 0xFC)
      {
        LOWORD(v13) = 2;
        goto LABEL_45;
      }
    }
    __dst[v5] = 2;
    return __dst;
  }
  if (v7 == 1)
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    if (v5 > 3)
    {
LABEL_31:
      __dst[v5] = 1;
      return __dst;
    }
    int v13 = 1;
    unsigned int v14 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v14 <= 0xFFFC)
    {
      if (v14 <= 0xFC) {
        goto LABEL_31;
      }
LABEL_45:
      *(_WORD *)&__dst[v5] = v13;
      return __dst;
    }
LABEL_42:
    *(_DWORD *)&__dst[v5] = v13;
    return __dst;
  }
  if (v7)
  {
    if (v5 > 3) {
      goto LABEL_36;
    }
    unsigned int v15 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    uint64_t v16 = 2;
    if (v15 > 0xFFFC) {
      uint64_t v16 = 4;
    }
    if (v15 <= 0xFC) {
LABEL_36:
    }
      uint64_t v16 = 1;
    memcpy(__dst, a2, v16 + v5);
  }
  else
  {
    (*(void (**)(unsigned char *))(v4 + 16))(__dst);
    if (v5 > 3) {
      goto LABEL_23;
    }
    unsigned int v17 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v17 > 0xFFFC)
    {
      *(_DWORD *)&__dst[v5] = 0;
      return __dst;
    }
    if (v17 <= 0xFC) {
LABEL_23:
    }
      __dst[v5] = 0;
    else {
      *(_WORD *)&__dst[v5] = 0;
    }
  }
  return __dst;
}

char *sub_100141FA4(char *__dst, char *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_5;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  if (v9 > 0xFFFC)
  {
    unsigned int v10 = *(_DWORD *)&__dst[v7];
    unsigned int v11 = v10 - 3;
    if (v10 < 3) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v9 <= 0xFC)
  {
LABEL_5:
    unsigned int v10 = __dst[v7];
    unsigned int v11 = v10 - 3;
    if (v10 < 3) {
      goto LABEL_20;
    }
LABEL_10:
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *__dst;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_18:
        int v14 = (v13 | (v11 << v8)) + 3;
        unsigned int v10 = v13 + 3;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        goto LABEL_20;
    }
    goto LABEL_20;
  }
  unsigned int v10 = *(unsigned __int16 *)&__dst[v7];
  unsigned int v11 = v10 - 3;
  if (v10 >= 3) {
    goto LABEL_10;
  }
LABEL_20:
  if (v10 <= 2) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(__dst, v5);
  }
  if (v7 > 3) {
    goto LABEL_25;
  }
  unsigned int v15 = ((1 << v8) + 1) >> v8;
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)&__src[v7];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_40;
    }
    goto LABEL_30;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)&__src[v7];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_40;
    }
  }
  else
  {
LABEL_25:
    unsigned int v16 = __src[v7];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_40;
    }
  }
LABEL_30:
  if (v7 <= 3) {
    uint64_t v18 = v7;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *__src;
      goto LABEL_38;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      goto LABEL_38;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
      goto LABEL_38;
    case 4:
      int v19 = *(_DWORD *)__src;
LABEL_38:
      int v20 = (v19 | (v17 << v8)) + 3;
      unsigned int v16 = v19 + 3;
      if (v7 < 4) {
        unsigned int v16 = v20;
      }
      break;
    default:
      break;
  }
LABEL_40:
  if (v16 == 2)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v21 = ((1 << v8) + 1) >> v8;
      if (v21 > 0xFFFC)
      {
        int v22 = 2;
        goto LABEL_63;
      }
      if (v21 > 0xFC)
      {
        LOWORD(v22) = 2;
        goto LABEL_66;
      }
    }
    __dst[v7] = 2;
    return __dst;
  }
  if (v16 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 > 3)
    {
LABEL_52:
      __dst[v7] = 1;
      return __dst;
    }
    int v22 = 1;
    unsigned int v23 = ((1 << v8) + 1) >> v8;
    if (v23 <= 0xFFFC)
    {
      if (v23 <= 0xFC) {
        goto LABEL_52;
      }
LABEL_66:
      *(_WORD *)&__dst[v7] = v22;
      return __dst;
    }
LABEL_63:
    *(_DWORD *)&__dst[v7] = v22;
    return __dst;
  }
  if (v16)
  {
    if (v7 > 3) {
      goto LABEL_57;
    }
    unsigned int v24 = ((1 << v8) + 1) >> v8;
    uint64_t v25 = 2;
    if (v24 > 0xFFFC) {
      uint64_t v25 = 4;
    }
    if (v24 <= 0xFC) {
LABEL_57:
    }
      uint64_t v25 = 1;
    memcpy(__dst, __src, v25 + v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(__dst, __src, v5);
    if (v7 > 3) {
      goto LABEL_44;
    }
    unsigned int v26 = ((1 << v8) + 1) >> v8;
    if (v26 > 0xFFFC)
    {
      *(_DWORD *)&__dst[v7] = 0;
      return __dst;
    }
    if (v26 <= 0xFC) {
LABEL_44:
    }
      __dst[v7] = 0;
    else {
      *(_WORD *)&__dst[v7] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_100142378(unsigned char *__dst, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  if (v5 > 3) {
    goto LABEL_4;
  }
  unsigned int v6 = ((1 << (8 * v5)) + 1) >> (8 * v5);
  if (v6 > 0xFFFC)
  {
    unsigned int v7 = *(_DWORD *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_19;
    }
    goto LABEL_9;
  }
  if (v6 > 0xFC)
  {
    unsigned int v7 = *(unsigned __int16 *)&a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_19;
    }
  }
  else
  {
LABEL_4:
    unsigned int v7 = a2[v5];
    unsigned int v8 = v7 - 3;
    if (v7 < 3) {
      goto LABEL_19;
    }
  }
LABEL_9:
  if (v5 <= 3) {
    uint64_t v9 = v5;
  }
  else {
    uint64_t v9 = 4;
  }
  switch(v9)
  {
    case 1:
      int v10 = *a2;
      goto LABEL_17;
    case 2:
      int v10 = *(unsigned __int16 *)a2;
      goto LABEL_17;
    case 3:
      int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
      goto LABEL_17;
    case 4:
      int v10 = *(_DWORD *)a2;
LABEL_17:
      int v11 = (v10 | (v8 << (8 * v5))) + 3;
      unsigned int v7 = v10 + 3;
      if (v5 < 4) {
        unsigned int v7 = v11;
      }
      break;
    default:
      break;
  }
LABEL_19:
  if (v7 == 2)
  {
    (*(void (**)(unsigned char *))(v4 + 32))(__dst);
    if (v5 <= 3)
    {
      unsigned int v12 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v12 > 0xFFFC)
      {
        int v13 = 2;
        goto LABEL_42;
      }
      if (v12 > 0xFC)
      {
        LOWORD(v13) = 2;
        goto LABEL_45;
      }
    }
    __dst[v5] = 2;
    return __dst;
  }
  if (v7 == 1)
  {
    (*(void (**)(unsigned char *))(v4 + 32))(__dst);
    if (v5 > 3)
    {
LABEL_31:
      __dst[v5] = 1;
      return __dst;
    }
    int v13 = 1;
    unsigned int v14 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v14 <= 0xFFFC)
    {
      if (v14 <= 0xFC) {
        goto LABEL_31;
      }
LABEL_45:
      *(_WORD *)&__dst[v5] = v13;
      return __dst;
    }
LABEL_42:
    *(_DWORD *)&__dst[v5] = v13;
    return __dst;
  }
  if (v7)
  {
    if (v5 > 3) {
      goto LABEL_36;
    }
    unsigned int v15 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    uint64_t v16 = 2;
    if (v15 > 0xFFFC) {
      uint64_t v16 = 4;
    }
    if (v15 <= 0xFC) {
LABEL_36:
    }
      uint64_t v16 = 1;
    memcpy(__dst, a2, v16 + v5);
  }
  else
  {
    (*(void (**)(unsigned char *))(v4 + 32))(__dst);
    if (v5 > 3) {
      goto LABEL_23;
    }
    unsigned int v17 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v17 > 0xFFFC)
    {
      *(_DWORD *)&__dst[v5] = 0;
      return __dst;
    }
    if (v17 <= 0xFC) {
LABEL_23:
    }
      __dst[v5] = 0;
    else {
      *(_WORD *)&__dst[v5] = 0;
    }
  }
  return __dst;
}

char *sub_100142630(char *__dst, char *__src, uint64_t a3)
{
  if (__dst == __src) {
    return __dst;
  }
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  char v8 = 8 * v7;
  if (v7 > 3) {
    goto LABEL_5;
  }
  unsigned int v9 = ((1 << v8) + 1) >> v8;
  if (v9 > 0xFFFC)
  {
    unsigned int v10 = *(_DWORD *)&__dst[v7];
    unsigned int v11 = v10 - 3;
    if (v10 < 3) {
      goto LABEL_20;
    }
    goto LABEL_10;
  }
  if (v9 <= 0xFC)
  {
LABEL_5:
    unsigned int v10 = __dst[v7];
    unsigned int v11 = v10 - 3;
    if (v10 < 3) {
      goto LABEL_20;
    }
LABEL_10:
    if (v7 <= 3) {
      uint64_t v12 = v7;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *__dst;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)__dst;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)__dst | (__dst[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)__dst;
LABEL_18:
        int v14 = (v13 | (v11 << v8)) + 3;
        unsigned int v10 = v13 + 3;
        if (v7 < 4) {
          unsigned int v10 = v14;
        }
        break;
      default:
        goto LABEL_20;
    }
    goto LABEL_20;
  }
  unsigned int v10 = *(unsigned __int16 *)&__dst[v7];
  unsigned int v11 = v10 - 3;
  if (v10 >= 3) {
    goto LABEL_10;
  }
LABEL_20:
  if (v10 <= 2) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(__dst, v5);
  }
  if (v7 > 3) {
    goto LABEL_25;
  }
  unsigned int v15 = ((1 << v8) + 1) >> v8;
  if (v15 > 0xFFFC)
  {
    unsigned int v16 = *(_DWORD *)&__src[v7];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_40;
    }
    goto LABEL_30;
  }
  if (v15 > 0xFC)
  {
    unsigned int v16 = *(unsigned __int16 *)&__src[v7];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_40;
    }
  }
  else
  {
LABEL_25:
    unsigned int v16 = __src[v7];
    unsigned int v17 = v16 - 3;
    if (v16 < 3) {
      goto LABEL_40;
    }
  }
LABEL_30:
  if (v7 <= 3) {
    uint64_t v18 = v7;
  }
  else {
    uint64_t v18 = 4;
  }
  switch(v18)
  {
    case 1:
      int v19 = *__src;
      goto LABEL_38;
    case 2:
      int v19 = *(unsigned __int16 *)__src;
      goto LABEL_38;
    case 3:
      int v19 = *(unsigned __int16 *)__src | (__src[2] << 16);
      goto LABEL_38;
    case 4:
      int v19 = *(_DWORD *)__src;
LABEL_38:
      int v20 = (v19 | (v17 << v8)) + 3;
      unsigned int v16 = v19 + 3;
      if (v7 < 4) {
        unsigned int v16 = v20;
      }
      break;
    default:
      break;
  }
LABEL_40:
  if (v16 == 2)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 <= 3)
    {
      unsigned int v21 = ((1 << v8) + 1) >> v8;
      if (v21 > 0xFFFC)
      {
        int v22 = 2;
        goto LABEL_63;
      }
      if (v21 > 0xFC)
      {
        LOWORD(v22) = 2;
        goto LABEL_66;
      }
    }
    __dst[v7] = 2;
    return __dst;
  }
  if (v16 == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 > 3)
    {
LABEL_52:
      __dst[v7] = 1;
      return __dst;
    }
    int v22 = 1;
    unsigned int v23 = ((1 << v8) + 1) >> v8;
    if (v23 <= 0xFFFC)
    {
      if (v23 <= 0xFC) {
        goto LABEL_52;
      }
LABEL_66:
      *(_WORD *)&__dst[v7] = v22;
      return __dst;
    }
LABEL_63:
    *(_DWORD *)&__dst[v7] = v22;
    return __dst;
  }
  if (v16)
  {
    if (v7 > 3) {
      goto LABEL_57;
    }
    unsigned int v24 = ((1 << v8) + 1) >> v8;
    uint64_t v25 = 2;
    if (v24 > 0xFFFC) {
      uint64_t v25 = 4;
    }
    if (v24 <= 0xFC) {
LABEL_57:
    }
      uint64_t v25 = 1;
    memcpy(__dst, __src, v25 + v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(__dst, __src, v5);
    if (v7 > 3) {
      goto LABEL_44;
    }
    unsigned int v26 = ((1 << v8) + 1) >> v8;
    if (v26 > 0xFFFC)
    {
      *(_DWORD *)&__dst[v7] = 0;
      return __dst;
    }
    if (v26 <= 0xFC) {
LABEL_44:
    }
      __dst[v7] = 0;
    else {
      *(_WORD *)&__dst[v7] = 0;
    }
  }
  return __dst;
}

uint64_t sub_100142A04(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (v3 > 3)
  {
    int v4 = 4;
LABEL_5:
    char v6 = 8;
    goto LABEL_6;
  }
  unsigned int v5 = ((1 << (8 * v3)) + 1) >> (8 * v3);
  if (v5 > 0xFFFC) {
    goto LABEL_9;
  }
  int v4 = v5 + 3;
  if (v5 <= 0xFC) {
    goto LABEL_5;
  }
  char v6 = 16;
LABEL_6:
  unsigned int v7 = (1 << v6) - v4;
  if ((v7 & 0x80000000) == 0)
  {
    if (v3 > 3) {
      goto LABEL_13;
    }
LABEL_10:
    unsigned int v8 = ((1 << (8 * v3)) + 1) >> (8 * v3);
    uint64_t v9 = 2;
    if (v8 > 0xFFFC) {
      uint64_t v9 = 4;
    }
    if (v8 > 0xFC) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
LABEL_9:
  unsigned int v7 = 0x7FFFFFFF;
  if (v3 <= 3) {
    goto LABEL_10;
  }
LABEL_13:
  uint64_t v9 = 1;
LABEL_14:
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_33;
  }
  uint64_t v10 = v9 + v3;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v13 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v13))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v13 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v13 < 2)
    {
LABEL_33:
      if (v7)
      {
        if (v3 <= 3)
        {
          unsigned int v21 = ((1 << (8 * v3)) + 1) >> (8 * v3);
          if (v21 > 0xFFFC)
          {
            unsigned int v16 = *(_DWORD *)((char *)a1 + v3);
            unsigned int v17 = ~v16;
LABEL_43:
            unsigned int v24 = 0x7FFFFFFF;
LABEL_44:
            if (v24 > v17) {
              return -v16;
            }
            else {
              return 0;
            }
          }
          int v19 = v21 + 3;
          if (v21 > 0xFC)
          {
            int v23 = *(unsigned __int16 *)((char *)a1 + v3);
            unsigned int v16 = v23 | 0xFFFF0000;
            unsigned int v17 = v23 ^ 0xFFFF;
            char v18 = 16;
          }
          else
          {
            int v22 = *((unsigned __int8 *)a1 + v3);
            unsigned int v16 = v22 | 0xFFFFFF00;
            unsigned int v17 = v22 ^ 0xFF;
            char v18 = 8;
          }
        }
        else
        {
          int v15 = *((unsigned __int8 *)a1 + v3);
          unsigned int v16 = v15 | 0xFFFFFF00;
          unsigned int v17 = v15 ^ 0xFF;
          char v18 = 8;
          int v19 = 4;
        }
        unsigned int v24 = (1 << v18) - v19;
        if ((v24 & 0x80000000) == 0) {
          goto LABEL_44;
        }
        goto LABEL_43;
      }
      return 0;
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_33;
  }
LABEL_25:
  int v14 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v14 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v14) + 1;
}

void sub_100142C5C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  char v6 = 8 * v5;
  if (v5 > 3)
  {
    int v7 = 4;
LABEL_3:
    char v8 = 8;
    goto LABEL_4;
  }
  unsigned int v10 = ((1 << v6) + 1) >> v6;
  if (v10 > 0xFFFC) {
    goto LABEL_10;
  }
  int v7 = v10 + 3;
  if (v10 <= 0xFC) {
    goto LABEL_3;
  }
  char v8 = 16;
LABEL_4:
  unsigned int v9 = (1 << v8) - v7;
  if ((v9 & 0x80000000) == 0)
  {
    if (v5 > 3) {
      goto LABEL_14;
    }
    goto LABEL_11;
  }
LABEL_10:
  unsigned int v9 = 0x7FFFFFFF;
  if (v5 > 3)
  {
LABEL_14:
    uint64_t v12 = 1;
    goto LABEL_15;
  }
LABEL_11:
  unsigned int v11 = ((1 << v6) + 1) >> v6;
  uint64_t v12 = 2;
  if (v11 > 0xFFFC) {
    uint64_t v12 = 4;
  }
  if (v11 <= 0xFC) {
    goto LABEL_14;
  }
LABEL_15:
  size_t v13 = v12 + v5;
  if (a3 <= v9)
  {
    int v14 = 0;
  }
  else if (v13 <= 3)
  {
    unsigned int v17 = ((a3 - v9 + ~(-1 << (8 * v13))) >> (8 * v13)) + 1;
    if (HIWORD(v17))
    {
      int v14 = 4;
    }
    else if (v17 >= 0x100)
    {
      int v14 = 2;
    }
    else
    {
      int v14 = v17 > 1;
    }
  }
  else
  {
    int v14 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v15 = ~v9 + a2;
    if (v13 < 4)
    {
      int v16 = (v15 >> (8 * v13)) + 1;
      if (v13)
      {
        int v18 = v15 & ~(-1 << (8 * v13));
        bzero(a1, v13);
        if (v13 == 3)
        {
          *(_WORD *)a1 = v18;
          a1[2] = BYTE2(v18);
        }
        else if (v13 == 2)
        {
          *(_WORD *)a1 = v18;
        }
        else
        {
          *a1 = v18;
        }
      }
    }
    else
    {
      bzero(a1, v13);
      *(_DWORD *)a1 = v15;
      int v16 = 1;
    }
    switch(v14)
    {
      case 1:
        a1[v13] = v16;
        return;
      case 2:
        *(_WORD *)&a1[v13] = v16;
        return;
      case 3:
        goto LABEL_51;
      case 4:
        *(_DWORD *)&a1[v13] = v16;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 2:
      *(_WORD *)&a1[v13] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_35;
    case 3:
LABEL_51:
      __break(1u);
      JUMPOUT(0x100142EF0);
    case 4:
      *(_DWORD *)&a1[v13] = 0;
      goto LABEL_34;
    default:
LABEL_34:
      if (!a2) {
        return;
      }
LABEL_35:
      int v19 = -a2;
      if (v5 > 3) {
        goto LABEL_36;
      }
      unsigned int v20 = ((1 << v6) + 1) >> v6;
      if (v20 > 0xFFFC)
      {
        *(_DWORD *)&a1[v5] = v19;
      }
      else if (v20 <= 0xFC)
      {
LABEL_36:
        a1[v5] = v19;
      }
      else
      {
        *(_WORD *)&a1[v5] = v19;
      }
      return;
  }
}

uint64_t sub_100142F18(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 > 3) {
    goto LABEL_2;
  }
  unsigned int v4 = ((1 << (8 * v2)) + 1) >> (8 * v2);
  if (v4 > 0xFFFC)
  {
    uint64_t v3 = *(unsigned int *)&a1[v2];
  }
  else
  {
    if (v4 <= 0xFC)
    {
LABEL_2:
      uint64_t v3 = a1[v2];
      goto LABEL_7;
    }
    uint64_t v3 = *(unsigned __int16 *)&a1[v2];
  }
LABEL_7:
  int v5 = v3 - 3;
  if (v3 >= 3)
  {
    if (v2 <= 3) {
      uint64_t v6 = v2;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_16;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_16;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_16;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_16:
        unsigned int v8 = (v7 | (v5 << (8 * v2))) + 3;
        LODWORD(v3) = v7 + 3;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v8;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_100143004(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (a2 > 2)
  {
    unsigned int v6 = a2 - 3;
    if (v5 < 4)
    {
      int v8 = (v6 >> (8 * v5)) + 3;
      v6 &= ~(-1 << (8 * v5));
      unsigned int v9 = (int *)&a1[v5];
      unsigned int v10 = ((1 << (8 * v5)) + 1) >> (8 * v5);
      if (v10 > 0xFFFC)
      {
        *unsigned int v9 = v8;
      }
      else if (v10 > 0xFC)
      {
        *(_WORD *)unsigned int v9 = v8;
      }
      else
      {
        *(unsigned char *)unsigned int v9 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
    }
    if (v5 <= 3) {
      int v11 = v5;
    }
    else {
      int v11 = 4;
    }
    bzero(a1, v5);
    switch(v11)
    {
      case 2:
        *(_WORD *)a1 = v6;
        break;
      case 3:
        *(_WORD *)a1 = v6;
        a1[2] = BYTE2(v6);
        break;
      case 4:
        *(_DWORD *)a1 = v6;
        break;
      default:
        *a1 = v6;
        break;
    }
  }
  else
  {
    if (v5 > 3)
    {
LABEL_3:
      a1[v5] = a2;
      return;
    }
    unsigned int v7 = ((1 << (8 * v5)) + 1) >> (8 * v5);
    if (v7 > 0xFFFC)
    {
      *(_DWORD *)&a1[v5] = a2;
    }
    else
    {
      if (v7 <= 0xFC) {
        goto LABEL_3;
      }
      *(_WORD *)&a1[v5] = a2;
    }
  }
}

uint64_t sub_100143174(uint64_t a1, uint64_t (*a2)(void))
{
  return sub_10012F0DC(a1, a2) & 1;
}

uint64_t sub_100143198@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100140778(a1, a2);
}

uint64_t sub_100143220()
{
  return sub_10013BFFC() & 1;
}

uint64_t sub_100143248@<X0>(uint64_t a1@<X8>)
{
  return sub_1001403E4(a1);
}

uint64_t sub_100143260()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078E540);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078E540);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1001433A0()
{
  uint64_t v1 = v0;
  TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v2 = TTRUserDefaults.animationSlowModeEnabled.getter();
  double v3 = 0.15;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor)) {
    double v3 = 0.25;
  }
  double v4 = 1.0;
  if (v2) {
    double v4 = 3.0;
  }
  double v5 = v4 * v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  id v7 = objc_allocWithZone((Class)UIViewPropertyAnimator);
  v11[4] = sub_100144940;
  void v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  void v11[2] = sub_10000AD88;
  _OWORD v11[3] = &unk_10073BA58;
  int v8 = _Block_copy(v11);
  id v9 = v1;
  swift_release();
  id v10 = [v7 initWithDuration:v8 controlPoint1:v5 controlPoint2:0.33, 0.0, 0.67, 1.0];
  _Block_release(v8);
  [v10 startAnimation];
}

void sub_10014355C(void *a1, uint64_t a2, uint64_t a3, SEL *a4, SEL *a5)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v14.receiver = a1;
  v14.super_class = ObjectType;
  id v10 = *a4;
  id v11 = a1;
  LODWORD(v10) = [super LODWORD(v10)];
  v13.receiver = v11;
  v13.super_class = ObjectType;
  [super a3];
  v12.receiver = v11;
  v12.super_class = ObjectType;
  if (v10 != objc_msgSendSuper2(&v12, *a4)) {
    sub_1001433A0();
  }
}

void sub_1001437EC(void *a1, uint64_t a2)
{
  v11.receiver = v2;
  v11.super_class = (Class)swift_getObjectType();
  [super didUpdateFocusInContext:a1 withAnimationCoordinator:a2];
  id v5 = [a1 nextFocusedView];
  if (v5)
  {
    uint64_t v6 = v5;
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    id v7 = v2;
    id v8 = v6;
    char v9 = static NSObject.== infix(_:_:)();

    if (v9)
    {
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        if (*(unsigned char *)(Strong + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectionFollowsFocus) == 1) {
          sub_1002EA51C(v7, 0);
        }
        swift_unknownObjectRelease();
      }
    }
  }
}

void sub_100143970()
{
}

UIAccessibilityTraits sub_1001439D4()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  UIAccessibilityTraits v2 = UIAccessibilityTraitButton;
  if (([v0 isUserInteractionEnabled] & 1) == 0)
  {
    UIAccessibilityTraits v3 = UIAccessibilityTraitNotEnabled;
    if ((UIAccessibilityTraitNotEnabled & ~v2) == 0) {
      UIAccessibilityTraits v3 = 0;
    }
    v2 |= v3;
  }
  v7.receiver = v0;
  v7.super_class = ObjectType;
  if (objc_msgSendSuper2(&v7, "isSelected"))
  {
    UIAccessibilityTraits v4 = UIAccessibilityTraitSelected;
    if ((UIAccessibilityTraitSelected & ~v2) == 0) {
      UIAccessibilityTraits v4 = 0;
    }
    v2 |= v4;
  }
  UIAccessibilityTraits v5 = UIAccessibilityTraitStaticText;
  if ((UIAccessibilityTraitStaticText & ~v2) == 0) {
    UIAccessibilityTraits v5 = 0;
  }
  return v5 | v2;
}

void *sub_100143B08()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v77 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v76 = (char *)&v74 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v78);
  uint64_t v79 = (uint64_t)&v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  objc_super v11 = (long long *)((char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  objc_super v13 = (char *)&v74 - v12;
  uint64_t v14 = OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel;
  uint64_t result = *(void **)(v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
  if (result)
  {
    uint64_t v75 = v1;
    id v16 = [result text];
    if (v16)
    {
      unsigned int v17 = v16;
      uint64_t v80 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v19 = v18;
    }
    else
    {
      unsigned int v20 = (uint64_t *)TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor();
      uint64_t v19 = v20[1];
      uint64_t v80 = *v20;
      swift_bridgeObjectRetain();
    }
    uint64_t v21 = v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
    swift_beginAccess();
    sub_10002E018(v21, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10002ED34((uint64_t)v6);
      TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor();
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_10066C680;
      *(void *)(v22 + 56) = &type metadata for String;
      unint64_t v23 = sub_1000965C8();
      *(void *)(v22 + 32) = v80;
      *(void *)(v22 + 40) = v19;
      uint64_t v24 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_count);
      *(void *)(v22 + 96) = &type metadata for Int;
      *(void *)(v22 + 104) = &protocol witness table for Int;
      *(void *)(v22 + 64) = v23;
      *(void *)(v22 + 72) = v24;
      swift_bridgeObjectRetain();
      uint64_t v25 = String.init(format:_:)();
      swift_bridgeObjectRelease();
      return (void *)v25;
    }
    uint64_t v26 = (uint64_t)v13;
    sub_10002E4D0((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_10003BA1C((uint64_t)v13, (uint64_t)v11);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v38 = v79;
      sub_10002E4D0((uint64_t)v11, v79, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      uint64_t v39 = v78;
      int v40 = *(unsigned __int8 *)(v38 + *(int *)(v78 + 20));
      if (v40 == 6)
      {
        uint64_t v25 = v80;
      }
      else
      {
        TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor();
        sub_10003B754((uint64_t *)&unk_100788EE0);
        uint64_t v41 = swift_allocObject();
        long long v74 = xmmword_10066C680;
        *(_OWORD *)(v41 + 16) = xmmword_10066C680;
        *(void *)(v41 + 56) = &type metadata for String;
        *(void *)(v41 + 64) = sub_1000965C8();
        *(void *)(v41 + 32) = v80;
        *(void *)(v41 + 40) = v19;
        uint64_t v42 = *(void *)(v38 + *(int *)(v39 + 24));
        *(void *)(v41 + 96) = &type metadata for Int;
        *(void *)(v41 + 104) = &protocol witness table for Int;
        *(void *)(v41 + 72) = v42;
        swift_bridgeObjectRetain();
        uint64_t v25 = String.init(format:_:)();
        uint64_t v44 = v43;
        swift_bridgeObjectRelease();
        if (!v40)
        {
          uint64_t v45 = v76;
          Date.init()();
          uint64_t v46 = Date.rem_localizedTodayString.getter();
          uint64_t v48 = v47;
          (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v75);
          sub_10003B754((uint64_t *)&unk_100791C60);
          uint64_t v49 = swift_allocObject();
          *(_OWORD *)(v49 + 16) = v74;
          *(void *)(v49 + 32) = v25;
          *(void *)(v49 + 40) = v44;
          *(void *)(v49 + 48) = v46;
          *(void *)(v49 + 56) = v48;
          *(void *)&long long v82 = v49;
          TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
          swift_bridgeObjectRetain();
          sub_10003B754(&qword_10078E670);
          sub_1000B542C();
          uint64_t v25 = BidirectionalCollection<>.joined(separator:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
      sub_10002DFB8(v38, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      goto LABEL_27;
    }
    swift_bridgeObjectRelease();
    long long v27 = v11[11];
    long long v92 = v11[10];
    long long v93 = v27;
    v94[0] = v11[12];
    *(_OWORD *)((char *)v94 + 10) = *(long long *)((char *)v11 + 202);
    long long v28 = v11[7];
    long long v88 = v11[6];
    long long v89 = v28;
    long long v29 = v11[9];
    long long v90 = v11[8];
    long long v91 = v29;
    long long v30 = v11[3];
    long long v84 = v11[2];
    long long v85 = v30;
    long long v31 = v11[5];
    long long v86 = v11[4];
    long long v87 = v31;
    long long v32 = v11[1];
    long long v82 = *v11;
    long long v83 = v32;
    uint64_t result = *(void **)(v0 + v14);
    if (result)
    {
      id v33 = [result text];
      if (v33)
      {
        uint64_t v34 = v33;
        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v37 = v36;
      }
      else
      {
        uint64_t v50 = (uint64_t *)TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor();
        uint64_t v35 = *v50;
        uint64_t v37 = v50[1];
        swift_bridgeObjectRetain();
      }
      sub_10003B754((uint64_t *)&unk_100791C60);
      uint64_t v51 = swift_allocObject();
      *(_OWORD *)(v51 + 16) = xmmword_10066C6F0;
      *(void *)(v51 + 32) = v35;
      *(void *)(v51 + 40) = v37;
      uint64_t v52 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Pinned.unsafeMutableAddressor();
      uint64_t v54 = *v52;
      uint64_t v53 = v52[1];
      swift_bridgeObjectRetain();
      uint64_t v55 = sub_100022F98((char *)1, 2, 1, (char *)v51);
      *((void *)v55 + 2) = 2;
      *((void *)v55 + 6) = v54;
      *((void *)v55 + 7) = v53;
      if (*((void *)&v93 + 1))
      {
        swift_bridgeObjectRetain();
        uint64_t v56 = Array<A>.ttrAccessibilitySharingSummary()();
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();
        if (v58)
        {
          unint64_t v60 = *((void *)v55 + 2);
          unint64_t v59 = *((void *)v55 + 3);
          if (v60 >= v59 >> 1) {
            uint64_t v55 = sub_100022F98((char *)(v59 > 1), v60 + 1, 1, v55);
          }
          *((void *)v55 + 2) = v60 + 1;
          uint64_t v61 = &v55[16 * v60];
          *((void *)v61 + 4) = v56;
          *((void *)v61 + 5) = v58;
        }
      }
      if (BYTE8(v94[1]) == 1)
      {
        uint64_t v62 = (uint64_t *)TTRAccesibility.AccountsList.Label.SmartList.unsafeMutableAddressor();
        uint64_t v64 = *v62;
        uint64_t v63 = v62[1];
        unint64_t v65 = *((void *)v55 + 2);
        unint64_t v66 = *((void *)v55 + 3);
        swift_bridgeObjectRetain();
        if (v65 >= v66 >> 1) {
          uint64_t v55 = sub_100022F98((char *)(v66 > 1), v65 + 1, 1, v55);
        }
        *((void *)v55 + 2) = v65 + 1;
        uint64_t v67 = &v55[16 * v65];
        *((void *)v67 + 4) = v64;
        *((void *)v67 + 5) = v63;
      }
      uint64_t v81 = v55;
      TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      sub_10003B754(&qword_10078E670);
      sub_1000B542C();
      uint64_t v68 = BidirectionalCollection<>.joined(separator:)();
      uint64_t v70 = v69;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor();
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v71 = swift_allocObject();
      *(_OWORD *)(v71 + 16) = xmmword_10066C680;
      *(void *)(v71 + 56) = &type metadata for String;
      unint64_t v72 = sub_1000965C8();
      *(void *)(v71 + 32) = v68;
      *(void *)(v71 + 40) = v70;
      uint64_t v73 = *((void *)&v83 + 1);
      *(void *)(v71 + 96) = &type metadata for Int;
      *(void *)(v71 + 104) = &protocol witness table for Int;
      *(void *)(v71 + 64) = v72;
      *(void *)(v71 + 72) = v73;
      swift_bridgeObjectRetain();
      uint64_t v25 = String.init(format:_:)();
      swift_bridgeObjectRelease();
      sub_10003B798((uint64_t)&v82);
LABEL_27:
      sub_10002DFB8(v26, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
      return (void *)v25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100144378()
{
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel);
  if (result)
  {
    id v2 = [(id)result text];
    if (v2)
    {
      uint64_t v3 = v2;
      uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v7 = (uint64_t *)TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor();
      uint64_t v4 = *v7;
      uint64_t v6 = v7[1];
      swift_bridgeObjectRetain();
    }
    sub_10003B754((uint64_t *)&unk_100791C60);
    uint64_t result = swift_allocObject();
    *(_OWORD *)(result + 16) = xmmword_10066C6F0;
    *(void *)(result + 32) = v4;
    *(void *)(result + 40) = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_10014453C()
{
  v7.receiver = v0;
  v7.super_class = (Class)swift_getObjectType();
  [super accessibilityCustomActions];
  if (v1)
  {
    id v2 = v1;
    sub_1000368FC(0, (unint64_t *)&unk_10078E660);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v8 = v3;
  if (swift_unknownObjectWeakLoadStrong())
  {
    unint64_t v4 = sub_1002EA810((uint64_t)v0);
    swift_unknownObjectRelease();
    if (v4)
    {
      sub_10056A030(v4);
      unint64_t v3 = v8;
    }
  }
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      return v3;
    }
    goto LABEL_9;
  }
  if (!*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void sub_100144730()
{
}

uint64_t sub_100144828()
{
  return type metadata accessor for TTRIPinnedListControl();
}

uint64_t sub_100144908()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_100144940()
{
}

uint64_t sub_100144964()
{
  return _swift_deallocObject(v0, 26, 7);
}

uint64_t sub_10014499C()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1001449AC()
{
  v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = 0;
  v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isContextMenuTarget] = 0;
  id v1 = &v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_count] = 0;
  v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_usesLongTitle] = 0;
  v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_dynamicDateGlyphCache] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_gradientBackgroundView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_badgeView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_countLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_titleLabel] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_stackedAvatarsView] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100144AF8(uint64_t a1)
{
  sub_100144CE0(a1, (uint64_t)v11);
  if (v12)
  {
    sub_100144D48();
    if (swift_dynamicCast())
    {
      unsigned __int8 v1 = [v10 hasMarkedText];
      id v2 = [v10 text];
      if (v2)
      {
        unint64_t v3 = v2;
        uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v6 = v5;
      }
      else
      {
        uint64_t v4 = 0;
        uint64_t v6 = (void *)0xE000000000000000;
      }
      v7._uint64_t countAndFlagsBits = v4;
      v7._object = v6;
      object = TTRHashtagAssociationPresenterCapability.validateNewHashtagName(_:hasMarkedText:)(v7, v1).value._object;
      swift_bridgeObjectRelease();
      if (object)
      {
        NSString v9 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v10 setText:v9];
      }
    }
  }
  else
  {
    sub_10003D3BC((uint64_t)v11);
  }
}

uint64_t sub_100144CE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100788D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_100144D48()
{
  unint64_t result = qword_1007A7480;
  if (!qword_1007A7480)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007A7480);
  }
  return result;
}

void sub_100144D88()
{
  type metadata accessor for TTRITreeViewDropProposal(319);
  if (v0 <= 0x3F)
  {
    sub_1001578C0();
    if (v1 <= 0x3F)
    {
      type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult();
      type metadata accessor for Optional();
      if (v2 <= 0x3F) {
        swift_initClassMetadata2();
      }
    }
  }
}

uint64_t sub_100144EB0()
{
  uint64_t v1 = v0;
  unint64_t v2 = (id *)(v0 + qword_1007BBA48);
  swift_beginAccess();
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10079C9A0);
  uint64_t v4 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  uint64_t result = v4(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if ([*v2 localDragSession])
    {
      swift_getObjectType();
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v7 = sub_100350AFC((uint64_t)Strong);

      swift_unknownObjectRelease();
      if (v7)
      {
        unint64_t v8 = (uint64_t *)(v7 + qword_1007BBC58);
        swift_beginAccess();
        uint64_t v9 = *v8;
        swift_bridgeObjectRetain();
        swift_release();
        swift_retain();
        uint64_t v10 = (uint64_t)sub_100159F88(v9, v1);
        swift_bridgeObjectRelease();
        swift_release();
        return v10;
      }
    }
    uint64_t result = v4(v2, 1, v3);
    if (result != 1)
    {
      id v11 = [*v2 items];
      sub_100055B3C();
      uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      return v10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100145094()
{
  uint64_t v1 = v0;
  unint64_t v2 = (id *)(v0 + qword_1007BBA48);
  swift_beginAccess();
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10079C9A0);
  uint64_t v4 = *(uint64_t (**)(id *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48);
  uint64_t result = v4(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    if ([*v2 localDragSession])
    {
      swift_getObjectType();
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v7 = sub_100350AFC((uint64_t)Strong);

      swift_unknownObjectRelease();
      if (v7)
      {
        unint64_t v8 = (uint64_t *)(v7 + qword_1007BBC58);
        swift_beginAccess();
        uint64_t v9 = *v8;
        swift_bridgeObjectRetain();
        swift_release();
        swift_retain();
        uint64_t v10 = (uint64_t)sub_10015A5F8(v9, v1);
        swift_bridgeObjectRelease();
        swift_release();
        return v10;
      }
    }
    uint64_t result = v4(v2, 1, v3);
    if (result != 1)
    {
      id v11 = [*v2 items];
      sub_100055B3C();
      uint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      return v10;
    }
  }
  __break(1u);
  return result;
}

void *sub_100145278()
{
  uint64_t result = (void *)sub_10015AC68();
  if (result)
  {
    if ([result localDragSession])
    {
      swift_getObjectType();
      uint64_t v1 = (void *)sub_100119CD0();
      uint64_t v2 = sub_100350AFC((uint64_t)v1);

      swift_unknownObjectRelease();
      if (v2)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        swift_release();
        sub_10003B754(&qword_10078E980);
        sub_10015AD30();
        uint64_t v3 = Sequence.compactMap<A>(_:)();
        swift_bridgeObjectRelease();
        return (void *)v3;
      }
    }
    uint64_t result = (void *)sub_10015AC68();
    if (result)
    {
      id v4 = [result items];
      sub_100055B3C();
      uint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      return (void *)v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_100145420(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, void *a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v78 = a3;
  long long v83 = a5;
  uint64_t v8 = sub_10003B754(&qword_10078E9B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v72 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_10003B754(&qword_10078E9B8);
  __chkstk_darwin(v84);
  uint64_t v85 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_10078E9C0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v77 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v74 = (uint64_t)&v70 - v15;
  __chkstk_darwin(v14);
  unsigned int v17 = (char *)&v70 - v16;
  uint64_t v86 = sub_10003B754((uint64_t *)&unk_100788D50);
  uint64_t v18 = *(void *)(v86 - 8);
  uint64_t v19 = __chkstk_darwin(v86);
  uint64_t v76 = (uint64_t)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v73 = (uint64_t)&v70 - v22;
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v70 - v23;
  uint64_t v25 = sub_10003B754((uint64_t *)&unk_10079C010);
  __chkstk_darwin(v25 - 8);
  long long v27 = (void **)((char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = sub_10003B754(&qword_10078E8F0);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  uint64_t v71 = (uint64_t)&v70 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  long long v32 = (char *)&v70 - v31;
  uint64_t v33 = a1 + qword_1007BBA48;
  uint64_t v87 = a2;
  swift_retain();
  id v34 = a4;
  swift_beginAccess();
  sub_10003B694(v33, (uint64_t)v27, (uint64_t *)&unk_10079C010);
  uint64_t v35 = sub_10003B754((uint64_t *)&unk_10079C9A0);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v27, 1, v35) != 1)
  {
    uint64_t v36 = *v27;
    uint64_t v37 = v27[1];
    sub_100028C3C((uint64_t)v27 + *(int *)(v35 + 64), (uint64_t)v32, &qword_10078E8F0);
    swift_retain_n();
    id v38 = v34;
    uint64_t v80 = v36;
    id v81 = v37;
    uint64_t v79 = v32;
    sub_10014EEFC(v37, (void (*)(char *, uint64_t, uint64_t, uint64_t))v36, (uint64_t)v32, (uint64_t)v24);
    long long v82 = v24;
    sub_10003B694((uint64_t)v24, (uint64_t)v17, (uint64_t *)&unk_100788D50);
    uint64_t v39 = v86;
    uint64_t v75 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
    v75(v17, 0, 1, v86);
    uint64_t v40 = a1 + *(void *)(*(void *)a1 + 120);
    swift_beginAccess();
    uint64_t v41 = v85;
    uint64_t v42 = v85 + *(int *)(v84 + 48);
    sub_10003B694((uint64_t)v17, v85, (uint64_t *)&unk_10078E9C0);
    sub_10003B694(v40, v42, (uint64_t *)&unk_10078E9C0);
    uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 48);
    int v44 = v43(v41, 1, v39);
    uint64_t v45 = a1;
    uint64_t v46 = v41;
    if (v44 == 1)
    {
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E9C0);
      uint64_t v47 = v86;
      int v48 = v43(v42, 1, v86);
      uint64_t v50 = (uint64_t)v82;
      uint64_t v49 = v83;
      if (v48 == 1)
      {
        sub_10003B6F8(v46, (uint64_t *)&unk_10078E9C0);
        uint64_t v51 = (uint64_t)v79;
LABEL_9:
        swift_unknownObjectRelease();

        sub_10003B6F8(v50, (uint64_t *)&unk_100788D50);
        sub_10003B6F8(v51, &qword_10078E8F0);
        uint64_t v55 = v45 + qword_1007BBA40;
        swift_beginAccess();
        sub_10015BF20(v55, (uint64_t)v49, type metadata accessor for TTRITreeViewDropProposal);
LABEL_17:

        swift_release_n();
        return;
      }
    }
    else
    {
      uint64_t v84 = (uint64_t)v38;
      uint64_t v52 = v74;
      sub_10003B694(v41, v74, (uint64_t *)&unk_10078E9C0);
      uint64_t v47 = v86;
      if (v43(v42, 1, v86) != 1)
      {
        uint64_t v53 = v73;
        sub_100028C3C(v42, v73, (uint64_t *)&unk_100788D50);
        char v54 = sub_100155428(v52, v53, &qword_10078E9B0, (uint64_t *)&unk_100788D50, (uint64_t *)&unk_10078E9D0, (uint64_t (*)(char *, char *))sub_1001560FC);
        sub_10003B6F8(v53, (uint64_t *)&unk_100788D50);
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E9C0);
        sub_10003B6F8(v52, (uint64_t *)&unk_100788D50);
        sub_10003B6F8(v46, (uint64_t *)&unk_10078E9C0);
        uint64_t v50 = (uint64_t)v82;
        uint64_t v49 = v83;
        uint64_t v51 = (uint64_t)v79;
        id v38 = (id)v84;
        if (v54) {
          goto LABEL_9;
        }
LABEL_10:
        uint64_t v56 = v77;
        sub_10003B694(v50, v77, (uint64_t *)&unk_100788D50);
        v75((char *)v56, 0, 1, v47);
        swift_beginAccess();
        sub_10000A550(v56, v40, (uint64_t *)&unk_10078E9C0);
        swift_endAccess();
        uint64_t v57 = v76;
        sub_10003B694(v50, v76, (uint64_t *)&unk_100788D50);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          uint64_t v59 = v87;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v60 = v71;
            sub_100028C3C(v57, v71, &qword_10078E8F0);
            swift_retain();
            id v61 = v38;
            uint64_t v62 = (uint64_t)v49;
            id v63 = v81;
            sub_100150594(v60, v80, v45, v59, v78, v61, v62);
            swift_unknownObjectRelease();

            sub_10003B6F8(v60, &qword_10078E8F0);
            sub_10003B6F8(v50, (uint64_t *)&unk_100788D50);
            uint64_t v64 = v51;
LABEL_16:
            sub_10003B6F8(v64, &qword_10078E8F0);
            goto LABEL_17;
          }
          swift_retain();
          id v69 = v38;
          sub_100151FE0(v80, v59, v78, (uint64_t)v69, v49);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v65 = v57;
          uint64_t v66 = v72;
          sub_100028C3C(v65, v72, &qword_10078E9B0);
          uint64_t v67 = v87;
          swift_retain();
          id v68 = v38;
          sub_100152F50(v66, v80, v45, v67, v78, v68, v49);
          swift_unknownObjectRelease();

          sub_10003B6F8(v66, &qword_10078E9B0);
        }
        sub_10003B6F8(v50, (uint64_t *)&unk_100788D50);
        uint64_t v64 = v51;
        goto LABEL_16;
      }
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E9C0);
      sub_10003B6F8(v52, (uint64_t *)&unk_100788D50);
      uint64_t v50 = (uint64_t)v82;
      uint64_t v49 = v83;
      id v38 = (id)v84;
    }
    sub_10003B6F8(v46, &qword_10078E9B8);
    uint64_t v51 = (uint64_t)v79;
    goto LABEL_10;
  }

  swift_release();
  __break(1u);
}

void sub_100145CFC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v79 = a4;
  uint64_t v7 = sub_10003B754(&qword_10078E8F8);
  __chkstk_darwin(v7 - 8);
  uint64_t v69 = (uint64_t)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_10003B754((uint64_t *)&unk_10078E900);
  __chkstk_darwin(v80);
  uint64_t v81 = (uint64_t)&v68 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100788DD8);
  __chkstk_darwin(v10 - 8);
  uint64_t v74 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v71 = (uint64_t)&v68 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v82 = sub_10003B754(&qword_100788DE0);
  uint64_t v17 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v73 = (uint64_t)&v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v70 = (uint64_t)&v68 - v20;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v68 - v22;
  uint64_t v24 = sub_10003B754((uint64_t *)&unk_10079C010);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (void **)((char *)&v68 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v27 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v27 - 8);
  uint64_t v68 = (uint64_t)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v68 - v30;
  uint64_t v32 = a1 + qword_1007BBA48;
  uint64_t v83 = a2;
  swift_retain();
  id v33 = a3;
  swift_beginAccess();
  sub_10003B694(v32, (uint64_t)v26, (uint64_t *)&unk_10079C010);
  uint64_t v34 = sub_10003B754((uint64_t *)&unk_10079C9A0);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v26, 1, v34) != 1)
  {
    uint64_t v35 = *v26;
    uint64_t v36 = v26[1];
    sub_100028C3C((uint64_t)v26 + *(int *)(v34 + 64), (uint64_t)v31, &qword_10078E8F0);
    swift_retain_n();
    id v37 = v33;
    uint64_t v76 = v35;
    id v77 = v36;
    uint64_t v78 = v31;
    sub_10014FA48(v36, (void (*)(char *, uint64_t, uint64_t, uint64_t))v35, (uint64_t)v31, (uint64_t)v23);
    uint64_t v75 = v23;
    sub_10003B694((uint64_t)v23, (uint64_t)v16, &qword_100788DE0);
    uint64_t v38 = v82;
    uint64_t v72 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
    v72(v16, 0, 1, v82);
    uint64_t v39 = a1 + *(void *)(*(void *)a1 + 120);
    swift_beginAccess();
    uint64_t v40 = v81;
    uint64_t v41 = v81 + *(int *)(v80 + 48);
    sub_10003B694((uint64_t)v16, v81, &qword_100788DD8);
    sub_10003B694(v39, v41, &qword_100788DD8);
    uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    int v43 = v42(v40, 1, v38);
    uint64_t v44 = a1;
    uint64_t v45 = v40;
    if (v43 == 1)
    {
      sub_10003B6F8((uint64_t)v16, &qword_100788DD8);
      uint64_t v46 = v82;
      int v47 = v42(v41, 1, v82);
      uint64_t v49 = (uint64_t)v78;
      int v48 = v79;
      if (v47 == 1)
      {
        sub_10003B6F8(v45, &qword_100788DD8);
        uint64_t v50 = (uint64_t)v75;
LABEL_9:
        swift_unknownObjectRelease();

        sub_10003B6F8(v50, &qword_100788DE0);
        sub_10003B6F8(v49, &qword_10078E8F0);
        uint64_t v54 = v44 + qword_1007BBA40;
        swift_beginAccess();
        sub_10015BF20(v54, (uint64_t)v48, type metadata accessor for TTRITreeViewDropProposal);
LABEL_17:

        swift_release_n();
        return;
      }
    }
    else
    {
      uint64_t v80 = (uint64_t)v37;
      uint64_t v51 = v71;
      sub_10003B694(v40, v71, &qword_100788DD8);
      uint64_t v46 = v82;
      if (v42(v41, 1, v82) != 1)
      {
        uint64_t v52 = v70;
        sub_100028C3C(v41, v70, &qword_100788DE0);
        char v53 = sub_100155428(v51, v52, &qword_10078E8F8, &qword_100788DE0, (uint64_t *)&unk_10078E910, (uint64_t (*)(char *, char *))sub_1001564D4);
        sub_10003B6F8(v52, &qword_100788DE0);
        sub_10003B6F8((uint64_t)v16, &qword_100788DD8);
        sub_10003B6F8(v51, &qword_100788DE0);
        sub_10003B6F8(v45, &qword_100788DD8);
        uint64_t v49 = (uint64_t)v78;
        int v48 = v79;
        uint64_t v50 = (uint64_t)v75;
        id v37 = (id)v80;
        if (v53) {
          goto LABEL_9;
        }
LABEL_10:
        uint64_t v55 = v74;
        sub_10003B694(v50, v74, &qword_100788DE0);
        v72((char *)v55, 0, 1, v46);
        swift_beginAccess();
        sub_10000A550(v55, v39, &qword_100788DD8);
        swift_endAccess();
        uint64_t v56 = v73;
        sub_10003B694(v50, v73, &qword_100788DE0);
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload)
        {
          uint64_t v58 = v83;
          if (EnumCaseMultiPayload == 1)
          {
            uint64_t v59 = v68;
            sub_100028C3C(v56, v68, &qword_10078E8F0);
            swift_retain();
            id v60 = v37;
            id v61 = v77;
            sub_10015137C(v59, v76, v44, v58, (uint64_t)v60, (uint64_t)v48);
            swift_unknownObjectRelease();

            sub_10003B6F8(v59, &qword_10078E8F0);
            sub_10003B6F8(v50, &qword_100788DE0);
            uint64_t v62 = v49;
LABEL_16:
            sub_10003B6F8(v62, &qword_10078E8F0);
            goto LABEL_17;
          }
          swift_retain();
          id v67 = v37;
          sub_100152818(v76, v58, (uint64_t)v67, v48);
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v63 = v56;
          uint64_t v64 = v69;
          sub_100028C3C(v63, v69, &qword_10078E8F8);
          uint64_t v65 = v83;
          swift_retain();
          id v66 = v37;
          sub_100153E24(v64, v76, v44, v65, v66, v48);
          swift_unknownObjectRelease();

          sub_10003B6F8(v64, &qword_10078E8F8);
        }
        sub_10003B6F8(v50, &qword_100788DE0);
        uint64_t v62 = v49;
        goto LABEL_16;
      }
      sub_10003B6F8((uint64_t)v16, &qword_100788DD8);
      sub_10003B6F8(v51, &qword_100788DE0);
      uint64_t v49 = (uint64_t)v78;
      int v48 = v79;
      id v37 = (id)v80;
    }
    sub_10003B6F8(v45, (uint64_t *)&unk_10078E900);
    uint64_t v50 = (uint64_t)v75;
    goto LABEL_10;
  }

  swift_release();
  __break(1u);
}

uint64_t sub_1001465C0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v54 = a4;
  int v5 = a2 & 1;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_10078EA18);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  char v53 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v52 - v17;
  uint64_t v19 = __chkstk_darwin(v16);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v52 - v23;
  __chkstk_darwin(v22);
  uint64_t v52 = (uint64_t)&v52 - v25;
  sub_100149B38(a1, v5, v55, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10015BEB8((uint64_t)v11, (uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_100089354();
    uint64_t v36 = sub_100091FDC((uint64_t)v24, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t Strong = swift_weakLoadStrong();
      swift_release();
      if (Strong)
      {
        uint64_t v38 = Strong + *(void *)(*(void *)Strong + 144);
        swift_beginAccess();
        sub_10015BF20(v38, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release();
        sub_10015BEB8((uint64_t)v18, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v39 = sub_100370220((uint64_t)v24);
        if ((v40 & 1) == 0)
        {
          uint64_t v27 = v39;
          sub_100034564((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          goto LABEL_13;
        }
        sub_100034564((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      }
    }
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_100018BF8(v47, (uint64_t)qword_10078DE60);
    int v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Missing parent/childIndex", v50, 2u);
      swift_slowDealloc();
    }

    uint64_t v34 = (uint64_t)v24;
    goto LABEL_20;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v21 = v53;
    sub_10015BEB8((uint64_t)v11, (uint64_t)v53, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10015BF20((uint64_t)v21, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    uint64_t v27 = sub_100370A04((uint64_t)v8);
    char v29 = v28;
    sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788D10);
    if (v29)
    {
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100018BF8(v30, (uint64_t)qword_10078DE60);
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v31, v32))
      {
        id v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing parent child count", v33, 2u);
        swift_slowDealloc();
      }

      uint64_t v34 = (uint64_t)v21;
LABEL_20:
      sub_100034564(v34, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_21;
    }
LABEL_13:
    uint64_t v41 = v52;
    sub_10015BEB8((uint64_t)v21, v52, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    uint64_t v42 = sub_10003B754(&qword_100788F08);
    uint64_t v43 = *(int *)(v42 + 48);
    uint64_t v44 = v41;
    uint64_t v45 = v54;
    sub_10015BEB8(v44, v54, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(void *)(v45 + v43) = v27;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v45, 0, 1, v42);
  }
LABEL_21:
  uint64_t v51 = sub_10003B754(&qword_100788F08);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v54, 1, 1, v51);
}

uint64_t sub_100146BF4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v54 = a4;
  int v5 = a2 & 1;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_10078E970);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v53 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v52 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v52 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v52 - v22;
  __chkstk_darwin(v24);
  uint64_t v52 = (uint64_t)&v52 - v25;
  sub_10014A0C8(a1, v5, v55, (uint64_t)v11);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_10015BEB8((uint64_t)v11, (uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1000890D8();
    uint64_t v36 = sub_100091DF0((uint64_t)v23, v35);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v36)
    {
      uint64_t Strong = swift_weakLoadStrong();
      swift_release();
      if (Strong)
      {
        uint64_t v38 = Strong + *(void *)(*(void *)Strong + 144);
        swift_beginAccess();
        sub_10015BF20(v38, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        sub_10015BEB8((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v39 = sub_100370274((uint64_t)v23);
        if ((v40 & 1) == 0)
        {
          uint64_t v27 = v39;
          sub_100034564((uint64_t)v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          goto LABEL_13;
        }
        sub_100034564((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
    if (qword_1007852B8 != -1) {
      swift_once();
    }
    uint64_t v47 = type metadata accessor for Logger();
    sub_100018BF8(v47, (uint64_t)qword_10078DE60);
    int v48 = Logger.logObject.getter();
    os_log_type_t v49 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Missing parent/childIndex", v50, 2u);
      swift_slowDealloc();
    }

    uint64_t v34 = (uint64_t)v23;
    goto LABEL_20;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v20 = v53;
    sub_10015BEB8((uint64_t)v11, (uint64_t)v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10015BF20((uint64_t)v20, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
    uint64_t v27 = sub_100370DE8((uint64_t)v8);
    char v29 = v28;
    sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
    if (v29)
    {
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v30 = type metadata accessor for Logger();
      sub_100018BF8(v30, (uint64_t)qword_10078DE60);
      uint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v31, v32))
      {
        id v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v33 = 0;
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "Missing parent child count", v33, 2u);
        swift_slowDealloc();
      }

      uint64_t v34 = (uint64_t)v20;
LABEL_20:
      sub_100034564(v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_21;
    }
LABEL_13:
    uint64_t v41 = v52;
    sub_10015BEB8((uint64_t)v20, v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v42 = sub_10003B754((uint64_t *)&unk_10078E948);
    uint64_t v43 = *(int *)(v42 + 48);
    uint64_t v44 = v41;
    uint64_t v45 = v54;
    sub_10015BEB8(v44, v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)(v45 + v43) = v27;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v45, 0, 1, v42);
  }
LABEL_21:
  uint64_t v51 = sub_10003B754((uint64_t *)&unk_10078E948);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v54, 1, 1, v51);
}

uint64_t sub_100147228@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, char *a5@<X8>)
{
  int v162 = a4;
  LODWORD(v173) = a3;
  uint64_t v171 = a5;
  uint64_t v172 = a2;
  uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  int v155 = (char *)&v153 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v154 = (char *)&v153 - v9;
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v10 - 8);
  uint64_t v167 = (uint64_t)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10078EA08);
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v168 = (uint64_t)&v153 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v153 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v153 - v18;
  uint64_t v165 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v164 = *(void *)(v165 - 8);
  uint64_t v20 = __chkstk_darwin(v165);
  uint64_t v156 = (uint64_t)&v153 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v157 = (uint64_t)&v153 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v160 = (uint64_t)&v153 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v158 = (uint64_t)&v153 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v159 = (uint64_t)&v153 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v163 = (uint64_t)&v153 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v166 = (uint64_t)&v153 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v36 = (char *)&v153 - v35;
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v161 = (uint64_t)&v153 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v41 = (char *)&v153 - v40;
  uint64_t v42 = __chkstk_darwin(v39);
  uint64_t v44 = (char *)&v153 - v43;
  uint64_t v45 = __chkstk_darwin(v42);
  uint64_t v47 = (char *)&v153 - v46;
  uint64_t v48 = __chkstk_darwin(v45);
  uint64_t v50 = (char *)&v153 - v49;
  __chkstk_darwin(v48);
  uint64_t v169 = a1;
  uint64_t v170 = (uint64_t)&v153 - v51;
  sub_10014B1A8(a1, v172, (BOOL)v173, (uint64_t)v19);
  int64_t v173 = v19;
  sub_10003B694((uint64_t)v19, (uint64_t)v17, &qword_10078EA08);
  uint64_t v172 = v12;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10015BEB8((uint64_t)v17, (uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_100089354();
      uint64_t v65 = sub_100091FDC((uint64_t)v41, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v65)
      {
        uint64_t Strong = swift_weakLoadStrong();
        swift_release();
        if (Strong)
        {
          uint64_t v67 = Strong + *(void *)(*(void *)Strong + 144);
          swift_beginAccess();
          sub_10015BF20(v67, (uint64_t)v36, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_release();
          uint64_t v68 = (uint64_t)v36;
          uint64_t v69 = v161;
          sub_10015BEB8(v68, v161, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v70 = sub_100370220((uint64_t)v41);
          if ((v71 & 1) == 0)
          {
            uint64_t v60 = v70;
            sub_100034564((uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            goto LABEL_20;
          }
          sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        }
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v131 = type metadata accessor for Logger();
      sub_100018BF8(v131, (uint64_t)qword_10078DE60);
      uint64_t v132 = Logger.logObject.getter();
      os_log_type_t v133 = static os_log_type_t.fault.getter();
      BOOL v134 = os_log_type_enabled(v132, v133);
      uint64_t v135 = v171;
      uint64_t v136 = (uint64_t)v173;
      if (v134)
      {
        unint64_t v137 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v137 = 0;
        _os_log_impl((void *)&_mh_execute_header, v132, v133, "Missing parent/childIndex", v137, 2u);
        swift_slowDealloc();
      }

      sub_100034564((uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v138 = v136;
      goto LABEL_63;
    case 2u:
      uint64_t v69 = v166;
      sub_10015BEB8((uint64_t)v17, v166, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v72 = (char *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v73 = v167;
      sub_10015BF20(v69, v167, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v164 + 56))(v73, 0, 1, v165);
      uint64_t v74 = *(void **)&v72[qword_1007A59F0];
      if (!v74)
      {
        __break(1u);
        JUMPOUT(0x10014869CLL);
      }
      id v75 = v74;
      uint64_t v60 = sub_100370A04(v73);
      char v77 = v76;

      sub_10003B6F8(v73, (uint64_t *)&unk_100788D10);
      uint64_t v59 = v170;
      if ((v77 & 1) == 0)
      {
        uint64_t v50 = v171;
        goto LABEL_21;
      }
      uint64_t v111 = v171;
      uint64_t v112 = (uint64_t)v173;
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v113 = type metadata accessor for Logger();
      sub_100018BF8(v113, (uint64_t)qword_10078DE60);
      unint64_t v114 = Logger.logObject.getter();
      os_log_type_t v115 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v114, v115))
      {
        uint64_t v116 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v116 = 0;
        _os_log_impl((void *)&_mh_execute_header, v114, v115, "Missing parent child count", v116, 2u);
        swift_slowDealloc();
      }

      sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_40;
    case 3u:
      uint64_t v78 = sub_100089354();
      uint64_t v79 = sub_1001347D0(v169, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v79)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v117 = type metadata accessor for Logger();
        sub_100018BF8(v117, (uint64_t)qword_10078DE60);
        uint64_t v118 = Logger.logObject.getter();
        os_log_type_t v119 = static os_log_type_t.fault.getter();
        BOOL v120 = os_log_type_enabled(v118, v119);
        uint64_t v111 = v171;
        uint64_t v112 = (uint64_t)v173;
        if (v120)
        {
          uint64_t v121 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v121 = 0;
          _os_log_impl((void *)&_mh_execute_header, v118, v119, "Unexpected: node not found at sourceIndexPath", v121, 2u);
          swift_slowDealloc();
        }

LABEL_40:
        uint64_t v122 = v112;
LABEL_50:
        sub_10003B6F8(v122, &qword_10078EA08);
        uint64_t v61 = sub_10003B754(&qword_100788F08);
        uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
        uint64_t v63 = v111;
        return v62(v63, 1, 1, v61);
      }
      uint64_t v80 = v79 + *(void *)(*(void *)v79 + 144);
      swift_beginAccess();
      uint64_t v81 = v163;
      sub_10015BF20(v80, v163, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_100089354();
      uint64_t v83 = sub_100091FDC(v81, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v83) {
        goto LABEL_58;
      }
      uint64_t v84 = swift_weakLoadStrong();
      swift_release();
      if (!v84) {
        goto LABEL_58;
      }
      uint64_t v85 = v84 + *(void *)(*(void *)v84 + 144);
      swift_beginAccess();
      uint64_t v86 = v85;
      uint64_t v87 = v158;
      sub_10015BF20(v86, v158, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release();
      uint64_t v69 = v159;
      sub_10015BEB8(v87, v159, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v88 = sub_100370220(v81);
      if (v89)
      {
        sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
LABEL_58:
        uint64_t v135 = v171;
        uint64_t v139 = (uint64_t)v173;
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v140 = type metadata accessor for Logger();
        sub_100018BF8(v140, (uint64_t)qword_10078DE60);
        uint64_t v141 = Logger.logObject.getter();
        os_log_type_t v142 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v141, v142))
        {
          Swift::Int v143 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::Int v143 = 0;
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "Unexpected: parent/childIndex not found for item to be moved", v143, 2u);
          swift_slowDealloc();
        }
        swift_release();

        sub_100034564(v81, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v138 = v139;
LABEL_63:
        sub_10003B6F8(v138, &qword_10078EA08);
        uint64_t v61 = sub_10003B754(&qword_100788F08);
        uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
        uint64_t v63 = v135;
        return v62(v63, 1, 1, v61);
      }
      uint64_t v60 = v88;
      sub_100034564(v81, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release();
LABEL_20:
      uint64_t v59 = v170;
      uint64_t v50 = v171;
LABEL_21:
      uint64_t v41 = v173;
      sub_10015BEB8(v69, v59, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
LABEL_22:
      uint64_t v90 = v168;
      sub_10003B694((uint64_t)v41, v168, &qword_10078EA08);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_10003B6F8((uint64_t)v41, &qword_10078EA08);
        uint64_t v91 = v90;
LABEL_42:
        sub_10003B6F8(v91, &qword_10078EA08);
        goto LABEL_43;
      }
      sub_10003B6F8(v90, &qword_10078EA08);
      if ((v162 & 1) == 0)
      {
        uint64_t v91 = (uint64_t)v41;
        goto LABEL_42;
      }
      uint64_t v92 = sub_100089354();
      uint64_t v93 = sub_1001347D0(v169, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v93)
      {
        int64_t v173 = (char *)v60;
        uint64_t v94 = v93 + *(void *)(*(void *)v93 + 144);
        swift_beginAccess();
        uint64_t v95 = v160;
        sub_10015BF20(v94, v160, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_100089354();
        uint64_t v97 = sub_100091FDC(v95, v96);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v97)
        {
          uint64_t v98 = swift_weakLoadStrong();
          swift_release();
          if (v98)
          {
            uint64_t v99 = v98 + *(void *)(*(void *)v98 + 144);
            swift_beginAccess();
            uint64_t v100 = v99;
            uint64_t v101 = v156;
            sub_10015BF20(v100, v156, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            swift_release();
            uint64_t v102 = v157;
            sub_10015BEB8(v101, v157, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            uint64_t v103 = v160;
            uint64_t v104 = sub_100370220(v160);
            if ((v105 & 1) == 0)
            {
              uint64_t v106 = v104;
              uint64_t v107 = (uint64_t)v154;
              TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
              uint64_t v108 = v102;
              uint64_t v109 = (uint64_t)v155;
              TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
              unsigned __int8 v110 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
              swift_release();
              sub_100034564(v109, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
              sub_100034564(v107, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
              sub_100034564(v108, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              sub_100034564(v103, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              sub_10003B6F8((uint64_t)v41, &qword_10078EA08);
              uint64_t v60 = (uint64_t)&v173[-(v110 & (v106 < (uint64_t)v173))];
LABEL_43:
              uint64_t v123 = sub_10003B754(&qword_100788F08);
              uint64_t v124 = *(int *)(v123 + 48);
              sub_10015BEB8(v59, (uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              *(void *)&v50[v124] = v60;
              return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v50, 0, 1, v123);
            }
            sub_100034564(v102, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          }
        }
        if (qword_1007852B8 != -1) {
LABEL_77:
        }
          swift_once();
        uint64_t v149 = type metadata accessor for Logger();
        sub_100018BF8(v149, (uint64_t)qword_10078DE60);
        int64_t v150 = Logger.logObject.getter();
        os_log_type_t v151 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v150, v151))
        {
          unint64_t v152 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v152 = 0;
          _os_log_impl((void *)&_mh_execute_header, v150, v151, "Unexpected: parent/childIndex not found for item to be moved", v152, 2u);
          swift_slowDealloc();
        }
        swift_release();

        sub_100034564(v160, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        sub_10003B6F8((uint64_t)v41, &qword_10078EA08);
        uint64_t v148 = v59;
      }
      else
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v144 = type metadata accessor for Logger();
        sub_100018BF8(v144, (uint64_t)qword_10078DE60);
        int64_t v145 = Logger.logObject.getter();
        os_log_type_t v146 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v145, v146))
        {
          uint64_t v147 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v147 = 0;
          _os_log_impl((void *)&_mh_execute_header, v145, v146, "Unexpected: node not found at sourceIndexPath", v147, 2u);
          swift_slowDealloc();
        }

        sub_10003B6F8((uint64_t)v41, &qword_10078EA08);
        uint64_t v148 = v59;
      }
      sub_100034564(v148, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v61 = sub_10003B754(&qword_100788F08);
      uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
      uint64_t v63 = v50;
      return v62(v63, 1, 1, v61);
    case 4u:
      sub_10003B6F8((uint64_t)v173, &qword_10078EA08);
      uint64_t v61 = sub_10003B754(&qword_100788F08);
      uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
      uint64_t v63 = v171;
      return v62(v63, 1, 1, v61);
    default:
      sub_10015BEB8((uint64_t)v17, (uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_100089354();
      uint64_t v53 = sub_100091FDC((uint64_t)v50, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v53) {
        goto LABEL_45;
      }
      uint64_t v54 = swift_weakLoadStrong();
      swift_release();
      if (!v54) {
        goto LABEL_45;
      }
      uint64_t v55 = v54 + *(void *)(*(void *)v54 + 144);
      swift_beginAccess();
      sub_10015BF20(v55, (uint64_t)v44, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_release();
      sub_10015BEB8((uint64_t)v44, (uint64_t)v47, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v56 = sub_100370220((uint64_t)v50);
      if (v57)
      {
        sub_100034564((uint64_t)v47, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
LABEL_45:
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v126 = type metadata accessor for Logger();
        sub_100018BF8(v126, (uint64_t)qword_10078DE60);
        uint64_t v127 = Logger.logObject.getter();
        os_log_type_t v128 = static os_log_type_t.fault.getter();
        BOOL v129 = os_log_type_enabled(v127, v128);
        uint64_t v111 = v171;
        if (v129)
        {
          uint64_t v130 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v130 = 0;
          _os_log_impl((void *)&_mh_execute_header, v127, v128, "Missing parent/childIndex", v130, 2u);
          swift_slowDealloc();
        }

        sub_100034564((uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v122 = (uint64_t)v173;
        goto LABEL_50;
      }
      uint64_t v58 = v56;
      sub_100034564((uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v59 = v170;
      sub_10015BEB8((uint64_t)v47, v170, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v60 = v58 + 1;
      if (!__OFADD__(v58, 1))
      {
        uint64_t v50 = v171;
        uint64_t v41 = v173;
        goto LABEL_22;
      }
      __break(1u);
      goto LABEL_77;
  }
}

uint64_t sub_1001486B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, int a4@<W3>, char *a5@<X8>)
{
  int v162 = a4;
  LODWORD(v173) = a3;
  uint64_t v171 = a5;
  uint64_t v172 = a2;
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v6 - 8);
  int v155 = (char *)&v153 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v154 = (char *)&v153 - v9;
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v167 = (uint64_t)&v153 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_10003B754(&qword_10078E958);
  __chkstk_darwin(v12);
  uint64_t v168 = (uint64_t)&v153 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v153 - v15;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v153 - v18;
  uint64_t v165 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v164 = *(void *)(v165 - 8);
  __chkstk_darwin(v165);
  uint64_t v156 = (uint64_t)&v153 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v157 = (uint64_t)&v153 - v22;
  __chkstk_darwin(v23);
  uint64_t v160 = (uint64_t)&v153 - v24;
  __chkstk_darwin(v25);
  uint64_t v158 = (uint64_t)&v153 - v26;
  __chkstk_darwin(v27);
  uint64_t v159 = (uint64_t)&v153 - v28;
  __chkstk_darwin(v29);
  uint64_t v163 = (uint64_t)&v153 - v30;
  __chkstk_darwin(v31);
  uint64_t v166 = (uint64_t)&v153 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v153 - v34;
  __chkstk_darwin(v36);
  uint64_t v161 = (uint64_t)&v153 - v37;
  __chkstk_darwin(v38);
  uint64_t v40 = (char *)&v153 - v39;
  __chkstk_darwin(v41);
  uint64_t v43 = (char *)&v153 - v42;
  __chkstk_darwin(v44);
  uint64_t v46 = (char *)&v153 - v45;
  __chkstk_darwin(v47);
  uint64_t v49 = (char *)&v153 - v48;
  __chkstk_darwin(v50);
  uint64_t v169 = a1;
  uint64_t v170 = (uint64_t)&v153 - v51;
  sub_10014C29C(a1, v172, (BOOL)v173, (uint64_t)v19);
  int64_t v173 = v19;
  sub_10003B694((uint64_t)v19, (uint64_t)v16, &qword_10078E958);
  uint64_t v172 = v12;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_10015BEB8((uint64_t)v16, (uint64_t)v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000890D8();
      uint64_t v65 = sub_100091DF0((uint64_t)v40, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v65)
      {
        uint64_t Strong = swift_weakLoadStrong();
        swift_release();
        if (Strong)
        {
          uint64_t v67 = Strong + *(void *)(*(void *)Strong + 144);
          swift_beginAccess();
          sub_10015BF20(v67, (uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_release();
          uint64_t v68 = (uint64_t)v35;
          uint64_t v69 = v161;
          sub_10015BEB8(v68, v161, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v70 = sub_100370274((uint64_t)v40);
          if ((v71 & 1) == 0)
          {
            uint64_t v60 = v70;
            sub_100034564((uint64_t)v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            goto LABEL_20;
          }
          sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        }
      }
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v131 = type metadata accessor for Logger();
      sub_100018BF8(v131, (uint64_t)qword_10078DE60);
      uint64_t v132 = Logger.logObject.getter();
      os_log_type_t v133 = static os_log_type_t.fault.getter();
      BOOL v134 = os_log_type_enabled(v132, v133);
      uint64_t v135 = v171;
      uint64_t v136 = (uint64_t)v173;
      if (v134)
      {
        unint64_t v137 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v137 = 0;
        _os_log_impl((void *)&_mh_execute_header, v132, v133, "Missing parent/childIndex", v137, 2u);
        swift_slowDealloc();
      }

      sub_100034564((uint64_t)v40, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v138 = v136;
      goto LABEL_63;
    case 2u:
      uint64_t v69 = v166;
      sub_10015BEB8((uint64_t)v16, v166, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v72 = (char *)swift_unknownObjectUnownedLoadStrong();
      uint64_t v73 = v167;
      sub_10015BF20(v69, v167, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v164 + 56))(v73, 0, 1, v165);
      uint64_t v74 = *(void **)&v72[qword_1007A59F0];
      if (!v74)
      {
        __break(1u);
        JUMPOUT(0x100149B24);
      }
      id v75 = v74;
      uint64_t v60 = sub_100370DE8(v73);
      char v77 = v76;

      sub_10003B6F8(v73, (uint64_t *)&unk_100788DC0);
      uint64_t v59 = v170;
      if ((v77 & 1) == 0)
      {
        uint64_t v49 = v171;
        goto LABEL_21;
      }
      uint64_t v111 = v171;
      uint64_t v112 = (uint64_t)v173;
      if (qword_1007852B8 != -1) {
        swift_once();
      }
      uint64_t v113 = type metadata accessor for Logger();
      sub_100018BF8(v113, (uint64_t)qword_10078DE60);
      unint64_t v114 = Logger.logObject.getter();
      os_log_type_t v115 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v114, v115))
      {
        uint64_t v116 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v116 = 0;
        _os_log_impl((void *)&_mh_execute_header, v114, v115, "Missing parent child count", v116, 2u);
        swift_slowDealloc();
      }

      sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_40;
    case 3u:
      uint64_t v78 = sub_1000890D8();
      uint64_t v79 = sub_1001347D0(v169, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v79)
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v117 = type metadata accessor for Logger();
        sub_100018BF8(v117, (uint64_t)qword_10078DE60);
        uint64_t v118 = Logger.logObject.getter();
        os_log_type_t v119 = static os_log_type_t.fault.getter();
        BOOL v120 = os_log_type_enabled(v118, v119);
        uint64_t v111 = v171;
        uint64_t v112 = (uint64_t)v173;
        if (v120)
        {
          uint64_t v121 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v121 = 0;
          _os_log_impl((void *)&_mh_execute_header, v118, v119, "Unexpected: node not found at sourceIndexPath", v121, 2u);
          swift_slowDealloc();
        }

LABEL_40:
        uint64_t v122 = v112;
LABEL_50:
        sub_10003B6F8(v122, &qword_10078E958);
        uint64_t v61 = sub_10003B754((uint64_t *)&unk_10078E948);
        uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
        uint64_t v63 = v111;
        return v62(v63, 1, 1, v61);
      }
      uint64_t v80 = v79 + *(void *)(*(void *)v79 + 144);
      swift_beginAccess();
      uint64_t v81 = v163;
      sub_10015BF20(v80, v163, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000890D8();
      uint64_t v83 = sub_100091DF0(v81, v82);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v83) {
        goto LABEL_58;
      }
      uint64_t v84 = swift_weakLoadStrong();
      swift_release();
      if (!v84) {
        goto LABEL_58;
      }
      uint64_t v85 = v84 + *(void *)(*(void *)v84 + 144);
      swift_beginAccess();
      uint64_t v86 = v85;
      uint64_t v87 = v158;
      sub_10015BF20(v86, v158, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      uint64_t v69 = v159;
      sub_10015BEB8(v87, v159, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v88 = sub_100370274(v81);
      if (v89)
      {
        sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_58:
        uint64_t v135 = v171;
        uint64_t v139 = (uint64_t)v173;
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v140 = type metadata accessor for Logger();
        sub_100018BF8(v140, (uint64_t)qword_10078DE60);
        uint64_t v141 = Logger.logObject.getter();
        os_log_type_t v142 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v141, v142))
        {
          Swift::Int v143 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::Int v143 = 0;
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "Unexpected: parent/childIndex not found for item to be moved", v143, 2u);
          swift_slowDealloc();
        }
        swift_release();

        sub_100034564(v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v138 = v139;
LABEL_63:
        sub_10003B6F8(v138, &qword_10078E958);
        uint64_t v61 = sub_10003B754((uint64_t *)&unk_10078E948);
        uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
        uint64_t v63 = v135;
        return v62(v63, 1, 1, v61);
      }
      uint64_t v60 = v88;
      sub_100034564(v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
LABEL_20:
      uint64_t v59 = v170;
      uint64_t v49 = v171;
LABEL_21:
      uint64_t v40 = v173;
      sub_10015BEB8(v69, v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_22:
      uint64_t v90 = v168;
      sub_10003B694((uint64_t)v40, v168, &qword_10078E958);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_10003B6F8((uint64_t)v40, &qword_10078E958);
        uint64_t v91 = v90;
LABEL_42:
        sub_10003B6F8(v91, &qword_10078E958);
        goto LABEL_43;
      }
      sub_10003B6F8(v90, &qword_10078E958);
      if ((v162 & 1) == 0)
      {
        uint64_t v91 = (uint64_t)v40;
        goto LABEL_42;
      }
      uint64_t v92 = sub_1000890D8();
      uint64_t v93 = sub_1001347D0(v169, v92);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v93)
      {
        int64_t v173 = (char *)v60;
        uint64_t v94 = v93 + *(void *)(*(void *)v93 + 144);
        swift_beginAccess();
        uint64_t v95 = v160;
        sub_10015BF20(v94, v160, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_1000890D8();
        uint64_t v97 = sub_100091DF0(v95, v96);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v97)
        {
          uint64_t v98 = swift_weakLoadStrong();
          swift_release();
          if (v98)
          {
            uint64_t v99 = v98 + *(void *)(*(void *)v98 + 144);
            swift_beginAccess();
            uint64_t v100 = v99;
            uint64_t v101 = v156;
            sub_10015BF20(v100, v156, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            swift_release();
            uint64_t v102 = v157;
            sub_10015BEB8(v101, v157, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v103 = v160;
            uint64_t v104 = sub_100370274(v160);
            if ((v105 & 1) == 0)
            {
              uint64_t v106 = v104;
              uint64_t v107 = (uint64_t)v154;
              TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
              uint64_t v108 = v102;
              uint64_t v109 = (uint64_t)v155;
              TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
              unsigned __int8 v110 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
              swift_release();
              sub_100034564(v109, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
              sub_100034564(v107, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
              sub_100034564(v108, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_100034564(v103, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_10003B6F8((uint64_t)v40, &qword_10078E958);
              uint64_t v60 = (uint64_t)&v173[-(v110 & (v106 < (uint64_t)v173))];
LABEL_43:
              uint64_t v123 = sub_10003B754((uint64_t *)&unk_10078E948);
              uint64_t v124 = *(int *)(v123 + 48);
              sub_10015BEB8(v59, (uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              *(void *)&v49[v124] = v60;
              return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v49, 0, 1, v123);
            }
            sub_100034564(v102, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          }
        }
        if (qword_1007852B8 != -1) {
LABEL_77:
        }
          swift_once();
        uint64_t v149 = type metadata accessor for Logger();
        sub_100018BF8(v149, (uint64_t)qword_10078DE60);
        int64_t v150 = Logger.logObject.getter();
        os_log_type_t v151 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v150, v151))
        {
          unint64_t v152 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)unint64_t v152 = 0;
          _os_log_impl((void *)&_mh_execute_header, v150, v151, "Unexpected: parent/childIndex not found for item to be moved", v152, 2u);
          swift_slowDealloc();
        }
        swift_release();

        sub_100034564(v160, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10003B6F8((uint64_t)v40, &qword_10078E958);
        uint64_t v148 = v59;
      }
      else
      {
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v144 = type metadata accessor for Logger();
        sub_100018BF8(v144, (uint64_t)qword_10078DE60);
        int64_t v145 = Logger.logObject.getter();
        os_log_type_t v146 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v145, v146))
        {
          uint64_t v147 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v147 = 0;
          _os_log_impl((void *)&_mh_execute_header, v145, v146, "Unexpected: node not found at sourceIndexPath", v147, 2u);
          swift_slowDealloc();
        }

        sub_10003B6F8((uint64_t)v40, &qword_10078E958);
        uint64_t v148 = v59;
      }
      sub_100034564(v148, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v61 = sub_10003B754((uint64_t *)&unk_10078E948);
      uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
      uint64_t v63 = v49;
      return v62(v63, 1, 1, v61);
    case 4u:
      sub_10003B6F8((uint64_t)v173, &qword_10078E958);
      uint64_t v61 = sub_10003B754((uint64_t *)&unk_10078E948);
      uint64_t v62 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56);
      uint64_t v63 = v171;
      return v62(v63, 1, 1, v61);
    default:
      sub_10015BEB8((uint64_t)v16, (uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000890D8();
      uint64_t v53 = sub_100091DF0((uint64_t)v49, v52);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v53) {
        goto LABEL_45;
      }
      uint64_t v54 = swift_weakLoadStrong();
      swift_release();
      if (!v54) {
        goto LABEL_45;
      }
      uint64_t v55 = v54 + *(void *)(*(void *)v54 + 144);
      swift_beginAccess();
      sub_10015BF20(v55, (uint64_t)v43, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_release();
      sub_10015BEB8((uint64_t)v43, (uint64_t)v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v56 = sub_100370274((uint64_t)v49);
      if (v57)
      {
        sub_100034564((uint64_t)v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_45:
        if (qword_1007852B8 != -1) {
          swift_once();
        }
        uint64_t v126 = type metadata accessor for Logger();
        sub_100018BF8(v126, (uint64_t)qword_10078DE60);
        uint64_t v127 = Logger.logObject.getter();
        os_log_type_t v128 = static os_log_type_t.fault.getter();
        BOOL v129 = os_log_type_enabled(v127, v128);
        uint64_t v111 = v171;
        if (v129)
        {
          uint64_t v130 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v130 = 0;
          _os_log_impl((void *)&_mh_execute_header, v127, v128, "Missing parent/childIndex", v130, 2u);
          swift_slowDealloc();
        }

        sub_100034564((uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v122 = (uint64_t)v173;
        goto LABEL_50;
      }
      uint64_t v58 = v56;
      sub_100034564((uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v59 = v170;
      sub_10015BEB8((uint64_t)v46, v170, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v60 = v58 + 1;
      if (!__OFADD__(v58, 1))
      {
        uint64_t v49 = v171;
        uint64_t v40 = v173;
        goto LABEL_22;
      }
      __break(1u);
      goto LABEL_77;
  }
}

unint64_t sub_100149B38@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v41 = a2;
  uint64_t v42 = a1;
  uint64_t v45 = a4;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)v40 - v14;
  uint64_t v16 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for IndexPath();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a3, (uint64_t)v18, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v23 = &qword_10078E8F0;
    uint64_t v24 = (uint64_t)v18;
LABEL_3:
    sub_10003B6F8(v24, v23);
LABEL_18:
    sub_10003B754(&qword_10078EA18);
    return swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  v40[1] = v5;
  uint64_t v25 = sub_100089354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v25 + 16);
  swift_bridgeObjectRelease();
  uint64_t v27 = IndexPath.section.getter();
  if (v27 < 0 || v27 >= v26)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_18;
  }
  uint64_t v28 = sub_100089354();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v31 = IndexPath.section.getter();
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v31 >= *(void *)(v28 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v32 = v28 + 16 * v31;
  uint64_t v5 = *(void *)(v32 + 32);
  unint64_t v30 = *(void *)(v32 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!(v30 >> 62))
  {
    uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v33 < 0)
  {
    __break(1u);
LABEL_26:
    uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
LABEL_10:
  uint64_t v34 = IndexPath.row.getter();
  if (v34 < 0 || v34 >= v33)
  {
    int v38 = v41 & 1;
    uint64_t v39 = v5 + *(void *)(*(void *)v5 + 144);
    swift_beginAccess();
    sub_10015BF20(v39, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    sub_10014DEAC(v42, v38, (uint64_t)v13, (uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_release();
    sub_100034564((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v44) != 1)
    {
      sub_10015BEB8((uint64_t)v9, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_10015BEB8((uint64_t)v15, v45, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      goto LABEL_18;
    }
    uint64_t v23 = (uint64_t *)&unk_100788D10;
    uint64_t v24 = (uint64_t)v9;
    goto LABEL_3;
  }
  unint64_t result = IndexPath.row.getter();
  if ((v30 & 0xC000000000000001) != 0) {
    goto LABEL_26;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(void *)(v30 + 8 * result + 32);
    swift_retain();
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v37 = v36 + *(void *)(*(void *)v36 + 144);
    swift_beginAccess();
    sub_10015BF20(v37, v45, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

unint64_t sub_10014A0C8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v41 = a2;
  uint64_t v42 = a1;
  uint64_t v45 = a4;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v40 - v14;
  uint64_t v16 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for IndexPath();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a3, (uint64_t)v18, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v23 = &qword_10078E8F0;
    uint64_t v24 = (uint64_t)v18;
LABEL_3:
    sub_10003B6F8(v24, v23);
LABEL_18:
    sub_10003B754((uint64_t *)&unk_10078E970);
    return swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
  v40[1] = v5;
  uint64_t v25 = sub_1000890D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void *)(v25 + 16);
  swift_bridgeObjectRelease();
  uint64_t v27 = IndexPath.section.getter();
  if (v27 < 0 || v27 >= v26)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    goto LABEL_18;
  }
  uint64_t v28 = sub_1000890D8();
  unint64_t v30 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v31 = IndexPath.section.getter();
  if ((v31 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v31 >= *(void *)(v28 + 16))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v32 = v28 + 16 * v31;
  uint64_t v5 = *(void *)(v32 + 32);
  unint64_t v30 = *(void *)(v32 + 40);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (!(v30 >> 62))
  {
    uint64_t v33 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v33 < 0)
  {
    __break(1u);
LABEL_26:
    uint64_t v36 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
LABEL_10:
  uint64_t v34 = IndexPath.row.getter();
  if (v34 < 0 || v34 >= v33)
  {
    int v38 = v41 & 1;
    uint64_t v39 = v5 + *(void *)(*(void *)v5 + 144);
    swift_beginAccess();
    sub_10015BF20(v39, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_10014E338(v42, v38, (uint64_t)v12, (uint64_t)v9);
    swift_bridgeObjectRelease();
    swift_release();
    sub_100034564((uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v9, 1, v44) != 1)
    {
      sub_10015BEB8((uint64_t)v9, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10015BEB8((uint64_t)v15, v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      goto LABEL_18;
    }
    uint64_t v23 = (uint64_t *)&unk_100788DC0;
    uint64_t v24 = (uint64_t)v9;
    goto LABEL_3;
  }
  unint64_t result = IndexPath.row.getter();
  if ((v30 & 0xC000000000000001) != 0) {
    goto LABEL_26;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v36 = *(void *)(v30 + 8 * result + 32);
    swift_retain();
LABEL_16:
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    uint64_t v37 = v36 + *(void *)(*(void *)v36 + 144);
    swift_beginAccess();
    sub_10015BF20(v37, v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_release();
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

unint64_t sub_10014A658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (unint64_t)&qword_10078E8F0;
  uint64_t v13 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v15, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    uint64_t v41 = a2;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    uint64_t v20 = sub_100089354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    uint64_t v22 = IndexPath.section.getter();
    if (v22 < 0 || v22 >= v21)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      a2 = v41;
      goto LABEL_19;
    }
    uint64_t v23 = sub_100089354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v24 = IndexPath.section.getter();
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(void *)(v23 + 16))
    {
      v40[1] = v3;
      unint64_t v12 = *(void *)(v23 + 16 * v24 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (!(v12 >> 62))
      {
        uint64_t v25 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_9;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v25 < 0)
      {
        __break(1u);
        goto LABEL_27;
      }
LABEL_9:
      a2 = v41;
      uint64_t v26 = IndexPath.row.getter();
      if (v26 < 0 || v26 >= v25)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_19;
      }
      unint64_t result = IndexPath.row.getter();
      if ((v12 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v28 = *(void *)(v12 + 8 * result + 32);
          swift_retain();
LABEL_15:
          uint64_t v29 = v28 + *(void *)(*(void *)v28 + 144);
          swift_beginAccess();
          sub_10015BF20(v29, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_release();
          sub_10015BF20((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v8, 0, 1, v43);
          uint64_t v30 = sub_100370A04((uint64_t)v8);
          char v32 = v31;
          swift_bridgeObjectRelease();
          swift_release();
          sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788D10);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
          if ((v32 & 1) == 0)
          {
            uint64_t v33 = sub_10003B754(&qword_100788F08);
            uint64_t v34 = *(int *)(v33 + 48);
            uint64_t v35 = (uint64_t)v11;
            uint64_t v36 = v41;
            sub_10015BEB8(v35, v41, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            *(void *)(v36 + v34) = v30;
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v36, 0, 1, v33);
          }
          sub_100034564((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v37 = sub_10003B754(&qword_100788F08);
          int v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
          uint64_t v39 = v41;
          return v38(v39, 1, 1, v37);
        }
        __break(1u);
        return result;
      }
LABEL_27:
      uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_25;
  }
  sub_10003B6F8((uint64_t)v15, &qword_10078E8F0);
LABEL_19:
  uint64_t v37 = sub_10003B754(&qword_100788F08);
  int v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  uint64_t v39 = a2;
  return v38(v39, 1, 1, v37);
}

unint64_t sub_10014AC00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (unint64_t)&qword_10078E8F0;
  uint64_t v13 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IndexPath();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v15, &qword_10078E8F0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
  {
    uint64_t v41 = a2;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v15, v16);
    uint64_t v20 = sub_1000890D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v20 + 16);
    swift_bridgeObjectRelease();
    uint64_t v22 = IndexPath.section.getter();
    if (v22 < 0 || v22 >= v21)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
      a2 = v41;
      goto LABEL_19;
    }
    uint64_t v23 = sub_1000890D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v24 = IndexPath.section.getter();
    if ((v24 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v24 < *(void *)(v23 + 16))
    {
      v40[1] = v3;
      unint64_t v12 = *(void *)(v23 + 16 * v24 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (!(v12 >> 62))
      {
        uint64_t v25 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
        goto LABEL_9;
      }
LABEL_25:
      swift_bridgeObjectRetain();
      uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v25 < 0)
      {
        __break(1u);
        goto LABEL_27;
      }
LABEL_9:
      a2 = v41;
      uint64_t v26 = IndexPath.row.getter();
      if (v26 < 0 || v26 >= v25)
      {
        (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_19;
      }
      unint64_t result = IndexPath.row.getter();
      if ((v12 & 0xC000000000000001) == 0)
      {
        if ((result & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (result < *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          uint64_t v28 = *(void *)(v12 + 8 * result + 32);
          swift_retain();
LABEL_15:
          uint64_t v29 = v28 + *(void *)(*(void *)v28 + 144);
          swift_beginAccess();
          sub_10015BF20(v29, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_release();
          sub_10015BF20((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v8, 0, 1, v43);
          uint64_t v30 = sub_100370DE8((uint64_t)v8);
          char v32 = v31;
          swift_bridgeObjectRelease();
          swift_release();
          sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
          (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
          if ((v32 & 1) == 0)
          {
            uint64_t v33 = sub_10003B754((uint64_t *)&unk_10078E948);
            uint64_t v34 = *(int *)(v33 + 48);
            uint64_t v35 = (uint64_t)v11;
            uint64_t v36 = v41;
            sub_10015BEB8(v35, v41, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            *(void *)(v36 + v34) = v30;
            return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v36, 0, 1, v33);
          }
          sub_100034564((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v37 = sub_10003B754((uint64_t *)&unk_10078E948);
          int v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
          uint64_t v39 = v41;
          return v38(v39, 1, 1, v37);
        }
        __break(1u);
        return result;
      }
LABEL_27:
      uint64_t v28 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_15;
    }
    __break(1u);
    goto LABEL_25;
  }
  sub_10003B6F8((uint64_t)v15, &qword_10078E8F0);
LABEL_19:
  uint64_t v37 = sub_10003B754((uint64_t *)&unk_10078E948);
  int v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56);
  uint64_t v39 = a2;
  return v38(v39, 1, 1, v37);
}

uint64_t sub_10014B1A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, BOOL a3@<W2>, uint64_t a4@<X8>)
{
  BOOL v116 = a3;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_100788D10);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v114 = (uint64_t)v104 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v104 - v12;
  __chkstk_darwin(v11);
  uint64_t v111 = (uint64_t)v104 - v14;
  uint64_t v15 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v118 = (char *)v104 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  os_log_type_t v119 = (char *)v104 - v18;
  uint64_t v117 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v115 = *(void *)(v117 - 8);
  uint64_t v19 = __chkstk_darwin(v117);
  uint64_t v112 = (uint64_t)v104 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v113 = (void (*)(void, uint64_t))((char *)v104 - v22);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v110 = (uint64_t)v104 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)v104 - v26;
  __chkstk_darwin(v25);
  uint64_t v121 = (uint64_t)v104 - v28;
  uint64_t v126 = sub_10003B754(&qword_10078EA08);
  __chkstk_darwin(v126);
  uint64_t v122 = (uint64_t)v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = type metadata accessor for IndexPath();
  uint64_t v30 = *(void *)(v124 - 8);
  uint64_t v31 = __chkstk_darwin(v124);
  uint64_t v33 = (char *)v104 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v35 = (char *)v104 - v34;
  uint64_t v125 = v4;
  uint64_t v36 = sub_100089354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = *(void *)(v36 + 16);
  swift_bridgeObjectRelease();
  uint64_t v38 = IndexPath.section.getter();
  if (v38 < 0) {
    goto LABEL_12;
  }
  if (v38 >= v37) {
    goto LABEL_12;
  }
  uint64_t v39 = sub_100089354();
  BOOL v120 = (void (*)(void, void))v35;
  uint64_t v123 = a4;
  uint64_t v40 = sub_1001347D0(a1, v39);
  swift_bridgeObjectRelease();
  uint64_t v41 = v120;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_12;
  }
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1007852B8 == -1) {
      goto LABEL_16;
    }
    goto LABEL_46;
  }
  v104[1] = v40 + 56;
  uint64_t v108 = v40;
  uint64_t v43 = *(void *)(Strong + 16);
  swift_release();
  uint64_t v44 = sub_100089354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v45 = IndexPath.section.getter();
  if ((v45 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v105 = v43;
    if (v45 < *(void *)(v44 + 16))
    {
      unint64_t v46 = v44 + 16 * v45;
      unint64_t v47 = *(void *)(v46 + 40);
      uint64_t v107 = *(void *)(v46 + 32);
      swift_retain();
      unint64_t v109 = v47;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v48 = v30;
      uint64_t v106 = *(void (**)(void (*)(void, void), uint64_t, uint64_t))(v30 + 16);
      v106(v41, a2, v124);
      uint64_t v49 = IndexPath.section.getter();
      if (v49 == IndexPath.section.getter())
      {
        uint64_t v50 = IndexPath.row.getter();
        uint64_t v51 = IndexPath.row.getter();
        BOOL v52 = v50 < v51;
        if (v50 < v51)
        {
          unint64_t v53 = v109;
          if (v116)
          {
            uint64_t v54 = (void (*)(char *, void))IndexPath.row.modify();
            if (__OFADD__(*v55, 1))
            {
              __break(1u);
LABEL_48:
              swift_once();
LABEL_28:
              uint64_t v74 = type metadata accessor for Logger();
              sub_100018BF8(v74, (uint64_t)qword_10078DE60);
              id v75 = Logger.logObject.getter();
              os_log_type_t v76 = static os_log_type_t.fault.getter();
              if (os_log_type_enabled(v75, v76))
              {
                char v77 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)char v77 = 0;
                _os_log_impl((void *)&_mh_execute_header, v75, v76, "Failed to lookup node given a valid destinationIndexPath", v77, 2u);
                swift_slowDealloc();
              }
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();

              ((void (*)(void, uint64_t))v13)(v120, v30);
              return swift_storeEnumTagMultiPayload();
            }
            ++*v55;
            v54(v127, 0);
            BOOL v52 = 1;
          }
LABEL_20:
          BOOL v116 = v52;
          if (!(v53 >> 62))
          {
            uint64_t v61 = *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10);
            uint64_t v62 = IndexPath.row.getter();
            uint64_t v30 = v124;
            if (v62 < 0) {
              goto LABEL_50;
            }
            goto LABEL_22;
          }
          goto LABEL_44;
        }
      }
      else
      {
        BOOL v52 = 0;
      }
      unint64_t v53 = v109;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_44:
  swift_bridgeObjectRetain();
  uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v62 = IndexPath.row.getter();
  if ((v61 & 0x8000000000000000) == 0)
  {
    uint64_t v48 = v30;
    uint64_t v41 = v120;
    uint64_t v30 = v124;
    if (v62 < 0) {
      goto LABEL_50;
    }
LABEL_22:
    if (v62 < v61)
    {
      uint64_t v63 = sub_100089354();
      v106((void (*)(void, void))v33, (uint64_t)v41, v30);
      uint64_t v64 = sub_1001347D0(v33, v63);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v66 = *(char **)(v48 + 8);
      uint64_t v65 = v48 + 8;
      uint64_t v13 = v66;
      ((void (*)(char *, uint64_t))v66)(v33, v30);
      if (v64)
      {
        uint64_t v113 = (void (*)(void, uint64_t))v13;
        uint64_t v105 = v65;
        uint64_t v67 = v64 + *(void *)(*(void *)v64 + 144);
        swift_beginAccess();
        uint64_t v68 = v121;
        sub_10015BF20(v67, v121, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v114 = v64;
        uint64_t v69 = (uint64_t)v119;
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100034564(v68, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v70 = v108 + *(void *)(*(void *)v108 + 144);
        swift_beginAccess();
        sub_10015BF20(v70, (uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v71 = (uint64_t)v118;
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100034564((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        char v72 = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
        sub_100034564(v71, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_100034564(v69, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        if (v72)
        {
          v113(v120, v30);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          uint64_t v73 = v122;
LABEL_56:
          swift_storeEnumTagMultiPayload();
          goto LABEL_57;
        }
        uint64_t v78 = v114;
        uint64_t v73 = v122;
        sub_10015BF20(v67, v122, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_storeEnumTagMultiPayload();
        if (v116)
        {
          uint64_t v79 = swift_weakLoadStrong();
          uint64_t v80 = v108;
          if (v79)
          {
            uint64_t v81 = *(void *)(v79 + 16);
            swift_release();
            if (*(unsigned char *)(v80 + 32))
            {
              v113(v120, v124);
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_57;
            }
            if ((*(unsigned char *)(v78 + 32) & 1) == 0 && *(void *)(v78 + 24) < *(void *)(v80 + 24))
            {
              uint64_t v82 = v124;
              v106((void (*)(void, void))v33, (uint64_t)v120, v124);
              uint64_t v83 = v111;
              sub_10014E7B4(v81, v111);
              swift_release();
              swift_bridgeObjectRelease();
              swift_release();
              swift_release();
              uint64_t v84 = v113;
              v113(v33, v82);
              v84(v120, v82);
              if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v83, 1, v117) != 1)
              {
                sub_10003B6F8(v73, &qword_10078EA08);
                uint64_t v85 = v110;
                sub_10015BEB8(v83, v110, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                sub_10015BEB8(v85, v73, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
                goto LABEL_56;
              }
              sub_10003B6F8(v83, (uint64_t *)&unk_100788D10);
LABEL_57:
              uint64_t v97 = v123;
              return sub_100028C3C(v73, v97, &qword_10078EA08);
            }
          }
        }
        v113(v120, v124);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        goto LABEL_57;
      }
      if (qword_1007852B8 == -1) {
        goto LABEL_28;
      }
      goto LABEL_48;
    }
LABEL_50:
    if (v61 == v62)
    {
      v106((void (*)(void, void))v33, (uint64_t)v41, v30);
      sub_10014E7B4(v105, (uint64_t)v13);
      uint64_t v86 = *(void (**)(void, void))(v48 + 8);
      uint64_t v105 = v48 + 8;
      BOOL v120 = v86;
      v86(v33, v30);
      uint64_t v87 = v115;
      uint64_t v88 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 48);
      char v89 = v41;
      if (v88((uint64_t)v13, 1, v117) == 1)
      {
        sub_10003B6F8((uint64_t)v13, (uint64_t *)&unk_100788D10);
        sub_10003B754(&qword_10078EA10);
        unint64_t v90 = (*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80);
        uint64_t v91 = swift_allocObject();
        *(_OWORD *)(v91 + 16) = xmmword_10066C6F0;
        uint64_t v92 = v108 + *(void *)(*(void *)v108 + 144);
        swift_beginAccess();
        sub_10015BF20(v92, v91 + v90, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v93 = v107 + *(void *)(*(void *)v107 + 144);
        swift_beginAccess();
        uint64_t v94 = v121;
        sub_10015BF20(v93, v121, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v95 = v114;
        sub_10014DEAC(v91, 0, v94, v114);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        sub_100034564(v94, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        v120(v89, v124);
        int v96 = v88(v95, 1, v117);
        uint64_t v97 = v123;
        if (v96 == 1)
        {
          sub_10003B6F8(v95, (uint64_t *)&unk_100788D10);
          uint64_t v73 = v122;
        }
        else
        {
          uint64_t v103 = v112;
          sub_10015BEB8(v95, v112, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v73 = v122;
          sub_10015BEB8(v103, v122, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        }
      }
      else
      {
        uint64_t v98 = v113;
        sub_10015BEB8((uint64_t)v13, (uint64_t)v113, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v99 = (uint64_t)v119;
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        uint64_t v100 = v108 + *(void *)(*(void *)v108 + 144);
        swift_beginAccess();
        uint64_t v101 = v121;
        sub_10015BF20(v100, v121, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v102 = (uint64_t)v118;
        TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
        sub_100034564(v101, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        LOBYTE(v100) = static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_100034564(v102, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        sub_100034564(v99, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        v120(v41, v124);
        uint64_t v97 = v123;
        if (v100)
        {
          sub_100034564((uint64_t)v98, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v73 = v122;
        }
        else
        {
          uint64_t v73 = v122;
          sub_10015BEB8((uint64_t)v98, v122, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        }
      }
      swift_storeEnumTagMultiPayload();
      return sub_100028C3C(v73, v97, &qword_10078EA08);
    }
    (*(void (**)(void, uint64_t))(v48 + 8))(v41, v30);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v73 = v122;
    goto LABEL_56;
  }
  __break(1u);
LABEL_46:
  swift_once();
LABEL_16:
  uint64_t v57 = type metadata accessor for Logger();
  sub_100018BF8(v57, (uint64_t)qword_10078DE60);
  uint64_t v58 = Logger.logObject.getter();
  os_log_type_t v59 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v58, v59))
  {
    uint64_t v60 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v60 = 0;
    _os_log_impl((void *)&_mh_execute_header, v58, v59, "section node cannot be moved", v60, 2u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
LABEL_12:

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10014C29C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL a3@<W2>, uint64_t a4@<X8>)
{
  BOOL v109 = a3;
  uint64_t v120 = a4;
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v7 - 8);
  uint64_t v111 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v112 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v99 - v10);
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v11 - 8);
  uint64_t v105 = (uint64_t)&v99 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v107 = (void (*)(char *, char *))((char *)&v99 - v14);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v99 - v16;
  uint64_t v110 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v108 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v104 = (uint64_t)&v99 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v99 - v20;
  __chkstk_darwin(v22);
  uint64_t v106 = (void (*)(char *, char *, char *))((char *)&v99 - v23);
  __chkstk_darwin(v24);
  uint64_t v113 = (uint64_t)&v99 - v25;
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v99 - v27;
  uint64_t v119 = sub_10003B754(&qword_10078E958);
  __chkstk_darwin(v119);
  uint64_t v115 = (uint64_t)&v99 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for IndexPath();
  uint64_t v31 = *(void *)(v30 - 8);
  BOOL v116 = (char *)v30;
  uint64_t v117 = v31;
  __chkstk_darwin(v30);
  uint64_t v33 = (char *)&v99 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  uint64_t v36 = (char *)&v99 - v35;
  uint64_t v118 = v4;
  uint64_t v37 = sub_1000890D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v37 + 16);
  swift_bridgeObjectRelease();
  uint64_t v39 = IndexPath.section.getter();
  if (v39 < 0) {
    goto LABEL_12;
  }
  if (v39 >= v38) {
    goto LABEL_12;
  }
  uint64_t v40 = sub_1000890D8();
  uint64_t v114 = v36;
  uint64_t v41 = sub_1001347D0(a1, v40);
  swift_bridgeObjectRelease();
  uint64_t v42 = v114;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v41) {
    goto LABEL_12;
  }
  uint64_t v43 = v41 + 56;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1007852B8 == -1) {
      goto LABEL_16;
    }
    goto LABEL_45;
  }
  uint64_t v102 = v41;
  uint64_t v100 = *(void *)(Strong + 16);
  swift_release();
  uint64_t v45 = sub_1000890D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v46 = IndexPath.section.getter();
  if ((v46 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v99 = v43;
    if (v46 < *(void *)(v45 + 16))
    {
      unint64_t v47 = v45 + 16 * v46;
      unint64_t v48 = *(void *)(v47 + 40);
      uint64_t v101 = *(void *)(v47 + 32);
      swift_retain();
      unint64_t v103 = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v49 = (void (*)(void, void, void))a2;
      a2 = *(void **)(v117 + 16);
      ((void (*)(char *, void, char *))a2)(v42, v49, v116);
      uint64_t v50 = IndexPath.section.getter();
      if (v50 == IndexPath.section.getter())
      {
        uint64_t v51 = IndexPath.row.getter();
        uint64_t v52 = IndexPath.row.getter();
        BOOL v53 = v51 < v52;
        if (v51 < v52 && v109)
        {
          uint64_t v54 = (void (*)(char *, char *))v121;
          uint64_t v55 = (void (*)(unsigned char *, void))IndexPath.row.modify();
          if (__OFADD__(*v56, 1))
          {
            __break(1u);
LABEL_47:
            swift_once();
LABEL_27:
            uint64_t v71 = type metadata accessor for Logger();
            sub_100018BF8(v71, (uint64_t)qword_10078DE60);
            char v72 = Logger.logObject.getter();
            os_log_type_t v73 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v72, v73))
            {
              uint64_t v74 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v74 = 0;
              _os_log_impl((void *)&_mh_execute_header, v72, v73, "Failed to lookup node given a valid destinationIndexPath", v74, 2u);
              swift_slowDealloc();
            }
            swift_release();
            swift_bridgeObjectRelease();
            swift_release();

            v54(v114, v28);
            return swift_storeEnumTagMultiPayload();
          }
          ++*v56;
          v55(v121, 0);
          BOOL v53 = 1;
        }
      }
      else
      {
        BOOL v53 = 0;
      }
      BOOL v109 = v53;
      if (!(v103 >> 62))
      {
        uint64_t v62 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v63 = IndexPath.row.getter();
        if (v63 < 0) {
          goto LABEL_49;
        }
        goto LABEL_21;
      }
      goto LABEL_43;
    }
  }
  __break(1u);
LABEL_43:
  swift_bridgeObjectRetain();
  uint64_t v62 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  uint64_t v63 = IndexPath.row.getter();
  if ((v62 & 0x8000000000000000) == 0)
  {
    uint64_t v42 = v114;
    if (v63 < 0) {
      goto LABEL_49;
    }
LABEL_21:
    if (v63 < v62)
    {
      uint64_t v64 = sub_1000890D8();
      uint64_t v28 = v116;
      ((void (*)(char *, char *, char *))a2)(v33, v42, v116);
      uint64_t v65 = sub_1001347D0(v33, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = *(void (**)(char *, char *))(v117 + 8);
      v117 += 8;
      v54(v33, v28);
      if (v65)
      {
        uint64_t v107 = v54;
        uint64_t v106 = (void (*)(char *, char *, char *))a2;
        uint64_t v66 = v65 + *(void *)(*(void *)v65 + 144);
        swift_beginAccess();
        uint64_t v67 = v113;
        sub_10015BF20(v66, v113, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v68 = (uint64_t)v112;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100034564(v67, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v69 = v102 + *(void *)(*(void *)v102 + 144);
        swift_beginAccess();
        sub_10015BF20(v69, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v113 = v65;
        uint64_t v70 = (uint64_t)v111;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100034564((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        LOBYTE(v69) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
        sub_100034564(v70, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_100034564(v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        if (v69)
        {
          v107(v114, v116);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
LABEL_57:
          uint64_t v77 = v115;
          goto LABEL_60;
        }
        uint64_t v75 = v113;
        uint64_t v76 = v66;
        uint64_t v77 = v115;
        sub_10015BF20(v76, v115, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_storeEnumTagMultiPayload();
        uint64_t v78 = v116;
        if (!v109) {
          goto LABEL_35;
        }
        uint64_t v79 = swift_weakLoadStrong();
        if (!v79) {
          goto LABEL_35;
        }
        uint64_t v80 = *(void *)(v79 + 16);
        swift_release();
        if (*(unsigned char *)(v102 + 32))
        {
          v107(v114, v78);
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          swift_release();
          return sub_100028C3C(v77, v120, &qword_10078E958);
        }
        if ((*(unsigned char *)(v75 + 32) & 1) != 0 || *(void *)(v75 + 24) >= *(void *)(v102 + 24))
        {
LABEL_35:
          v107(v114, v78);
          swift_release();
          swift_bridgeObjectRelease();
          swift_release();
          swift_release();
          return sub_100028C3C(v77, v120, &qword_10078E958);
        }
        uint64_t v81 = v114;
        v106(v33, v114, v78);
        uint64_t v82 = v105;
        sub_10014EA0C(v80, v105);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        uint64_t v83 = v107;
        v107(v33, v78);
        v83(v81, v78);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v82, 1, v110) == 1)
        {
          sub_10003B6F8(v82, (uint64_t *)&unk_100788DC0);
          return sub_100028C3C(v77, v120, &qword_10078E958);
        }
        sub_10003B6F8(v77, &qword_10078E958);
        uint64_t v84 = v104;
        sub_10015BEB8(v82, v104, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        sub_10015BEB8(v84, v77, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_60:
        swift_storeEnumTagMultiPayload();
        return sub_100028C3C(v77, v120, &qword_10078E958);
      }
      if (qword_1007852B8 == -1) {
        goto LABEL_27;
      }
      goto LABEL_47;
    }
LABEL_49:
    if (v62 == v63)
    {
      uint64_t v85 = v116;
      ((void (*)(char *, char *, char *))a2)(v33, v42, v116);
      sub_10014EA0C(v100, (uint64_t)v17);
      uint64_t v117 = *(void *)(v117 + 8);
      ((void (*)(char *, char *))v117)(v33, v85);
      uint64_t v86 = v108;
      uint64_t v87 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48);
      if (v87(v17, 1, v110) != 1)
      {
        sub_10015BEB8((uint64_t)v17, (uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v94 = (uint64_t)v112;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        uint64_t v95 = v102 + *(void *)(*(void *)v102 + 144);
        swift_beginAccess();
        uint64_t v96 = v113;
        sub_10015BF20(v95, v113, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v97 = (uint64_t)v111;
        TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
        sub_100034564(v96, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        LOBYTE(v95) = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        sub_100034564(v97, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        sub_100034564(v94, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        ((void (*)(char *, char *))v117)(v42, v85);
        if ((v95 & 1) == 0)
        {
          uint64_t v77 = v115;
          sub_10015BEB8((uint64_t)v28, v115, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          goto LABEL_60;
        }
        sub_100034564((uint64_t)v28, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_57;
      }
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_100788DC0);
      sub_10003B754((uint64_t *)&unk_10078E960);
      unint64_t v88 = (*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80);
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = xmmword_10066C6F0;
      uint64_t v90 = v102 + *(void *)(*(void *)v102 + 144);
      swift_beginAccess();
      uint64_t v112 = v87;
      sub_10015BF20(v90, v89 + v88, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v91 = v101 + *(void *)(*(void *)v101 + 144);
      swift_beginAccess();
      uint64_t v92 = v113;
      sub_10015BF20(v91, v113, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v93 = v107;
      sub_10014E338(v89, 0, v92, (uint64_t)v107);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      sub_100034564(v92, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      ((void (*)(char *, char *))v117)(v114, v85);
      if (v112((char *)v93, 1, v110) != 1)
      {
        uint64_t v98 = v106;
        sub_10015BEB8((uint64_t)v93, (uint64_t)v106, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v77 = v115;
        sub_10015BEB8((uint64_t)v98, v115, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        goto LABEL_60;
      }
      sub_10003B6F8((uint64_t)v93, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      (*(void (**)(char *, char *))(v117 + 8))(v42, v116);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
    uint64_t v77 = v115;
    goto LABEL_60;
  }
  __break(1u);
LABEL_45:
  swift_once();
LABEL_16:
  uint64_t v58 = type metadata accessor for Logger();
  sub_100018BF8(v58, (uint64_t)qword_10078DE60);
  os_log_type_t v59 = Logger.logObject.getter();
  os_log_type_t v60 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v59, v60))
  {
    uint64_t v61 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v61 = 0;
    _os_log_impl((void *)&_mh_execute_header, v59, v60, "section node cannot be moved", v61, 2u);
    swift_slowDealloc();
    swift_release();
  }
  else
  {

    swift_release();
  }
LABEL_12:

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_10014D31C@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  uint64_t v35 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v39 = (uint64_t)&v35 - v15;
  uint64_t v16 = sub_100089354();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = sub_100089354();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17 > *(void *)(v18 + 16))
    {
      __break(1u);
    }
    else
    {
      unint64_t v38 = a3;
      int v19 = a2 & 1;
      unint64_t v20 = v18 + 16 * (v17 - 1);
      uint64_t v22 = *(void *)(v20 + 32);
      unint64_t v21 = *(void *)(v20 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = v22 + *(void *)(*(void *)v22 + 144);
      swift_beginAccess();
      sub_10015BF20(v23, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      swift_retain();
      sub_10014DEAC(v40, v19, (uint64_t)v14, (uint64_t)v9);
      sub_100034564((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788D10);
        unint64_t v17 = v38;
LABEL_14:
        uint64_t v34 = sub_10003B754(qword_10078EA30);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v17, 1, 1, v34);
      }
      uint64_t v11 = v39;
      sub_10015BEB8((uint64_t)v9, v39, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_100089354();
      uint64_t v10 = sub_100091FDC(v11, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v17 = v38;
      if (!v10)
      {
        sub_100034564(v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_14;
      }
      if (!(v21 >> 62)) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v28 = v35;
    IndexPath.init(row:section:)();
    sub_10015BF20(v11, v17, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_beginAccess();
    unint64_t v29 = *(void *)(v10 + 64);
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release_n();
      swift_release();
    }
    uint64_t v31 = sub_10003B754(qword_10078EA30);
    uint64_t v32 = *(int *)(v31 + 48);
    uint64_t v33 = *(int *)(v31 + 64);
    swift_bridgeObjectRelease();
    sub_100034564(v11, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    *(void *)(v17 + v32) = v30;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v17 + v33, v28, v37);
    return (*(uint64_t (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v17, 0, 1, v31);
  }
  uint64_t v24 = sub_10003B754(qword_10078EA30);
  uint64_t v25 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);

  return v25(a3, 1, 1, v24);
}

uint64_t sub_10014D8E4@<X0>(uint64_t a1@<X0>, char a2@<W1>, unint64_t a3@<X8>)
{
  uint64_t v40 = a1;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v36 = *(void *)(v5 - 8);
  uint64_t v37 = v5;
  __chkstk_darwin(v5);
  uint64_t v35 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v39 = (uint64_t)&v35 - v15;
  uint64_t v16 = sub_1000890D8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v17 = *(void *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = sub_1000890D8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v17 > *(void *)(v18 + 16))
    {
      __break(1u);
    }
    else
    {
      unint64_t v38 = a3;
      int v19 = a2 & 1;
      unint64_t v20 = v18 + 16 * (v17 - 1);
      uint64_t v22 = *(void *)(v20 + 32);
      unint64_t v21 = *(void *)(v20 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v23 = v22 + *(void *)(*(void *)v22 + 144);
      swift_beginAccess();
      sub_10015BF20(v23, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      swift_retain();
      sub_10014E338(v40, v19, (uint64_t)v13, (uint64_t)v9);
      sub_100034564((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        swift_bridgeObjectRelease();
        swift_release_n();
        sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
        unint64_t v17 = v38;
LABEL_14:
        uint64_t v34 = sub_10003B754((uint64_t *)&unk_10078E9A0);
        return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v17, 1, 1, v34);
      }
      uint64_t v11 = v39;
      sub_10015BEB8((uint64_t)v9, v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_1000890D8();
      uint64_t v10 = sub_100091DF0(v11, v27);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v17 = v38;
      if (!v10)
      {
        sub_100034564(v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_bridgeObjectRelease();
        swift_release_n();
        goto LABEL_14;
      }
      if (!(v21 >> 62)) {
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_10:
    uint64_t v28 = v35;
    IndexPath.init(row:section:)();
    sub_10015BF20(v11, v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_beginAccess();
    unint64_t v29 = *(void *)(v10 + 64);
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
      swift_release_n();
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_release_n();
      swift_release();
    }
    uint64_t v31 = sub_10003B754((uint64_t *)&unk_10078E9A0);
    uint64_t v32 = *(int *)(v31 + 48);
    uint64_t v33 = *(int *)(v31 + 64);
    swift_bridgeObjectRelease();
    sub_100034564(v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(void *)(v17 + v32) = v30;
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v17 + v33, v28, v37);
    return (*(uint64_t (**)(unint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v17, 0, 1, v31);
  }
  uint64_t v24 = sub_10003B754((uint64_t *)&unk_10078E9A0);
  uint64_t v25 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);

  return v25(a3, 1, 1, v24);
}

unint64_t sub_10014DEAC@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v31 = a2;
  uint64_t v32 = a1;
  uint64_t v33 = a4;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100089354();
  uint64_t v15 = sub_100091FDC(a3, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v15)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_24;
    }
    goto LABEL_21;
  }
  swift_retain();
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (*(unsigned char *)(v15 + 72) != 2)
  {
LABEL_23:
    swift_release_n();
    if (v16[2])
    {
LABEL_24:
      uint64_t v25 = *(void *)(v5 + qword_10078DEC8);
      if (v25)
      {
        uint64_t v26 = *(uint64_t (**)(uint64_t))(v25 + 16);
        uint64_t v27 = swift_retain();
        if (v26(v27))
        {
          uint64_t v28 = v31 & 1;
          uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
          (*(void (**)(void *, uint64_t, uint64_t, void *, uint64_t))(v25 + 368))(Strong, v32, v28, v16, a3);
          swift_release();

LABEL_29:
          swift_bridgeObjectRelease();
          return sub_100028C3C((uint64_t)v9, v33, (uint64_t *)&unk_100788D10);
        }
        swift_release();
        if (!v16[2])
        {
          (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
          goto LABEL_29;
        }
      }
      sub_10015BF20((uint64_t)v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
      goto LABEL_29;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v33, 1, 1, v10);
  }
  unint64_t v17 = (void *)v15;
  while (1)
  {
    uint64_t v18 = (uint64_t)v17 + *(void *)(*v17 + 144);
    swift_beginAccess();
    sub_10015BF20(v18, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = (void *)sub_100570A84(0, v16[2] + 1, 1, (unint64_t)v16);
    }
    unint64_t v20 = v16[2];
    unint64_t v19 = v16[3];
    if (v20 >= v19 >> 1) {
      uint64_t v16 = (void *)sub_100570A84(v19 > 1, v20 + 1, 1, (unint64_t)v16);
    }
    id v16[2] = v20 + 1;
    sub_10015BEB8((uint64_t)v13, (uint64_t)v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v20, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    swift_beginAccess();
    unint64_t v21 = v17[8];
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_22:
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v22) {
        goto LABEL_22;
      }
    }
    unint64_t result = v22 - 1;
    if (__OFSUB__(v22, 1)) {
      break;
    }
    if ((v21 & 0xC000000000000001) != 0)
    {
      uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if ((result & 0x8000000000000000) != 0) {
        goto LABEL_32;
      }
      if (result >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_33;
      }
      uint64_t v24 = *(void *)(v21 + 8 * result + 32);
      swift_retain();
    }
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_retain();
    unint64_t v17 = (void *)v24;
    if (*(unsigned char *)(v24 + 72) != 2) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

unint64_t sub_10014E338@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  int v31 = a2;
  uint64_t v32 = a1;
  uint64_t v33 = a4;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v30[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1000890D8();
  uint64_t v15 = sub_100091DF0(a3, v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    if (*(unsigned char *)(v15 + 72) == 2)
    {
      unint64_t v17 = (void *)v15;
      while (1)
      {
        uint64_t v18 = (uint64_t)v17 + *(void *)(*v17 + 144);
        swift_beginAccess();
        sub_10015BF20(v18, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v16 = (void *)sub_10056F4F4(0, v16[2] + 1, 1, (unint64_t)v16);
        }
        unint64_t v20 = v16[2];
        unint64_t v19 = v16[3];
        if (v20 >= v19 >> 1) {
          uint64_t v16 = (void *)sub_10056F4F4(v19 > 1, v20 + 1, 1, (unint64_t)v16);
        }
        id v16[2] = v20 + 1;
        sub_10015BEB8((uint64_t)v13, (uint64_t)v16+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_beginAccess();
        unint64_t v21 = v17[8];
        if (v21 >> 62)
        {
          swift_bridgeObjectRetain_n();
          uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v22)
          {
LABEL_22:
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_23;
          }
        }
        else
        {
          uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (!v22) {
            goto LABEL_22;
          }
        }
        unint64_t result = v22 - 1;
        if (__OFSUB__(v22, 1)) {
          break;
        }
        if ((v21 & 0xC000000000000001) != 0)
        {
          uint64_t v24 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((result & 0x8000000000000000) != 0) {
            goto LABEL_31;
          }
          if (result >= *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_32;
          }
          uint64_t v24 = *(void *)(v21 + 8 * result + 32);
          swift_retain();
        }
        swift_release_n();
        swift_bridgeObjectRelease();
        unint64_t v17 = (void *)v24;
        if (*(unsigned char *)(v24 + 72) != 2) {
          goto LABEL_23;
        }
      }
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
LABEL_23:
    swift_release();
    if (v16[2]) {
      goto LABEL_24;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(v33, 1, 1, v10);
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_21;
  }
LABEL_24:
  uint64_t v25 = *(void *)(v5 + qword_10078DEC8);
  if (!v25) {
    goto LABEL_28;
  }
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v25 + 16);
  uint64_t v27 = swift_retain();
  if (v26(v27))
  {
    uint64_t v28 = v31 & 1;
    uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    (*(void (**)(void *, uint64_t, uint64_t, void *, uint64_t))(v25 + 368))(Strong, v32, v28, v16, a3);
    swift_release();

LABEL_29:
    swift_bridgeObjectRelease();
    return sub_100028C3C((uint64_t)v9, v33, (uint64_t *)&unk_100788DC0);
  }
  unint64_t result = swift_release();
  if (v16[2])
  {
LABEL_28:
    sub_10015BF20((uint64_t)v16 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    goto LABEL_29;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_10014E7B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = IndexPath.row.getter();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    IndexPath.section.getter();
    IndexPath.init(row:section:)();
    uint64_t v9 = sub_100089354();
    uint64_t v10 = sub_1001347D0(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      uint64_t Strong = swift_weakLoadStrong();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (Strong)
      {
        uint64_t v12 = *(void *)(Strong + 16);
        swift_release();
        if (v12 == a1)
        {
          uint64_t v13 = v10 + *(void *)(*(void *)v10 + 144);
          swift_beginAccess();
          sub_10015BF20(v13, a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          swift_release();
          uint64_t v14 = type metadata accessor for TTRAccountsListsViewModel.Item();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
        }
      }
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    uint64_t v15 = type metadata accessor for TTRAccountsListsViewModel.Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  return result;
}

uint64_t sub_10014EA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = IndexPath.row.getter();
  if (__OFSUB__(result, 1))
  {
    __break(1u);
  }
  else
  {
    IndexPath.section.getter();
    IndexPath.init(row:section:)();
    uint64_t v9 = sub_1000890D8();
    uint64_t v10 = sub_1001347D0(v7, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10)
    {
      uint64_t Strong = swift_weakLoadStrong();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      if (Strong)
      {
        uint64_t v12 = *(void *)(Strong + 16);
        swift_release();
        if (v12 == a1)
        {
          uint64_t v13 = v10 + *(void *)(*(void *)v10 + 144);
          swift_beginAccess();
          sub_10015BF20(v13, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          swift_release();
          uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
        }
      }
      swift_release();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a2, 1, 1, v15);
  }
  return result;
}

uint64_t sub_10014EC64()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10078E6B0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10078E6B0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10014ED2C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_10014ED6C(a1);
  return v2;
}

uint64_t sub_10014ED6C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + qword_1007BBA40);
  uint64_t v4 = (char *)v3 + *(int *)(type metadata accessor for TTRITreeViewDropProposal(0) + 20);
  uint64_t v5 = sub_10003B754(&qword_10079BEF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 4, v5);
  *uint64_t v3 = 0;
  uint64_t v6 = v1 + qword_1007BBA48;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10079C9A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t updated = type metadata accessor for TTRITreeViewDropUpdateCoordinator.HitTestResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(updated - 8) + 56))(v8, 1, 1, updated);
  *(void *)(v1 + *(void *)(*(void *)v1 + 128)) = 0;
  *(void *)(v1 + qword_10078E6C8) = a1;
  return v1;
}

void (*sub_10014EEFC@<X0>(void *a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>))(uint64_t *, void)
{
  uint64_t v122 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a2;
  id v123 = a1;
  uint64_t v124 = a4;
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v117 = (uint64_t)&v114 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v118 = (uint64_t)&v114 - v8;
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v121 = (char *)&v114 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v114 - v13;
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v114 - v15;
  uint64_t v17 = type metadata accessor for IndexPath();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v21 = (char *)&v114 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19);
  uint64_t v24 = (char *)&v114 - v23;
  uint64_t v25 = __chkstk_darwin(v22);
  uint64_t v120 = (char *)&v114 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  uint64_t v119 = (char *)&v114 - v28;
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v114 - v29;
  sub_10003B694(a3, (uint64_t)v16, &qword_10078E8F0);
  int v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v31(v16, 1, v17) == 1)
  {
    sub_10003B6F8((uint64_t)v16, &qword_10078E8F0);
LABEL_25:
    sub_10003B754((uint64_t *)&unk_100788D50);
    return (void (*)(uint64_t *, void))swift_storeEnumTagMultiPayload();
  }
  uint64_t v114 = v21;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  BOOL v116 = v30;
  v32(v30, v16, v17);
  id v33 = v123;
  [v122 locationInView:v123];
  double v35 = v34;
  id v36 = [v33 indexPathForRowAtPoint:];
  if (v36)
  {
    uint64_t v37 = v36;
    unint64_t v38 = v120;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    v32(v14, v38, v17);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v39(v14, 0, 1, v17);
    unsigned int v40 = v31(v14, 1, v17);
    uint64_t v41 = (void *)v17;
    uint64_t v42 = v18;
    uint64_t v43 = (void (*)(uint64_t, char *, id))v32;
    if (v40 != 1)
    {
      uint64_t v44 = v119;
      uint64_t v122 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v41;
      v32(v119, v14, (uint64_t)v41);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v123 rectForRowAtIndexPath:isa];
      unint64_t v47 = v46;
      double v49 = v48;
      double v51 = v50;
      double v53 = v52;

      *(void *)&v127.origin.CGFloat x = v47;
      v127.origin.CGFloat y = v49;
      v127.size.CGFloat width = v51;
      v127.size.CGFloat height = v53;
      double v54 = CGRectGetHeight(v127) * 0.5;
      *(void *)&v128.origin.CGFloat x = v47;
      v128.origin.CGFloat y = v49;
      v128.size.CGFloat width = v51;
      v128.size.CGFloat height = v53;
      CGRectGetHeight(v128);
      id v123 = v47;
      v129.origin.CGFloat x = sub_10004980C(*(double *)&v47, v49, v51, v53, v54, 0.0);
      CGFloat x = v129.origin.x;
      CGFloat y = v129.origin.y;
      CGFloat width = v129.size.width;
      CGFloat height = v129.size.height;
      if (v35 >= CGRectGetMinY(v129))
      {
        v132.origin.CGFloat x = x;
        v132.origin.CGFloat y = y;
        v132.size.CGFloat width = width;
        v132.size.CGFloat height = height;
        BOOL v59 = CGRectGetMaxY(v132) < v35;
      }
      else
      {
        BOOL v59 = 0;
      }
      double v86 = *(double *)&v123;
      *(void *)&v133.origin.CGFloat x = v123;
      v133.origin.CGFloat y = v49;
      v133.size.CGFloat width = v51;
      v133.size.CGFloat height = v53;
      double v87 = CGRectGetHeight(v133) * 0.2;
      v134.origin.CGFloat x = v86;
      v134.origin.CGFloat y = v49;
      v134.size.CGFloat width = v51;
      v134.size.CGFloat height = v53;
      CGRectGetHeight(v134);
      v135.origin.CGFloat x = sub_10004980C(v86, v49, v51, v53, v87, 0.0);
      CGFloat v88 = v135.origin.x;
      CGFloat v89 = v135.origin.y;
      CGFloat v90 = v135.size.width;
      CGFloat v91 = v135.size.height;
      CGFloat MinY = CGRectGetMinY(v135);
      uint64_t v115 = v43;
      BOOL v93 = 0;
      if (v35 >= MinY)
      {
        v136.origin.CGFloat x = v88;
        v136.origin.CGFloat y = v89;
        v136.size.CGFloat width = v90;
        v136.size.CGFloat height = v91;
        if (CGRectGetMaxY(v136) >= v35) {
          BOOL v93 = 1;
        }
      }
      uint64_t v94 = sub_100089354();
      uint64_t v95 = sub_1001347D0(v44, v94);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v95)
      {
        uint64_t v96 = v95 + *(void *)(*(void *)v95 + 144);
        swift_beginAccess();
        uint64_t v97 = v96;
        uint64_t v98 = v117;
        sub_10015BF20(v97, v117, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        swift_release();
        BOOL v99 = v59;
        uint64_t v100 = v122;
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v18 + 8))(v116, v122);
        uint64_t v101 = v118;
        sub_10015BEB8(v98, v118, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v102 = v124;
        v115(v124, v44, v100);
        unint64_t v103 = (int *)sub_10003B754(&qword_10078E9B0);
        sub_10015BEB8(v101, v102 + v103[9], (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(unsigned char *)(v102 + v103[10]) = v99;
        *(unsigned char *)(v102 + v103[11]) = v93;
      }
      else
      {
        if (qword_1007852C8 != -1) {
          swift_once();
        }
        uint64_t v104 = type metadata accessor for Logger();
        sub_100018BF8(v104, (uint64_t)qword_10078E6B0);
        uint64_t v105 = v114;
        uint64_t v106 = v122;
        (*(void (**)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v18 + 16))(v114, v44, v122);
        uint64_t v107 = Logger.logObject.getter();
        os_log_type_t v108 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v107, v108))
        {
          BOOL v109 = (uint8_t *)swift_slowAlloc();
          v126[0] = swift_slowAlloc();
          *(_DWORD *)BOOL v109 = 136315138;
          uint64_t v110 = IndexPath.description.getter();
          uint64_t v125 = sub_1000385A8(v110, v111, v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v112 = *(void (**)(char *, id))(v18 + 8);
          v112(v105, v106);
          _os_log_impl((void *)&_mh_execute_header, v107, v108, "TTRITreeViewDropUpdateCoordinator: internal inconsistency: can't lookup item {at: %s}", v109, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v112(v119, v106);
          v112(v116, v106);
        }
        else
        {

          uint64_t v113 = *(void (**)(char *, id))(v18 + 8);
          v113(v105, v106);
          v113(v44, v106);
          v113(v116, v106);
        }
      }
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v39(v14, 1, 1, v17);
    uint64_t v41 = (void *)v17;
    uint64_t v42 = v18;
    uint64_t v43 = (void (*)(uint64_t, char *, id))v32;
  }
  uint64_t v122 = v39;
  uint64_t v119 = (char *)(v18 + 32);
  sub_10003B6F8((uint64_t)v14, &qword_10078E8F0);
  os_log_type_t v60 = v116;
  uint64_t v61 = IndexPath.row.getter();
  uint64_t v62 = *(void (**)(char *, char *, void *))(v42 + 16);
  v62(v24, v60, v41);
  if (!v61)
  {
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v42 + 8))(v24, (void (*)(char *, uint64_t, uint64_t, uint64_t))v41);
LABEL_15:
    uint64_t v83 = (uint64_t)v121;
    v43((uint64_t)v121, v60, v41);
    goto LABEL_16;
  }
  uint64_t v63 = IndexPath.row.getter();
  uint64_t v115 = v43;
  id v64 = (id)v63;
  uint64_t v65 = IndexPath.section.getter();
  id v66 = v123;
  id v67 = [v123 numberOfRowsInSection:v65];
  uint64_t v68 = v24;
  uint64_t v69 = *(void (**)(char *, void *))(v42 + 8);
  v69(v68, v41);
  BOOL v70 = v64 == v67;
  uint64_t v43 = v115;
  if (v70) {
    goto LABEL_15;
  }
  Class v71 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v66 rectForRowAtIndexPath:v71];
  CGFloat v73 = v72;
  CGFloat v75 = v74;
  CGFloat v77 = v76;
  CGFloat v79 = v78;

  v130.origin.CGFloat x = v73;
  v130.origin.CGFloat y = v75;
  v130.size.CGFloat width = v77;
  v130.size.CGFloat height = v79;
  if (v35 < CGRectGetMinY(v130)) {
    goto LABEL_15;
  }
  v131.origin.CGFloat x = v73;
  v131.origin.CGFloat y = v75;
  v131.size.CGFloat width = v77;
  v131.size.CGFloat height = v79;
  if (CGRectGetMinY(v131) >= v35)
  {
    v69(v60, v41);
    uint64_t v84 = 1;
    uint64_t v85 = v124;
    uint64_t v83 = (uint64_t)v121;
    goto LABEL_17;
  }
  uint64_t v80 = v120;
  v62(v120, v60, v41);
  uint64_t result = (void (*)(uint64_t *, void))IndexPath.row.modify();
  if (!__OFADD__(*v82, 1))
  {
    ++*v82;
    result(v126, 0);
    v69(v60, v41);
    uint64_t v83 = (uint64_t)v121;
    v115((uint64_t)v121, v80, v41);
LABEL_16:
    uint64_t v84 = 0;
    uint64_t v85 = v124;
LABEL_17:
    v122((char *)v83, v84, 1, (uint64_t)v41);
    sub_100028C3C(v83, v85, &qword_10078E8F0);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void (*sub_10014FA48@<X0>(void *a1@<X0>, void (*a2)(char *, uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>))(uint64_t *, void)
{
  uint64_t v122 = (void (*)(char *, uint64_t, uint64_t, uint64_t))a2;
  id v123 = a1;
  uint64_t v124 = a4;
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5 - 8);
  uint64_t v117 = (uint64_t)&v114 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v118 = (uint64_t)&v114 - v8;
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v121 = (char *)&v114 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v114 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v114 - v15;
  uint64_t v17 = type metadata accessor for IndexPath();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v114 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v114 - v22;
  __chkstk_darwin(v24);
  uint64_t v120 = (char *)&v114 - v25;
  __chkstk_darwin(v26);
  uint64_t v119 = (char *)&v114 - v27;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v114 - v29;
  sub_10003B694(a3, (uint64_t)v16, &qword_10078E8F0);
  int v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  if (v31(v16, 1, v17) == 1)
  {
    sub_10003B6F8((uint64_t)v16, &qword_10078E8F0);
LABEL_25:
    sub_10003B754(&qword_100788DE0);
    return (void (*)(uint64_t *, void))swift_storeEnumTagMultiPayload();
  }
  uint64_t v114 = v23;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  BOOL v116 = v30;
  v32(v30, v16, v17);
  id v33 = v123;
  [v122 locationInView:v123];
  double v35 = v34;
  id v36 = [v33 indexPathForRowAtPoint:];
  if (v36)
  {
    uint64_t v37 = v36;
    unint64_t v38 = v120;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    v32(v13, v38, v17);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v39(v13, 0, 1, v17);
    unsigned int v40 = v31(v13, 1, v17);
    uint64_t v41 = (void *)v17;
    uint64_t v42 = v18;
    uint64_t v43 = (void (*)(uint64_t, char *, id))v32;
    if (v40 != 1)
    {
      uint64_t v44 = v119;
      uint64_t v122 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v41;
      v32(v119, v13, (uint64_t)v41);
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [v123 rectForRowAtIndexPath:isa];
      unint64_t v47 = v46;
      double v49 = v48;
      double v51 = v50;
      double v53 = v52;

      *(void *)&v127.origin.CGFloat x = v47;
      v127.origin.CGFloat y = v49;
      v127.size.CGFloat width = v51;
      v127.size.CGFloat height = v53;
      double v54 = CGRectGetHeight(v127) * 0.5;
      *(void *)&v128.origin.CGFloat x = v47;
      v128.origin.CGFloat y = v49;
      v128.size.CGFloat width = v51;
      v128.size.CGFloat height = v53;
      CGRectGetHeight(v128);
      id v123 = v47;
      v129.origin.CGFloat x = sub_10004980C(*(double *)&v47, v49, v51, v53, v54, 0.0);
      CGFloat x = v129.origin.x;
      CGFloat y = v129.origin.y;
      CGFloat width = v129.size.width;
      CGFloat height = v129.size.height;
      if (v35 >= CGRectGetMinY(v129))
      {
        v132.origin.CGFloat x = x;
        v132.origin.CGFloat y = y;
        v132.size.CGFloat width = width;
        v132.size.CGFloat height = height;
        BOOL v59 = CGRectGetMaxY(v132) < v35;
      }
      else
      {
        BOOL v59 = 0;
      }
      double v86 = *(double *)&v123;
      *(void *)&v133.origin.CGFloat x = v123;
      v133.origin.CGFloat y = v49;
      v133.size.CGFloat width = v51;
      v133.size.CGFloat height = v53;
      double v87 = CGRectGetHeight(v133) * 0.2;
      v134.origin.CGFloat x = v86;
      v134.origin.CGFloat y = v49;
      v134.size.CGFloat width = v51;
      v134.size.CGFloat height = v53;
      CGRectGetHeight(v134);
      v135.origin.CGFloat x = sub_10004980C(v86, v49, v51, v53, v87, 0.0);
      CGFloat v88 = v135.origin.x;
      CGFloat v89 = v135.origin.y;
      CGFloat v90 = v135.size.width;
      CGFloat v91 = v135.size.height;
      CGFloat MinY = CGRectGetMinY(v135);
      uint64_t v115 = v43;
      BOOL v93 = 0;
      if (v35 >= MinY)
      {
        v136.origin.CGFloat x = v88;
        v136.origin.CGFloat y = v89;
        v136.size.CGFloat width = v90;
        v136.size.CGFloat height = v91;
        if (CGRectGetMaxY(v136) >= v35) {
          BOOL v93 = 1;
        }
      }
      uint64_t v94 = sub_1000890D8();
      uint64_t v95 = sub_1001347D0(v44, v94);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v95)
      {
        uint64_t v96 = v95 + *(void *)(*(void *)v95 + 144);
        swift_beginAccess();
        uint64_t v97 = v96;
        uint64_t v98 = v117;
        sub_10015BF20(v97, v117, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        swift_release();
        BOOL v99 = v59;
        uint64_t v100 = v122;
        (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v18 + 8))(v116, v122);
        uint64_t v101 = v118;
        sub_10015BEB8(v98, v118, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v102 = v124;
        v115(v124, v44, v100);
        unint64_t v103 = (int *)sub_10003B754(&qword_10078E8F8);
        sub_10015BEB8(v101, v102 + v103[9], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        *(unsigned char *)(v102 + v103[10]) = v99;
        *(unsigned char *)(v102 + v103[11]) = v93;
      }
      else
      {
        if (qword_1007852C8 != -1) {
          swift_once();
        }
        uint64_t v104 = type metadata accessor for Logger();
        sub_100018BF8(v104, (uint64_t)qword_10078E6B0);
        uint64_t v105 = v114;
        uint64_t v106 = v122;
        (*(void (**)(char *, char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v18 + 16))(v114, v44, v122);
        uint64_t v107 = Logger.logObject.getter();
        os_log_type_t v108 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v107, v108))
        {
          BOOL v109 = (uint8_t *)swift_slowAlloc();
          v126[0] = swift_slowAlloc();
          *(_DWORD *)BOOL v109 = 136315138;
          uint64_t v110 = IndexPath.description.getter();
          uint64_t v125 = sub_1000385A8(v110, v111, v126);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v112 = *(void (**)(char *, id))(v18 + 8);
          v112(v105, v106);
          _os_log_impl((void *)&_mh_execute_header, v107, v108, "TTRITreeViewDropUpdateCoordinator: internal inconsistency: can't lookup item {at: %s}", v109, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v112(v119, v106);
          v112(v116, v106);
        }
        else
        {

          uint64_t v113 = *(void (**)(char *, id))(v18 + 8);
          v113(v105, v106);
          v113(v44, v106);
          v113(v116, v106);
        }
      }
      goto LABEL_25;
    }
  }
  else
  {
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v39(v13, 1, 1, v17);
    uint64_t v41 = (void *)v17;
    uint64_t v42 = v18;
    uint64_t v43 = (void (*)(uint64_t, char *, id))v32;
  }
  uint64_t v122 = v39;
  uint64_t v119 = (char *)(v18 + 32);
  sub_10003B6F8((uint64_t)v13, &qword_10078E8F0);
  os_log_type_t v60 = v116;
  uint64_t v61 = IndexPath.row.getter();
  uint64_t v62 = *(void (**)(char *, char *, void *))(v42 + 16);
  v62(v20, v60, v41);
  if (!v61)
  {
    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v42 + 8))(v20, (void (*)(char *, uint64_t, uint64_t, uint64_t))v41);
LABEL_15:
    uint64_t v83 = (uint64_t)v121;
    v43((uint64_t)v121, v60, v41);
    goto LABEL_16;
  }
  uint64_t v63 = IndexPath.row.getter();
  uint64_t v115 = v43;
  id v64 = (id)v63;
  uint64_t v65 = IndexPath.section.getter();
  id v66 = v123;
  id v67 = [v123 numberOfRowsInSection:v65];
  uint64_t v68 = v20;
  uint64_t v69 = *(void (**)(char *, void *))(v42 + 8);
  v69(v68, v41);
  BOOL v70 = v64 == v67;
  uint64_t v43 = v115;
  if (v70) {
    goto LABEL_15;
  }
  Class v71 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v66 rectForRowAtIndexPath:v71];
  CGFloat v73 = v72;
  CGFloat v75 = v74;
  CGFloat v77 = v76;
  CGFloat v79 = v78;

  v130.origin.CGFloat x = v73;
  v130.origin.CGFloat y = v75;
  v130.size.CGFloat width = v77;
  v130.size.CGFloat height = v79;
  if (v35 < CGRectGetMinY(v130)) {
    goto LABEL_15;
  }
  v131.origin.CGFloat x = v73;
  v131.origin.CGFloat y = v75;
  v131.size.CGFloat width = v77;
  v131.size.CGFloat height = v79;
  if (CGRectGetMinY(v131) >= v35)
  {
    v69(v60, v41);
    uint64_t v84 = 1;
    uint64_t v85 = v124;
    uint64_t v83 = (uint64_t)v121;
    goto LABEL_17;
  }
  uint64_t v80 = v120;
  v62(v120, v60, v41);
  uint64_t result = (void (*)(uint64_t *, void))IndexPath.row.modify();
  if (!__OFADD__(*v82, 1))
  {
    ++*v82;
    result(v126, 0);
    v69(v60, v41);
    uint64_t v83 = (uint64_t)v121;
    v115((uint64_t)v121, v80, v41);
LABEL_16:
    uint64_t v84 = 0;
    uint64_t v85 = v124;
LABEL_17:
    v122((char *)v83, v84, 1, (uint64_t)v41);
    sub_100028C3C(v83, v85, &qword_10078E8F0);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

void sub_100150594(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned char *a5@<X5>, void *a6@<X6>, uint64_t a7@<X8>)
{
  os_log_type_t v142 = a5;
  int64_t v150 = (uint64_t *)a7;
  uint64_t v151 = a4;
  id v147 = a2;
  uint64_t v141 = sub_10003B754((uint64_t *)&unk_100788EF0);
  __chkstk_darwin(v141);
  uint64_t v143 = (uint64_t)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_10078E9E0);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v139 = (uint64_t)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  unint64_t v137 = (char *)&v123 - v15;
  __chkstk_darwin(v14);
  uint64_t v138 = (uint64_t)&v123 - v16;
  uint64_t v140 = sub_10003B754(&qword_10078E9E8);
  uint64_t v17 = __chkstk_darwin(v140);
  uint64_t v134 = (uint64_t)&v123 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v130 = (uint64_t)&v123 - v20;
  __chkstk_darwin(v19);
  uint64_t v132 = (uint64_t)&v123 - v21;
  uint64_t v22 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v135 = (uint64_t)&v123 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v131 = (uint64_t)&v123 - v26;
  __chkstk_darwin(v25);
  uint64_t v133 = (uint64_t)&v123 - v27;
  uint64_t v28 = sub_10003B754(&qword_10078E9F0);
  uint64_t v29 = __chkstk_darwin(v28 - 8);
  int v31 = (char *)&v123 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v148 = (uint64_t)&v123 - v32;
  uint64_t v33 = sub_10003B754(&qword_10078E9F8);
  __chkstk_darwin(v33 - 8);
  unint64_t v152 = (char *)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_10003B754(&qword_10078E8F0);
  uint64_t v36 = __chkstk_darwin(v35 - 8);
  uint64_t v144 = (char *)&v123 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v123 - v38;
  uint64_t v40 = type metadata accessor for IndexPath();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = __chkstk_darwin(v40);
  CGRect v136 = (char *)&v123 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v45 = (char *)&v123 - v44;
  uint64_t v46 = a1;
  uint64_t v48 = v47;
  sub_10003B694(v46, (uint64_t)v39, &qword_10078E8F0);
  double v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48);
  if (v49(v39, 1, v48) == 1)
  {
    sub_10003B6F8((uint64_t)v39, &qword_10078E8F0);
    uint64_t v50 = a3 + qword_1007BBA40;
    swift_beginAccess();
    sub_10015BF20(v50, (uint64_t)v150, type metadata accessor for TTRITreeViewDropProposal);
  }
  else
  {
    uint64_t v149 = a3;
    CGRect v129 = a6;
    double v51 = *(void (**)(void))(v41 + 32);
    os_log_type_t v146 = v45;
    uint64_t v125 = v41 + 32;
    uint64_t v124 = v51;
    ((void (*)(char *, char *, uint64_t))v51)(v45, v39, v48);
    uint64_t v52 = sub_10003B754(&qword_10078EA00);
    uint64_t v53 = *(void *)(v52 - 8);
    double v54 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v53 + 56);
    uint64_t v128 = v52;
    CGRect v127 = v54;
    uint64_t v126 = v53 + 56;
    ((void (*)(unsigned char *, uint64_t, uint64_t))v54)(v152, 1, 1);
    if ([v147 localDragSession]
      && (swift_getObjectType(),
          uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong(),
          uint64_t v56 = sub_100350AFC((uint64_t)Strong),
          Strong,
          swift_unknownObjectRelease(),
          v56))
    {
      uint64_t v57 = (void **)(v56 + qword_1007BBC58);
      swift_beginAccess();
      uint64_t v58 = *v57;
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      uint64_t v58 = &_swiftEmptySetSingleton;
    }
    uint64_t v59 = v58[2];
    uint64_t v145 = v48;
    if (v59 == 1)
    {
      uint64_t v60 = sub_10003D7C0((uint64_t)v58);
      uint64_t v62 = v61;
      char v64 = v63 & 1;
      uint64_t v65 = v148;
      sub_100598C34(v60, v61, v63 & 1, (uint64_t)v58, v148);
      uint64_t v48 = v145;
      sub_1000205F8(v60, v62, v64);
      swift_bridgeObjectRelease();
      id v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      v66(v65, 0, 2, v48);
    }
    else
    {
      swift_bridgeObjectRelease();
      id v66 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
      uint64_t v65 = v148;
      if (v59) {
        uint64_t v67 = 1;
      }
      else {
        uint64_t v67 = 2;
      }
      v66(v148, v67, 2, v48);
    }
    sub_10003B694(v65, (uint64_t)v31, &qword_10078E9F0);
    int v68 = v49(v31, 2, v48);
    if (v68)
    {
      if (v68 == 1)
      {
        uint64_t v69 = v152;
        sub_10003B6F8((uint64_t)v152, &qword_10078E9F8);
        uint64_t v70 = v128;
        Class v71 = &v69[*(int *)(v128 + 36)];
        uint64_t v148 = v41;
        double v72 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
        uint64_t v73 = (uint64_t)v146;
        v72(v71, v146, v48);
        unsigned char *v69 = 0;
        v127(v69, 0, 1, v70);
        uint64_t v74 = sub_100144EB0();
        char v76 = v75 & 1;
        uint64_t v77 = (uint64_t)v144;
        v72(v144, (char *)v73, v48);
        v66(v77, 0, 1, v48);
        uint64_t v78 = v139;
        sub_1001465C0(v74, v76, v77, v139);
        swift_bridgeObjectRelease();
        sub_10003B6F8(v77, &qword_10078E8F0);
        uint64_t v79 = sub_10003B754(&qword_100788F08);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v79 - 8) + 48))(v78, 1, v79) == 1)
        {
          sub_10003B6F8(v78, &qword_10078E9E0);
          char v80 = 0;
          a6 = v129;
        }
        else
        {
          uint64_t v93 = *(void *)(v78 + *(int *)(v79 + 48));
          uint64_t v94 = v140;
          uint64_t v95 = *(int *)(v140 + 48);
          uint64_t v96 = v78;
          uint64_t v97 = v134;
          sub_10015BEB8(v96, v134, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(void *)(v97 + v95) = v93;
          uint64_t v98 = *(void *)(v97 + *(int *)(v94 + 48));
          uint64_t v99 = v135;
          sub_10015BEB8(v97, v135, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v100 = *(int *)(v79 + 48);
          uint64_t v101 = v143;
          sub_10015BF20(v99, v143, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(void *)(v101 + v100) = v98;
          swift_storeEnumTagMultiPayload();
          a6 = v129;
          char v80 = sub_100083C2C(v101, v151, v142, (uint64_t)v129);
          sub_10003B6F8(v101, (uint64_t *)&unk_100788EF0);
          sub_100034564(v99, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        }
        uint64_t v85 = v150;
        uint64_t v41 = v148;
      }
      else
      {
        uint64_t v86 = v48;
        uint64_t v87 = sub_100144EB0();
        char v89 = v88 & 1;
        uint64_t v90 = (uint64_t)v144;
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v144, v146, v86);
        v66(v90, 0, 1, v86);
        uint64_t v91 = v138;
        sub_1001465C0(v87, v89, v90, v138);
        swift_bridgeObjectRelease();
        sub_10003B6F8(v90, &qword_10078E8F0);
        uint64_t v92 = sub_10003B754(&qword_100788F08);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 48))(v91, 1, v92) == 1)
        {
          sub_10003B6F8(v91, &qword_10078E9E0);
          char v80 = 0;
          a6 = v129;
        }
        else
        {
          uint64_t v113 = *(void *)(v91 + *(int *)(v92 + 48));
          uint64_t v114 = v140;
          uint64_t v115 = *(int *)(v140 + 48);
          uint64_t v116 = v91;
          uint64_t v117 = v132;
          sub_10015BEB8(v116, v132, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(void *)(v117 + v115) = v113;
          uint64_t v118 = *(void *)(v117 + *(int *)(v114 + 48));
          uint64_t v119 = v133;
          sub_10015BEB8(v117, v133, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v120 = *(int *)(v92 + 48);
          uint64_t v121 = v143;
          sub_10015BF20(v119, v143, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *(void *)(v121 + v120) = v118;
          swift_storeEnumTagMultiPayload();
          a6 = v129;
          char v80 = sub_100083C2C(v121, v151, v142, (uint64_t)v129);
          sub_10003B6F8(v121, (uint64_t *)&unk_100788EF0);
          sub_100034564(v119, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        }
        uint64_t v85 = v150;
      }
      uint64_t v83 = (uint64_t)v146;
    }
    else
    {
      uint64_t v81 = (uint64_t)v136;
      v124();
      uint64_t v82 = v137;
      uint64_t v83 = (uint64_t)v146;
      sub_100147228(v81, (uint64_t)v146, 0, 0, v137);
      uint64_t v84 = sub_10003B754(&qword_100788F08);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v84 - 8) + 48))(v82, 1, v84) == 1)
      {
        sub_10003B6F8((uint64_t)v82, &qword_10078E9E0);
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v81, v48);
        char v80 = 0;
        a6 = v129;
      }
      else
      {
        uint64_t v102 = *(void *)&v82[*(int *)(v84 + 48)];
        uint64_t v103 = v140;
        uint64_t v104 = v81;
        uint64_t v105 = *(int *)(v140 + 48);
        uint64_t v106 = (uint64_t)v82;
        uint64_t v107 = v130;
        sub_10015BEB8(v106, v130, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(void *)(v107 + v105) = v102;
        uint64_t v108 = *(void *)(v107 + *(int *)(v103 + 48));
        uint64_t v109 = v131;
        sub_10015BEB8(v107, v131, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v110 = *(int *)(v84 + 48);
        uint64_t v111 = v143;
        sub_10015BF20(v109, v143, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        *(void *)(v111 + v110) = v108;
        swift_storeEnumTagMultiPayload();
        a6 = v129;
        char v80 = sub_100083C2C(v111, v151, v142, (uint64_t)v129);
        sub_10003B6F8(v111, (uint64_t *)&unk_100788EF0);
        sub_100034564(v109, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
        uint64_t v112 = v104;
        uint64_t v83 = (uint64_t)v146;
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v112, v145);
      }
      uint64_t v85 = v150;
    }
    uint64_t v122 = (uint64_t)v152;
    sub_10015717C(v65, v80 & 1, 0, 0, (uint64_t)v152, &qword_10078E9F8, &qword_10078EA00, &qword_10078E9F0, v85);
    sub_10003B6F8(v65, &qword_10078E9F0);
    sub_10003B6F8(v122, &qword_10078E9F8);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v83, v145);
  }
  swift_release();
}