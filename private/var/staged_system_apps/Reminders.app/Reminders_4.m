void sub_1002C4C10(void *a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, unint64_t a10, void *a11, char a12)
{
  id v16;
  unint64_t v17;
  void *v18;
  id v20;
  uint64_t vars8;

  if (a12 == 2)
  {
    swift_bridgeObjectRetain();
    v20 = a1;
    swift_bridgeObjectRetain();
    sub_100097108(a6, a7);
    sub_1002C4D2C(a8, a9, a10, a11);
  }
  else
  {
    if (a12 == 1)
    {
      swift_bridgeObjectRetain();
      v17 = a3;
      v18 = a4;
    }
    else
    {
      if (a12) {
        return;
      }
      swift_bridgeObjectRetain();
      v16 = a1;
      swift_bridgeObjectRetain();
      v17 = a6;
      v18 = a7;
    }
    sub_100097108(v17, v18);
  }
}

void sub_1002C4D2C(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_100097108(a3, a4);
  }
}

uint64_t sub_1002C4D78(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    type metadata accessor for TTRAccountsListsViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 9u:
        uint64_t v3 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
        goto LABEL_23;
      case 1u:
        uint64_t v5 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
        type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
        goto LABEL_22;
      case 2u:
        uint64_t v6 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
        type metadata accessor for TTRAccountsListsViewModel.SmartList();
        swift_bridgeObjectRelease();
        goto LABEL_22;
      case 3u:
        swift_bridgeObjectRelease();

        goto LABEL_23;
      case 4u:
      case 5u:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10003B9C0(*(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
        sub_10003B9B0(*(void **)(a1 + 128), *(id *)(a1 + 136), *(unsigned char *)(a1 + 144));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_22;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        goto LABEL_23;
      case 8u:
        sub_100096424(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void **)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(unsigned char *)(a1 + 88));
        goto LABEL_23;
      case 0xAu:
        goto LABEL_22;
      case 0xBu:
        uint64_t v7 = type metadata accessor for UUID();
        v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
        v8(a1, v7);
        uint64_t v9 = a1 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
        uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10)) {
          goto LABEL_23;
        }
        v8(v9, v7);
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_23:
        uint64_t v12 = a1 + *(int *)(sub_10003B754(&qword_100788DA8) + 48);
        uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
        v14 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
        uint64_t result = v14(v12, v13);
        break;
      case 0xCu:
        uint64_t v11 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(a1, v11);
        type metadata accessor for TTRAccountsListsViewModel.Hashtags();
        goto LABEL_22;
      case 0xDu:

        goto LABEL_22;
      default:
        goto LABEL_23;
    }
  }
  else
  {
    if (result == 1)
    {
      type metadata accessor for TTRAccountsListsViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 7u:
        case 9u:
          uint64_t v4 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
          goto LABEL_37;
        case 1u:
          uint64_t v15 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
          type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
          goto LABEL_36;
        case 2u:
          uint64_t v16 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(a1, v16);
          type metadata accessor for TTRAccountsListsViewModel.SmartList();
          swift_bridgeObjectRelease();
          goto LABEL_36;
        case 3u:
          swift_bridgeObjectRelease();

          goto LABEL_37;
        case 4u:
        case 5u:

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10003B9C0(*(void **)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(unsigned char *)(a1 + 120));
          sub_10003B9B0(*(void **)(a1 + 128), *(id *)(a1 + 136), *(unsigned char *)(a1 + 144));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_36;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          goto LABEL_37;
        case 8u:
          sub_100096424(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void **)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void **)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void **)(a1 + 80), *(unsigned char *)(a1 + 88));
          goto LABEL_37;
        case 0xAu:
          goto LABEL_36;
        case 0xBu:
          uint64_t v17 = type metadata accessor for UUID();
          v18 = *(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8);
          v18(a1, v17);
          uint64_t v19 = a1 + *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
          uint64_t v20 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(v19, 1, v20)) {
            goto LABEL_37;
          }
          v18(v19, v17);
LABEL_36:
          swift_bridgeObjectRelease();
LABEL_37:
          uint64_t v22 = a1 + *(int *)(sub_10003B754((uint64_t *)&unk_100788DB0) + 48);
          type metadata accessor for TTRAccountsListsViewModel.PinnedList();
          if (swift_getEnumCaseMultiPayload() == 1)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10003B9C0(*(void **)(v22 + 72), *(void *)(v22 + 80), *(void *)(v22 + 88), *(void *)(v22 + 96), *(void *)(v22 + 104), *(void *)(v22 + 112), *(unsigned char *)(v22 + 120));
            sub_10003B9B0(*(void **)(v22 + 128), *(id *)(v22 + 136), *(unsigned char *)(v22 + 144));
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v23 = type metadata accessor for UUID();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
            type metadata accessor for TTRAccountsListsViewModel.SmartList();
            swift_bridgeObjectRelease();
          }
          break;
        case 0xCu:
          uint64_t v21 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a1, v21);
          type metadata accessor for TTRAccountsListsViewModel.Hashtags();
          goto LABEL_36;
        case 0xDu:

          goto LABEL_36;
        default:
          goto LABEL_37;
      }
    }
    else if (result)
    {
      return result;
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1002C55D0(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    type metadata accessor for TTRAccountsListsViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v95 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v95 - 8) + 16))(a1, a2, v95);
        uint64_t v96 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
        *(void *)(a1 + *(int *)(v96 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v96 + 20));
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v97 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v97 - 8) + 16))(a1, a2, v97);
        v98 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
        *(unsigned char *)(a1 + v98[5]) = *((unsigned char *)a2 + v98[5]);
        *(void *)(a1 + v98[6]) = *(uint64_t *)((char *)a2 + v98[6]);
        uint64_t v99 = v98[7];
        v100 = (void *)(a1 + v99);
        v101 = (uint64_t *)((char *)a2 + v99);
        uint64_t v103 = *v101;
        uint64_t v102 = v101[1];
        void *v100 = v103;
        v100[1] = v102;
        *(void *)(a1 + v98[8]) = *(uint64_t *)((char *)a2 + v98[8]);
        *(unsigned char *)(a1 + v98[9]) = *((unsigned char *)a2 + v98[9]);
        uint64_t v104 = v98[10];
        v105 = (void *)(a1 + v104);
        v106 = (uint64_t *)((char *)a2 + v104);
        uint64_t v107 = v106[1];
        void *v105 = *v106;
        v105[1] = v107;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v108 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v108;
        v109 = (void *)a2[2];
        *(void *)(a1 + 16) = v109;
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
        *(_DWORD *)(a1 + 26) = *(_DWORD *)((char *)a2 + 26);
        swift_bridgeObjectRetain();
        id v110 = v109;
        break;
      case 4u:
      case 5u:
        v111 = (void *)*a2;
        uint64_t v112 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v112;
        *(void *)(a1 + 16) = a2[2];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
        uint64_t v113 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v113;
        uint64_t v114 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v114;
        v115 = (void *)a2[9];
        uint64_t v116 = a2[10];
        uint64_t v117 = a2[11];
        uint64_t v118 = a2[12];
        uint64_t v171 = a2[14];
        uint64_t v176 = a2[13];
        char v167 = *((unsigned char *)a2 + 120);
        id v119 = v111;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10003BED8(v115, v116, v117, v118, v176, v171, v167);
        *(void *)(a1 + 72) = v115;
        *(void *)(a1 + 80) = v116;
        *(void *)(a1 + 88) = v117;
        *(void *)(a1 + 96) = v118;
        *(void *)(a1 + 104) = v176;
        *(void *)(a1 + 112) = v171;
        *(unsigned char *)(a1 + 120) = v167;
        v120 = (void *)a2[16];
        v121 = (void *)a2[17];
        LOBYTE(v114) = *((unsigned char *)a2 + 144);
        sub_10003BF34(v120, v121, v114);
        *(void *)(a1 + 128) = v120;
        *(void *)(a1 + 136) = v121;
        *(unsigned char *)(a1 + 144) = v114;
        *(_DWORD *)(a1 + 145) = *(_DWORD *)((char *)a2 + 145);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
        uint64_t v122 = a2[22];
        *(void *)(a1 + 168) = a2[21];
        *(void *)(a1 + 176) = v122;
        v123 = (void *)a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v123;
        uint64_t v124 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v124;
        *(_WORD *)(a1 + 216) = *((_WORD *)a2 + 108);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v125 = v123;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v126 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v126;
        *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
        *(void *)(a1 + 32) = a2[4];
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        v128 = (void *)a2[6];
        uint64_t v127 = a2[7];
        *(void *)(a1 + 48) = v128;
        *(void *)(a1 + 56) = v127;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v129 = v128;
        break;
      case 8u:
        uint64_t v130 = *a2;
        uint64_t v131 = a2[1];
        v132 = (void *)a2[3];
        uint64_t v133 = a2[4];
        unint64_t v134 = a2[5];
        uint64_t v135 = a2[7];
        v160 = (void *)a2[6];
        uint64_t v163 = a2[8];
        unint64_t v168 = a2[9];
        v172 = (void *)a2[10];
        char v177 = *((unsigned char *)a2 + 88);
        unint64_t v136 = a2[2];
        sub_1002C4C10((void *)*a2, v131, v136, v132, v133, v134, v160, v135, v163, v168, v172, v177);
        *(void *)a1 = v130;
        *(void *)(a1 + 8) = v131;
        *(void *)(a1 + 16) = v136;
        *(void *)(a1 + 24) = v132;
        *(void *)(a1 + 32) = v133;
        *(void *)(a1 + 40) = v134;
        *(void *)(a1 + 48) = v160;
        *(void *)(a1 + 56) = v135;
        *(void *)(a1 + 64) = v163;
        *(void *)(a1 + 72) = v168;
        *(void *)(a1 + 80) = v172;
        *(unsigned char *)(a1 + 88) = v177;
        break;
      case 0xAu:
        uint64_t v137 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v137;
        swift_bridgeObjectRetain();
        break;
      case 0xBu:
        uint64_t v138 = type metadata accessor for UUID();
        v139 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v138 - 8) + 16);
        v139(a1, a2, v138);
        uint64_t v140 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
        v141 = (char *)(a1 + v140);
        v142 = (char *)a2 + v140;
        uint64_t v143 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
        uint64_t v144 = *(void *)(v143 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v144 + 48))(v142, 1, v143))
        {
          uint64_t v145 = sub_10003B754((uint64_t *)&unk_100788F40);
          memcpy(v141, v142, *(void *)(*(void *)(v145 - 8) + 64));
        }
        else
        {
          v139((uint64_t)v141, (uint64_t *)v142, v138);
          *(void *)&v141[*(int *)(v143 + 20)] = *(void *)&v142[*(int *)(v143 + 20)];
          v141[*(int *)(v143 + 24)] = v142[*(int *)(v143 + 24)];
          v158 = *(void (**)(char *, void, uint64_t, uint64_t))(v144 + 56);
          swift_bridgeObjectRetain();
          v158(v141, 0, 1, v143);
        }
        break;
      case 0xCu:
        uint64_t v146 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v146 - 8) + 16))(a1, a2, v146);
        uint64_t v147 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
        *(void *)(a1 + *(int *)(v147 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v147 + 20));
        *(unsigned char *)(a1 + *(int *)(v147 + 24)) = *((unsigned char *)a2 + *(int *)(v147 + 24));
        swift_bridgeObjectRetain();
        break;
      case 0xDu:
        v148 = (void *)*a2;
        uint64_t v149 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v149;
        uint64_t v150 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v150;
        id v151 = v148;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v6 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v152 = *(int *)(sub_10003B754(&qword_100788DA8) + 48);
    uint64_t v153 = a1 + v152;
    uint64_t v154 = (uint64_t)a2 + v152;
    uint64_t v155 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v155 - 8) + 16))(v153, v154, v155);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for TTRAccountsListsViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
        *(void *)(a1 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
        swift_bridgeObjectRetain();
        break;
      case 2u:
        uint64_t v9 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
        *(unsigned char *)(a1 + v10[5]) = *((unsigned char *)a2 + v10[5]);
        *(void *)(a1 + v10[6]) = *(uint64_t *)((char *)a2 + v10[6]);
        uint64_t v11 = v10[7];
        uint64_t v12 = (void *)(a1 + v11);
        uint64_t v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v15 = *v13;
        uint64_t v14 = v13[1];
        *uint64_t v12 = v15;
        v12[1] = v14;
        *(void *)(a1 + v10[8]) = *(uint64_t *)((char *)a2 + v10[8]);
        *(unsigned char *)(a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
        uint64_t v16 = v10[10];
        uint64_t v17 = (void *)(a1 + v16);
        v18 = (uint64_t *)((char *)a2 + v16);
        uint64_t v19 = v18[1];
        *uint64_t v17 = *v18;
        v17[1] = v19;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        break;
      case 3u:
        uint64_t v20 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v20;
        uint64_t v21 = (void *)a2[2];
        *(void *)(a1 + 16) = v21;
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        *(unsigned char *)(a1 + 25) = *((unsigned char *)a2 + 25);
        *(_DWORD *)(a1 + 26) = *(_DWORD *)((char *)a2 + 26);
        swift_bridgeObjectRetain();
        id v22 = v21;
        break;
      case 4u:
      case 5u:
        uint64_t v23 = (void *)*a2;
        uint64_t v24 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v24;
        *(void *)(a1 + 16) = a2[2];
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
        uint64_t v25 = a2[6];
        *(void *)(a1 + 40) = a2[5];
        *(void *)(a1 + 48) = v25;
        uint64_t v26 = a2[8];
        *(void *)(a1 + 56) = a2[7];
        *(void *)(a1 + 64) = v26;
        v27 = (void *)a2[9];
        uint64_t v28 = a2[10];
        uint64_t v29 = a1;
        uint64_t v31 = a2[11];
        uint64_t v30 = a2[12];
        uint64_t v169 = a2[14];
        uint64_t v173 = a2[13];
        char v164 = *((unsigned char *)a2 + 120);
        id v32 = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10003BED8(v27, v28, v31, v30, v173, v169, v164);
        *(void *)(v29 + 72) = v27;
        *(void *)(v29 + 80) = v28;
        *(void *)(v29 + 88) = v31;
        *(void *)(v29 + 96) = v30;
        a1 = v29;
        *(void *)(v29 + 104) = v173;
        *(void *)(v29 + 112) = v169;
        *(unsigned char *)(v29 + 120) = v164;
        v33 = (void *)a2[16];
        v34 = (void *)a2[17];
        LOBYTE(v26) = *((unsigned char *)a2 + 144);
        sub_10003BF34(v33, v34, v26);
        *(void *)(v29 + 128) = v33;
        *(void *)(v29 + 136) = v34;
        *(unsigned char *)(v29 + 144) = v26;
        *(_DWORD *)(v29 + 145) = *(_DWORD *)((char *)a2 + 145);
        *(_OWORD *)(v29 + 152) = *(_OWORD *)(a2 + 19);
        uint64_t v35 = a2[22];
        *(void *)(v29 + 168) = a2[21];
        *(void *)(v29 + 176) = v35;
        v36 = (void *)a2[24];
        *(void *)(a1 + 184) = a2[23];
        *(void *)(a1 + 192) = v36;
        uint64_t v37 = a2[26];
        *(void *)(a1 + 200) = a2[25];
        *(void *)(a1 + 208) = v37;
        *(_WORD *)(a1 + 216) = *((_WORD *)a2 + 108);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v38 = v36;
        swift_bridgeObjectRetain();
        break;
      case 6u:
        uint64_t v39 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v39;
        *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
        *(void *)(a1 + 32) = a2[4];
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        v41 = (void *)a2[6];
        uint64_t v40 = a2[7];
        *(void *)(a1 + 48) = v41;
        *(void *)(a1 + 56) = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v42 = v41;
        break;
      case 8u:
        uint64_t v43 = a2[1];
        unint64_t v44 = a2[2];
        v45 = (void *)a2[3];
        unint64_t v46 = a2[5];
        v48 = (void *)a2[6];
        uint64_t v47 = a2[7];
        uint64_t v159 = a2[4];
        uint64_t v161 = a2[8];
        unint64_t v165 = a2[9];
        v170 = (void *)a2[10];
        char v174 = *((unsigned char *)a2 + 88);
        uint64_t v49 = *a2;
        sub_1002C4C10((void *)*a2, v43, v44, v45, v159, v46, v48, v47, v161, v165, v170, v174);
        *(void *)a1 = v49;
        *(void *)(a1 + 8) = v43;
        *(void *)(a1 + 16) = v44;
        *(void *)(a1 + 24) = v45;
        *(void *)(a1 + 32) = v159;
        *(void *)(a1 + 40) = v46;
        *(void *)(a1 + 48) = v48;
        *(void *)(a1 + 56) = v47;
        *(void *)(a1 + 64) = v161;
        *(void *)(a1 + 72) = v165;
        *(void *)(a1 + 80) = v170;
        *(unsigned char *)(a1 + 88) = v174;
        break;
      case 0xAu:
        uint64_t v50 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v50;
        swift_bridgeObjectRetain();
        break;
      case 0xBu:
        uint64_t v51 = type metadata accessor for UUID();
        v52 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v51 - 8) + 16);
        v52(a1, a2, v51);
        uint64_t v53 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
        v54 = (char *)(a1 + v53);
        v55 = (char *)a2 + v53;
        uint64_t v56 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
        uint64_t v57 = *(void *)(v56 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
        {
          uint64_t v58 = sub_10003B754((uint64_t *)&unk_100788F40);
          memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          v52((uint64_t)v54, (uint64_t *)v55, v51);
          *(void *)&v54[*(int *)(v56 + 20)] = *(void *)&v55[*(int *)(v56 + 20)];
          v54[*(int *)(v56 + 24)] = v55[*(int *)(v56 + 24)];
          v157 = *(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56);
          swift_bridgeObjectRetain();
          v157(v54, 0, 1, v56);
        }
        break;
      case 0xCu:
        uint64_t v59 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
        uint64_t v60 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
        *(void *)(a1 + *(int *)(v60 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v60 + 20));
        *(unsigned char *)(a1 + *(int *)(v60 + 24)) = *((unsigned char *)a2 + *(int *)(v60 + 24));
        swift_bridgeObjectRetain();
        break;
      case 0xDu:
        v61 = (void *)*a2;
        uint64_t v62 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v62;
        uint64_t v63 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v63;
        id v64 = v61;
        swift_bridgeObjectRetain();
        break;
      default:
        uint64_t v5 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(a1, a2, v5);
        break;
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v65 = *(int *)(sub_10003B754((uint64_t *)&unk_100788DB0) + 48);
    uint64_t v66 = a1 + v65;
    uint64_t v67 = (uint64_t)a2 + v65;
    type metadata accessor for TTRAccountsListsViewModel.PinnedList();
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v68 = *(void **)v67;
      uint64_t v69 = *(void *)(v67 + 8);
      *(void *)uint64_t v66 = *(void *)v67;
      *(void *)(v66 + 8) = v69;
      uint64_t v175 = a1;
      *(void *)(v66 + 16) = *(void *)(v67 + 16);
      *(_OWORD *)(v66 + 24) = *(_OWORD *)(v67 + 24);
      uint64_t v70 = *(void *)(v67 + 48);
      *(void *)(v66 + 40) = *(void *)(v67 + 40);
      *(void *)(v66 + 48) = v70;
      uint64_t v71 = *(void *)(v67 + 64);
      *(void *)(v66 + 56) = *(void *)(v67 + 56);
      *(void *)(v66 + 64) = v71;
      v72 = *(void **)(v67 + 72);
      uint64_t v73 = *(void *)(v67 + 80);
      uint64_t v74 = *(void *)(v67 + 88);
      uint64_t v75 = *(void *)(v67 + 96);
      uint64_t v76 = *(void *)(v67 + 104);
      uint64_t v166 = *(void *)(v67 + 112);
      char v162 = *(unsigned char *)(v67 + 120);
      id v77 = v68;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003BED8(v72, v73, v74, v75, v76, v166, v162);
      *(void *)(v66 + 72) = v72;
      *(void *)(v66 + 80) = v73;
      a1 = v175;
      *(void *)(v66 + 88) = v74;
      *(void *)(v66 + 96) = v75;
      *(void *)(v66 + 104) = v76;
      *(void *)(v66 + 112) = v166;
      *(unsigned char *)(v66 + 120) = v162;
      v78 = *(void **)(v67 + 128);
      v79 = *(void **)(v67 + 136);
      LOBYTE(v75) = *(unsigned char *)(v67 + 144);
      sub_10003BF34(v78, v79, v75);
      *(void *)(v66 + 128) = v78;
      *(void *)(v66 + 136) = v79;
      *(unsigned char *)(v66 + 144) = v75;
      *(_DWORD *)(v66 + 145) = *(_DWORD *)(v67 + 145);
      *(_OWORD *)(v66 + 152) = *(_OWORD *)(v67 + 152);
      uint64_t v80 = *(void *)(v67 + 176);
      *(void *)(v66 + 168) = *(void *)(v67 + 168);
      *(void *)(v66 + 176) = v80;
      v81 = *(void **)(v67 + 192);
      *(void *)(v66 + 184) = *(void *)(v67 + 184);
      *(void *)(v66 + 192) = v81;
      uint64_t v82 = *(void *)(v67 + 208);
      *(void *)(v66 + 200) = *(void *)(v67 + 200);
      *(void *)(v66 + 208) = v82;
      *(_WORD *)(v66 + 216) = *(_WORD *)(v67 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v83 = v81;
    }
    else
    {
      uint64_t v84 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v84 - 8) + 16))(v66, v67, v84);
      v85 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
      *(unsigned char *)(v66 + v85[5]) = *(unsigned char *)(v67 + v85[5]);
      *(void *)(v66 + v85[6]) = *(void *)(v67 + v85[6]);
      uint64_t v86 = v85[7];
      v87 = (void *)(v66 + v86);
      v88 = (uint64_t *)(v67 + v86);
      uint64_t v90 = *v88;
      uint64_t v89 = v88[1];
      void *v87 = v90;
      v87[1] = v89;
      *(void *)(v66 + v85[8]) = *(void *)(v67 + v85[8]);
      *(unsigned char *)(v66 + v85[9]) = *(unsigned char *)(v67 + v85[9]);
      uint64_t v91 = v85[10];
      v92 = (void *)(v66 + v91);
      v93 = (void *)(v67 + v91);
      uint64_t v94 = v93[1];
      void *v92 = *v93;
      v92[1] = v94;
      swift_bridgeObjectRetain();
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    *(void *)a1 = *a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1002C68D0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a1;
  if ((uint64_t *)a1 != a2)
  {
    sub_1000243E8(a1, type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      type metadata accessor for TTRAccountsListsViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v74 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v74 - 8) + 16))(v2, a2, v74);
          uint64_t v75 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
          *(void *)(v2 + *(int *)(v75 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v75 + 20));
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v76 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v76 - 8) + 16))(v2, a2, v76);
          id v77 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
          *(unsigned char *)(v2 + v77[5]) = *((unsigned char *)a2 + v77[5]);
          *(void *)(v2 + v77[6]) = *(uint64_t *)((char *)a2 + v77[6]);
          uint64_t v78 = v77[7];
          v79 = (void *)(v2 + v78);
          uint64_t v80 = (uint64_t *)((char *)a2 + v78);
          void *v79 = *v80;
          v79[1] = v80[1];
          *(void *)(v2 + v77[8]) = *(uint64_t *)((char *)a2 + v77[8]);
          *(unsigned char *)(v2 + v77[9]) = *((unsigned char *)a2 + v77[9]);
          uint64_t v81 = v77[10];
          uint64_t v82 = (void *)(v2 + v81);
          id v83 = (uint64_t *)((char *)a2 + v81);
          *uint64_t v82 = *v83;
          v82[1] = v83[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          uint64_t v84 = (void *)a2[2];
          *(void *)(v2 + 16) = v84;
          *(unsigned char *)(v2 + 24) = *((unsigned char *)a2 + 24);
          *(unsigned char *)(v2 + 25) = *((unsigned char *)a2 + 25);
          *(unsigned char *)(v2 + 26) = *((unsigned char *)a2 + 26);
          *(unsigned char *)(v2 + 27) = *((unsigned char *)a2 + 27);
          *(unsigned char *)(v2 + 28) = *((unsigned char *)a2 + 28);
          *(unsigned char *)(v2 + 29) = *((unsigned char *)a2 + 29);
          swift_bridgeObjectRetain();
          id v85 = v84;
          break;
        case 4u:
        case 5u:
          uint64_t v86 = (void *)*a2;
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          *(void *)(v2 + 16) = a2[2];
          *(void *)(v2 + 24) = a2[3];
          *(void *)(v2 + 32) = a2[4];
          *(void *)(v2 + 40) = a2[5];
          *(void *)(v2 + 48) = a2[6];
          *(void *)(v2 + 56) = a2[7];
          *(void *)(v2 + 64) = a2[8];
          v87 = (void *)a2[9];
          uint64_t v88 = a2[10];
          uint64_t v89 = a2[11];
          uint64_t v90 = a2[12];
          uint64_t v137 = a2[14];
          uint64_t v142 = a2[13];
          char v133 = *((unsigned char *)a2 + 120);
          id v91 = v86;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10003BED8(v87, v88, v89, v90, v142, v137, v133);
          *(void *)(v2 + 72) = v87;
          *(void *)(v2 + 80) = v88;
          *(void *)(v2 + 88) = v89;
          *(void *)(v2 + 96) = v90;
          *(void *)(v2 + 104) = v142;
          *(void *)(v2 + 112) = v137;
          *(unsigned char *)(v2 + 120) = v133;
          v92 = (void *)a2[16];
          v93 = (void *)a2[17];
          char v94 = *((unsigned char *)a2 + 144);
          sub_10003BF34(v92, v93, v94);
          *(void *)(v2 + 128) = v92;
          *(void *)(v2 + 136) = v93;
          *(unsigned char *)(v2 + 144) = v94;
          *(unsigned char *)(v2 + 145) = *((unsigned char *)a2 + 145);
          *(unsigned char *)(v2 + 146) = *((unsigned char *)a2 + 146);
          *(unsigned char *)(v2 + 147) = *((unsigned char *)a2 + 147);
          *(unsigned char *)(v2 + 148) = *((unsigned char *)a2 + 148);
          *(void *)(v2 + 152) = a2[19];
          *(void *)(v2 + 160) = a2[20];
          *(void *)(v2 + 168) = a2[21];
          *(void *)(v2 + 176) = a2[22];
          *(void *)(v2 + 184) = a2[23];
          uint64_t v95 = (void *)a2[24];
          *(void *)(v2 + 192) = v95;
          *(void *)(v2 + 200) = a2[25];
          *(void *)(v2 + 208) = a2[26];
          *(unsigned char *)(v2 + 216) = *((unsigned char *)a2 + 216);
          *(unsigned char *)(v2 + 217) = *((unsigned char *)a2 + 217);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v96 = v95;
          swift_bridgeObjectRetain();
          break;
        case 6u:
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          *(void *)(v2 + 16) = a2[2];
          *(void *)(v2 + 24) = a2[3];
          *(void *)(v2 + 32) = a2[4];
          *(unsigned char *)(v2 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v97 = (void *)a2[6];
          *(void *)(v2 + 48) = v97;
          *(void *)(v2 + 56) = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v98 = v97;
          break;
        case 8u:
          uint64_t v99 = *a2;
          uint64_t v100 = a2[1];
          v101 = (void *)a2[3];
          uint64_t v102 = a2[4];
          unint64_t v103 = a2[5];
          uint64_t v104 = a2[7];
          uint64_t v126 = (void *)a2[6];
          uint64_t v129 = a2[8];
          unint64_t v134 = a2[9];
          uint64_t v138 = (void *)a2[10];
          char v143 = *((unsigned char *)a2 + 88);
          unint64_t v105 = a2[2];
          sub_1002C4C10((void *)*a2, v100, v105, v101, v102, v103, v126, v104, v129, v134, v138, v143);
          *(void *)uint64_t v2 = v99;
          *(void *)(v2 + 8) = v100;
          *(void *)(v2 + 16) = v105;
          *(void *)(v2 + 24) = v101;
          *(void *)(v2 + 32) = v102;
          *(void *)(v2 + 40) = v103;
          *(void *)(v2 + 48) = v126;
          *(void *)(v2 + 56) = v104;
          *(void *)(v2 + 64) = v129;
          *(void *)(v2 + 72) = v134;
          *(void *)(v2 + 80) = v138;
          *(unsigned char *)(v2 + 88) = v143;
          break;
        case 0xAu:
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          swift_bridgeObjectRetain();
          break;
        case 0xBu:
          uint64_t v106 = type metadata accessor for UUID();
          uint64_t v107 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v106 - 8) + 16);
          v107(v2, a2, v106);
          uint64_t v108 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
          v109 = (char *)(v2 + v108);
          id v110 = (char *)a2 + v108;
          uint64_t v111 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
          uint64_t v112 = *(void *)(v111 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
          {
            uint64_t v113 = sub_10003B754((uint64_t *)&unk_100788F40);
            memcpy(v109, v110, *(void *)(*(void *)(v113 - 8) + 64));
          }
          else
          {
            v107((uint64_t)v109, (uint64_t *)v110, v106);
            *(void *)&v109[*(int *)(v111 + 20)] = *(void *)&v110[*(int *)(v111 + 20)];
            v109[*(int *)(v111 + 24)] = v110[*(int *)(v111 + 24)];
            id v119 = *(void (**)(char *, void, uint64_t, uint64_t))(v112 + 56);
            swift_bridgeObjectRetain();
            v119(v109, 0, 1, v111);
          }
          break;
        case 0xCu:
          uint64_t v114 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v114 - 8) + 16))(v2, a2, v114);
          uint64_t v115 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
          *(void *)(v2 + *(int *)(v115 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v115 + 20));
          *(unsigned char *)(v2 + *(int *)(v115 + 24)) = *((unsigned char *)a2 + *(int *)(v115 + 24));
          swift_bridgeObjectRetain();
          break;
        case 0xDu:
          uint64_t v116 = (void *)*a2;
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          *(void *)(v2 + 16) = a2[2];
          *(void *)(v2 + 24) = a2[3];
          id v117 = v116;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v6 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(v2, a2, v6);
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v120 = *(int *)(sub_10003B754(&qword_100788DA8) + 48);
      uint64_t v121 = v2 + v120;
      uint64_t v122 = (uint64_t)a2 + v120;
      uint64_t v123 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 16))(v121, v122, v123);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      type metadata accessor for TTRAccountsListsViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v7 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v2, a2, v7);
          uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
          *(void *)(v2 + *(int *)(v8 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v8 + 20));
          swift_bridgeObjectRetain();
          break;
        case 2u:
          uint64_t v9 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(v2, a2, v9);
          uint64_t v10 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
          *(unsigned char *)(v2 + v10[5]) = *((unsigned char *)a2 + v10[5]);
          *(void *)(v2 + v10[6]) = *(uint64_t *)((char *)a2 + v10[6]);
          uint64_t v11 = v10[7];
          uint64_t v12 = (void *)(v2 + v11);
          uint64_t v13 = (uint64_t *)((char *)a2 + v11);
          *uint64_t v12 = *v13;
          v12[1] = v13[1];
          *(void *)(v2 + v10[8]) = *(uint64_t *)((char *)a2 + v10[8]);
          *(unsigned char *)(v2 + v10[9]) = *((unsigned char *)a2 + v10[9]);
          uint64_t v14 = v10[10];
          uint64_t v15 = (void *)(v2 + v14);
          uint64_t v16 = (uint64_t *)((char *)a2 + v14);
          *uint64_t v15 = *v16;
          v15[1] = v16[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          break;
        case 3u:
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          uint64_t v17 = (void *)a2[2];
          *(void *)(v2 + 16) = v17;
          *(unsigned char *)(v2 + 24) = *((unsigned char *)a2 + 24);
          *(unsigned char *)(v2 + 25) = *((unsigned char *)a2 + 25);
          *(unsigned char *)(v2 + 26) = *((unsigned char *)a2 + 26);
          *(unsigned char *)(v2 + 27) = *((unsigned char *)a2 + 27);
          *(unsigned char *)(v2 + 28) = *((unsigned char *)a2 + 28);
          *(unsigned char *)(v2 + 29) = *((unsigned char *)a2 + 29);
          swift_bridgeObjectRetain();
          id v18 = v17;
          break;
        case 4u:
        case 5u:
          uint64_t v19 = (void *)*a2;
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          *(void *)(v2 + 16) = a2[2];
          *(void *)(v2 + 24) = a2[3];
          *(void *)(v2 + 32) = a2[4];
          *(void *)(v2 + 40) = a2[5];
          *(void *)(v2 + 48) = a2[6];
          *(void *)(v2 + 56) = a2[7];
          *(void *)(v2 + 64) = a2[8];
          uint64_t v20 = (void *)a2[9];
          uint64_t v21 = a2[10];
          uint64_t v22 = v2;
          uint64_t v24 = a2[11];
          uint64_t v23 = a2[12];
          uint64_t v135 = a2[14];
          uint64_t v139 = a2[13];
          char v130 = *((unsigned char *)a2 + 120);
          id v25 = v19;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10003BED8(v20, v21, v24, v23, v139, v135, v130);
          *(void *)(v22 + 72) = v20;
          *(void *)(v22 + 80) = v21;
          *(void *)(v22 + 88) = v24;
          *(void *)(v22 + 96) = v23;
          uint64_t v2 = v22;
          *(void *)(v22 + 104) = v139;
          *(void *)(v22 + 112) = v135;
          *(unsigned char *)(v22 + 120) = v130;
          uint64_t v26 = (void *)a2[16];
          v27 = (void *)a2[17];
          char v28 = *((unsigned char *)a2 + 144);
          sub_10003BF34(v26, v27, v28);
          *(void *)(v22 + 128) = v26;
          *(void *)(v22 + 136) = v27;
          *(unsigned char *)(v22 + 144) = v28;
          *(unsigned char *)(v22 + 145) = *((unsigned char *)a2 + 145);
          *(unsigned char *)(v22 + 146) = *((unsigned char *)a2 + 146);
          *(unsigned char *)(v22 + 147) = *((unsigned char *)a2 + 147);
          *(unsigned char *)(v22 + 148) = *((unsigned char *)a2 + 148);
          *(void *)(v22 + 152) = a2[19];
          *(void *)(v22 + 160) = a2[20];
          *(void *)(v22 + 168) = a2[21];
          *(void *)(v22 + 176) = a2[22];
          *(void *)(v22 + 184) = a2[23];
          uint64_t v29 = (void *)a2[24];
          *(void *)(v2 + 192) = v29;
          *(void *)(v2 + 200) = a2[25];
          *(void *)(v2 + 208) = a2[26];
          *(unsigned char *)(v2 + 216) = *((unsigned char *)a2 + 216);
          *(unsigned char *)(v2 + 217) = *((unsigned char *)a2 + 217);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v30 = v29;
          swift_bridgeObjectRetain();
          break;
        case 6u:
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          *(void *)(v2 + 16) = a2[2];
          *(void *)(v2 + 24) = a2[3];
          *(void *)(v2 + 32) = a2[4];
          *(unsigned char *)(v2 + 40) = *((unsigned char *)a2 + 40);
          uint64_t v31 = (void *)a2[6];
          *(void *)(v2 + 48) = v31;
          *(void *)(v2 + 56) = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v32 = v31;
          break;
        case 8u:
          uint64_t v33 = a2[1];
          unint64_t v34 = a2[2];
          uint64_t v35 = (void *)a2[3];
          unint64_t v36 = a2[5];
          id v38 = (void *)a2[6];
          uint64_t v37 = a2[7];
          uint64_t v125 = a2[4];
          uint64_t v127 = a2[8];
          unint64_t v131 = a2[9];
          unint64_t v136 = (void *)a2[10];
          char v140 = *((unsigned char *)a2 + 88);
          uint64_t v39 = *a2;
          sub_1002C4C10((void *)*a2, v33, v34, v35, v125, v36, v38, v37, v127, v131, v136, v140);
          *(void *)uint64_t v2 = v39;
          *(void *)(v2 + 8) = v33;
          *(void *)(v2 + 16) = v34;
          *(void *)(v2 + 24) = v35;
          *(void *)(v2 + 32) = v125;
          *(void *)(v2 + 40) = v36;
          *(void *)(v2 + 48) = v38;
          *(void *)(v2 + 56) = v37;
          *(void *)(v2 + 64) = v127;
          *(void *)(v2 + 72) = v131;
          *(void *)(v2 + 80) = v136;
          *(unsigned char *)(v2 + 88) = v140;
          break;
        case 0xAu:
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          swift_bridgeObjectRetain();
          break;
        case 0xBu:
          uint64_t v40 = type metadata accessor for UUID();
          v41 = *(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v40 - 8) + 16);
          v41(v2, a2, v40);
          uint64_t v42 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
          uint64_t v43 = (char *)(v2 + v42);
          unint64_t v44 = (char *)a2 + v42;
          uint64_t v45 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
          uint64_t v46 = *(void *)(v45 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
          {
            uint64_t v47 = sub_10003B754((uint64_t *)&unk_100788F40);
            memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
          }
          else
          {
            v41((uint64_t)v43, (uint64_t *)v44, v40);
            *(void *)&v43[*(int *)(v45 + 20)] = *(void *)&v44[*(int *)(v45 + 20)];
            v43[*(int *)(v45 + 24)] = v44[*(int *)(v45 + 24)];
            uint64_t v118 = *(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56);
            swift_bridgeObjectRetain();
            v118(v43, 0, 1, v45);
          }
          break;
        case 0xCu:
          uint64_t v48 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v48 - 8) + 16))(v2, a2, v48);
          uint64_t v49 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
          *(void *)(v2 + *(int *)(v49 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v49 + 20));
          *(unsigned char *)(v2 + *(int *)(v49 + 24)) = *((unsigned char *)a2 + *(int *)(v49 + 24));
          swift_bridgeObjectRetain();
          break;
        case 0xDu:
          uint64_t v50 = (void *)*a2;
          *(void *)uint64_t v2 = *a2;
          *(void *)(v2 + 8) = a2[1];
          *(void *)(v2 + 16) = a2[2];
          *(void *)(v2 + 24) = a2[3];
          id v51 = v50;
          swift_bridgeObjectRetain();
          break;
        default:
          uint64_t v5 = type metadata accessor for UUID();
          (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v5 - 8) + 16))(v2, a2, v5);
          break;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = *(int *)(sub_10003B754((uint64_t *)&unk_100788DB0) + 48);
      uint64_t v53 = v2 + v52;
      uint64_t v54 = (uint64_t)a2 + v52;
      type metadata accessor for TTRAccountsListsViewModel.PinnedList();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v55 = *(void **)v54;
        *(void *)uint64_t v53 = *(void *)v54;
        *(void *)(v53 + 8) = *(void *)(v54 + 8);
        uint64_t v141 = v2;
        *(void *)(v53 + 16) = *(void *)(v54 + 16);
        *(void *)(v53 + 24) = *(void *)(v54 + 24);
        *(void *)(v53 + 32) = *(void *)(v54 + 32);
        *(void *)(v53 + 40) = *(void *)(v54 + 40);
        *(void *)(v53 + 48) = *(void *)(v54 + 48);
        *(void *)(v53 + 56) = *(void *)(v54 + 56);
        *(void *)(v53 + 64) = *(void *)(v54 + 64);
        uint64_t v56 = *(void **)(v54 + 72);
        uint64_t v57 = *(void *)(v54 + 80);
        uint64_t v58 = *(void *)(v54 + 88);
        uint64_t v59 = *(void *)(v54 + 96);
        uint64_t v60 = *(void *)(v54 + 104);
        uint64_t v132 = *(void *)(v54 + 112);
        char v128 = *(unsigned char *)(v54 + 120);
        id v61 = v55;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_10003BED8(v56, v57, v58, v59, v60, v132, v128);
        *(void *)(v53 + 72) = v56;
        *(void *)(v53 + 80) = v57;
        uint64_t v2 = v141;
        *(void *)(v53 + 88) = v58;
        *(void *)(v53 + 96) = v59;
        *(void *)(v53 + 104) = v60;
        *(void *)(v53 + 112) = v132;
        *(unsigned char *)(v53 + 120) = v128;
        uint64_t v62 = *(void **)(v54 + 128);
        uint64_t v63 = *(void **)(v54 + 136);
        LOBYTE(v59) = *(unsigned char *)(v54 + 144);
        sub_10003BF34(v62, v63, v59);
        *(void *)(v53 + 128) = v62;
        *(void *)(v53 + 136) = v63;
        *(unsigned char *)(v53 + 144) = v59;
        *(unsigned char *)(v53 + 145) = *(unsigned char *)(v54 + 145);
        *(unsigned char *)(v53 + 146) = *(unsigned char *)(v54 + 146);
        *(unsigned char *)(v53 + 147) = *(unsigned char *)(v54 + 147);
        *(unsigned char *)(v53 + 148) = *(unsigned char *)(v54 + 148);
        *(void *)(v53 + 152) = *(void *)(v54 + 152);
        *(void *)(v53 + 160) = *(void *)(v54 + 160);
        *(void *)(v53 + 168) = *(void *)(v54 + 168);
        *(void *)(v53 + 176) = *(void *)(v54 + 176);
        *(void *)(v53 + 184) = *(void *)(v54 + 184);
        id v64 = *(void **)(v54 + 192);
        *(void *)(v53 + 192) = v64;
        *(void *)(v53 + 200) = *(void *)(v54 + 200);
        *(void *)(v53 + 208) = *(void *)(v54 + 208);
        *(unsigned char *)(v53 + 216) = *(unsigned char *)(v54 + 216);
        *(unsigned char *)(v53 + 217) = *(unsigned char *)(v54 + 217);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v65 = v64;
      }
      else
      {
        uint64_t v66 = type metadata accessor for UUID();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 16))(v53, v54, v66);
        uint64_t v67 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
        *(unsigned char *)(v53 + v67[5]) = *(unsigned char *)(v54 + v67[5]);
        *(void *)(v53 + v67[6]) = *(void *)(v54 + v67[6]);
        uint64_t v68 = v67[7];
        uint64_t v69 = (void *)(v53 + v68);
        uint64_t v70 = (void *)(v54 + v68);
        *uint64_t v69 = *v70;
        v69[1] = v70[1];
        *(void *)(v53 + v67[8]) = *(void *)(v54 + v67[8]);
        *(unsigned char *)(v53 + v67[9]) = *(unsigned char *)(v54 + v67[9]);
        uint64_t v71 = v67[10];
        v72 = (void *)(v53 + v71);
        uint64_t v73 = (void *)(v54 + v71);
        void *v72 = *v73;
        v72[1] = v73[1];
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *(void *)uint64_t v2 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v2;
}

unsigned char *sub_1002C7EA0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 9u:
        uint64_t v10 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        goto LABEL_26;
      case 1u:
        uint64_t v25 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
        uint64_t v26 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
        *(void *)&a1[*(int *)(v26 + 20)] = *(void *)&a2[*(int *)(v26 + 20)];
        goto LABEL_26;
      case 2u:
        uint64_t v27 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
        char v28 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
        a1[v28[5]] = a2[v28[5]];
        *(void *)&a1[v28[6]] = *(void *)&a2[v28[6]];
        *(_OWORD *)&a1[v28[7]] = *(_OWORD *)&a2[v28[7]];
        *(void *)&a1[v28[8]] = *(void *)&a2[v28[8]];
        a1[v28[9]] = a2[v28[9]];
        *(_OWORD *)&a1[v28[10]] = *(_OWORD *)&a2[v28[10]];
        goto LABEL_26;
      case 0xBu:
        uint64_t v29 = type metadata accessor for UUID();
        id v30 = (void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32);
        id v51 = *v30;
        (*v30)(a1, a2, v29);
        uint64_t v31 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
        id v32 = &a1[v31];
        uint64_t v33 = &a2[v31];
        uint64_t v34 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
        uint64_t v35 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
        {
          uint64_t v36 = sub_10003B754((uint64_t *)&unk_100788F40);
          memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          v51(v32, v33, v29);
          *(void *)&v32[*(int *)(v34 + 20)] = *(void *)&v33[*(int *)(v34 + 20)];
          v32[*(int *)(v34 + 24)] = v33[*(int *)(v34 + 24)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
        }
        goto LABEL_26;
      case 0xCu:
        uint64_t v37 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
        uint64_t v38 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
        *(void *)&a1[*(int *)(v38 + 20)] = *(void *)&a2[*(int *)(v38 + 20)];
        a1[*(int *)(v38 + 24)] = a2[*(int *)(v38 + 24)];
LABEL_26:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        break;
    }
    uint64_t v45 = *(int *)(sub_10003B754(&qword_100788DA8) + 48);
    uint64_t v46 = &a1[v45];
    uint64_t v47 = &a2[v45];
    uint64_t v48 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
    goto LABEL_28;
  }
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.Item();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 7u:
      case 9u:
        uint64_t v8 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        goto LABEL_21;
      case 1u:
        uint64_t v11 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
        *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
        goto LABEL_21;
      case 2u:
        uint64_t v13 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
        uint64_t v14 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
        a1[v14[5]] = a2[v14[5]];
        *(void *)&a1[v14[6]] = *(void *)&a2[v14[6]];
        *(_OWORD *)&a1[v14[7]] = *(_OWORD *)&a2[v14[7]];
        *(void *)&a1[v14[8]] = *(void *)&a2[v14[8]];
        a1[v14[9]] = a2[v14[9]];
        *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
        goto LABEL_21;
      case 0xBu:
        uint64_t v15 = type metadata accessor for UUID();
        uint64_t v16 = (void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32);
        uint64_t v50 = *v16;
        (*v16)(a1, a2, v15);
        uint64_t v17 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
        id v18 = &a1[v17];
        uint64_t v19 = &a2[v17];
        uint64_t v20 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
        uint64_t v21 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
        {
          uint64_t v22 = sub_10003B754((uint64_t *)&unk_100788F40);
          memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
        }
        else
        {
          v50(v18, v19, v15);
          *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
          v18[*(int *)(v20 + 24)] = v19[*(int *)(v20 + 24)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
        }
        goto LABEL_21;
      case 0xCu:
        uint64_t v23 = type metadata accessor for UUID();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
        uint64_t v24 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
        *(void *)&a1[*(int *)(v24 + 20)] = *(void *)&a2[*(int *)(v24 + 20)];
        a1[*(int *)(v24 + 24)] = a2[*(int *)(v24 + 24)];
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
        break;
    }
    uint64_t v39 = *(int *)(sub_10003B754((uint64_t *)&unk_100788DB0) + 48);
    uint64_t v40 = &a1[v39];
    v41 = &a2[v39];
    uint64_t v42 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      uint64_t v43 = type metadata accessor for UUID();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
      unint64_t v44 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
      v40[v44[5]] = v41[v44[5]];
      *(void *)&v40[v44[6]] = *(void *)&v41[v44[6]];
      *(_OWORD *)&v40[v44[7]] = *(_OWORD *)&v41[v44[7]];
      *(void *)&v40[v44[8]] = *(void *)&v41[v44[8]];
      v40[v44[9]] = v41[v44[9]];
      *(_OWORD *)&v40[v44[10]] = *(_OWORD *)&v41[v44[10]];
      swift_storeEnumTagMultiPayload();
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

unsigned char *sub_1002C88FC(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1000243E8((uint64_t)a1, type metadata accessor for TTRIAccountsListsTreeView.ExtendedSelection);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 7u:
        case 9u:
          uint64_t v10 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
          goto LABEL_27;
        case 1u:
          uint64_t v25 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
          uint64_t v26 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
          *(void *)&a1[*(int *)(v26 + 20)] = *(void *)&a2[*(int *)(v26 + 20)];
          goto LABEL_27;
        case 2u:
          uint64_t v27 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 32))(a1, a2, v27);
          char v28 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
          a1[v28[5]] = a2[v28[5]];
          *(void *)&a1[v28[6]] = *(void *)&a2[v28[6]];
          *(_OWORD *)&a1[v28[7]] = *(_OWORD *)&a2[v28[7]];
          *(void *)&a1[v28[8]] = *(void *)&a2[v28[8]];
          a1[v28[9]] = a2[v28[9]];
          *(_OWORD *)&a1[v28[10]] = *(_OWORD *)&a2[v28[10]];
          goto LABEL_27;
        case 0xBu:
          uint64_t v29 = type metadata accessor for UUID();
          id v30 = (void (**)(void *, const void *, uint64_t))(*(void *)(v29 - 8) + 32);
          id v51 = *v30;
          (*v30)(a1, a2, v29);
          uint64_t v31 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
          id v32 = &a1[v31];
          uint64_t v33 = &a2[v31];
          uint64_t v34 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
          {
            uint64_t v36 = sub_10003B754((uint64_t *)&unk_100788F40);
            memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
            v51(v32, v33, v29);
            *(void *)&v32[*(int *)(v34 + 20)] = *(void *)&v33[*(int *)(v34 + 20)];
            v32[*(int *)(v34 + 24)] = v33[*(int *)(v34 + 24)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          goto LABEL_27;
        case 0xCu:
          uint64_t v37 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
          uint64_t v38 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
          *(void *)&a1[*(int *)(v38 + 20)] = *(void *)&a2[*(int *)(v38 + 20)];
          a1[*(int *)(v38 + 24)] = a2[*(int *)(v38 + 24)];
LABEL_27:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
      uint64_t v45 = *(int *)(sub_10003B754(&qword_100788DA8) + 48);
      uint64_t v46 = &a1[v45];
      uint64_t v47 = &a2[v45];
      uint64_t v48 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v46, v47, v48);
      goto LABEL_29;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.Item();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 7u:
        case 9u:
          uint64_t v8 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
          goto LABEL_22;
        case 1u:
          uint64_t v11 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
          uint64_t v12 = type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
          *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
          goto LABEL_22;
        case 2u:
          uint64_t v13 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
          uint64_t v14 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
          a1[v14[5]] = a2[v14[5]];
          *(void *)&a1[v14[6]] = *(void *)&a2[v14[6]];
          *(_OWORD *)&a1[v14[7]] = *(_OWORD *)&a2[v14[7]];
          *(void *)&a1[v14[8]] = *(void *)&a2[v14[8]];
          a1[v14[9]] = a2[v14[9]];
          *(_OWORD *)&a1[v14[10]] = *(_OWORD *)&a2[v14[10]];
          goto LABEL_22;
        case 0xBu:
          uint64_t v15 = type metadata accessor for UUID();
          uint64_t v16 = (void (**)(void *, const void *, uint64_t))(*(void *)(v15 - 8) + 32);
          uint64_t v50 = *v16;
          (*v16)(a1, a2, v15);
          uint64_t v17 = *(int *)(type metadata accessor for TTRAccountsListsViewModel.HashtagsSection() + 20);
          id v18 = &a1[v17];
          uint64_t v19 = &a2[v17];
          uint64_t v20 = type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
          uint64_t v21 = *(void *)(v20 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
          {
            uint64_t v22 = sub_10003B754((uint64_t *)&unk_100788F40);
            memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
          }
          else
          {
            v50(v18, v19, v15);
            *(void *)&v18[*(int *)(v20 + 20)] = *(void *)&v19[*(int *)(v20 + 20)];
            v18[*(int *)(v20 + 24)] = v19[*(int *)(v20 + 24)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
          }
          goto LABEL_22;
        case 0xCu:
          uint64_t v23 = type metadata accessor for UUID();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 32))(a1, a2, v23);
          uint64_t v24 = type metadata accessor for TTRAccountsListsViewModel.Hashtags();
          *(void *)&a1[*(int *)(v24 + 20)] = *(void *)&a2[*(int *)(v24 + 20)];
          a1[*(int *)(v24 + 24)] = a2[*(int *)(v24 + 24)];
LABEL_22:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
          break;
      }
      uint64_t v39 = *(int *)(sub_10003B754((uint64_t *)&unk_100788DB0) + 48);
      uint64_t v40 = &a1[v39];
      v41 = &a2[v39];
      uint64_t v42 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
      }
      else
      {
        uint64_t v43 = type metadata accessor for UUID();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
        unint64_t v44 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
        v40[v44[5]] = v41[v44[5]];
        *(void *)&v40[v44[6]] = *(void *)&v41[v44[6]];
        *(_OWORD *)&v40[v44[7]] = *(_OWORD *)&v41[v44[7]];
        *(void *)&v40[v44[8]] = *(void *)&v41[v44[8]];
        v40[v44[9]] = v41[v44[9]];
        *(_OWORD *)&v40[v44[10]] = *(_OWORD *)&v41[v44[10]];
        swift_storeEnumTagMultiPayload();
      }
LABEL_29:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

id sub_1002C937C(void *a1)
{
  uint64_t v2 = v1;
  ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v5 = &v2[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_cslHelpAnchor];
  uint64_t v6 = v2;
  uint64_t v7 = (uint64_t *)TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor();
  uint64_t v9 = *v7;
  uint64_t v8 = v7[1];
  *(void *)uint64_t v5 = 0xD000000000000014;
  *((void *)v5 + 1) = 0x80000001006AEF80;
  *((void *)v5 + 2) = v9;
  *((void *)v5 + 3) = v8;
  *((_OWORD *)v5 + 2) = xmmword_1006736B0;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  uint64_t v10 = &v6[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreEllipsisPlaceholder];
  *(void *)uint64_t v10 = 0xD000000000000024;
  *((void *)v10 + 1) = 0x80000001006A57F0;
  uint64_t v11 = &v6[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToPlaceholder];
  *(void *)uint64_t v11 = 0xD000000000000017;
  *((void *)v11 + 1) = 0x80000001006A5820;
  uint64_t v12 = &v6[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreTagsPlaceholder];
  *(void *)uint64_t v12 = 0xD000000000000029;
  *((void *)v12 + 1) = 0x80000001006A5840;
  swift_bridgeObjectRetain();
  static TTRTypedController.currentArgument.getter();
  *(objc_super *)&v6[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_presenter] = v16[1];
  swift_unknownObjectRetain();

  v16[0].receiver = v6;
  v16[0].super_class = ObjectType;
  id v13 = [(objc_super *)v16 initWithCoder:a1];

  id v14 = v13;
  swift_unknownObjectRelease();
  if (v14) {

  }
  return v14;
}

void sub_1002C95C8()
{
  v1 = v0;
  sub_10003B754(&qword_1007885E0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_100670000;
  *(void *)(v2 + 32) = swift_unknownObjectWeakLoadStrong();
  *(void *)(v2 + 40) = swift_unknownObjectWeakLoadStrong();
  *(void *)(v2 + 48) = swift_unknownObjectWeakLoadStrong();
  *(void *)(v2 + 56) = swift_unknownObjectWeakLoadStrong();
  *(void *)(v2 + 64) = swift_unknownObjectWeakLoadStrong();
  specialized Array._endMutation()();
  sub_10003B754(&qword_1007885E8);
  sub_1000368FC(0, (unint64_t *)&unk_1007885D0);
  sub_100073E8C();
  unint64_t v3 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  sub_1002CA370(v3);
  swift_bridgeObjectRelease();
  sub_1002C9E98();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C680;
  *(void *)(v4 + 32) = swift_unknownObjectWeakLoadStrong();
  *(void *)(v4 + 40) = swift_unknownObjectWeakLoadStrong();
  specialized Array._endMutation()();
  unint64_t v5 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  sub_1002CA4BC(v5, (uint64_t)sub_1002CAF44);
  swift_bridgeObjectRelease();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_10066C6F0;
  *(void *)(v6 + 32) = swift_unknownObjectWeakLoadStrong();
  specialized Array._endMutation()();
  unint64_t v7 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  sub_1002CA660(v7);
  swift_bridgeObjectRelease();
  sub_10003B754(&qword_1007885F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreTagsPlaceholder];
  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_learnMoreTagsPlaceholder + 8];
  *(void *)(inited + 32) = Strong;
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v11;
  *(unsigned char *)(inited + 56) = 2;
  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (!v12)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v13 = *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToPlaceholder];
  uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_howToPlaceholder + 8];
  *(void *)(inited + 64) = v12;
  *(void *)(inited + 72) = v13;
  *(void *)(inited + 80) = v14;
  *(unsigned char *)(inited + 88) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1002CA8C0(inited, (uint64_t)v1);
  swift_setDeallocating();
  swift_arrayDestroy();
  id v15 = [v1 view];
  if (!v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v16 = v15;
  uint64_t v17 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v17)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  id v18 = v17;
  [v17 setLayoutMargins:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  [v18 setEdgesPreservingSuperviewLayoutMargins:10];
  [v18 setLayoutMarginsRelativeArrangement:1];
  if ([v16 effectiveUserInterfaceLayoutDirection] == (id)1)
  {
    uint64_t v34 = v18;
    id v19 = [v18 arrangedSubviews];
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v20 >> 62) {
      goto LABEL_19;
    }
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v21; uint64_t v21 = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v22 = 4;
      uint64_t v23 = 0;
      if ((v20 & 0xC000000000000001) != 0)
      {
LABEL_9:
        id v24 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_11;
      }
      while (1)
      {
        id v24 = *(id *)(v20 + 8 * v22);
LABEL_11:
        uint64_t v25 = v24;
        uint64_t v26 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          break;
        }
        self;
        uint64_t v27 = (void *)swift_dynamicCastObjCClass();
        if (v27)
        {
          char v28 = v27;
          if ([v27 contentMode] == (id)7) {
            [v28 setContentMode:8];
          }
        }

        if (v26 == v21) {
          goto LABEL_20;
        }
        uint64_t v23 = ++v22 - 4;
        if ((v20 & 0xC000000000000001) != 0) {
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
    }
LABEL_20:
    swift_bridgeObjectRelease_n();
    id v18 = v34;
  }

  uint64_t v29 = swift_unknownObjectWeakLoadStrong();
  if (v29)
  {
    id v30 = (void *)v29;
    v31._countAndFlagsBits = 0xD000000000000079;
    v32._object = (void *)0x80000001006B3C60;
    v31._object = (void *)0x80000001006B3CA0;
    v32._countAndFlagsBits = 0xD000000000000032;
    TTRLocalizedString(_:comment:)(v32, v31);
    NSString v33 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v30 setAccessibilityLabel:v33];

    return;
  }
LABEL_27:
  __break(1u);
}

void sub_1002C9E98()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_11;
  }
  v1 = (void *)Strong;
  static TTRLocalizableStrings.LearnMore.whySmartLists.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setText:v2];

  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (!v3)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v4 = (void *)v3;
  static TTRLocalizableStrings.LearnMore.whySmartListsExampleBody.getter();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v5];

  uint64_t v6 = swift_unknownObjectWeakLoadStrong();
  if (!v6)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  unint64_t v7 = (void *)v6;
  static TTRLocalizableStrings.LearnMore.makeSmartListBody.getter();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setText:v8];

  uint64_t v9 = swift_unknownObjectWeakLoadStrong();
  if (!v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v10 = (void *)v9;
  static TTRLocalizableStrings.LearnMore.filteringTags.getter();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setText:v11];

  uint64_t v12 = swift_unknownObjectWeakLoadStrong();
  if (!v12)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v13 = (void *)v12;
  static TTRLocalizableStrings.LearnMore.addRemindersToSmartLists.getter();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v13 setText:v14];

  uint64_t v15 = swift_unknownObjectWeakLoadStrong();
  if (!v15)
  {
LABEL_15:
    __break(1u);
    return;
  }
  uint64_t v16 = (void *)v15;
  static TTRLocalizableStrings.LearnMore.howToAddRemindersToSmartLists.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setText:v17];
}

uint64_t type metadata accessor for TTRILearnMoreCSLViewController()
{
  return self;
}

void sub_1002CA358(unint64_t a1)
{
}

uint64_t sub_1002CA370(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v2) {
      goto LABEL_10;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v4 = 0;
  double left = UIEdgeInsetsZero.left;
  double bottom = UIEdgeInsetsZero.bottom;
  double right = UIEdgeInsetsZero.right;
  do
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(a1 + 8 * v4 + 32);
    }
    uint64_t v9 = v8;
    ++v4;
    [v8 setTextContainerInset:UIEdgeInsetsZero.top, left, bottom, right];
    id v10 = [v9 textContainer];
    [v10 setLineFragmentPadding:0.0];
  }
  while (v2 != v4);
LABEL_10:

  return swift_bridgeObjectRelease();
}

void sub_1002CA4BC(unint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v3 = (void *)static UIFont.roundedBodyFont.getter();
  v16.super.isa = UIFont.withBoldTrait()().super.isa;

  uint64_t v4 = *(void **)TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor();
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v6 = v4;
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    return;
  }
LABEL_12:
  id v14 = v4;
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  if (!v5) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v7 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(a1 + 8 * v7);
    }
    uint64_t v9 = v8;
    uint64_t v10 = v7 - 3;
    if (__OFADD__(v7 - 4, 1))
    {
      __break(1u);
      goto LABEL_12;
    }
    id v11 = [v8 attributedText:v15];
    if (!v11) {
      break;
    }
    uint64_t v12 = v11;
    __chkstk_darwin(v11);
    uint64_t v13 = NSAttributedString.withMutations(_:)();

    [v9 setAttributedText:v13];
    ++v7;
    if (v10 == v5) {
      goto LABEL_10;
    }
  }
  __break(1u);
}

void sub_1002CA660(unint64_t a1)
{
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  uint64_t v2 = static UIImage.ttr_systemSymbolImage(named:)();
  if (!v2) {
    return;
  }
  uint64_t v3 = (void *)v2;
  sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  uint64_t v4 = (void *)static UIColor.ttrSecondaryLabelColor.getter();
  id v5 = [v3 imageWithTintColor:v4];

  if (!v5) {
    return;
  }
  if (!(a1 >> 62))
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_5;
    }
LABEL_16:

    swift_bridgeObjectRelease();
    return;
  }
LABEL_15:
  swift_bridgeObjectRetain();
  uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
  if (!v6) {
    goto LABEL_16;
  }
LABEL_5:
  for (uint64_t i = 4; ; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(a1 + 8 * i);
    }
    uint64_t v9 = v8;
    uint64_t v10 = i - 3;
    if (__OFADD__(i - 4, 1))
    {
      __break(1u);
      goto LABEL_15;
    }
    id v11 = [v8 attributedText];
    if (!v11) {
      break;
    }
    uint64_t v12 = v11;
    __chkstk_darwin(v11);
    uint64_t v13 = NSAttributedString.withMutations(_:)();

    [v9 setAttributedText:v13];
    if (v10 == v6)
    {

      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
}

void sub_1002CA8C0(uint64_t a1, uint64_t a2)
{
  sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  uint64_t v3 = (void *)static UIColor.ttrLinkColor.getter();
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    id v19 = v3;
    swift_bridgeObjectRetain();
    for (uint64_t i = (id *)(a1 + 56); ; i += 4)
    {
      int v6 = *(unsigned __int8 *)i;
      id v7 = *(i - 3);
      swift_bridgeObjectRetain_n();
      id v8 = v7;
      id v9 = [v8 text];
      if (!v9) {
        break;
      }
      uint64_t v10 = v9;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      sub_100022F44();
      LOBYTE(v10) = StringProtocol.contains<A>(_:)();
      swift_bridgeObjectRelease();
      if (v10)
      {
        if (v6)
        {
          if (v6 == 1)
          {
            unint64_t v11 = 0x1000000000000051;
            uint64_t v12 = 0x6F4D206E7261654CLL;
            unint64_t v13 = 0xAD0000A680E26572;
            unint64_t v14 = 0x80000001006A56B0;
          }
          else
          {
            unint64_t v11 = 0x100000000000005CLL;
            uint64_t v12 = 0x1000000000000018;
            unint64_t v14 = 0x80000001006A5730;
            unint64_t v13 = 0x80000001006A5710;
          }
        }
        else
        {
          uint64_t v12 = 0x41206F542D776F48;
          unint64_t v13 = 0xEE00656C63697472;
          unint64_t v11 = 0xD000000000000052;
          unint64_t v14 = 0x80000001006A5790;
        }
        TTRLocalizedString(_:comment:)(*(Swift::String *)&v12, *(Swift::String *)&v11);
        [v8 setSelectable:1];
        [v8 _setInteractiveTextSelectionDisabled:1];
        [v8 setDelegate:a2];
        id v15 = [v8 attributedText];
        if (!v15) {
          goto LABEL_19;
        }
        UIFont v16 = v15;
        __chkstk_darwin(v15);
        NSString v17 = NSAttributedString.withMutations(_:)();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        [v8 setAttributedText:v17];

        swift_bridgeObjectRelease();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (!--v4)
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
LABEL_19:
    __break(1u);
  }
  else
  {
  }
}

uint64_t sub_1002CAC0C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong
    && (id v5 = (void *)Strong,
        sub_1000368FC(0, (unint64_t *)&unk_1007885D0),
        id v6 = a1,
        char v7 = static NSObject.== infix(_:_:)(),
        v6,
        v6,
        v5,
        (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_presenter);
    if (qword_1007852B0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_10078DB50);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    sub_100038D28((void *)(v8 + 48), *(void *)(v8 + 72));
    sub_10007284C();
  }
  else
  {
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    if (v10)
    {
      unint64_t v11 = (void *)v10;
      sub_1000368FC(0, (unint64_t *)&unk_1007885D0);
      id v12 = a1;
      char v13 = static NSObject.== infix(_:_:)();

      if (v13)
      {
        uint64_t v14 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders30TTRILearnMoreCSLViewController_presenter);
        if (qword_1007852B0 != -1) {
          swift_once();
        }
        uint64_t v15 = type metadata accessor for Logger();
        sub_100018BF8(v15, (uint64_t)qword_10078DB50);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_10001A078();
        swift_bridgeObjectRelease();
        UIFont v16 = (uint64_t *)*sub_100038D28((void *)(v14 + 48), *(void *)(v14 + 72));
        NSString v17 = (void *)swift_unknownObjectWeakLoadStrong();
        if (v17)
        {
          id v18 = v17;
          sub_10054A924(1, v17, v16);
        }
        else
        {
          if (qword_1007851D0 != -1) {
            swift_once();
          }
          sub_100018BF8(v15, (uint64_t)qword_100788460);
          id v19 = Logger.logObject.getter();
          os_log_type_t v20 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v19, v20))
          {
            uint64_t v21 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v21 = 0;
            _os_log_impl((void *)&_mh_execute_header, v19, v20, "Attempted to open learn more with empty navigation controller", v21, 2u);
            swift_slowDealloc();
          }
        }
      }
    }
  }
  return 0;
}

void sub_1002CAF38(int a1)
{
  v2.super.isa = *(Class *)(v1 + 32);
  sub_1000E69F0(a1, *(Swift::String *)(v1 + 16), v2);
}

uint64_t sub_1002CAF44(uint64_t a1)
{
  return sub_1000E6908(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

ValueMetadata *type metadata accessor for TTRILearnMoreCSLViewController.Argument()
{
  return &type metadata for TTRILearnMoreCSLViewController.Argument;
}

uint64_t type metadata accessor for TTRIWhatsNewPresenter()
{
  return self;
}

uint64_t sub_1002CAF84()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100796740);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100796740);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002CB04C(uint64_t a1, uint64_t a2)
{
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) != 0
    && (uint64_t v4 = type metadata accessor for TTRIRemindersListBarItem(),
        *(unsigned __int8 *)(a1 + *(int *)(v4 + 36)) == *(unsigned __int8 *)(a2 + *(int *)(v4 + 36))))
  {
    char v5 = *(unsigned char *)(a1 + *(int *)(v4 + 40)) ^ *(unsigned char *)(a2 + *(int *)(v4 + 40)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

void sub_1002CB0D8(uint64_t a1, Swift::UInt a2, char a3)
{
  Swift::UInt v3 = a2;
  if (a3)
  {
    if (a3 == 1) {
      Hasher._combine(_:)(4uLL);
    }
    else {
      Swift::UInt v3 = qword_100673FF0[a2];
    }
  }
  else
  {
    Hasher._combine(_:)(2uLL);
  }
  Hasher._combine(_:)(v3);
}

uint64_t sub_1002CB138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1002CB16C(uint64_t a1, uint64_t a2)
{
  return sub_1002CB04C(a1, a2);
}

Swift::Int sub_1002CB178()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_1002CB0D8((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

void sub_1002CB1C8(uint64_t a1)
{
  sub_1002CB0D8(a1, *(void *)v1, *(unsigned char *)(v1 + 8));
}

Swift::Int sub_1002CB1D4()
{
  Swift::UInt v1 = *(void *)v0;
  char v2 = *(unsigned char *)(v0 + 8);
  Hasher.init(_seed:)();
  sub_1002CB0D8((uint64_t)v4, v1, v2);
  return Hasher._finalize()();
}

uint64_t sub_1002CB220(uint64_t a1, uint64_t a2)
{
  return sub_1002CE06C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_1002CB238(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a1 + 9);
  int v4 = *(unsigned __int8 *)(a2 + 8);
  int v5 = *(unsigned __int8 *)(a2 + 9);
  return sub_1000B9090(*(void *)a1, *(void *)a2) & ~(v2 ^ v4) & ~(v3 ^ v5) & 1;
}

uint64_t sub_1002CB294()
{
  if (v0[8])
  {
    uint64_t v1 = v0[8];
  }
  else
  {
    int v2 = v0;
    v4[3] = *v0;
    v4[0] = v0;
    type metadata accessor for TTRIAddReminderBarButtonModule();
    swift_allocObject();
    swift_retain();
    uint64_t v1 = sub_100012204(v4, (uint64_t)"newReminderAction:");
    [*(id *)(v1 + 24) setContentHorizontalAlignment:4 v4[0]];
    v2[8] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1002CB370(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v3 + 16;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v8 = Strong;
  if ((a1 & 1) == 0)
  {
    if (Strong)
    {
      uint64_t v19 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 768))(v133, ObjectType, v19);
      if (v134)
      {
        sub_100038D28(v133, v134);
        unsigned __int8 v21 = sub_100559BB0();
        sub_100038CD8((uint64_t)v133);
      }
      else
      {
        sub_10003B6F8((uint64_t)v133, &qword_100796838);
        unsigned __int8 v21 = 0;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      unsigned __int8 v21 = 0;
    }
    uint64_t v6 = v21 & 1;
    int v42 = *(__int16 *)(v3 + 56);
    id v30 = (uint64_t *)(v3 + 48);
    if ((v42 & 0x80000000) == 0)
    {
      BOOL v43 = (*v30 & 1) == 0;
      uint64_t result = sub_1002CE710(*v30, v42);
      if ((v6 ^ v43)) {
        return result;
      }
    }
    uint64_t v126 = (_WORD *)(v3 + 56);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v44 = swift_allocObject();
    *(_OWORD *)(v44 + 16) = xmmword_10066D470;
    id v45 = *(id *)(sub_1002CB294() + 16);
    swift_release();
    *(void *)(v44 + 32) = v45;
    v133[0] = v44;
    specialized Array._endMutation()();
    unint64_t v31 = v133[0];
    if ((v21 & 1) == 0)
    {
LABEL_40:
      uint64_t v48 = *(void **)(v3 + 32);
      sub_1000368FC(0, &qword_100788D80);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v48 setItems:isa animated:a2 & 1];

      __int16 v50 = 0;
      goto LABEL_96;
    }
    uint64_t v26 = (uint64_t)[objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
    uint64_t v46 = (char *)sub_1002CC0E4();
    if (!(v31 >> 62))
    {
      if (!__OFADD__(*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10), 2)) {
        goto LABEL_36;
      }
      goto LABEL_113;
    }
LABEL_111:
    swift_bridgeObjectRetain();
    uint64_t v121 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!__OFADD__(v121, 2))
    {
LABEL_36:
      sub_1000909B8();
      specialized Array._endMutation()();
      unint64_t v31 = (unint64_t)(id)v26;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v133[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v133[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      {
LABEL_37:
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
        uint64_t v47 = v46;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v133[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v133[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();

        goto LABEL_40;
      }
LABEL_114:
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      goto LABEL_37;
    }
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  if (Strong)
  {
    uint64_t v9 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    uint64_t v10 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    uint64_t v11 = swift_getObjectType();
    id v12 = *(uint64_t (**)(void, uint64_t, uint64_t))(v10 + 152);
    id v13 = v9;
    uint64_t v14 = v12(0, v11, v10);

    uint64_t v15 = *(void *)(v8 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
    uint64_t v16 = swift_getObjectType();
    uint64_t v129 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 336))(v14, v16, v15);
    LOWORD(v13) = v17;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    unsigned int v18 = (unsigned __int16)v13 & 0x101;
  }
  else
  {
    unsigned int v18 = 0;
    uint64_t v129 = _swiftEmptyArrayStorage;
  }
  uint64_t v22 = *(void *)(v3 + 48);
  unsigned int v125 = v18 | 0xFFFF8000;
  uint64_t v124 = (uint64_t *)(v3 + 48);
  id v24 = (__int16 *)(v3 + 56);
  int v23 = *(__int16 *)(v3 + 56);
  if ((~v23 & 0xFFFFFEFE) == 0) {
    goto LABEL_11;
  }
  if ((v23 & 0x80000000) == 0)
  {
    sub_1002CE710(v22, v23);
LABEL_11:
    BOOL v25 = v18 > 0xFF;
    LOBYTE(v18) = v18 & 1;
    uint64_t v26 = v25;
    goto LABEL_14;
  }
  int v119 = (v23 & 0x100) == 0;
  BOOL v120 = (v23 & 1) == 0;
  uint64_t v26 = v18 > 0xFF;
  if (sub_1000B9090(v22, (uint64_t)v129) & 1) != 0 && ((v18 ^ v120))
  {
    id v24 = (__int16 *)(v3 + 56);
    if (v26 != v119)
    {
      return sub_1002CDCC8((uint64_t)v129, v125);
    }
  }
  else
  {
    id v24 = (__int16 *)(v3 + 56);
  }
LABEL_14:
  int v27 = *v24;
  uint64_t v126 = v24;
  if ((~v27 & 0xFFFFFEFE) == 0 || (v27 & 0x80000000) == 0)
  {
    swift_bridgeObjectRetain();
LABEL_19:
    id v30 = (uint64_t *)v125;
    sub_1002CDCAC((uint64_t)v129, v125);
    swift_retain();
    unint64_t v31 = 0;
    unint64_t v32 = (unint64_t)sub_1002CE1AC((uint64_t)v129, v3);
    swift_release();
    sub_1002CDCC8((uint64_t)v129, v125);
    v132[0] = v32;
    if (!v26)
    {
LABEL_45:
      if (v18)
      {
        sub_1002CC678();
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        unint64_t v31 = *(void *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v31 >= *(void *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      if (v132[0] >> 62) {
        goto LABEL_107;
      }
      uint64_t v46 = *(char **)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v46)
      {
LABEL_60:
        uint64_t v56 = *(void **)(v3 + 32);
        sub_1000368FC(0, &qword_100788D80);
        Class v57 = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v56 setItems:v57 animated:a2 & 1];

        goto LABEL_61;
      }
      uint64_t v51 = (uint64_t)(v46 - 1);
      if (!__OFSUB__(v46, 1))
      {
        while (v51 >= 1)
        {
          id v30 = (uint64_t *)UIAccessibilityCustomRotorItemResult_ptr;
          while (1)
          {
            id v52 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:5 target:0 action:0];
            uint64_t v53 = v52;
            if (v132[0] >> 62)
            {
              id v55 = v52;
              swift_bridgeObjectRetain();
              uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v26 = *(void *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
              id v54 = v52;
            }
            if (v26 < (uint64_t)--v46) {
              break;
            }
            sub_10054BFC4((uint64_t)v46, (uint64_t)v46, (uint64_t)v53);

            if ((unint64_t)v46 <= 1) {
              goto LABEL_60;
            }
          }
          __break(1u);
LABEL_107:
          swift_bridgeObjectRetain();
          unint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v31) {
            break;
          }
          swift_bridgeObjectRetain();
          uint64_t v46 = (char *)_CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          uint64_t v51 = (uint64_t)(v46 - 1);
          if (__OFSUB__(v46, 1)) {
            goto LABEL_110;
          }
        }
        goto LABEL_60;
      }
LABEL_110:
      __break(1u);
      goto LABEL_111;
    }
    swift_beginAccess();
    uint64_t v33 = *(void *)(v3 + 40);
    if (*(void *)(v33 + 16) && (unint64_t v34 = sub_10035C2F8(1uLL, 2), (v35 & 1) != 0))
    {
      uint64_t v36 = *(void **)(*(void *)(v33 + 56) + 8 * v34);
      swift_endAccess();
      uint64_t v26 = v36;
      unint64_t v37 = swift_bridgeObjectRetain();
      uint64_t v38 = sub_100091EEC(v37, v26);
      char v40 = v39;
      swift_bridgeObjectRelease();
      if ((v40 & 1) == 0)
      {
        unint64_t v31 = v38 + 1;
        if (__OFADD__(v38, 1))
        {
          __break(1u);
        }
        else
        {
          uint64_t result = (uint64_t)sub_1002CC61C();
          id v30 = (uint64_t *)result;
          if (!(v32 >> 62))
          {
            if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10) >= (int64_t)v31) {
              goto LABEL_26;
            }
            goto LABEL_117;
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v122 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (v122 >= (uint64_t)v31)
        {
LABEL_26:
          if ((v31 & 0x8000000000000000) == 0)
          {
            sub_10054BFC4(v31, v31, (uint64_t)v30);

            goto LABEL_45;
          }
LABEL_118:
          __break(1u);
          return result;
        }
LABEL_117:
        __break(1u);
        goto LABEL_118;
      }
    }
    else
    {
      swift_endAccess();
    }
    sub_1002CC61C();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v31 = *(void *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v31 >= *(void *)((v132[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    goto LABEL_45;
  }
  uint64_t v28 = *v124;
  sub_1002CDCAC((uint64_t)v129, v125);
  sub_1002CE6FC(v28, v27);
  char v29 = sub_1002CE50C((uint64_t)v129, v18 & 1, v28, v27 & 0x101);
  sub_1002CE710(v28, v27);
  if ((v29 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_61:
  id v58 = sub_1002CC678();
  uint64_t v59 = swift_unknownObjectWeakLoadStrong();
  if (!v59) {
    goto LABEL_64;
  }
  uint64_t v60 = v59;
  id v61 = *(void **)(v59 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v62 = *(void *)(v59 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t v63 = swift_getObjectType();
  id v64 = *(uint64_t (**)(void, uint64_t, uint64_t))(v62 + 152);
  id v65 = v61;
  uint64_t v66 = v64(0, v63, v62);

  uint64_t v67 = v60 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess();
  uint64_t v68 = *(unsigned __int8 *)(v67 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() + 112));
  uint64_t v69 = *(void *)(v60 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v70 = swift_getObjectType();
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v69 + 344))(v66, v68, v70, v69);
  uint64_t v73 = v72;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v74 = *(void *)(v71 + 16);
  swift_bridgeObjectRelease();
  if (v74) {
    BOOL v75 = v73 > 0;
  }
  else {
LABEL_64:
  }
    BOOL v75 = 0;
  [v58 setEnabled:v75];

  id v76 = sub_1002CC61C();
  uint64_t v77 = swift_unknownObjectWeakLoadStrong();
  if (!v77) {
    goto LABEL_68;
  }
  uint64_t v78 = v77;
  v79 = *(void **)(v77 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v80 = *(void *)(v77 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t v81 = swift_getObjectType();
  uint64_t v82 = *(uint64_t (**)(void, uint64_t, uint64_t))(v80 + 152);
  id v83 = v79;
  uint64_t v84 = v82(0, v81, v80);

  uint64_t v85 = *(void *)(v78 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v86 = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v85 + 352))(v132, v84, v86, v85);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001D903C((uint64_t)v132, (uint64_t)v133);
  if (v133[0])
  {
    uint64_t v87 = v135;
    sub_1002CE800(v132, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1002CE724);
    BOOL v88 = v87 > 0;
  }
  else
  {
LABEL_68:
    BOOL v88 = 0;
  }
  uint64_t v6 = (uint64_t)v129;
  id v30 = (uint64_t *)(v3 + 48);
  [v76 setEnabled:v88];

  uint64_t v89 = v129[2];
  if (v89)
  {
    uint64_t v90 = v3 + 40;
    id v91 = (unsigned __int8 *)v129 + 42;
    while (1)
    {
      Swift::UInt v92 = *(void *)(v91 - 10);
      int v93 = *(v91 - 2);
      uint64_t v94 = *(v91 - 1);
      int v95 = *v91;
      swift_beginAccess();
      uint64_t v96 = *(void *)v90;
      if (*(void *)(*(void *)v90 + 16))
      {
        unint64_t v97 = sub_10035C2F8(v92, v93);
        if (v98) {
          break;
        }
      }
      swift_endAccess();
LABEL_72:
      v91 += 16;
      if (!--v89)
      {
        uint64_t v6 = (uint64_t)v129;
        __int16 v50 = v125;
        sub_1002CDCC8((uint64_t)v129, v125);
        id v30 = v124;
        goto LABEL_96;
      }
    }
    uint64_t v99 = *(void **)(*(void *)(v96 + 56) + 8 * v97);
    swift_endAccess();
    id v100 = v99;
    [v100 setEnabled:v94];
    if (v94) {
      int v101 = 256;
    }
    else {
      int v101 = 0;
    }
    if (v95) {
      int v102 = 0x10000;
    }
    else {
      int v102 = 0;
    }
    id v103 = v100;
    unsigned int v131 = v131 & 0xFF000000 | v93 | v101 | v102;
    id v104 = sub_1002CC6D4(v92, v131);
    [v103 setImage:v104];

    if (v93)
    {
      if (v93 == 1)
      {
        unsigned int v105 = v128 & 0xFF000000 | 1 | v101 | v102;
        id v106 = v103;
        uint64_t v107 = v92;
        unsigned int v128 = v105;
      }
      else
      {
        if (v92 != 4)
        {
          id v114 = v103;
          [v114 setTitle:0];

          if (v92 == 1)
          {
LABEL_90:
            id v111 = v103;
            v112._countAndFlagsBits = 0x206F542065766F4DLL;
            v112._object = (void *)0xEC0000007473694CLL;
            v113._countAndFlagsBits = 0xD00000000000005DLL;
            v113._object = (void *)0x80000001006B3E90;
            TTRLocalizedString(_:comment:)(v112, v113);
LABEL_93:
            NSString v116 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v103 setAccessibilityLabel:v116];

            goto LABEL_72;
          }
LABEL_92:
          id v115 = v103;
          unsigned int v130 = v130 & 0xFF000000 | v93 | v101 | v102;
          sub_1002CD39C(v92, v130);
          goto LABEL_93;
        }
        unsigned int v105 = v123 & 0xFF000000 | v93 | v101 | v102;
        id v109 = v103;
        uint64_t v107 = 4;
        unsigned int v123 = v105;
      }
    }
    else
    {
      unsigned int v105 = v127 & 0xFF000000 | v101 | v102;
      id v108 = v103;
      uint64_t v107 = v92;
      unsigned int v127 = v105;
    }
    sub_1002CD39C(v107, v105);
    NSString v110 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v103 setTitle:v110];

    if (!v93 || v93 != 1 && v92 == 1) {
      goto LABEL_90;
    }
    goto LABEL_92;
  }
  __int16 v50 = v125;
  sub_1002CDCC8((uint64_t)v129, v125);
LABEL_96:
  uint64_t v117 = *v30;
  *id v30 = v6;
  int v118 = (unsigned __int16)*v126;
  *uint64_t v126 = v50;
  return sub_1002CE710(v117, v118);
}

id sub_1002CC0E4()
{
  uint64_t v1 = *(void **)(v0 + 72);
  if (v1)
  {
    id v2 = *(id *)(v0 + 72);
  }
  else
  {
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [self _systemImageNamed:v3];

    id v5 = objc_allocWithZone((Class)UIBarButtonItem);
    swift_retain();
    id v6 = [v5 initWithImage:v4 style:0 target:v0 action:"toolbarFileGroceryRadar:"];
    swift_release();

    id v2 = v6;
    v7._countAndFlagsBits = 0xD000000000000068;
    v8._object = (void *)0x80000001006B3EF0;
    v7._object = (void *)0x80000001006B3F20;
    v8._countAndFlagsBits = 0xD00000000000002BLL;
    TTRLocalizedString(_:comment:)(v8, v7);
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setAccessibilityLabel:v9];

    uint64_t v10 = *(void **)(v0 + 72);
    *(void *)(v0 + 72) = v2;

    uint64_t v1 = 0;
  }
  id v11 = v1;
  return v2;
}

uint64_t sub_1002CC230(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002CC2A4(a3, a4);
    return swift_release();
  }
  return result;
}

void sub_1002CC2A4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  int v5 = *(__int16 *)(v3 + 56);
  if ((~v5 & 0xFFFFFEFE) == 0) {
    return;
  }
  Swift::String v7 = *(void **)(v3 + 48);
  if (v5 < 0)
  {
    sub_1002CDCAC(*(void *)(v3 + 48), v5);
    uint64_t v8 = v7[2];
    if (!v8)
    {
LABEL_56:
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    sub_1002CE710(*(void *)(v3 + 48), v5);
    Swift::String v7 = _swiftEmptyArrayStorage;
    uint64_t v8 = _swiftEmptyArrayStorage[2];
    if (!v8) {
      goto LABEL_56;
    }
  }
  BOOL v9 = a1 == 7 && a2 == 2;
  BOOL v10 = a1 == 6 && a2 == 2;
  BOOL v11 = a1 == 5 && a2 == 2;
  BOOL v12 = a1 == 4 && a2 == 2;
  BOOL v13 = a1 == 3 && a2 == 2;
  BOOL v14 = a1 == 2 && a2 == 2;
  BOOL v15 = a1 == 1 && a2 == 2;
  if (a1) {
    BOOL v16 = 0;
  }
  else {
    BOOL v16 = a2 == 2;
  }
  __int16 v17 = (unsigned __int8 *)v7 + 42;
  uint64_t v18 = 1;
  while (1)
  {
    uint64_t v19 = *(void *)(v17 - 10);
    int v20 = *(v17 - 2);
    if (!*(v17 - 2))
    {
      if (a2) {
        goto LABEL_34;
      }
      goto LABEL_33;
    }
    if (v20 != 1) {
      break;
    }
    if (a2 != 1) {
      goto LABEL_34;
    }
LABEL_33:
    if (v19 == a1)
    {
      uint64_t v18 = a1;
      goto LABEL_60;
    }
LABEL_34:
    v17 += 16;
    if (!--v8) {
      goto LABEL_56;
    }
  }
  switch(v19)
  {
    case 1:
      if (v15) {
        break;
      }
      goto LABEL_34;
    case 2:
      if (!v14) {
        goto LABEL_34;
      }
      uint64_t v18 = 2;
      break;
    case 3:
      if (!v13) {
        goto LABEL_34;
      }
      uint64_t v18 = 3;
      break;
    case 4:
      if (!v12) {
        goto LABEL_34;
      }
      uint64_t v18 = 4;
      break;
    case 5:
      if (!v11) {
        goto LABEL_34;
      }
      uint64_t v18 = 5;
      break;
    case 6:
      if (!v10) {
        goto LABEL_34;
      }
      uint64_t v18 = 6;
      break;
    case 7:
      if (!v9) {
        goto LABEL_34;
      }
      uint64_t v18 = 7;
      break;
    default:
      if (!v16) {
        goto LABEL_34;
      }
      uint64_t v18 = 0;
      break;
  }
LABEL_60:
  int v21 = *(v17 - 1);
  int v28 = *v17;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v22 = __chkstk_darwin(*(void *)(v3 + 40));
  __chkstk_darwin(v22);
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_100796840);
  sub_1000368FC(0, &qword_100788D80);
  sub_1002CEA0C();
  Sequence.firstMap<A>(_:)();
  swift_bridgeObjectRelease();
  if (v29)
  {
    if (v21) {
      int v23 = 256;
    }
    else {
      int v23 = 0;
    }
    int v24 = v23 | v20;
    if (v28) {
      int v25 = 0x10000;
    }
    else {
      int v25 = 0;
    }
    int v26 = v24 | v25;
    id v27 = v29;
    sub_1002CD79C(v18, v26, (uint64_t)v27);
  }
}

id sub_1002CC61C()
{
  uint64_t v1 = *(void **)(v0 + 88);
  if (v1)
  {
    id v2 = *(id *)(v0 + 88);
  }
  else
  {
    id v3 = sub_1002CD048();
    id v4 = *(void **)(v0 + 88);
    *(void *)(v0 + 88) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1002CC678()
{
  uint64_t v1 = *(void **)(v0 + 80);
  if (v1)
  {
    id v2 = *(id *)(v0 + 80);
  }
  else
  {
    id v3 = sub_1002CC9F4();
    id v4 = *(void **)(v0 + 80);
    *(void *)(v0 + 80) = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1002CC6D4(uint64_t a1, char a2)
{
  if ((a2 & 0xFE) == 0) {
    return 0;
  }
  id v2 = 0;
  switch(a1)
  {
    case 1:
      id v2 = (id)static TTRIAsset.Image.MoveToList.moveToListIcon.getter();
      break;
    case 4:
      return v2;
    default:
      NSString v3 = String._bridgeToObjectiveC()();
      id v2 = [self _systemImageNamed:v3];

      break;
  }
  return v2;
}

uint64_t sub_1002CC960(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  int v5 = *(__int16 *)(a1 + 8);
  uint64_t v6 = *(void *)a2;
  int v7 = *(unsigned __int16 *)(a2 + 8);
  if (v5 < 0)
  {
    if ((v7 & 0x8000) != 0) {
      int v8 = sub_1000B9090(v4, v6) & (((v5 & 1) == 0) ^ v7) & (((v5 & 0x100) == 0) ^ ((unsigned __int16)(v7 & 0x100) >> 8));
    }
    else {
      LOBYTE(v8) = 0;
    }
  }
  else
  {
    LOBYTE(v8) = ((v4 & 1) == 0) ^ v6;
    if ((v7 & 0x8000) != 0) {
      LOBYTE(v8) = 0;
    }
  }
  return v8 & 1;
}

id sub_1002CC9F4()
{
  uint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 __systemImageNamedSwift:v1];

  id v3 = [objc_allocWithZone((Class)UIBarButtonItem) initWithImage:v2 style:0 target:0 action:0];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  v11[4] = sub_1002CE8F8;
  v11[5] = v4;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1000A2290;
  v11[3] = &unk_100741A80;
  int v5 = _Block_copy(v11);
  swift_release();
  [v3 _setSecondaryActionsProvider:v5];
  _Block_release(v5);
  id v6 = v3;
  v7._object = (void *)0x80000001006B4050;
  v8._countAndFlagsBits = 0x7463412065726F4DLL;
  v8._object = (void *)0xEC000000736E6F69;
  v7._countAndFlagsBits = 0xD000000000000030;
  TTRLocalizedString(_:comment:)(v8, v7);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setAccessibilityLabel:v9];

  return v6;
}

Class sub_1002CCBD0()
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    swift_release();
    return 0;
  }
  NSString v1 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t v3 = Strong;
  uint64_t ObjectType = swift_getObjectType();
  int v5 = *(uint64_t (**)(void, uint64_t, uint64_t))(v2 + 152);
  id v6 = v1;
  uint64_t v7 = v5(0, ObjectType, v2);

  uint64_t v8 = v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess();
  uint64_t v9 = *(unsigned __int8 *)(v8 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() + 112));
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v11 = swift_getObjectType();
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 344))(v7, v9, v11, v10);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    swift_retain();
    swift_bridgeObjectRetain();
    BOOL v14 = (unsigned __int8 *)(v12 + 42);
    do
    {
      if (*(v14 - 1) == 1)
      {
        uint64_t v19 = *(void *)(v14 - 10);
        int v20 = *v14;
        int v21 = *(v14 - 2);
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        if (v20) {
          int v22 = 0x10000;
        }
        else {
          int v22 = 0;
        }
        unsigned int v36 = v36 & 0xFF000000 | v21 | v22 | 0x100;
        sub_1002CD39C(v19, v36);
        unsigned int v37 = v37 & 0xFF000000 | v21 | v22 | 0x100;
        sub_1002CC6D4(v19, v21 | v22);
        uint64_t v23 = swift_allocObject();
        swift_weakInit();
        uint64_t v24 = swift_allocObject();
        *(void *)(v24 + 16) = v23;
        *(void *)(v24 + 24) = v19;
        *(unsigned char *)(v24 + 32) = v21;
        *(unsigned char *)(v24 + 33) = 1;
        *(unsigned char *)(v24 + 34) = v20;
        v34._rawValue = 0;
        int v25 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        int v26 = v25;
        if (v21 && (v21 == 1 || v19 != 1))
        {
          id v27 = v25;
          unsigned int v35 = v35 & 0xFF000000 | v21 | v22 | 0x100;
          sub_1002CD39C(v19, v35);
        }
        else
        {
          id v15 = v25;
          v16._countAndFlagsBits = 0x206F542065766F4DLL;
          v16._object = (void *)0xEC0000007473694CLL;
          v17._countAndFlagsBits = 0xD00000000000005DLL;
          v17._object = (void *)0x80000001006B3E90;
          TTRLocalizedString(_:comment:)(v16, v17);
        }
        NSString v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v26 setAccessibilityLabel:v18];

        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      v14 += 16;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
  }
  swift_release();
  uint64_t v29 = static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)();
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  sub_1000368FC(0, &qword_1007894E0);
  v32._countAndFlagsBits = v29;
  v32._object = v31;
  v38.value.super.Class isa = 0;
  v38.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v32, (Swift::String_optional)0, v38, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, v34).super.super.isa;
  swift_release();
  swift_unknownObjectRelease();
  return isa;
}

id sub_1002CD048()
{
  id v0 = [objc_allocWithZone((Class)UIBarButtonItem) initWithImage:*(void *)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor() style:0 target:0 action:0];
  [v0 setEnabled:0];
  uint64_t v1 = swift_allocObject();
  swift_weakInit();
  v8[4] = sub_1002CE7F8;
  v8[5] = v1;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1000A2290;
  v8[3] = &unk_100741A58;
  uint64_t v2 = _Block_copy(v8);
  swift_release();
  [v0 _setSecondaryActionsProvider:v2];
  _Block_release(v2);
  id v3 = v0;
  v4._object = (void *)0x80000001006B4050;
  v5._countAndFlagsBits = 0x6365532065766F4DLL;
  v5._object = (void *)0xED0000736E6F6974;
  v4._countAndFlagsBits = 0xD000000000000030;
  TTRLocalizedString(_:comment:)(v5, v4);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setAccessibilityLabel:v6];

  return v3;
}

Class sub_1002CD1E0()
{
  swift_beginAccess();
  if (!swift_weakLoadStrong()) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_6;
  }
  uint64_t v1 = Strong;
  uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  Swift::String v5 = *(uint64_t (**)(void, uint64_t, uint64_t))(v3 + 152);
  id v6 = v2;
  uint64_t v7 = v5(0, ObjectType, v3);

  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v9 = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t))(v8 + 352))(v12, v7, v9, v8);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_1001D903C((uint64_t)v12, (uint64_t)v13);
  if (*(void *)&v13[0])
  {
    v15[2] = v13[2];
    v15[3] = v13[3];
    v15[4] = v13[4];
    uint64_t v16 = v14;
    v15[0] = v13[0];
    v15[1] = v13[1];
    sub_1002CE800(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1002CE85C);
    Class v10 = sub_100580FE8((uint64_t)v15);
    sub_1002CE800(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1002CE724);
    sub_1002CE800(v12, (void (*)(void, void, void, void, void, void, void, void, void, void, void))sub_1002CE724);
  }
  else
  {
LABEL_6:
    Class v10 = 0;
  }
  swift_release();
  return v10;
}

uint64_t sub_1002CD39C(uint64_t a1, int a2)
{
  if (!(_BYTE)a2) {
    return static TTRLocalizableStrings.Toolbar.moveItemsString(withCount:)();
  }
  if (a2 == 1) {
    return static TTRLocalizableStrings.Toolbar.deleteItemsString(withCount:)();
  }
  switch(a1)
  {
    case 1:
      unint64_t v6 = 0x80000001006B4050;
      unint64_t v2 = 0xE26F542065766F4DLL;
      unint64_t v4 = 0xAA0000000000A680;
      goto LABEL_11;
    case 2:
      unint64_t v6 = 0x80000001006B4050;
      unint64_t v2 = 0x6574656C6544;
      unint64_t v4 = 0xE600000000000000;
      goto LABEL_11;
    case 3:
    case 4:
      if ((a2 & 0x10000) != 0)
      {
        unint64_t v2 = 0xD000000000000011;
        unint64_t v3 = 0xD000000000000017;
        unint64_t v4 = 0x80000001006AC930;
        Swift::String v5 = "Complete button in menu";
      }
      else
      {
        unint64_t v2 = 0xD000000000000012;
        unint64_t v3 = 0xD000000000000019;
        unint64_t v4 = 0x80000001006AC8E0;
        Swift::String v5 = "Incomplete button in menu";
      }
      unint64_t v6 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      goto LABEL_12;
    case 5:
      v7._countAndFlagsBits = 0xD000000000000016;
      v7._object = (void *)0x80000001006B3FF0;
      v8._countAndFlagsBits = 0x67615420646441;
      v8._object = (void *)0xE700000000000000;
      return TTRLocalizedString(_:comment:)(v8, v7)._countAndFlagsBits;
    case 6:
      if ((a2 & 0x10000) != 0)
      {
        unint64_t v9 = 0xD000000000000013;
        unint64_t v10 = 0x80000001006B3FD0;
        uint64_t v11 = 1734437958;
        unint64_t v12 = 0xE400000000000000;
      }
      else
      {
        unint64_t v9 = 0xD000000000000015;
        unint64_t v10 = 0x80000001006B3FB0;
        uint64_t v11 = 0x67616C666E55;
        unint64_t v12 = 0xE600000000000000;
      }
      return TTRLocalizedString(_:comment:)(*(Swift::String *)&v11, *(Swift::String *)&v9)._countAndFlagsBits;
    case 7:
      v13._countAndFlagsBits = 0xD000000000000015;
      v13._object = (void *)0x80000001006B3F90;
      v14._countAndFlagsBits = 0x6E6769737341;
      v14._object = (void *)0xE600000000000000;
      return TTRLocalizedString(_:comment:)(v14, v13)._countAndFlagsBits;
    default:
      unint64_t v6 = 0x80000001006B4050;
      unint64_t v2 = 0x2065754420746553;
      unint64_t v4 = 0xEC00000065746144;
LABEL_11:
      unint64_t v3 = 0xD000000000000030;
LABEL_12:
      uint64_t result = TTRLocalizedString(_:comment:)(*(Swift::String *)&v2, *(Swift::String *)&v3)._countAndFlagsBits;
      break;
  }
  return result;
}

void sub_1002CD598(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    unint64_t v6 = (void *)sub_1002CC678();
    sub_1002CD79C(a3, a4 & 0x101FF, (uint64_t)v6);
    swift_release();
  }
}

void *sub_1002CD61C(uint64_t a1, char a2, void *a3, uint64_t a4, char a5)
{
  if (!a2)
  {
    uint64_t result = 0;
    if (a5) {
      return result;
    }
    goto LABEL_6;
  }
  if (a2 == 1)
  {
    uint64_t result = 0;
    if (a5 != 1) {
      return result;
    }
LABEL_6:
    if (a1 == a4)
    {
LABEL_7:
      id v8 = a3;
      return a3;
    }
    return result;
  }
  switch(a1)
  {
    case 1:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 1) {
        goto LABEL_7;
      }
      break;
    case 2:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 2) {
        goto LABEL_7;
      }
      break;
    case 3:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 3) {
        goto LABEL_7;
      }
      break;
    case 4:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 4) {
        goto LABEL_7;
      }
      break;
    case 5:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 5) {
        goto LABEL_7;
      }
      break;
    case 6:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 6) {
        goto LABEL_7;
      }
      break;
    case 7:
      uint64_t result = 0;
      if (a5 == 2 && a4 == 7) {
        goto LABEL_7;
      }
      break;
    default:
      uint64_t result = 0;
      if (a5 == 2 && !a4) {
        goto LABEL_7;
      }
      break;
  }
  return result;
}

void sub_1002CD79C(uint64_t a1, int a2, uint64_t a3)
{
  id v7 = [*(id *)(v3 + 32) items];
  if (v7
    && (id v8 = v7,
        sub_1000368FC(0, &qword_100788D80),
        unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
        v8,
        LOBYTE(v8) = sub_10002B2B4(a3, v9),
        swift_bridgeObjectRelease(),
        (v8 & 1) != 0))
  {
    static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v11 = Strong;
      unint64_t v12 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
      uint64_t v13 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
      uint64_t ObjectType = swift_getObjectType();
      id v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 152);
      id v16 = v12;
      uint64_t v17 = v15(1, ObjectType, v13);

      uint64_t v18 = *(void *)(v11 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      uint64_t v19 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, void, unsigned char *, uint64_t, uint64_t))(v18 + 360))(v17, a1, a2 & 0x101FF, v24, v19, v18);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1000C7C58((uint64_t)v24);
  }
  else
  {
    if (qword_100785410 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100018BF8(v20, (uint64_t)qword_100796740);
    oslog = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(oslog, v21))
    {
      int v22 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v22 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v21, "TTRIRemindersListToolbarController#lowLevelPerformAction: unable to determine popoverAnchor", v22, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1002CDBB0()
{
  sub_1000499D4(v0 + 16);

  swift_bridgeObjectRelease();
  sub_1002CE710(*(void *)(v0 + 48), *(unsigned __int16 *)(v0 + 56));
  swift_release();

  return v0;
}

uint64_t sub_1002CDC0C()
{
  sub_1002CDBB0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListToolbarController()
{
  return self;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  __int16 v4 = *(_WORD *)(a2 + 8);
  sub_1002CDCAC(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(_WORD *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1002CDCAC(uint64_t a1, __int16 a2)
{
  if (a2 < 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1)
{
  return sub_1002CDCC8(*(void *)a1, *(_WORD *)(a1 + 8));
}

uint64_t sub_1002CDCC8(uint64_t a1, __int16 a2)
{
  if (a2 < 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t assignWithCopy for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  __int16 v4 = *(_WORD *)(a2 + 8);
  sub_1002CDCAC(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  __int16 v6 = *(_WORD *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v4;
  sub_1002CDCC8(v5, v6);
  return a1;
}

uint64_t initializeWithTake for TTRIRemindersListToolbarEditingConfiguration(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, uint64_t a2)
{
  __int16 v3 = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  __int16 v5 = *(_WORD *)(a1 + 8);
  *(_WORD *)(a1 + 8) = v3;
  sub_1002CDCC8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3FFF && *(unsigned char *)(a1 + 10)) {
    return (*(_DWORD *)a1 + 0x3FFF);
  }
  unsigned int v3 = (*(_WORD *)(a1 + 8) & 0xFE | (*(unsigned __int16 *)(a1 + 8) >> 15) | (*(unsigned __int16 *)(a1 + 8) >> 1) & 0x3F00) ^ 0x3FFF;
  if (v3 >= 0x3FFE) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListToolbarController.ToolbarConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3FFE)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 0x3FFF;
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3FFF) {
      *(unsigned char *)(result + 10) = 0;
    }
    if (a2)
    {
      unsigned int v3 = ((-a2 >> 1) & 0x1FFF) - (a2 << 13);
      *(void *)uint64_t result = 0;
      *(_WORD *)(result + 8) = (4 * v3) & 0xFE00 | (2 * (v3 & 0x7F));
    }
  }
  return result;
}

uint64_t sub_1002CDE50(uint64_t a1)
{
  return *(unsigned __int16 *)(a1 + 8) >> 15;
}

uint64_t sub_1002CDE5C(uint64_t result)
{
  *(_WORD *)(result + 8) &= ~0x8000u;
  return result;
}

uint64_t sub_1002CDE6C(uint64_t result, __int16 a2)
{
  *(_WORD *)(result + 8) = *(_WORD *)(result + 8) & 0x101 | (a2 << 15);
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarController.ToolbarConfiguration()
{
  return &type metadata for TTRIRemindersListToolbarController.ToolbarConfiguration;
}

uint64_t sub_1002CDE94(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListToolbarEditingConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListToolbarEditingConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListToolbarEditingConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListToolbarEditingConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarEditingConfiguration()
{
  return &type metadata for TTRIRemindersListToolbarEditingConfiguration;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarEditingConfiguration.ItemID()
{
  return &type metadata for TTRIRemindersListToolbarEditingConfiguration.ItemID;
}

unint64_t sub_1002CE018()
{
  unint64_t result = qword_100796830;
  if (!qword_100796830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100796830);
  }
  return result;
}

uint64_t sub_1002CE06C(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (!a2)
  {
    if (!a4) {
      return a1 == a3;
    }
    return 0;
  }
  if (a2 == 1)
  {
    if (a4 == 1) {
      return a1 == a3;
    }
    return 0;
  }
  switch(a1)
  {
    case 1:
      if (a4 != 2 || a3 != 1) {
        return 0;
      }
      break;
    case 2:
      if (a4 != 2 || a3 != 2) {
        return 0;
      }
      break;
    case 3:
      if (a4 != 2 || a3 != 3) {
        return 0;
      }
      break;
    case 4:
      if (a4 != 2 || a3 != 4) {
        return 0;
      }
      break;
    case 5:
      if (a4 != 2 || a3 != 5) {
        return 0;
      }
      break;
    case 6:
      if (a4 != 2 || a3 != 6) {
        return 0;
      }
      break;
    case 7:
      if (a4 != 2 || a3 != 7) {
        return 0;
      }
      break;
    default:
      if (a4 != 2 || a3) {
        return 0;
      }
      break;
  }
  return 1;
}

void *sub_1002CE1AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (!v3) {
    return result;
  }
  specialized ContiguousArray.reserveCapacity(_:)();
  char v40 = (uint64_t *)(a2 + 40);
  __int16 v6 = (char *)(a1 + 40);
  while (1)
  {
    Swift::UInt v9 = *((void *)v6 - 1);
    char v10 = *v6;
    swift_beginAccess();
    uint64_t v11 = *v40;
    if (*(void *)(*v40 + 16))
    {
      unint64_t v12 = sub_10035C2F8(v9, v10);
      if (v13)
      {
        Swift::String v14 = *(void **)(*(void *)(v11 + 56) + 8 * v12);
        swift_endAccess();
        id v15 = v14;
        goto LABEL_5;
      }
    }
    uint64_t v39 = v3;
    swift_endAccess();
    sub_1000368FC(0, &qword_100788D80);
    sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
    uint64_t v16 = swift_allocObject();
    swift_weakInit();
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v9;
    *(unsigned char *)(v17 + 32) = v10;
    v41.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v41.value.super.Class isa = 0;
    v42.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v41, v42, v43).super.super.isa;
    swift_beginAccess();
    uint64_t v19 = isa;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_type_t v21 = *(void **)(a2 + 40);
    Swift::UInt v22 = v9;
    uint64_t v23 = a2;
    *(void *)(a2 + 40) = 0x8000000000000000;
    char v24 = v10;
    Swift::UInt v25 = v22;
    char v26 = v24;
    unint64_t v28 = sub_10035C2F8(v22, v24);
    uint64_t v29 = v21[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t v31 = v29 + v30;
    if (__OFADD__(v29, v30)) {
      break;
    }
    char v32 = v27;
    if (v21[3] >= v31)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v27 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_100364428();
        if ((v32 & 1) == 0) {
          goto LABEL_16;
        }
      }
    }
    else
    {
      sub_1005778E4(v31, isUniquelyReferenced_nonNull_native);
      unint64_t v33 = sub_10035C2F8(v25, v26);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_24;
      }
      unint64_t v28 = v33;
      if ((v32 & 1) == 0)
      {
LABEL_16:
        v21[(v28 >> 6) + 8] |= 1 << v28;
        uint64_t v35 = v21[6] + 16 * v28;
        *(void *)uint64_t v35 = v25;
        *(unsigned char *)(v35 + 8) = v26;
        *(void *)(v21[7] + 8 * v28) = v19;
        uint64_t v36 = v21[2];
        BOOL v37 = __OFADD__(v36, 1);
        uint64_t v38 = v36 + 1;
        if (v37) {
          goto LABEL_23;
        }
        v21[2] = v38;
        goto LABEL_4;
      }
    }
    uint64_t v7 = v21[7];
    uint64_t v8 = 8 * v28;

    *(void *)(v7 + v8) = v19;
LABEL_4:
    *char v40 = (uint64_t)v21;
    swift_bridgeObjectRelease();
    swift_endAccess();
    a2 = v23;
    uint64_t v3 = v39;
LABEL_5:
    v6 += 16;
    specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
    specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
    specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized ContiguousArray._endMutation()();
    if (!--v3) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  unint64_t result = (void *)KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

uint64_t sub_1002CE50C(uint64_t a1, char a2, uint64_t a3, int a4)
{
  int v4 = a4;
  int64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    sub_1004D3414(0, v6, 0);
    uint64_t v8 = 0;
    unint64_t v9 = _swiftEmptyArrayStorage[2];
    uint64_t v10 = 2 * v9;
    do
    {
      uint64_t v11 = *(void *)(a1 + v8 * 8 + 32);
      char v12 = *(unsigned char *)(a1 + v8 * 8 + 40);
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      unint64_t v14 = v9 + 1;
      if (v9 >= v13 >> 1) {
        sub_1004D3414(v13 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v14;
      id v15 = &_swiftEmptyArrayStorage[v10 + v8];
      v15[4] = v11;
      *((unsigned char *)v15 + 40) = v12;
      v8 += 2;
      unint64_t v9 = v14;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
    int v4 = a4;
  }
  int64_t v16 = *(void *)(a3 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    sub_1004D3414(0, v16, 0);
    uint64_t v17 = 0;
    unint64_t v18 = _swiftEmptyArrayStorage[2];
    uint64_t v19 = 2 * v18;
    do
    {
      uint64_t v20 = *(void *)(a3 + v17 * 8 + 32);
      char v21 = *(unsigned char *)(a3 + v17 * 8 + 40);
      unint64_t v22 = _swiftEmptyArrayStorage[3];
      unint64_t v23 = v18 + 1;
      if (v18 >= v22 >> 1) {
        sub_1004D3414(v22 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v23;
      char v24 = &_swiftEmptyArrayStorage[v19 + v17];
      v24[4] = v20;
      *((unsigned char *)v24 + 40) = v21;
      v17 += 2;
      unint64_t v18 = v23;
      --v16;
    }
    while (v16);
    swift_bridgeObjectRelease();
  }
  int v25 = sub_1000BA2B4((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v25 & (((a2 & 1) == 0) ^ v4) & 1;
}

uint64_t sub_1002CE6FC(uint64_t a1, int a2)
{
  if ((~a2 & 0xFEFE) != 0) {
    return sub_1002CDCAC(a1, a2);
  }
  return a1;
}

uint64_t sub_1002CE710(uint64_t a1, int a2)
{
  if ((~a2 & 0xFEFE) != 0) {
    return sub_1002CDCC8(a1, a2);
  }
  return a1;
}

uint64_t sub_1002CE724(uint64_t result, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001E2634(a3, a4);
    swift_release();
    sub_1000499C4(a8);
    return sub_1000499C4(a10);
  }
  return result;
}

uint64_t sub_1002CE7C0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

Class sub_1002CE7F8()
{
  return sub_1002CD1E0();
}

void *sub_1002CE800(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_1002CE85C(uint64_t result, uint64_t a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1002364F0(a3, a4);
    swift_retain();
    sub_10006C140(a8);
    return sub_10006C140(a10);
  }
  return result;
}

Class sub_1002CE8F8()
{
  return sub_1002CCBD0();
}

uint64_t sub_1002CE900()
{
  swift_release();

  return _swift_deallocObject(v0, 35, 7);
}

void sub_1002CE938(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 33)) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  int v3 = v2 | *(unsigned __int8 *)(v1 + 32);
  if (*(unsigned char *)(v1 + 34)) {
    int v4 = 0x10000;
  }
  else {
    int v4 = 0;
  }
  sub_1002CD598(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v3 | v4);
}

uint64_t sub_1002CE96C()
{
  swift_release();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_1002CE9A4(uint64_t a1)
{
  return sub_1002CC230(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

void *sub_1002CE9B0(uint64_t a1, char a2, void *a3)
{
  return sub_1002CD61C(a1, a2, a3, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24));
}

uint64_t sub_1002CE9BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*(void *)a1, *(unsigned __int8 *)(a1 + 8), *(void *)(a1 + 16));
  *a2 = result;
  return result;
}

unint64_t sub_1002CEA0C()
{
  unint64_t result = qword_100796848[0];
  if (!qword_100796848[0])
  {
    sub_100039710(&qword_100796840);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100796848);
  }
  return result;
}

unint64_t destroy for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1)
{
  unint64_t result = *(void *)a1;
  if (result >= 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001E2634(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));
    unint64_t result = swift_release();
    if (*(void *)(a1 + 56)) {
      unint64_t result = swift_release();
    }
    if (*(void *)(a1 + 72))
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t initializeWithCopy for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2 < 0xFFFFFFFFuLL)
  {
    long long v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    long long v12 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v12;
  }
  else
  {
    uint64_t v4 = *(void *)(a2 + 8);
    __int16 v5 = *(void **)(a2 + 16);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    char v6 = *(unsigned char *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1002364F0(v5, v6);
    *(void *)(a1 + 16) = v5;
    *(unsigned char *)(a1 + 24) = v6;
    uint64_t v7 = *(void *)(a2 + 56);
    *(_WORD *)(a1 + 25) = *(_WORD *)(a2 + 25);
    *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
    uint64_t v8 = *(void *)(a2 + 40);
    uint64_t v9 = *(void *)(a2 + 48);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v8;
    *(void *)(a1 + 48) = v9;
    swift_retain();
    if (v7)
    {
      uint64_t v10 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = v7;
      *(void *)(a1 + 64) = v10;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    }
    uint64_t v13 = *(void *)(a2 + 72);
    if (v13)
    {
      uint64_t v14 = *(void *)(a2 + 80);
      *(void *)(a1 + 72) = v13;
      *(void *)(a1 + 80) = v14;
      swift_retain();
    }
    else
    {
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    }
  }
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)a2;
  if (v4 >= 0xFFFFFFFF)
  {
    if (v5 >= 0xFFFFFFFF)
    {
      *(void *)a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v6 = *(void **)(a2 + 16);
      char v7 = *(unsigned char *)(a2 + 24);
      sub_1002364F0(v6, v7);
      uint64_t v8 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = v6;
      char v9 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v7;
      sub_1001E2634(v8, v9);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
      *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      uint64_t v10 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = v10;
      swift_retain();
      swift_release();
      uint64_t v11 = *(void *)(a2 + 56);
      if (*(void *)(a1 + 56))
      {
        if (v11)
        {
          uint64_t v12 = *(void *)(a2 + 64);
          *(void *)(a1 + 56) = v11;
          *(void *)(a1 + 64) = v12;
          swift_retain();
          swift_release();
LABEL_21:
          uint64_t v23 = *(void *)(a2 + 72);
          if (*(void *)(a1 + 72))
          {
            if (v23)
            {
              uint64_t v24 = *(void *)(a2 + 80);
              *(void *)(a1 + 72) = v23;
              *(void *)(a1 + 80) = v24;
              swift_retain();
              swift_release();
              return a1;
            }
            swift_release();
LABEL_27:
            *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
            return a1;
          }
          if (!v23) {
            goto LABEL_27;
          }
LABEL_25:
          uint64_t v25 = *(void *)(a2 + 80);
          *(void *)(a1 + 72) = v23;
          *(void *)(a1 + 80) = v25;
          swift_retain();
          return a1;
        }
        swift_release();
      }
      else if (v11)
      {
        uint64_t v22 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v11;
        *(void *)(a1 + 64) = v22;
        swift_retain();
        goto LABEL_21;
      }
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001E2634(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));
    swift_release();
    if (*(void *)(a1 + 56)) {
      swift_release();
    }
    if (*(void *)(a1 + 72)) {
      swift_release();
    }
    goto LABEL_13;
  }
  if (v5 < 0xFFFFFFFF)
  {
LABEL_13:
    long long v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v18;
    long long v19 = *(_OWORD *)(a2 + 32);
    long long v20 = *(_OWORD *)(a2 + 48);
    long long v21 = *(_OWORD *)(a2 + 64);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(_OWORD *)(a1 + 48) = v20;
    *(_OWORD *)(a1 + 64) = v21;
    *(_OWORD *)(a1 + 32) = v19;
    return a1;
  }
  *(void *)a1 = v5;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v13 = *(void **)(a2 + 16);
  char v14 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1002364F0(v13, v14);
  *(void *)(a1 + 16) = v13;
  *(unsigned char *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
  *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v15;
  uint64_t v16 = *(void *)(a2 + 56);
  swift_retain();
  if (v16)
  {
    uint64_t v17 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = v16;
    *(void *)(a1 + 64) = v17;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  }
  uint64_t v23 = *(void *)(a2 + 72);
  if (v23) {
    goto LABEL_25;
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 >= 0xFFFFFFFFuLL)
  {
    if (*(void *)a2 >= 0xFFFFFFFFuLL)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRelease();
      char v4 = *(unsigned char *)(a2 + 24);
      unint64_t v5 = *(void **)(a1 + 16);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      char v6 = *(unsigned char *)(a1 + 24);
      *(unsigned char *)(a1 + 24) = v4;
      sub_1001E2634(v5, v6);
      *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
      *(unsigned char *)(a1 + 26) = *(unsigned char *)(a2 + 26);
      *(unsigned char *)(a1 + 27) = *(unsigned char *)(a2 + 27);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      swift_release();
      uint64_t v7 = *(void *)(a2 + 56);
      if (*(void *)(a1 + 56))
      {
        if (v7)
        {
          uint64_t v8 = *(void *)(a2 + 64);
          *(void *)(a1 + 56) = v7;
          *(void *)(a1 + 64) = v8;
          swift_release();
          goto LABEL_16;
        }
        swift_release();
      }
      else if (v7)
      {
        uint64_t v12 = *(void *)(a2 + 64);
        *(void *)(a1 + 56) = v7;
        *(void *)(a1 + 64) = v12;
        goto LABEL_16;
      }
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
LABEL_16:
      uint64_t v13 = *(void *)(a2 + 72);
      if (*(void *)(a1 + 72))
      {
        if (v13)
        {
          uint64_t v14 = *(void *)(a2 + 80);
          *(void *)(a1 + 72) = v13;
          *(void *)(a1 + 80) = v14;
          swift_release();
          return a1;
        }
        swift_release();
      }
      else if (v13)
      {
        uint64_t v15 = *(void *)(a2 + 80);
        *(void *)(a1 + 72) = v13;
        *(void *)(a1 + 80) = v15;
        return a1;
      }
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      return a1;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1001E2634(*(id *)(a1 + 16), *(unsigned char *)(a1 + 24));
    swift_release();
    if (*(void *)(a1 + 56)) {
      swift_release();
    }
    if (*(void *)(a1 + 72)) {
      swift_release();
    }
  }
  long long v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 88)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListToolbarBatchMoveToSectionParams(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 80) = 0;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)unint64_t result = 0u;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 88) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1002CF108(uint64_t result, int a2)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    uint64_t v2 = a2 ^ 0x80000000;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (a2 - 1);
  }
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListToolbarBatchMoveToSectionParams()
{
  return &type metadata for TTRIRemindersListToolbarBatchMoveToSectionParams;
}

uint64_t sub_1002CF14C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1002CF1E8(void *a1, void *a2, uint64_t a3)
{
  char v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 2) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    uint64_t v11 = (char *)v4 + v6;
    *uint64_t v11 = *((unsigned char *)a2 + v6);
    v11[1] = *((unsigned char *)a2 + v6 + 1);
  }
  else
  {
    uint64_t v10 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_1002CF2CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1002CF2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1002CF370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1002CF3E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1002CF460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = (unsigned char *)(v6 + a1);
  uint64_t v8 = (unsigned char *)(v6 + a2);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  return a1;
}

uint64_t sub_1002CF4D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 2;
  char v10 = 8 * (v6 + 2);
  if ((v6 + 2) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_1002CF668(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 2;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -2)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 2);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1002CF8A8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          long long v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TTRIRemindersListBarItem()
{
  return sub_10003BC54();
}

uint64_t sub_1002CF8E8(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 24);
}

uint64_t sub_1002CF8F4(uint64_t a1)
{
  uint64_t v3 = sub_10003B754(&qword_10078DE28);
  __chkstk_darwin(v3 - 8);
  unsigned int v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel;
  swift_beginAccess();
  sub_1002CFEF4(a1, v6);
  swift_endAccess();
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100115FF8(v6, (uint64_t)v5);
    sub_100115D5C((uint64_t)v5);
    swift_unknownObjectRelease();
    sub_100116060((uint64_t)v5);
  }
  return sub_100116060(a1);
}

uint64_t sub_1002CF9E8()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  sub_100116060(v0 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel);

  return swift_deallocClassInstance();
}

uint64_t sub_1002CFA5C()
{
  return type metadata accessor for TTRIReminderCellAutoCompletePresenter();
}

uint64_t type metadata accessor for TTRIReminderCellAutoCompletePresenter()
{
  uint64_t result = qword_1007968F8;
  if (!qword_1007968F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002CFAB0()
{
  sub_1002CFB4C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002CFB4C()
{
  if (!qword_100796908)
  {
    type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100796908);
    }
  }
}

uint64_t sub_1002CFBA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_10003B754(&qword_10078DE28);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned int v12 = (char *)&v21 - v11;
  int v13 = (int *)type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  uint64_t v14 = *((void *)v13 - 1);
  __chkstk_darwin(v13);
  unsigned int v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v3 + OBJC_IVAR____TtC9Reminders37TTRIReminderCellAutoCompletePresenter_viewModel;
  swift_beginAccess();
  sub_100115FF8(v17, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v14 + 48))(v12, 1, v13) == 1) {
    return sub_100116060((uint64_t)v12);
  }
  sub_1001160C0((uint64_t)v12, (uint64_t)v16);
  if ((v16[v13[5]] & 1) == 0)
  {
    uint64_t v19 = v13[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)&v16[v19] = a1;
    long long v20 = &v16[v13[6]];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)long long v20 = a2;
    *((void *)v20 + 1) = a3;
    sub_1002CFE90((uint64_t)v16, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, int *))(v14 + 56))(v9, 0, 1, v13);
    sub_1002CF8F4((uint64_t)v9);
  }
  return sub_100116124((uint64_t)v16);
}

uint64_t sub_1002CFDC4(uint64_t a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)(result + OBJC_IVAR____TtC9Reminders21TTRIBoardReminderCell_titleModule);
    swift_beginAccess();
    if (*v3)
    {
      uint64_t v4 = v3[1];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 56);
      swift_unknownObjectRetain();
      v6(a1, ObjectType, v4);
      swift_unknownObjectRelease();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002CFE90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002CFEF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078DE28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_1002CFF5C@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 0;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 16843009;
  *(void *)&double result = 0x10000000100;
  *(_DWORD *)(a1 + 44) = 256;
  return result;
}

unint64_t sub_1002CFF80()
{
  unint64_t v0 = (unsigned __int8 *)TTRReminderCellStyle.siriFoundInApps.unsafeMutableAddressor();
  uint64_t v1 = &_mh_execute_header;
  if (!v0[4]) {
    uint64_t v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

id sub_1002CFFF0()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v4, (uint64_t)v3, &qword_100786EF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 0;
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_1002D0FFC((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_1002D0128()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v1 = TTRUserDefaults.showingLargeAttachments(forType:)();

  return v1 & 1;
}

void sub_1002D0168()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

uint64_t sub_1002D01C8()
{
  return static NSUserActivity.forStoringListPayloadForSmartListsAndSearch()();
}

uint64_t sub_1002D01F4()
{
  v1[3] = type metadata accessor for TTRUserActivityListPayload();
  v1[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
  *(unsigned char *)sub_1000394A8(v1) = 5;
  type metadata accessor for TTRUserActivityListPayload.State();
  swift_storeEnumTagMultiPayload();
  NSUserActivity.setPayload(_:)();
  return sub_100038CD8((uint64_t)v1);
}

uint64_t sub_1002D026C()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D0F54();
  uint64_t v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_100588C58(ObjectType, v12);
    swift_unknownObjectRelease();
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v6, 1, v14) != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      sub_1002D0FFC((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
      goto LABEL_6;
    }
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  }
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
LABEL_6:
  uint64_t v17 = (uint64_t)&v3[*(int *)(sub_10003B754(&qword_100786F30) + 48)];
  *uint64_t v3 = 5;
  sub_10003B694((uint64_t)v9, v17, (uint64_t *)&unk_10078E360);
  type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  swift_storeEnumTagMultiPayload();
  v21[3] = v1;
  v21[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  long long v18 = sub_1000394A8(v21);
  sub_1002D0F94((uint64_t)v3, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)();
  sub_1002D0FFC((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
  sub_100038CD8((uint64_t)v21);
  return v10;
}

uint64_t sub_1002D0584@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v21 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v4 - 8);
  long long v20 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = 5;
  uint64_t v9 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  v19[0] = REMSmartListType.title.getter();
  v19[1] = static TTRListColors.SmartList.siriFoundInApps.getter();
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (v12(ObjectType, v10)) {
    swift_unknownObjectRelease();
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10)) {
    swift_unknownObjectRelease();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 56))(v23, ObjectType, v10);
  sub_10003B6F8((uint64_t)v23, &qword_100791FA0);
  if (v12(ObjectType, v10))
  {
    uint64_t v14 = v13;
    uint64_t v15 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    swift_unknownObjectRelease();
  }
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v20, 1, 1, v16);
  uint64_t v17 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v21, 1, 1, v17);
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

uint64_t sub_1002D094C()
{
  return type metadata accessor for TTRShowSiriFoundInAppsViewModelSource();
}

uint64_t type metadata accessor for TTRShowSiriFoundInAppsViewModelSource()
{
  uint64_t result = qword_1007969C0;
  if (!qword_1007969C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002D09A0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002D09D8(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v37 = a2;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v4 - 8);
  uint64_t v30 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v7 = v6 - 8;
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v31;
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D0584((uint64_t)v19);
  *uint64_t v12 = 3;
  swift_storeEnumTagMultiPayload();
  sub_100105478(v41);
  sub_100050E5C((uint64_t)v41, (uint64_t)&v40);
  uint64_t v35 = v15;
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
  sub_1002D0F94((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  *(void *)&v9[*(int *)(v7 + 28)] = REMRemindersListDataView.FlatModel.reminders.getter();
  v9[*(int *)(v7 + 32)] = 0;
  uint64_t v20 = v30;
  sub_1002D0F94((uint64_t)v19, v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v20, 0, 1, v16);
  sub_10003B754(&qword_10078D1E8);
  unint64_t v21 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_10066C6F0;
  sub_1002D0F94((uint64_t)v9, v22 + v21, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  uint64_t v23 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v26 = (uint64_t)v36;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v36, 1, 1, v25);
  v39[3] = v23;
  v39[4] = &off_10074D320;
  v39[0] = v24;
  sub_1000145EC((uint64_t)v39, (uint64_t)v38);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v22;
  sub_100038ED8(v38, v27 + 24);
  *(void *)(v27 + 64) = v33;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10059DBB0(1, v20, (uint64_t (*)(uint64_t))sub_100051174, v27, v37, 0, v26);
  swift_release();
  sub_100038CD8((uint64_t)v39);
  swift_bridgeObjectRelease();
  sub_10003B6F8(v26, (uint64_t *)&unk_100788DC0);
  sub_10003B6F8(v20, &qword_100786EF0);
  sub_1002D0FFC((uint64_t)v9, type metadata accessor for TTRRemindersListTreeViewModel.Section);
  sub_1002D0FFC((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1002D0FFC((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  return swift_release();
}

uint64_t sub_1002D0F0C()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

unint64_t sub_1002D0F54()
{
  unint64_t result = qword_1007A1BC0;
  if (!qword_1007A1BC0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007A1BC0);
  }
  return result;
}

uint64_t sub_1002D0F94(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002D0FFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002D105C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100796F28);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100796F28);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

__n128 sub_1002D1124@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v4 = *(id *)(sub_100338570() + 32);
    swift_release();
    uint64_t v5 = (void *)((char *)v4 + *(void *)((swift_isaMask & *v4) + 0x68));
    swift_beginAccess();
    if (*v5)
    {
      uint64_t v6 = *(void *)(*v5 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 216);
      swift_unknownObjectRetain();
      LOBYTE(v6) = v8(ObjectType, v6);

      swift_unknownObjectRelease();
      if (v6)
      {
        uint64_t v9 = *(id *)(sub_100338570() + 32);
        swift_release();
        uint64_t v10 = (void *)((char *)v9 + *(void *)((swift_isaMask & *v9) + 0x68));
        swift_beginAccess();
        if (*v10)
        {
          uint64_t v11 = *(void *)(*v10 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea + 8);
          uint64_t v12 = swift_getObjectType();
          uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
          swift_unknownObjectRetain();
          v13(v12, v11);
          uint64_t v15 = v14;

          swift_unknownObjectRelease();
          if (v15)
          {
LABEL_13:
            String.validatedListName()();
            swift_unknownObjectRelease();
            goto LABEL_10;
          }
        }
        else
        {
        }
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  uint64_t v16 = *(void *)(v2 + 192);
  uint64_t v17 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v17, v16);
  String.validatedListName()();
LABEL_10:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void (***)(void, void))(v2 + 192);
  uint64_t v19 = swift_getObjectType();
  v18[1](v19, v18);
  v18[2](v19, v18);
  v18[3](v19, v18);
  v18[4](v19, v18);
  TTRTemplateSavingViewModel.init(sourceList:name:templateConfiguration:completedReminderCount:allowsCommit:)();
  *(_OWORD *)(a1 + 96) = v27;
  *(_OWORD *)(a1 + 112) = v28;
  *(_WORD *)(a1 + 128) = v29;
  *(_OWORD *)(a1 + 32) = v23;
  *(_OWORD *)(a1 + 48) = v24;
  *(_OWORD *)(a1 + 64) = v25;
  *(_OWORD *)(a1 + 80) = v26;
  __n128 result = v22;
  *(_OWORD *)a1 = v21;
  *(__n128 *)(a1 + 16) = v22;
  return result;
}

uint64_t sub_1002D146C()
{
  uint64_t v1 = v0;
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_18;
  }
  uint64_t v2 = *(id *)(sub_100338570() + 32);
  swift_release();
  uint64_t v3 = (void *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68));
  swift_beginAccess();
  if (!*v3)
  {
    swift_unknownObjectRelease();

LABEL_18:
    uint64_t v21 = *(void *)(v1 + 192);
    uint64_t ObjectType = swift_getObjectType();
    char v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 40))(ObjectType, v21);
    return v20 & 1;
  }
  uint64_t v4 = *(void *)(*v3 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea + 8);
  uint64_t v5 = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 216);
  swift_unknownObjectRetain();
  LOBYTE(v4) = v6(v5, v4);

  swift_unknownObjectRelease();
  if ((v4 & 1) == 0)
  {
LABEL_17:
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  uint64_t v7 = *(id *)(sub_100338570() + 32);
  swift_release();
  uint64_t v8 = (void *)((char *)v7 + *(void *)((swift_isaMask & *v7) + 0x68));
  swift_beginAccess();
  if (*v8)
  {
    uint64_t v9 = *(void *)(*v8 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea + 8);
    uint64_t v10 = swift_getObjectType();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    swift_unknownObjectRetain();
    uint64_t v12 = v11(v10, v9);
    unint64_t v14 = v13;

    swift_unknownObjectRelease();
    if (v14) {
      goto LABEL_10;
    }
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = 0;
  unint64_t v14 = 0xE000000000000000;
LABEL_10:
  uint64_t v15 = *(void *)(v1 + 192);
  uint64_t v16 = swift_getObjectType();
  if (v12 == (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 16))(v16, v15) && v14 == v17)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
  char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (v19) {
    goto LABEL_18;
  }
  char v20 = 1;
  return v20 & 1;
}

uint64_t sub_1002D1708(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_100785418 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_100796F28);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  static TTRLocalizableStrings.UndoAction.renameTemplate.getter();
  uint64_t v7 = self;
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v3;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_1002D25C8;
  *(void *)(v10 + 24) = v9;
  v14[4] = sub_1000499FC;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  v14[2] = sub_100021888;
  v14[3] = &unk_100741DC8;
  uint64_t v11 = _Block_copy(v14);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v7 withActionName:v8 block:v11];

  _Block_release(v11);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v13._object = (void *)0x80000001006AD3D0;
    v13._countAndFlagsBits = 0xD000000000000019;
    TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v13);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002D1950(char a1)
{
  uint64_t v2 = v1;
  if (qword_100785418 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_100796F28);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  static TTRLocalizableStrings.UndoAction.changeTemplate.getter();
  uint64_t v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v2;
  *(unsigned char *)(v7 + 24) = a1 & 1;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1002D2520;
  *(void *)(v8 + 24) = v7;
  v12[4] = sub_1000218B0;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_100021888;
  v12[3] = &unk_100741D50;
  uint64_t v9 = _Block_copy(v12);
  swift_retain();
  swift_retain();
  swift_release();
  [v5 withActionName:v6 block:v9];

  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void sub_1002D1B70(uint64_t a1)
{
  uint64_t v2 = v1;
  if (qword_100785418 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_100796F28);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_20;
  }
  uint64_t v5 = *(id *)(sub_100338570() + 32);
  swift_release();
  NSString v6 = (void *)((char *)v5 + *(void *)((swift_isaMask & *v5) + 0x68));
  swift_beginAccess();
  if (!*v6)
  {
    swift_unknownObjectRelease();

    goto LABEL_20;
  }
  uint64_t v7 = *(void *)(*v6 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 216);
  swift_unknownObjectRetain();
  LOBYTE(v7) = v9(ObjectType, v7);

  swift_unknownObjectRelease();
  if ((v7 & 1) == 0)
  {
LABEL_19:
    swift_unknownObjectRelease();
    goto LABEL_20;
  }
  uint64_t v10 = *(id *)(sub_100338570() + 32);
  swift_release();
  uint64_t v11 = (void *)((char *)v10 + *(void *)((swift_isaMask & *v10) + 0x68));
  swift_beginAccess();
  if (*v11)
  {
    uint64_t v12 = *(void *)(*v11 + OBJC_IVAR____TtC9Reminders27TTRIListDetailNameTableCell_textArea + 8);
    uint64_t v13 = swift_getObjectType();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
    swift_unknownObjectRetain();
    uint64_t v15 = v14(v13, v12);
    unint64_t v17 = v16;

    swift_unknownObjectRelease();
    if (v17) {
      goto LABEL_12;
    }
  }
  else
  {
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = 0;
  unint64_t v17 = 0xE000000000000000;
LABEL_12:
  uint64_t v18 = v2[24];
  uint64_t v19 = swift_getObjectType();
  if (v15 == (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 16))(v19, v18) && v17 == v20)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_19;
  }
  char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if ((v22 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_20:
  uint64_t v23 = v2[24];
  uint64_t v24 = swift_getObjectType();
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v23 + 40))(v24, v23))
  {
LABEL_21:
    id v25 = [self alertControllerWithTitle:0 message:0 preferredStyle:0];
    static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    aBlock[4] = sub_1002D2670;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1001077FC;
    aBlock[3] = &unk_100741E18;
    long long v28 = _Block_copy(aBlock);
    swift_release();
    __int16 v29 = self;
    id v30 = [v29 actionWithTitle:v27 style:2 handler:v28];
    _Block_release(v28);
    swift_release();

    [v25 addAction:v30];
    static TTRLocalizableStrings.Common.alertCancelButton.getter();
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v32 = [v29 actionWithTitle:v31 style:1 handler:0];

    [v25 addAction:v32];
    id v33 = [v25 popoverPresentationController];
    if (v33)
    {
      uint64_t v34 = v33;
      [v33 setBarButtonItem:a1];
    }
    sub_100038D28(v2 + 25, v2[28]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v36 = Strong;
      [Strong presentViewController:v25 animated:1 completion:0];

      id v30 = v32;
      id v32 = v36;
    }
    else
    {
    }
    goto LABEL_29;
  }
  sub_100038D28(v2 + 25, v2[28]);
  uint64_t v37 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v37) {
    return;
  }
  id v32 = v37;
  id v38 = [v37 presentingViewController];
  if (v38)
  {
    id v30 = v38;
    [v38 dismissViewControllerAnimated:1 completion:0];
LABEL_29:
  }
}

uint64_t sub_1002D2104()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1000145EC(result + 200, (uint64_t)v5);
    swift_release();
    sub_100038D28(v5, v5[3]);
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = Strong;
      id v3 = [Strong presentingViewController];
      if (v3)
      {
        uint64_t v4 = v3;
        [v3 dismissViewControllerAnimated:1 completion:0];
      }
    }
    return sub_100038CD8((uint64_t)v5);
  }
  return result;
}

void sub_1002D21C4()
{
  if (qword_100785418 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_100796F28);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[24];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v2 + 64))(ObjectType, v2);
  uint64_t v4 = *sub_100038D28(v0 + 25, v0[28]);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v8 = Strong;
    id v6 = [Strong presentingViewController];
    if (v6)
    {
      uint64_t v7 = v6;
      if (*(void *)(v4 + 32))
      {
        sub_1000478A4();
        [v7 dismissViewControllerAnimated:1 completion:0];
        sub_1000482FC();
      }
      else
      {
        [v6 dismissViewControllerAnimated:1 completion:0];
      }
    }
  }
}

uint64_t sub_1002D233C()
{
  sub_1000499D4(v0 + 16);
  sub_1000499D4(v0 + 32);
  long long v1 = *(_OWORD *)(v0 + 160);
  v6[6] = *(_OWORD *)(v0 + 144);
  v6[7] = v1;
  __int16 v7 = *(_WORD *)(v0 + 176);
  long long v2 = *(_OWORD *)(v0 + 96);
  v6[2] = *(_OWORD *)(v0 + 80);
  v6[3] = v2;
  long long v3 = *(_OWORD *)(v0 + 128);
  v6[4] = *(_OWORD *)(v0 + 112);
  v6[5] = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  v6[0] = *(_OWORD *)(v0 + 48);
  v6[1] = v4;
  sub_100265810((uint64_t)v6);
  swift_unknownObjectRelease();
  sub_100038CD8(v0 + 200);

  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRITemplateSavingPresenter()
{
  return self;
}

void sub_1002D23EC()
{
  v0._object = (void *)0x80000001006AD3D0;
  v0._countAndFlagsBits = 0xD000000000000019;
  TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v0);
}

uint64_t sub_1002D242C()
{
  sub_1002D1124((uint64_t)v10);
  long long v1 = *(_OWORD *)(v0 + 160);
  void v12[6] = *(_OWORD *)(v0 + 144);
  v12[7] = v1;
  __int16 v13 = *(_WORD *)(v0 + 176);
  long long v2 = *(_OWORD *)(v0 + 96);
  v12[2] = *(_OWORD *)(v0 + 80);
  v12[3] = v2;
  long long v3 = *(_OWORD *)(v0 + 128);
  v12[4] = *(_OWORD *)(v0 + 112);
  v12[5] = v3;
  long long v4 = *(_OWORD *)(v0 + 64);
  v12[0] = *(_OWORD *)(v0 + 48);
  v12[1] = v4;
  long long v5 = v10[5];
  *(_OWORD *)(v0 + 112) = v10[4];
  *(_OWORD *)(v0 + 128) = v5;
  long long v6 = v10[7];
  *(_OWORD *)(v0 + 144) = v10[6];
  *(_OWORD *)(v0 + 160) = v6;
  *(_WORD *)(v0 + 176) = v11;
  long long v7 = v10[3];
  *(_OWORD *)(v0 + 80) = v10[2];
  *(_OWORD *)(v0 + 96) = v7;
  long long v8 = v10[1];
  *(_OWORD *)(v0 + 48) = v10[0];
  *(_OWORD *)(v0 + 64) = v8;
  sub_100265810((uint64_t)v12);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    sub_100338DBC();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002D24E8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_1002D2520()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 24);
  uint64_t v2 = *(void *)(*(void *)(v0 + 16) + 192);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 56))(v1, ObjectType, v2);
}

uint64_t sub_1002D2578()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D2588()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002D25C8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void *)(v1 + 192);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, v3, ObjectType, v4);
}

uint64_t sub_1002D2628()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D2638()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D2670()
{
  return sub_1002D2104();
}

void sub_1002D2688(void *a1)
{
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController) transitionCoordinator];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v4;
    *(void *)(v5 + 24) = a1;
    aBlock[4] = sub_1002D3AC4;
    aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002D2BB4;
    aBlock[3] = &unk_100741F20;
    long long v6 = _Block_copy(aBlock);
    id v7 = a1;
    swift_release();
    [v3 animateAlongsideTransition:0 completion:v6];

    _Block_release(v6);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1002D2854(a1);
  }
}

void sub_1002D27F8(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_1002D2854(a3);
  }
}

void sub_1002D2854(void *a1)
{
  uint64_t v2 = v1;
  if (a1) {
    id v4 = a1;
  }
  else {
    id v4 = [objc_allocWithZone((Class)type metadata accessor for TTRIRootViewEmptyViewController()) init];
  }
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066D470;
  *(void *)(v5 + 32) = v4;
  uint64_t v24 = v5;
  specialized Array._endMutation()();
  long long v6 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController);
  id v7 = a1;
  id v8 = v4;
  id v9 = [v6 viewControllers];
  sub_1000368FC(0, (unint64_t *)&qword_100791C40);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v9) = sub_1000BA87C(v10, v24);
  swift_bridgeObjectRelease();
  if (v9)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v6 setViewControllers:isa];

    id v12 = [v6 viewControllers];
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v12) = sub_1000BA87C(v13, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0)
    {
      if (qword_100785420 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100018BF8(v14, (uint64_t)qword_100797010);
      id v15 = v8;
      unint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 138412290;
        id v19 = v15;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v23 = v15;

        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Failed to set detailViewController because there's an existing transition or presentation occuring {detailViewController: %@}", v18, 0xCu);
        sub_10003B754(&qword_10078AC60);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
  }
  sub_1002D2C14(1);
  sub_100038D28((void *)(*(void *)(v2 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter) + 48), *(void *)(*(void *)(v2 + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter) + 72));
  uint64_t v20 = sub_10034D540();
  if (v21 == -1) {
    goto LABEL_15;
  }
  char v22 = v20;
  if (v21)
  {
    sub_100095434(v20, v21);
LABEL_15:
    char v22 = 0;
  }
  sub_1000130E8(v22);
}

uint64_t sub_1002D2BB4(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();

  return swift_unknownObjectRelease();
}

void sub_1002D2C14(char a1)
{
  if (![v1 isCollapsed]) {
    goto LABEL_8;
  }
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController];
  id v4 = [v3 viewControllers];
  sub_1000368FC(0, (unint64_t *)&qword_100791C40);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  id v6 = *(id *)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
  char v7 = sub_10002A944((uint64_t)v6, v5);
  swift_bridgeObjectRelease();

  if (v7)
  {
    id v8 = [v3 topViewController];
    if (!v8 || (id v9 = v8, v8, v6 != v9))
    {
      id v10 = [v3 popToViewController:v6 animated:a1 & 1];
    }
  }
  else
  {
LABEL_8:
    if (a1)
    {
      uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
      [v1 showDetailViewController:v11 sender:v1];
    }
    else
    {
      id v12 = self;
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v1;
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = sub_1002D3A1C;
      *(void *)(v14 + 24) = v13;
      v18[4] = sub_1000218B0;
      v18[5] = v14;
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 1107296256;
      v18[2] = sub_100021888;
      v18[3] = &unk_100741EA8;
      id v15 = _Block_copy(v18);
      unint64_t v16 = v1;
      swift_retain();
      swift_release();
      [v12 performWithoutAnimation:v15];
      _Block_release(v15);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
    }
  }
}

_OWORD *sub_1002D2F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  id v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  sub_100038D28((void *)(*(void *)&v3[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(void *)(*(void *)&v3[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  sub_10034D08C(a1, a2, (uint64_t)&v19);
  if (*((void *)&v20 + 1)) {
    return sub_100038E1C(&v19, a3);
  }
  sub_10003B6F8((uint64_t)&v19, &qword_100788D60);
  sub_100144CE0(a2, (uint64_t)&v19);
  uint64_t v10 = *((void *)&v20 + 1);
  if (*((void *)&v20 + 1))
  {
    uint64_t v11 = sub_100038D28(&v19, *((uint64_t *)&v20 + 1));
    uint64_t v12 = *(void *)(v10 - 8);
    double v13 = __chkstk_darwin(v11);
    id v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v12 + 16))(v15, v13);
    uint64_t v16 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v10);
    sub_100038CD8((uint64_t)&v19);
  }
  else
  {
    uint64_t v16 = 0;
  }
  v18.receiver = v4;
  v18.super_class = ObjectType;
  [super targetForAction:a1 withSender:v16];
  swift_unknownObjectRelease();
  if (v17)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  return (_OWORD *)sub_1002D3B90((uint64_t)&v19, (uint64_t)a3);
}

id sub_1002D3434()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders43TTRIRootActivityItemsConfigurationProviding_visibleList;
  if ([*(id *)&v0[OBJC_IVAR____TtC9Reminders43TTRIRootActivityItemsConfigurationProviding_visibleList] canBeShared]&& (id v3 = objc_msgSend(*(id *)&v0[v2], "account"), v4 = objc_msgSend(v3, "accountTypeHost"), v3, LODWORD(v3) = objc_msgSend(v4, "isCloudKit"), v4, v3))
  {
    if (qword_100785420 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100018BF8(v5, (uint64_t)qword_100797010);
    id v6 = v1;
    char v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)id v9 = 136315138;
      uint64_t v22 = v21;
      id v10 = [*(id *)&v1[v2] displayName];
      uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v13 = v12;

      sub_1000385A8(v11, v13, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIRootViewController providing activityItemsConfiguration for list {remList: %s}.", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v19 = *(id *)&v1[v2];
    id v18 = _s9Reminders23TTRListSharingUtilitiesC26activityItemsConfiguration3forSo010UIActivityfG0CSo7REMListC_tFZ_0(v19);
  }
  else
  {
    if (qword_100785420 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100018BF8(v14, (uint64_t)qword_100797010);
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      id v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "TTRIRootViewController cannot provide activityItemsConfiguration, list is not shareable.", v17, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  return v18;
}

uint64_t type metadata accessor for TTRIRootActivityItemsConfigurationProviding()
{
  return self;
}

uint64_t sub_1002D37B8(void *a1)
{
  uint64_t v2 = v1;
  id v3 = [a1 viewControllerForColumn:2];
  if (v3)
  {
    id v4 = v3;
    self;
    uint64_t v5 = (void *)swift_dynamicCastObjCClass();
    if (v5 && (id v6 = [v5 topViewController]) != 0)
    {
      char v7 = v6;
      id v15 = v6;
      sub_1000368FC(0, (unint64_t *)&qword_100791C40);
      id v8 = v7;
      sub_10003B754(&qword_100797218);
      if (swift_dynamicCast())
      {
        sub_100038ED8(&v12, (uint64_t)v16);
        uint64_t v9 = v17;
        uint64_t v10 = v18;
        sub_100038D28(v16, v17);
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v10);

        sub_100038CD8((uint64_t)v16);
      }
      else
      {
        uint64_t v14 = 0;
        long long v12 = 0u;
        long long v13 = 0u;

        sub_10003B6F8((uint64_t)&v12, (uint64_t *)&unk_100797220);
      }
    }
    else
    {
    }
  }
  return sub_1003081D4([v2 isCollapsed:v12, v13, v14]);
}

uint64_t sub_1002D39E4()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1002D3A1C()
{
  return [*(id *)(v0 + 16) showDetailViewController:*(void *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController) sender:*(void *)(v0 + 16)];
}

uint64_t sub_1002D3A3C()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D3A4C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002D3A84()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002D3AC4(uint64_t a1)
{
  sub_1002D27F8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1002D3ACC()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_1002D3B04()
{
  id v1 = [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController) popToRootViewControllerAnimated:*(unsigned __int8 *)(v0 + 24)];
}

uint64_t sub_1002D3B50()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D3B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100788D60);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D3C08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + 8);
  id v3 = *(void **)(a2 + 8);
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  if (static NSObject.== infix(_:_:)())
  {
    if (v2)
    {
      if (v3)
      {
        sub_1000368FC(0, (unint64_t *)&qword_10078E640);
        id v4 = v3;
        id v5 = v2;
        char v6 = static NSObject.== infix(_:_:)();

        if (v6) {
          return 1;
        }
      }
    }
    else if (!v3)
    {
      return 1;
    }
  }
  return 0;
}

BOOL sub_1002D3CC0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && *(double *)(a1 + 8) == *(double *)(a2 + 8);
}

BOOL sub_1002D3CEC(double *a1, double *a2)
{
  double v2 = a1[1];
  double v3 = a1[2];
  double v5 = a1[3];
  double v4 = a1[4];
  double v6 = a2[1];
  double v7 = a2[2];
  double v9 = a2[3];
  double v8 = a2[4];
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  char v10 = static NSObject.== infix(_:_:)();
  BOOL result = 0;
  if ((v10 & 1) != 0 && v2 == v6 && v3 == v7 && v5 == v9) {
    return v4 == v8;
  }
  return result;
}

void sub_1002D3D90(void *a1, void *a2)
{
  double v4 = (id *)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  if (!*(void *)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill]) {
    return;
  }
  double v5 = v2;
  id v6 = v4[1];
  id v20 = *(id *)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  if (!a1) {
    goto LABEL_11;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  sub_10009F21C(v20, v6);
  sub_10009F21C(v20, v6);
  sub_10009F21C(a1, a2);
  if ((static NSObject.== infix(_:_:)() & 1) == 0) {
    goto LABEL_8;
  }
  if (!v6)
  {

    if (!a2)
    {
      id v9 = 0;
      id v8 = 0;
LABEL_24:

      sub_10009F25C(v20, v6);

      return;
    }
    goto LABEL_9;
  }
  if (a2)
  {
    sub_1000368FC(0, (unint64_t *)&qword_10078E640);
    id v8 = a2;
    id v9 = v6;
    char v10 = static NSObject.== infix(_:_:)();

    if (v10) {
      goto LABEL_24;
    }
  }
  else
  {
LABEL_8:
  }
LABEL_9:

  sub_10009F25C(v20, v6);
  if (!*v4) {
    return;
  }
  id v20 = *v4;
  id v6 = v4[1];
LABEL_11:
  id v11 = v6;
  id v12 = v20;
  id v13 = [v5 layer];
  self;
  uint64_t v14 = swift_dynamicCastObjCClass();
  if (v14)
  {
    id v15 = (void *)v14;
    if (v6)
    {
      id v16 = v11;
      id v17 = [v12 _colorBlendedWithColor:v16];
      if (!v17)
      {
        __break(1u);
        return;
      }
      id v18 = v17;
    }
    else
    {
      id v18 = v12;
    }
    id v19 = [v18 CGColor];
    [v15 setFillColor:v19];
  }
  else
  {
  }

  sub_10009F25C(v20, v6);
}

void sub_1002D4030()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  if (v1)
  {
    double v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill + 8];
    id v3 = v2;
    id v4 = v1;
    id v5 = [v0 layer];
    self;
    uint64_t v6 = swift_dynamicCastObjCClass();
    if (v6)
    {
      double v7 = (void *)v6;
      if (v2)
      {
        id v8 = v3;
        id v9 = [v4 _colorBlendedWithColor:v8];
        if (!v9)
        {
          __break(1u);
          return;
        }
        id v10 = v9;
      }
      else
      {
        id v10 = v4;
      }
      id v11 = [v10 CGColor];
      [v7 setFillColor:v11];

      id v5 = v10;
    }

    sub_10009F25C(v1, v2);
  }
}

void sub_1002D4180()
{
  if ((v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape + 16] & 1) == 0)
  {
    double v1 = *(double *)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape + 8];
    id v32 = [v0 layer];
    self;
    uint64_t v2 = swift_dynamicCastObjCClass();
    if (v2)
    {
      id v3 = (void *)v2;
      [v0 bounds];
      CGFloat x = v34.origin.x;
      CGFloat y = v34.origin.y;
      CGFloat width = v34.size.width;
      CGFloat height = v34.size.height;
      double MidX = CGRectGetMidX(v34);
      v35.origin.CGFloat x = x;
      v35.origin.CGFloat y = y;
      v35.size.CGFloat width = width;
      v35.size.CGFloat height = height;
      double MinY = CGRectGetMinY(v35);
      v36.origin.CGFloat x = x;
      v36.origin.CGFloat y = y;
      v36.size.CGFloat width = width;
      v36.size.CGFloat height = height;
      double MaxX = CGRectGetMaxX(v36);
      v37.origin.CGFloat x = x;
      v37.origin.CGFloat y = y;
      v37.size.CGFloat width = width;
      v37.size.CGFloat height = height;
      double v24 = CGRectGetMinY(v37);
      v38.origin.CGFloat x = x;
      v38.origin.CGFloat y = y;
      v38.size.CGFloat width = width;
      v38.size.CGFloat height = height;
      double v29 = CGRectGetMaxX(v38);
      v39.origin.CGFloat x = x;
      v39.origin.CGFloat y = y;
      v39.size.CGFloat width = width;
      v39.size.CGFloat height = height;
      double MaxY = CGRectGetMaxY(v39);
      v40.origin.CGFloat x = x;
      v40.origin.CGFloat y = y;
      v40.size.CGFloat width = width;
      v40.size.CGFloat height = height;
      double MinX = CGRectGetMinX(v40);
      v41.origin.CGFloat x = x;
      v41.origin.CGFloat y = y;
      v41.size.CGFloat width = width;
      v41.size.CGFloat height = height;
      double v26 = CGRectGetMaxY(v41);
      v42.origin.CGFloat x = x;
      v42.origin.CGFloat y = y;
      v42.size.CGFloat width = width;
      v42.size.CGFloat height = height;
      double v31 = CGRectGetMinX(v42);
      v43.origin.CGFloat x = x;
      v43.origin.CGFloat y = y;
      v43.size.CGFloat width = width;
      v43.size.CGFloat height = height;
      double v28 = CGRectGetMinY(v43);
      id v10 = [objc_allocWithZone((Class)UIBezierPath) init];
      [v10 moveToPoint:MidX, MinY];
      char v11 = TTRRectCorners.cornerMask(layoutDirection:isFlipped:)((UIUserInterfaceLayoutDirection)[v0 effectiveUserInterfaceLayoutDirection], 1);
      char v12 = sub_1002D4C24(v11);
      if ((v12 & 2) != 0) {
        double v13 = v1;
      }
      else {
        double v13 = 0.0;
      }
      if (fabs(v13) >= 0.0000000149011612) {
        double v14 = v13;
      }
      else {
        double v14 = 0.001;
      }
      [v10 _addRoundedCornerWithTrueCorner:2 radius:0 corner:MaxX clockwise:v24 v14];
      if ((v12 & 8) != 0) {
        double v15 = v1;
      }
      else {
        double v15 = 0.0;
      }
      if (fabs(v15) >= 0.0000000149011612) {
        double v16 = v15;
      }
      else {
        double v16 = 0.001;
      }
      [v10 _addRoundedCornerWithTrueCorner:8 radius:0 corner:v29 clockwise:MaxY v16];
      if ((v12 & 4) != 0) {
        double v17 = v1;
      }
      else {
        double v17 = 0.0;
      }
      if (fabs(v17) >= 0.0000000149011612) {
        double v18 = v17;
      }
      else {
        double v18 = 0.001;
      }
      [v10 _addRoundedCornerWithTrueCorner:4 radius:0 corner:MinX clockwise:v26];
      if (v12) {
        double v19 = v1;
      }
      else {
        double v19 = 0.0;
      }
      if (fabs(v19) >= 0.0000000149011612) {
        double v20 = v19;
      }
      else {
        double v20 = 0.001;
      }
      [v10 _addRoundedCornerWithTrueCorner:1 radius:0 corner:v31 clockwise:v28];
      [v10 closePath];
      uint64_t v21 = (CGFloat *)&v0[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_boundsUsedForShapePath];
      *uint64_t v21 = x;
      v21[1] = y;
      v21[2] = width;
      v21[3] = height;
      *((unsigned char *)v21 + 32) = 0;
      id v22 = [v10 CGPath];
      [v3 setPath:v22];
      [v3 setShadowPath:v22];

      uint64_t v23 = v22;
    }
    else
    {
      uint64_t v23 = v32;
    }
  }
}

void sub_1002D4524(id *a1)
{
  uint64_t v2 = v1;
  sub_1002D4CC0((uint64_t)a1, (uint64_t)&v22);
  id v4 = v22;
  id v5 = &v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  if (!v6)
  {
    sub_1002D4CC0((uint64_t)a1, (uint64_t)v25);
    if (!v25[0]) {
      return;
    }
    goto LABEL_7;
  }
  float64x2_t v20 = v23;
  float64x2_t v21 = v24;
  float64x2_t v18 = *(float64x2_t *)(v5 + 8);
  float64x2_t v19 = *(float64x2_t *)(v5 + 24);
  sub_1002D4CC0((uint64_t)a1, (uint64_t)v25);
  if (!v25[0])
  {
LABEL_7:
    id v9 = v6;
    sub_100049710(a1);

LABEL_8:
    if (*(void *)v5)
    {
      double v10 = *((double *)v5 + 3);
      double v11 = *((double *)v5 + 4);
      double v13 = *((double *)v5 + 1);
      double v12 = *((double *)v5 + 2);
      id v14 = *(id *)v5;
      id v15 = [v2 layer];
      id v16 = [v14 CGColor];
      [v15 setShadowColor:v16];

      [v15 setShadowOffset:v13, v12];
      [v15 setShadowRadius:v10];
      *(float *)&double v17 = v11;
      [v15 setShadowOpacity:v17];
    }
    return;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100797210);
  id v7 = v6;
  sub_100049710(a1);
  char v8 = static NSObject.== infix(_:_:)();
  sub_1000496E4(a1);

  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v18, v20), (int32x4_t)vceqq_f64(v19, v21))), 0xFuLL))) & 1) == 0|| (v8 & 1) == 0)
  {
    goto LABEL_8;
  }
}

void sub_1002D471C()
{
  id v8 = [v0 layer];
  self;
  double v1 = (void *)swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox;
    double v4 = 0.0;
    if (*((unsigned char *)v0
         + OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox))
      double v4 = 1.0;
    [v1 setLineWidth:v4];
    if (*((unsigned char *)v0 + v3) == 1)
    {
      id v5 = [self purpleColor];
      id v6 = [v5 CGColor];
    }
    else
    {
      id v6 = 0;
    }
    [v2 setStrokeColor:v6];

    id v7 = v6;
  }
  else
  {
    id v7 = v8;
  }
}

id sub_1002D49D8(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  double v4 = &v1[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_fill];
  *double v4 = 0;
  v4[1] = 0;
  id v5 = &v1[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shape];
  *(void *)id v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  id v6 = &v1[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_shadow];
  *(_OWORD *)id v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((void *)v6 + 4) = 0;
  v1[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_debugShowsBoundingBox] = 0;
  id v7 = &v1[OBJC_IVAR____TtC9Reminders50TTRIBoardColumnDraggingAnimationCellBackgroundView_boundsUsedForShapePath];
  *(_OWORD *)id v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  v7[32] = 1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  [super initWithCoder:a1];

  return v8;
}

uint64_t type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView()
{
  return self;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shadow;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shape()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationCellBackgroundView.Shape;
}

void *initializeBufferWithCopyOfBuffer for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  double v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a1 + 8);
  id v8 = *(void **)(a2 + 8);
  *(void *)(a1 + 8) = v8;
  id v9 = v8;

  return a1;
}

uint64_t assignWithTake for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill(uint64_t a1, _OWORD *a2)
{
  double v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

ValueMetadata *type metadata accessor for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill()
{
  return &type metadata for TTRIBoardColumnDraggingAnimationCellBackgroundView.Fill;
}

uint64_t sub_1002D4C24(char a1)
{
  if (a1)
  {
    if ((a1 & 4) != 0)
    {
      uint64_t v1 = 5;
      if ((a1 & 2) == 0) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v1 = 1;
      if ((a1 & 2) == 0) {
        goto LABEL_5;
      }
    }
LABEL_4:
    v1 |= 2uLL;
    goto LABEL_5;
  }
  if ((a1 & 4) == 0)
  {
    uint64_t v1 = 0;
    if ((a1 & 2) == 0) {
      goto LABEL_5;
    }
    goto LABEL_4;
  }
  uint64_t v1 = 4;
  if ((a1 & 2) != 0) {
    goto LABEL_4;
  }
LABEL_5:
  if ((a1 & 8) != 0) {
    return v1 | 8;
  }
  return v1;
}

id sub_1002D4C70(uint64_t a1, char a2, uint64_t a3, id a4, double a5, double a6, double a7)
{
  if ((a1 & ~a3) != 0) {
    a7 = 0.0;
  }
  if (fabs(a7) < 0.0000000149011612) {
    a7 = 0.001;
  }
  return [a4 _addRoundedCornerWithTrueCorner:a1 radius:a2 & 1 corner:a5 clockwise:a6];
}

uint64_t sub_1002D4CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789170);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D4D2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007972A0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007972A0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1002D4EA8()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  objc_super v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v11 = *(void *)(v29 - 8);
  double v12 = __chkstk_darwin(v29);
  id v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30.receiver = v1;
  v30.super_class = ObjectType;
  [super viewDidLoad];
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v7);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v3);
  UICollectionLayoutListConfiguration.footerMode.setter();
  sub_1000368FC(0, (unint64_t *)&qword_100797380);
  id v15 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id result = [v1 collectionView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v17 = result;
  [result setCollectionViewLayout:v15 animated:0];

  id result = [v1 collectionView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  float64x2_t v18 = result;
  [result setAllowsSelection:0];

  sub_1002D52E0();
  sub_1002D57A8();
  id v19 = [v1 navigationItem];
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter];
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v21 = *(void *)(v20 + 40);
    uint64_t v22 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v22, v21);
    swift_unknownObjectRelease();
  }
  static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setTitle:v23];

  id v24 = [v1 navigationItem];
  id v25 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___cancelButton, &selRef_didTapCancel_, 1);
  [v24 setLeftBarButtonItem:v25];

  id v26 = [v1 navigationItem];
  id v27 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
  [v26 setRightBarButtonItem:v27];

  return (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v29);
}

void sub_1002D52E0()
{
  uint64_t v33 = sub_10003B754(&qword_100797388);
  uint64_t v30 = *(void *)(v33 - 8);
  uint64_t v1 = *(void *)(v30 + 64);
  __chkstk_darwin(v33);
  uint64_t v29 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v27 - v3;
  uint64_t v34 = sub_10003B754(&qword_100797390);
  uint64_t v5 = *(void *)(v34 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v34);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  objc_super v10 = (char *)&v27 - v9;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTRIEditSectionsCell();
  UICollectionView.CellRegistration.init(handler:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_1000368FC(0, &qword_100797398);
  id v32 = v4;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  double v31 = v0;
  if ([v0 collectionView])
  {
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    uint64_t v28 = v10;
    uint64_t v12 = v34;
    v11(v7, v10, v34);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v14 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, v7, v12);
    id v15 = objc_allocWithZone((Class)sub_10003B754(&qword_1007973A0));
    uint64_t v16 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    float64x2_t v18 = v29;
    uint64_t v17 = v30;
    id v19 = v32;
    uint64_t v20 = v33;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v29, v32, v33);
    unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v22 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v22 + v21, v18, v20);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    NSString v23 = (void (*)(unsigned char *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
    sub_10003B754(&qword_1007973A8);
    UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter();
    v23(v35, 0);
    swift_allocObject();
    id v24 = v31;
    swift_unknownObjectWeakInit();
    id v25 = (void (*)(unsigned char *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
    UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter();
    v25(v35, 0);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v20);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v34);
    id v26 = *(void **)&v24[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource];
    *(void *)&v24[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource] = v16;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1002D57A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100797370);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter) + 168);
  uint64_t v7 = OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_lastConsumedViewModel;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_lastConsumedViewModel))
  {
    swift_retain();
    swift_retain();
    TTREditSectionsViewModel.isEmpty.getter();
    swift_release();
  }
  else
  {
    swift_retain();
  }
  swift_retain();
  TTREditSectionsViewModel.snapshot(previousViewModel:)();
  uint64_t result = swift_release();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource);
  if (v9)
  {
    id v10 = v9;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v1 + v7) = v6;
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002D5AA4(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:a3 target:v3 action:*a2];
    uint64_t v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    uint64_t v5 = 0;
  }
  id v9 = v5;
  return v6;
}

void sub_1002D5B28(char *a1)
{
  uint64_t v2 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v69 = *(void *)(v2 - 8);
  uint64_t v70 = v2;
  __chkstk_darwin(v2);
  uint64_t v71 = (char *)&v66 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_1007973D0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UICellAccessory.ReorderOptions();
  uint64_t v82 = *(void *)(v11 - 8);
  uint64_t v83 = v11;
  __chkstk_darwin(v11);
  uint64_t v81 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v86 = *(void *)(v13 - 8);
  uint64_t v87 = v13;
  __chkstk_darwin(v13);
  uint64_t v80 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for UICellAccessory();
  uint64_t v15 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v84 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    float64x2_t v18 = (void *)Strong;
    uint64_t v78 = v10;
    uint64_t v79 = v15;
    uint64_t v67 = v4;
    uint64_t v68 = v7;
    uint64_t v66 = v5;
    uint64_t v19 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter);
    swift_unknownObjectRetain();

    uint64_t v20 = *(void *)(v19 + 168);
    swift_retain();
    swift_unknownObjectRelease();
    uint64_t v77 = v20;
    TTREditSectionsViewModel.section(with:)();
    uint64_t v72 = (void *)v89[0];
    uint64_t v73 = v89[1];
    uint64_t v74 = v89[2];
    uint64_t v75 = v89[3];
    uint64_t v76 = v89[4];
    char v21 = v90;
    BOOL v88 = a1;
    uint64_t v22 = (uint64_t)&a1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
    NSString v23 = *(void **)&a1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel];
    uint64_t v24 = *(void *)&a1[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_viewModel + 8];
    uint64_t v25 = *(void *)(v22 + 16);
    uint64_t v26 = *(void *)(v22 + 24);
    uint64_t v27 = *(void *)(v22 + 32);
    char v28 = *(unsigned char *)(v22 + 40);
    sub_1000AE6F8((uint64_t)v89, (uint64_t)v92);
    if (v92[0])
    {
      if (v23)
      {
        uint64_t v94 = v23;
        uint64_t v95 = v24;
        uint64_t v96 = v25;
        uint64_t v97 = v26;
        uint64_t v98 = v27;
        char v99 = v28 & 1;
        v92[6] = v72;
        v92[7] = v73;
        v92[8] = v74;
        v92[9] = v75;
        v92[10] = v76;
        char v93 = v21 & 1;
        sub_1000AE6AC((uint64_t)v23);
        sub_1000AE85C((uint64_t)v89, (void (*)(void, void, void, void, void, void))sub_1000AE6AC);
        char v29 = static TTREditSectionsViewModel.SectionItem.__derived_struct_equals(_:_:)();
        sub_1000AE89C(v23);
        sub_1000AE85C((uint64_t)v89, (void (*)(void, void, void, void, void, void))sub_1000AE89C);
        if (v29)
        {
LABEL_14:
          CGRect v35 = v88;
          CGRect v36 = *(void **)&v88[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_displayNameField];
          swift_beginAccess();
          CGRect v37 = (void *)swift_unknownObjectWeakLoadStrong();
          id v38 = v36;
          [v38 setDelegate:v37];

          sub_1000AE6F8((uint64_t)v89, (uint64_t)v91);
          if (v91[0])
          {
            uint64_t v40 = v86;
            uint64_t v39 = v87;
            CGRect v41 = v80;
            (*(void (**)(char *, void, uint64_t))(v86 + 104))(v80, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v87);
            uint64_t v42 = type metadata accessor for UICellAccessory.LayoutDimension();
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v78, 1, 1, v42);
            CGRect v43 = v81;
            UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)();
            uint64_t v44 = v84;
            static UICellAccessory.reorder(displayed:options:)();
            (*(void (**)(char *, uint64_t))(v82 + 8))(v43, v83);
            (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v39);
            sub_10003B754((uint64_t *)&unk_10079AFF0);
            uint64_t v45 = v79;
            unint64_t v46 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
            uint64_t v47 = swift_allocObject();
            *(_OWORD *)(v47 + 16) = xmmword_10066C6F0;
            unint64_t v48 = v47 + v46;
            uint64_t v49 = v85;
            (*(void (**)(unint64_t, char *, uint64_t))(v45 + 16))(v48, v44, v85);
            UICollectionViewListCell.accessories.setter();
            sub_1000AE85C((uint64_t)v89, (void (*)(void, void, void, void, void, void))sub_1000AE89C);
            swift_release();
            (*(void (**)(char *, uint64_t))(v45 + 8))(v44, v49);
          }
          else
          {
            swift_beginAccess();
            uint64_t v50 = swift_unknownObjectWeakLoadStrong();
            uint64_t v51 = v78;
            if (v50)
            {
              id v52 = (char *)v50;
              id v53 = [objc_allocWithZone((Class)UISwitch) init];
              uint64_t v54 = v77;
              swift_beginAccess();
              [v53 setOn:*(unsigned __int8 *)(v54 + 16)];
              [v53 addTarget:v52 action:"didToggleHideEmptySections:" forControlEvents:4096];
              [v53 setIsAccessibilityElement:0];
              uint64_t v55 = sub_10003B754(&qword_1007973E0);
              uint64_t v56 = v71;
              Class v57 = (uint64_t (**)())&v71[*(int *)(v55 + 48)];
              (*(void (**)(char *, void, uint64_t))(v86 + 104))(v71, enum case for UICellAccessory.DisplayedState.always(_:), v87);
              *Class v57 = variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager;
              v57[1] = 0;
              (*(void (**)(char *, void, uint64_t))(v69 + 104))(v56, enum case for UICellAccessory.Placement.trailing(_:), v70);
              uint64_t v58 = type metadata accessor for UICellAccessory.LayoutDimension();
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v51, 1, 1, v58);
              id v59 = v53;
              uint64_t v60 = v68;
              UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
              sub_10003B754((uint64_t *)&unk_10079AFF0);
              *(_OWORD *)(swift_allocObject() + 16) = xmmword_10066C6F0;
              static UICellAccessory.customView(configuration:)();
              UICollectionViewListCell.accessories.setter();
              uint64_t v61 = *(void *)&v52[OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter];
              uint64_t v62 = swift_unknownObjectWeakLoadStrong();
              char v63 = v62;
              if (v62)
              {
                uint64_t v64 = *(void *)(v61 + 40);
                uint64_t ObjectType = swift_getObjectType();
                LOBYTE(v64) = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 8))(ObjectType, v64);

                swift_release();
                swift_unknownObjectRelease();
                char v63 = v64 & 1;
              }
              else
              {

                swift_release();
              }
              (*(void (**)(char *, uint64_t))(v66 + 8))(v60, v67);
              v35[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_currentLayout] = v63;
              *(void *)&v35[OBJC_IVAR____TtC9Reminders20TTRIEditSectionsCell_accessibilityDelegate + 8] = &off_100742170;
              swift_unknownObjectWeakAssign();
            }
            else
            {
              swift_release();
            }
          }
          return;
        }
LABEL_13:
        uint64_t v34 = *(void **)v22;
        sub_1000AE6F8((uint64_t)v89, v22);
        sub_1000AE85C((uint64_t)v89, (void (*)(void, void, void, void, void, void))sub_1000AE6AC);
        sub_1000AE89C(v34);
        [v88 setNeedsUpdateConfiguration];
        goto LABEL_14;
      }
    }
    else if (!v23)
    {
      goto LABEL_14;
    }
    sub_1000AE6AC((uint64_t)v23);
    sub_1000AE85C((uint64_t)v89, (void (*)(void, void, void, void, void, void))sub_1000AE6AC);
    sub_1000AE89C(v72);
    sub_1000AE89C(v23);
    goto LABEL_13;
  }
  if (qword_100785428 != -1) {
    swift_once();
  }
  uint64_t v30 = type metadata accessor for Logger();
  sub_100018BF8(v30, (uint64_t)qword_1007972A0);
  double v31 = Logger.logObject.getter();
  os_log_type_t v32 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v33 = 0;
    _os_log_impl((void *)&_mh_execute_header, v31, v32, "TTRIEditSectionsViewController: No viewModel found for cell registration", v33, 2u);
    swift_slowDealloc();
  }
}

void sub_1002D65BC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1002D662C();
  }
}

uint64_t sub_1002D662C()
{
  uint64_t v1 = type metadata accessor for UIListContentConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v13[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = UICollectionViewListCell.defaultContentConfiguration()();
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_dataSource);
  if (v6)
  {
    id v7 = v6;
    IndexPath.section.getter();
    dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

    if (LOBYTE(v13[0]) != 2 && (v13[0] & 1) == 0)
    {
      uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders30TTRIEditSectionsViewController_presenter);
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v9 = *(void *)(v8 + 40);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(ObjectType, v9);
        swift_unknownObjectRelease();
      }
      static TTRLocalizableStrings.Sections.hideEmptySectionsSubtitle(listLayout:)();
      UIListContentConfiguration.text.setter();
    }
    v13[3] = v1;
    v13[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    uint64_t v11 = sub_1000394A8(v13);
    (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v11, v4, v1);
    UICollectionViewCell.contentConfiguration.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002D67E8(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3 = *a3;
  type metadata accessor for TTRIEditSectionsCell();
  id v4 = v3;
  uint64_t v5 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

  return v5;
}

uint64_t sub_1002D6870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (static String._unconditionallyBridgeFromObjectiveC(_:)() == a2 && v4 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  sub_1000368FC(0, &qword_100797398);
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

void sub_1002D6934()
{
  uint64_t v0 = sub_10003B754(&qword_1007973B0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_1007973B8);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_1007973C0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    sub_10003B754(&qword_1007973C8);
    uint64_t v13 = NSDiffableDataSourceTransaction.sectionTransactions.getter();
    if (*(void *)(v13 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v13 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v14, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      sub_10003B6F8((uint64_t)v6, &qword_1007973B8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      NSDiffableDataSourceSectionTransaction.initialSnapshot.getter();
      uint64_t v15 = NSDiffableDataSourceSectionSnapshot.items.getter();
      uint64_t v16 = *(void (**)(char *, uint64_t))(v1 + 8);
      v16(v3, v0);
      uint64_t v17 = sub_1002D72AC(v15);
      swift_bridgeObjectRelease();
      NSDiffableDataSourceSectionTransaction.finalSnapshot.getter();
      uint64_t v18 = NSDiffableDataSourceSectionSnapshot.items.getter();
      v16(v3, v0);
      uint64_t v19 = sub_1002D72AC(v18);
      swift_bridgeObjectRelease();
      sub_10020CB94((uint64_t)v19, (uint64_t)v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t type metadata accessor for TTRIEditSectionsViewController()
{
  return self;
}

uint64_t sub_1002D711C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002D7154(char *a1)
{
}

void sub_1002D715C()
{
}

uint64_t sub_1002D7164()
{
  return sub_1001681CC(&qword_100797390);
}

uint64_t sub_1002D7170(uint64_t a1, uint64_t a2, void **a3)
{
  sub_10003B754(&qword_100797390);

  return sub_1002D67E8(a1, a2, a3);
}

uint64_t sub_1002D71FC()
{
  return sub_1001681CC(&qword_100797388);
}

uint64_t sub_1002D7208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10003B754(&qword_100797388);

  return sub_1002D6870(a1, a2, a3);
}

void sub_1002D72A4()
{
}

void *sub_1002D72AC(uint64_t a1)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v3; ++i)
    {
      uint64_t v5 = *(void **)(a1 + 8 * i + 32);
      if (v5)
      {
        id v6 = v5;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
    }
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_1002D738C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TTRTemplatePublicLinkData();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&aBlock[-1] - v7;
  uint64_t v9 = (uint64_t)&v1[qword_1007BBA78];
  swift_beginAccess();
  sub_1002D8748(v9, (uint64_t)v8);
  swift_beginAccess();
  sub_1002D87AC(a1, v9);
  swift_endAccess();
  sub_1002D8748(v9, (uint64_t)v5);
  LOBYTE(v9) = static TTRTemplatePublicLinkData.__derived_struct_equals(_:_:)();
  sub_1002D88C4((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  if (v9) {
    goto LABEL_3;
  }
  id v10 = *(void **)&v1[direct field offset for TTRITableViewContainerCell.containerView];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1002D8848;
  *(void *)(v12 + 24) = v11;
  aBlock[4] = sub_1000218B0;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_100742258;
  uint64_t v13 = _Block_copy(aBlock);
  uint64_t v14 = v1;
  swift_retain();
  swift_release();
  [v10 performBatchUpdates:v13];
  _Block_release(v13);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
LABEL_3:
    sub_1002D88C4(a1, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
    return sub_1002D88C4((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  }
  return result;
}

uint64_t sub_1002D7618(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v47 = a3;
  uint64_t v44 = a2;
  id v49 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_10003B754(&qword_10078ED00);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078ED08);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIButton.Configuration();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[qword_1007973E8 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v14 = &v3[qword_1007BBA78];
  uint64_t v15 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  *(void *)&v14[*(int *)(type metadata accessor for TTRTemplatePublicLinkData() + 20)] = 0;
  id v16 = objc_allocWithZone((Class)UILabel);
  uint64_t v17 = v3;
  id v18 = [v16 init:v44];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  uint64_t v19 = (void *)static UIFont.roundedBodyFont.getter();
  [v18 setFont:v19];

  id v20 = [self secondaryLabelColor];
  [v18 setTextColor:v20];

  [v18 setAdjustsFontForContentSizeCategory:1];
  id v21 = [objc_allocWithZone((Class)UIButton) init];
  static UIButton.Configuration.borderless()();
  static TTRLocalizableStrings.Templates.templateStatusUpdateSharedTemplate.getter();
  UIButton.Configuration.title.setter();
  UIButton.Configuration.contentInsets.setter();
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v22 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v9, 0, 1, v22);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v13, v10);
  uint64_t v45 = v11;
  uint64_t v46 = v10;
  uint64_t v23 = v10;
  uint64_t v24 = v47;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v23);
  UIButton.configuration.setter();
  *(void *)&v17[qword_1007973F0] = v18;
  *(void *)&v17[qword_1007973F8] = v21;
  id v25 = v18;
  id v26 = v21;

  if (v24)
  {
    NSString v27 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v27 = 0;
  }
  v51.receiver = v17;
  v51.super_class = ObjectType;
  char v28 = (char *)[super initWithStyle:v49 reuseIdentifier:v27];

  uint64_t v29 = direct field offset for TTRITableViewContainerCell.containerView;
  uint64_t v30 = *(void **)&v28[direct field offset for TTRITableViewContainerCell.containerView];
  double v31 = v28;
  id v32 = v30;
  [v32 setHorizontalAlignment:1];
  [v32 setVerticalAlignment:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10066C430;
  *(void *)(v33 + 32) = v25;
  *(void *)(v33 + 40) = v26;
  aBlock[0] = v33;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  id v49 = v25;
  id v34 = v26;
  id v35 = v32;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v35 setArrangedSubviews:isa];

  [v34 addTarget:v31 action:"buttonAction:" forControlEvents:0x2000];
  [v31 setSeparatorInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  CGRect v37 = *(void **)&v28[v29];
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = v31;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1002D897C;
  *(void *)(v39 + 24) = v38;
  aBlock[4] = sub_1000499FC;
  aBlock[5] = v39;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100021888;
  aBlock[3] = &unk_1007422D0;
  uint64_t v40 = _Block_copy(aBlock);
  CGRect v41 = v31;
  swift_retain();
  swift_release();
  [v37 performBatchUpdates:v40];
  _Block_release(v40);
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v40)
  {
    __break(1u);
  }
  else
  {
    CGRect v43 = v41;
    UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
    return (uint64_t)v43;
  }
  return result;
}

uint64_t sub_1002D7CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  static UIFont.roundedBodyFont.getter();
  sub_10001B9FC();
  return AttributeContainer.subscript.setter();
}

uint64_t sub_1002D7D70(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1002D7618(a3, a4, v6);
}

void sub_1002D7DBC()
{
  uint64_t v1 = (char *)objc_allocWithZone(v0);
  *(void *)&v1[qword_1007973E8 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v2 = &v1[qword_1007BBA78];
  uint64_t v3 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)&v2[*(int *)(type metadata accessor for TTRTemplatePublicLinkData() + 20)] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002D7EA0(char *a1, uint64_t a2, void *a3)
{
  *(void *)&a1[qword_1007973E8 + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v5 = &a1[qword_1007BBA78];
  uint64_t v6 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(void *)&v5[*(int *)(type metadata accessor for TTRTemplatePublicLinkData() + 20)] = 0;
  id v7 = a3;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

Class sub_1002D7F88(void *a1)
{
  id v1 = a1;
  uint64_t v2 = sub_1002D7FF8();

  if (v2)
  {
    v3.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v3.super.Class isa = 0;
  }

  return v3.super.isa;
}

void *sub_1002D7FF8()
{
  id v1 = *(void **)(v0 + qword_1007973F0);
  if ([v1 isHidden])
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v12 = sub_1000368FC(0, &qword_100787808);
    *(void *)&long long v11 = v1;
    id v3 = v1;
    uint64_t v2 = sub_1005714BC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v5 = v2[2];
    unint64_t v4 = v2[3];
    if (v5 >= v4 >> 1) {
      uint64_t v2 = sub_1005714BC((void *)(v4 > 1), v5 + 1, 1, v2);
    }
    v2[2] = v5 + 1;
    sub_100038E1C(&v11, &v2[4 * v5 + 4]);
  }
  uint64_t v6 = *(void **)(v0 + qword_1007973F8);
  if ((objc_msgSend(v6, "isHidden", (void)v11) & 1) == 0)
  {
    uint64_t v12 = sub_1000368FC(0, &qword_100794990);
    *(void *)&long long v11 = v6;
    id v7 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_1005714BC(0, v2[2] + 1, 1, v2);
    }
    unint64_t v9 = v2[2];
    unint64_t v8 = v2[3];
    if (v9 >= v8 >> 1) {
      uint64_t v2 = sub_1005714BC((void *)(v8 > 1), v9 + 1, 1, v2);
    }
    v2[2] = v9 + 1;
    sub_100038E1C(&v11, &v2[4 * v9 + 4]);
  }
  return v2;
}

void sub_1002D8194(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRTemplatePublicLinkData();
  __chkstk_darwin(v5);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + qword_1007BBA78;
  swift_beginAccess();
  sub_1002D8748(v8, (uint64_t)v7);
  sub_1002D8860((uint64_t)v7, (uint64_t)v4);
  uint64_t v9 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v4, 1, v9) == 1)
  {
    static TTRLocalizableStrings.Templates.templateStatusTemplate.getter();
    [*(id *)(a1 + qword_1007973F8) setHidden:1];
    uint64_t v10 = *(void **)(a1 + qword_1007973F0);
    [v10 setHidden:0];
    NSString v11 = String._bridgeToObjectiveC()();
    [v10 setText:v11];
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = *(void *)(v8 + *(int *)(v5 + 20));
    if ((*(void *)TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor() & ~v12) != 0)
    {
      static TTRLocalizableStrings.Templates.templateStatusSharedTemplate.getter();
      [*(id *)(a1 + qword_1007973F8) setHidden:1];
      uint64_t v14 = *(void **)(a1 + qword_1007973F0);
      [v14 setHidden:0];
      NSString v15 = String._bridgeToObjectiveC()();
      [v14 setText:v15];
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v13 = *(void **)(a1 + qword_1007973F8);
      [v13 setHidden:0];
      [*(id *)(a1 + qword_1007973F0) setHidden:1];
      [v13 setEnabled:1];
    }
    sub_1002D88C4((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay);
  }
}

uint64_t sub_1002D8448(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v12, 0, sizeof(v12));
    id v5 = a1;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(v7 + 8) + 760))(v10, ObjectType);
    if (v11)
    {
      sub_100038D28(v10, v11);
      sub_10017C9B0(0);
      sub_100038CD8((uint64_t)v10);
    }
    else
    {
      sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_100797520);
    }

    swift_unknownObjectRelease();
  }
  else
  {
  }
  return sub_10003B6F8((uint64_t)v12, &qword_100788D60);
}

void sub_1002D8554()
{
  sub_1000499D4(v0 + qword_1007973E8);
  sub_1002D88C4(v0 + qword_1007BBA78, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);

  id v1 = *(void **)(v0 + qword_1007973F8);
}

void sub_1002D85C8(uint64_t a1)
{
  sub_1000499D4(a1 + qword_1007973E8);
  sub_1002D88C4(a1 + qword_1007BBA78, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);

  uint64_t v2 = *(void **)(a1 + qword_1007973F8);
}

uint64_t type metadata accessor for TTRIRemindersListTemplateStatusCell()
{
  uint64_t result = qword_100797428;
  if (!qword_100797428) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002D8694()
{
  uint64_t result = type metadata accessor for TTRTemplatePublicLinkData();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002D8740()
{
  return type metadata accessor for TTRIRemindersListTemplateStatusCell();
}

uint64_t sub_1002D8748(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D87AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D8810()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002D8848()
{
  sub_1002D8194(*(void *)(v0 + 16));
}

uint64_t sub_1002D8850()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D8860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002D88C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002D8924()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002D8940()
{
  return 8;
}

uint64_t sub_1002D894C()
{
  return swift_release();
}

uint64_t sub_1002D8954(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1002D8968(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1002D8984()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100797530);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100797530);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002D8A50()
{
  uint64_t v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x78);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v5, v1);
  return sub_1002D8B64((uint64_t)v4);
}

uint64_t sub_1002D8B64(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v29 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v28 - v15;
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  int v17 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v17 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:)
    || v17 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:))
  {
    BOOL v19 = v17 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    id v20 = (void *)*(unsigned __int8 *)(v2 + qword_100797700);
    *(unsigned char *)(v2 + qword_100797700) = v19;
    sub_1002DA014(v20);
    id v21 = (void *)REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter();
    sub_1002D9454(v21);
    REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter();
    uint64_t v22 = v29;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v29, v9, v4);
    int v23 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v22, v4);
    if (v23 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:))
    {
      char v24 = 0;
    }
    else if (v23 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:))
    {
      char v24 = 1;
    }
    else if (v23 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:))
    {
      char v24 = 2;
    }
    else if (v23 == enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:))
    {
      char v24 = 3;
    }
    else
    {
      if (v23 != enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:)) {
        goto LABEL_17;
      }
      char v24 = 4;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
    id v25 = (void *)*(unsigned __int8 *)(v2 + qword_100797710);
    *(unsigned char *)(v2 + qword_100797710) = v24;
    sub_1002DA0EC(v25);
    [*(id *)(v2 + qword_1007976F0) setOn:REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.includePastDue.getter() & 1];
    uint64_t v26 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
  }
  _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
LABEL_17:
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1002D8F1C(uint64_t a1)
{
  *(void *)(a1 + qword_1007976D8 + 8) = 0;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1002D8F34(uint64_t a1)
{
  *(void *)(a1 + qword_1007976D8 + 8) = &off_1007424B8;
  return swift_unknownObjectWeakAssign();
}

void sub_1002D8F54()
{
}

uint64_t sub_1002D8F84()
{
  return sub_1000499C4(*(void *)(v0 + qword_1007BBA80));
}

uint64_t sub_1002D8F98(uint64_t a1)
{
  return sub_1000499C4(*(void *)(a1 + qword_1007BBA80));
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeContent(uint64_t a1)
{
  return sub_100030FD4(a1, qword_100797578);
}

uint64_t sub_1002D8FCC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1002D9010()
{
  return type metadata accessor for TTRISmartListFilterEditorRelativeRangeContent(0);
}

void sub_1002D9018()
{
  qword_100797548 = 0x4020000000000000;
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCellContainerStackView()
{
  return self;
}

uint64_t sub_1002D9270()
{
  uint64_t v1 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  v8.n128_f64[0] = __chkstk_darwin(v5);
  char v9 = *(unsigned char *)(v0 + qword_100797700);
  uint64_t v10 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  if (!v9) {
    uint64_t v10 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  }
  (*(void (**)(char *, void, __n128))(v7 + 104))((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), *v10, v8);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *(unsigned int *)*(&off_100742558 + *(char *)(v0 + qword_100797710)), v1);
  if ((v9 & 1) == 0) {
    [*(id *)(v0 + qword_1007976F0) isOn];
  }
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
}

id sub_1002D9454(id result)
{
  uint64_t v2 = qword_100797708;
  id v3 = *(id *)(v1 + qword_100797708);
  *(void *)(v1 + qword_100797708) = result;
  if (v3 == result) {
    return result;
  }
  uint64_t v4 = *(void **)(v1 + qword_1007976E0);
  uint64_t result = [v4 numberOfComponents];
  uint64_t v5 = *(void **)(v1 + qword_1007976F8 + 8);
  unint64_t v6 = v5[2];
  if (v6 < 2)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v5[5] < (uint64_t)result)
  {
    uint64_t v7 = *(void *)(v1 + v2);
    if (__OFSUB__(v7, 1))
    {
LABEL_14:
      __break(1u);
      return result;
    }
    uint64_t result = [v4 selectRow:v7 - 1 inComponent:];
    unint64_t v6 = v5[2];
  }
  if (v6 < 3) {
    goto LABEL_12;
  }
  uint64_t result = [v4 reloadComponent:v5[6]];
  if (!v5[2])
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = v5[4];

  return [v4 reloadComponent:v8];
}

char *sub_1002D9558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v3[qword_1007976D8 + 8] = 0;
  swift_unknownObjectWeakInit();
  v3[qword_100797700] = 0;
  *(void *)&v3[qword_100797708] = 1;
  v3[qword_100797710] = 1;
  *(void *)&v3[qword_100797718] = 0;
  *(void *)&v3[qword_100797720] = _swiftEmptyArrayStorage;
  id v6 = objc_allocWithZone((Class)UIPickerView);
  uint64_t v7 = v3;
  id v8 = [v6 initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v7[qword_1007976E0] = v8;
  id v9 = objc_allocWithZone((Class)UILabel);
  id v10 = v8;
  id v11 = [v9 init];
  v12._countAndFlagsBits = 0xD00000000000001ALL;
  v13._countAndFlagsBits = 0xD000000000000037;
  v12._object = (void *)0x80000001006AEC20;
  v13._object = (void *)0x80000001006AEC40;
  TTRLocalizedString(_:comment:)(v12, v13);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v14];

  id v15 = [objc_allocWithZone((Class)UISwitch) init];
  *(void *)&v7[qword_1007976F0] = v15;
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_10066C430;
  *(void *)(v16 + 32) = v11;
  *(void *)(v16 + 40) = v15;
  uint64_t v47 = v16;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  id v45 = v15;
  id v43 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v18 = [self containerStackViewWithAxis:0 arrangedSubviews:isa];

  uint64_t v19 = qword_100785438;
  id v20 = v18;
  if (v19 != -1) {
    swift_once();
  }
  [v20 setLayoutMargins:0.0, *(double *)&qword_100797548, 0.0, *(double *)&qword_100797548, a2];

  [v20 setLayoutMarginsRelativeArrangement:1];
  *(void *)&v7[qword_1007976E8] = v20;
  id v21 = v20;
  v22._countAndFlagsBits = 0xD000000000000050;
  v23._countAndFlagsBits = 0xD000000000000201;
  v22._object = (void *)0x80000001006B49A0;
  v24._object = (void *)0x80000001006B4A00;
  v23._object = (void *)0x80000001006B4A20;
  v24._countAndFlagsBits = 0xD000000000000019;
  Swift::String v25 = TTRLocalizedString(_:value:comment:)(v22, v24, v23);
  uint64_t v26 = sub_1002DC2AC(v25._countAndFlagsBits, (unint64_t)v25._object);
  swift_bridgeObjectRelease();
  NSString v27 = sub_1002DC8A4((uint64_t)v26);
  uint64_t v28 = &v7[qword_1007976F8];
  *(void *)uint64_t v28 = v26;
  *((void *)v28 + 1) = v27;

  if (a3)
  {
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v29 = 0;
  }
  v46.receiver = v7;
  v46.super_class = ObjectType;
  uint64_t v30 = (char *)[super initWithStyle:a1 reuseIdentifier:v29];

  double v31 = *(void **)&v30[direct field offset for TTRIStaticTableViewBaseCell.containerView];
  id v32 = v30;
  [v31 setAxis:1];
  [v10 setDelegate:v32];
  [v45 addTarget:v32 action:"includePastDueSwitchAction:" forControlEvents:4096];
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10066C430;
  *(void *)(v33 + 32) = v10;
  *(void *)(v33 + 40) = v21;
  uint64_t v47 = v33;
  specialized Array._endMutation()();
  id v34 = v10;
  id v35 = v21;
  id v36 = v31;
  Class v37 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v36 setArrangedSubviews:v37];

  uint64_t v38 = *(void **)&v32[qword_1007976E0];
  uint64_t result = (char *)[v38 numberOfComponents];
  uint64_t v40 = *(void **)&v32[qword_1007976F8 + 8];
  if (!v40[2])
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v40[4] < (uint64_t)result) {
    [v38 selectRow:v32[qword_100797700] inComponent:0 animated:YES];
  }
  uint64_t result = (char *)[v38 numberOfComponents];
  if (v40[2] < 2uLL) {
    goto LABEL_18;
  }
  if (v40[5] < (uint64_t)result)
  {
    uint64_t v41 = *(void *)&v32[qword_100797708];
    if (__OFSUB__(v41, 1))
    {
LABEL_20:
      __break(1u);
      return result;
    }
    [v38 selectRow:v41 - 1];
  }
  uint64_t result = (char *)[v38 numberOfComponents];
  if (v40[2] < 3uLL)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v40[6] < (uint64_t)result) {
    [v38 selectRow:v32[qword_100797710] inComponent:];
  }

  return v32;
}

char *sub_1002D9AFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1002D9558(a3, a4, v6);
}

void sub_1002D9B48(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  sub_1002DC96C();
}

void sub_1002D9B70()
{
  uint64_t v1 = objc_allocWithZone(v0);
  *(void *)&v1[qword_1007976D8 + 8] = 0;
  swift_unknownObjectWeakInit();
  v1[qword_100797700] = 0;
  *(void *)&v1[qword_100797708] = 1;
  v1[qword_100797710] = 1;
  *(void *)&v1[qword_100797718] = 0;
  *(void *)&v1[qword_100797720] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t *sub_1002D9C48@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1002D9C60(char *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v18 = Substring.lowercased()();
  static CharacterSet.whitespaces.getter();
  sub_100022F44();
  uint64_t v6 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  BOOL v9 = v6 == 0x6F69746365726964 && v8 == 0xE90000000000006ELL;
  if (v9 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    char v10 = 0;
  }
  else
  {
    BOOL v11 = v6 == 0x647574696E67616DLL && v8 == 0xE900000000000065;
    if (v11 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      char v10 = 1;
    }
    else
    {
      BOOL v12 = v6 == 0x7374696E75 && v8 == 0xE500000000000000;
      if (v12 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        char v10 = 2;
      }
      else
      {
        if (qword_100785430 != -1) {
          swift_once();
        }
        uint64_t v13 = type metadata accessor for Logger();
        sub_100018BF8(v13, (uint64_t)qword_100797530);
        swift_bridgeObjectRetain();
        NSString v14 = Logger.logObject.getter();
        os_log_type_t v15 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v14, v15))
        {
          uint64_t v16 = (uint8_t *)swift_slowAlloc();
          v18._countAndFlagsBits = swift_slowAlloc();
          *(_DWORD *)uint64_t v16 = 136315138;
          swift_bridgeObjectRetain();
          uint64_t v19 = sub_1000385A8(v6, v8, &v18._countAndFlagsBits);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          char v10 = 3;
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v14, v15, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER elmenents must be one of 'direction', 'magnitude', 'units', but the actual content is %s", v16, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          char v10 = 3;
        }
      }
    }
  }
  *a1 = v10;
}

id sub_1002DA014(id result)
{
  uint64_t v2 = qword_100797700;
  if (((((result & 1) == 0) ^ *(unsigned __int8 *)(v1 + qword_100797700)) & 1) == 0)
  {
    uint64_t v3 = *(void **)(v1 + qword_1007976E0);
    uint64_t result = [v3 numberOfComponents];
    uint64_t v4 = *(void *)(v1 + qword_1007976F8 + 8);
    if (*(void *)(v4 + 16))
    {
      if (*(void *)(v4 + 32) < (uint64_t)result) {
        [v3 selectRow:*(unsigned __int8 *)(v1 + v2) inComponent:0 animated:YES];
      }
      uint64_t v5 = *(unsigned __int8 *)(v1 + v2);
      uint64_t v6 = *(void **)(v1 + qword_1007976E8);
      return [v6 setHidden:v5];
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

id sub_1002DA0EC(id result)
{
  uint64_t v2 = qword_100797710;
  if (*(unsigned __int8 *)(v1 + qword_100797710) == result) {
    return result;
  }
  uint64_t v3 = *(void **)(v1 + qword_1007976E0);
  uint64_t result = [v3 numberOfComponents];
  uint64_t v4 = *(void **)(v1 + qword_1007976F8 + 8);
  if (v4[2] < 3uLL)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v4[6] < (uint64_t)result)
  {
    uint64_t result = [v3 selectRow:*(unsigned __int8 *)(v1 + v2) inComponent:];
    if (v4[2] < 2uLL) {
      goto LABEL_12;
    }
  }
  uint64_t result = [v3 reloadComponent:v4[5]];
  if (!v4[2])
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t result = [v3 reloadComponent:v4[4]];
  if (*(uint64_t *)(v1 + qword_100797708) >= 1000)
  {
    return sub_1002D9454((id)0x3E7);
  }
  return result;
}

id sub_1002DA1FC()
{
  uint64_t v1 = *(void **)(v0 + qword_1007976E0);
  id result = [v1 numberOfComponents];
  uint64_t v3 = *(void *)(v0 + qword_1007976F8 + 8);
  if (*(void *)(v3 + 16))
  {
    if (*(void *)(v3 + 32) >= (uint64_t)result) {
      return 0;
    }
    else {
      return ([v1 selectedRowInComponent:] == 1);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1002DA27C()
{
  uint64_t v1 = *(void **)(v0 + qword_1007976E0);
  unint64_t result = (unint64_t)[v1 numberOfComponents];
  uint64_t v3 = *(void *)(v0 + qword_1007976F8 + 8);
  if (*(void *)(v3 + 16) < 3uLL)
  {
    __break(1u);
  }
  else if (*(void *)(v3 + 48) >= (int64_t)result)
  {
    return 1;
  }
  else
  {
    unint64_t result = [v1 selectedRowInComponent:];
    if (result >= 5) {
      return 1;
    }
    else {
      return result;
    }
  }
  return result;
}

uint64_t sub_1002DA300()
{
  uint64_t v1 = v0;
  [*(id *)(v0 + qword_1007976E0) frame];
  double v2 = CGRectGetWidth(v13) + -46.0;
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  double v3 = 23.0;
  id v4 = (id)static UIFont.roundedSystemFont(ofSize:weight:)();
  uint64_t v5 = sub_1002DA4DC((uint64_t)v4);

  double v11 = *(double *)&v5;
  sub_10003B754(&qword_100797A10);
  sub_100037EA0(&qword_100797A18, &qword_100797A10);
  sub_1002DCEB8();
  Sequence<>.sum()();
  if (v2 < v12)
  {
    do
    {
      swift_bridgeObjectRelease();
      uint64_t v6 = (void *)static UIFont.roundedSystemFont(ofSize:weight:)();

      id v4 = v6;
      uint64_t v5 = sub_1002DA4DC((uint64_t)v4);

      Sequence<>.sum()();
      double v3 = v3 + -1.0;
    }
    while (v11 >= v2 && v3 > 12.0 && v2 < v11);
  }
  BOOL v9 = *(void **)(v1 + qword_100797718);
  *(void *)(v1 + qword_100797718) = v4;

  *(void *)(v1 + qword_100797720) = v5;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002DA4DC(uint64_t a1)
{
  uint64_t v59 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v2 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v58 = (char *)v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v4 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v7 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  BOOL v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [objc_allocWithZone((Class)UILabel) init];
  [v10 setFont:a1];
  id v55 = self;
  int v11 = 0;
  unint64_t v12 = 0;
  unsigned int v46 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  uint64_t v62 = (void (**)(char *, void, uint64_t))(v4 + 104);
  unsigned int v45 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  unsigned int v52 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.year(_:);
  uint64_t v54 = (void (**)(char *, uint64_t, uint64_t))(v2 + 104);
  unsigned int v51 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.month(_:);
  unsigned int v50 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.week(_:);
  CGRect v13 = (void (**)(char *, uint64_t))(v7 + 8);
  double v14 = 0.0;
  unsigned int v49 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.day(_:);
  unsigned int v53 = enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units.hour(_:);
  double v15 = 0.0;
  double v16 = 0.0;
  while (2)
  {
    int v47 = v11;
    if (v12 >= 2) {
      goto LABEL_32;
    }
    unint64_t v17 = 0;
    BOOL v18 = *((unsigned char *)&off_100735550 + v12 + 32) == 0;
    unsigned int v19 = v46;
    if (!v18) {
      unsigned int v19 = v45;
    }
    unsigned int v60 = v19;
    do
    {
      if (v17 >= 5)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      uint64_t v20 = 0;
      uint64_t v21 = (uint64_t)*(&off_100735578 + v17 + 4);
      unint64_t v48 = v17 + 1;
      uint64_t v61 = *v62;
      do
      {
        uint64_t v34 = *((unsigned __int8 *)&off_1007355C0 + v20++ + 32);
        v61(v6, v60, v57);
        uint64_t v22 = v53;
        switch(v34)
        {
          case 1:
            uint64_t v22 = v49;
            break;
          case 2:
            uint64_t v22 = v50;
            break;
          case 3:
            uint64_t v22 = v51;
            break;
          case 4:
            uint64_t v22 = v52;
            break;
          default:
            break;
        }
        (*v54)(v58, v22, v59);
        REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
        _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO32dateOptionRelativeRangeDirectionySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
        NSString v23 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v10 setText:v23];

        [v10 intrinsicContentSize];
        double v25 = v24;
        id v26 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v21];
        NSString v27 = [v55 localizedStringFromNumber:v26 numberStyle:1];

        if (!v27)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v27 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        double v28 = ceil(v25);
        [v10 setText:v27];

        [v10 intrinsicContentSize];
        double v30 = ceil(v29);
        _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO28dateOptionRelativeRangeUnitsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
        NSString v31 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v10 setText:v31];

        [v10 intrinsicContentSize];
        double v33 = ceil(v32);
        if (v28 > v16) {
          double v16 = v28;
        }
        if (v30 > v15) {
          double v15 = v30;
        }
        if (v33 > v14) {
          double v14 = v33;
        }
        (*v13)(v9, v56);
      }
      while (v20 != 5);
      unint64_t v17 = v48;
    }
    while (v48 != 5);
    int v11 = 1;
    unint64_t v12 = &_mh_execute_header.magic + 1;
    if ((v47 & 1) == 0) {
      continue;
    }
    break;
  }
  sub_10003B754(&qword_100797A28);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_100671350;
  *(void *)(v35 + 32) = 0;
  uint64_t v36 = v35 + 32;
  *(void *)(v35 + 40) = 0;
  *(void *)(v35 + 48) = 0;
  Class v37 = *(void **)(v44[1] + qword_1007976F8 + 8);
  unint64_t v38 = v37[2];
  if (!v38) {
    goto LABEL_33;
  }
  unint64_t v39 = v37[4];
  if (v39 > 2)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  *(double *)(v36 + 8 * v39) = v16;
  if (v38 < 2)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  unint64_t v40 = v37[5];
  if (v40 > 2)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  *(double *)(v36 + 8 * v40) = v15;
  if (v38 < 3)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  unint64_t v41 = v37[6];
  if (v41 > 2)
  {
LABEL_38:
    __break(1u);
    JUMPOUT(0x1002DAADCLL);
  }
  uint64_t v42 = v35;
  *(double *)(v36 + 8 * v41) = v14;

  return v42;
}

uint64_t sub_1002DAAF0()
{
  uint64_t v1 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  __chkstk_darwin(v1 - 8);
  NSString v27 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v28 = *(void *)(v11 - 8);
  uint64_t v29 = v11;
  __chkstk_darwin(v11);
  CGRect v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15.n128_f64[0] = __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v26 - v16;
  char v18 = *(unsigned char *)(v0 + qword_100797700);
  unsigned int v19 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  if (!v18) {
    unsigned int v19 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  }
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v10, *v19, v7, v15);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *(unsigned int *)*(&off_100742558 + *(char *)(v0 + qword_100797710)), v3);
  if ((v18 & 1) == 0) {
    [*(id *)(v0 + qword_1007976F0) isOn];
  }
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
  sub_1002D8B64((uint64_t)v17);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v21 = result;
    sub_1002D9270();
    uint64_t v22 = *(void (**)(uint64_t))(v21 + qword_1007BBA80);
    uint64_t v24 = v28;
    uint64_t v23 = v29;
    if (v22)
    {
      uint64_t v25 = (uint64_t)v27;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v13, v29);
      swift_retain();
      v22(v25);
      sub_1000499C4((uint64_t)v22);
      sub_1002DCE5C(v25);
    }
    swift_unknownObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v13, v23);
  }
  return result;
}

uint64_t sub_1002DAE6C(void *a1)
{
  swift_unknownObjectRetain();
  id v2 = a1;
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  sub_1002DAAF0();

  return sub_100038CD8((uint64_t)&v4);
}

uint64_t sub_1002DAED0()
{
  sub_1000499D4(v0 + qword_1007976D8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002DAF74(uint64_t a1)
{
  sub_1000499D4(a1 + qword_1007976D8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell(uint64_t a1)
{
  return sub_100030FD4(a1, qword_100797750);
}

uint64_t sub_1002DB03C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1002DB0D4()
{
  return type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell(0);
}

id sub_1002DB1AC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = qword_100797718;
  if (!*(void *)(v1 + qword_100797718)) {
    sub_1002DA300();
  }
  id v5 = [*(id *)(v1 + qword_1007976E0) effectiveUserInterfaceLayoutDirection];
  id v6 = [objc_allocWithZone((Class)UILabel) init];
  sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  uint64_t v7 = (void *)static UIColor.ttrLabelColor.getter();
  [v6 setTextColor:v7];

  [v6 setFont:*(void *)(v2 + v4)];
  uint64_t v8 = 1;
  if (!a1) {
    uint64_t v8 = 2 * (v5 != (id)1);
  }
  if (a1 == 2) {
    uint64_t v9 = 2 * (v5 == (id)1);
  }
  else {
    uint64_t v9 = v8;
  }
  [v6 setTextAlignment:v9];
  return v6;
}

void sub_1002DB2C0(unint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100797A00);
  __chkstk_darwin(v4 - 8);
  uint64_t v54 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  __chkstk_darwin(v6);
  unsigned int v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned int v53 = (char *)&v50 - v9;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v50 - v11;
  uint64_t v13 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  __chkstk_darwin(v13);
  unsigned int v51 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v17 = (char *)&v50 - v16;
  uint64_t v18 = sub_10003B754(&qword_100797A08);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  NSString v27 = (char *)&v50 - v26;
  v29.n128_f64[0] = __chkstk_darwin(v28);
  NSString v31 = (char *)&v50 - v30;
  if (a2 > 2) {
    goto LABEL_7;
  }
  uint64_t v32 = *(void *)(v59 + qword_1007976F8);
  if (*(void *)(v32 + 16) <= a2)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    return;
  }
  int v33 = *(unsigned __int8 *)(v32 + a2 + 32);
  if (!v33)
  {
LABEL_7:
    if (a1 == 1)
    {
      unint64_t v38 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
    }
    else
    {
      if (a1)
      {
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v22 + 56))(v20, 1, 1, v21, v29);
        unint64_t v39 = &qword_100797A08;
        uint64_t v40 = (uint64_t)v20;
LABEL_20:
        sub_10003B6F8(v40, v39);
        return;
      }
      unint64_t v38 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
    }
    (*(void (**)(char *, void, uint64_t, __n128))(v22 + 104))(v20, *v38, v21, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v20, 0, 1, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v20, v21);
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v27, v31, v21);
    (*(void (**)(char *, void, uint64_t))(v57 + 104))(v12, *(unsigned int *)*(&off_100742558 + *(char *)(v59 + qword_100797710)), v58);
    REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
    _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO32dateOptionRelativeRangeDirectionySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v17, v56);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v31, v21);
    return;
  }
  if (v33 == 1)
  {
    uint64_t v34 = self;
    if (!__OFADD__(a1, 1))
    {
      uint64_t v35 = (void *)v34;
      id v36 = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1 + 1];
      id v37 = [v35 localizedStringFromNumber:v36 numberStyle:1];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      return;
    }
    goto LABEL_22;
  }
  if (a1 > 4)
  {
    unsigned int v49 = v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v57 + 56))(v54, 1, 1, v58, v29.n128_f64[0]);
    unint64_t v39 = &qword_100797A00;
    uint64_t v40 = (uint64_t)v49;
    goto LABEL_20;
  }
  uint64_t v42 = v57;
  uint64_t v41 = v58;
  id v43 = v54;
  (*(void (**)(char *, void, uint64_t, double))(v57 + 104))(v54, *(unsigned int *)*(&off_100742558 + a1), v58, v29.n128_f64[0]);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v43, 0, 1, v41);
  uint64_t v44 = v53;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v53, v43, v41);
  uint64_t v45 = v59;
  char v46 = *(unsigned char *)(v59 + qword_100797700);
  int v47 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  if (!v46) {
    int v47 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v24, *v47, v21);
  (*(void (**)(char *, char *, uint64_t))(v42 + 16))(v52, v44, v41);
  if ((v46 & 1) == 0) {
    [*(id *)(v45 + qword_1007976F0) isOn];
  }
  unint64_t v48 = v51;
  REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
  _s15RemindersUICore21TTRLocalizableStringsO0A0E10ListDetailO28dateOptionRelativeRangeUnitsySS19ReminderKitInternal014REMCustomSmartE16FilterDescriptorC0Q4DateO0iJ0VFZ_0();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v48, v56);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v44, v41);
}

unsigned char *storeEnumTagSinglePayload for TTRISmartListFilterEditorRelativeRangeTableCell.Units(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002DBBBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.Units()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.Units;
}

unsigned char *storeEnumTagSinglePayload for TTRISmartListFilterEditorRelativeRangeTableCell.Direction(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002DBCC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.Direction()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.Direction;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.ComponentToTypeConverter()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.ComponentToTypeConverter;
}

uint64_t sub_1002DBD08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_1002DBD74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_1002DBDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002DBE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002DBEA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002DBF04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1002DBF68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002DBF7C);
}

uint64_t sub_1002DBF7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1002DBFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002DBFFC);
}

uint64_t sub_1002DBFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(uint64_t a1)
{
  return sub_100030FD4(a1, qword_100797998);
}

uint64_t sub_1002DC08C()
{
  uint64_t result = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1002DC118()
{
  return sub_100037EA0(&qword_1007979D0, &qword_1007979D8);
}

void *sub_1002DC154@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

void sub_1002DC174(void *a1@<X8>)
{
  *a1 = &off_1007355E8;
}

unint64_t sub_1002DC188()
{
  unint64_t result = qword_1007979E0;
  if (!qword_1007979E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007979E0);
  }
  return result;
}

uint64_t sub_1002DC1DC()
{
  return sub_100037EA0(&qword_1007979E8, &qword_1007979F0);
}

unint64_t sub_1002DC218@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s9Reminders33TTRSmartListFilterEditorViewModelV14HashtagOptionsO8rawValueAESgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1002DC244(void *a1@<X8>)
{
  *a1 = &off_100735610;
}

unint64_t sub_1002DC258()
{
  unint64_t result = qword_1007979F8;
  if (!qword_1007979F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007979F8);
  }
  return result;
}

_UNKNOWN **sub_1002DC2AC(uint64_t a1, unint64_t a2)
{
  *(void *)&long long v38 = a1;
  *((void *)&v38 + 1) = a2;
  sub_100022F44();
  uint64_t v4 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    unsigned int v6 = (uint64_t *)(v4 + 56);
    uint64_t v7 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = *(v6 - 1);
      uint64_t v8 = *v6;
      long long v38 = *(_OWORD *)(v6 - 3);
      uint64_t v39 = v9;
      uint64_t v40 = v8;
      sub_1002D9C60((char *)&v37);
      char v10 = v37;
      if (v37 != 3)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_1005716F4(0, v7[2] + 1, 1, v7);
        }
        unint64_t v12 = v7[2];
        unint64_t v11 = v7[3];
        if (v12 >= v11 >> 1) {
          uint64_t v7 = sub_1005716F4((void *)(v11 > 1), v12 + 1, 1, v7);
        }
        v7[2] = v12 + 1;
        *((unsigned char *)v7 + v12 + 32) = v10;
      }
      v6 += 4;
      --v5;
    }
    while (v5);
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (v7[2] != 3)
  {
    swift_bridgeObjectRelease();
    if (qword_100785430 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100018BF8(v20, (uint64_t)qword_100797530);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v37 = sub_1000385A8(a1, a2, (uint64_t *)&v38);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER needs exactly three elements separated by the '-' character, but the actual content is %s", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return &off_1007354F0;
  }
  char v13 = 0;
  char v14 = 0;
  LOBYTE(v15) = 0;
  uint64_t v16 = 0;
  unint64_t v17 = v7 + 4;
  while (1)
  {
LABEL_13:
    uint64_t v18 = v16 + 1;
    if (!*((unsigned char *)v17 + v16)) {
      goto LABEL_25;
    }
    if (*((unsigned char *)v17 + v16) != 1) {
      goto LABEL_21;
    }
    if (v16 == 2)
    {
LABEL_45:
      if (v15)
      {
LABEL_46:
        if ((v13 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          if (qword_100785430 != -1) {
            swift_once();
          }
          uint64_t v29 = type metadata accessor for Logger();
          sub_100018BF8(v29, (uint64_t)qword_100797530);
          uint64_t v30 = Logger.logObject.getter();
          os_log_type_t v31 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v30, v31))
          {
            uint64_t v32 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v32 = 0;
            _os_log_impl((void *)&_mh_execute_header, v30, v31, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER must contain 'units' but does not", v32, 2u);
            swift_slowDealloc();
          }

          return &off_100735478;
        }
        return (_UNKNOWN **)v7;
      }
      goto LABEL_55;
    }
    while (1)
    {
      int v19 = *((unsigned __int8 *)v7 + v16 + 33);
      if (v19 != 1) {
        break;
      }
      if (++v16 == 2) {
        goto LABEL_45;
      }
    }
    uint64_t v18 = v16 + 2;
    if (v19 != 2) {
      break;
    }
    char v14 = 1;
LABEL_21:
    char v13 = 1;
    uint64_t v16 = v18;
    if (v18 == 3)
    {
      if (v15) {
        goto LABEL_53;
      }
LABEL_55:
      swift_bridgeObjectRelease();
      if (qword_100785430 != -1) {
        swift_once();
      }
      uint64_t v33 = type metadata accessor for Logger();
      sub_100018BF8(v33, (uint64_t)qword_100797530);
      uint64_t v34 = Logger.logObject.getter();
      os_log_type_t v35 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v34, v35))
      {
        id v36 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v36 = 0;
        _os_log_impl((void *)&_mh_execute_header, v34, v35, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER must contain 'direction' but does not", v36, 2u);
        swift_slowDealloc();
      }

      return &off_1007354C8;
    }
  }
  char v14 = 1;
  while (1)
  {
LABEL_25:
    if (v18 == 3)
    {
      if (v14) {
        goto LABEL_46;
      }
      goto LABEL_37;
    }
    int v15 = *((unsigned __int8 *)v17 + v18);
    if (*((unsigned char *)v17 + v18)) {
      break;
    }
    ++v18;
  }
  uint64_t v16 = v18 + 1;
  if (v15 == 1)
  {
    char v14 = 1;
    if (v18 != 2) {
      goto LABEL_13;
    }
    goto LABEL_46;
  }
  char v13 = 1;
  LOBYTE(v15) = 1;
  if (v18 != 2) {
    goto LABEL_13;
  }
LABEL_53:
  if ((v14 & 1) == 0)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    if (qword_100785430 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100018BF8(v24, (uint64_t)qword_100797530);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      NSString v27 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v27 = 0;
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "LIST_DETAIL_RELATIVE_RANGE_WHEEL_ORDER must contain 'magnitude' but does not", v27, 2u);
      swift_slowDealloc();
    }

    return &off_1007354A0;
  }
  return (_UNKNOWN **)v7;
}

_UNKNOWN **sub_1002DC8A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return &off_100735518;
  }
  if (!*(unsigned char *)(a1 + 32))
  {
    char v3 = 0;
LABEL_8:
    uint64_t v7 = sub_1003DB878(1u, a1);
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = (void *)v7;
      uint64_t v10 = sub_1003DB878(2u, a1);
      if ((v11 & 1) == 0)
      {
        unint64_t v12 = (void *)v10;
        sub_10003B754((uint64_t *)&unk_100797A30);
        unint64_t result = (_UNKNOWN **)swift_allocObject();
        *((_OWORD *)result + 1) = xmmword_100671350;
        result[4] = v3;
        result[5] = v9;
        result[6] = v12;
        return result;
      }
    }
    return &off_100735518;
  }
  char v3 = 0;
  uint64_t v4 = (unsigned __int8 *)(v1 - 1);
  unint64_t result = &off_100735518;
  while (v4 != v3)
  {
    if (!(v3++)[a1 + 33]) {
      goto LABEL_8;
    }
  }
  return result;
}

void sub_1002DC96C()
{
  *(void *)&v0[qword_1007976D8 + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[qword_100797700] = 0;
  *(void *)&v0[qword_100797708] = 1;
  v0[qword_100797710] = 1;
  *(void *)&v0[qword_100797718] = 0;
  *(void *)&v0[qword_100797720] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t _s9Reminders33TTRSmartListFilterEditorViewModelV14HashtagOptionsO8rawValueAESgSi_tcfC_0(unint64_t result)
{
  if (result >= 5) {
    return 5;
  }
  return result;
}

unint64_t sub_1002DCA3C(unint64_t result)
{
  if (result > 2) {
    return 2;
  }
  uint64_t v2 = *(void *)(v1 + qword_1007976F8);
  if (*(void *)(v2 + 16) > result) {
    return qword_1006749B0[*(char *)(v2 + result + 32)];
  }
  __break(1u);
  return result;
}

char *sub_1002DCA80()
{
  uint64_t v1 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  __chkstk_darwin(v1 - 8);
  NSString v27 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
  uint64_t v11 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  char v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v27 - v15;
  unsigned __int8 v17 = sub_1002DA1FC();
  uint64_t v18 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inNext(_:);
  if (v17) {
    uint64_t v18 = (unsigned int *)&enum case for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction.inPast(_:);
  }
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, *v18, v7);
  int v19 = *(void **)(v0 + qword_1007976E0);
  unint64_t result = (char *)[v19 numberOfComponents];
  uint64_t v21 = *(void *)(v0 + qword_1007976F8 + 8);
  if (*(void *)(v21 + 16) < 2uLL)
  {
    __break(1u);
  }
  else
  {
    if (*(void *)(v21 + 40) < (uint64_t)result && __OFADD__(objc_msgSend(v19, "selectedRowInComponent:"), 1)) {
      __break(1u);
    }
    char v22 = sub_1002DA27C();
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *(unsigned int *)*(&off_100742558 + v22), v3);
    if ((*(unsigned char *)(v0 + qword_100797700) & 1) == 0) {
      [*(id *)(v0 + qword_1007976F0) isOn];
    }
    REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
    sub_1002D8B64((uint64_t)v16);
    unint64_t result = (char *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v23 = result;
      sub_1002D9270();
      uint64_t v24 = *(void (**)(uint64_t))&v23[qword_1007BBA80];
      uint64_t v25 = v28;
      if (v24)
      {
        uint64_t v26 = (uint64_t)v27;
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v27, v13, v28);
        swift_retain();
        v24(v26);
        sub_1000499C4((uint64_t)v24);
        sub_1002DCE5C(v26);
      }
      swift_unknownObjectRelease();
      return (char *)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v25);
    }
  }
  return result;
}

uint64_t sub_1002DCE5C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRISmartListFilterEditorRelativeRangeContentState(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1002DCEB8()
{
  unint64_t result = qword_100797A20;
  if (!qword_100797A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100797A20);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002DCFD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType()
{
  return &type metadata for TTRISmartListFilterEditorRelativeRangeTableCell.PickerViewComponentType;
}

unint64_t sub_1002DD014()
{
  unint64_t result = qword_100797A40;
  if (!qword_100797A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100797A40);
  }
  return result;
}

id sub_1002DD188(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  unsigned int v4 = &v1[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
  *(void *)unsigned int v4 = 0;
  v4[8] = 1;
  v10.receiver = v1;
  v10.super_class = ObjectType;
  id v5 = [super initWithCoder:a1];
  if (v5)
  {
    id v6 = objc_allocWithZone((Class)UITapGestureRecognizer);
    id v7 = v5;
    id v8 = [v6 initWithTarget:v7 action:"didTap:"];
    [v7 addGestureRecognizer:v8];

    a1 = v8;
  }

  return v5;
}

void *sub_1002DD2A8()
{
  unint64_t v0 = TTRListAppearanceGridView.arrangedSubviews.getter();
  unint64_t v1 = v0;
  if (!(v0 >> 62))
  {
    uint64_t v2 = *(void *)((v0 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = (void *)swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  unint64_t result = (void *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t v2 = (uint64_t)result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v2 >= 1)
  {
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v5 = *(id *)(v1 + 8 * i + 32);
      }
      id v6 = v5;
      type metadata accessor for TTRListBadgeView();
      if (swift_dynamicCastClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

void sub_1002DD420(void *a1)
{
  uint64_t v2 = v1;
  [a1 locationInView:v1];
  [v1 hitTest:0];
  if (!v29) {
    return;
  }
  unint64_t v3 = (unint64_t)sub_1002DD2A8();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
LABEL_36:
    id v25 = v29;
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_4;
    }
LABEL_11:
    swift_bridgeObjectRelease();

LABEL_12:

    return;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v6 = v29;
  if (!v5) {
    goto LABEL_11;
  }
LABEL_4:
  uint64_t v7 = 0;
  while (1)
  {
    id v8 = (v4 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(v4 + 8 * v7 + 32);
    uint64_t v9 = v8;
    unsigned __int8 v10 = [v29 isDescendantOfView:v8];

    if (v10) {
      break;
    }
    uint64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    ++v7;
    if (v11 == v5) {
      goto LABEL_11;
    }
  }
  swift_bridgeObjectRelease();

  uint64_t v12 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem];
  if ((v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem + 8] & 1) != 0
    || *(void *)v12 != v7)
  {
    *(void *)uint64_t v12 = v7;
    _OWORD v12[8] = 0;
    unint64_t v13 = (unint64_t)sub_1002DD2A8();
    unint64_t v14 = v13;
    if (v13 >> 62) {
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
    }
    else {
      uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v15)
    {
      if (v15 < 1)
      {
        __break(1u);
        goto LABEL_46;
      }
      for (uint64_t i = 0; i != v15; ++i)
      {
        if ((v14 & 0xC000000000000001) != 0) {
          unsigned __int8 v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          unsigned __int8 v17 = *(id *)(v14 + 8 * i + 32);
        }
        uint64_t v18 = v17;
        (*(void (**)(void))((swift_isaMask & *v17) + 0x1B8))((i == *(void *)v12) & ~v12[8]);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v19 = (unint64_t)sub_1002DD2A8();
    unint64_t v20 = v19;
    if (v19 >> 62)
    {
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      if (v21)
      {
LABEL_29:
        if (v21 >= 1)
        {
          for (uint64_t j = 0; j != v21; ++j)
          {
            if ((v20 & 0xC000000000000001) != 0) {
              uint64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v23 = *(id *)(v20 + 8 * j + 32);
            }
            uint64_t v24 = v23;
            (*(void (**)(void))((swift_isaMask & *v23) + 0x1B8))((j == *(void *)v12) & ~v12[8]);
          }
          goto LABEL_40;
        }
LABEL_46:
        __break(1u);
        return;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21) {
        goto LABEL_29;
      }
    }
LABEL_40:
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = &v2[OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate];
  if (!swift_unknownObjectWeakLoadStrong()) {
    goto LABEL_12;
  }
  uint64_t v27 = *((void *)v26 + 1);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 8))(v2, v7, ObjectType, v27);

  swift_unknownObjectRelease();
}

void sub_1002DD878(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = (unint64_t)sub_1002DD2A8();
  unint64_t v4 = v3;
  if (v3 >> 62)
  {
LABEL_33:
    id v25 = a1;
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    if (v5) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v6 = a1;
  if (!v5) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v7 = 0;
  while (1)
  {
    id v8 = (v4 & 0xC000000000000001) != 0
       ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
       : *(id *)(v4 + 8 * v7 + 32);
    uint64_t v9 = v8;
    unsigned __int8 v10 = [a1 isDescendantOfView:v8];

    if (v10) {
      break;
    }
    uint64_t v11 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    ++v7;
    if (v11 == v5) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();

  uint64_t v12 = v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem;
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_indexOfSelectedItem + 8) & 1) == 0
    && *(void *)v12 == v7)
  {
    goto LABEL_38;
  }
  *(void *)uint64_t v12 = v7;
  *(unsigned char *)(v12 + 8) = 0;
  unint64_t v13 = (unint64_t)sub_1002DD2A8();
  unint64_t v14 = v13;
  if (v13 >> 62) {
    uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15)
  {
    if (v15 < 1)
    {
      __break(1u);
      goto LABEL_44;
    }
    for (uint64_t i = 0; i != v15; ++i)
    {
      if ((v14 & 0xC000000000000001) != 0) {
        unsigned __int8 v17 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        unsigned __int8 v17 = *(id *)(v14 + 8 * i + 32);
      }
      uint64_t v18 = v17;
      (*(void (**)(void))((swift_isaMask & *v17) + 0x1B8))((i == *(void *)v12) & ~*(unsigned __int8 *)(v12 + 8));
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v19 = (unint64_t)sub_1002DD2A8();
  unint64_t v20 = v19;
  if (v19 >> 62)
  {
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    if (v21)
    {
LABEL_26:
      if (v21 >= 1)
      {
        for (uint64_t j = 0; j != v21; ++j)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            uint64_t v23 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            uint64_t v23 = *(id *)(v20 + 8 * j + 32);
          }
          uint64_t v24 = v23;
          (*(void (**)(void))((swift_isaMask & *v23) + 0x1B8))((j == *(void *)v12) & ~*(unsigned __int8 *)(v12 + 8));
        }
        goto LABEL_37;
      }
LABEL_44:
      __break(1u);
      return;
    }
  }
  else
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_26;
    }
  }
LABEL_37:
  swift_bridgeObjectRelease();
LABEL_38:
  uint64_t v26 = v2 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v27 = *(void *)(v26 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8))(v2, v7, ObjectType, v27);
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1002DDC24()
{
  return sub_1000499D4(v0 + OBJC_IVAR____TtC9Reminders30TTRListAppearanceBadgeGridView_delegate);
}

uint64_t type metadata accessor for TTRListAppearanceBadgeGridView()
{
  return self;
}

void sub_1002DDC68(void *a1)
{
}

uint64_t type metadata accessor for TTRListDetailAssembly.ListComponentsCreator()
{
  return self;
}

uint64_t type metadata accessor for TTRListDetailAssembly.CustomSmartListComponentsCreator()
{
  return self;
}

uint64_t type metadata accessor for TTRListDetailAssembly.CreationComponentsCreator()
{
  return self;
}

uint64_t type metadata accessor for TTRListDetailAssembly.TemplateComponentsCreator()
{
  return self;
}

uint64_t sub_1002DDD1C()
{
  return sub_1002DDE60(&qword_100797CE8, (void (*)(uint64_t))&type metadata accessor for TTRTemplateEditor);
}

_UNKNOWN **sub_1002DDD64()
{
  return &protocol witness table for TTRListDetailTemplateViewModelSource;
}

uint64_t sub_1002DDD70()
{
  return sub_1002DDE60(&qword_100797D28, (void (*)(uint64_t))type metadata accessor for TTRListDetailCreationEditor);
}

_UNKNOWN **sub_1002DDDB8()
{
  return &protocol witness table for TTRListDetailCreationViewModelSource;
}

uint64_t sub_1002DDDC4()
{
  return sub_1002DDE60(&qword_100797D68, (void (*)(uint64_t))&type metadata accessor for TTRSmartListEditor);
}

_UNKNOWN **sub_1002DDE0C()
{
  return &protocol witness table for TTRListDetailCustomSmartListViewModelSource;
}

uint64_t sub_1002DDE18()
{
  return sub_1002DDE60(&qword_100797DA8, (void (*)(uint64_t))&type metadata accessor for TTRListEditor);
}

uint64_t sub_1002DDE60(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

_UNKNOWN **sub_1002DDEA8()
{
  return &protocol witness table for TTRListDetailListViewModelSource;
}

uint64_t sub_1002DDEB4()
{
  return swift_retain();
}

uint64_t sub_1002DDEF4()
{
  return 1;
}

_UNKNOWN **sub_1002DDF04()
{
  return &off_1007352C0;
}

uint64_t sub_1002DDF10@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  *(_OWORD *)a3 = xmmword_10066EDA0;
  *(unsigned char *)(a3 + 16) = 1;
  *(void *)(a3 + 24) = sub_1002E230C;
  *(void *)(a3 + 32) = v6;

  return swift_retain();
}

uint64_t sub_1002DDF94@<X0>(uint64_t (*a1)(void)@<X0>, void *a2@<X8>)
{
  unint64_t v3 = (void *)a1();
  if (v3)
  {
    unint64_t v4 = v3;
    id v5 = [v3 objectID];

    *a2 = v5;
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    swift_storeEnumTagMultiPayload();
    uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    id v8 = a2;
    uint64_t v9 = 0;
    uint64_t v10 = v6;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v10 = v11;
    id v8 = a2;
    uint64_t v9 = 1;
  }

  return v7(v8, v9, 1, v10);
}

id sub_1002DE084()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (void **)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v24 - v9;
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (id *)((char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14) != 1)
  {
    id v15 = 0;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1002E21A4((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
        {
          swift_retain();
          id v15 = sub_1000D2454((uint64_t)v7);
          swift_release();
          uint64_t v19 = (uint64_t)v7;
          goto LABEL_11;
        }
        uint64_t v16 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
        uint64_t v17 = (uint64_t)v7;
        goto LABEL_4;
      case 2u:
        sub_1002E21A4((uint64_t)v13, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        unint64_t v20 = *v4;
        uint64_t v21 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
        swift_beginAccess();
        uint64_t v22 = *v21;
        id v23 = v20;
        swift_bridgeObjectRetain();
        id v15 = sub_100598448(v23, v22);

        swift_bridgeObjectRelease();
        sub_1002E2274((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
        return v15;
      case 3u:
      case 4u:
      case 7u:
      case 8u:
      case 9u:
        uint64_t v16 = &type metadata accessor for TTRRemindersListViewModel.Item;
        uint64_t v17 = (uint64_t)v13;
        goto LABEL_4;
      case 5u:

        return 0;
      case 6u:

        return 0;
      case 0xAu:
      case 0xBu:
        return v15;
      default:
        sub_1002E21A4((uint64_t)v13, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
        {
          swift_retain();
          id v15 = sub_1000D2454((uint64_t)v10);
          swift_release();
          uint64_t v19 = (uint64_t)v10;
LABEL_11:
          sub_1002E2274(v19, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          return v15;
        }
        uint64_t v16 = &type metadata accessor for TTRRemindersListViewModel.SectionHeader;
        uint64_t v17 = (uint64_t)v10;
LABEL_4:
        sub_1002E2274(v17, (uint64_t (*)(void))v16);
        break;
    }
  }
  return 0;
}

uint64_t sub_1002DE4AC(uint64_t a1)
{
  return sub_1002DE578(a1, (void (*)(uint64_t))sub_1004E73A4);
}

uint64_t sub_1002DE4C4(void *a1)
{
  LOBYTE(a1) = sub_1004E78F8(a1);
  swift_release();
  return a1 & 1;
}

uint64_t sub_1002DE504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1002DF98C();
  sub_1004E7B18(a1, a2, a3);

  return swift_release();
}

uint64_t sub_1002DE560(uint64_t a1)
{
  return sub_1002DE578(a1, (void (*)(uint64_t))sub_1004E7CE4);
}

uint64_t sub_1002DE578(uint64_t a1, void (*a2)(uint64_t))
{
  sub_1002DF98C();
  a2(a1);

  return swift_release();
}

uint64_t sub_1002DE5D4(uint64_t a1)
{
  return sub_1002DE604(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_100478634);
}

uint64_t sub_1002DE5EC(uint64_t a1)
{
  return sub_1002DE604(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10047BB6C);
}

uint64_t sub_1002DE604(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = sub_1002DF98C();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v5 = *(void *)(v4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8))(v4, ObjectType, v5);
    swift_unknownObjectRelease();
    swift_retain();
    uint64_t v8 = a2(a1, 1, v7, v4);
    swift_release();
    swift_release_n();
  }
  else
  {
    if (qword_100785638 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_1007A1D48);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "Missing TTRShowRemindersInListDragAndDropPresenterCapabilityDelegate", v12, 2u);
      swift_slowDealloc();
    }
    swift_release();

    return 0;
  }
  return v8;
}

id sub_1002DE79C(uint64_t a1)
{
  v19[1] = a1;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  v19[0] = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v14 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  if (v14((uint64_t)v9, 1, v10) == 1)
  {
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
  }
  else
  {
    sub_1002E21A4((uint64_t)v9, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    swift_retain();
    swift_retain();
    uint64_t v15 = v19[0];
    TTRMutableTreeStorage.parent(of:)();
    swift_release();
    swift_release();
    if (v14(v15, 1, v10) == 1)
    {
      sub_1002E2274((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v15, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1002E2274((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v16 = v15;
      }
      else
      {
        sub_1002E21A4(v15, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        if (*(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
        {
          swift_retain();
          id v17 = sub_1000D2454((uint64_t)v4);
          swift_release();
          sub_1002E2274((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
          sub_1002E2274((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          return v17;
        }
        sub_1002E2274((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v16 = (uint64_t)v13;
      }
      sub_1002E2274(v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
  }
  return 0;
}

uint64_t sub_1002DEB4C(uint64_t a1, unint64_t a2)
{
  unint64_t v48 = a2;
  uint64_t v52 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v52);
  uint64_t v4 = (void **)((char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v5 - 8);
  uint64_t v49 = (uint64_t)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v53 = (uint64_t)&v47 - v8;
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v50 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v47 - v12;
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v47 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unint64_t v20 = (char *)&v47 - v19;
  uint64_t v51 = v2;
  swift_retain();
  swift_retain();
  TTRMutableTreeStorage.parent(of:)();
  swift_release();
  swift_release();
  uint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v21(v13, 1, v14) == 1)
  {
    uint64_t v22 = (uint64_t)v13;
    return sub_10003B6F8(v22, (uint64_t *)&unk_100788DC0);
  }
  sub_1002E21A4((uint64_t)v13, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1002E220C((uint64_t)v20, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = v53;
    sub_1002E21A4((uint64_t)v17, v53, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1002E220C(v24, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_1002E2274(v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1002E2274((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v30 = &type metadata accessor for TTRRemindersListViewModel.SectionID;
      uint64_t v29 = (uint64_t)v4;
      return sub_1002E2274(v29, (uint64_t (*)(void))v30);
    }
    id v25 = *v4;
    uint64_t v26 = v51;
    swift_retain();
    swift_retain();
    uint64_t v27 = v50;
    TTRMutableTreeStorage.parent(of:)();
    swift_release();
    uint64_t v28 = (uint64_t)v27;
    swift_release();
    if (v21(v27, 1, v14) == 1)
    {

      sub_1002E2274(v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      sub_1002E2274((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v22 = (uint64_t)v27;
      return sub_10003B6F8(v22, (uint64_t *)&unk_100788DC0);
    }
    os_log_type_t v31 = v20;
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v32 = v49;
      sub_1002E21A4(v28, v49, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      if (*(void *)(v26 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance)
        && (swift_retain(), id v33 = sub_1000D2454(v32), swift_release(), v33))
      {
        uint64_t v34 = *(void *)(v26
                        + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource
                        + 8);
        uint64_t ObjectType = swift_getObjectType();
        id v36 = *(uint64_t (**)(id, uint64_t, uint64_t))(v34 + 16);
        swift_unknownObjectRetain();
        uint64_t v37 = (void *)v36(v33, ObjectType, v34);
        swift_unknownObjectRelease();
        if (v37)
        {
          sub_10003B754((uint64_t *)&unk_1007894B0);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_10066D470;
          uint64_t v39 = v32;
          unint64_t v40 = v48;
          uint64_t v41 = *(void **)(v48 + 16);
          *(void *)(inited + 32) = [v41 objectID];
          unint64_t v55 = inited;
          specialized Array._endMutation()();
          sub_100028180(v55);
          swift_bridgeObjectRelease();
          type metadata accessor for TTRListEditor();
          uint64_t v54 = v37;
          id v42 = v37;
          id v43 = [v41 saveRequest];
          unint64_t v55 = v40;
          type metadata accessor for TTRReminderEditor();
          sub_1000D69E0();
          TTRUndoableEditing.undoManager.getter();
          TTROneshotEditing.init(item:saveRequest:undoManager:)();
          id v44 = v25;
          TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();

          swift_bridgeObjectRelease();
          swift_release();

          uint64_t v45 = v39;
        }
        else
        {

          uint64_t v45 = v32;
        }
        sub_1002E2274(v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v46 = v53;
      }
      else
      {

        sub_1002E2274(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v46 = v24;
      }
      sub_1002E2274(v46, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v30 = &type metadata accessor for TTRRemindersListViewModel.Item;
      uint64_t v29 = (uint64_t)v31;
      return sub_1002E2274(v29, (uint64_t (*)(void))v30);
    }

    sub_1002E2274(v24, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1002E2274((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v29 = v28;
  }
  else
  {
    sub_1002E2274((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v29 = (uint64_t)v17;
  }
  uint64_t v30 = &type metadata accessor for TTRRemindersListViewModel.Item;
  return sub_1002E2274(v29, (uint64_t (*)(void))v30);
}

uint64_t sub_1002DF26C()
{
  v1[3] = type metadata accessor for TTRUserActivityListPayload();
  v1[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
  *(unsigned char *)sub_1000394A8(v1) = 2;
  type metadata accessor for TTRUserActivityListPayload.State();
  swift_storeEnumTagMultiPayload();
  NSUserActivity.setPayload(_:)();
  return sub_100038CD8((uint64_t)v1);
}

uint64_t sub_1002DF2E4()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D0F54();
  uint64_t v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_100588C58(ObjectType, v12);
    swift_unknownObjectRelease();
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v6, 1, v14) != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      sub_1002E2274((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
      goto LABEL_6;
    }
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  }
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
LABEL_6:
  uint64_t v17 = (uint64_t)&v3[*(int *)(sub_10003B754(&qword_100786F30) + 48)];
  *uint64_t v3 = 2;
  sub_10003B694((uint64_t)v9, v17, (uint64_t *)&unk_10078E360);
  type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  swift_storeEnumTagMultiPayload();
  v21[3] = v1;
  v21[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  uint64_t v18 = sub_1000394A8(v21);
  sub_1002E220C((uint64_t)v3, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)();
  sub_1002E2274((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
  sub_100038CD8((uint64_t)v21);
  return v10;
}

uint64_t sub_1002DF5FC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem();
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v12, (uint64_t *)&unk_100788DC0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10003B6F8((uint64_t)v12, (uint64_t *)&unk_100788DC0);
    return 0;
  }
  sub_1002E21A4((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1002E2274((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem;
      uint64_t v19 = (uint64_t)v9;
LABEL_11:
      sub_1002E2274(v19, (uint64_t (*)(void))v18);
      return 0;
    }
LABEL_10:
    uint64_t v18 = &type metadata accessor for TTRRemindersListViewModel.Item;
    uint64_t v19 = (uint64_t)v16;
    goto LABEL_11;
  }
  sub_1002E21A4((uint64_t)v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance)
    || (swift_retain(), id v20 = sub_1000D2454((uint64_t)v6), swift_release(), !v20))
  {
    sub_1002E2274((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    goto LABEL_10;
  }
  uint64_t v21 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v23 = *(uint64_t (**)(id, uint64_t, uint64_t))(v21 + 16);
  swift_unknownObjectRetain();
  uint64_t v24 = v23(v20, ObjectType, v21);

  swift_unknownObjectRelease();
  sub_1002E2274((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
  sub_1002E2274((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return v24;
}

uint64_t sub_1002DF98C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource____lazy_storage___dragAndDropUtils);
  }
  else
  {
    type metadata accessor for TTRShowRemindersInListDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(void *)(v2 + 24) = &off_100742590;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1002DFA24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v29 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v28 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v4 - 8);
  uint64_t v27 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = 2;
  uint64_t v9 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v24 = REMSmartListType.title.getter();
  unint64_t v11 = v10;
  uint64_t v25 = static TTRListColors.SmartList.all.getter();
  uint64_t v26 = v1;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8);
  if (v14(ObjectType, v12)) {
    swift_unknownObjectRelease();
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(ObjectType, v12)) {
    swift_unknownObjectRelease();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v12 + 56))(v30, ObjectType, v12);
  sub_10003B6F8((uint64_t)v30, &qword_100791FA0);
  if (v14(ObjectType, v12))
  {
    uint64_t v16 = v15;
    uint64_t v17 = swift_getObjectType();
    int v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v17, v16);
    swift_unknownObjectRelease();
  }
  else
  {
    int v23 = 0;
  }
  unint64_t v18 = 0xE000000000000000;
  if (v11) {
    unint64_t v18 = v11;
  }
  v22[1] = v18;
  uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v27, 1, 1, v19);
  uint64_t v20 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v28, 1, 1, v20);
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

uint64_t sub_1002DFE30()
{
  swift_release();
  swift_unknownObjectRelease();

  return swift_release();
}

uint64_t sub_1002DFE80()
{
  sub_100588C8C();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1002DFF14()
{
  return type metadata accessor for TTRShowAllRemindersViewModelSource();
}

uint64_t type metadata accessor for TTRShowAllRemindersViewModelSource()
{
  uint64_t result = qword_100797E38;
  if (!qword_100797E38) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002DFF68()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002DFFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v103 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v103);
  int v102 = (uint64_t *)((char *)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v6 - 8);
  uint64_t v101 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v100 = (char *)&v78 - v9;
  uint64_t v109 = type metadata accessor for REMRemindersListDataView.ListsModel.Sublist();
  uint64_t v10 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  char v99 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v97 = *(void *)(v12 - 8);
  uint64_t v98 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v78 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v18 - 8);
  uint64_t v81 = (uint64_t)&v78 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_10003B754(&qword_10078B5D0);
  __chkstk_darwin(v96);
  uint64_t v95 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v94 = (unint64_t *)((char *)&v78 - v22);
  __chkstk_darwin(v23);
  id v108 = (uint64_t *)((char *)&v78 - v24);
  uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v78 = *(void *)(v25 - 8);
  uint64_t v79 = v25;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = REMRemindersListDataView.ListsModel.completedRemindersCount.getter();
  uint64_t v29 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount;
  *(void *)uint64_t v29 = v28;
  *(unsigned char *)(v29 + 8) = v30 & 1;
  uint64_t v80 = v27;
  sub_1002DFA24((uint64_t)v27);
  uint64_t v31 = REMRemindersListDataView.ListsModel.groups.getter();
  *(void *)&v110[0] = _swiftEmptyArrayStorage;
  sub_1004D3A20(0, 0, 0);
  uint64_t v32 = *(void *)&v110[0];
  uint64_t v33 = *(void *)(v31 + 16);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v93 = v33;
  uint64_t v83 = a2;
  uint64_t v84 = v3;
  uint64_t v82 = v17;
  if (v33)
  {
    unint64_t v35 = 0;
    uint64_t v88 = v10 + 32;
    uint64_t v89 = v10 + 16;
    uint64_t v86 = v123;
    uint64_t v87 = v122;
    uint64_t v85 = v10 + 8;
    id v91 = v14;
    uint64_t v92 = v10;
    uint64_t v90 = v31;
    while (v35 < *(void *)(v31 + 16))
    {
      unint64_t v36 = v31
          + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
          + *(void *)(v10 + 72) * v35;
      unint64_t v37 = v35;
      uint64_t v39 = v95;
      uint64_t v38 = v96;
      unint64_t v40 = &v95[*(int *)(v96 + 48)];
      uint64_t v41 = *(void (**)(char *, unint64_t, uint64_t))(v10 + 16);
      uint64_t v42 = v109;
      v41(v40, v36, v109);
      id v43 = v94;
      id v44 = (char *)v94 + *(int *)(v38 + 48);
      unint64_t v107 = v37;
      *uint64_t v94 = v37;
      uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
      v45(v44, v40, v42);
      uint64_t v46 = (uint64_t)v43;
      uint64_t v47 = v108;
      sub_100028C3C(v46, (uint64_t)v108, &qword_10078B5D0);
      uint64_t v48 = *(int *)(v38 + 48);
      uint64_t v49 = &v39[v48];
      uint64_t v106 = *v47;
      uint64_t v50 = v109;
      v41(&v39[v48], (unint64_t)v47 + v48, v109);
      uint64_t v51 = v99;
      v45(v99, v49, v50);
      uint64_t v52 = (void *)REMRemindersListDataView.ListsModel.Sublist.listColor.getter();
      type metadata accessor for TTRListColors();
      static TTRListColors.color(for:)();
      long long v104 = v124[1];
      long long v105 = v124[0];
      uint64_t v53 = v125;
      uint64_t v54 = v126;
      char v55 = v127;

      uint64_t v56 = REMRemindersListDataView.ListsModel.Sublist.listName.getter();
      uint64_t v58 = v57;
      if (v106) {
        char v59 = 3;
      }
      else {
        char v59 = 2;
      }
      sub_1000D5984((uint64_t)v124, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
      *int v102 = REMRemindersListDataView.ListsModel.Sublist.listID.getter();
      swift_storeEnumTagMultiPayload();
      v113[0] = v56;
      v113[1] = v58;
      long long v114 = v105;
      long long v115 = v104;
      uint64_t v116 = v53;
      uint64_t v117 = v54;
      uint64_t v60 = v92;
      char v118 = v55;
      __int16 v119 = 258;
      char v120 = 0;
      char v121 = v59;
      uint64_t v61 = v87;
      _WORD *v87 = v111;
      *((unsigned char *)v61 + 2) = v112;
      uint64_t v62 = v86;
      *uint64_t v86 = 0u;
      v62[1] = 0u;
      v62[2] = 0u;
      v123[24] = 255;
      TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v113);
      sub_100028C3C((uint64_t)v113, (uint64_t)v128, (uint64_t *)&unk_10079CA00);
      uint64_t v63 = (uint64_t)v100;
      TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
      uint64_t v64 = v101;
      sub_1002E220C(v63, v101, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v65 = REMRemindersListDataView.ListsModel.Sublist.reminders.getter();
      sub_1000D5984((uint64_t)v124, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
      sub_1002E2274(v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v10 = v60;
      uint64_t v66 = (uint64_t)v91;
      (*(void (**)(char *, uint64_t))(v60 + 8))(v51, v109);
      sub_1002E21A4(v64, v66, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      uint64_t v67 = v98;
      *(void *)(v66 + *(int *)(v98 + 20)) = v65;
      *(unsigned char *)(v66 + *(int *)(v67 + 24)) = 0;
      sub_10003B6F8((uint64_t)v108, &qword_10078B5D0);
      uint64_t v32 = *(void *)&v110[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3A20(0, *(void *)(v32 + 16) + 1, 1);
        uint64_t v32 = *(void *)&v110[0];
      }
      unint64_t v69 = *(void *)(v32 + 16);
      unint64_t v68 = *(void *)(v32 + 24);
      unint64_t v70 = v107;
      if (v69 >= v68 >> 1)
      {
        sub_1004D3A20(v68 > 1, v69 + 1, 1);
        uint64_t v32 = *(void *)&v110[0];
      }
      unint64_t v35 = v70 + 1;
      *(void *)(v32 + 16) = v69 + 1;
      uint64_t result = sub_1002E21A4(v66, v32+ ((*(unsigned __int8 *)(v97 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v97 + 80))+ *(void *)(v97 + 72) * v69, type metadata accessor for TTRRemindersListTreeViewModel.Section);
      uint64_t v31 = v90;
      if (v93 == v35) {
        goto LABEL_12;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease_n();
    uint64_t v72 = (uint64_t)v80;
    uint64_t v71 = v81;
    sub_1002E220C((uint64_t)v80, v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v71, 0, 1, v79);
    uint64_t v73 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v74 = swift_allocObject();
    uint64_t v75 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v76 = (uint64_t)v82;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v82, 1, 1, v75);
    *((void *)&v114 + 1) = v73;
    *(void *)&long long v115 = &off_10074D320;
    v113[0] = v74;
    sub_1000145EC((uint64_t)v113, (uint64_t)v110);
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v32;
    sub_100038ED8(v110, v77 + 24);
    *(void *)(v77 + 64) = v84;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_10059DBB0(1, v71, (uint64_t (*)(uint64_t))sub_100051174, v77, v83, 0, v76);
    swift_release();
    sub_100038CD8((uint64_t)v113);
    swift_release();
    sub_10003B6F8(v76, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v71, &qword_100786EF0);
    sub_1002E2274(v72, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002E0968(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v54 = (uint64_t)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v52 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = REMRemindersListDataView.ListsSectionsModel.completedRemindersCount.getter();
  uint64_t v19 = v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_completedRemindersCount;
  *(void *)uint64_t v19 = v18;
  *(unsigned char *)(v19 + 8) = v20 & 1;
  sub_1002DFA24((uint64_t)v17);
  uint64_t v21 = *(int *)(v15 + 64);
  uint64_t v53 = v17;
  if (v17[v21] == 2)
  {
    uint64_t v50 = v15;
    uint64_t v51 = a1;
    uint64_t v22 = REMRemindersListDataView.ListsSectionsModel.lists.getter();
    v56[0] = _swiftEmptyArrayStorage;
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v47 = a2;
      uint64_t v48 = v8;
      uint64_t v49 = v2;
      uint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v12 + 16);
      uint64_t v25 = v12 + 16;
      uint64_t v24 = v26;
      unint64_t v27 = (*(unsigned __int8 *)(v25 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 64);
      uint64_t v46 = v22;
      unint64_t v28 = v22 + v27;
      uint64_t v29 = *(void *)(v25 + 56);
      do
      {
        v24(v14, v28, v11);
        uint64_t v30 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
        (*(void (**)(char *, uint64_t))(v25 - 8))(v14, v11);
        sub_100569FE8(v30);
        v28 += v29;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)v56[0];
      uint64_t v8 = v48;
      uint64_t v3 = v49;
      a2 = v47;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v31 = _swiftEmptyArrayStorage;
    }
    type metadata accessor for TTRRemindersListViewModelSourceSectionsContext();
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = swift_retain();
    *(void *)(v3 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance) = sub_1000D59C8(v34, v31, 0, 0, 1, &_swiftEmptySetSingleton, v33);
    uint64_t v32 = (uint64_t)v53;
    uint64_t v15 = v50;
  }
  else
  {
    *(void *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance) = 0;
    uint64_t v32 = (uint64_t)v53;
  }
  swift_release();
  uint64_t v35 = REMRemindersListDataView.ListsSectionsModel.lists.getter();
  swift_retain();
  unint64_t v36 = sub_1002E1E34(v35, v3);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v37 = v54;
  sub_1002E220C(v32, v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v37, 0, 1, v15);
  uint64_t v38 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v8, 1, 1, v40);
  v56[3] = v38;
  v56[4] = &off_10074D320;
  v56[0] = v39;
  sub_1000145EC((uint64_t)v56, (uint64_t)v55);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v36;
  sub_100038ED8(v55, v41 + 24);
  *(void *)(v41 + 64) = v3;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_10059DBB0(1, v37, (uint64_t (*)(uint64_t))sub_1000D6788, v41, a2, 0, (uint64_t)v8);
  swift_release();
  sub_100038CD8((uint64_t)v56);
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)v8, (uint64_t *)&unk_100788DC0);
  sub_10003B6F8(v37, &qword_100786EF0);
  swift_release();
  uint64_t v42 = v3 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v43 = *(void *)(v42 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 104))(2, ObjectType, v43);
    swift_unknownObjectRelease();
  }
  return sub_1002E2274(v32, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

uint64_t sub_1002E0ED4@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v63 = a3;
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v47 = v4;
  __chkstk_darwin(v4);
  uint64_t v45 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v44);
  uint64_t v43 = (uint64_t *)((char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_10078B5D8);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
  uint64_t v15 = *(void *)(v14 - 8);
  double v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *(int *)(v11 + 56);
  char v20 = &v13[v19];
  uint64_t v21 = *(void *)a1;
  (*(void (**)(char *, char *, uint64_t, double))(v15 + 16))(v20, &a1[v19], v14, v16);
  uint64_t v48 = v15;
  uint64_t v49 = v14;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
  uint64_t v22 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listColor.getter();
  type metadata accessor for TTRListColors();
  static TTRListColors.color(for:)();
  long long v41 = v58[1];
  long long v42 = v58[0];
  uint64_t v23 = v59;
  uint64_t v24 = v60;
  char v25 = v61;

  uint64_t v26 = (uint64_t)v9;
  *(void *)&long long v51 = REMRemindersListDataView.ListsSectionsModel.List.listName.getter();
  *((void *)&v51 + 1) = v27;
  if (v21) {
    char v28 = 3;
  }
  else {
    char v28 = 2;
  }
  long long v52 = v42;
  long long v53 = v41;
  *(void *)&long long v54 = v23;
  *((void *)&v54 + 1) = v24;
  LOBYTE(v55[0]) = v25;
  *(_WORD *)((char *)v55 + 1) = 0;
  BYTE3(v55[0]) = 0;
  BYTE4(v55[0]) = v28;
  *(_OWORD *)((char *)v55 + 8) = 0u;
  *(_OWORD *)((char *)&v55[1] + 8) = 0u;
  *(_OWORD *)((char *)&v55[2] + 8) = 0u;
  WORD4(v55[3]) = 255;
  sub_1000D5984((uint64_t)v58, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
  *uint64_t v43 = REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
  swift_storeEnumTagMultiPayload();
  v56[4] = v55[0];
  void v56[5] = v55[1];
  v57[0] = v55[2];
  *(_OWORD *)((char *)v57 + 10) = *(_OWORD *)((char *)&v55[2] + 10);
  v56[0] = v51;
  v56[1] = v52;
  v56[2] = v53;
  v56[3] = v54;
  TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v56);
  sub_100028C3C((uint64_t)v56, (uint64_t)v62, (uint64_t *)&unk_10079CA00);
  TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
  sub_100050EC4((uint64_t)&v51);
  uint64_t v29 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
  uint64_t v30 = v45;
  REMRemindersListDataView.ListsSectionsModel.List.listType.getter();
  uint64_t v31 = (*(uint64_t (**)(char *, uint64_t))(v46 + 88))(v30, v47);
  if (v31 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.regular(_:)
    || v31 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.customSmartList(_:))
  {
    uint64_t v32 = v50;
LABEL_11:
    __chkstk_darwin(v31);
    *((void *)&v41 - 4) = v18;
    *((void *)&v41 - 3) = v58;
    *((void *)&v41 - 2) = v32;
    uint64_t v38 = sub_1000D60EC(v29, (void (*)(void, char *))sub_1002E2198, (uint64_t)(&v41 - 3));
    sub_10005102C((uint64_t)&v51);
    swift_bridgeObjectRelease();
    sub_1000D5984((uint64_t)v58, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    uint64_t v39 = v63;
    sub_1002E21A4(v26, v63, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    *(void *)(v39 + *(int *)(type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0) + 20)) = v38;
    return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v18, v49);
  }
  uint64_t v32 = v50;
  if (v31 == enum case for REMRemindersListDataView.ListsSectionsModel.List.ListType.grocery(_:))
  {
    id v33 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    uint64_t v34 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
    char v35 = TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();

    if (v35)
    {
      uint64_t v36 = *(void *)(v32 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance);
      if (v36)
      {
        swift_retain();
        swift_bridgeObjectRelease();
        uint64_t v37 = REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
        uint64_t v29 = sub_1000D5B4C(v37, v36);
        swift_bridgeObjectRelease();
        uint64_t v31 = swift_release();
      }
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1002E1480@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v55 = a5;
  uint64_t v56 = a2;
  uint64_t v39 = a1;
  uint64_t v53 = a4;
  sub_1000D67A4(a4, (uint64_t)v80);
  uint64_t v46 = v80[0];
  uint64_t v47 = v80[1];
  uint64_t v48 = v80[2];
  uint64_t v49 = v80[3];
  uint64_t v50 = v80[4];
  uint64_t v51 = v80[5];
  int v52 = v81;
  uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v40);
  long long v41 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v11 - 8);
  uint64_t v54 = (uint64_t)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v38 = a3;
  double v16 = (void *)REMRemindersListDataView.ListsSectionsModel.List.listColor.getter();
  type metadata accessor for TTRListColors();
  static TTRListColors.color(for:)();
  uint64_t v17 = v78[0];
  uint64_t v18 = v78[1];
  uint64_t v42 = v78[2];
  uint64_t v43 = v78[3];
  uint64_t v44 = v78[4];
  uint64_t v45 = v78[5];
  int v19 = v79;

  REMRemindersListDataView.SectionLite.type.getter();
  int v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v8 + 88))(v10, v7);
  if (v20 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v8 + 96))(v10, v7);
    uint64_t v21 = *v10;
    uint64_t v22 = v10[1];
    unsigned __int8 v23 = v19;
    unint64_t v24 = v10[2];
    swift_bridgeObjectRelease();
    if (v39) {
      char v25 = 3;
    }
    else {
      char v25 = 2;
    }
    uint64_t *v41 = v21;
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = v22;
    unint64_t v60 = v24;
    uint64_t v61 = v46;
    uint64_t v62 = v47;
    uint64_t v63 = v48;
    uint64_t v64 = v49;
    uint64_t v65 = v50;
    uint64_t v66 = v51;
    char v67 = v52;
    LOWORD(v68) = 258;
    BYTE2(v68) = 0;
    HIBYTE(v68) = v25;
    __int16 v69 = v57;
    char v70 = v58;
    uint64_t v71 = v17;
    uint64_t v72 = v18;
    uint64_t v73 = v42;
    uint64_t v74 = v43;
    uint64_t v75 = v44;
    uint64_t v76 = v45;
    __int16 v77 = v23;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v59);
    sub_100028C3C((uint64_t)&v59, (uint64_t)v82, (uint64_t *)&unk_10079CA00);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    sub_1000D5984((uint64_t)v78, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    sub_1000D5984(v53, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    goto LABEL_8;
  }
  uint64_t v36 = v18;
  int v37 = v19;
  uint64_t v26 = v41;
  uint64_t v39 = v15;
  uint64_t v28 = v46;
  uint64_t v27 = v47;
  uint64_t v29 = v53;
  if (v20 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
    swift_bridgeObjectRelease();
    sub_1000D5984((uint64_t)v78, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    sub_1000D5984(v29, (void (*)(void, void, void, void, void, void, void))sub_10003BED8);
    *uint64_t v26 = REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
    swift_storeEnumTagMultiPayload();
    uint64_t v59 = 0;
    unint64_t v60 = 0xE000000000000000;
    uint64_t v61 = v28;
    uint64_t v62 = v27;
    uint64_t v63 = v48;
    uint64_t v64 = v49;
    uint64_t v65 = v50;
    uint64_t v66 = v51;
    char v67 = v52;
    int v68 = 50331906;
    __int16 v69 = v57;
    char v70 = v58;
    uint64_t v71 = v17;
    uint64_t v72 = v36;
    uint64_t v73 = v42;
    uint64_t v74 = v43;
    uint64_t v75 = v44;
    uint64_t v76 = v45;
    __int16 v77 = v37;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)&v59);
    sub_100028C3C((uint64_t)&v59, (uint64_t)v82, (uint64_t *)&unk_10079CA00);
    uint64_t v15 = v39;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
LABEL_8:
    uint64_t v30 = v54;
    sub_1002E220C((uint64_t)v15, v54, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v31 = REMRemindersListDataView.SectionLite.reminders.getter();
    sub_1000D5984((uint64_t)v78, (void (*)(void, void, void, void, void, void, void))sub_10003B9C0);
    sub_1002E2274((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v32 = v30;
    uint64_t v33 = v55;
    sub_1002E21A4(v32, v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(void *)(v33 + *(int *)(result + 20)) = v31;
    *(unsigned char *)(v33 + *(int *)(result + 24)) = 0;
    return result;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

double sub_1002E19FC@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance))
  {
    swift_retain();
    id v5 = sub_1000D2454(a1);
    swift_release();
    if (v5)
    {
      uint64_t v6 = *(void *)(v2
                     + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_allRemindersDataModelSource
                     + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = *(uint64_t (**)(id, uint64_t, uint64_t))(v6 + 16);
      swift_unknownObjectRetain();
      uint64_t v9 = v8(v5, ObjectType, v6);
      swift_unknownObjectRelease();
      if (v9)
      {
        *(void *)(a2 + 24) = &type metadata for TTRShowRemindersInListDragAndDropREMListTarget;
        *(void *)(a2 + 32) = &off_100736DC0;

        *(void *)a2 = v9;
        return result;
      }
    }
  }
  *(void *)(a2 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

void *sub_1002E1AF4()
{
  return sub_1002E1C64();
}

uint64_t sub_1002E1B00(uint64_t a1, void *a2)
{
  return sub_1002E1B9C(a2);
}

uint64_t sub_1002E1B08(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(v2 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance)) {
    return 0;
  }
  swift_retain();
  uint64_t v4 = (void *)sub_100421E44((uint64_t)_swiftEmptyArrayStorage);
  swift_retain();
  uint64_t v5 = sub_100230EF8(v4, a2);
  swift_release_n();
  return v5;
}

uint64_t sub_1002E1B9C(void *a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders34TTRShowAllRemindersViewModelSource_sectionsContextInstance);
  if (!v2) {
    return 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v2 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v7(ObjectType, v5);
    swift_unknownObjectRelease();
    id v8 = a1;
    uint64_t Strong = TTRSection.init(with:store:)();
    swift_release();
  }
  return Strong;
}

void *sub_1002E1C64()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  id v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1002E2274((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      id v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_1002E21A4((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      id v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1002E2274((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

void *sub_1002E1E34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v41 = a2;
  uint64_t v5 = type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer(0);
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v42 = (uint64_t)v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_10003B754(&qword_10078B5D8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v38 = (void *)((char *)v30 - v9);
  __chkstk_darwin(v10);
  id v12 = (char *)v30 - v11;
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1004D3A5C(0, 0, 0);
  uint64_t v13 = v43;
  uint64_t v14 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v36 = v14;
  v30[1] = a1;
  if (v14)
  {
    uint64_t v15 = 0;
    uint64_t v35 = type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
    uint64_t v16 = *(void *)(v35 - 8);
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
    uint64_t v33 = v16 + 16;
    uint64_t v34 = v17;
    uint64_t v18 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v31 = *(void *)(v16 + 72);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v16 + 32);
    uint64_t v19 = v42;
    uint64_t v20 = v35;
    while (1)
    {
      uint64_t v21 = v40;
      uint64_t v22 = &v39[*(int *)(v40 + 48)];
      v34(v22, v18, v20);
      uint64_t v23 = *(int *)(v21 + 48);
      uint64_t v24 = (uint64_t)v38;
      char v25 = (char *)v38 + v23;
      *uint64_t v38 = v15;
      (*v32)(v25, v22, v20);
      sub_100028C3C(v24, (uint64_t)v12, &qword_10078B5D8);
      sub_1002E0ED4(v12, v41, v19);
      sub_10003B6F8((uint64_t)v12, &qword_10078B5D8);
      if (v3) {
        break;
      }
      uint64_t v13 = v43;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3A5C(0, v13[2] + 1, 1);
        uint64_t v13 = v43;
      }
      unint64_t v27 = v13[2];
      unint64_t v26 = v13[3];
      if (v27 >= v26 >> 1)
      {
        sub_1004D3A5C(v26 > 1, v27 + 1, 1);
        uint64_t v13 = v43;
      }
      ++v15;
      v13[2] = v27 + 1;
      uint64_t v28 = (uint64_t)v13
          + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80))
          + *(void *)(v37 + 72) * v27;
      uint64_t v19 = v42;
      sub_1002E21A4(v42, v28, type metadata accessor for TTRRemindersListTreeViewModel.SectionsContainer);
      v18 += v31;
      if (v36 == v15) {
        goto LABEL_9;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t sub_1002E2198@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1002E1480(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1002E21A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002E220C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002E2274(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002E22D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002E230C@<X0>(void *a1@<X8>)
{
  return sub_1002DDF94(*(uint64_t (**)(void))(v1 + 16), a1);
}

uint64_t sub_1002E2314@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v86 = a4;
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  __int16 v77 = (char *)&v71 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v74 = (char *)&v71 - v9;
  uint64_t v10 = type metadata accessor for TTRAdjustedIndexPath();
  __chkstk_darwin(v10 - 8);
  uint64_t v75 = (char *)&v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRUnadjustedIndexPath();
  __chkstk_darwin(v12 - 8);
  uint64_t v76 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v14 - 8);
  uint64_t v80 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v78 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v81 = (uint64_t)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_10003B754(&qword_100798520);
  __chkstk_darwin(v17 - 8);
  uint64_t v83 = (uint64_t)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v71 - v20;
  uint64_t v22 = sub_10003B754(&qword_100798528);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v73 = (uint64_t)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v27 = (char *)&v71 - v26;
  uint64_t v28 = type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput(0);
  double v29 = __chkstk_darwin(v28);
  uint64_t v31 = (char *)&v71 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v6;
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, double))(v6 + 16);
  uint64_t v85 = a1;
  v32(v31, a1, v5, v29);
  ((void (*)(char *, uint64_t, uint64_t))v32)(&v31[*(int *)(v28 + 20)], v94, v5);
  uint64_t v33 = *(int *)(v28 + 24);
  id v91 = v31;
  uint64_t v92 = v5;
  uint64_t v89 = (void (*)(unint64_t, uint64_t, uint64_t))v32;
  ((void (*)(char *, uint64_t, uint64_t))v32)(&v31[v33], v93, v5);
  uint64_t v34 = (uint64_t *)(v87
                  + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess();
  uint64_t v88 = v34;
  uint64_t v35 = *v34;
  uint64_t v90 = v23;
  uint64_t v84 = v22;
  if (!v35)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v21, 1, 1, v22);
    goto LABEL_8;
  }
  uint64_t v36 = v35 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem;
  swift_beginAccess();
  sub_10003B694(v36, (uint64_t)v21, &qword_100798520);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
LABEL_8:
    sub_10003B6F8((uint64_t)v21, &qword_100798520);
    uint64_t v42 = v85;
    unint64_t v47 = v86;
    uint64_t v49 = (uint64_t)v91;
    uint64_t v45 = v92;
    uint64_t v50 = v94;
    goto LABEL_10;
  }
  uint64_t v37 = *(int *)(v22 + 48);
  uint64_t v38 = &v27[v37];
  uint64_t v39 = &v21[v37];
  sub_1002E4B3C((uint64_t)v21, (uint64_t)v27, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v82 + 32);
  v72(v38, v39, v92);
  uint64_t v40 = (uint64_t)v91;
  char v41 = static IndexPath.== infix(_:_:)();
  uint64_t v42 = v85;
  if (v41 & 1) != 0 && (static IndexPath.== infix(_:_:)() & 1) != 0 && (static IndexPath.== infix(_:_:)())
  {
    uint64_t v43 = v73;
    uint64_t v44 = (char *)(v73 + *(int *)(v84 + 48));
    sub_1002E4B3C((uint64_t)v27, v73, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    uint64_t v45 = v92;
    uint64_t v46 = (void (*)(uint64_t, uint64_t, uint64_t))v72;
    v72(v44, v38, v92);
    unint64_t v47 = v86;
    v46(v86, (uint64_t)v44, v45);
    sub_1002E4BA4(v43, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    uint64_t v48 = v89;
    uint64_t v49 = v40;
    goto LABEL_18;
  }
  sub_10003B6F8((uint64_t)v27, &qword_100798528);
  unint64_t v47 = v86;
  uint64_t v45 = v92;
  uint64_t v50 = v94;
  uint64_t v49 = v40;
LABEL_10:
  if (!swift_unknownObjectWeakLoadStrong())
  {
LABEL_13:
    uint64_t v48 = v89;
    v89(v47, v50, v45);
    goto LABEL_18;
  }
  uint64_t v51 = (uint64_t)v80;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v51, 1, v79) == 1)
  {
    swift_unknownObjectRelease();
    sub_10003B6F8(v51, (uint64_t *)&unk_10078E360);
    goto LABEL_13;
  }
  sub_1002E4B3C(v51, v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t v48 = v89;
  v89((unint64_t)v74, v93, v45);
  uint64_t v52 = (uint64_t)v75;
  TTRAdjustedIndexPath.init(_:)();
  sub_10003B754((uint64_t *)&unk_100798530);
  uint64_t v53 = v82;
  unint64_t v54 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_10066C6F0;
  v48(v55 + v54, v42, v45);
  uint64_t v56 = (uint64_t)v76;
  TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)();
  swift_bridgeObjectRelease();
  sub_1002E4BA4(v52, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
  uint64_t v57 = IndexPath.item.getter();
  uint64_t v58 = v81;
  sub_1004474FC(v81, v57);
  LOBYTE(v54) = v59;
  swift_unknownObjectRelease();
  sub_1002E4BA4(v56, (uint64_t (*)(void))&type metadata accessor for TTRUnadjustedIndexPath);
  uint64_t v49 = (uint64_t)v91;
  sub_1002E4BA4(v58, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if (v54) {
    uint64_t v60 = v93;
  }
  else {
    uint64_t v60 = v94;
  }
  uint64_t v61 = v77;
  v48((unint64_t)v77, v60, v45);
  (*(void (**)(unint64_t, char *, uint64_t))(v53 + 32))(v47, v61, v45);
LABEL_18:
  uint64_t v62 = v88;
  swift_beginAccess();
  uint64_t v63 = *v62;
  uint64_t v64 = v90;
  if (*v62)
  {
    swift_endAccess();
    uint64_t v65 = v84;
    uint64_t v66 = v47;
    uint64_t v67 = v83;
    unint64_t v68 = v83 + *(int *)(v84 + 48);
    sub_1002E4B3C(v49, v83, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    v48(v68, v66, v45);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v67, 0, 1, v65);
    uint64_t v69 = v63 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_lastTargetIndexPathForMoveOfItem;
    swift_beginAccess();
    swift_retain();
    sub_1002E4AD4(v67, v69);
    swift_endAccess();
    return swift_release();
  }
  else
  {
    sub_1002E4BA4(v49, type metadata accessor for TTRIRemindersBoardColumnReorderingContext.TargetIndexPathForMoveOfItemInput);
    return swift_endAccess();
  }
}

uint64_t sub_1002E2CC0(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
  swift_retain();
  if ((v4 == 0) == (a1 != 0) && swift_unknownObjectWeakLoadStrong())
  {
    swift_retain();
    TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleColumnReorderingActiveStateChange(_:)(a1 != 0);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  return swift_release();
}

id sub_1002E2DB4@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100798580);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DragItemUserInfo(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *a1;
  sub_1002E2FDC((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100798580);
    uint64_t v12 = sub_10003B754(&qword_100798570);
    return (id)(*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a2, 1, 1, v12);
  }
  else
  {
    sub_1002E4B3C((uint64_t)v6, (uint64_t)v10, type metadata accessor for DragItemUserInfo);
    uint64_t v14 = sub_10003B754(&qword_100798570);
    uint64_t v15 = (uint64_t)a2 + *(int *)(v14 + 48);
    *a2 = v11;
    sub_1002E4B3C((uint64_t)v10, v15, type metadata accessor for DragItemUserInfo);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 0, 1, v14);
    return v11;
  }
}

uint64_t sub_1002E2FDC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100798580);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DragItemUserInfo(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785440 != -1) {
    swift_once();
  }
  v11[1] = qword_100798440;
  v11[2] = *(void *)algn_100798448;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  UIDragItem.localObject<A>(ofType:forKey:)();
  sub_100055AE8((uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100798580);
LABEL_8:
    uint64_t v9 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v9, 1, v5);
  }
  sub_1002E4B3C((uint64_t)v4, (uint64_t)v8, type metadata accessor for DragItemUserInfo);
  if ((static UUID.== infix(_:_:)() & 1) == 0)
  {
    sub_1002E4BA4((uint64_t)v8, type metadata accessor for DragItemUserInfo);
    goto LABEL_8;
  }
  sub_1002E4B3C((uint64_t)v8, a1, type metadata accessor for DragItemUserInfo);
  uint64_t v9 = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v9, 1, v5);
}

BOOL sub_1002E322C(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess();
  uint64_t v15 = *v14;
  if (!v15) {
    return 0;
  }
  uint64_t v16 = OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState;
  int v17 = *(unsigned __int8 *)(v15 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState);
  int v18 = sub_10057E62C(*(unsigned char *)(v15+ OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState), a1);
  if (v18 == 9) {
    return v17 == a1;
  }
  *(unsigned char *)(v15 + v16) = a1;
  switch(v18)
  {
    case 1:
      swift_retain();
      sub_1002E37C8(0, v15);
      sub_1000FF3FC(v15 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnID, (uint64_t)v6);
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
      sub_1002E4BA4((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_10003B6F8((uint64_t)v9, &qword_10078E8F0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
        uint64_t v23 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        [v23 beginInteractiveMovementForItemAtIndexPath:isa];

        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
        *(unsigned char *)(v15
                 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) = 1;
      }
      break;
    case 2:
    case 5:
      swift_retain();
      goto LABEL_13;
    case 3:
    case 6:
    case 7:
    case 8:
      swift_retain();
      char v20 = 1;
      goto LABEL_14;
    case 4:
      uint64_t v21 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
      swift_retain();
      [v21 endInteractiveMovement];
      *(unsigned char *)(v15
               + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) = 0;
LABEL_13:
      char v20 = 0;
LABEL_14:
      sub_1002E363C(v20, v15, v2);
      break;
    default:
      if (!*(void *)(*(void *)(v15 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column)
                      + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator))
      {
        __break(1u);
        JUMPOUT(0x1002E3618);
      }
      swift_retain();
      swift_unknownObjectRetain();
      swift_retain();
      sub_100099988();
      swift_unknownObjectRelease();
      swift_release();
      *(unsigned char *)(v15
               + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted) = 1;
      break;
  }
  uint64_t v22 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_debugOverlayView);
  if (v22) {
    [v22 removeFromSuperview];
  }
  swift_release();
  return 1;
}

void sub_1002E363C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted;
  if (*(unsigned char *)(a2
                + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_columnLiftingAnimationStarted) == 1)
  {
    uint64_t v7 = *(void *)(*(void *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column)
                   + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator);
    if (!v7)
    {
      __break(1u);
      return;
    }
    sub_1002E4EA4(v7 + 32, (uint64_t)v9);
    sub_1002E4EA4((uint64_t)v9, (uint64_t)__src);
    if (sub_10009BC24((uint64_t)__src) != 1)
    {
      memcpy(__dst, __src, sizeof(__dst));
      swift_unknownObjectRetain();
      swift_retain();
      sub_1002E4F0C((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009DDB8);
      sub_10009A804(__dst);
      sub_1002E4F0C((uint64_t)v9, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_10009DC08);
      swift_unknownObjectRelease();
      swift_release();
    }
    *(unsigned char *)(a2 + v6) = 0;
  }
  uint64_t v8 = OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted;
  if (*(unsigned char *)(a2
                + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) == 1)
  {
    [*(id *)(a3 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView) cancelInteractiveMovement];
    *(unsigned char *)(a2 + v8) = 0;
  }
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) == 1) {
    sub_1002E37C8(1, a2);
  }
  if (a1) {
    sub_1002E2CC0(0);
  }
}

void sub_1002E37C8(char a1, uint64_t a2)
{
  if (*(unsigned char *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) == (a1 & 1))
  {
    uint64_t v3 = a2;
    LOBYTE(v4) = a1;
    *(unsigned char *)(a2 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollGestureDisabled) = (a1 & 1) == 0;
    uint64_t v5 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
    id v6 = [v5 gestureRecognizers];
    if (v6)
    {
      sub_1000368FC(0, (unint64_t *)&unk_100798540);
      unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v7 >> 62) {
        goto LABEL_19;
      }
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
      {
        char v38 = v4;
        uint64_t v39 = v5;
        uint64_t v40 = v3;
        uint64_t v5 = (void *)(v7 & 0xC000000000000001);
        uint64_t v9 = 4;
        while (1)
        {
          uint64_t v4 = v9 - 4;
          id v10 = v5 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v7 + 8 * v9);
          id v6 = v10;
          uint64_t v3 = v9 - 3;
          if (__OFADD__(v4, 1)) {
            break;
          }
          swift_getObjectType();
          id v11 = [(id)swift_getObjCClassFromMetadata() description];
          uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v14 = v13;

          if (v12 == 0xD000000000000022 && v14 == 0x80000001006B4EF0)
          {
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            goto LABEL_17;
          }
          char v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v15)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_17;
          }

          ++v9;
          if (v3 == v8)
          {
            swift_bridgeObjectRelease_n();
            id v6 = 0;
LABEL_17:
            uint64_t v5 = v39;
            uint64_t v3 = v40;
            LOBYTE(v4) = v38;
            goto LABEL_21;
          }
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease_n();
      id v6 = 0;
    }
LABEL_21:
    [v6 setEnabled:v4 & 1];
    if (v4)
    {
      uint64_t v16 = (double *)(v3
                     + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore);
      if ((*(unsigned char *)(v3
                     + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore
                     + 32) & 1) != 0)
      {
LABEL_30:
        [v5 _autoScrollTouchInsets];
        uint64_t v30 = v29;
        uint64_t v32 = v31;
        uint64_t v34 = v33;
        uint64_t v36 = v35;

        uint64_t v37 = v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo;
        *(void *)(v37 + 24) = v30;
        *(void *)(v37 + 32) = v32;
        *(void *)(v37 + 40) = v34;
        *(void *)(v37 + 48) = v36;
        *(unsigned char *)(v37 + 56) = 0;
        return;
      }
      double v17 = v16[2];
      double v18 = v16[3];
      double v19 = *v16;
      double v20 = v16[1];
    }
    else
    {
      [v5 _autoScrollTouchInsets];
      double v22 = v21;
      double v24 = v23;
      double v25 = *(double *)(v3
                      + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell)
          - *(double *)(v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter);
      double v26 = -v25;
      double v27 = 0.0;
      if (v25 > 0.0) {
        double v26 = 0.0;
      }
      if (v25 >= 0.0) {
        double v27 = *(double *)(v3
      }
                        + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell)
            - *(double *)(v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter);
      double v20 = v22 - v26;
      double v18 = v24 - v27;
      uint64_t v28 = v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_autoScrollTouchInsetsToRestore;
      *(double *)uint64_t v28 = v19;
      *(double *)(v28 + 8) = v22;
      *(double *)(v28 + 16) = v17;
      *(double *)(v28 + 24) = v24;
      *(unsigned char *)(v28 + 32) = 0;
    }
    [v5 _setAutoScrollTouchInsets:v19, v20, v17, v18];
    goto LABEL_30;
  }
}

void sub_1002E3B14(void *a1)
{
  uint64_t v3 = sub_10003B754(&qword_100798550);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (void **)((char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100798558);
  __chkstk_darwin(v6);
  uint64_t v8 = (void **)((char *)aBlock - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess();
  uint64_t v10 = *v9;
  if (v10
    && (*(unsigned char *)(v10 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_systemPreviewSetOnDragItem) & 1) == 0)
  {
    *(unsigned char *)(v10 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_systemPreviewSetOnDragItem) = 1;
    swift_retain();
    id v11 = [a1 items];
    sub_1000368FC(0, (unint64_t *)&qword_100791B50);
    uint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    aBlock[0] = v12;
    __chkstk_darwin(v13);
    aBlock[-2] = v1;
    sub_10003B754(&qword_100798568);
    uint64_t v14 = sub_10003B754(&qword_100798570);
    sub_1002E5DC4();
    Sequence.firstMap<A>(_:)();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14) == 1)
    {
      sub_10003B6F8((uint64_t)v5, &qword_100798550);
    }
    else
    {
      uint64_t v15 = (uint64_t)v5 + *(int *)(v14 + 48);
      uint64_t v16 = (uint64_t)v8 + *(int *)(v6 + 48);
      *uint64_t v8 = *v5;
      sub_1002E4B3C(v15, v16, type metadata accessor for DragItemUserInfo);
      double v17 = *v8;
      sub_1002E4BA4((uint64_t)v8 + *(int *)(v6 + 48), type metadata accessor for DragItemUserInfo);
      if (!*(void *)(*(void *)(v10 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_column)
                      + OBJC_IVAR____TtC9Reminders33TTRIBoardColumnCollectionViewCell_columnReorderingAnimator))
      {
        __break(1u);
        return;
      }
      swift_unknownObjectRetain();
      swift_retain();
      id v18 = sub_10009AA40();
      swift_unknownObjectRelease();
      swift_release();
      if (v18)
      {
        uint64_t v19 = swift_allocObject();
        *(void *)(v19 + 16) = v18;
        aBlock[4] = sub_1002E5E78;
        aBlock[5] = v19;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1001D08D4;
        aBlock[3] = &unk_1007426B0;
        double v20 = _Block_copy(aBlock);
        id v21 = v18;
        swift_release();
        [v17 setPreviewProvider:v20];
        _Block_release(v20);
        swift_release();

        return;
      }
    }
    swift_release();
  }
}

uint64_t sub_1002E3FCC()
{
  return type metadata accessor for TTRIRemindersBoardColumnReorderingController(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardColumnReorderingController(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007984A8);
}

uint64_t sub_1002E3FF4()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002E40AC(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100798580);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a1, (uint64_t)v4, (uint64_t *)&unk_100798580);
  uint64_t v5 = type metadata accessor for DragItemUserInfo(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100798580);
    long long v10 = 0u;
    long long v11 = 0u;
  }
  else
  {
    *((void *)&v11 + 1) = v5;
    uint64_t v6 = sub_1000394A8((uint64_t *)&v10);
    sub_1002E4B3C((uint64_t)v4, (uint64_t)v6, type metadata accessor for DragItemUserInfo);
  }
  if (qword_100785440 != -1) {
    swift_once();
  }
  v8[1] = qword_100798440;
  v8[2] = *(void *)algn_100798448;
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  UIDragItem.setLocalObject(_:forKey:)();
  sub_100055AE8((uint64_t)v9);
  return sub_10003B6F8((uint64_t)&v10, &qword_100788D60);
}

uint64_t sub_1002E4388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock();
  v4[9] = v5;
  v4[10] = *(void *)(v5 - 8);
  v4[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[12] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[13] = v7;
  v4[14] = v6;
  return _swift_task_switch(sub_1002E447C, v7, v6);
}

uint64_t sub_1002E447C()
{
  ContinuousClock.init()();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10079F3D0 + dword_10079F3D0);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  void *v1 = v0;
  v1[1] = sub_1002E4544;
  return v3(500000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1002E4544()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[10] + 8))(v2[11], v2[9]);
  uint64_t v3 = v2[14];
  uint64_t v4 = v2[13];
  if (v0) {
    uint64_t v5 = sub_1002E47B4;
  }
  else {
    uint64_t v5 = sub_1002E46CC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1002E46CC()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = (void *)(Strong
                  + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
    swift_beginAccess();
    if (*v3
      && *(unsigned char *)(*v3 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_currentState) == 2)
    {
      sub_1002E322C(6u);
    }
  }
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_1002E47B4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002E4AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100798520);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E4B3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002E4BA4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002E4C04()
{
  _StringGuts.grow(_:)(19);
  uint64_t result = swift_bridgeObjectRelease();
  qword_100798440 = 0xD00000000000003DLL;
  *(void *)algn_100798448 = 0x80000001006B4F40;
  return result;
}

BOOL sub_1002E4C68(void *a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
  [a1 locationInView:v2];
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  [v2 bounds];
  v8.CGFloat x = v4;
  v8.CGFloat y = v6;
  return CGRectContainsPoint(v9, v8);
}

uint64_t sub_1002E4CCC(void *a1, uint64_t a2)
{
  CGFloat v4 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  uint64_t result = swift_beginAccess();
  uint64_t v6 = *v4;
  if (v6)
  {
    if (*(unsigned char *)(v6
                  + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_collectionViewInteractiveMovementStarted) == 1)
    {
      uint64_t v7 = *(void **)(a2 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
      swift_retain();
      [a1 locationInView:v7];
      double v10 = sub_10009F174(v8, v9, *(double *)(v6+ OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_initiationTouchLocationInCell));
      double v12 = sub_1002E5D9C(v10, v11, *(double *)(v6 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_cellBoundsCenter));
      uint64_t v14 = v13;
      [v7 updateInteractiveMovementTargetPosition:];
      uint64_t v15 = v6 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo;
      *(double *)uint64_t v15 = v12;
      *(void *)(v15 + 8) = v14;
      *(unsigned char *)(v15 + 16) = 0;
      return swift_release();
    }
  }
  return result;
}

id sub_1002E4DD8(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = v2;
  UUID.init()();
  *(void *)&v6[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_debugOverlayView] = 0;
  *(void *)&v6[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext] = 0;
  *(void *)&v6[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView] = a1;
  *(void *)&v6[OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_dataSource] = a2;
  id v7 = a1;
  id v8 = a2;

  v10.receiver = v6;
  v10.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1002E4EA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100789158);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002E4F0C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v4 = *(_OWORD *)(a1 + 240);
  long long v5 = *(_OWORD *)(a1 + 256);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 272));
  return a1;
}

void *sub_1002E4F98(void *a1)
{
  id v63 = a1;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100798580);
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (char *)&v54 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v4 - 8);
  uint64_t v62 = (char *)&v54 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v61 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v8 = (char *)&v54 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v11 = (char *)&v54 - v10;
  uint64_t v12 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for IndexPath();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  id v21 = (char *)&v54 - v20;
  double v22 = (void *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_activeReorderingContext);
  swift_beginAccess();
  if (*v22) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v57 = v21;
  uint64_t v58 = v14;
  uint64_t v55 = v11;
  uint64_t v56 = v6;
  unint64_t v54 = v8;
  uint64_t v59 = v16;
  double v23 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
  [v63 locationInView:v23];
  id v24 = [v23 indexPathForItemAtPoint:];
  if (!v24)
  {
    uint64_t v27 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v58, 1, 1, v15);
    goto LABEL_7;
  }
  double v25 = v24;
  uint64_t v26 = v1;
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v27 = (uint64_t)v58;
  uint64_t v28 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
  uint64_t v29 = v18;
  uint64_t v30 = v59;
  uint64_t v31 = v15;
  v28(v58, v29, v15);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48))(v27, 1, v15) == 1)
  {
LABEL_7:
    uint64_t v34 = &qword_10078E8F0;
    uint64_t v35 = v27;
    goto LABEL_8;
  }
  uint64_t v32 = v57;
  v28(v57, (char *)v27, v15);
  uint64_t v33 = v62;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v33, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v15);
    uint64_t v34 = (uint64_t *)&unk_10078E360;
    uint64_t v35 = (uint64_t)v33;
LABEL_8:
    sub_10003B6F8(v35, v34);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v38 = (uint64_t)v33;
  uint64_t v39 = (uint64_t)v55;
  sub_1002E4B3C(v38, (uint64_t)v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_100437FB8(v39);
    char v41 = v40;
    swift_unknownObjectRelease();
    if (v41)
    {
      uint64_t v42 = (uint64_t)v54;
      sub_1000FF3FC(v39, (uint64_t)v54);
      uint64_t v43 = (objc_class *)type metadata accessor for TTRIRemindersBoardColumnDragItem();
      id v44 = objc_allocWithZone(v43);
      sub_1000FF3FC(v42, (uint64_t)v44 + OBJC_IVAR____TtC9Reminders32TTRIRemindersBoardColumnDragItem_columnID);
      v65.receiver = v44;
      v65.super_class = v43;
      id v45 = [super init];
      sub_1002E4BA4(v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      id v46 = [objc_allocWithZone((Class)NSItemProvider) initWithObject:v45];
      id v47 = [objc_allocWithZone((Class)UIDragItem) initWithItemProvider:v46];
      uint64_t v48 = v26 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_id;
      uint64_t v49 = type metadata accessor for UUID();
      uint64_t v50 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 16))(v60, v48, v49);
      uint64_t v51 = type metadata accessor for DragItemUserInfo(0);
      sub_1000FF3FC(v39, v50 + *(int *)(v51 + 20));
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
      sub_1002E40AC(v50);
      sub_10003B6F8(v50, (uint64_t *)&unk_100798580);
      aBlock[4] = variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager;
      aBlock[5] = 0;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_1001D08D4;
      aBlock[3] = &unk_100742728;
      uint64_t v52 = _Block_copy(aBlock);
      swift_release();
      [v47 setPreviewProvider:v52];
      _Block_release(v52);
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v53 = swift_allocObject();
      *(_OWORD *)(v53 + 16) = xmmword_10066D470;
      *(void *)(v53 + 32) = v47;
      aBlock[0] = v53;
      specialized Array._endMutation()();
      uint64_t v36 = aBlock[0];

      sub_1002E4BA4(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v31);
      return (void *)v36;
    }
  }
  sub_1002E4BA4(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v15);
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1002E56B0(void *a1)
{
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v3 - 8);
  uint64_t v57 = (uint64_t)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v55 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v59 = *(void *)(v8 - 8);
  uint64_t v60 = v8;
  __chkstk_darwin(v8);
  uint64_t v58 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_100798550);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (id *)((char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_100798558);
  __chkstk_darwin(v13);
  uint64_t v15 = (id *)((char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for DragItemUserInfo(0);
  double v17 = __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v56 = a1;
  id v20 = [a1 items:v17];
  sub_1000368FC(0, (unint64_t *)&qword_100791B50);
  uint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v62 = v21;
  uint64_t v61 = v1;
  sub_10003B754(&qword_100798568);
  uint64_t v22 = sub_10003B754(&qword_100798570);
  sub_1002E5DC4();
  Sequence.firstMap<A>(_:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v12, 1, v22) == 1)
  {
    double v23 = &qword_100798550;
    uint64_t v24 = (uint64_t)v12;
    return sub_10003B6F8(v24, v23);
  }
  uint64_t v25 = (uint64_t)v12 + *(int *)(v22 + 48);
  uint64_t v26 = (uint64_t)v15 + *(int *)(v13 + 48);
  *uint64_t v15 = *v12;
  sub_1002E4B3C(v25, v26, type metadata accessor for DragItemUserInfo);

  sub_1002E4B3C((uint64_t)v15 + *(int *)(v13 + 48), (uint64_t)v19, type metadata accessor for DragItemUserInfo);
  uint64_t v27 = (uint64_t)&v19[*(int *)(v16 + 20)];
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  uint64_t v29 = v59;
  uint64_t v28 = v60;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v7, 1, v60) == 1)
  {
    sub_1002E4BA4((uint64_t)v19, type metadata accessor for DragItemUserInfo);
    double v23 = &qword_10078E8F0;
    uint64_t v24 = (uint64_t)v7;
    return sub_10003B6F8(v24, v23);
  }
  uint64_t v55 = v19;
  uint64_t v31 = v58;
  uint64_t v32 = v28;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v58, v7, v28);
  uint64_t v33 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_collectionView);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v35 = [v33 cellForItemAtIndexPath:isa];

  if (!v35)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v32);
    return sub_1002E4BA4((uint64_t)v55, type metadata accessor for DragItemUserInfo);
  }
  Class v36 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v37 = [v33 cellForItemAtIndexPath:v36];

  if (!v37)
  {
    id v37 = v35;
LABEL_19:

    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v60);
    return sub_1002E4BA4((uint64_t)v55, type metadata accessor for DragItemUserInfo);
  }
  swift_getObjectType();
  uint64_t v38 = swift_conformsToProtocol2();
  if (v38) {
    uint64_t v39 = v38;
  }
  else {
    uint64_t v39 = 0;
  }
  if (v38) {
    uint64_t v40 = (uint64_t)v37;
  }
  else {
    uint64_t v40 = 0;
  }
  if (!v40)
  {

    uint64_t v31 = v58;
    goto LABEL_19;
  }
  uint64_t v41 = v57;
  sub_1000FF3FC(v27, v57);
  id v42 = v37;
  [v35 bounds];
  CGRect.center.getter();
  double v44 = v43;
  double v46 = v45;
  [v56 locationInView:v35];
  double v48 = v47;
  double v50 = v49;
  type metadata accessor for TTRIRemindersBoardColumnReorderingContext(0);
  swift_allocObject();
  uint64_t v51 = sub_10057D794(v41, v40, v39, v44, v46, v48, v50);
  uint64_t v52 = *(void **)(v51 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo + 64);
  *(void *)(v51 + OBJC_IVAR____TtC9Reminders41TTRIRemindersBoardColumnReorderingContext_debugInfo + 64) = v33;
  id v53 = v33;

  uint64_t v54 = swift_retain();
  sub_1002E2CC0(v54);
  sub_1002E322C(1u);

  swift_release();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v58, v60);
  return sub_1002E4BA4((uint64_t)v55, type metadata accessor for DragItemUserInfo);
}

id sub_1002E5CE8(void *a1)
{
  id result = (id)sub_1002E322C(3u);
  if (result)
  {
    swift_getObjectType();
    if (sub_1002E4C68(a1, v1))
    {
      sub_1002E4CCC(a1, v1);
    }
    else if (sub_1002E322C(4u))
    {
      sub_1002E3B14(a1);
    }
    id result = *(id *)(v1 + OBJC_IVAR____TtC9Reminders44TTRIRemindersBoardColumnReorderingController_debugOverlayView);
    if (result)
    {
      return [result removeFromSuperview];
    }
  }
  return result;
}

double sub_1002E5D9C(double a1, double a2, double a3)
{
  return a1 + a3;
}

id sub_1002E5DA8@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1002E2DB4(a1, a2);
}

unint64_t sub_1002E5DC4()
{
  unint64_t result = qword_100798578;
  if (!qword_100798578)
  {
    sub_100039710(&qword_100798568);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100798578);
  }
  return result;
}

uint64_t type metadata accessor for DragItemUserInfo(uint64_t a1)
{
  return sub_100030FD4(a1, qword_100798600);
}

uint64_t sub_1002E5E40()
{
  return _swift_deallocObject(v0, 24, 7);
}

void *sub_1002E5E78()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = v1;
  return v1;
}

uint64_t sub_1002E5EA0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002E5ED8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002E5F18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10000C2D4;
  return sub_1002E4388(a1, v4, v5, v6);
}

uint64_t *sub_1002E5FCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (void **)((char *)a1 + v8);
    uint64_t v10 = (void **)((char *)a2 + v8);
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v15 = *v10;
        *uint64_t v9 = *v10;
        id v16 = v15;
LABEL_22:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        double v17 = *v10;
        *uint64_t v9 = *v10;
        uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v19 = (void **)((char *)v9 + v18);
        id v20 = (void **)((char *)v10 + v18);
        uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v22 = *(void *)(v21 - 8);
        double v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v22 + 48);
        id v24 = v17;
        if (v23(v20, 1, v21))
        {
          uint64_t v25 = sub_10003B754(&qword_10078C890);
          memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v30 = *v20;
              *uint64_t v19 = *v20;
              id v31 = v30;
              goto LABEL_20;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v29 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v29 - 8) + 16))(v19, v20, v29);
LABEL_20:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v19, v20, *(void *)(v22 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        }
        goto LABEL_22;
      case 0:
        uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v27 = *v10;
            *uint64_t v9 = *v10;
            id v28 = v27;
            goto LABEL_15;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v26 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
LABEL_15:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
            break;
        }
        goto LABEL_22;
    }
    memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
  }
  return a1;
}

void sub_1002E66A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (id *)(a1 + *(int *)(a2 + 20));
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_11:
      id v10 = *v5;

      break;
    case 1:

      int v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_11;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_8:
            uint64_t v8 = type metadata accessor for Date();
            uint64_t v9 = *(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8);
            v9(v5, v8);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_11;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_8;
        default:
          return;
      }
  }
}

uint64_t sub_1002E68BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void **)(a1 + v7);
  uint64_t v9 = (void **)(a2 + v7);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v13 = *v9;
      *uint64_t v8 = *v9;
      id v14 = v13;
LABEL_20:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      uint64_t v15 = *v9;
      *uint64_t v8 = *v9;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      double v17 = (void **)((char *)v8 + v16);
      uint64_t v18 = (void **)((char *)v9 + v16);
      uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
      id v22 = v15;
      if (v21(v18, 1, v19))
      {
        uint64_t v23 = sub_10003B754(&qword_10078C890);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v28 = *v18;
            *double v17 = *v18;
            id v29 = v28;
            goto LABEL_18;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v27 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v17, v18, v27);
LABEL_18:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v17, v18, *(void *)(v20 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
      goto LABEL_20;
    case 0:
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v25 = *v9;
          *uint64_t v8 = *v9;
          id v26 = v25;
          goto LABEL_13;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v24 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v9, v24);
LABEL_13:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
      goto LABEL_20;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1002E6F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void **)(a1 + v7);
    uint64_t v9 = (void **)(a2 + v7);
    sub_1002E4BA4(a1 + v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        uint64_t v13 = *v9;
        *uint64_t v8 = *v9;
        id v14 = v13;
LABEL_21:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        uint64_t v15 = *v9;
        *uint64_t v8 = *v9;
        uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        double v17 = (void **)((char *)v8 + v16);
        uint64_t v18 = (void **)((char *)v9 + v16);
        uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v20 = *(void *)(v19 - 8);
        uint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
        id v22 = v15;
        if (v21(v18, 1, v19))
        {
          uint64_t v23 = sub_10003B754(&qword_10078C890);
          memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v28 = *v18;
              *double v17 = *v18;
              id v29 = v28;
              goto LABEL_19;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v27 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v17, v18, v27);
LABEL_19:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v17, v18, *(void *)(v20 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        }
        goto LABEL_21;
      case 0:
        uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v25 = *v9;
            *uint64_t v8 = *v9;
            id v26 = v25;
            goto LABEL_14;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v24 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v9, v24);
LABEL_14:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
            break;
        }
        goto LABEL_21;
    }
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1002E75F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    id v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10003B754(&qword_10078C890);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v14, v15, v20);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(v17 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
    goto LABEL_14;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
LABEL_14:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  return a1;
}

uint64_t sub_1002E7B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_1002E4BA4(a1 + v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_10003B754(&qword_10078C890);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v20 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v14, v15, v20);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(v17 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      goto LABEL_15;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v19 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
LABEL_15:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1002E8134(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002E8148);
}

uint64_t sub_1002E8148(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1002E8240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002E8254);
}

uint64_t sub_1002E8254(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t sub_1002E8358()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TTRRemindersListViewModel.ItemID();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

id sub_1002E8428@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  return sub_1002E5DA8(a1, a2);
}

void sub_1002E8468(uint64_t a1, int a2)
{
  int v41 = a2;
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v40[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_10003B754(&qword_100798718);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = &v40[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_10078E620);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  double v44 = &v40[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = &v40[-v16];
  __chkstk_darwin(v15);
  uint64_t v19 = &v40[-v18];
  uint64_t v46 = a1;
  sub_10003BA1C(a1, (uint64_t)&v40[-v18]);
  id v42 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56);
  v42(v19, 0, 1, v4);
  uint64_t v45 = v2;
  uint64_t v20 = v2 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList;
  swift_beginAccess();
  uint64_t v21 = (uint64_t)&v11[*(int *)(v9 + 56)];
  sub_10003B694((uint64_t)v19, (uint64_t)v11, (uint64_t *)&unk_10078E620);
  uint64_t v43 = v20;
  sub_10003B694(v20, v21, (uint64_t *)&unk_10078E620);
  id v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v22((uint64_t)v11, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10078E620);
    if (v22(v21, 1, v4) == 1)
    {
      sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_10078E620);
      return;
    }
  }
  else
  {
    sub_10003B694((uint64_t)v11, (uint64_t)v17, (uint64_t *)&unk_10078E620);
    if (v22(v21, 1, v4) != 1)
    {
      sub_10003BFF4(v21, (uint64_t)v7);
      char v39 = static TTRAccountsListsViewModel.PinnedList.__derived_enum_equals(_:_:)();
      sub_10003BF98((uint64_t)v7);
      sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10078E620);
      sub_10003BF98((uint64_t)v17);
      sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_10078E620);
      uint64_t v23 = v46;
      if (v39) {
        return;
      }
      goto LABEL_7;
    }
    sub_10003B6F8((uint64_t)v19, (uint64_t *)&unk_10078E620);
    sub_10003BF98((uint64_t)v17);
  }
  sub_10003B6F8((uint64_t)v11, &qword_100798718);
  uint64_t v23 = v46;
LABEL_7:
  uint64_t v24 = sub_10003C130();
  __chkstk_darwin(v24);
  *(void *)&v40[-16] = v23;
  uint64_t v25 = sub_1002F55EC((uint64_t (*)(id *))sub_1002EB8E8, (uint64_t)&v40[-32], (unint64_t)v24);
  swift_bridgeObjectRelease();
  if (v25)
  {
    sub_1000084E0(v41 & 1);
    id v26 = (objc_class *)type metadata accessor for TTRIPinnedListControl();
    v50.receiver = v25;
    v50.super_class = v26;
    unsigned int v27 = [super isSelected];
    v49.receiver = v25;
    v49.super_class = v26;
    [super setSelected:1];
    v48.receiver = v25;
    v48.super_class = v26;
    if (v27 != objc_msgSendSuper2(&v48, "isSelected"))
    {
      TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
      char v28 = TTRUserDefaults.animationSlowModeEnabled.getter();
      double v29 = 0.15;
      if (*((unsigned char *)v25 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor)) {
        double v29 = 0.25;
      }
      double v30 = 1.0;
      if (v28) {
        double v30 = 3.0;
      }
      double v31 = v30 * v29;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v25;
      id v33 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      aBlock[4] = sub_1002EB94C;
      aBlock[5] = v32;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10000AD88;
      aBlock[3] = &unk_100742A70;
      uint64_t v34 = _Block_copy(aBlock);
      id v35 = v25;
      swift_release();
      id v36 = [v33 initWithDuration:v34 controlPoint1:v31 controlPoint2:0.33, 0.0, 0.67, 1.0];
      _Block_release(v34);
      [v36 startAnimation];
    }
    id v37 = v44;
    sub_10003BA1C(v23, (uint64_t)v44);
    v42(v37, 0, 1, v4);
    uint64_t v38 = v43;
    swift_beginAccess();
    sub_10000A550((uint64_t)v37, v38, (uint64_t *)&unk_10078E620);
    swift_endAccess();
  }
}

unint64_t sub_1002E8A34()
{
  unint64_t result = (unint64_t)sub_10003C130();
  unint64_t v1 = result;
  if (result >> 62)
  {
    unint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = result;
    if (result)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v3 = 0;
        unint64_t v4 = v1 & 0xC000000000000001;
        uint64_t v5 = &selRef_setAxis_;
        do
        {
          if (v4) {
            id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v6 = *(id *)(v1 + 8 * v3 + 32);
          }
          id v7 = v6;
          uint64_t v8 = (objc_class *)type metadata accessor for TTRIPinnedListControl();
          v27.receiver = v7;
          v27.super_class = v8;
          if (objc_msgSendSuper2(&v27, v5[248]))
          {
            v26.receiver = v7;
            v26.super_class = v8;
            unsigned int v9 = [super v5[248]];
            v25.receiver = v7;
            v25.super_class = v8;
            [super setSelected:0];
            v24.receiver = v7;
            v24.super_class = v8;
            if (v9 != objc_msgSendSuper2(&v24, v5[248]))
            {
              TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
              char v10 = TTRUserDefaults.animationSlowModeEnabled.getter();
              double v11 = 0.15;
              if (*((unsigned char *)v7 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor)) {
                double v11 = 0.25;
              }
              if (v10) {
                double v12 = 3.0;
              }
              else {
                double v12 = 1.0;
              }
              double v13 = v12 * v11;
              uint64_t v14 = swift_allocObject();
              *(void *)(v14 + 16) = v7;
              id v15 = objc_allocWithZone((Class)UIViewPropertyAnimator);
              aBlock[4] = sub_1002EB94C;
              aBlock[5] = v14;
              id v22 = v15;
              aBlock[0] = _NSConcreteStackBlock;
              aBlock[1] = 1107296256;
              aBlock[2] = sub_10000AD88;
              aBlock[3] = &unk_100742A20;
              uint64_t v16 = _Block_copy(aBlock);
              unint64_t v17 = v1;
              uint64_t v18 = v2;
              uint64_t v19 = v5;
              unint64_t v20 = v4;
              id v21 = v7;
              swift_release();
              id v7 = [v22 initWithDuration:v16 controlPoint1:v13 controlPoint2:0.33, 0.0, 0.67, 1.0];
              _Block_release(v16);
              [v7 startAnimation];

              unint64_t v4 = v20;
              uint64_t v5 = v19;
              uint64_t v2 = v18;
              unint64_t v1 = v17;
            }
          }
          ++v3;
        }
        while (v2 != v3);
        return swift_bridgeObjectRelease();
      }
      return result;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v2) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002E8D40(void *a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_10003B754(&qword_100798700);
  __chkstk_darwin(v34);
  id v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_100798708);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  id v33 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  unint64_t v17 = (char *)&v31 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = *a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v20, 1, v8))
  {
    id v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v21(v19, 1, 1, v3);
  }
  else
  {
    sub_10003BA1C(v20, (uint64_t)v11);
    TTRAccountsListsViewModel.PinnedList.id.getter();
    sub_10003BF98((uint64_t)v11);
    id v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v21(v19, 0, 1, v3);
  }
  uint64_t v22 = v4;
  TTRAccountsListsViewModel.PinnedList.id.getter();
  v21(v17, 0, 1, v3);
  uint64_t v23 = (uint64_t)&v7[*(int *)(v34 + 48)];
  objc_super v24 = &qword_100798708;
  sub_10003B694((uint64_t)v19, (uint64_t)v7, &qword_100798708);
  sub_10003B694((uint64_t)v17, v23, &qword_100798708);
  objc_super v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (v25((uint64_t)v7, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_100798708);
    sub_10003B6F8((uint64_t)v19, &qword_100798708);
    if (v25(v23, 1, v3) == 1)
    {
      char v26 = -1;
    }
    else
    {
      objc_super v24 = &qword_100798700;
      char v26 = 0;
    }
  }
  else
  {
    uint64_t v27 = (uint64_t)v33;
    sub_10003B694((uint64_t)v7, (uint64_t)v33, &qword_100798708);
    if (v25(v23, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v17, &qword_100798708);
      sub_10003B6F8((uint64_t)v19, &qword_100798708);
      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v27, v3);
      char v26 = 0;
      objc_super v24 = &qword_100798700;
    }
    else
    {
      char v28 = v32;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 32))(v32, v23, v3);
      sub_1002EAA8C();
      char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
      double v29 = *(void (**)(char *, uint64_t))(v22 + 8);
      v29(v28, v3);
      objc_super v24 = &qword_100798708;
      sub_10003B6F8((uint64_t)v17, &qword_100798708);
      sub_10003B6F8((uint64_t)v19, &qword_100798708);
      v29(v33, v3);
    }
  }
  sub_10003B6F8((uint64_t)v7, v24);
  return v26 & 1;
}

uint64_t sub_1002E9200(uint64_t a1)
{
  uint64_t v75 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v72 = *(void (***)(void))(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v69 = (uint64_t)&v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UUID();
  unint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v68 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v79 = (uint64_t)&v67 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v67 - v13;
  __chkstk_darwin(v15);
  unint64_t v81 = (unint64_t)&v67 - v16;
  __chkstk_darwin(v17);
  uint64_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v67 - v18);
  uint64_t v19 = sub_10003B754(&qword_100798700);
  __chkstk_darwin(v19);
  uint64_t v80 = (uint64_t)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v67 - v22;
  uint64_t v82 = v1;
  uint64_t v24 = v1 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dropTargetPinnedListID;
  swift_beginAccess();
  uint64_t v74 = v19;
  uint64_t v25 = (uint64_t)&v23[*(int *)(v19 + 48)];
  sub_10003B694(v24, (uint64_t)v23, &qword_100798708);
  sub_10003B694(a1, v25, &qword_100798708);
  unint64_t v83 = v5;
  unint64_t v27 = v5 + 48;
  char v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  unsigned int v28 = v26(v23, 1, v4);
  uint64_t v84 = a1;
  uint64_t v76 = v9;
  uint64_t v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v26;
  if (v28 == 1)
  {
    uint64_t v29 = v4;
    if (v26((char *)v25, 1, v4) == 1) {
      return sub_10003B6F8((uint64_t)v23, &qword_100798708);
    }
    goto LABEL_6;
  }
  uint64_t v31 = v73;
  sub_10003B694((uint64_t)v23, (uint64_t)v73, &qword_100798708);
  if (v26((char *)v25, 1, v4) == 1)
  {
    (*(void (**)(unsigned int (**)(char *, uint64_t, uint64_t), uint64_t))(v83 + 8))(v31, v4);
    uint64_t v29 = v4;
LABEL_6:
    sub_10003B6F8((uint64_t)v23, &qword_100798700);
    uint64_t v32 = v85;
    goto LABEL_7;
  }
  unint64_t v63 = v83;
  uint64_t v64 = v68;
  (*(void (**)(void))(v83 + 32))();
  sub_1002EAA8C();
  objc_super v65 = v64;
  LOBYTE(v64) = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v63 + 8);
  v66(v65, v4);
  v66((char *)v31, v4);
  uint64_t result = sub_10003B6F8((uint64_t)v23, &qword_100798708);
  uint64_t v29 = v4;
  uint64_t v32 = v85;
  if (v64) {
    return result;
  }
LABEL_7:
  uint64_t v33 = v81;
  sub_10003B694(v84, v81, &qword_100798708);
  swift_beginAccess();
  sub_10000A550(v33, v24, &qword_100798708);
  swift_endAccess();
  unint64_t v34 = (unint64_t)sub_10003C130();
  unint64_t v35 = v34;
  if (v34 >> 62)
  {
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    if (result) {
      goto LABEL_9;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t result = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!result) {
    return swift_bridgeObjectRelease();
  }
LABEL_9:
  if (result >= 1)
  {
    uint64_t v36 = 0;
    unint64_t v81 = v35 & 0xC000000000000001;
    uint64_t v73 = (unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 6);
    uint64_t v72 = (void (**)(void))(v83 + 56);
    uint64_t v67 = (void (**)(char *, uint64_t, uint64_t))(v83 + 32);
    char v70 = (void (**)(char *, uint64_t))(v83 + 8);
    uint64_t v71 = v87;
    unint64_t v83 = v35;
    unint64_t v78 = v27;
    uint64_t v82 = result;
    __int16 v77 = v14;
    while (1)
    {
      uint64_t v46 = v81 ? (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v35 + 8 * v36 + 32);
      uint64_t v45 = v46;
      uint64_t v47 = v84;
      int v48 = v32(v84, 1, v29);
      sub_10003B694(v47, (uint64_t)v14, &qword_100798708);
      if (v48 == 1) {
        break;
      }
      objc_super v49 = &v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
      swift_beginAccess();
      if (!(*v73)(v49, 1, v75))
      {
        uint64_t v50 = (uint64_t)v49;
        uint64_t v51 = v69;
        sub_10003BA1C(v50, v69);
        TTRAccountsListsViewModel.PinnedList.id.getter();
        sub_10003BF98(v51);
      }
      uint64_t v52 = v79;
      (*v72)();
      uint64_t v53 = v80;
      uint64_t v54 = v80 + *(int *)(v74 + 48);
      sub_10003B694(v52, v80, &qword_100798708);
      uint64_t v14 = v77;
      sub_10003B694((uint64_t)v77, v54, &qword_100798708);
      uint64_t v55 = v85;
      if (v85(v53, 1, v29) == 1)
      {
        sub_10003B6F8(v52, &qword_100798708);
        sub_10003B6F8((uint64_t)v14, &qword_100798708);
        int v56 = v55(v54, 1, v29);
        unint64_t v35 = v83;
        if (v56 == 1)
        {
          sub_10003B6F8(v80, &qword_100798708);
          char v57 = v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget];
          v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = 1;
          uint64_t v32 = v85;
          if ((v57 & 1) == 0) {
            goto LABEL_11;
          }
          goto LABEL_17;
        }
LABEL_31:
        sub_10003B6F8(v80, &qword_100798700);
        uint64_t v32 = v85;
LABEL_32:
        char v58 = v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget];
        v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = 0;
        if (v58) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
      sub_10003B694(v53, (uint64_t)v76, &qword_100798708);
      if (v55(v54, 1, v29) == 1)
      {
        sub_10003B6F8(v52, &qword_100798708);
        uint64_t v14 = v77;
        sub_10003B6F8((uint64_t)v77, &qword_100798708);
        (*v70)(v76, v29);
        unint64_t v35 = v83;
        goto LABEL_31;
      }
      uint64_t v59 = v68;
      (*v67)(v68, v54, v29);
      sub_1002EAA8C();
      char v60 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v61 = *v70;
      (*v70)(v59, v29);
      sub_10003B6F8(v79, &qword_100798708);
      uint64_t v14 = v77;
      sub_10003B6F8((uint64_t)v77, &qword_100798708);
      v61(v76, v29);
      sub_10003B6F8(v53, &qword_100798708);
      int v62 = v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget];
      v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_isDropTarget] = v60 & 1;
      uint64_t v32 = v85;
      unint64_t v35 = v83;
      if ((v60 & 1) != v62)
      {
LABEL_11:
        TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
        char v37 = TTRUserDefaults.animationSlowModeEnabled.getter();
        double v38 = 0.15;
        if (v45[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor]) {
          double v38 = 0.25;
        }
        if (v37) {
          double v39 = 3.0;
        }
        else {
          double v39 = 1.0;
        }
        double v40 = v39 * v38;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = v45;
        id v42 = objc_allocWithZone((Class)UIViewPropertyAnimator);
        v87[2] = sub_1002EB94C;
        v87[3] = v41;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v87[0] = sub_10000AD88;
        v87[1] = &unk_1007428B8;
        uint64_t v43 = _Block_copy(aBlock);
        double v44 = v45;
        swift_release();
        uint64_t v45 = [v42 initWithDuration:v43 controlPoint1:v40 controlPoint2:0.33, 0.0, 0.67, 1.0];
        _Block_release(v43);
        [v45 startAnimation];

        unint64_t v35 = v83;
      }
LABEL_17:
      ++v36;

      if (v82 == v36) {
        return swift_bridgeObjectRelease();
      }
    }
    sub_10003B6F8((uint64_t)v14, &qword_100798708);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002E9D1C(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_10078E620);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v12 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = (uint64_t)a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess();
  sub_10003B694(v16, (uint64_t)v11, (uint64_t *)&unk_10078E620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_10078E620);
  }
  double v39 = v9;
  sub_10003BFF4((uint64_t)v11, (uint64_t)v15);
  sub_1000084E0(a2 & 1);
  if (a2)
  {
    uint64_t v18 = (objc_class *)type metadata accessor for TTRIPinnedListControl();
    v42.receiver = a1;
    v42.super_class = v18;
    unsigned int v19 = [super isSelected];
    v41.receiver = a1;
    v41.super_class = v18;
    [super setSelected:1];
    v40.receiver = a1;
    v40.super_class = v18;
    uint64_t v20 = 0;
    if (v19 != objc_msgSendSuper2(&v40, "isSelected"))
    {
      TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
      char v21 = TTRUserDefaults.animationSlowModeEnabled.getter();
      double v22 = 0.15;
      if (*((unsigned char *)a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor)) {
        double v22 = 0.25;
      }
      double v23 = 1.0;
      if (v21) {
        double v23 = 3.0;
      }
      double v24 = v23 * v22;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = a1;
      id v26 = objc_allocWithZone((Class)UIViewPropertyAnimator);
      uint64_t v47 = sub_1002EB8C8;
      uint64_t v48 = v25;
      aBlock = _NSConcreteStackBlock;
      uint64_t v44 = 1107296256;
      uint64_t v45 = sub_10000AD88;
      uint64_t v46 = &unk_100742818;
      unint64_t v27 = _Block_copy(&aBlock);
      id v28 = a1;
      swift_release();
      id v29 = [v26 initWithDuration:v27 controlPoint1:v24 controlPoint2:0.33, 0.0, 0.67, 1.0];
      _Block_release(v27);
      [v29 startAnimation];

      uint64_t v20 = 0;
    }
    goto LABEL_12;
  }
  uint64_t v38 = v3;
  double v30 = self;
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a1;
  uint64_t v32 = swift_allocObject();
  uint64_t v20 = sub_1002EB8B0;
  *(void *)(v32 + 16) = sub_1002EB8B0;
  *(void *)(v32 + 24) = v31;
  uint64_t v47 = sub_1000218B0;
  uint64_t v48 = v32;
  aBlock = _NSConcreteStackBlock;
  uint64_t v44 = 1107296256;
  uint64_t v45 = sub_100021888;
  uint64_t v46 = &unk_1007427C8;
  uint64_t v33 = _Block_copy(&aBlock);
  id v34 = a1;
  swift_retain();
  swift_release();
  [v30 performWithoutAnimation:v33];
  _Block_release(v33);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if ((isEscapingClosureAtFileLocation & 1) == 0)
  {
    uint64_t v3 = v38;
LABEL_12:
    uint64_t v36 = (uint64_t)v39;
    sub_10003BA1C((uint64_t)v15, (uint64_t)v39);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v36, 0, 1, v12);
    uint64_t v37 = v3 + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList;
    swift_beginAccess();
    sub_10000A550(v36, v37, (uint64_t *)&unk_10078E620);
    swift_endAccess();
    sub_10003BF98((uint64_t)v15);
    return sub_1000499C4((uint64_t)v20);
  }
  __break(1u);
  return result;
}

void sub_1002EA238(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v16.receiver = a1;
  v16.super_class = ObjectType;
  unsigned int v3 = [super isSelected];
  v15.receiver = a1;
  v15.super_class = ObjectType;
  [super setSelected:1];
  v14.receiver = a1;
  v14.super_class = ObjectType;
  if (v3 != objc_msgSendSuper2(&v14, "isSelected"))
  {
    TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    char v4 = TTRUserDefaults.animationSlowModeEnabled.getter();
    double v5 = 0.15;
    if (*((unsigned char *)a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_selectedStateShowsPinnedListColor)) {
      double v5 = 0.25;
    }
    double v6 = 1.0;
    if (v4) {
      double v6 = 3.0;
    }
    double v7 = v6 * v5;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = a1;
    id v9 = objc_allocWithZone((Class)UIViewPropertyAnimator);
    v13[4] = sub_1002EB94C;
    uint64_t v13[5] = v8;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 1107296256;
    v13[2] = sub_10000AD88;
    v13[3] = &unk_100742868;
    uint64_t v10 = _Block_copy(v13);
    id v11 = a1;
    swift_release();
    id v12 = [v9 initWithDuration:v10 controlPoint1:v7 controlPoint2:0.33, 0.0, 0.67, 1.0];
    _Block_release(v10);
    [v12 startAnimation];
  }
}

uint64_t sub_1002EA51C(void *a1, char a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v4 - 8);
  double v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (objc_class *)type metadata accessor for TTRIPinnedListControl();
  v15.receiver = a1;
  v15.super_class = v11;
  uint64_t result = (uint64_t)[v15 isSelected];
  if ((result & 1) == 0)
  {
    uint64_t v13 = (uint64_t)a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
    swift_beginAccess();
    sub_10003B694(v13, (uint64_t)v6, (uint64_t *)&unk_10078E620);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      return sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_10078E620);
    }
    else
    {
      sub_10003BFF4((uint64_t)v6, (uint64_t)v10);
      sub_1002E9D1C(a1, a2 & 1);
      if (swift_unknownObjectWeakLoadStrong())
      {
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_100094D48((uint64_t)v10);
          swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
      }
      return sub_10003BF98((uint64_t)v10);
    }
  }
  return result;
}

id sub_1002EA750()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIPinnedListsView();
  return [super dealloc];
}

uint64_t sub_1002EA808()
{
  return type metadata accessor for TTRIPinnedListsView();
}

uint64_t sub_1002EA810(uint64_t a1)
{
  return sub_1002EAB70(a1, (uint64_t (*)(char *))sub_100403550);
}

unint64_t sub_1002EAA8C()
{
  unint64_t result = qword_10078E350;
  if (!qword_10078E350)
  {
    type metadata accessor for UUID();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078E350);
  }
  return result;
}

void *sub_1002EAAE4(uint64_t a1)
{
  objc_super v2 = sub_10003C130();
  v5[2] = a1;
  unsigned int v3 = sub_1002F55EC((uint64_t (*)(id *))sub_1002EB7BC, (uint64_t)v5, (unint64_t)v2);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1002EAB58(uint64_t a1)
{
  return sub_1002EAB70(a1, (uint64_t (*)(char *))sub_1004023A4);
}

uint64_t sub_1002EAB70(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v4 - 8);
  double v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess();
  sub_10003B694(v11, (uint64_t)v6, (uint64_t *)&unk_10078E620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_10078E620);
    return 0;
  }
  else
  {
    sub_10003BFF4((uint64_t)v6, (uint64_t)v10);
    if (swift_unknownObjectWeakLoadStrong())
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v12 = a2(v10);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v12 = 0;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v12 = 0;
    }
    sub_10003BF98((uint64_t)v10);
  }
  return v12;
}

void *sub_1002EAD74(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
  swift_beginAccess();
  sub_10003B694(v9, (uint64_t)v4, (uint64_t *)&unk_10078E620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E620);
    return _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10003BFF4((uint64_t)v4, (uint64_t)v8);
    if (swift_unknownObjectWeakLoadStrong())
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v10 = sub_10041617C((uint64_t)v8);
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v10 = _swiftEmptyArrayStorage;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
    }
    sub_10003BF98((uint64_t)v8);
  }
  return v10;
}

void sub_1002EAF70()
{
  *(void *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedListsViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList];
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_pinnedLists] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedStateShowsPinnedListColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_trailingLayoutMarginForControls] = 0x4030000000000000;
  v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectionFollowsFocus] = 0;
  v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_usesLargeTextLayout] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dropTargetPinnedListID];
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1002EB0D8(void *a1)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      char v2 = sub_100414DE8(a1);
      swift_unknownObjectRelease();
    }
    else
    {
      char v2 = 0;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    char v2 = 0;
  }
  return v2 & 1;
}

id sub_1002EB168(void *a1)
{
  uint64_t v2 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v2 - 8);
  id v29 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v28 = (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  objc_super v15 = (char *)&v28 - v14;
  objc_super v16 = (char *)sub_1002EAAE4((uint64_t)a1);
  id v17 = [objc_allocWithZone((Class)UIDropProposal) initWithDropOperation:0];
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    goto LABEL_6;
  }
  uint64_t v18 = (uint64_t)&v16[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList];
  swift_beginAccess();
  sub_10003B694(v18, (uint64_t)v9, (uint64_t *)&unk_10078E620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E620);
    goto LABEL_7;
  }
  sub_10003BFF4((uint64_t)v9, (uint64_t)v15);
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v19 = sub_1002F5CC8((uint64_t)v15, a1);

    swift_unknownObjectRelease();
    sub_10003BF98((uint64_t)v15);
    id v17 = v19;
  }
  else
  {
    sub_10003BF98((uint64_t)v15);
  }
LABEL_7:
  if ((char *)[v17 operation] - 2 < (char *)2)
  {
    if (v16
      && (char v21 = &v16[OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList],
          swift_beginAccess(),
          !(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v21, 1, v10)))
    {
      uint64_t v24 = (uint64_t)v21;
      uint64_t v25 = v28;
      sub_10003BA1C(v24, v28);
      uint64_t v23 = (uint64_t)v29;
      TTRAccountsListsViewModel.PinnedList.id.getter();
      sub_10003BF98(v25);
      uint64_t v26 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v23, 0, 1, v26);
    }
    else
    {
      uint64_t v22 = type metadata accessor for UUID();
      uint64_t v23 = (uint64_t)v29;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v29, 1, 1, v22);
    }
    sub_1002EB810(v23, (uint64_t)v6);
  }
  else
  {
    uint64_t v20 = type metadata accessor for UUID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  }
  sub_1002E9200((uint64_t)v6);

  sub_10003B6F8((uint64_t)v6, &qword_100798708);
  return v17;
}

void sub_1002EB5B0(void *a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1002EAAE4((uint64_t)a1);
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = (uint64_t)v9 + OBJC_IVAR____TtC9Reminders21TTRIPinnedListControl_pinnedList;
    swift_beginAccess();
    sub_10003B694(v11, (uint64_t)v4, (uint64_t *)&unk_10078E620);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
    {

      sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078E620);
    }
    else
    {
      sub_10003BFF4((uint64_t)v4, (uint64_t)v8);
      if (swift_unknownObjectWeakLoadStrong())
      {
        if (swift_unknownObjectWeakLoadStrong())
        {
          sub_100095028((uint64_t)v8, a1);

          swift_unknownObjectRelease();
        }
        else
        {
        }
        swift_unknownObjectRelease();
        sub_10003BF98((uint64_t)v8);
      }
      else
      {
        sub_10003BF98((uint64_t)v8);
      }
    }
  }
}

id sub_1002EB7BC(void *a1)
{
  uint64_t v2 = *(void **)(v1 + 16);
  uint64_t v3 = (void *)*a1;
  [v2 locationInView:*a1];
  return [v3 pointInside:0];
}

uint64_t sub_1002EB810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100798708);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002EB878()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002EB8B0()
{
  sub_1002EA238(*(void **)(v0 + 16));
}

uint64_t sub_1002EB8B8()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1002EB8C8()
{
}

unint64_t sub_1002EB8D0()
{
  return sub_1002E8A34();
}

uint64_t sub_1002EB8D8()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002EB8E8(void *a1)
{
  return sub_1002E8D40(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_1002EB970()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIEditTodaySectionsRouter()
{
  return self;
}

void sub_1002EB9D4()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_1002EBA38()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v1 = TTRUserDefaults.showingLargeAttachments(forType:)();

  return v1 & 1;
}

void sub_1002EBA78()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

id sub_1002EBADC()
{
  uint64_t v1 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  swift_beginAccess();
  sub_10003B694(v4, (uint64_t)v3, &qword_100786EF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v3, &qword_100786EF0);
    return 0;
  }
  else
  {
    id v6 = *(id *)&v3[*(int *)(v5 + 24)];
    sub_1002EE0A0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  }
  return v6;
}

uint64_t sub_1002EBC14()
{
  int v1 = *(unsigned __int8 *)(v0
                          + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_hasIncompleteOrCompletedReminders);
  if (v1 != 2) {
    return v1 & 1 | 0x40u;
  }
  uint64_t result = 64;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount + 8) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount) <= 0) {
      return 64;
    }
    else {
      return 65;
    }
  }
  return result;
}

uint64_t sub_1002EBC5C@<X0>(uint64_t a1@<X8>)
{
  *(_OWORD *)a1 = xmmword_10066EDA0;
  *(unsigned char *)(a1 + 16) = 1;
  *(void *)(a1 + 24) = sub_1002EE168;
  *(void *)(a1 + 32) = v1;
  return swift_retain();
}

uint64_t sub_1002EBC8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  double v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, double))(v3 + 56))(v9, 1, 1, v2, v7);
  swift_retain();
  swift_retain();
  uint64_t v11 = (void *)TTRMutableTreeStorage.children(of:)();
  swift_release();
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
  if (v11[2])
  {
    sub_1002EE100((uint64_t)v11 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1002EE0A0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (!EnumCaseMultiPayload)
    {
      swift_retain();
      uint64_t v13 = sub_100475E28((uint64_t)v11, v10);
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v11 = v13;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  v15[1] = v11;
  sub_10003B754(&qword_10078C4F0);
  type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_1002EE170();
  Sequence.firstMap<A>(_:)();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002EBF10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1002EC814();
  sub_1002EE100(a1, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1002EE0A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.MoveReminderSubjectForItem(0);
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = &off_10073C570;
    uint64_t v10 = sub_1000394A8((uint64_t *)a2);
    uint64_t result = sub_1002EE100(a1, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    *(uint64_t *)((char *)v10 + *(int *)(v9 + 20)) = v7;
    *((unsigned char *)v10 + *(int *)(v9 + 24)) = 0;
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return swift_release();
  }
  return result;
}

uint64_t sub_1002EC05C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1002EC814();
  sub_10003B694(a1, (uint64_t)v8, (uint64_t *)&unk_100788DC0);
  uint64_t v10 = type metadata accessor for TTRSmartListDragAndDropPresenterCapability.AttributeMatchingRequest(0);
  uint64_t v11 = swift_allocObject();
  uint64_t result = sub_100028C3C((uint64_t)v8, v11+ OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_parent, (uint64_t *)&unk_100788DC0);
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_childIndex) = a2;
  *(void *)(v11
            + OBJC_IVAR____TtCC9Reminders42TTRSmartListDragAndDropPresenterCapabilityP33_EB37CBC97CD33B7B0DA5877F68F3A24924AttributeMatchingRequest_dragAndDropCapability) = v9;
  a3[3] = v10;
  a3[4] = (uint64_t)&off_10073C408;
  *a3 = v11;
  return result;
}

void sub_1002EC160()
{
}

BOOL sub_1002EC188(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3)
    || (uint64_t v6 = v5,
        uint64_t v7 = swift_getObjectType(),
        LOBYTE(v6) = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 56))(a1, v7, v6),
        swift_unknownObjectRelease(),
        (v6 & 1) != 0))
  {
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    sub_100038D28(a1, v8);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 192))(v14, v8, v9);
    uint64_t v10 = v15;
    if (v15)
    {
      uint64_t v11 = v16;
      sub_100038D28(v14, v15);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      sub_100038CD8((uint64_t)v14);
      return v12 > 0;
    }
    sub_10003B6F8((uint64_t)v14, &qword_100787490);
  }
  return 0;
}

uint64_t sub_1002EC2C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1002EC814();
  sub_10016B49C(a1, a2, a3);

  return swift_release();
}

uint64_t sub_1002EC31C()
{
  v1[3] = type metadata accessor for TTRUserActivityListPayload();
  v1[4] = (uint64_t)&protocol witness table for TTRUserActivityListPayload;
  *(unsigned char *)sub_1000394A8(v1) = 3;
  type metadata accessor for TTRUserActivityListPayload.State();
  swift_storeEnumTagMultiPayload();
  NSUserActivity.setPayload(_:)();
  return sub_100038CD8((uint64_t)v1);
}

uint64_t sub_1002EC394()
{
  uint64_t v1 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v21[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v21[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002D0F54();
  uint64_t v10 = static NSUserActivity.forStoringWindowSceneRestorationPayload()();
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v12 = *(void *)(v11 + 8);
    uint64_t ObjectType = swift_getObjectType();
    sub_100588C58(ObjectType, v12);
    swift_unknownObjectRelease();
    uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v6, 1, v14) != 1)
    {
      TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
      sub_1002EE0A0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
      goto LABEL_6;
    }
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  }
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v9, 1, 1, v15);
LABEL_6:
  uint64_t v17 = (uint64_t)&v3[*(int *)(sub_10003B754(&qword_100786F30) + 48)];
  *uint64_t v3 = 3;
  sub_10003B694((uint64_t)v9, v17, (uint64_t *)&unk_10078E360);
  type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  swift_storeEnumTagMultiPayload();
  v21[3] = v1;
  v21[4] = (uint64_t)&protocol witness table for TTRUserActivityWindowSceneRestorationPayload;
  uint64_t v18 = sub_1000394A8(v21);
  sub_1002EE100((uint64_t)v3, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  NSUserActivity.setPayload(_:)();
  sub_1002EE0A0((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
  sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_10078E360);
  sub_100038CD8((uint64_t)v21);
  return v10;
}

void sub_1002EC6AC(void *a1)
{
  id v2 = [a1 flaggedContext];
  if (v2)
  {
    id v4 = v2;
    if (REMReminderFlaggedContextChangeItem.isFlagged.getter())
    {
    }
    else
    {
      type metadata accessor for TTRReminderEditor();
      sub_1000D69E0();
      id v3 = a1;
      TTRUndoableEditing.init(changeItem:undoManager:)();
      TTRReminderEditor.edit(isFlagged:)(1);
      swift_release();
    }
  }
}

void *sub_1002EC774()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList);
  id v2 = v1;
  return v1;
}

uint64_t sub_1002EC7B0()
{
  uint64_t v0 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_100018C30(v0, qword_1007987E0);
  *(unsigned char *)sub_100018BF8(v0, (uint64_t)qword_1007987E0) = 1;

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1002EC814()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource____lazy_storage___dragAndDropCapability);
  }
  else
  {
    id v3 = (void *)REMSmartListTypeFlagged;
    type metadata accessor for TTRAttributeMatchingDragAndDropPresenterCapability();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 24) = 0;
    swift_unknownObjectWeakInit();
    *(unsigned char *)(v2 + 40) = 1;
    *(void *)(v2 + 24) = &off_100742AA8;
    *(void *)(v2 + 32) = v3;
    swift_unknownObjectWeakAssign();
    *(void *)(v0 + v1) = v2;
    id v4 = v3;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1002EC8CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v2 - 8);
  uint64_t v25 = &v19[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v4 - 8);
  uint64_t v24 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v19[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *uint64_t v8 = 3;
  uint64_t v9 = type metadata accessor for TTRListType();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  uint64_t v21 = REMSmartListType.title.getter();
  uint64_t v22 = static TTRListColors.SmartList.flagged.getter();
  uint64_t v23 = v1;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (v12(ObjectType, v10)) {
    swift_unknownObjectRelease();
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10)) {
    swift_unknownObjectRelease();
  }
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v10 + 56))(v27, ObjectType, v10);
  sub_10003B6F8((uint64_t)v27, &qword_100791FA0);
  if (v12(ObjectType, v10))
  {
    uint64_t v14 = v13;
    uint64_t v15 = swift_getObjectType();
    int v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v15, v14);
    swift_unknownObjectRelease();
  }
  else
  {
    int v20 = 0;
  }
  uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v24, 1, 1, v16);
  uint64_t v17 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v25, 1, 1, v17);
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

uint64_t sub_1002ECCBC()
{
  return swift_release();
}

uint64_t sub_1002ECCFC()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1002ECD80()
{
  return type metadata accessor for TTRShowFlaggedViewModelSource();
}

uint64_t type metadata accessor for TTRShowFlaggedViewModelSource()
{
  uint64_t result = qword_100798840;
  if (!qword_100798840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002ECDD4()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002ECE2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v118 = a2;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v101 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v117 = (uint64_t)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v113 = v10;
  uint64_t v114 = v11;
  __chkstk_darwin(v10);
  uint64_t v116 = (uint64_t)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v108 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v108);
  uint64_t v109 = (uint64_t)&v101 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v14 - 8);
  uint64_t v110 = (uint64_t)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  long long v115 = (char *)&v101 - v17;
  uint64_t v18 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v111 = *(void *)(v18 - 8);
  uint64_t v112 = v18;
  __chkstk_darwin(v18);
  int v20 = (char *)&v101 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v21 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  long long v104 = (char *)&v101 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  long long v105 = (char *)&v101 - v24;
  uint64_t v121 = type metadata accessor for REMRemindersListDataView.FlatModel();
  uint64_t v126 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v124 = (char *)&v101 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v101 - v27;
  uint64_t v29 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v123);
  uint64_t v103 = (uint64_t)&v101 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  int v102 = (BOOL *)&v101 - v34;
  double v36 = __chkstk_darwin(v35);
  uint64_t v38 = (char *)&v101 - v37;
  uint64_t v39 = OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList;
  objc_super v40 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_smartList);
  uint64_t v125 = a1;
  __int16 v119 = v7;
  uint64_t v122 = v20;
  uint64_t v106 = v21;
  if (v40)
  {
    [v40 sortingStyle:v36];
    uint64_t v42 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter();
    if (v42)
    {
      uint64_t v43 = (void *)v42;
      uint64_t v101 = v3;
      goto LABEL_6;
    }
    if (v41) {
      goto LABEL_16;
    }
LABEL_12:
    int v120 = 1;
    goto LABEL_21;
  }
  uint64_t v44 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter();
  if (!v44) {
    goto LABEL_12;
  }
  uint64_t v43 = (void *)v44;
  uint64_t v101 = v3;
  id v41 = 0;
LABEL_6:
  id v45 = [v43 sortingStyle:v101];

  if (v41)
  {
    if (v45)
    {
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v48 = v47;
      if (v46 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v48 == v49) {
        int v120 = 1;
      }
      else {
        int v120 = _stringCompareWithSmolCheck(_:_:expecting:)();
      }

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    uint64_t v3 = v101;
LABEL_16:

    int v120 = 0;
    goto LABEL_21;
  }
  if (v45)
  {

    int v120 = 0;
  }
  else
  {
    int v120 = 1;
  }
LABEL_20:
  uint64_t v3 = v101;
LABEL_21:
  uint64_t v50 = *(void *)(v3 + v39);
  uint64_t v51 = v3;
  uint64_t v52 = (void *)REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter();

  uint64_t v53 = v51;
  uint64_t v54 = v51 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1002EE100(v54, (uint64_t)v38, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    if ((v50 == 0) == (v52 != 0))
    {
      uint64_t v55 = (void *)REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter();
      int v56 = v55;
      if (v55) {

      }
      BOOL v57 = v56 != 0;
      char v58 = v102;
      *int v102 = v57;
      swift_storeEnumTagMultiPayload();
      uint64_t v59 = (uint64_t)v58;
      uint64_t v60 = v103;
      sub_1002EE038(v59, v103, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
      swift_beginAccess();
      sub_1000DD568(v60, v54);
      swift_endAccess();
    }
  }
  else
  {
    sub_1002EE0A0((uint64_t)v38, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  }
  uint64_t v61 = REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter();
  uint64_t v62 = v53;
  unint64_t v63 = *(void **)(v53 + v39);
  *(void *)(v53 + v39) = v61;

  REMRemindersListDataView.FlaggedModel.flatModel.getter();
  REMRemindersListDataView.FlatModel.remindersCount.getter();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v126 + 8);
  objc_super v65 = v28;
  uint64_t v66 = v121;
  v126 += 8;
  v64(v65, v121);
  uint64_t v67 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v68 = *(void *)(v67 - 8);
  int v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v68 + 48))(v31, 1, v67);
  if (v69 == 1)
  {
    sub_10003B6F8((uint64_t)v31, &qword_100786F00);
    uint64_t v70 = 0;
  }
  else
  {
    uint64_t v70 = REMRemindersListDataView.CountByCompleted.completed.getter();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v31, v67);
  }
  uint64_t v71 = v62 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_completedRemindersCount;
  *(void *)uint64_t v71 = v70;
  *(unsigned char *)(v71 + 8) = v69 == 1;
  uint64_t v72 = v124;
  REMRemindersListDataView.FlaggedModel.flatModel.getter();
  char v73 = REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter();
  v64(v72, v66);
  *(unsigned char *)(v62 + OBJC_IVAR____TtC9Reminders29TTRShowFlaggedViewModelSource_hasIncompleteOrCompletedReminders) = v73;
  if (v120)
  {
    uint64_t v74 = (uint64_t)v122;
    sub_1002EC8CC((uint64_t)v122);
    if (qword_100785448 != -1) {
      swift_once();
    }
    uint64_t v75 = sub_100018BF8(v108, (uint64_t)qword_1007987E0);
    sub_1002EE100(v75, v109, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_100105478(v129);
    sub_100028C3C((uint64_t)v129, (uint64_t)v130, (uint64_t *)&unk_10079CA00);
    uint64_t v76 = (uint64_t)v115;
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    uint64_t v77 = v110;
    sub_1002EE100(v76, v110, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    unint64_t v78 = v124;
    REMRemindersListDataView.FlaggedModel.flatModel.getter();
    uint64_t v79 = REMRemindersListDataView.FlatModel.reminders.getter();
    v64(v78, v66);
    uint64_t v80 = v116;
    sub_1002EE038(v77, v116, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v81 = v113;
    *(void *)(v80 + *(int *)(v113 + 20)) = v79;
    *(unsigned char *)(v80 + *(int *)(v81 + 24)) = 0;
    uint64_t v82 = v117;
    sub_1002EE100(v74, v117, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v111 + 56))(v82, 0, 1, v112);
    sub_10003B754(&qword_10078D1E8);
    unint64_t v83 = (*(unsigned __int8 *)(v114 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_10066C6F0;
    sub_1002EE100(v80, v84 + v83, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    uint64_t v85 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
    uint64_t v86 = swift_allocObject();
    uint64_t v87 = type metadata accessor for TTRRemindersListViewModel.Item();
    uint64_t v88 = (uint64_t)v119;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v119, 1, 1, v87);
    v128[3] = v85;
    v128[4] = &off_10074D320;
    v128[0] = v86;
    sub_1000145EC((uint64_t)v128, (uint64_t)v127);
    uint64_t v89 = swift_allocObject();
    *(void *)(v89 + 16) = v84;
    sub_100038ED8(v127, v89 + 24);
    *(void *)(v89 + 64) = v62;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_10059DBB0(1, v82, (uint64_t (*)(uint64_t))sub_100051174, v89, v118, 0, v88);
    swift_release();
    sub_100038CD8((uint64_t)v128);
    swift_bridgeObjectRelease();
    sub_10003B6F8(v88, (uint64_t *)&unk_100788DC0);
    sub_10003B6F8(v82, &qword_100786EF0);
    sub_1002EE0A0(v80, type metadata accessor for TTRRemindersListTreeViewModel.Section);
    sub_1002EE0A0(v76, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    sub_1002EE0A0((uint64_t)v122, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    swift_release();
  }
  else
  {
    uint64_t v90 = *(void **)(v62 + v39);
    if (v90)
    {
      id v91 = [v90 sortingStyle];
      uint64_t v92 = v104;
      REMSortingStyle.dataViewSortingStyle.getter();

      uint64_t v94 = (uint64_t)v105;
      uint64_t v93 = v106;
      uint64_t v95 = v92;
      uint64_t v96 = v107;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v105, v95, v107);
    }
    else
    {
      uint64_t v94 = (uint64_t)v105;
      TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
      uint64_t v93 = v106;
      uint64_t v96 = v107;
    }
    sub_10059388C(v94, 1);
    (*(void (**)(uint64_t, uint64_t))(v93 + 8))(v94, v96);
  }
  uint64_t v97 = v62 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 104))(3, ObjectType, v99);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002EDAF4()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability;
  swift_beginAccess();
  sub_1002EE100(v11, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    char v12 = *v10;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v10, v1);
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for REMRemindersListDataView.SortingStyle.manual(_:), v1);
    char v12 = static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v2 + 8);
    v13(v4, v1);
    v13(v7, v1);
  }
  return v12 & 1;
}

uint64_t sub_1002EDCFC@<X0>(unsigned char *a1@<X8>)
{
  if (qword_100785448 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  sub_100018BF8(v2, (uint64_t)qword_1007987E0);
  if (static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)())
  {
    *a1 = 1;
    uint64_t v3 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    swift_storeEnumTagMultiPayload();
    uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v5 = a1;
    uint64_t v6 = 0;
    uint64_t v7 = v3;
  }
  else
  {
    uint64_t v8 = type metadata accessor for TTRRemindersListMatchedAttributeValue(0);
    uint64_t v4 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
    uint64_t v7 = v8;
    uint64_t v5 = a1;
    uint64_t v6 = 1;
  }

  return v4(v5, v6, 1, v7);
}

void *sub_1002EDE14()
{
  return sub_1002EDE68();
}

uint64_t sub_1002EDE20()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void *sub_1002EDE68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ReminderID();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (void **)((char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
  uint64_t v8 = 0;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      sub_1002EE0A0((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
      uint64_t v8 = 0;
      break;
    case 3u:
      return v8;
    default:
      sub_1002EE038((uint64_t)v7, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      uint64_t v9 = *v4;
      uint64_t v10 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID);
      swift_beginAccess();
      uint64_t v11 = *v10;
      id v12 = v9;
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100598448(v12, v11);

      swift_bridgeObjectRelease();
      sub_1002EE0A0((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ReminderID);
      break;
  }
  return v8;
}

uint64_t sub_1002EE038(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002EE0A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002EE100(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002EE168()
{
  return sub_1002EBC8C(v0);
}

unint64_t sub_1002EE170()
{
  unint64_t result = qword_100791E80;
  if (!qword_100791E80)
  {
    sub_100039710(&qword_10078C4F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100791E80);
  }
  return result;
}

void sub_1002EE1CC()
{
  uint64_t v1 = v0;
  id v2 = [self configurationWithScale:2];
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  id v3 = (id)static UIImage.ttr_systemSymbolImage(named:)();
  if (v3)
  {
    sub_1000368FC(0, (unint64_t *)&qword_10078E640);
    uint64_t v4 = (void *)static UIColor.ttrSecondaryLabelColor.getter();
    id v5 = [v3 imageWithTintColor:v4 renderingMode:1];

    id v3 = [v5 imageWithSymbolConfiguration:v2];
  }
  uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge);
  uint64_t v7 = *(void (**)(id))((swift_isaMask & *v6) + 0x140);
  id v8 = v3;
  v7(v3);
  uint64_t v9 = self;
  id v10 = [v9 whiteColor];
  uint64_t v11 = TTRListBadgeView.ImageParams.init(color:blendMode:contentMode:)();
  (*(void (**)(uint64_t, uint64_t))((swift_isaMask & *v6) + 0x1A0))(v11, v12 & 0x1FFFFFFFFLL);
  uint64_t v15 = 0;
  memset(v14, 0, sizeof(v14));
  char v16 = 2;
  (*(void (**)(_OWORD *))((swift_isaMask & *v6) + 0x110))(v14);
  (*(void (**)(void))((swift_isaMask & *v6) + 0x188))(0);
  id v13 = [v9 tertiarySystemFillColor];
  [v6 setTintColor:v13];
}

char *sub_1002EE498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  type metadata accessor for TTRListBadgeView();
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v9 = v4;
  id v10 = [v8 init];
  *(void *)&v9[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge] = v10;

  if (a3)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v22.receiver = v9;
  v22.super_class = ObjectType;
  uint64_t v12 = (char *)[super initWithStyle:a1 reuseIdentifier:v11];

  uint64_t v13 = OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsRecentlyDeletedCell_badge];
  uint64_t v15 = OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView;
  char v16 = *(void **)&v12[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_iconContainerView];
  uint64_t v17 = v12;
  id v18 = v14;
  [v16 bounds];
  [v18 setFrame:];

  uint64_t v19 = *(void **)&v12[v13];
  [v19 setAutoresizingMask:18];
  [*(id *)&v12[v15] addSubview:v19];
  id v20 = *(id *)&v17[OBJC_IVAR____TtC9Reminders25TTRIAccountsListsBaseCell_customAccessoryView];
  [v20 setEnabled:0];

  return v17;
}

unint64_t sub_1002EE740()
{
  v11.receiver = v0;
  v11.super_class = (Class)swift_getObjectType();
  [super accessibilityCustomActions];
  if (v1)
  {
    id v2 = v1;
    sub_1000368FC(0, (unint64_t *)&unk_10078E660);
    id v3 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    id v3 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)v3;
  static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
  sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
  uint64_t v4 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v6 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1002EEB64;
  aBlock[5] = v5;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_10040FBBC;
  aBlock[3] = &unk_100742B50;
  id v8 = _Block_copy(aBlock);
  [v6 initWithName:v7 image:v4 actionHandler:v8];

  _Block_release(v8);
  swift_release();
  swift_release();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return v12;
}

uint64_t sub_1002EEA1C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = v2;
      swift_getObjectType();
      if (swift_conformsToProtocol2()) {
        uint64_t v4 = v3;
      }
      else {
        uint64_t v4 = 0;
      }
      if (v4)
      {
        LOBYTE(v4) = sub_100086998(v1);

        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
    else
    {

      LOBYTE(v4) = 0;
    }
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  return v4 & 1;
}

void sub_1002EEB0C()
{
}

uint64_t sub_1002EEB2C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002EEB64()
{
  return sub_1002EEA1C();
}

uint64_t sub_1002EEB6C(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C6F0;
  uint64_t v5 = (uint64_t *)TTRReminderCopyPasteItem.pasteboardTypeString.unsafeMutableAddressor();
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  *(void *)(v4 + 32) = v7;
  *(void *)(v4 + 40) = v6;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  LODWORD(v3) = [v3 containsPasteboardTypes:isa];

  if (!v3) {
    return 0;
  }
  uint64_t result = (uint64_t)sub_1002EF1C4(a1);
  if (result)
  {
    sub_1002F02F0((void *)result, v10, v11);
    return 1;
  }
  return result;
}

void sub_1002EEC30(uint64_t a1)
{
  uint64_t v3 = sub_1002EF7DC();
  if (v3)
  {
    id v31 = (id)v3;
    id v4 = sub_1002EF1C4(a1);
    if (v4)
    {
      uint64_t v7 = v4;
      id v8 = v5;
      uint64_t v9 = v6;
      type metadata accessor for TTRReminderCopyPasteItem();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      objc_super v11 = (void *)swift_allocObject();
      v11[2] = v1;
      void v11[3] = v7;
      v11[4] = v8;
      v11[5] = v9;
      aBlock[4] = (uint64_t)sub_1002F0010;
      aBlock[5] = (uint64_t)v11;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      void aBlock[2] = (uint64_t)sub_1002EFED4;
      aBlock[3] = (uint64_t)&unk_100742BA0;
      unint64_t v12 = _Block_copy(aBlock);
      id v13 = v9;
      swift_retain();
      id v14 = v7;
      id v15 = v8;
      swift_release();
      id v16 = [v31 loadObjectOfClass:ObjCClassFromMetadata completionHandler:v12];
      _Block_release(v12);
    }
    else
    {
      if (qword_100785450 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_100018BF8(v24, (uint64_t)qword_100799110);
      swift_bridgeObjectRetain_n();
      uint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 136315138;
        type metadata accessor for TTRRemindersListViewModel.Item();
        swift_bridgeObjectRetain();
        uint64_t v28 = Array.description.getter();
        unint64_t v30 = v29;
        swift_bridgeObjectRelease();
        uint64_t v33 = sub_1000385A8(v28, v30, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "TTRIRemindersListPasteRequest: failed to determine paste target {items: %s}", v27, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    if (qword_100785450 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100018BF8(v17, (uint64_t)qword_100799110);
    swift_bridgeObjectRetain_n();
    id v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      id v20 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)id v20 = 136315138;
      type metadata accessor for TTRRemindersListViewModel.Item();
      swift_bridgeObjectRetain();
      uint64_t v21 = Array.description.getter();
      unint64_t v23 = v22;
      swift_bridgeObjectRelease();
      uint64_t v33 = sub_1000385A8(v21, v23, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "TTRIRemindersListPasteRequest: eligible NSItemProvider not found {items: %s}", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1002EF0FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100799110);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100799110);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1002EF1C4(uint64_t a1)
{
  void (*v18)(void *__return_ptr, void, void);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(void, void, void);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  void *v30;
  id v31;
  id v32;
  uint64_t inited;
  unint64_t v34;
  id v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  id v39;
  unint64_t v40;
  char v41;
  id v42;
  void *v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  void v51[5];
  char v52;

  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v45 = (uint64_t)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem();
  __chkstk_darwin(v47);
  id v8 = (void **)((char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v46 = (uint64_t)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v45 - v13;
  __chkstk_darwin(v12);
  uint64_t v49 = (uint64_t)&v45 - v15;
  uint64_t v16 = *(void *)(v1 + 32);
  uint64_t ObjectType = swift_getObjectType();
  id v18 = *(void (**)(void *__return_ptr, void, void))(v16 + 8);
  uint64_t v48 = ObjectType;
  v18(v51, ObjectType, v16);
  sub_1001D8FB0((uint64_t)v51);
  os_log_type_t v19 = 0;
  if (v52) {
    return (id)v19;
  }
  id v20 = *(void *)(a1 + 16);
  if (v20)
  {
    uint64_t v21 = v49;
    sub_10005FCB8(a1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * (v20 - 1), v49);
    unint64_t v22 = 0;
  }
  else
  {
    unint64_t v22 = 1;
    uint64_t v21 = v49;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v21, v22, 1, v4);
  sub_1002F0178(v21, (uint64_t)v14);
  unint64_t v23 = *(unsigned int (**)(void, void, void))(v5 + 48);
  if (v23(v14, 1, v4) != 1)
  {
    TTRRemindersListViewModel.Item.editableCasesOnly.getter();
    sub_1002F0244((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        uint64_t v43 = *v8;
        os_log_type_t v19 = (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 304))(a1, sub_1002F0240, v2, v48, v16);
        sub_1002F01E0(v49);
        if (!v19) {

        }
        return (id)v19;
      case 4u:
        sub_1002F0244((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem);
        goto LABEL_7;
      case 5u:
        goto LABEL_7;
      default:
        sub_1002F0244((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem);
        uint64_t v24 = v49;
        uint64_t v25 = v46;
        sub_1002F0178(v49, v46);
        if (v23(v25, 1, v4) == 1)
        {
          sub_1002F01E0(v24);
          os_log_type_t v26 = v25;
        }
        else
        {
          uint64_t v27 = v45;
          sub_1000AA9AC(v25, v45);
          uint64_t v28 = v48;
          unint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 248))(v27, v48, v16);
          if (v29)
          {
            unint64_t v30 = v29;
            id v31 = [v29 list];
            if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 96))(v28, v16))
            {
              uint64_t v32 = [v30 objectID];
              sub_10003B754((uint64_t *)&unk_1007894B0);
              uint64_t inited = swift_initStackObject();
              *(_OWORD *)(inited + 16) = xmmword_10066D470;
              *(void *)(inited + 32) = v32;
              uint64_t v50 = inited;
              specialized Array._endMutation()();
              uint64_t v34 = v50;
              uint64_t v35 = v32;
              double v36 = sub_100028180(v34);
              swift_bridgeObjectRelease();
              uint64_t v37 = (void *)sub_100421E44((uint64_t)_swiftEmptyArrayStorage);
              swift_unknownObjectRetain();
              uint64_t v38 = sub_100230EF8(v37, v36);
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
              if (*(void *)(v38 + 16))
              {
                uint64_t v39 = v35;
                objc_super v40 = sub_10035C188((uint64_t)v39);
                if (v41) {
                  uint64_t v42 = *(id *)(*(void *)(v38 + 56) + 8 * v40);
                }
              }
              swift_bridgeObjectRelease();
              swift_unknownObjectRelease();
            }
            sub_1002F0244(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            sub_1002F01E0(v49);
            return v31;
          }
          sub_1002F0244(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          os_log_type_t v26 = v49;
        }
        sub_1002F01E0(v26);
        return 0;
    }
  }
  sub_1002F01E0((uint64_t)v14);
LABEL_7:
  os_log_type_t v19 = (*(uint64_t (**)(uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(v16 + 304))(a1, sub_1002F0240, v2, v48, v16);
  sub_1002F01E0(v49);
  return (id)v19;
}

uint64_t sub_1002EF7DC()
{
  id v1 = [*(id *)(v0 + 16) itemProviders];
  sub_1000368FC(0, &qword_100791E60);
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v3)
    {
LABEL_3:
      type metadata accessor for TTRReminderCopyPasteItem();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      if (v3 < 1)
      {
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v5 = ObjCClassFromMetadata;
      for (uint64_t i = 0; i != v3; ++i)
      {
        if ((v2 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v2 + 8 * i + 32);
        }
        id v8 = v7;
        if ([v7 canLoadObjectOfClass:v5])
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
      }
      uint64_t result = swift_bridgeObjectRelease();
      if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
        goto LABEL_22;
      }
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (((unint64_t)_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
    goto LABEL_22;
  }
LABEL_16:
  if (((unint64_t)_swiftEmptyArrayStorage & 0x4000000000000000) != 0)
  {
LABEL_22:
    swift_bridgeObjectRetain();
    uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_release();
    if (!v12) {
      goto LABEL_23;
    }
    goto LABEL_18;
  }
  if (!_swiftEmptyArrayStorage[2])
  {
LABEL_23:
    swift_release();
    return 0;
  }
LABEL_18:
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0)
  {
LABEL_26:
    id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_21;
  }
  if (_swiftEmptyArrayStorage[2])
  {
    id v10 = (id)_swiftEmptyArrayStorage[4];
LABEL_21:
    id v11 = v10;
    swift_release();
    return (uint64_t)v11;
  }
  __break(1u);
  return result;
}

void sub_1002EF9F8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, void *a6)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for DispatchQoS();
  uint64_t v39 = *(NSObject **)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (type metadata accessor for TTRReminderCopyPasteItem(), (uint64_t v17 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v18 = v17;
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    uint64_t v36 = v11;
    swift_unknownObjectRetain();
    uint64_t v34 = static OS_dispatch_queue.main.getter();
    os_log_type_t v19 = (void *)swift_allocObject();
    void v19[2] = a3;
    v19[3] = v18;
    uint64_t v35 = v14;
    uint64_t v21 = v37;
    id v20 = v38;
    unsigned char v19[4] = v37;
    v19[5] = v20;
    v19[6] = a6;
    aBlock[4] = (uint64_t)sub_1002F0074;
    aBlock[5] = (uint64_t)v19;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_10000AD88;
    aBlock[3] = (uint64_t)&unk_100742BF0;
    unint64_t v22 = _Block_copy(aBlock);
    id v23 = a6;
    swift_unknownObjectRetain();
    swift_retain();
    id v24 = v21;
    id v25 = v20;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10003FFBC();
    sub_10003B754((uint64_t *)&unk_100788E50);
    sub_10003D7C4();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    os_log_type_t v26 = (void *)v34;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v22);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v10);
    ((void (*)(char *, uint64_t))v39[1].isa)(v16, v35);
  }
  else if (a2)
  {
    swift_errorRetain();
    if (qword_100785450 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100018BF8(v27, (uint64_t)qword_100799110);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v39 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v39, v28))
    {
      unint64_t v29 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v29 = 136315138;
      swift_getErrorValue();
      uint64_t v30 = Error.localizedDescription.getter();
      uint64_t aBlock[6] = sub_1000385A8(v30, v31, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v39, v28, "error decoding pasteboard %s", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
      uint64_t v32 = v39;
    }
  }
}

uint64_t sub_1002EFED4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();

  return swift_unknownObjectRelease();
}

uint64_t sub_1002EFF54()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListPasteRequest()
{
  return self;
}

uint64_t sub_1002EFFC0()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1002F0010(uint64_t a1, uint64_t a2)
{
  sub_1002EF9F8(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_1002F001C()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002F0074()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 488))(v2, v3, v5, v4, sub_1002F0108, v1, ObjectType, v6);
}

uint64_t sub_1002F0108(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(v3 + 32);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 312))(a1, a2, a3, ObjectType, v7);
}

uint64_t sub_1002F0178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F01E0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002F0244(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002F02A4()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 528))(ObjectType, v1);
}

void sub_1002F02F0(void *a1, void *a2, void *a3)
{
  if (a1)
  {
  }
}

uint64_t sub_1002F0348()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1002F0380()
{
  uint64_t v1 = v0;
  if (qword_100785788 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1007BBDB0;
  uint64_t v32 = qword_1007BBDB0;
  sub_1002F0ED0();
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  char v31 = 1;
  LOBYTE(v28[0]) = 1;
  __int16 v29 = 256;
  sub_10003B754(&qword_1007907A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  sub_1001DC898((uint64_t)v30, inited + 32);
  sub_1002F0F24();
  uint64_t v4 = Array<A>.index<A>(forInsertingAt:where:)();
  char v6 = v5;
  sub_1002F0F78((uint64_t)v28, (uint64_t)v27);
  if (v6)
  {
    sub_1002F0F78((uint64_t)v27, (uint64_t)&v16);
    if (v22)
    {
      if (v22 == 1)
      {
        sub_1002F0FE0((uint64_t)&v16, (uint64_t)&v23);
LABEL_13:
        sub_10003B6F8((uint64_t)&v23, &qword_100799C50);
        uint64_t v4 = *(void *)(v2 + 16);
        goto LABEL_14;
      }
      if (v21 || v19 | v20 | v16 | v18 | v17)
      {
        uint64_t v25 = 0;
        long long v23 = 0u;
        long long v24 = 0u;
        char v26 = -1;
        goto LABEL_13;
      }
      uint64_t v25 = 0;
      long long v23 = 0u;
      long long v24 = 0u;
      char v26 = -1;
    }
    else
    {
      sub_1002F0FE0((uint64_t)&v16, (uint64_t)&v23);
    }
    sub_10003B6F8((uint64_t)&v23, &qword_100799C50);
    uint64_t v4 = 0;
  }
LABEL_14:
  sub_10003B6F8((uint64_t)v27, &qword_100799C48);
  sub_10054E9F8(v4, v4, inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_10003B6F8((uint64_t)v28, &qword_100799C48);
  sub_1002F103C((uint64_t)v30);
  uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v28, ObjectType, v7);
  uint64_t v9 = v28[3];
  sub_10003B6F8((uint64_t)v28, &qword_100799C58);
  if (v9)
  {
    LOBYTE(v28[0]) = 1;
    AnyHashable.init<A>(_:)();
    char v31 = 1;
    v27[0] = 0;
    AnyHashable.init<A>(_:)();
    __int16 v29 = 1;
    uint64_t v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_10066C6F0;
    sub_1001DC898((uint64_t)v30, v10 + 32);
    uint64_t v11 = v32;
    uint64_t v12 = Array<A>.index<A>(forInsertingAt:where:)();
    char v14 = v13;
    sub_1002F0F78((uint64_t)v28, (uint64_t)v27);
    if (v14)
    {
      sub_1002F0F78((uint64_t)v27, (uint64_t)&v16);
      if (v22)
      {
        if (v22 == 1)
        {
          sub_1002F0FE0((uint64_t)&v16, (uint64_t)&v23);
LABEL_25:
          sub_10003B6F8((uint64_t)&v23, &qword_100799C50);
          uint64_t v12 = *(void *)(v11 + 16);
          goto LABEL_26;
        }
        if (v21 || v19 | v20 | v16 | v18 | v17)
        {
          uint64_t v25 = 0;
          long long v23 = 0u;
          long long v24 = 0u;
          char v26 = -1;
          goto LABEL_25;
        }
        uint64_t v25 = 0;
        long long v23 = 0u;
        long long v24 = 0u;
        char v26 = -1;
      }
      else
      {
        sub_1002F0FE0((uint64_t)&v16, (uint64_t)&v23);
      }
      sub_10003B6F8((uint64_t)&v23, &qword_100799C50);
      uint64_t v12 = 0;
    }
LABEL_26:
    sub_10003B6F8((uint64_t)v27, &qword_100799C48);
    sub_10054E9F8(v12, v12, v10);
    swift_setDeallocating();
    swift_arrayDestroy();
    sub_10003B6F8((uint64_t)v28, &qword_100799C48);
    sub_1002F103C((uint64_t)v30);
  }
  return v32;
}

uint64_t sub_1002F0800()
{
  uint64_t v1 = v0;
  AnyHashable.base.getter();
  if (!swift_dynamicCast()) {
    return 0;
  }
  if (v12 == 1)
  {
    sub_1002F0E48();
    static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)();
    uint64_t v2 = *(void **)TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
    swift_allocObject();
    swift_weakInit();
    id v3 = v2;
    return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  }
  else
  {
    NSString v5 = String._bridgeToObjectiveC()();
    id v6 = [self _systemImageNamed:v5];

    sub_1002F0E48();
    static TTRLocalizableStrings.TodayList.groupByTime.getter();
    uint64_t v7 = swift_allocObject();
    swift_weakInit();
    id v8 = v6;
    uint64_t v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    uint64_t v9 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    [v4 setState:((uint64_t (*)(uint64_t, uint64_t))(v9 + 24))(ObjectType, v9) & 1, 0, 0, 0, sub_1002F0EC0, v7];
  }
  return (uint64_t)v4;
}

uint64_t sub_1002F0A3C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 80);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 32);
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    NSString v5 = (void *)v4(ObjectType, v2);
    swift_unknownObjectRelease();
    swift_retain();
    sub_1000C5944(v5, v1, (uint64_t)&off_100742C40);
    swift_unknownObjectRelease();

    return swift_release_n();
  }
  return result;
}

void sub_1002F0B24(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = Strong;
    BOOL v4 = [a1 state] != (id)1;
    uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v7 = *(void (**)(BOOL, uint64_t, uint64_t))(v5 + 32);
    swift_unknownObjectRetain();
    v7(v4, ObjectType, v5);
    swift_unknownObjectRelease();
    id v8 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    TTRUserDefaults.todayListIsGrouped.setter();
    swift_release();
  }
}

uint64_t sub_1002F0C14()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1002F0C24()
{
  sub_10019B470();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1002F0C98()
{
  return type metadata accessor for TTRIShowTodayPresenter();
}

uint64_t type metadata accessor for TTRIShowTodayPresenter()
{
  uint64_t result = qword_1007992F0;
  if (!qword_1007992F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002F0CEC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002F0D30()
{
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 600))(ObjectType, v1);
}

uint64_t sub_1002F0D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  double v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v8 + 16))(v7, a3, v5);
  return sub_1001A77A0(v7);
}

unint64_t sub_1002F0E48()
{
  unint64_t result = qword_1007894D0;
  if (!qword_1007894D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007894D0);
  }
  return result;
}

uint64_t sub_1002F0E88()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1002F0EC0(void *a1)
{
}

uint64_t sub_1002F0EC8()
{
  return sub_1002F0A3C();
}

unint64_t sub_1002F0ED0()
{
  unint64_t result = qword_100799C38;
  if (!qword_100799C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100799C38);
  }
  return result;
}

unint64_t sub_1002F0F24()
{
  unint64_t result = qword_100799C40;
  if (!qword_100799C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100799C40);
  }
  return result;
}

uint64_t sub_1002F0F78(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100799C48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002F0FE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1002F103C(uint64_t a1)
{
  return a1;
}

unsigned char *storeEnumTagSinglePayload for TTRIShowTodayPresenter.ActionMenuCustomItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002F115CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowTodayPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowTodayPresenter.ActionMenuCustomItem;
}

unint64_t sub_1002F1198()
{
  unint64_t result = qword_100799C60;
  if (!qword_100799C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100799C60);
  }
  return result;
}

char *sub_1002F11EC(uint64_t *a1, void **a2, uint64_t a3)
{
  uint64_t v93 = a1;
  uint64_t v94 = a3;
  uint64_t v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v85 = (char *)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v86 = (char *)&v82 - v7;
  uint64_t v92 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v92);
  uint64_t v98 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRListType.SortingCapability();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v88 = (uint64_t)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v97 = (uint64_t)&v82 - v12;
  uint64_t v96 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v13 = *(void *)(v96 - 8);
  uint64_t v14 = __chkstk_darwin(v96);
  uint64_t v16 = (char *)&v82 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v95 = (char *)&v82 - v17;
  uint64_t v18 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v21 - 8);
  long long v23 = (void **)((char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1002F216C((uint64_t)a2, (uint64_t)v23, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.dueDates.getter();
  uint64_t v87 = (uint64_t)v23;
  sub_100055D48(v23, (uint64_t)v20, 0, (uint64_t)v102);
  uint64_t v24 = TTRListType.PredefinedSmartListType.smartList(in:)();
  if (v24)
  {
    *(void *)&v101[0] = sub_100106818();
    *((void *)&v101[0] + 1) = &protocol witness table for REMSmartList;
    uint64_t v25 = (void *)v24;
  }
  else
  {
    uint64_t v25 = 0;
    long long v100 = 0u;
    v101[0] = 0u;
  }
  LODWORD(v83) = v24 != 0;
  uint64_t v99 = v24;
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
  id v26 = v25;
  uint64_t v27 = v95;
  static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
  uint64_t v28 = v96;
  uint64_t v90 = *(void (**)(char *, uint64_t))(v13 + 8);
  uint64_t v91 = v13 + 8;
  v90(v16, v96);
  sub_10003B6F8((uint64_t)&v99, &qword_100787480);
  uint64_t v84 = a2;
  __int16 v29 = *a2;
  id v89 = v26;
  id v30 = v29;
  id v31 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.todayListIsGrouped.getter();

  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  v32(v16, v27, v28);
  type metadata accessor for TTRShowTodayGroupsDataModelSource();
  swift_allocObject();
  uint64_t v33 = TTRShowTodayGroupsDataModelSource.init(store:smartList:grouped:countCompleted:sortingStyle:canChangeSortingStyle:)();
  v32(v16, v27, v28);
  uint64_t v34 = v97;
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)();
  id v35 = v102[0];
  uint64_t v36 = v88;
  sub_1002F216C(v34, v88, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  type metadata accessor for TTRShowTodayViewModelSource();
  uint64_t v37 = (uint64_t *)swift_allocObject();
  swift_retain();
  id v38 = v35;
  uint64_t v39 = sub_1002F1CC4(v33, v38, v36, v37);
  swift_release();

  uint64_t v40 = v87;
  sub_1002F216C((uint64_t)v84, v87, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  sub_100057134((uint64_t)v102, (uint64_t)&v99);
  swift_retain();
  uint64_t v88 = v39;
  sub_100056B24(v40, (uint64_t)&v99, v39, (uint64_t)&off_1007512D8, v98);
  uint64_t v41 = (uint64_t)v86;
  sub_100056CAC((uint64_t)v86);
  uint64_t v87 = type metadata accessor for TTRIShowTodayPresenter();
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = (uint64_t *)(v42 + OBJC_IVAR____TtC9Reminders22TTRIShowTodayPresenter_dataModelSource);
  *uint64_t v43 = v33;
  v43[1] = (uint64_t)&protocol witness table for TTRShowTodayGroupsDataModelSource;
  uint64_t v44 = (uint64_t)v85;
  sub_1002F216C(v41, (uint64_t)v85, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v84 = (void *)v33;
  swift_retain();
  uint64_t v45 = v94;
  swift_unknownObjectRetain();
  uint64_t v46 = sub_1003585DC(v44, v45, v42);
  sub_1002F21D4(v41, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v47 = *(void *)(v46 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v49 = *(uint64_t (**)(uint64_t, uint64_t))(v47 + 104);
  swift_retain();
  if (v49(ObjectType, v47))
  {
    uint64_t v51 = v50;
    uint64_t v52 = swift_getObjectType();
    LOBYTE(v51) = (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(v52, v51);
    swift_release();
    swift_unknownObjectRelease();
    char v53 = v51 & 1;
  }
  else
  {
    swift_release();
    char v53 = 0;
  }
  uint64_t v54 = sub_1001D0C84(v53, v46);
  uint64_t v85 = v55;
  uint64_t v57 = v56;
  uint64_t v59 = v58;
  uint64_t v83 = swift_getObjectType();
  *(void *)(v46 + 24) = *(void *)(v59 + 8);
  uint64_t v94 = v57;
  swift_unknownObjectWeakAssign();
  uint64_t v60 = *(void *)(v46 + 144);
  uint64_t v61 = swift_getObjectType();
  uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t))(v60 + 104);
  swift_retain_n();
  unint64_t v63 = v54;
  if (v62(v61, v60))
  {
    uint64_t v65 = v64;
    uint64_t v66 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v65 + 16))(v66, v65);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v67 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v86 = v63;
  uint64_t v68 = (void *)sub_10035A06C(v46);
  swift_release();

  int v69 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v59 + 32);
  uint64_t v85 = v68;
  v69(v68, &off_1007464D0, v83, v59);
  uint64_t v70 = (char *)v102[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v70 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v71 = (char *)v102[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v71 + 1) = &protocol witness table for TTRShowTodayGroupsDataModelSource;
  uint64_t v72 = (uint64_t)v84;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  char v73 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v72 + 424);
  uint64_t v74 = swift_retain();
  v73(v74, &off_10073FE20);
  swift_retain();
  uint64_t v75 = swift_retain();
  sub_1005B1F9C(v75, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v76 = v98;
  *(void *)(*(void *)(v98 + *(int *)(v92 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v103, (uint64_t)&v99);
  *(_OWORD *)((char *)v101 + 8) = v104;
  *(_OWORD *)((char *)&v101[1] + 8) = v105;
  *(void *)(v104 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)&v99);
  sub_100038DC0((uint64_t)v106, (uint64_t)&v99);
  uint64_t v77 = v107;
  *((void *)&v101[0] + 1) = v106[4];
  *(void *)&v101[1] = v107;
  uint64_t v78 = swift_getObjectType();
  uint64_t v79 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v77 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v79(v46, &off_10073CA90, v78, v77);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)&v99);
  uint64_t v80 = v93;
  v93[3] = v87;
  v80[4] = (uint64_t)&off_100742D10;
  *uint64_t v80 = v46;

  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v76, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_1002F21D4(v97, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  v90(v95, v96);
  sub_100057B44(v102);
  return v85;
}

id TTRIShowTodayAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTodayAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowTodayAssembly()
{
  return self;
}

id TTRIShowTodayAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowTodayAssembly();
  return [super dealloc];
}

uint64_t sub_1002F1CC4(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  id v39 = a2;
  uint64_t v40 = a3;
  uint64_t v42 = *a4;
  uint64_t v43 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_smartList) = 0;
  uint64_t v16 = (uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_groupDataModelSource);
  *uint64_t v16 = 0;
  v16[1] = 0;
  uint64_t v17 = (char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_completedRemindersCount;
  *(void *)uint64_t v17 = 0;
  v17[8] = 1;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_currentLocation) = 0;
  *(uint64_t *)((char *)a4
             + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_sectionHeadersNeedingPlaceholderReminderItems) = (uint64_t)&_swiftEmptySetSingleton;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_tappedSectionHeaders) = (uint64_t)&_swiftEmptySetSingleton;
  *(uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource_lastSectionsSnapshot) = 0;
  *(uint64_t *)((char *)a4
             + OBJC_IVAR____TtC9Reminders27TTRShowTodayViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)a1 + 440);
  uint64_t v19 = swift_retain();
  uint64_t v20 = v18(v19);
  uint64_t v21 = *(void **)((char *)a4 + v15);
  *(uint64_t *)((char *)a4 + v15) = v20;

  *uint64_t v16 = a1;
  v16[1] = (uint64_t)&protocol witness table for TTRShowTodayGroupsDataModelSource;
  swift_retain();
  swift_release();
  swift_unknownObjectRelease();
  sub_1002F216C(a3, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain();
  uint64_t v22 = sub_100359DC4(a1, (uint64_t)v39, (uint64_t)v14, (uint64_t)a4);
  swift_retain();
  sub_10024BA58((uint64_t)v11);
  uint64_t v23 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 0, 1, v23);
  sub_1005885DC((uint64_t)v11);
  sub_10003B6F8((uint64_t)v11, &qword_100786EF0);
  uint64_t v24 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v25 = v24;
  static REMAnalyticsManager.shared.getter();
  uint64_t v26 = sub_10003B754(&qword_10078D258);
  uint64_t v27 = (uint64_t *)&v8[*(int *)(v26 + 48)];
  uint64_t v28 = (uint64_t *)&v8[*(int *)(v26 + 80)];
  uint64_t v29 = enum case for REMRemindersOpenUserOperation.SmartListType.today(_:);
  uint64_t v30 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v8, v29, v30);
  uint64_t v31 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  uint64_t v32 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v8, v31, v32);
  uint64_t *v27 = TTRUserDefaults.activitySessionId.getter();
  v27[1] = v33;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *uint64_t v28 = _typeName(_:qualified:)();
  v28[1] = v34;
  uint64_t v35 = v41;
  uint64_t v36 = v43;
  (*(void (**)(char *, void, uint64_t))(v41 + 104))(v8, enum case for REMAnalyticsEvent.openListUserOperation(_:), v43);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1002F21D4(v40, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v8, v36);
  return v22;
}

uint64_t sub_1002F216C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002F21D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1002F2234()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100799C90);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100799C90);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002F2448()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_100799CD0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_100799CD0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002F2510(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  if (qword_100785468 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_100799CD0);
  swift_bridgeObjectRetain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000385A8(a1, a2, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "PencilAutoCommitTracker will begin writing in %s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  v3[4] = a1;
  v3[5] = a2;
  swift_bridgeObjectRelease();
  if (!v3[2]) {
    return swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_10052AF80();
  return swift_unknownObjectRelease();
}

uint64_t sub_1002F2700(uint64_t a1, uint64_t a2)
{
  uint64_t v39 = a2;
  uint64_t v41 = a1;
  uint64_t v3 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  v35[0] = (uint64_t)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_10003B754(&qword_100799D98);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v36);
  uint64_t v9 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v10 - 8);
  uint64_t v37 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v35 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v35 - v16;
  uint64_t v40 = v2;
  if (*(void *)(v2 + 16))
  {
    TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v18(v17, 0, 1, v3);
  }
  else
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    v18((char *)v35 - v16, 1, 1, v3);
  }
  v35[1] = v41 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item;
  sub_10005FCB8(v41 + OBJC_IVAR____TtC9RemindersP33_1A71EBEB5B774417A77A4912B4DA8E4226PencilWritingStateReporter_item, (uint64_t)v9);
  TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
  sub_1002F3090((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  v18(v14, 0, 1, v3);
  uint64_t v19 = (uint64_t)&v7[*(int *)(v38 + 48)];
  sub_100057068((uint64_t)v17, (uint64_t)v7);
  sub_100057068((uint64_t)v14, v19);
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v7, 1, v3) == 1)
  {
    sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10078E360);
    sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E360);
    int v21 = v20(v19, 1, v3);
    uint64_t v22 = v41;
    if (v21 == 1)
    {
      sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_10078E360);
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v23 = v37;
    sub_100057068((uint64_t)v7, v37);
    if (v20(v19, 1, v3) != 1)
    {
      uint64_t v30 = v35[0];
      sub_1000FF4BC(v19, v35[0]);
      char v31 = static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
      sub_1002F3090(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10078E360);
      sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E360);
      sub_1002F3090(v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
      sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_10078E360);
      uint64_t v22 = v41;
      if (v31) {
        goto LABEL_16;
      }
      goto LABEL_10;
    }
    sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10078E360);
    sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E360);
    sub_1002F3090(v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v22 = v41;
  }
  sub_10003B6F8((uint64_t)v7, &qword_100799D98);
LABEL_10:
  if (qword_100785468 != -1) {
    swift_once();
  }
  uint64_t v24 = type metadata accessor for Logger();
  sub_100018BF8(v24, (uint64_t)qword_100799CD0);
  swift_unknownObjectRetain_n();
  id v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315138;
    sub_1000AA940();
    uint64_t v28 = TTRTreeStorageItem.treeItemDescription.getter();
    uint64_t v42 = sub_1000385A8(v28, v29, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "PencilAutoCommitTracker got pencilWritingStateReporter for %s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_unknownObjectRelease_n();
  }
LABEL_16:
  uint64_t v33 = v39;
  uint64_t v32 = v40;
  *(void *)(v40 + 16) = v22;
  *(void *)(v32 + 24) = v33;
  swift_unknownObjectRelease();
  return swift_unknownObjectRetain();
}

uint64_t sub_1002F2CD8(uint64_t a1, unint64_t a2)
{
  if (qword_100785468 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_100799CD0);
  swift_bridgeObjectRetain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v16[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_1000385A8(a1, a2, v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "PencilAutoCommitTracker did finish writing in %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = *(void *)(v2 + 40);
  if (!v9 || (*(void *)(v2 + 32) != a1 || v9 != a2) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    swift_retain_n();
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      *(_OWORD *)uint64_t v16 = *(_OWORD *)(v2 + 32);
      sub_10003B754(&qword_10078E3C8);
      uint64_t v13 = Optional.descriptionOrNil.getter();
      v16[0] = sub_1000385A8(v13, v14, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "PencilAutoCommitTracker: not getting didFinish first for %s", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(v2 + 16))
  {
    swift_unknownObjectRetain();
    sub_10052A50C();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002F302C()
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRIRemindersListPencilAutoCommitTracker()
{
  return self;
}

uint64_t sub_1002F3090(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_1002F3258()
{
  return sub_1002F3A38(type metadata accessor for TTRIApplication);
}

uint64_t sub_1002F3270@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v5 = (void *)result;
    id v6 = v3;
    if (![v5 _isKeyWindowScene])
    {

      goto LABEL_7;
    }
    id v7 = [v5 delegate];

    if (!v7)
    {
LABEL_7:
      uint64_t result = 0;
      goto LABEL_8;
    }
    type metadata accessor for TTRIWindowSceneController(0);
    uint64_t result = swift_dynamicCastClass();
    if (!result)
    {
      swift_unknownObjectRelease();
      goto LABEL_7;
    }
  }
LABEL_8:
  *a2 = result;
  return result;
}

void sub_1002F3694(void *a1)
{
  v16.receiver = v1;
  v16.super_class = (Class)type metadata accessor for TTRIAppDelegate();
  [super buildMenuWithBuilder:a1];
  sub_1000368FC(0, (unint64_t *)&unk_100799F70);
  id v3 = [a1 system];
  id v4 = [self mainSystem];
  char v5 = static NSObject.== infix(_:_:)();

  if (v5)
  {
    Class isa = sub_1006464BC().super.super.isa;
    [a1 insertChildMenu:isa atStartOfMenuForIdentifier:UIMenuFile];

    Class v7 = sub_1006467F0();
    [a1 insertChildMenu:v7 atEndOfMenuForIdentifier:UIMenuEdit];

    if (!UIApp)
    {
      __break(1u);
      return;
    }
    id v8 = [UIApp connectedScenes];
    sub_1000368FC(0, &qword_100799F48);
    sub_1000280B4((unint64_t *)&qword_100799F50, &qword_100799F48);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10003B754(&qword_100799F58);
    type metadata accessor for TTRIWindowSceneController(0);
    sub_100037EA0((unint64_t *)&qword_100799F60, &qword_100799F58);
    Sequence.firstMap<A>(_:)();
    swift_bridgeObjectRelease();
    if (v15)
    {
      uint64_t v9 = &v15[OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface];
      swift_beginAccess();
      uint64_t v10 = *((void *)v9 + 3);
      if (v10)
      {
        os_log_type_t v11 = sub_100038D28(v9, v10);
        sub_100038D28((void *)(*v11 + 48), *(void *)(*v11 + 72));
        swift_unknownObjectRetain();
        uint64_t v12 = sub_10040F57C();

        swift_unknownObjectRelease();
LABEL_8:
        Class v13 = sub_10064737C((uint64_t)v12).super.super.isa;
        swift_bridgeObjectRelease();
        [a1 insertChildMenu:v13 atStartOfMenuForIdentifier:UIMenuView];

        Class v14 = sub_100647F0C();
        [a1 insertChildMenu:v14 atEndOfMenuForIdentifier:UIMenuFormat];

        return;
      }
    }
    uint64_t v12 = _swiftEmptyArrayStorage;
    goto LABEL_8;
  }
}

id sub_1002F3A20()
{
  return sub_1002F3A38(type metadata accessor for TTRIAppDelegate);
}

id sub_1002F3A38(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t sub_1002F3B18()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = *(id *)(result + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
    id v3 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
    sub_100057580(v2, (uint64_t)v3);
    sub_10042B2A8();

    return swift_release();
  }
  return result;
}

void sub_1002F3BD4(void *a1, int a2, void *a3, void *a4, void *aBlock, void (*a6)(id, void *))
{
  uint64_t v10 = _Block_copy(aBlock);
  _Block_copy(v10);
  id v11 = a3;
  id v12 = a4;
  id v13 = a1;
  a6(v12, v10);
  _Block_release(v10);
  _Block_release(v10);
}

void sub_1002F3CEC()
{
  uint64_t v1 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler);
  if ((*(unsigned char *)(v0
                 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_backgroundTaskIdentifierForApplicationVisibilityChangeHandler
                 + 8) & 1) == 0)
  {
    uint64_t v2 = *v1;
    id v3 = [self sharedApplication];
    [v3 endBackgroundTask:v2];

    uint64_t *v1 = 0;
    *((unsigned char *)v1 + 8) = 1;
    if (qword_100785470 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_100799DA0);
    char v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      Class v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Class v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "application did tear down background task for application visibility change handler", v7, 2u);
      swift_slowDealloc();
    }
  }
  id v8 = [self sharedApplication];
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v16[4] = sub_1002F4E04;
  v16[5] = v9;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  objc_super v16[2] = sub_10000AD88;
  uint64_t v16[3] = &unk_100742D90;
  uint64_t v10 = _Block_copy(v16);
  swift_release();
  id v11 = [v8 beginBackgroundTaskWithExpirationHandler:v10];
  _Block_release(v10);

  uint64_t *v1 = (uint64_t)v11;
  *((unsigned char *)v1 + 8) = 0;
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100018BF8(v12, (uint64_t)qword_100799DA0);
  id v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "application did set up background task for application visibility change handler", v15, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1002F3FC4()
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018BF8(v0, (uint64_t)qword_100799DA0);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "application will expire background task for application visibility change handler", v3, 2u);
    swift_slowDealloc();
  }

  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v5 = (void *)result;
    uint64_t v6 = sub_10000D9D8();

    if (*(void *)(v6 + 64))
    {
      *(void *)(v6 + 64) = 0;
      swift_release();
      if (qword_100785598 != -1) {
        swift_once();
      }
      sub_100018BF8(v0, (uint64_t)qword_10079ED68);
      Class v7 = Logger.logObject.getter();
      os_log_type_t v8 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v7, v8))
      {
        uint64_t v9 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v9 = 0;
        _os_log_impl((void *)&_mh_execute_header, v7, v8, "Application visibility change handler did tear down subscription for timeout", v9, 2u);
        swift_slowDealloc();
      }
    }
    sub_100017EE4(1, 0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1002F41BC(uint64_t a1, uint64_t a2)
{
  uint64_t result = UIApp;
  if (UIApp)
  {
    id v5 = [UIApp connectedScenes];
    sub_1000368FC(0, &qword_100799F48);
    sub_1000280B4((unint64_t *)&qword_100799F50, &qword_100799F48);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10003B754(&qword_100799F58);
    type metadata accessor for TTRIWindowSceneController(0);
    sub_100037EA0((unint64_t *)&qword_100799F60, &qword_100799F58);
    Sequence.firstMap<A>(_:)();
    swift_bridgeObjectRelease();
    if (v7)
    {
      BOOL v6 = sub_100652A94(a1, a2);
    }
    else
    {
      return 0;
    }
    return v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002F4334(void *a1, void (**aBlock)(void, void))
{
  if (UIApp)
  {
    id v4 = [UIApp connectedScenes];
    sub_1000368FC(0, &qword_100799F48);
    sub_1000280B4((unint64_t *)&qword_100799F50, &qword_100799F48);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10003B754(&qword_100799F58);
    type metadata accessor for TTRIWindowSceneController(0);
    sub_100037EA0((unint64_t *)&qword_100799F60, &qword_100799F58);
    Sequence.firstMap<A>(_:)();
    swift_bridgeObjectRelease();
    if (v6)
    {
      BOOL v5 = sub_100652C58(a1);
    }
    else
    {
      BOOL v5 = 0;
    }
    ((void (**)(void, BOOL))aBlock)[2](aBlock, v5);
  }
  else
  {
    _Block_release(aBlock);
    __break(1u);
  }
}

uint64_t sub_1002F44C0(uint64_t a1, unint64_t a2)
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_100799DA0);
  swift_bridgeObjectRetain_n();
  BOOL v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    Class v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)Class v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_1000385A8(a1, a2, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "UNEXPECTED: application willContinueUserActivityWithType {userActivityType: %s}", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return 0;
}

void sub_1002F466C(void *a1)
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_100799DA0);
  id v8 = a1;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    BOOL v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)BOOL v5 = 136315138;
    uint64_t v6 = NSUserActivity.ttrDescription.getter();
    sub_1000385A8(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "application didUpdate userActivity {userActivity: %s}", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1002F4840(void *a1)
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_100799DA0);
  id v3 = a1;
  os_log_type_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v7 = NSUserActivity.ttrDescription.getter();
    sub_1000385A8(v7, v8, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "UNEXPECTED: application continue userActivity {userActivity: %s}", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return 0;
}

void sub_1002F49E4(void *a1)
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_100799DA0);
  id v8 = a1;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)os_log_type_t v5 = 138412290;
    id v7 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v8;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "UNEXPECTED: application userDidAcceptCloudKitShareWith {cloudKitShareMetadata: %@}", v5, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1002F4BB0()
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_100799DA0);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders15TTRIAppDelegate_store);
  static TTRAppDelegateUtils.triggerSync(store:reason:)();

  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    os_log_type_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Update AppShortcut parameters", v5, 2u);
    swift_slowDealloc();
  }

  sub_1002F4D78();
  static AppShortcutsProvider.updateAppShortcutParameters()();
  TTRWidgetRefresher.tearDownSubscriptionToReloadWidgetTimelinesUponStoreChange()();
  TTRWidgetRefresher.reloadWidgetTimelines()();
  uint64_t v6 = sub_10000D9D8();
  id v7 = [self sharedApplication];
  id v8 = [v7 applicationState];

  char v9 = *(unsigned char *)(v6 + 32);
  *(unsigned char *)(v6 + 32) = v8 == 0;
  sub_100012D10(v9);

  return swift_release();
}

unint64_t sub_1002F4D78()
{
  unint64_t result = qword_100799F18;
  if (!qword_100799F18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100799F18);
  }
  return result;
}

uint64_t sub_1002F4DCC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F4E04()
{
  return sub_1002F3FC4();
}

uint64_t sub_1002F4E0C()
{
  return sub_1002F3B18();
}

uint64_t sub_1002F4E14()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F4E4C(void *a1, uint64_t a2)
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_100799DA0);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    id v9 = [v5 request];
    id v10 = [v9 content];

    id v11 = [v10 body];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v14 = v13;

    sub_1000385A8(v12, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "App willPresent notification: %s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a2, 27);
}

void sub_1002F507C(void *a1, void (**a2)(void))
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_100799DA0);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)id v8 = 136315138;
    id v9 = [v5 actionIdentifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    sub_1000385A8(v10, v12, (uint64_t *)&v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "App did receive UNNotificationResponse: {actionIdentifier=%s}", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (UIApp)
  {
    id v13 = [UIApp connectedScenes];
    sub_1000368FC(0, &qword_100799F48);
    sub_1000280B4((unint64_t *)&qword_100799F50, &qword_100799F48);
    static Set._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10003B754(&qword_100799F58);
    type metadata accessor for TTRIWindowSceneController(0);
    sub_100037EA0((unint64_t *)&qword_100799F60, &qword_100799F58);
    Sequence.firstMap<A>(_:)();
    swift_bridgeObjectRelease();
    unint64_t v14 = v15;
    if (v15)
    {
      sub_1006530B4(v5);
    }
    a2[2](a2);
  }
  else
  {
    _Block_release(a2);
    __break(1u);
  }
}

void sub_1002F539C(void *a1)
{
  if (qword_100785470 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_100799DA0);
  id v12 = a1;
  id v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)id v5 = 136315138;
    if (a1)
    {
      id v6 = [v12 request];
      id v7 = [v6 content];

      id v8 = [v7 body];
      uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v10;
    }
    else
    {
      unint64_t v11 = 0xE300000000000000;
      uint64_t v9 = 7104878;
    }
    sub_1000385A8(v9, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "App openSettingsFor: %s", v5, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void *sub_1002F55EC(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a3 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v13 = v8;
      char v11 = a1(&v13);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return v9;
      }
      if (v11)
      {
        swift_bridgeObjectRelease();
        return v9;
      }

      ++v7;
      if (v10 == v6) {
        goto LABEL_11;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
  }
LABEL_11:
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_1002F5894()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_10078E620);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v5 = *(void *)(v4 - 8);
  double v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (char *)[v0 containerView];
  uint64_t v10 = OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache;
  *(void *)&v9[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = *(void *)&v0[OBJC_IVAR____TtC9Reminders36TTRIAccountsListsViewPinnedListsCell_dynamicDateGlyphCache];
  swift_retain();

  swift_release();
  unint64_t result = [v0 containerView];
  if (result)
  {
    id v12 = result;
    uint64_t v13 = (uint64_t)result + OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_selectedPinnedList;
    swift_beginAccess();
    sub_10002E018(v13, (uint64_t)v3);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {
      sub_10002ED34((uint64_t)v3);
      return _swiftEmptyArrayStorage;
    }
    sub_10003BFF4((uint64_t)v3, (uint64_t)v8);
    unint64_t v14 = (char *)[v0 containerView];
    *(void *)&v14[OBJC_IVAR____TtC9Reminders19TTRIPinnedListsView_dynamicDateGlyphCache] = *(void *)&v0[v10];
    swift_retain();

    swift_release();
    unint64_t result = [v0 containerView];
    if (result)
    {
      uint64_t v15 = result;
      uint64_t v16 = sub_10003C130();
      __chkstk_darwin(v16);
      *(&v20 - 2) = (uint64_t)v8;
      uint64_t v17 = sub_1002F55EC((uint64_t (*)(id *))sub_1002EB8E8, (uint64_t)(&v20 - 4), (unint64_t)v16);

      swift_bridgeObjectRelease();
      if (v17)
      {
        sub_10003B754((uint64_t *)&unk_1007894B0);
        uint64_t v18 = swift_allocObject();
        *(_OWORD *)(v18 + 16) = xmmword_10066D470;
        *(void *)(v18 + 32) = v17;
        uint64_t v21 = v18;
        specialized Array._endMutation()();
        uint64_t v19 = v21;
        sub_10003BF98((uint64_t)v8);
        return (void *)v19;
      }
      sub_10003BF98((uint64_t)v8);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1002F5CC8(uint64_t a1, void *a2)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    id v4 = [a2 items];
    sub_100055B3C();
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    sub_100406BB8(v5, a1, (uint64_t)v10);
    sub_100028C3C((uint64_t)v10, (uint64_t)v11, &qword_10079A090);
    if (v11[32] == 255)
    {
      uint64_t v6 = 0;
    }
    else
    {
      sub_100028C3C((uint64_t)v11, (uint64_t)v12, &qword_100788F00);
      sub_10009661C((uint64_t)v10);
      uint64_t v6 = 3;
    }
    swift_bridgeObjectRelease();
    id v9 = [objc_allocWithZone((Class)UIDropProposal) initWithDropOperation:v6];
    swift_unknownObjectRelease();
    return v9;
  }
  else
  {
    id v7 = objc_allocWithZone((Class)UIDropProposal);
    return [v7 initWithDropOperation:0];
  }
}

uint64_t sub_1002F5E2C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079A098);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079A098);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002F5EF4()
{
  if (qword_100785788 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_1007BBDB0;
  uint64_t v31 = qword_1007BBDB0;
  sub_10003B754(&qword_1007907A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  sub_1002F7FC0();
  swift_bridgeObjectRetain();
  AnyHashable.init<A>(_:)();
  *(unsigned char *)(inited + 72) = 1;
  AnyHashable.init<A>(_:)();
  *(unsigned char *)(inited + 120) = 1;
  LOBYTE(v27) = 4;
  __int16 v30 = 256;
  sub_1002F0F24();
  uint64_t v2 = Array<A>.index<A>(forInsertingAt:where:)();
  char v4 = v3;
  sub_1002F0F78((uint64_t)&v27, (uint64_t)v26);
  if (v4)
  {
    sub_1002F0F78((uint64_t)v26, (uint64_t)&v15);
    if (v21)
    {
      if (v21 == 1)
      {
        sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v22);
LABEL_13:
        sub_10003B6F8((uint64_t)&v22, &qword_100799C50);
        uint64_t v2 = *(void *)(v0 + 16);
        goto LABEL_14;
      }
      if (v20 || v18 | v19 | v15 | v17 | v16)
      {
        uint64_t v24 = 0;
        long long v22 = 0u;
        long long v23 = 0u;
        char v25 = -1;
        goto LABEL_13;
      }
      uint64_t v24 = 0;
      long long v22 = 0u;
      long long v23 = 0u;
      char v25 = -1;
    }
    else
    {
      sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v22);
    }
    sub_10003B6F8((uint64_t)&v22, &qword_100799C50);
    uint64_t v2 = 0;
  }
LABEL_14:
  sub_10003B6F8((uint64_t)v26, &qword_100799C48);
  sub_10054E9F8(v2, v2, inited);
  swift_bridgeObjectRelease();
  sub_10003B6F8((uint64_t)&v27, &qword_100799C48);
  LOBYTE(v27) = 2;
  AnyHashable.init<A>(_:)();
  char v25 = 1;
  uint64_t v27 = 1;
  long long v28 = 0u;
  long long v29 = 0u;
  __int16 v30 = 512;
  uint64_t v5 = swift_initStackObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066C6F0;
  sub_1001DC898((uint64_t)&v22, v5 + 32);
  uint64_t v6 = v31;
  uint64_t v7 = Array<A>.index<A>(forInsertingAt:where:)();
  char v9 = v8;
  sub_1002F0F78((uint64_t)&v27, (uint64_t)v26);
  if (v9)
  {
    sub_1002F0F78((uint64_t)v26, (uint64_t)&v15);
    if (v21)
    {
      if (v21 == 1)
      {
        sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v11);
LABEL_24:
        sub_10003B6F8((uint64_t)&v11, &qword_100799C50);
        uint64_t v7 = *(void *)(v6 + 16);
        goto LABEL_25;
      }
      if (v20 || v18 | v19 | v15 | v17 | v16)
      {
        uint64_t v13 = 0;
        long long v11 = 0u;
        long long v12 = 0u;
        char v14 = -1;
        goto LABEL_24;
      }
      uint64_t v13 = 0;
      long long v11 = 0u;
      long long v12 = 0u;
      char v14 = -1;
    }
    else
    {
      sub_1002F0FE0((uint64_t)&v15, (uint64_t)&v11);
    }
    sub_10003B6F8((uint64_t)&v11, &qword_100799C50);
    uint64_t v7 = 0;
  }
LABEL_25:
  sub_10003B6F8((uint64_t)v26, &qword_100799C48);
  sub_10054E9F8(v7, v7, v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  sub_10003B6F8((uint64_t)&v27, &qword_100799C48);
  sub_1002F103C((uint64_t)&v22);
  return v31;
}

uint64_t sub_1002F631C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v2 - 8);
  char v4 = &v52[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_10003B754(&qword_100796528);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)&v52[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)&v52[-v9];
  AnyHashable.base.getter();
  if (!swift_dynamicCast()) {
    return 0;
  }
  if (v53)
  {
    if (v53 != 1)
    {
      uint64_t v43 = *(void *)(v0 + 144);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v43 + 136))(ObjectType, v43);
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v4, 1, v16) == 1)
      {
        sub_10003B6F8((uint64_t)v4, &qword_100786EF0);
        return 0;
      }
      goto LABEL_21;
    }
    uint64_t v11 = *(void *)(v0 + 144);
    uint64_t v12 = swift_getObjectType();
    if (!(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 72))(v12, v11))
    {
      uint64_t v49 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v7, 1, 1, v49);
      return 0;
    }
    uint64_t v14 = v13;
    uint64_t v15 = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v14 + 8) + 8))(v15);
    swift_unknownObjectRelease();
    uint64_t v16 = type metadata accessor for REMHashtagLabelSpecifier();
    uint64_t v17 = *(void *)(v16 - 8);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v17 + 56))(v7, 0, 1, v16);
    int v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v17 + 88))(v7, v16);
    if (v18 == enum case for REMHashtagLabelSpecifier.labels(_:))
    {
      (*(void (**)(uint64_t *, uint64_t))(v17 + 96))(v7, v16);
      uint64_t v19 = *v7;
      swift_bridgeObjectRelease();
      char v20 = (char *)v7 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
      if (*(void *)(v19 + 16))
      {
        uint64_t v21 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
        (*(void (**)(char *, uint64_t))(*(void *)(v21 - 8) + 8))(v20, v21);
        uint64_t v22 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule + 8);
        uint64_t v23 = swift_getObjectType();
        (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(v23, v22);
        sub_1002F0E48();
        static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)();
        NSString v24 = String._bridgeToObjectiveC()();
        [self _systemImageNamed:v24];

        uint64_t v25 = swift_allocObject();
        swift_weakInit();
        uint64_t v26 = swift_allocObject();
        *(void *)(v26 + 16) = v25;
        *(void *)(v26 + 24) = v19;
        return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      }
      goto LABEL_27;
    }
LABEL_16:
    if (v18 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
      || v18 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
    {
      return 0;
    }
    _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
LABEL_21:
    int v46 = v4[*(int *)(v16 + 92)];
    sub_1002F7C20((uint64_t)v4);
    if (v46 == 1)
    {
      NSString v47 = String._bridgeToObjectiveC()();
      [self _systemImageNamed:v47];

      sub_1002F0E48();
      static TTRLocalizableStrings.RemindersList.createSmartList.getter();
      swift_allocObject();
      swift_weakInit();
      return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
    return 0;
  }
  uint64_t v27 = *(void *)(v0 + 144);
  uint64_t v28 = swift_getObjectType();
  if (!(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 72))(v28, v27))
  {
    uint64_t v50 = type metadata accessor for REMHashtagLabelSpecifier();
    (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v10, 1, 1, v50);
    return 0;
  }
  uint64_t v30 = v29;
  uint64_t v31 = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v30 + 8) + 8))(v31);
  swift_unknownObjectRelease();
  uint64_t v16 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v32 = *(void *)(v16 - 8);
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v32 + 56))(v10, 0, 1, v16);
  int v18 = (*(uint64_t (**)(uint64_t *, uint64_t))(v32 + 88))(v10, v16);
  if (v18 != enum case for REMHashtagLabelSpecifier.labels(_:)) {
    goto LABEL_16;
  }
  (*(void (**)(uint64_t *, uint64_t))(v32 + 96))(v10, v16);
  uint64_t v33 = *v10;
  swift_bridgeObjectRelease();
  char v20 = (char *)v10 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
  if (!*(void *)(v33 + 16))
  {
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v51 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    (*(void (**)(char *, uint64_t))(*(void *)(v51 - 8) + 8))(v20, v51);
    return 0;
  }
  uint64_t v34 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
  (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v20, v34);
  uint64_t v35 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_hashtagAssociationModule + 8);
  uint64_t v36 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v35);
  if (*(void *)(v33 + 16) == 1)
  {
    uint64_t v37 = sub_1000FFDD4(v33);
    uint64_t v39 = v38;
    swift_bridgeObjectRelease();
    if (v39)
    {
      sub_1002F0E48();
      static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
      NSString v40 = String._bridgeToObjectiveC()();
      [self _systemImageNamed:v40];

      uint64_t v41 = swift_allocObject();
      swift_weakInit();
      uint64_t v42 = (void *)swift_allocObject();
      v42[2] = v41;
      v42[3] = v37;
      v42[4] = v39;
      return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return 0;
}

uint64_t sub_1002F6BB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = result;
    if (qword_100785478 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_10079A098);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    uint64_t v12 = *(void *)(v10 + 88);
    memset(v18, 0, sizeof(v18));
    uint64_t v19 = 0;
    long long v20 = xmmword_10066D9A0;
    char v21 = 0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v14 = Strong;
      uint64_t v15 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v8, 1, 1, v15);
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = 0;
      *(void *)(v16 + 24) = 0;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = a3;
      *(void *)(v16 + 48) = a4;
      *(unsigned char *)(v16 + 56) = 1;
      sub_1000C77A4((uint64_t)v18, v16 + 64);
      *(void *)(v16 + 128) = v14;
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1000286A4((uint64_t)v8, (uint64_t)&unk_10079AA38, v16);
      swift_release();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1002F6DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if (qword_100785478 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_10079A098);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    uint64_t v10 = *(void *)(v8 + 88);
    memset(v16, 0, sizeof(v16));
    uint64_t v17 = 0;
    long long v18 = xmmword_10066D9A0;
    char v19 = 0;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = Strong;
      uint64_t v13 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v6, 1, 1, v13);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = 0;
      *(void *)(v14 + 24) = 0;
      *(void *)(v14 + 32) = v10;
      *(void *)(v14 + 40) = a3;
      *(void *)(v14 + 48) = 0;
      *(unsigned char *)(v14 + 56) = 0;
      sub_1000C77A4((uint64_t)v16, v14 + 64);
      *(void *)(v14 + 128) = v12;
      swift_unknownObjectRetain_n();
      swift_bridgeObjectRetain();
      sub_1000286A4((uint64_t)v6, (uint64_t)&unk_10079AA40, v14);
      swift_release();
      swift_unknownObjectRelease();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1002F7008()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1002F7060();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002F7060()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v8 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785478 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100018BF8(v11, (uint64_t)qword_10079A098);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(v0 + 144);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v12 + 136))(ObjectType, v12);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v10, 1, v14) == 1) {
    return sub_10003B6F8((uint64_t)v10, &qword_100786EF0);
  }
  int v16 = v10[*(int *)(v14 + 92)];
  uint64_t result = sub_1002F7C20((uint64_t)v10);
  if (v16 == 1)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 72))(ObjectType, v12);
    if (result)
    {
      uint64_t v18 = v17;
      uint64_t v19 = swift_getObjectType();
      (*(void (**)(uint64_t))(*(void *)(v18 + 8) + 8))(v19);
      swift_unknownObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v7, v4, v1);
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v21 = Strong;
        swift_getObjectType();
        if (swift_conformsToProtocol2()) {
          uint64_t v22 = v21;
        }
        else {
          uint64_t v22 = 0;
        }
        if (v22)
        {
          sub_100038D28((void *)(v22 + 48), *(void *)(v22 + 72));
          swift_retain();
          sub_10034C568((uint64_t)v7);
          swift_unknownObjectRelease();
          (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
          return swift_release();
        }
        swift_unknownObjectRelease();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
  }
  return result;
}

uint64_t sub_1002F73B0(uint64_t a1)
{
  sub_1001A6F1C(a1);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v4)
    {
      sub_100038D28((void *)(v4 + 48), *(void *)(v4 + 72));
      swift_retain();
      sub_10034C7DC(a1);
      swift_release();
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1002F7464()
{
  swift_unknownObjectRelease();

  return swift_unknownObjectRelease();
}

uint64_t sub_1002F74A4()
{
  sub_10019B470();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1002F7528()
{
  return type metadata accessor for TTRIShowTaggedPresenter();
}

uint64_t type metadata accessor for TTRIShowTaggedPresenter()
{
  uint64_t result = qword_10079A0E8;
  if (!qword_10079A0E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002F757C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002F75C0(int a1)
{
  LODWORD(v56) = a1;
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v55 = (char *)v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v49 - v7;
  __chkstk_darwin(v6);
  uint64_t v10 = (char *)v49 - v9;
  uint64_t v11 = type metadata accessor for REMHashtagLabelCollection();
  uint64_t v59 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v57 = v1;
  uint64_t v14 = *(void *)&v1[OBJC_IVAR____TtC9Reminders23TTRIShowTaggedPresenter_dataModelSource + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
  uint64_t v17 = v16;
  uint64_t v18 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v17 + 32))(v18, v17);
  REMHashtagLabelCollection.init(labels:)();
  uint64_t v54 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
  v54(v18, v17);
  uint64_t v58 = v13;
  REMHashtagLabelSpecifier.adjusted(toBeCompatibleWith:allowsLenientFallback:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v61 = v2;
  uint64_t v20 = v2;
  uint64_t v21 = v19;
  v19(v8, v20);
  if (REMHashtagLabelSpecifier.isEmpty.getter())
  {
    if (qword_100785478 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100018BF8(v22, (uint64_t)qword_10079A098);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "TTRIShowTaggedPresenter: represented list was deleted", v25, 2u);
      swift_slowDealloc();
    }

    [v57 representedListWasDeleted];
    goto LABEL_12;
  }
  if ((v56 & 1) == 0)
  {
LABEL_12:
    swift_unknownObjectRelease();
    uint64_t v42 = v60;
    uint64_t v41 = v61;
    uint64_t v44 = v58;
    uint64_t v43 = v59;
    goto LABEL_23;
  }
  char v53 = v21;
  uint64_t v56 = v3 + 8;
  if (qword_100785478 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100018BF8(v26, (uint64_t)qword_10079A098);
  uint64_t v27 = v55;
  uint64_t v28 = v61;
  (*(void (**)(char *, char *))(v3 + 16))(v55, v10);
  swift_unknownObjectRetain_n();
  uint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.default.getter();
  int v31 = v30;
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v32 = swift_slowAlloc();
    int v52 = v31;
    uint64_t v33 = v32;
    uint64_t v51 = swift_slowAlloc();
    uint64_t v63 = v51;
    *(_DWORD *)uint64_t v33 = 136315394;
    v49[1] = v33 + 4;
    os_log_t v50 = v29;
    v54(v18, v17);
    uint64_t v34 = REMHashtagLabelSpecifier.description.getter();
    unint64_t v36 = v35;
    uint64_t v37 = v27;
    uint64_t v38 = v53;
    v53(v8, v28);
    uint64_t v62 = sub_1000385A8(v34, v36, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v33 + 12) = 2080;
    uint64_t v39 = REMHashtagLabelSpecifier.description.getter();
    uint64_t v62 = sub_1000385A8(v39, v40, &v63);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v38(v37, v28);
    uint64_t v29 = v50;
    _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v52, "TTRIShowTaggedPresenter: adjust current selection {from: %s, to: %s}", (uint8_t *)v33, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_unknownObjectRelease_n();
    v53(v27, v28);
  }

  uint64_t v41 = v28;
  sub_1001A6F1C((uint64_t)v10);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v46 = Strong;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v47 = v46;
    }
    else {
      uint64_t v47 = 0;
    }
    if (v47)
    {
      sub_100038D28((void *)(v47 + 48), *(void *)(v47 + 72));
      swift_retain();
      sub_10034C7DC((uint64_t)v10);
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  swift_unknownObjectRelease();
  uint64_t v43 = v59;
  uint64_t v42 = v60;
  uint64_t v44 = v58;
  uint64_t v21 = v53;
LABEL_23:
  v21(v10, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v44, v42);
}

uint64_t sub_1002F7C20(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002F7C7C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002F7CB4()
{
  return sub_1002F7008();
}

uint64_t sub_1002F7CBC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1002F7CFC(uint64_t a1)
{
  return sub_1002F6DE4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1002F7D04()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002F7D44(uint64_t a1)
{
  return sub_1002F6BB0(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1002F7D54()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1002F7D60(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10003D2E4;
  return sub_1000C555C(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

uint64_t sub_1002F7E58()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1002F7D54();
  if ((~*(_DWORD *)(v0 + 104) & 0xFELL) != 0) {
    sub_1000A74D0(*(id *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
  }

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_1002F7ECC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10000C2D4;
  return sub_1000C555C(a1, v4, v5, v6, v7, v8, v9, v1 + 64);
}

unint64_t sub_1002F7FC0()
{
  unint64_t result = qword_10079AA48;
  if (!qword_10079AA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079AA48);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIShowTaggedPresenter.ActionMenuCustomItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002F80E0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowTaggedPresenter.ActionMenuCustomItem()
{
  return &type metadata for TTRIShowTaggedPresenter.ActionMenuCustomItem;
}

unint64_t sub_1002F811C()
{
  unint64_t result = qword_10079AA50;
  if (!qword_10079AA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079AA50);
  }
  return result;
}

uint64_t sub_1002F8170()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079AA58);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079AA58);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1002F8238(uint64_t a1, void *a2)
{
  uint64_t v3 = static TTRLocalizableStrings.Hashtags.deletingTagMessage(hashtags:)();
  uint64_t v5 = v4;
  sub_100038D28(a2, a2[3]);
  id v6 = sub_1006179C4();
  sub_10044FC6C(v3, v5, v6);
  swift_bridgeObjectRelease();
}

uint64_t sub_1002F82C0(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_1002F835C, v3, v2);
}

uint64_t sub_1002F835C()
{
  *(void *)(v0 + 56) = *sub_100038D28(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v1;
  return _swift_task_switch(sub_1002F83F8, v2, v1);
}

uint64_t sub_1002F83F8()
{
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 56) + 96);
  return _swift_task_switch(sub_1002F8420, 0, 0);
}

uint64_t sub_1002F8420()
{
  uint64_t v1 = *(void **)(v0[11] + 16);
  v0[12] = v1;
  if (v1)
  {
    v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002F8508;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    uint64_t v3 = v0[9];
    uint64_t v4 = v0[10];
    return _swift_task_switch(sub_1001B62B8, v3, v4);
  }
}

uint64_t sub_1002F8508()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F8604, 0, 0);
}

uint64_t sub_1002F8604()
{
  uint64_t v1 = *(void *)(v0 + 88);

  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;

  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_1001B62B8, v3, v4);
}

uint64_t sub_1002F8674(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a3;
  v4[9] = a4;
  v4[7] = a2;
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v6;
  v4[12] = v5;
  return _swift_task_switch(sub_1002F8710, v6, v5);
}

uint64_t sub_1002F8710()
{
  uint64_t v1 = (uint64_t *)v0[9];
  uint64_t v2 = *(void *)(v0[7] + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *v1;
  v0[13] = v4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 + 32) + **(int **)(v2 + 32));
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1002F883C;
  uint64_t v6 = v0[8];
  return v8(v6, v4, ObjectType, v2);
}

uint64_t sub_1002F883C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 120) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_1002F89B8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_1002F8958;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1002F8958()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002F89B8()
{
  uint64_t v10 = v0;
  swift_release();
  swift_bridgeObjectRelease();
  if (qword_100785480 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079AA58);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 48) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "TTRIHashtagAssociationPresenter: failed to start deleting tags {error: %s}", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002F8BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a7;
  v8[15] = a8;
  v8[12] = a5;
  v8[13] = a6;
  v8[10] = a3;
  v8[11] = a4;
  v8[8] = a1;
  v8[9] = a2;
  uint64_t v9 = type metadata accessor for Locale();
  v8[16] = v9;
  v8[17] = *(void *)(v9 - 8);
  v8[18] = swift_task_alloc();
  type metadata accessor for MainActor();
  v8[19] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[20] = v11;
  v8[21] = v10;
  return _swift_task_switch(sub_1002F8CF4, v11, v10);
}

uint64_t sub_1002F8CF4()
{
  uint64_t v1 = v0[9];
  uint64_t v11 = v0[8];
  uint64_t v12 = (void *)v0[15];
  static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
  static TTRLocalizableStrings.Hashtags.renameTagConfirmationMessage(hashtag:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [self alertControllerWithTitle:v2 message:v3 preferredStyle:1];
  v0[22] = v4;

  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  unint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = v11;
  v6[4] = v1;
  v0[6] = sub_1002FD930;
  v0[7] = v6;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_1001077FC;
  v0[5] = &unk_100743118;
  uint64_t v7 = _Block_copy(v0 + 2);
  swift_bridgeObjectRetain();
  swift_release();
  [v4 addTextFieldWithConfigurationHandler:v7];
  _Block_release(v7);
  sub_10003B754(&qword_100791E90);
  uint64_t v8 = swift_allocObject();
  v0[23] = v8;
  *(_OWORD *)(v8 + 16) = xmmword_10066C680;
  static TTRLocalizableStrings.Common.alertOKButton.getter();
  *((unsigned char *)v0 + 200) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  *((unsigned char *)v0 + 201) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  sub_100038D28(v12, v12[3]);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10079AB48 + dword_10079AB48);
  uint64_t v9 = (void *)swift_task_alloc();
  v0[24] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1002F8FC4;
  return v13((uint64_t)v4, v8);
}

uint64_t sub_1002F8FC4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 202) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 168);
  uint64_t v4 = *(void *)(v2 + 160);
  return _swift_task_switch(sub_1002F9110, v4, v3);
}

void sub_1002F9110()
{
  int v1 = *(unsigned __int8 *)(v0 + 202);
  swift_release();
  if (v1 != 2)
  {
    uint64_t v2 = *(void **)(v0 + 176);
    if ((*(unsigned char *)(v0 + 202) & 1) == 0)
    {

      goto LABEL_5;
    }
    id v5 = [v2 textFields];
    if (!v5)
    {
LABEL_16:

      uint64_t v3 = 0;
      unint64_t v4 = 0xE000000000000000;
      goto LABEL_17;
    }
    uint64_t v6 = v5;
    sub_1000368FC(0, (unint64_t *)&qword_1007A7480);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_9:
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v8 = *(id *)(v7 + 32);
        }
        uint64_t v9 = v8;
        swift_bridgeObjectRelease();
        id v10 = [v9 text];

        if (v10)
        {
          uint64_t v11 = *(void **)(v0 + 176);
          uint64_t v13 = *(void *)(v0 + 136);
          uint64_t v12 = *(void *)(v0 + 144);
          uint64_t v14 = *(void *)(v0 + 128);
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          static Locale.current.getter();
          uint64_t v3 = String.safeNameForHashtag(locale:)();
          unint64_t v4 = v15;
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);

          goto LABEL_17;
        }
        goto LABEL_16;
      }
    }
    else if (*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }

LABEL_5:
  uint64_t v3 = 0;
  unint64_t v4 = 0;
LABEL_17:
  swift_task_dealloc();
  uint64_t v17 = *(void (**)(uint64_t, unint64_t))(v0 + 8);
  v17(v3, v4);
}

uint64_t sub_1002F9334(void *a1)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v4 = Strong;
      NSString v5 = String._bridgeToObjectiveC()();
      [a1 setText:v5];

      [a1 setClearButtonMode:3];
      [a1 addTarget:v4 action:"renameTagAlertTextFieldDidChange:" forControlEvents:0x20000];
      swift_release();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1002F9424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  type metadata accessor for MainActor();
  v7[9] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[10] = v9;
  v7[11] = v8;
  return _swift_task_switch(sub_1002F94C8, v9, v8);
}

uint64_t sub_1002F94C8()
{
  int v1 = *(void **)(v0 + 64);
  static TTRLocalizableStrings.Hashtags.tagAlreadyExistsMessage(from:to:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)();
  static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertTitle.getter();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [self alertControllerWithTitle:v2 message:v3 preferredStyle:1];
  *(void *)(v0 + 96) = v4;

  sub_10003B754(&qword_100791E90);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 104) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_10066C680;
  static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertReplaceButton.getter();
  *(unsigned char *)(v0 + 120) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertDiscardButton.getter();
  *(unsigned char *)(v0 + 121) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  sub_100038D28(v1, v1[3]);
  uint64_t v8 = (uint64_t (*)(id, uint64_t))((char *)&dword_10079AB48 + dword_10079AB48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002F9694;
  return v8(v4, v5);
}

uint64_t sub_1002F9694(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 122) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  return _swift_task_switch(sub_1002F97E0, v4, v3);
}

uint64_t sub_1002F97E0()
{
  char v1 = *(unsigned char *)(v0 + 122);

  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2(v1 & 1);
}

void sub_1002F9854(void *a1)
{
  uint64_t v2 = static TTRLocalizableStrings.Hashtags.renamingTagMessage.getter();
  uint64_t v4 = v3;
  sub_100038D28(a1, a1[3]);
  id v5 = sub_1006179C4();
  sub_10044FC6C(v2, v4, v5);
  swift_bridgeObjectRelease();
}

uint64_t sub_1002F98DC(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  uint64_t v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_1002F9978, v3, v2);
}

uint64_t sub_1002F9978()
{
  *(void *)(v0 + 56) = *sub_100038D28(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 72) = v2;
  *(void *)(v0 + 80) = v1;
  return _swift_task_switch(sub_1002F9A14, v2, v1);
}

uint64_t sub_1002F9A14()
{
  *(void *)(v0 + 88) = *(void *)(*(void *)(v0 + 56) + 96);
  return _swift_task_switch(sub_1002F9A3C, 0, 0);
}

uint64_t sub_1002F9A3C()
{
  uint64_t v1 = *(void **)(v0[11] + 16);
  v0[12] = v1;
  if (v1)
  {
    v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002F9B24;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    uint64_t v3 = v0[9];
    uint64_t v4 = v0[10];
    return _swift_task_switch(sub_1002F9C90, v3, v4);
  }
}

uint64_t sub_1002F9B24()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002F9C20, 0, 0);
}

uint64_t sub_1002F9C20()
{
  uint64_t v1 = *(void *)(v0 + 88);

  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;

  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_1002F9C90, v3, v4);
}

uint64_t sub_1002F9C90()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  return _swift_task_switch(sub_100060304, v1, v2);
}

uint64_t sub_1002F9CF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  _OWORD v6[8] = a3;
  v6[9] = a4;
  v6[7] = a2;
  type metadata accessor for MainActor();
  v6[12] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[13] = v8;
  v6[14] = v7;
  return _swift_task_switch(sub_1002F9D94, v8, v7);
}

uint64_t sub_1002F9D94()
{
  uint64_t v1 = *(void *)(v0[7] + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 40)
                                                                                    + **(int **)(v1 + 40));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[15] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002F9EA0;
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  return v9(v7, v6, v4, v5, ObjectType, v1);
}

uint64_t sub_1002F9EA0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 112);
  uint64_t v4 = *(void *)(v2 + 104);
  if (v0) {
    uint64_t v5 = sub_1002FA03C;
  }
  else {
    uint64_t v5 = sub_1002F9FDC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1002F9FDC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002FA03C()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_100785480 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079AA58);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 48) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "TTRIHashtagAssociationPresenter: failed to start renaming tag {error: %s}", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002FA26C()
{
  sub_1000499D4(v0 + 16);
  swift_unknownObjectRelease();
  swift_release();
  sub_1002FAEDC(*(void *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72));

  return swift_deallocClassInstance();
}

uint64_t sub_1002FA2C0(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v6 + 40) = a5;
  *(void *)(v6 + 48) = v5;
  *(void *)(v6 + 24) = a2;
  *(void *)(v6 + 32) = a4;
  *(unsigned char *)(v6 + 104) = a3;
  *(void *)(v6 + 16) = a1;
  type metadata accessor for MainActor();
  *(void *)(v6 + 56) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = v7;
  return _swift_task_switch(sub_1002FA364, v8, v7);
}

uint64_t sub_1002FA364()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (*(unsigned __int8 *)(v1 + 72) == 255)
  {
    uint64_t v8 = *(void *)(v0 + 32);
    uint64_t v9 = *(void **)(v0 + 40);
    char v10 = *(unsigned char *)(v0 + 104);
    uint64_t v11 = *(void *)(v0 + 24);
    uint64_t v12 = *(void *)(v1 + 56);
    uint64_t v13 = *(void *)(v1 + 64);
    *(void *)(v1 + 56) = *(void *)(v0 + 16);
    *(void *)(v1 + 64) = v11;
    *(unsigned char *)(v1 + 72) = v10 & 1;
    sub_1002FAEDC(v12, v13, 0xFFu);
    type metadata accessor for TTRIHashtagAssociationRouter();
    swift_allocObject();
    id v14 = v9;
    sub_1002FAEF4();
    sub_1000CD6F4(v8);
    uint64_t v15 = sub_1006178B4(v14, v8);
    *(void *)(v0 + 80) = v15;
    if (v10)
    {
      uint64_t v16 = *(void *)(v0 + 24);
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 96) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_1002FA7C4;
      uint64_t v18 = *(void *)(v0 + 48);
      uint64_t v19 = *(void *)(v0 + 16);
      return sub_1002FC694(v19, v16, v15, v18);
    }
    else
    {
      uint64_t v20 = *(void *)(v0 + 16);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1002FA620;
      uint64_t v22 = *(void *)(v0 + 48);
      return sub_1002FB000(v20, v15, v22);
    }
  }
  else
  {
    swift_release();
    if (qword_100785480 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10079AA58);
    os_log_type_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "TTRIHashtagAssociationPresenter: start() called while busy", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_1002FA620()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1002FA740, v3, v2);
}

uint64_t sub_1002FA740()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_release();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 64);
  *(void *)(v1 + 56) = 0;
  *(void *)(v1 + 64) = 0;
  unsigned __int8 v4 = *(unsigned char *)(v1 + 72);
  *(unsigned char *)(v1 + 72) = -1;
  sub_1002FAEDC(v2, v3, v4);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1002FA7C4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1002FD944, v3, v2);
}

BOOL sub_1002FA8E4()
{
  return *(unsigned __int8 *)(v0 + 72) != 255;
}

uint64_t sub_1002FA8F4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  char v10 = a3 & 1;
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_10003D2E4;
  return sub_1002FA2C0(a1, a2, v10, a4, a5);
}

uint64_t sub_1002FA9B8(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  type metadata accessor for MainActor();
  v3[13] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[14] = v5;
  v3[15] = v4;
  return _swift_task_switch(sub_1002FAA54, v5, v4);
}

uint64_t sub_1002FAA54()
{
  id v1 = sub_1006179C4();
  *(void *)(v0 + 128) = v1;
  if (v1)
  {
    if (![*(id *)(v0 + 80) preferredStyle])
    {
      uint64_t v2 = *(void *)(v0 + 96);
      uint64_t v3 = *(void *)(v2 + 72);
      if ((~*(_DWORD *)(v2 + 72) & 0xFELL) != 0)
      {
        uint64_t v12 = *(void *)(v2 + 80);
        uint64_t v14 = *(void *)(v2 + 56);
        uint64_t v13 = *(void *)(v2 + 64);
        uint64_t v16 = *(void *)(v2 + 40);
        uint64_t v15 = *(void *)(v2 + 48);
        uint64_t v17 = *(void **)(v2 + 32);
        char v18 = *(unsigned char *)(v2 + 88);
        *(void *)(v0 + 16) = v17;
        *(void *)(v0 + 24) = v16;
        *(void *)(v0 + 32) = v15;
        *(void *)(v0 + 40) = v14;
        *(void *)(v0 + 48) = v13;
        *(unsigned char *)(v0 + 56) = v3;
        *(void *)(v0 + 64) = v12;
        *(unsigned char *)(v0 + 72) = v18 & 1;
        sub_1000C7850(v17, v16, v15, v14, v13, v3);
        UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
        sub_1000A74BC(v17, v16, v15, v14, v13, v3);
      }
      else
      {
        id v4 = [self currentDevice];
        id v5 = [v4 userInterfaceIdiom];

        if (v5 == (id)1) {
          [*(id *)(v0 + 80) setPreferredStyle:1];
        }
      }
    }
    uint64_t v19 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v19;
    *uint64_t v19 = v0;
    v19[1] = sub_1002FAD44;
    uint64_t v20 = *(void *)(v0 + 80);
    uint64_t v21 = *(void *)(v0 + 88);
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 73, v20, v21, 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    if (qword_100785778 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100018BF8(v6, (uint64_t)qword_1007AC140);
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "TTRIHashtagAssociationRouter: failed to present alert; missing a presentingViewController",
        v9,
        2u);
      swift_slowDealloc();
    }

    char v10 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v10(2);
  }
}

uint64_t sub_1002FAD44()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  *(unsigned char *)(v1 + 74) = *(unsigned char *)(v1 + 73);
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_1002FAE70, v3, v2);
}

uint64_t sub_1002FAE70()
{
  uint64_t v1 = *(void **)(v0 + 128);
  swift_release();

  uint64_t v2 = *(unsigned __int8 *)(v0 + 74);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1002FAEDC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_1002F7D54();
  }
  return result;
}

uint64_t sub_1002FAEF4()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1002FAF00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_10003B754(&qword_10079AB70);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  id v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_10020DB18((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1002FB000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[31] = a1;
  v3[32] = a3;
  v3[13] = type metadata accessor for TTRIHashtagAssociationRouter();
  v3[14] = &off_100754D98;
  v3[10] = a2;
  type metadata accessor for MainActor();
  swift_retain();
  v3[33] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[34] = v6;
  v3[35] = v5;
  return _swift_task_switch(sub_1002FB0BC, v6, v5);
}

uint64_t sub_1002FB0BC()
{
  uint64_t v1 = *(void *)(v0[32] + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 16) + **(int **)(v1 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002FB1C4;
  uint64_t v4 = v0[31];
  return v6(v4, ObjectType, v1);
}

uint64_t sub_1002FB1C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)*v4;
  v7[37] = a3;
  v7[38] = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v8 = v7[34];
    uint64_t v9 = v7[35];
    BOOL v10 = sub_1002FBC9C;
  }
  else
  {
    v7[39] = a2;
    v7[40] = a1;
    uint64_t v8 = v7[34];
    uint64_t v9 = v7[35];
    BOOL v10 = sub_1002FB2F8;
  }
  return _swift_task_switch(v10, v8, v9);
}

uint64_t sub_1002FB2F8()
{
  swift_bridgeObjectRetain_n();
  static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)();
  static TTRLocalizableStrings.Hashtags.deleteTagConfirmationMessage(hashtags:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)();
  NSString v1 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v3 = self;
  *(void *)(v0 + 328) = v3;
  id v4 = [v3 alertControllerWithTitle:v1 message:v2 preferredStyle:0];
  *(void *)(v0 + 336) = v4;

  *(void *)(v0 + 344) = sub_10003B754(&qword_100791E90);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 352) = v5;
  *(_OWORD *)(v5 + 16) = xmmword_10066C680;
  static TTRLocalizableStrings.Common.alertDeleteButton.getter();
  *(unsigned char *)(v0 + 434) = 1;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  static TTRLocalizableStrings.Common.alertCancelButton.getter();
  *(unsigned char *)(v0 + 432) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  sub_100038D28((void *)(v0 + 80), *(void *)(v0 + 104));
  uint64_t v8 = (uint64_t (*)(id, uint64_t))((char *)&dword_10079AB48 + dword_10079AB48);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 360) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1002FB504;
  return v8(v4, v5);
}

uint64_t sub_1002FB504(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 436) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_1002FB650, v4, v3);
}

uint64_t sub_1002FB650()
{
  char v1 = *(unsigned char *)(v0 + 436);

  unint64_t v2 = *(void *)(v0 + 296);
  if ((v1 & 1) == 0)
  {
    swift_release();
    swift_bridgeObjectRelease_n();
    sub_100038CD8(v0 + 80);
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  sub_1002FAF00((uint64_t)_swiftEmptyArrayStorage);
  *(void *)(v0 + 224) = TTRHashtagAssociationDeleteTagPreferences.init(intentBySmartListID:)();
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease_n();
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();
    if (v5)
    {
      uint64_t v6 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_8:
      *(void *)(v0 + 368) = v5;
      uint64_t v7 = *(void *)(v0 + 248);
      swift_bridgeObjectRelease();
      static TTRLocalizableStrings.Hashtags.deleteSmartListAlertTitle(smartListCount:)();
      uint64_t v30 = *(void *)(v7 + 16);
      if (!v6)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        uint64_t v19 = *(void **)(v0 + 328);
        static TTRLocalizableStrings.Hashtags.deleteSmartListAlertMessage(hashtagCount:smartListNames:)();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        static TTRLocalizableStrings.Hashtags.deleteSmartListAlertDeleteButton(hashtagCount:smartListCount:)();
        NSString v20 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v21 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v22 = [v19 alertControllerWithTitle:v20 message:v21 preferredStyle:1];
        *(void *)(v0 + 408) = v22;

        uint64_t v23 = swift_allocObject();
        *(void *)(v0 + 416) = v23;
        *(_OWORD *)(v23 + 16) = xmmword_10066C680;
        *(unsigned char *)(v0 + 435) = 1;
        TTRIValueBasedAlertAction.init(title:style:value:)();
        static TTRLocalizableStrings.Common.alertCancelButton.getter();
        *(unsigned char *)(v0 + 433) = 0;
        TTRIValueBasedAlertAction.init(title:style:value:)();
        sub_100038D28((void *)(v0 + 80), *(void *)(v0 + 104));
        uint64_t v32 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10079AB48 + dword_10079AB48);
        os_log_type_t v24 = (void *)swift_task_alloc();
        *(void *)(v0 + 424) = v24;
        *os_log_type_t v24 = v0;
        v24[1] = sub_1002FC098;
        return v32((uint64_t)v22, v23);
      }
      sub_1004D35AC(0, v6 & ~(v6 >> 63), 0);
      if ((v6 & 0x8000000000000000) == 0)
      {
        uint64_t v8 = 0;
        unint64_t v9 = v2 & 0xC000000000000001;
        uint64_t v31 = *(void *)(v0 + 296) + 32;
        do
        {
          if (v9) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v31 + 8 * v8);
          }
          uint64_t v11 = v10;
          id v12 = [v10 name:v30];
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;

          unint64_t v17 = _swiftEmptyArrayStorage[2];
          unint64_t v16 = _swiftEmptyArrayStorage[3];
          if (v17 >= v16 >> 1) {
            sub_1004D35AC(v16 > 1, v17 + 1, 1);
          }
          ++v8;
          _swiftEmptyArrayStorage[2] = v17 + 1;
          char v18 = &_swiftEmptyArrayStorage[2 * v17];
          v18[4] = v13;
          v18[5] = v15;
        }
        while (v6 != v8);
        goto LABEL_17;
      }
      __break(1u);
      goto LABEL_27;
    }
  }
  unint64_t v2 = v0 + 224;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (qword_100785480 != -1) {
LABEL_27:
  }
    swift_once();
  uint64_t v25 = type metadata accessor for Logger();
  int8x16_t v33 = *(int8x16_t *)(v0 + 248);
  sub_100018BF8(v25, (uint64_t)qword_10079AA58);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10001A078();
  swift_bridgeObjectRelease();
  sub_1000145EC(v0 + 80, v0 + 160);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v33.i64[0];
  sub_100038ED8((long long *)(v0 + 160), v26 + 24);
  sub_1000145EC(v0 + 80, v0 + 120);
  uint64_t v27 = swift_allocObject();
  sub_100038ED8((long long *)(v0 + 120), v27 + 16);
  type metadata accessor for TTRPotentiallyLongOperationPerformer();
  *(void *)(v0 + 376) = swift_initStackObject();
  *(void *)(v0 + 384) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)();
  uint64_t v28 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 392) = v28;
  v28[1] = vextq_s8(v33, v33, 8uLL);
  v28[2].i64[0] = v2;
  swift_bridgeObjectRetain();
  uint64_t v29 = (void *)swift_task_alloc();
  *(void *)(v0 + 400) = v29;
  *uint64_t v29 = v0;
  v29[1] = sub_1002FBED4;
  return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v29, &unk_10079AB68, v28, (char *)&type metadata for () + 8);
}

uint64_t sub_1002FBC9C()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_100785480 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079AA58);
  swift_errorRetain();
  swift_errorRetain();
  unint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 240) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "TTRIHashtagAssociationPresenter: failed to fetch confirmation message {error: %s}", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100038CD8(v0 + 80);
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002FBED4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 280);
  uint64_t v3 = *(void *)(v1 + 272);
  return _swift_task_switch(sub_1002FC018, v3, v2);
}

uint64_t sub_1002FC018()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002FC098(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 437) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 280);
  uint64_t v4 = *(void *)(v2 + 272);
  return _swift_task_switch(sub_1002FC1E4, v4, v3);
}

uint64_t sub_1002FC1E4()
{
  if ((*(unsigned char *)(v0 + 437) & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + 408);
    swift_release();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100038CD8(v0 + 80);
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  uint64_t v31 = v0 + 80;
  uint64_t v4 = 0;
  uint64_t v5 = (void *)(v0 + 224);
  uint64_t v6 = *(void *)(v0 + 296);
  uint64_t v32 = v6 + 32;
  unint64_t v33 = v6 & 0xC000000000000001;
  while (1)
  {
    if (v33) {
      id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v8 = *(id *)(v32 + 8 * v4);
    }
    uint64_t v9 = v8;
    uint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    id v11 = [v8 objectID];
    id v12 = (void *)*v5;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v15 = sub_10035C188((uint64_t)v11);
    uint64_t v16 = v12[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_31;
    }
    char v19 = v14;
    if (v12[3] < v18) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v14 & 1) == 0) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_1003636E0();
      if ((v19 & 1) == 0)
      {
LABEL_19:
        v12[(v15 >> 6) + 8] |= 1 << v15;
        *(void *)(v12[6] + 8 * v15) = v11;
        *(unsigned char *)(v12[7] + v15) = 0;
        uint64_t v22 = v12[2];
        BOOL v23 = __OFADD__(v22, 1);
        uint64_t v24 = v22 + 1;
        if (v23) {
          goto LABEL_32;
        }
        _OWORD v12[2] = v24;
        id v25 = v11;
        goto LABEL_7;
      }
    }
LABEL_6:
    *(unsigned char *)(v12[7] + v15) = 0;
LABEL_7:
    uint64_t v7 = *(void *)(v0 + 368);
    *(void *)(v0 + 224) = v12;

    swift_bridgeObjectRelease();
    ++v4;
    if (v10 == v7)
    {

      swift_bridgeObjectRelease();
      if (qword_100785480 == -1)
      {
LABEL_24:
        uint64_t v26 = type metadata accessor for Logger();
        int8x16_t v34 = *(int8x16_t *)(v0 + 248);
        sub_100018BF8(v26, (uint64_t)qword_10079AA58);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_10001A078();
        swift_bridgeObjectRelease();
        sub_1000145EC(v31, v0 + 160);
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v34.i64[0];
        sub_100038ED8((long long *)(v0 + 160), v27 + 24);
        sub_1000145EC(v31, v0 + 120);
        uint64_t v28 = swift_allocObject();
        sub_100038ED8((long long *)(v0 + 120), v28 + 16);
        type metadata accessor for TTRPotentiallyLongOperationPerformer();
        *(void *)(v0 + 376) = swift_initStackObject();
        *(void *)(v0 + 384) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)();
        uint64_t v29 = (int8x16_t *)swift_task_alloc();
        *(void *)(v0 + 392) = v29;
        v29[1] = vextq_s8(v34, v34, 8uLL);
        v29[2].i64[0] = (uint64_t)v5;
        swift_bridgeObjectRetain();
        uint64_t v30 = (void *)swift_task_alloc();
        *(void *)(v0 + 400) = v30;
        *uint64_t v30 = v0;
        v30[1] = sub_1002FBED4;
        return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v30, &unk_10079AB68, v29, (char *)&type metadata for () + 8);
      }
LABEL_33:
      swift_once();
      goto LABEL_24;
    }
  }
  sub_1005763A0(v18, isUniquelyReferenced_nonNull_native);
  unint64_t v20 = sub_10035C188((uint64_t)v11);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_6;
  }
  sub_1000368FC(0, qword_10078E3D0);
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1002FC694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a2;
  v4[32] = a4;
  v4[30] = a1;
  v4[13] = type metadata accessor for TTRIHashtagAssociationRouter();
  v4[14] = &off_100754D98;
  v4[10] = a3;
  type metadata accessor for MainActor();
  swift_retain();
  v4[33] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[34] = v7;
  v4[35] = v6;
  return _swift_task_switch(sub_1002FC754, v7, v6);
}

uint64_t sub_1002FC754()
{
  uint64_t v1 = *(void *)(v0[32] + 40);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 24) + **(int **)(v1 + 24));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[36] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002FC85C;
  uint64_t v5 = v0[30];
  uint64_t v4 = v0[31];
  return v7(v5, v4, ObjectType, v1);
}

uint64_t sub_1002FC85C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void **)v3;
  *(void *)(*(void *)v3 + 296) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = v6[34];
    uint64_t v8 = v6[35];
    uint64_t v9 = sub_1002FCEC8;
  }
  else
  {
    v6[38] = a2;
    v6[39] = a1;
    uint64_t v7 = v6[34];
    uint64_t v8 = v6[35];
    uint64_t v9 = sub_1002FC990;
  }
  return _swift_task_switch(v9, v7, v8);
}

uint64_t sub_1002FC990()
{
  uint64_t v2 = v0[38];
  uint64_t v1 = v0[39];
  uint64_t v4 = v0[31];
  uint64_t v3 = v0[32];
  uint64_t v5 = v0[30];
  uint64_t v6 = (void *)swift_task_alloc();
  v0[40] = v6;
  v6[2] = v5;
  v6[3] = v4;
  v6[4] = v1;
  v6[5] = v2;
  v6[6] = v3;
  v6[7] = v0 + 10;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[41] = v7;
  v7[2] = v5;
  v7[3] = v4;
  v7[4] = v1;
  v7[5] = v2;
  v7[6] = v0 + 10;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[42] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1002FCABC;
  uint64_t v10 = v0[30];
  uint64_t v9 = v0[31];
  return TTRHashtagAssociationPresenterCapability.obtainNewHashtagNameFromUser(srcLabel:showInputUI:showMergeUI:)(v10, v9, &unk_10079AB80, v6, &unk_10079AB90, v7);
}

uint64_t sub_1002FCABC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 344) = a1;
  *(void *)(v4 + 352) = a2;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 280);
  uint64_t v6 = *(void *)(v3 + 272);
  return _swift_task_switch(sub_1002FCC24, v6, v5);
}

uint64_t sub_1002FCC24()
{
  uint64_t v1 = *(void *)(v0 + 352);
  if (v1)
  {
    if (qword_100785480 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 344);
    uint64_t v3 = *(void *)(v0 + 256);
    long long v11 = *(_OWORD *)(v0 + 240);
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_10079AA58);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    sub_1000145EC(v0 + 80, v0 + 120);
    uint64_t v5 = swift_allocObject();
    sub_100038ED8((long long *)(v0 + 120), v5 + 16);
    sub_1000145EC(v0 + 80, v0 + 160);
    uint64_t v6 = swift_allocObject();
    sub_100038ED8((long long *)(v0 + 160), v6 + 16);
    type metadata accessor for TTRPotentiallyLongOperationPerformer();
    *(void *)(v0 + 360) = swift_initStackObject();
    *(void *)(v0 + 368) = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)();
    uint64_t v7 = swift_task_alloc();
    *(void *)(v0 + 376) = v7;
    *(void *)(v7 + 16) = v3;
    *(_OWORD *)(v7 + 24) = v11;
    *(void *)(v7 + 40) = v2;
    *(void *)(v7 + 48) = v1;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_1002FD100;
    return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v8, &unk_10079ABB0, v7, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    sub_100038CD8(v0 + 80);
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1002FCEC8()
{
  uint64_t v10 = v0;
  swift_release();
  if (qword_100785480 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100018BF8(v1, (uint64_t)qword_10079AA58);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = Error.rem_errorDescription.getter();
    *(void *)(v0 + 232) = sub_1000385A8(v5, v6, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "TTRIHashtagAssociationPresenter: failed to fetch confirmation message {error: %s}", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_100038CD8(v0 + 80);
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1002FD100()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 280);
  uint64_t v3 = *(void *)(v1 + 272);
  return _swift_task_switch(sub_1002FD260, v3, v2);
}

uint64_t sub_1002FD260()
{
  swift_release();
  swift_release();
  sub_100038CD8(v0 + 80);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002FD2D8()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_1002FD318()
{
  sub_1002F8238(*(void *)(v0 + 16), (void *)(v0 + 24));
}

uint64_t sub_1002FD324()
{
  sub_100038CD8(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1002FD35C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10003D2E4;
  return sub_1002F82C0(v0 + 16);
}

uint64_t sub_1002FD3F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10003D2E4;
  return sub_1002F8674(a1, v4, v5, v6);
}

uint64_t sub_1002FD4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_1002FD57C;
  return sub_1002F8BF4(a1, a2, v6, v7, v8, v9, v11, v10);
}

uint64_t sub_1002FD57C(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t sub_1002FD680(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_10017F2D4;
  return sub_1002F9424(a1, a2, v6, v7, v8, v9, v10);
}

void sub_1002FD754()
{
  sub_1002F9854((void *)(v0 + 16));
}

uint64_t sub_1002FD75C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000C2D4;
  return sub_1002F98DC(v0 + 16);
}

uint64_t sub_1002FD7F0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10003D2E4;
  return sub_1002F9CF4(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002FD8B8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1002FD8F0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1002FD930(void *a1)
{
  return sub_1002F9334(a1);
}

id sub_1002FD948(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[3];
  if (v7)
  {
    uint64_t v8 = sub_100038D28(a3, a3[3]);
    uint64_t v9 = *(void *)(v7 - 8);
    __chkstk_darwin(v8);
    uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v9 + 16))(v11);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v7);
    sub_100038CD8((uint64_t)a3);
  }
  else
  {
    uint64_t v12 = 0;
  }
  id v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithName:v6 target:v12 selector:a4];

  swift_unknownObjectRelease();
  return v13;
}

void sub_1002FDAC0()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState) != 3
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_networkActivityState) == 0)
  {
    [v2 stopAnimating];
  }
  else
  {
    if (v2)
    {
      id v10 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner);
    }
    else
    {
      id v4 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
      [v4 setHidesWhenStopped:1];
      [v4 frame];
      double v6 = v5;
      LODWORD(v5) = 1148846080;
      [v4 setLayoutSize:v6 withContentPriority:v7, v5];
      [*(id *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView) addArrangedSubview:v4];
      uint64_t v8 = *(void **)(v0 + v1);
      *(void *)(v0 + v1) = v4;
      id v10 = v4;

      uint64_t v2 = 0;
    }
    id v9 = v2;
    [v10 startAnimating];
  }
}

void sub_1002FDD00(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (char *)[a1 state];
  if ((unint64_t)(v4 - 4) < 2)
  {
    int v9 = v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted];
    v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
    if (v9 != 1) {
      return;
    }
    double v6 = self;
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v2;
    __asm { FMOV            V0.2D, #1.0 }
    *(_OWORD *)(v10 + 24) = _Q0;
    unint64_t v40 = sub_1002FF238;
    uint64_t v41 = v10;
    aBlock = _NSConcreteStackBlock;
    uint64_t v37 = 1107296256;
    uint64_t v8 = &unk_100743198;
    goto LABEL_13;
  }
  if (v4 == (char *)3)
  {
    [v2 bounds];
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;
    [a1 locationInView:v2];
    v42.CGFloat x = v24;
    v42.CGFloat y = v25;
    v43.origin.CGFloat x = v17;
    v43.origin.CGFloat y = v19;
    v43.size.CGFloat width = v21;
    v43.size.CGFloat height = v23;
    if (CGRectContainsPoint(v43, v42))
    {
      uint64_t v26 = &v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate];
      swift_beginAccess();
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v27 = *((void *)v26 + 1);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v39 = type metadata accessor for TTRIAccountsListsSectionHeaderView();
        unint64_t v40 = (uint64_t (*)())&off_100743140;
        aBlock = (void **)v2;
        uint64_t v29 = *(void (**)(void ***, uint64_t, uint64_t))(v27 + 8);
        uint64_t v30 = v2;
        v29(&aBlock, ObjectType, v27);
        swift_unknownObjectRelease();
        sub_100038CD8((uint64_t)&aBlock);
      }
    }
    int v31 = v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted];
    v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
    if (v31 == 1)
    {
      double v6 = self;
      uint64_t v32 = swift_allocObject();
      *(void *)(v32 + 16) = v2;
      __asm { FMOV            V0.2D, #1.0 }
      *(_OWORD *)(v32 + 24) = _Q0;
      unint64_t v40 = sub_1002FF238;
      uint64_t v41 = v32;
      aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      uint64_t v8 = &unk_1007431E8;
      goto LABEL_13;
    }
  }
  else if (v4 == (char *)1)
  {
    char v5 = v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted];
    v2[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 1;
    if ((v5 & 1) == 0)
    {
      double v6 = self;
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v2;
      *(_OWORD *)(v7 + 24) = xmmword_100675360;
      unint64_t v40 = sub_1002FF238;
      uint64_t v41 = v7;
      aBlock = _NSConcreteStackBlock;
      uint64_t v37 = 1107296256;
      uint64_t v8 = &unk_100743238;
LABEL_13:
      uint64_t v38 = sub_10000AD88;
      uint64_t v39 = (uint64_t)v8;
      int8x16_t v34 = _Block_copy(&aBlock);
      uint64_t v35 = v2;
      swift_release();
      [v6 animateWithDuration:v34 animations:0.2];
      _Block_release(v34);
    }
  }
}

uint64_t sub_1002FE0D8(uint64_t result)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_accountID);
  if (v2)
  {
    uint64_t v3 = result;
    unint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      char v4 = *(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount);
      id v5 = v2;
      sub_10009440C(v3, v5, v4);

      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1002FE5A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel;
  swift_beginAccess();
  sub_100038338(v1, (uint64_t)v5);
  if (!*((void *)&v6 + 1))
  {
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_1007A3EE0);
    return 0;
  }
  v8[0] = v5[0];
  v8[1] = v5[1];
  v8[2] = v6;
  uint64_t v9 = v7;
  if (*(unsigned __int8 *)(v0
                                        + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState)
     - 2 < 4)
  {
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl) == 1
      && BYTE8(v8[0]))
    {
      if (BYTE8(v8[0]) == 1) {
        uint64_t v2 = (uint64_t *)TTRAccesibility.AccountsList.Hint.HeadingExpand.unsafeMutableAddressor();
      }
      else {
        uint64_t v2 = (uint64_t *)TTRAccesibility.AccountsList.Hint.HeadingCollapse.unsafeMutableAddressor();
      }
      goto LABEL_9;
    }
    sub_100038D6C((uint64_t)v8);
    return 0;
  }
  uint64_t v2 = (uint64_t *)TTRAccesibility.AccountsList.Hint.HeadingUpgrade.unsafeMutableAddressor();
LABEL_9:
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  sub_100038D6C((uint64_t)v8);
  return v3;
}

void sub_1002FE6BC(void *a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  if (a3)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v6 = a1;
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = a1;
    NSString v7 = 0;
  }
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for TTRIAccountsListsSectionHeaderView();
  [super v7];
}

uint64_t sub_1002FE74C()
{
  uint64_t v1 = v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl];
  if (v1 == 1)
  {
    uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate];
    swift_beginAccess();
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *((void *)v2 + 1);
      uint64_t ObjectType = swift_getObjectType();
      _OWORD v8[3] = type metadata accessor for TTRIAccountsListsSectionHeaderView();
      v8[4] = &off_100743140;
      v8[0] = v0;
      id v5 = *(void (**)(void *, uint64_t, uint64_t))(v3 + 8);
      id v6 = v0;
      v5(v8, ObjectType, v3);
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)v8);
    }
  }
  return v1;
}

uint64_t sub_1002FE8DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10078ED00);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState] - 2 > 3
    || v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount] == 1)
  {
    id v5 = (void *)sub_100013830();
    UIButton.configuration.getter();

    uint64_t v6 = type metadata accessor for UIButton.Configuration();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 1, v6))
    {
      sub_10003B6F8((uint64_t)v4, &qword_10078ED00);
    }
    else
    {
      uint64_t v8 = UIButton.Configuration.title.getter();
      uint64_t v9 = v10;
      sub_10003B6F8((uint64_t)v4, &qword_10078ED00);
      if (v9) {
        goto LABEL_7;
      }
    }
    NSString v7 = (uint64_t *)TTRAccesibility.AccountsList.Label.Migrate.unsafeMutableAddressor();
    uint64_t v8 = *v7;
    uint64_t v9 = v7[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_7:
    sub_1000368FC(0, (unint64_t *)&unk_10078E660);
    v15[3] = type metadata accessor for TTRIAccountsListsSectionHeaderView();
    v15[0] = v1;
    id v11 = v1;
    id v12 = sub_1002FD948(v8, v9, v15, (uint64_t)"migrateButtonAction:");
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_10066D470;
    *(void *)(v13 + 32) = v12;
    v15[0] = v13;
    specialized Array._endMutation()();
    return v15[0];
  }
  return 0;
}

char *sub_1002FEB68()
{
  if (*(unsigned __int8 *)(v0
                                        + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState)
     - 2 >= 4)
  {
    uint64_t v2 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Upgradable.unsafeMutableAddressor();
    uint64_t v4 = *v2;
    uint64_t v3 = v2[1];
    swift_bridgeObjectRetain();
    uint64_t v1 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v6 = *((void *)v1 + 2);
    unint64_t v5 = *((void *)v1 + 3);
    if (v6 >= v5 >> 1) {
      uint64_t v1 = sub_100022F98((char *)(v5 > 1), v6 + 1, 1, v1);
    }
    *((void *)v1 + 2) = v6 + 1;
    NSString v7 = &v1[16 * v6];
    *((void *)v7 + 4) = v4;
    *((void *)v7 + 5) = v3;
  }
  else
  {
    uint64_t v1 = (char *)_swiftEmptyArrayStorage;
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl) == 1)
  {
    uint64_t v8 = v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel;
    swift_beginAccess();
    sub_100038338(v8, (uint64_t)v16);
    if (*((void *)&v17 + 1))
    {
      v19[0] = v16[0];
      v19[1] = v16[1];
      void v19[2] = v17;
      uint64_t v20 = v18;
      if (BYTE8(v16[0]))
      {
        if (BYTE8(v16[0]) == 1) {
          uint64_t v9 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Collapsed.unsafeMutableAddressor();
        }
        else {
          uint64_t v9 = (uint64_t *)TTRAccesibility.AccountsList.Attributes.Expanded.unsafeMutableAddressor();
        }
        uint64_t v11 = *v9;
        uint64_t v10 = v9[1];
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v1 = sub_100022F98(0, *((void *)v1 + 2) + 1, 1, v1);
        }
        unint64_t v13 = *((void *)v1 + 2);
        unint64_t v12 = *((void *)v1 + 3);
        if (v13 >= v12 >> 1) {
          uint64_t v1 = sub_100022F98((char *)(v12 > 1), v13 + 1, 1, v1);
        }
        *((void *)v1 + 2) = v13 + 1;
        uint64_t v14 = &v1[16 * v13];
        *((void *)v14 + 4) = v11;
        *((void *)v14 + 5) = v10;
      }
      sub_100038D6C((uint64_t)v19);
    }
    else
    {
      sub_10003B6F8((uint64_t)v16, (uint64_t *)&unk_1007A3EE0);
    }
  }
  return v1;
}

void sub_1002FED3C()
{
  int v1 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState);
  if (v1 == 5) {
    goto LABEL_4;
  }
  if (v1 != 3)
  {
    if (v1 != 2)
    {
      uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton);
      goto LABEL_8;
    }
LABEL_4:
    uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton);
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount) != 1)
    {
      uint64_t v3 = 1;
LABEL_9:
      [v2 setHidden:v3];
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v3 = *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_upgradeHintCardShowingForAccount);
    goto LABEL_9;
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton);
  [v2 setHidden:1];
LABEL_10:
  if (([v2 isHidden] & 1) == 0
    && *(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isStoreDemoMode) == 1)
  {
    [v2 setHidden:1];
  }

  sub_1002FDAC0();
}

id sub_1002FEE38()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsSectionHeaderView();
  return [super dealloc];
}

uint64_t sub_1002FEF64()
{
  return swift_unknownObjectWeakLoadStrong();
}

void (*sub_1002FEFB8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = *v1;
  uint64_t v5 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate;
  v3[5] = *v1;
  v3[6] = v5;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v8 = *(void *)(v6 + 8);
  v3[3] = Strong;
  v3[4] = v8;
  return sub_10010F184;
}

uint64_t type metadata accessor for MigrationButton()
{
  return self;
}

void sub_1002FF120(void *a1, void *a2)
{
  id v4 = [a1 traitCollection];
  id v5 = [v4 preferredContentSizeCategory];

  LODWORD(v4) = UIContentSizeCategory.isAccessibilityCategory.getter() & 1;
  id v6 = [a2 preferredContentSizeCategory];
  LODWORD(v5) = UIContentSizeCategory.isAccessibilityCategory.getter() & 1;

  if (v4 != v5) {
    (*(void (**)(void))((swift_isaMask & *a1) + 0x250))();
  }
}

uint64_t sub_1002FF200()
{
  return _swift_deallocObject(v0, 40, 7);
}

id sub_1002FF23C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  double v2 = *(double *)(v0 + 32);
  [*(id *)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView) setAlpha:*(double *)(v0 + 24)];
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView);

  return [v3 setAlpha:v2];
}

uint64_t sub_1002FF2B0()
{
  return 8;
}

uint64_t sub_1002FF2BC()
{
  return swift_release();
}

uint64_t sub_1002FF2C4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1002FF2D8(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_1002FF2E4()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_identifier];
  void *v1 = 0;
  v1[1] = 0;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButtonState] = 2;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_networkActivityState] = 0;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_hasDisclosureControl] = 1;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_showUpgradeForLocalOnlyAccount] = 0;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_upgradeHintCardShowingForAccount] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_accountID] = 0;
  double v2 = &v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewModel];
  *(_OWORD *)double v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *((void *)v2 + 6) = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_treeCellViewDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v3 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_outerStackView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)NUIContainerStackView) init];
  uint64_t v4 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)NUIContainerStackView) init];
  uint64_t v5 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v6 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migrateButton;
  *(void *)&v0[v6] = sub_100013830();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_migratingSpinner] = 0;
  uint64_t v7 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_disclosureView;
  type metadata accessor for TTRIAccountsListsCellAccessoryView();
  *(void *)&v0[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_collapseGestureRecognizers] = _swiftEmptyArrayStorage;
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isHighlighted] = 0;
  id v8 = objc_allocWithZone((Class)NSUserDefaults);
  NSString v9 = String._bridgeToObjectiveC()();
  id v10 = [v8 initWithSuiteName:v9];

  if (v10)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    unsigned __int8 v12 = [v10 BOOLForKey:v11];
  }
  else
  {
    unsigned __int8 v12 = 0;
  }
  v0[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_isStoreDemoMode] = v12;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_1002FF584()
{
  return swift_deallocClassInstance();
}

char *sub_1002FF594(uint64_t *a1, void **a2, uint64_t a3)
{
  uint64_t v80 = a1;
  uint64_t v81 = a3;
  uint64_t v4 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v75 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v73 = (char *)&v72 - v7;
  uint64_t v78 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v78);
  uint64_t v82 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (char *)type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v9 = *((void *)v79 - 1);
  __chkstk_darwin(v79);
  NSString v11 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRListType.SortingCapability();
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v77 = (uint64_t)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  double v16 = (char *)&v72 - v15;
  uint64_t v17 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v17);
  CGFloat v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v20 - 8);
  double v22 = (void **)((char *)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v76 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  sub_1002F216C((uint64_t)a2, (uint64_t)v22, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  v86[0] = _swiftEmptyArrayStorage;
  sub_1000A13DC();
  sub_10003B754(&qword_100789188);
  sub_1000A1434();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  sub_100055D48(v22, (uint64_t)v19, (void *)1, (uint64_t)v86);
  CGFloat v23 = *a2;
  type metadata accessor for TTRShowCompletedByDateBucketsDataModelSource();
  swift_allocObject();
  id v24 = v23;
  uint64_t v25 = TTRShowCompletedByDateBucketsDataModelSource.init(store:countCompleted:)();
  (*(void (**)(char *, void, char *))(v9 + 104))(v11, enum case for REMRemindersListDataView.SortingStyle.default(_:), v79);
  TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)();
  id v26 = v86[0];
  uint64_t v79 = v16;
  uint64_t v27 = (uint64_t)v16;
  uint64_t v28 = v77;
  sub_1002F216C(v27, v77, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  type metadata accessor for TTRShowCompletedViewModelSource();
  uint64_t v29 = (uint64_t *)swift_allocObject();
  swift_retain();
  id v30 = v26;
  uint64_t v31 = sub_1002FFE78(v25, v30, v28, v29);
  uint64_t v77 = v25;
  swift_release();

  sub_1002F216C((uint64_t)a2, (uint64_t)v22, v76);
  sub_100057134((uint64_t)v86, (uint64_t)v83);
  swift_retain();
  uint64_t v74 = v31;
  sub_100056B24((uint64_t)v22, (uint64_t)v83, v31, (uint64_t)&off_1007512D8, v82);
  uint64_t v32 = (uint64_t)v73;
  sub_100056CAC((uint64_t)v73);
  uint64_t v76 = (uint64_t (*)(void))type metadata accessor for TTRIShowCompletedPresenter();
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = (uint64_t)v75;
  sub_1002F216C(v32, (uint64_t)v75, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v35 = v81;
  swift_unknownObjectRetain();
  uint64_t v36 = sub_1003585DC(v34, v35, v33);
  sub_1002F21D4(v32, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v37 = *(void *)(v36 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v39 = *(uint64_t (**)(uint64_t, uint64_t))(v37 + 104);
  swift_retain();
  if (v39(ObjectType, v37))
  {
    uint64_t v41 = v40;
    uint64_t v42 = swift_getObjectType();
    LOBYTE(v41) = (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 16))(v42, v41);
    swift_release();
    swift_unknownObjectRelease();
    char v43 = v41 & 1;
  }
  else
  {
    swift_release();
    char v43 = 0;
  }
  uint64_t v44 = sub_1001D0C84(v43, v36);
  char v73 = v45;
  uint64_t v47 = v46;
  uint64_t v49 = v48;
  uint64_t v72 = swift_getObjectType();
  *(void *)(v36 + 24) = *(void *)(v49 + 8);
  uint64_t v81 = v47;
  swift_unknownObjectWeakAssign();
  uint64_t v50 = *(void *)(v36 + 144);
  uint64_t v51 = swift_getObjectType();
  int v52 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 104);
  swift_retain_n();
  char v53 = v44;
  if (v52(v51, v50))
  {
    uint64_t v55 = v54;
    uint64_t v56 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v55 + 16))(v56, v55);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v57 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v75 = v53;
  uint64_t v58 = (void *)sub_10035A06C(v36);
  swift_release();

  uint64_t v59 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v49 + 32);
  char v73 = v58;
  v59(v58, &off_1007464D0, v72, v49);
  uint64_t v60 = (char *)v86[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v60 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v61 = (char *)v86[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v61 + 1) = &protocol witness table for TTRShowCompletedByDateBucketsDataModelSource;
  uint64_t v62 = v77;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v63 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v62 + 376);
  uint64_t v64 = swift_retain();
  v63(v64, &off_100736468);
  swift_retain();
  uint64_t v65 = swift_retain();
  sub_1005B1F9C(v65, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v66 = v82;
  *(void *)(*(void *)(v82 + *(int *)(v78 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v87, (uint64_t)v83);
  long long v84 = v88;
  long long v85 = v89;
  *(void *)(v88 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v83);
  sub_100038DC0((uint64_t)&v90, (uint64_t)v83);
  uint64_t v67 = *((void *)&v91 + 1);
  long long v84 = v91;
  uint64_t v68 = swift_getObjectType();
  int v69 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v67 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v69(v36, &off_10073CA90, v68, v67);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v83);
  uint64_t v70 = v80;
  v80[3] = (uint64_t)v76;
  v70[4] = (uint64_t)&off_100743280;
  *uint64_t v70 = v36;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v66, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_1002F21D4((uint64_t)v79, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  sub_100057B44(v86);
  return v73;
}

uint64_t sub_1002FFE78(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  v34[0] = a3;
  v34[1] = v8;
  uint64_t v9 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((unsigned char *)a4 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_cachedEmptyListMessaging) = 0x80;
  CGFloat v19 = (char *)a4 + OBJC_IVAR____TtC9Reminders31TTRShowCompletedViewModelSource_completedRemindersCount;
  *(void *)CGFloat v19 = 0;
  v19[8] = 1;
  sub_1002F216C(a3, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain();
  uint64_t v20 = sub_100359DC4(a1, (uint64_t)a2, (uint64_t)v18, (uint64_t)a4);
  swift_retain();
  sub_10004BCF0((uint64_t)v15);
  uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v15, 0, 1, v21);
  sub_1005885DC((uint64_t)v15);
  sub_1000A1724((uint64_t)v15);
  double v22 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v23 = v22;
  static REMAnalyticsManager.shared.getter();
  uint64_t v24 = sub_10003B754(&qword_10078D258);
  uint64_t v25 = (uint64_t *)&v12[*(int *)(v24 + 48)];
  id v26 = (uint64_t *)&v12[*(int *)(v24 + 80)];
  uint64_t v27 = enum case for REMRemindersOpenUserOperation.SmartListType.completed(_:);
  uint64_t v28 = type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 104))(v12, v27, v28);
  uint64_t v29 = enum case for REMRemindersOpenUserOperation.smartList(_:);
  uint64_t v30 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v12, v29, v30);
  *uint64_t v25 = TTRUserDefaults.activitySessionId.getter();
  v25[1] = v31;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *id v26 = _typeName(_:qualified:)();
  v26[1] = v32;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for REMAnalyticsEvent.openListUserOperation(_:), v9);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1002F21D4(v34[0], (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v20;
}

uint64_t sub_100300244()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079AD40);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079AD40);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100300438()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [self systemBackgroundColor];
    [v2 setBackgroundColor:v3];

    id v4 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:24 target:v0 action:"didTapClose:"];
    id v5 = [v0 navigationItem];
    [v5 setRightBarButtonItem:v4];

    id v6 = [v0 navigationItem];
    [v6 setLargeTitleDisplayMode:2];

    [v0 ttr_setNeedsUpdateContentUnavailableConfiguration];
    id v7 = [v0 navigationItem];
    TTRTemplateSharingViewModel.Purpose.viewTitle.getter();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setTitle:v8];
  }
  else
  {
    __break(1u);
  }
}

uint64_t type metadata accessor for TTRITemplateSharingOffineViewController()
{
  return self;
}

uint64_t sub_1003009CC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100300A0C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10000C2D4;
  return sub_1000775C0(a1, v4, v5, v6);
}

void sub_100300AC0()
{
  id v1 = v0;
  id v14 = [self emptyProminentConfiguration];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [self _systemImageNamed:v2];

  [v14 setImage:v3];
  static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineTitle.getter();
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setText:v4];

  id v5 = [v14 textProperties];
  id v6 = [v14 textProperties];
  id v7 = [v6 font];

  Class isa = UIFont.withRoundedDesign()().super.isa;
  [v5 setFont:isa];

  static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineMessage.getter();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setSecondaryText:v9];

  id v10 = [v14 secondaryTextProperties];
  id v11 = [v14 secondaryTextProperties];
  id v12 = [v11 font];

  Class v13 = UIFont.withRoundedDesign()().super.isa;
  [v10 setFont:v13];

  [v1 ttr_setContentUnavailableConfiguration:v14];
}

id sub_100300DEC(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders32TTRIRemindersBoardBackgroundView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v9.receiver = v1;
  v9.super_class = ObjectType;
  [super initWithCoder:a1];
  if (v4)
  {
    id v5 = objc_allocWithZone((Class)UITapGestureRecognizer);
    id v6 = v4;
    id v7 = [v5 initWithTarget:v6 action:"tapGestureAction:"];
    [v6 addGestureRecognizer:v7];

    a1 = v7;
  }

  return v4;
}

void sub_100300EF4(uint64_t a1)
{
  sub_100144CE0(a1, (uint64_t)v3);
  if (v4)
  {
    sub_10030107C();
    if (swift_dynamicCast())
    {
      if (UIAccessibilityIsVoiceOverRunning()
        || ([v2 locationInView:v1], !swift_unknownObjectWeakLoadStrong()))
      {
      }
      else
      {
        sub_100440DD4(v1);

        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    sub_10003D3BC((uint64_t)v3);
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardBackgroundView()
{
  return self;
}

unint64_t sub_10030107C()
{
  unint64_t result = qword_10079ADC8;
  if (!qword_10079ADC8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10079ADC8);
  }
  return result;
}

char *sub_1003010BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  id v7 = objc_allocWithZone((Class)UILabel);
  NSString v8 = v3;
  id v9 = [v7 init];
  static TTRLocalizableStrings.Templates.templatePreview.getter();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v9 setText:v10];

  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v11 = (void *)static UIFont.roundedBodyFont.getter();
  [v9 setFont:v11];

  id v12 = [self secondaryLabelColor];
  [v9 setTextColor:v12];

  [v9 setAdjustsFontForContentSizeCategory:1];
  [v9 setNumberOfLines:0];
  LODWORD(v13) = 1132068864;
  [v9 setContentCompressionResistancePriority:0 forAxis:v13];
  *(void *)&v8[qword_10079ADD0] = v9;
  id v14 = v9;

  if (a3)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v26.receiver = v8;
  v26.super_class = ObjectType;
  uint64_t v16 = (char *)[super initWithStyle:a1 reuseIdentifier:v15];

  uint64_t v17 = *(void **)&v16[direct field offset for TTRITableViewContainerCell.containerView];
  uint64_t v18 = v16;
  id v19 = v17;
  [v19 setHorizontalAlignment:1];
  [v19 setVerticalAlignment:0];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_10066D470;
  *(void *)(v20 + 32) = v14;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  id v21 = v14;
  id v22 = v19;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v22 setArrangedSubviews:isa];

  [v18 setSeparatorInset:UIEdgeInsetsZero];
  uint64_t v24 = v18;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  return v24;
}

char *sub_1003013A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    a4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v6 = 0;
  }
  return sub_1003010BC(a3, a4, v6);
}

void sub_1003013F0()
{
}

void sub_10030144C()
{
}

Class sub_1003014A8(uint64_t a1)
{
  sub_10003B754((uint64_t *)&unk_1007938C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10066C6F0;
  id v3 = *(void **)(a1 + qword_10079ADD0);
  *(void *)(v2 + 56) = sub_1000368FC(0, &qword_100787808);
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  v5.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

void sub_100301558()
{
}

void sub_100301568(uint64_t a1)
{
}

uint64_t type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell()
{
  uint64_t result = qword_10079AE00;
  if (!qword_10079AE00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003015C4()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10030160C()
{
  return type metadata accessor for TTRIRemindersListPublicTemplatePreviewStatusCell();
}

uint64_t sub_100301614()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079AEE0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079AEE0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10030171C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10003B754(&qword_100797388);
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  __chkstk_darwin(v3);
  uint64_t v64 = (char *)v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = v4;
  __chkstk_darwin(v5);
  char v73 = (char *)v61 - v6;
  uint64_t v72 = sub_10003B754((uint64_t *)&unk_10079AFB0);
  uint64_t v67 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v62 = (char *)v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v61[1] = v7;
  __chkstk_darwin(v8);
  uint64_t v71 = (char *)v61 - v9;
  uint64_t v70 = (void *)type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v10 = *(v70 - 1);
  __chkstk_darwin(v70);
  id v12 = (char *)v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v65 = *(void *)(v17 - 8);
  uint64_t v66 = v17;
  double v18 = __chkstk_darwin(v17);
  uint64_t v74 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v76.receiver = v0;
  v76.super_class = ObjectType;
  [super viewDidLoad:v18];
  id v20 = [v0 navigationItem];
  if (v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style])
  {
    static TTRLocalizableStrings.Templates.templatesListTitle.getter();
  }
  else
  {
    v21._object = (void *)0x80000001006B60E0;
    v22._object = (void *)0x80000001006B6100;
    v21._countAndFlagsBits = 0xD00000000000001ALL;
    v23._countAndFlagsBits = 0x7473694C2077654ELL;
    v23._object = (void *)0xE800000000000000;
    v22._countAndFlagsBits = 0xD00000000000001ALL;
    TTRLocalizedString(_:value:comment:)(v21, v23, v22);
  }
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setTitle:v24];

  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v13);
  UICollectionLayoutListConfiguration.init(appearance:)();
  (*(void (**)(char *, void, void *))(v10 + 104))(v12, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v70);
  UICollectionLayoutListConfiguration.footerMode.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter();
  sub_1000368FC(0, (unint64_t *)&qword_100797380);
  uint64_t v25 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id result = [v0 view];
  if (result)
  {
    uint64_t v27 = result;
    [result bounds];
    double v29 = v28;
    double v31 = v30;
    double v33 = v32;
    double v35 = v34;

    id v36 = objc_allocWithZone((Class)UICollectionView);
    uint64_t v70 = v25;
    id v37 = [v36 initWithFrame:v25 collectionViewLayout:v29, v31, v33, v35];
    [v37 setAutoresizingMask:18];
    id result = [v1 view];
    if (result)
    {
      uint64_t v38 = result;
      [result addSubview:v37];

      [v37 setDelegate:v1];
      [v37 setAllowsSelection:1];
      swift_allocObject();
      swift_unknownObjectWeakInit();
      type metadata accessor for TTRITemplatesListCell();
      sub_1000368FC(0, qword_10078E3D0);
      uint64_t v39 = v71;
      UICollectionView.CellRegistration.init(handler:)();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_1000368FC(0, &qword_100797398);
      uint64_t v40 = v73;
      UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
      uint64_t v41 = v67;
      uint64_t v42 = v62;
      uint64_t v43 = v72;
      (*(void (**)(char *, char *, uint64_t))(v67 + 16))(v62, v39, v72);
      unint64_t v44 = (*(unsigned __int8 *)(v41 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
      uint64_t v45 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v41 + 32))(v45 + v44, v42, v43);
      id v46 = objc_allocWithZone((Class)sub_10003B754(&qword_10079AFC0));
      id v47 = v37;
      uint64_t v48 = (void *)UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
      uint64_t v49 = v68;
      uint64_t v50 = v64;
      uint64_t v51 = v40;
      uint64_t v52 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v64, v51, v69);
      unint64_t v53 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      uint64_t v54 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v54 + v53, v50, v52);
      dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
      uint64_t v55 = (void (*)(unsigned char *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
      sub_10003B754(&qword_10079AFC8);
      UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter();
      v55(v75, 0);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v56 = (void (*)(unsigned char *, void))UICollectionViewDiffableDataSource.reorderingHandlers.modify();
      UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter();
      v56(v75, 0);
      id v57 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView];
      *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView] = v47;
      id v58 = v47;

      uint64_t v59 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
      *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource] = v48;
      id v60 = v48;

      sub_1003042D4(0);
      sub_100304618();

      (*(void (**)(char *, uint64_t))(v49 + 8))(v73, v52);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v71, v72);
      return (id)(*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v74, v66);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1003020A0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  static TTRLocalizableStrings.Templates.deleteTemplate.getter();
  uint64_t v5 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v7 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v5;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v8 + v7, (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  swift_retain();
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_10030780C;
  aBlock[5] = v8;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1003687EC;
  aBlock[3] = &unk_100743490;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = [self contextualActionWithStyle:1 title:v9 handler:v10];

  _Block_release(v10);
  swift_release();
  swift_release();
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10066D470;
  *(void *)(v12 + 32) = v11;
  aBlock[0] = v12;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&unk_10079CA10);
  id v13 = v11;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [self configurationWithActions:isa];

  return v15;
}

uint64_t sub_1003023A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a6;
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  id v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a3;
  *(void *)(v15 + 24) = a4;
  uint64_t v16 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  uint64_t v17 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();
  swift_retain();

  uint64_t v19 = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v26, v8);
  type metadata accessor for MainActor();
  swift_retain();
  swift_retain();
  uint64_t v20 = static MainActor.shared.getter();
  unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v22 = (v10 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  Swift::String v23 = (char *)swift_allocObject();
  *((void *)v23 + 2) = v20;
  *((void *)v23 + 3) = &protocol witness table for MainActor;
  *((void *)v23 + 4) = v17;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v23[v21], v11, v19);
  NSString v24 = (uint64_t (**)(unsigned __int8 *))&v23[v22];
  *NSString v24 = sub_1003078E0;
  v24[1] = (uint64_t (*)(unsigned __int8 *))v15;
  swift_release();
  sub_1000286A4((uint64_t)v14, (uint64_t)&unk_10079B008, (uint64_t)v23);
  swift_release();
  return swift_release();
}

uint64_t sub_100302658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[19] = a6;
  v7[20] = a7;
  v7[17] = a4;
  v7[18] = a5;
  type metadata accessor for MainActor();
  v7[21] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[22] = v9;
  v7[23] = v8;
  return _swift_task_switch(sub_1003026F4, v9, v8);
}

void sub_1003026F4()
{
  uint64_t v12 = v0;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
    id v4 = v3;

    if (!v3)
    {
      __break(1u);
      return;
    }
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    uint64_t v5 = *(void **)(v0 + 128);
    *(void *)(v0 + 192) = v5;
    if (v5)
    {
      swift_beginAccess();
      uint64_t v6 = swift_unknownObjectWeakLoadStrong();
      if (v6)
      {
        unint64_t v7 = (void *)v6;
        *(void *)(v0 + 200) = *(void *)(v6 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
        swift_unknownObjectRetain();

        *(void *)(v0 + 48) = 0;
        *(_OWORD *)(v0 + 16) = 0u;
        *(_OWORD *)(v0 + 32) = 0u;
        *(_OWORD *)(v0 + 56) = xmmword_10066D9A0;
        *(unsigned char *)(v0 + 72) = 0;
        uint64_t v8 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v8;
        *uint64_t v8 = v0;
        v8[1] = sub_1003028D0;
        sub_100252A78((uint64_t)v5, v0 + 16);
        return;
      }
    }
  }
  swift_release();
  uint64_t v9 = *(void (**)(char *))(v0 + 152);
  char v11 = 0;
  v9(&v11);
  uint64_t v10 = *(void (**)(void))(v0 + 8);
  v10();
}

uint64_t sub_1003028D0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 73) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return _swift_task_switch(sub_100302A1C, v4, v3);
}

uint64_t sub_100302A1C()
{
  uint64_t v6 = v0;
  uint64_t v1 = *(void **)(v0 + 192);
  swift_release();

  uint64_t v2 = *(void (**)(char *))(v0 + 152);
  char v5 = *(unsigned char *)(v0 + 73);
  v2(&v5);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100302A9C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (!result) {
    return 0;
  }
  uint64_t v1 = (void *)result;
  uint64_t v2 = *(void **)(result + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v2)
  {
    id v3 = v2;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    if (v5)
    {
      swift_unknownObjectRetain();
      id v4 = sub_100255A34(v5);

      swift_unknownObjectRelease();
      return (uint64_t)v4;
    }

    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_100302B70(uint64_t a1, uint64_t a2, void (**a3)(char *, uint64_t, uint64_t))
{
  uint64_t v5 = type metadata accessor for UICellAccessory.DeleteOptions();
  uint64_t v94 = *(void *)(v5 - 8);
  uint64_t v95 = v5;
  __chkstk_darwin(v5);
  uint64_t v93 = (char *)v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UICellAccessory.ReorderOptions();
  uint64_t v90 = *(void *)(v7 - 8);
  uint64_t v91 = v7;
  __chkstk_darwin(v7);
  uint64_t v87 = (char *)v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v99 = *(void *)(v9 - 8);
  uint64_t v100 = v9;
  __chkstk_darwin(v9);
  uint64_t v92 = (char *)v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_1007973D0);
  __chkstk_darwin(v11 - 8);
  long long v85 = (char *)v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = type metadata accessor for UICellAccessory.CustomViewConfiguration();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v81 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for UICellAccessory.Placement();
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  uint64_t v79 = (char *)v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v96 = (char *)v74 - v16;
  uint64_t v17 = type metadata accessor for UICellAccessory();
  uint64_t v88 = *(void *)(v17 - 8);
  uint64_t v89 = v17;
  __chkstk_darwin(v17);
  uint64_t v86 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v98 = (char *)v74 - v20;
  __chkstk_darwin(v21);
  uint64_t v97 = (char *)v74 - v22;
  uint64_t v23 = sub_10003B754(&qword_1007A03B0);
  uint64_t v76 = *(void *)(v23 - 8);
  uint64_t v24 = *(void *)(v76 + 64);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  double v28 = (char *)v74 - v27;
  double v29 = *a3;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v31 = (void *)Strong;
    uint64_t v75 = v29;
    swift_unknownObjectRetain();

    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_unknownObjectRelease();
    TTRTemplatesListViewModel.template(with:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = type metadata accessor for TTRTemplatesListViewModel.Template();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v28, 1, 1, v32);
  }
  uint64_t v78 = v28;
  uint64_t v33 = a1;
  sub_1004508A4((uint64_t)v28);
  uint64_t v34 = sub_10003B754(&qword_1007973E0);
  double v35 = v96;
  id v36 = (uint64_t (**)())&v96[*(int *)(v34 + 48)];
  id v37 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 104);
  v74[2] = v99 + 104;
  uint64_t v75 = v37;
  v37(v96, enum case for UICellAccessory.DisplayedState.whenNotEditing(_:), v100);
  void *v36 = variable initialization expression of TTRSmartListFilterEditorInteractor.listFetchOperationManager;
  v36[1] = 0;
  uint64_t v38 = v80;
  uint64_t v39 = v82;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v35, enum case for UICellAccessory.Placement.trailing(_:), v82);
  uint64_t v40 = swift_allocObject();
  swift_beginAccess();
  uint64_t v41 = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  sub_100307460((uint64_t)v28, (uint64_t)v25);
  unint64_t v42 = (*(unsigned __int8 *)(v76 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v40;
  v74[1] = v40;
  sub_100307670((uint64_t)v25, v43 + v42);
  uint64_t v77 = v33;
  unint64_t v44 = (Class (**)())(v33 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider);
  uint64_t v45 = *(void *)(v33 + OBJC_IVAR____TtC9Reminders21TTRITemplatesListCell_infoButtonMenuProvider);
  *unint64_t v44 = sub_1003076D8;
  v44[1] = (Class (*)())v43;
  swift_retain();
  sub_1000499C4(v45);
  swift_retain();
  sub_100450B80();
  id v46 = v96;
  uint64_t v47 = v39;
  (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v79, v96, v39);
  uint64_t v48 = type metadata accessor for UICellAccessory.LayoutDimension();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56);
  uint64_t v76 = v49 + 56;
  uint64_t v51 = v85;
  v74[0] = v48;
  v50(v85, 1, 1, v48);
  uint64_t v52 = v81;
  UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
  static UICellAccessory.customView(configuration:)();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v52, v84);
  swift_release();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v46, v47);
  swift_release();
  uint64_t v53 = enum case for UICellAccessory.DisplayedState.whenEditing(_:);
  uint64_t v54 = v92;
  uint64_t v55 = v100;
  uint64_t v56 = v75;
  v75(v92, enum case for UICellAccessory.DisplayedState.whenEditing(_:), v100);
  v50(v51, 1, 1, v48);
  id v57 = v87;
  UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)();
  static UICellAccessory.reorder(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v57, v91);
  id v58 = *(void (**)(char *, uint64_t))(v99 + 8);
  v58(v54, v55);
  v56(v54, v53, v55);
  v50(v51, 1, 1, v74[0]);
  uint64_t v59 = v93;
  UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)();
  id v60 = v86;
  static UICellAccessory.delete(displayed:options:actionHandler:)();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v59, v95);
  v58(v54, v55);
  sub_10003B754((uint64_t *)&unk_10079AFF0);
  uint64_t v61 = v88;
  uint64_t v62 = *(void *)(v88 + 72);
  unint64_t v63 = (*(unsigned __int8 *)(v88 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
  uint64_t v64 = 2 * v62;
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = xmmword_100671350;
  unint64_t v66 = v65 + v63;
  uint64_t v67 = *(void (**)(unint64_t, char *, uint64_t))(v61 + 16);
  uint64_t v68 = v97;
  uint64_t v69 = v89;
  v67(v65 + v63, v97, v89);
  unint64_t v70 = v66 + v62;
  uint64_t v71 = v98;
  v67(v70, v98, v69);
  v67(v66 + v64, v60, v69);
  UICollectionViewListCell.accessories.setter();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v61 + 8);
  v72(v60, v69);
  v72(v71, v69);
  v72(v68, v69);
  return sub_10003B6F8((uint64_t)v78, &qword_1007A03B0);
}

Class sub_10030361C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_10003B754(&qword_1007A03B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRTemplatesListViewModel.Template();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    sub_100307460(a2, (uint64_t)v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_100257BFC((uint64_t)v5, (uint64_t)v9);
      Class v12 = sub_1003037CC((uint64_t)v9);

      sub_100307334((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
      return v12;
    }

    sub_10003B6F8((uint64_t)v5, &qword_1007A03B0);
  }
  return 0;
}

Class sub_1003037CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRTemplatePublicLinkData();
  __chkstk_darwin(v2 - 8);
  uint64_t v38 = (uint64_t)v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRTemplatesListViewModel.Template();
  uint64_t v5 = v4 - 8;
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v36 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
  uint64_t v41 = static TTRLocalizableStrings.Templates.editTemplate.getter();
  uint64_t v35[2] = v8;
  NSString v9 = String._bridgeToObjectiveC()();
  id v40 = self;
  v35[1] = [v40 _systemImageNamed:v9];

  uint64_t v10 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100306D88(a1, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
  uint64_t v11 = *(unsigned __int8 *)(v36 + 80);
  uint64_t v12 = (v11 + 24) & ~v11;
  v35[0] = v11 | 7;
  uint64_t v36 = v12 + v6;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v10;
  sub_100257BFC((uint64_t)v7, v13 + v12);
  uint64_t v41 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v14 = *(int *)(v5 + 36);
  uint64_t v15 = a1;
  uint64_t v37 = a1;
  uint64_t v16 = v38;
  sub_100306D88(a1 + v14, v38, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100306D88(v15, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  sub_100257BFC((uint64_t)v7, v18 + v12);
  swift_retain();
  uint64_t v19 = (void *)sub_1000D8A84(v16, 1, (uint64_t)sub_100306DF4, v18);
  swift_release();
  sub_100307334(v16, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  swift_release();
  static TTRLocalizableStrings.Templates.deleteTemplate.getter();
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v40 _systemImageNamed:v20];

  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100306D88(v37, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v22;
  sub_100257BFC((uint64_t)v7, v23 + v12);
  uint64_t v24 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_1000368FC(0, &qword_1007894E0);
  sub_10003B754(&qword_10079AF70);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100671350;
  uint64_t v26 = (void *)v41;
  *(void *)(v25 + 32) = v41;
  *(void *)(v25 + 40) = v19;
  *(void *)(v25 + 48) = v24;
  uint64_t v42 = v25;
  specialized Array._endMutation()();
  id v27 = v19;
  id v28 = v24;
  id v29 = v26;
  sub_10003B754(&qword_10079AF78);
  sub_1000368FC(0, &qword_10079AF80);
  sub_100307070();
  UIMenuElementSize v30 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  v43.value.super.Class isa = 0;
  v43.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v31, (Swift::String_optional)0, v43, 0, 0xFFFFFFFFFFFFFFFFLL, v30, v34).super.super.isa;

  return isa;
}

void sub_100303D04()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100303D74();
  }
}

uint64_t sub_100303D74()
{
  uint64_t v1 = type metadata accessor for UIListContentConfiguration();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = UICollectionViewListCell.defaultContentConfiguration()();
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
  if (v6)
  {
    id v7 = v6;
    IndexPath.section.getter();
    dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

    if ((v12[0] & 1) == 0)
    {
      if (([v0 isEditing] & 1) == 0)
      {
        v8._countAndFlagsBits = 0xD000000000000023;
        v8._object = (void *)0x80000001006B6080;
        v9._object = (void *)0x80000001006B60B0;
        v9._countAndFlagsBits = 0xD000000000000020;
        TTRLocalizedString(_:comment:)(v8, v9);
      }
      UIListContentConfiguration.text.setter();
    }
    v12[3] = v1;
    v12[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    uint64_t v10 = sub_1000394A8(v12);
    (*(void (**)(uint64_t *, char *, uint64_t))(v2 + 16))(v10, v4, v1);
    UICollectionViewCell.contentConfiguration.setter();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100303F30(uint64_t a1, uint64_t a2, void **a3)
{
  uint64_t v3 = *a3;
  type metadata accessor for TTRITemplatesListCell();
  sub_1000368FC(0, qword_10078E3D0);
  id v4 = v3;
  uint64_t v5 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();

  return v5;
}

void sub_100303FD0()
{
  uint64_t v0 = sub_10003B754(&qword_10079AFD0);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_10079AFD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10079AFE0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    sub_10003B754(&qword_10079AFE8);
    uint64_t v13 = NSDiffableDataSourceTransaction.sectionTransactions.getter();
    if (*(void *)(v13 + 16))
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v6, v13 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), v7);
      uint64_t v14 = 0;
    }
    else
    {
      uint64_t v14 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, v14, 1, v7);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {

      sub_10003B6F8((uint64_t)v6, &qword_10079AFD8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
      NSDiffableDataSourceSectionTransaction.finalSnapshot.getter();
      NSDiffableDataSourceSectionSnapshot.items.getter();
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      sub_1002556F0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_1003042D4(int a1)
{
  v23[1] = a1;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10079AF60);
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  __chkstk_darwin(v2);
  uint64_t v26 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = v1;
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter];
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 72);
  uint64_t v7 = *(void *)(v4 + 88);
  uint64_t v8 = (uint64_t *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  uint64_t v9 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  uint64_t v28 = *(void *)(v4 + 80);
  if (!v9)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = v7;
    uint64_t v13 = v5;
    uint64_t v14 = v6;
    uint64_t v15 = v16;
    TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter();
    goto LABEL_5;
  }
  uint64_t v10 = v6;
  uint64_t v11 = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100305FE4(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int v12 = TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter() & 1;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = v5;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  if ((TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter() & 1) != v12) {
LABEL_5:
  }
    [v27 ttr_setNeedsUpdateContentUnavailableConfiguration];
  uint64_t v17 = *v8;
  uint64_t v18 = v26;
  if (*v8)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    TTRTemplatesListViewModel.isEmpty.getter();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = *v8;
  }
  sub_100305FE4(v17);
  TTRTemplatesListViewModel.snapshot(previousViewModel:)();
  uint64_t result = sub_100306030(v17);
  NSString v20 = *(void **)&v27[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
  if (v20)
  {
    id v21 = v20;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    (*(void (**)(char *, uint64_t))(v24 + 8))(v18, v25);
    uint64_t v22 = *v8;
    *uint64_t v8 = v13;
    v8[1] = v14;
    v8[2] = v28;
    _OWORD v8[3] = v15;
    return sub_100306030(v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100304618()
{
  uint64_t v1 = v0;
  char v2 = *((unsigned char *)v0 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style);
  id v3 = [v1 navigationItem];
  if (v2)
  {
    id v4 = [v1 editButtonItem];
    [v3 setLeftBarButtonItem:v4];

    id v5 = [v1 navigationItem];
    if ([v1 isEditing]) {
      id v6 = 0;
    }
    else {
      id v6 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
    }
    [v5 setRightBarButtonItem:v6];

    id v12 = [v1 editButtonItem];
    if ([v1 isEditing])
    {
      char v13 = 1;
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v14 = TTRTemplatesListViewModel.isEmpty.getter();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v13 = v14 ^ 1;
    }
    [v12 setEnabled:v13 & 1];

    sub_1000368FC(0, &qword_100788D80);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
  }
  else
  {
    id v7 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton, &selRef_didTapCancel_, 1);
    [v3 setLeftBarButtonItem:v7];

    id v8 = [v1 navigationItem];
    id v9 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
    [v8 setRightBarButtonItem:v9];

    id v10 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton, &selRef_didTapDone_, 0);
    [v10 setEnabled:0];

    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_10066C430;
    *(void *)(v11 + 32) = [self flexibleSpaceItem];
    *(void *)(v11 + 40) = [v1 editButtonItem];
    uint64_t v17 = v11;
    specialized Array._endMutation()();
    sub_1000368FC(0, &qword_100788D80);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 setToolbarItems:isa, isa, v17];
}

void sub_100304B88(char a1, char a2)
{
  id v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  double v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25.receiver = v3;
  v25.super_class = ObjectType;
  uint64_t v12 = a1 & 1;
  [super setEditing:v12 animated:a2 & 1, v9];
  uint64_t v13 = OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView;
  char v14 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView];
  if (!v14)
  {
    __break(1u);
    goto LABEL_12;
  }
  [v14 setEditing:v12];
  sub_100304618();
  uint64_t v15 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource];
  if (!v15)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v16 = v15;
  dispatch thunk of UICollectionViewDiffableDataSource.index(for:)();
  char v18 = v17;

  if (v18) {
    return;
  }
  IndexPath.init(row:section:)();
  uint64_t v19 = *(void **)&v3[v13];
  if (!v19)
  {
LABEL_13:
    __break(1u);
    return;
  }
  NSString v20 = UICollectionElementKindSectionFooter;
  id v21 = v19;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v23 = [v21 supplementaryViewForElementKind:v20 atIndexPath:isa];

  if (v23)
  {
    self;
    if (swift_dynamicCastObjCClass())
    {
      id v24 = v23;
      sub_100303D74();
    }
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

void sub_100304E60()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_presenter);
    swift_unknownObjectRetain();

    if (qword_100785380 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_1007938E8);
    sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
    sub_10001A078();
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v2 + 176) == 1
      || (uint64_t v4 = *(void *)(v2 + 104),
          uint64_t ObjectType = swift_getObjectType(),
          (uint64_t v6 = TTRTemplatesListInteractorType.template(with:)()) == 0))
    {
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v7 = (void *)v6;
      [*(id *)(v2 + OBJC_IVAR____TtC9Reminders26TTRITemplatesListPresenter_editorUndoManager) removeAllActions];
      sub_100038D28((void *)(v2 + 112), *(void *)(v2 + 136));
      uint64_t v8 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
      sub_10030607C(v7, v8, v2);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_100305000(char a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    swift_unknownObjectRetain();

    sub_100255FDC(a1);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_10030508C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for TTRTemplatesListViewModel.Template();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  sub_100306D88(a3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v14 = static MainActor.shared.getter();
  unint64_t v15 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  id v16 = (void *)swift_allocObject();
  _OWORD v16[2] = v14;
  uint64_t v16[3] = &protocol witness table for MainActor;
  v16[4] = v12;
  sub_100257BFC((uint64_t)v7, (uint64_t)v16 + v15);
  swift_release();
  sub_1000286A4((uint64_t)v10, (uint64_t)&unk_10079AFA0, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1003052C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[22] = a4;
  v5[23] = a5;
  sub_10003B754(&qword_10078E8F0);
  v5[24] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for IndexPath();
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[28] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[29] = v8;
  v5[30] = v7;
  return _swift_task_switch(sub_1003053E4, v8, v7);
}

uint64_t sub_1003053E4()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 248) = result;
  if (result)
  {
    uint64_t v2 = result;
    uint64_t v3 = *(void **)(result + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
    if (v3)
    {
      uint64_t v4 = *(void *)(v0 + 192);
      uint64_t v5 = **(void **)(v0 + 184);
      uint64_t v7 = *(void *)(v0 + 200);
      uint64_t v6 = *(void *)(v0 + 208);
      *(void *)(v0 + 168) = v5;
      id v8 = v3;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

      uint64_t v27 = v5;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v7) == 1)
      {
        sub_10003B6F8(*(void *)(v0 + 192), &qword_10078E8F0);
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
        LOBYTE(v15) = 0;
        goto LABEL_12;
      }
      uint64_t result = (*(uint64_t (**)(void, void, void))(*(void *)(v0 + 208) + 32))(*(void *)(v0 + 216), *(void *)(v0 + 192), *(void *)(v0 + 200));
      char v17 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView);
      if (v17)
      {
        uint64_t v18 = *(void *)(v0 + 208);
        uint64_t v19 = *(void *)(v0 + 216);
        uint64_t v20 = *(void *)(v0 + 200);
        id v21 = v17;
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
        id v15 = [v21 cellForItemAtIndexPath:isa];

        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
        if (v15)
        {
          static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)();
          uint64_t v23 = *(void *)(v0 + 80);
          uint64_t v10 = *(void *)(v0 + 88);
          uint64_t v11 = *(void *)(v0 + 96);
          uint64_t v12 = *(void *)(v0 + 104);
          uint64_t v13 = *(void *)(v0 + 112);
          uint64_t v24 = *(unsigned __int8 *)(v0 + 120);
          uint64_t v14 = *(void *)(v0 + 128);
          objc_super v25 = v15;
          LOBYTE(v15) = *(unsigned char *)(v0 + 136);

          uint64_t v9 = v23;
LABEL_13:
          *(unsigned char *)(v0 + 73) = (_BYTE)v15;
          *(void *)(v0 + 296) = v24;
          *(void *)(v0 + 304) = v14;
          *(void *)(v0 + 280) = v12;
          *(void *)(v0 + 288) = v13;
          *(void *)(v0 + 264) = v10;
          *(void *)(v0 + 272) = v11;
          *(void *)(v0 + 256) = v9;
          *(void *)(v0 + 16) = v9;
          *(void *)(v0 + 24) = v10;
          *(void *)(v0 + 32) = v11;
          *(void *)(v0 + 40) = v12;
          *(void *)(v0 + 48) = v13;
          *(void *)(v0 + 56) = v24;
          *(void *)(v0 + 64) = v14;
          *(unsigned char *)(v0 + 72) = (_BYTE)v15;
          uint64_t v26 = (void *)swift_task_alloc();
          *(void *)(v0 + 312) = v26;
          *uint64_t v26 = v0;
          v26[1] = sub_1003056DC;
          return sub_100252A78(v27, v0 + 16);
        }
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v11 = 0;
        uint64_t v12 = 0;
        uint64_t v13 = 0;
        uint64_t v14 = 0;
LABEL_12:
        uint64_t v24 = 254;
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1003056DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 240);
  uint64_t v3 = *(void *)(v1 + 232);
  return _swift_task_switch(sub_1003057FC, v3, v2);
}

uint64_t sub_1003057FC()
{
  uint64_t v1 = v0[37];
  uint64_t v3 = v0[35];
  uint64_t v2 = v0[36];
  uint64_t v5 = v0[33];
  uint64_t v4 = v0[34];
  uint64_t v7 = (void *)v0[31];
  uint64_t v6 = (void *)v0[32];
  swift_release();
  sub_1000A74BC(v6, v5, v4, v3, v2, v1);

  swift_task_dealloc();
  swift_task_dealloc();
  id v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t type metadata accessor for TTRITemplatesListViewController()
{
  return self;
}

double sub_100305B00@<D0>(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_style) == 1)
  {
    if (qword_100785490 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10079AEE0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "TTRITemplatesListViewController: unexpected call to popoverAnchorForDiscardChangesAlert", v6, 2u);
      swift_slowDealloc();
    }
  }
  id v7 = sub_1002D5AA4(&OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton, &selRef_didTapCancel_, 1);
  static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)();

  double result = *(double *)&v9;
  *(_OWORD *)a1 = v9;
  *(_OWORD *)(a1 + 16) = v10;
  *(void *)(a1 + 32) = v11;
  *(void *)(a1 + 40) = v12;
  *(void *)(a1 + 48) = v13;
  *(unsigned char *)(a1 + 56) = v14;
  return result;
}

void sub_100305C5C(void *a1)
{
  uint64_t v2 = v1;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [a1 deselectItemAtIndexPath:isa animated:1];

  os_log_type_t v5 = *(void **)(v2 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v5)
  {
    id v6 = v5;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    id v7 = v10[0];
    if (v10[0])
    {
      Class v8 = IndexPath._bridgeToObjectiveC()().super.isa;
      id v9 = [a1 cellForItemAtIndexPath:v8];

      if (v9)
      {
        static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)();
        sub_100257454();
        sub_1000C7C58((uint64_t)v10);
      }
      else
      {
      }
    }
  }
  else
  {
    __break(1u);
  }
}

Class sub_100305E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  os_log_type_t v5 = (void *)Strong;
  Class v6 = sub_1003037CC(a3);

  return v6;
}

uint64_t sub_100305FE4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100306030(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10030607C(void *a1, void *a2, uint64_t a3)
{
  Class v6 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v6);
  Class v8 = (void **)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    long long v10 = (void *)Strong;
    uint64_t v11 = type metadata accessor for TTRAttachmentThumbnailSizeProvider();
    uint64_t v23 = a3;
    uint64_t v12 = static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    static OS_dispatch_queue.main.getter();
    uint64_t v22 = a1;
    type metadata accessor for RDIDispatchQueue();
    static RDIDispatchQueue.utilityQueue.getter();
    uint64_t v13 = type metadata accessor for TTRThumbnailGenerator();
    swift_allocObject();
    uint64_t v14 = TTRThumbnailGenerator.init(queue:backgroundQueue:)();
    void v27[3] = v13;
    v27[4] = (uint64_t)&protocol witness table for TTRThumbnailGenerator;
    v27[0] = v14;
    uint64_t v25 = v11;
    uint64_t v26 = &protocol witness table for TTRAttachmentThumbnailSizeProvider;
    uint64_t v24 = v12;
    type metadata accessor for TTRAttachmentThumbnailsManager();
    swift_allocObject();
    uint64_t v15 = TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)();
    id v16 = (char *)v8 + v6[5];
    uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
    type metadata accessor for TTRIHashtagAssociationNoOpModuleInterface();
    uint64_t v18 = swift_allocObject();
    *Class v8 = a2;
    *(void *)((char *)v8 + v6[6]) = v15;
    uint64_t v19 = (void *)((char *)v8 + v6[7]);
    *uint64_t v19 = v18;
    v19[1] = (uint64_t)&off_1007417A8;
    *((unsigned char *)v8 + v6[8]) = 0;
    type metadata accessor for TTRIShowTemplateAssembly();
    id v20 = a2;
    swift_retain();
    id v21 = sub_10050AFDC(v27, (uint64_t)v8, v22, v23);
    sub_100038CD8((uint64_t)v27);
    [v10 presentViewController:v21 animated:1 completion:0];
    swift_release();

    sub_100307334((uint64_t)v8, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    swift_unknownObjectWeakAssign();
  }
}

void sub_10030630C()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_collectionView] = 0;
  os_log_type_t v5 = &v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_lastConsumedViewModel];
  *(_OWORD *)os_log_type_t v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___cancelButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController____lazy_storage___doneButton] = 0;

  if (qword_100785490 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_100018BF8(v1, (uint64_t)qword_10079AEE0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v6, v1);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_1003AA010((uint64_t)"init(coder:) has not been implemented", 37, 2);
  __break(1u);
}

void sub_100306478()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v2 = TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    id v32 = [self emptyProminentConfiguration];
    NSString v3 = String._bridgeToObjectiveC()();
    uint64_t v4 = self;
    id v5 = [v4 _systemImageNamed:v3];

    [v32 setImage:v5];
    static TTRLocalizableStrings.Templates.noTemplates.getter();
    NSString v6 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v32 setText:v6];

    id v7 = [v32 textProperties];
    id v8 = [v32 textProperties];
    id v9 = [v8 font];

    Class isa = UIFont.withRoundedDesign()().super.isa;
    [v7 setFont:isa];

    id v11 = [v32 secondaryTextProperties];
    id v12 = [v32 secondaryTextProperties];
    id v13 = [v12 font];

    Class v14 = UIFont.withRoundedDesign()().super.isa;
    [v11 setFont:v14];

    v15._countAndFlagsBits = 0xD00000000000002BLL;
    v16._countAndFlagsBits = 0xD000000000000062;
    v17._countAndFlagsBits = 0xD00000000000008ELL;
    v15._object = (void *)0x80000001006B5F50;
    v16._object = (void *)0x80000001006B5F80;
    v17._object = (void *)0x80000001006B5FF0;
    TTRLocalizedString(_:value:comment:)(v15, v16, v17);
    NSString v18 = String._bridgeToObjectiveC()();
    id v19 = [v4 _systemImageNamed:v18];

    sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
    id v20 = (void *)static UIImage.transformOptionalValue(_:)();

    id v21 = [v32 secondaryTextProperties];
    id v22 = [v21 font];

    id v23 = [self configurationWithFont:v22];
    id v24 = [v20 imageWithConfiguration:v23];

    id v25 = [v32 secondaryTextProperties];
    id v26 = [v25 color];

    id v27 = [v24 imageWithTintColor:v26];
    id v28 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v29 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v30 = [v28 initWithString:v29];

    v31._countAndFlagsBits = 0x3E4E4F43493CLL;
    v31._object = (void *)0xE600000000000000;
    NSMutableAttributedString.replace(placeholder:with:)(v31, (UIImage)v27);
    [v32 setSecondaryAttributedText:v30];
  }
  else
  {
    id v32 = 0;
  }
  [v1 ttr_setContentUnavailableConfiguration:v32];
}

void sub_100306920()
{
  uint64_t v1 = sub_10003B754(&qword_1007A03B0);
  __chkstk_darwin(v1 - 8);
  NSString v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRTemplatesListViewModel.Template();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v10 = (char *)&v20 - v9;
  id v11 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRITemplatesListViewController_dataSource);
  if (v11)
  {
    id v12 = v11;
    dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

    id v21 = (id)aBlock[0];
    if (aBlock[0])
    {
      id v20 = v10;
      uint64_t v13 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      TTRTemplatesListViewModel.template(with:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
      {

        sub_10003B6F8((uint64_t)v3, &qword_1007A03B0);
      }
      else
      {
        uint64_t v14 = (uint64_t)v20;
        sub_100257BFC((uint64_t)v3, (uint64_t)v20);
        uint64_t v15 = swift_allocObject();
        swift_unknownObjectWeakInit();
        sub_100306D88(v14, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
        unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
        uint64_t v17 = swift_allocObject();
        *(void *)(v17 + 16) = v15;
        sub_100257BFC((uint64_t)v7, v17 + v16);
        NSString v18 = self;
        aBlock[4] = sub_100306CF8;
        aBlock[5] = v17;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_1001D0924;
        aBlock[3] = &unk_100743328;
        id v19 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        [v18 configurationWithIdentifier:0 previewProvider:0 actionProvider:v19];
        swift_release();
        _Block_release(v19);

        sub_100307334(v14, (uint64_t (*)(void))&type metadata accessor for TTRTemplatesListViewModel.Template);
        swift_release();
      }
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100306CBC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

Class sub_100306CF8(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for TTRTemplatesListViewModel.Template() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100305E68(a1, v4, v5);
}

uint64_t sub_100306D70(uint64_t a1)
{
  return sub_100306FE8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_100304E60);
}

uint64_t sub_100306D88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100306DF4(char a1)
{
  type metadata accessor for TTRTemplatesListViewModel.Template();

  return sub_100305000(a1);
}

uint64_t sub_100306E6C()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRTemplatesListViewModel.Template() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003B9C0(*(void **)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(unsigned char *)(v5 + 88));
  sub_10003B9B0(*(void **)(v5 + 96), *(id *)(v5 + 104), *(unsigned char *)(v5 + 112));
  uint64_t v6 = v0 + v3 + v1[9];
  uint64_t v7 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100306FD0(uint64_t a1)
{
  return sub_100306FE8(a1, sub_10030508C);
}

uint64_t sub_100306FE8(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRTemplatesListViewModel.Template() - 8);
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

unint64_t sub_100307070()
{
  unint64_t result = qword_10079AF88;
  if (!qword_10079AF88)
  {
    sub_100039710(&qword_10079AF78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079AF88);
  }
  return result;
}

uint64_t sub_1003070CC()
{
  uint64_t v1 = (int *)(type metadata accessor for TTRTemplatesListViewModel.Template() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v5 = v0 + v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10003B9C0(*(void **)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(unsigned char *)(v5 + 88));
  sub_10003B9B0(*(void **)(v5 + 96), *(id *)(v5 + 104), *(unsigned char *)(v5 + 112));
  uint64_t v6 = v0 + v3 + v1[9];
  uint64_t v7 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v8 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100307238(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for TTRTemplatesListViewModel.Template() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10003D2E4;
  return sub_1003052C0(a1, v5, v6, v7, v8);
}

uint64_t sub_100307334(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100307394(uint64_t a1)
{
  return sub_1003020A0(a1);
}

uint64_t sub_10030739C()
{
  return sub_100302A9C();
}

uint64_t sub_1003073A4(uint64_t a1, uint64_t a2, void (**a3)(char *, uint64_t, uint64_t))
{
  return sub_100302B70(a1, a2, a3);
}

void sub_1003073AC()
{
}

uint64_t sub_1003073B4()
{
  return sub_1001681CC((uint64_t *)&unk_10079AFB0);
}

uint64_t sub_1003073C0(uint64_t a1, uint64_t a2, void **a3)
{
  sub_10003B754((uint64_t *)&unk_10079AFB0);

  return sub_100303F30(a1, a2, a3);
}

uint64_t sub_10030744C()
{
  return sub_1001681CC(&qword_100797388);
}

void sub_100307458()
{
}

uint64_t sub_100307460(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A03B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003074C8()
{
  uint64_t v1 = *(void *)(sub_10003B754(&qword_1007A03B0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = type metadata accessor for TTRTemplatesListViewModel.Template();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v0 + v3, 1, v6))
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10003B9C0(*(void **)(v5 + 40), *(void *)(v5 + 48), *(void *)(v5 + 56), *(void *)(v5 + 64), *(void *)(v5 + 72), *(void *)(v5 + 80), *(unsigned char *)(v5 + 88));
    sub_10003B9B0(*(void **)(v5 + 96), *(id *)(v5 + 104), *(unsigned char *)(v5 + 112));
    uint64_t v7 = v5 + *(int *)(v6 + 28);
    uint64_t v8 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
    {
      uint64_t v9 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
    }
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_100307670(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_1007A03B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

Class sub_1003076D8()
{
  uint64_t v1 = *(void *)(sub_10003B754(&qword_1007A03B0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_10030361C(v2, v3);
}

uint64_t sub_100307740()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10030780C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = v4 + ((*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  return sub_1003023A0(a1, a2, a3, a4, v10, v11);
}

uint64_t sub_1003078A8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1003078E0(unsigned __int8 *a1)
{
  return sub_100127F60(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1003078E8()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_1003079DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  uint64_t v10 = (void *)((char *)v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[1] = sub_10000C2D4;
  return sub_100302658(a1, v6, v7, v8, v9, v11, v12);
}

uint64_t sub_100307B20()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100307C64, v3, v2);
}

uint64_t sub_100307C64()
{
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 48);
  swift_release();
  int v3 = *(unsigned __int8 *)(v0 + 130);
  static Date.now.getter();
  uint64_t v4 = type metadata accessor for Date();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
  uint64_t v5 = v1 + 32;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v7 = *(void *)(v1 + 64);
  sub_100038E88(v5, v6);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v2, v6, v7);
  swift_endAccess();
  if (v3 == 2)
  {
    uint64_t v8 = *(void **)(v0 + 104);
  }
  else
  {
    uint64_t v8 = *(void **)(v0 + 104);
    if (v3) {
      sub_1005E2DD8();
    }
  }

  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_100307DB4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 128);
  swift_task_dealloc();

  swift_release();
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100307F10, v4, v3);
}

uint64_t sub_100307F10()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 104);
  *(_OWORD *)(v0 + 32) = *(_OWORD *)(v0 + 80);
  swift_retain();
  uint64_t v4 = v1(v3, v2);
  *(void *)(v0 + 152) = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100307FF8;
  uint64_t v6 = *(void *)(v0 + 144);
  return TTRPrivacyChecker.checkAndPromptAccessForRemindersWithLocation(with:)(v4, v6, &protocol witness table for TTRIPrivacyChecker);
}

uint64_t sub_100307FF8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 152);
  swift_task_dealloc();

  swift_release();
  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100308154, v4, v3);
}

uint64_t sub_100308154()
{
  swift_release();
  sub_1000368FC(0, &qword_10079B230);
  static CNContactStore.requestContactsAuthorizationIfNeeded()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003081D4(int a1)
{
  uint64_t v3 = *sub_100038D28((void *)(v1 + 48), *(void *)(v1 + 72));
  swift_unknownObjectRetain();
  sub_100014AF4(a1);
  swift_unknownObjectRelease();
  swift_beginAccess();
  sub_100016AFC(v3 + 96, (uint64_t)v10);
  sub_100016A10((uint64_t)v11);
  sub_100016998((uint64_t)v10);
  uint64_t v4 = v12;
  if (v12)
  {
    uint64_t v5 = v13;
    sub_100038D28(v11, v12);
    (*(void (**)(void, uint64_t, uint64_t))(v5 + 96))(a1 & 1, v4, v5);
    sub_100038CD8((uint64_t)v11);
  }
  else
  {
    sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_1007AD740);
  }
  uint64_t v6 = *sub_100038D28((void *)(v1 + 48), *(void *)(v1 + 72)) + 96;
  swift_beginAccess();
  sub_100016AFC(v6, (uint64_t)v10);
  sub_100016A10((uint64_t)v11);
  sub_100016998((uint64_t)v10);
  uint64_t v7 = v12;
  if (!v12) {
    return sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_1007AD740);
  }
  uint64_t v8 = v13;
  sub_100038D28(v11, v12);
  (*(void (**)(uint64_t, uint64_t))(v8 + 104))(v7, v8);
  return sub_100038CD8((uint64_t)v11);
}

uint64_t sub_10030836C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  v6[6] = type metadata accessor for MainActor();
  v6[7] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  _OWORD v6[8] = v8;
  v6[9] = v7;
  return _swift_task_switch(sub_10030840C, v8, v7);
}

uint64_t sub_10030840C()
{
  v0[10] = *sub_100038D28((void *)(v0[3] + 48), *(void *)(v0[3] + 72));
  v0[11] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[12] = v2;
  v0[13] = v1;
  return _swift_task_switch(sub_1003084B0, v2, v1);
}

uint64_t sub_1003084B0()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 112) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1003085C4;
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    return UIViewController.present<A>(alert:actions:didPresent:animated:)(v0 + 128, v3, v4, 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = 2;
    uint64_t v5 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 72);
    return _swift_task_switch(sub_100308778, v5, v6);
  }
}

uint64_t sub_1003085C4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 112);
  swift_task_dealloc();

  *(unsigned char *)(v1 + 129) = *(unsigned char *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 104);
  uint64_t v4 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_100308708, v4, v3);
}

uint64_t sub_100308708()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = *(unsigned char *)(v0 + 129);
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  return _swift_task_switch(sub_100308778, v1, v2);
}

uint64_t sub_100308778()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id *sub_1003087D8()
{
  sub_1000499D4((uint64_t)(v0 + 2));
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)(v0 + 6));

  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100308850()
{
  sub_1003087D8();

  return swift_deallocClassInstance();
}

ValueMetadata *type metadata accessor for TTRIRootPresenter.StartupContext()
{
  return &type metadata for TTRIRootPresenter.StartupContext;
}

BOOL sub_100308894(uint64_t a1, uint64_t a2)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  uint64_t v4 = __chkstk_darwin(v3);
  uint64_t v48 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = sub_10003B754(&qword_1007AD700);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v49 = *(void *)(v11 - 8);
  uint64_t v12 = *(void *)(v49 + 64);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v45 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v52 = (char *)&v45 - v14;
  uint64_t v15 = type metadata accessor for Logger();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  NSString v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785498 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100018BF8(v15, (uint64_t)qword_10079B010);
  id v20 = *(void (**)(char *))(v16 + 16);
  uint64_t v46 = v19;
  v20(v18);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = 7107189;
  *(void *)(inited + 40) = 0xE300000000000000;
  uint64_t v22 = URL.absoluteString.getter();
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = v23;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v25 = v50;
  uint64_t v24 = v51;
  id v26 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 16);
  v26(v7, a1, v51);
  REMNavigationSpecifier.init(_:)();
  uint64_t v27 = v49;
  int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48))(v10, 1, v11);
  if (v28 == 1)
  {
    sub_10003B6F8((uint64_t)v10, &qword_1007AD700);
    uint64_t v37 = v48;
    v26(v48, a1, v24);
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v38, v39))
    {
      id v40 = (uint8_t *)swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      LODWORD(v46) = 1;
      uint64_t v54 = v41;
      *(_DWORD *)id v40 = 136315138;
      uint64_t v42 = URL.absoluteString.getter();
      uint64_t v53 = sub_1000385A8(v42, v43, &v54);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v24);
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Failed to parse navigation specifier from url - failed to navigate to url {url: %s}", v40, 0xCu);
      swift_arrayDestroy();
      int v28 = v46;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v37, v24);
    }
  }
  else
  {
    uint64_t v29 = v27;
    id v30 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
    Swift::String v31 = v52;
    v30(v52, v10, v11);
    uint64_t v32 = swift_allocObject();
    LODWORD(v46) = v28;
    swift_weakInit();
    uint64_t v33 = v45;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v45, v31, v11);
    unint64_t v34 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v32;
    v30((char *)(v35 + v34), v33, v11);
    *(void *)(v35 + ((v12 + v34 + 7) & 0xFFFFFFFFFFFFFFF8)) = v47;
    int v28 = v46;
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_10032F454;
    *(void *)(v36 + 24) = v35;
    swift_retain();
    swift_retain();
    TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v52, v11);
  }
  return v28 != 1;
}

uint64_t sub_100308F14(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v5 = sub_10030916C(a2, a3);
    swift_release();
  }
  else
  {
    uint64_t v5 = type metadata accessor for PromiseError();
    sub_10032FF8C((unint64_t *)&qword_10078AD80, (void (*)(uint64_t))&type metadata accessor for PromiseError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v5 - 8) + 104))(v6, enum case for PromiseError.abandoned(_:), v5);
    swift_willThrow();
  }
  return v5;
}

uint64_t sub_100309034(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  return sub_10000A164(a1, a2, a3, &qword_100791C48, (uint64_t)sub_100331E88);
}

uint64_t sub_100309068(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  return sub_10000A164(a1, a2, a3, &qword_100799F38, (uint64_t)sub_100331100);
}

uint64_t sub_10030909C(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  return sub_10000A164(a1, a2, a3, &qword_10079B1A0, (uint64_t)sub_1003323C4);
}

uint64_t sub_1003090D0(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  return sub_10000A164(a1, a2, a3, &qword_10079B1B8, (uint64_t)sub_100332930);
}

uint64_t sub_100309104(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  return sub_10000A164(a1, a2, a3, &qword_10079B1D0, (uint64_t)sub_100332E6C);
}

uint64_t sub_100309138(uint64_t a1, uint8_t *a2, uint8_t *a3)
{
  return sub_10000A164(a1, a2, a3, &qword_10079B1E8, (uint64_t)sub_1003333A8);
}

uint64_t sub_10030916C(uint8_t *a1, uint8_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v30 = *(void *)(v6 - 8);
  uint64_t v31 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785498 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100018BF8(v13, (uint64_t)qword_10079B010);
  (*(void (**)(char *, uint8_t *, uint64_t))(v10 + 16))(v12, a1, v9);
  uint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v29 = a2;
    uint64_t v17 = (uint8_t *)v16;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v33 = v26;
    uint64_t v27 = a1;
    *(_DWORD *)uint64_t v17 = 136315138;
    uint64_t v24 = v17 + 4;
    uint64_t v25 = v17;
    REMNavigationSpecifier.url.getter();
    sub_10032FF8C(&qword_10079B138, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v18 = v31;
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    int v28 = v3;
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v18);
    uint64_t v32 = sub_1000385A8(v19, v21, &v33);
    a1 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v3 = v28;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "TTRIRootPresenter: handle navigation specifier: %s", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    a2 = v29;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }

  __chkstk_darwin(v22);
  *(&v24 - 4) = a1;
  *(&v24 - 3) = v3;
  *(&v24 - 2) = a2;
  return firstly<A>(closure:)();
}

BOOL sub_100309524(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v102 = a3;
  uint64_t v100 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v105 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v98 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v107 = *(void *)(v7 - 8);
  uint64_t v108 = v7;
  uint64_t v8 = *(void *)(v107 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v99 = (char *)&v98 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v109 = (char *)&v98 - v10;
  uint64_t v11 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v11 - 8);
  uint64_t v103 = (uint64_t *)((char *)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_10003B754((uint64_t *)&unk_10078E360);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v101 = (uint64_t)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v104 = (uint64_t)&v98 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v98 - v18;
  uint64_t v20 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
  __chkstk_darwin(v20);
  uint64_t v22 = (id *)((char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = type metadata accessor for DispatchPredicate();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (uint64_t *)((char *)&v98 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  *uint64_t v26 = static OS_dispatch_queue.main.getter();
  (*(void (**)(uint64_t *, void, uint64_t))(v24 + 104))(v26, enum case for DispatchPredicate.onQueue(_:), v23);
  char v27 = _dispatchPreconditionTest(_:)();
  (*(void (**)(uint64_t *, uint64_t))(v24 + 8))(v26, v23);
  if ((v27 & 1) == 0)
  {
    __break(1u);
    JUMPOUT(0x10030A20CLL);
  }
  sub_1003340CC(a1, (uint64_t)v22, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v29 = v110;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      id v45 = *v22;
      uint64_t v46 = sub_10003B754(&qword_10078B618);
      sub_100028C3C((uint64_t)v22 + *(int *)(v46 + 48), v104, (uint64_t *)&unk_10078E360);
      uint64_t v48 = v29[4];
      uint64_t v47 = v29[5];
      uint64_t ObjectType = swift_getObjectType();
      v111[0] = v48;
      uint64_t v50 = *(void *)(v47 + 8);
      uint64_t v51 = *(uint64_t (**)(id, uint64_t, uint64_t))(v50 + 56);
      swift_unknownObjectRetain();
      uint64_t v52 = (void *)v51(v45, ObjectType, v50);
      swift_unknownObjectRelease();
      if (!v52)
      {
        uint64_t v80 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
        uint64_t v81 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
        uint64_t v82 = v109;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v81 - 8) + 104))(v109, v80, v81);
        uint64_t v84 = v107;
        uint64_t v83 = v108;
        long long v85 = v82;
        (*(void (**)(char *, void, uint64_t))(v107 + 104))(v82, enum case for REMNavigationSpecifier.root(_:), v108);
        uint64_t v86 = swift_allocObject();
        swift_weakInit();
        uint64_t v87 = v99;
        (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v99, v85, v83);
        unint64_t v88 = (*(unsigned __int8 *)(v84 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v84 + 80);
        uint64_t v89 = swift_allocObject();
        *(void *)(v89 + 16) = v86;
        (*(void (**)(unint64_t, char *, uint64_t))(v84 + 32))(v89 + v88, v87, v83);
        *(void *)(v89 + ((v8 + v88 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
        uint64_t v90 = swift_allocObject();
        *(void *)(v90 + 16) = sub_10032F454;
        *(void *)(v90 + 24) = v89;
        swift_retain();
        swift_retain();
        TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v84 + 8))(v109, v83);
        uint64_t v79 = v104;
        goto LABEL_25;
      }
      uint64_t v53 = *(void *)(v102 + OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage + 8);
      uint64_t v54 = swift_getObjectType();
      uint64_t v55 = v103;
      *uint64_t v103 = v45;
      uint64_t v56 = type metadata accessor for TTRListType();
      BOOL v57 = 1;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v55, 0, 1, v56);
      id v58 = *(void (**)(void *, uint64_t, uint64_t))(v53 + 16);
      id v59 = v45;
      v58(v55, v54, v53);
      sub_100038D28(v29 + 6, v29[9]);
      uint64_t v60 = v104;
      sub_100349178(v52, v104, (uint64_t)v29, (uint64_t)&off_100743640, (uint64_t)v111);
      sub_100038CD8((uint64_t)v111);

      sub_10003B6F8(v60, (uint64_t *)&unk_10078E360);
      return v57;
    case 2:
      uint64_t v61 = *(unsigned __int8 *)v22;
      uint64_t v62 = sub_10003B754(&qword_100786F30);
      uint64_t v63 = v101;
      sub_100028C3C((uint64_t)v22 + *(int *)(v62 + 48), v101, (uint64_t *)&unk_10078E360);
      switch(v61)
      {
        case 1:
          uint64_t v91 = sub_100038D28(v29 + 6, v29[9]);
          sub_100410AC0(v100, v63, (uint64_t)v29, 0, *v91);
          break;
        case 2:
          uint64_t v92 = sub_100038D28(v29 + 6, v29[9]);
          sub_100410CE8(v100, v63, (uint64_t)v29, 0, *v92);
          break;
        case 3:
          uint64_t v93 = sub_100038D28(v29 + 6, v29[9]);
          sub_100410F10(v100, v63, (uint64_t)v29, 0, *v93);
          break;
        case 4:
          uint64_t v94 = sub_100038D28(v29 + 6, v29[9]);
          sub_100411358(v100, v63, (uint64_t)v29, *v94);
          break;
        case 5:
          uint64_t v95 = sub_100038D28(v29 + 6, v29[9]);
          sub_100411138(v100, v63, (uint64_t)v29, *v95);
          break;
        case 6:
          uint64_t v96 = sub_100038D28(v29 + 6, v29[9]);
          sub_100411578(v100, v63, (uint64_t)v29, *v96);
          break;
        default:
          uint64_t v64 = sub_100038D28(v29 + 6, v29[9]);
          sub_100410898(v100, v63, (uint64_t)v29, 0, *v64);
          break;
      }
      uint64_t v79 = v63;
      goto LABEL_25;
    case 3:
      swift_bridgeObjectRelease();
      goto LABEL_13;
    case 4:
      uint64_t v65 = type metadata accessor for REMHashtagLabelSpecifier();
      (*(void (**)(id *, uint64_t))(*(void *)(v65 - 8) + 8))(v22, v65);
      goto LABEL_13;
    case 5:

LABEL_13:
      unint64_t v66 = v109;
      TTRUserActivityWindowSceneRestorationPayload.navigationSpecifier.getter();
      REMNavigationSpecifier.url.getter();
      (*(void (**)(char *, uint64_t))(v107 + 8))(v66, v108);
      BOOL v57 = sub_100308894((uint64_t)v6, 0);
      (*(void (**)(char *, uint64_t))(v105 + 8))(v6, v106);
      break;
    default:
      uint64_t v30 = (uint64_t)v19;
      id v31 = *v22;
      uint64_t v32 = sub_10003B754(&qword_10078B618);
      sub_100028C3C((uint64_t)v22 + *(int *)(v32 + 48), v30, (uint64_t *)&unk_10078E360);
      uint64_t v34 = v29[4];
      uint64_t v33 = v29[5];
      uint64_t v35 = swift_getObjectType();
      v111[0] = v34;
      uint64_t v36 = *(void *)(v33 + 8);
      uint64_t v37 = *(uint64_t (**)(id, uint64_t, uint64_t))(v36 + 40);
      swift_unknownObjectRetain();
      uint64_t v38 = (void *)v37(v31, v35, v36);
      swift_unknownObjectRelease();
      if (v38)
      {
        LODWORD(v109) = [v38 isGroup];
        uint64_t v39 = *(void *)(v102 + OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage + 8);
        uint64_t v40 = swift_getObjectType();
        uint64_t v41 = v103;
        *uint64_t v103 = v31;
        uint64_t v42 = type metadata accessor for TTRListType();
        swift_storeEnumTagMultiPayload();
        (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 0, 1, v42);
        unint64_t v43 = *(void (**)(void *, uint64_t, uint64_t))(v39 + 16);
        id v44 = v31;
        v43(v41, v40, v39);
        sub_100038D28(v29 + 6, v29[9]);
        if (v109) {
          sub_1003491A8(v38, v30, (uint64_t)v29, (uint64_t)&off_100743630, (uint64_t)v111);
        }
        else {
          sub_100348E44(v38, v30, (uint64_t)v29, (uint64_t)&off_100743650, v111);
        }
        sub_100038CD8((uint64_t)v111);

        uint64_t v79 = v30;
      }
      else
      {
        uint64_t v67 = enum case for REMNavigationSpecifier.RootPathSpecifier.none(_:);
        uint64_t v68 = type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
        uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v68 - 8) + 104);
        uint64_t v106 = v30;
        unint64_t v70 = v109;
        v69(v109, v67, v68);
        uint64_t v72 = v107;
        uint64_t v71 = v108;
        char v73 = v70;
        (*(void (**)(char *, void, uint64_t))(v107 + 104))(v70, enum case for REMNavigationSpecifier.root(_:), v108);
        uint64_t v74 = swift_allocObject();
        swift_weakInit();
        uint64_t v75 = v99;
        (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v99, v73, v71);
        unint64_t v76 = (*(unsigned __int8 *)(v72 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80);
        uint64_t v77 = swift_allocObject();
        *(void *)(v77 + 16) = v74;
        (*(void (**)(unint64_t, char *, uint64_t))(v72 + 32))(v77 + v76, v75, v71);
        *(void *)(v77 + ((v8 + v76 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
        uint64_t v78 = swift_allocObject();
        *(void *)(v78 + 16) = sub_10032F454;
        *(void *)(v78 + 24) = v77;
        swift_retain();
        swift_retain();
        TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v72 + 8))(v109, v71);
        uint64_t v79 = v106;
      }
LABEL_25:
      sub_10003B6F8(v79, (uint64_t *)&unk_10078E360);
      BOOL v57 = 1;
      break;
  }
  return v57;
}

uint64_t sub_10030A240()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10030A360, v3, v2);
}

uint64_t sub_10030A360()
{
  swift_release();
  TTRStartupItemQueue.start()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10030A3CC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v233 = a3;
  uint64_t v225 = type metadata accessor for REMAnalyticsEvent();
  v227 = *(void (***)(void, void, void))(v225 - 8);
  __chkstk_darwin(v225);
  v226 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  v200 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v222 = *(void *)(v8 - 8);
  uint64_t v223 = v8;
  __chkstk_darwin(v8);
  v220 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v203 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v202 = *(void *)(v203 - 8);
  __chkstk_darwin(v203);
  v201 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v205 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  v204 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v210 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v209 = *(void *)(v210 - 8);
  uint64_t v12 = __chkstk_darwin(v210);
  v208 = (char *)&v197 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = v13;
  __chkstk_darwin(v12);
  v211 = (char *)&v197 - v14;
  uint64_t v221 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v217 = *(void *)(v221 - 8);
  uint64_t v15 = *(void *)(v217 + 64);
  uint64_t v16 = __chkstk_darwin(v221);
  v216 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  v224 = (char *)&v197 - v17;
  uint64_t v219 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v215 = *(void *)(v219 - 8);
  uint64_t v18 = __chkstk_darwin(v219);
  v214 = (char *)&v197 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v213 = v19;
  __chkstk_darwin(v18);
  v218 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v234 = *(v21 - 1);
  id v235 = v21;
  uint64_t v22 = __chkstk_darwin(v21);
  v230 = (char *)&v197 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  v228 = (char *)&v197 - v25;
  uint64_t v229 = v26;
  __chkstk_darwin(v24);
  v232 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v31 = __chkstk_darwin(v28);
  v231 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v197 - v32;
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (id *)((char *)&v197 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = *(void (**)(id *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v212 = a1;
  v38(v37, a1, v34);
  int v39 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v37, v34);
  v236 = a2;
  if (v39 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    id v235 = *v37;
    uint64_t v40 = (char *)v37 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v234 = *(void *)(v29 + 32);
    v199 = v33;
    uint64_t v198 = v28;
    ((void (*)(char *, char *, uint64_t))v234)(v33, v40, v28);
    uint64_t v41 = a2[4];
    uint64_t v42 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v237 = v41;
    uint64_t v44 = *(void *)(v42 + 8);
    id v45 = *(void (**)(id, uint64_t, uint64_t))(v44 + 24);
    swift_unknownObjectRetain();
    v45(v235, ObjectType, v44);
    swift_unknownObjectRelease();
    uint64_t v46 = (void *)zalgoIfMain.getter();
    uint64_t v47 = v231;
    uint64_t v48 = v199;
    uint64_t v49 = v198;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v231, v199, v198);
    unint64_t v50 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = v236;
    ((void (*)(unint64_t, char *, uint64_t))v234)(v51 + v50, v47, v49);
    swift_retain();
    uint64_t v52 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v48, v49);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    id v53 = *v37;
    uint64_t v54 = (char *)v37 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v55 = *(char **)(v234 + 32);
    v231 = (char *)(v234 + 32);
    v228 = v55;
    ((void (*)(char *, char *, id))v55)(v232, v54, v235);
    if ((v233 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      uint64_t v56 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v58 = v225;
      BOOL v57 = v226;
      id v59 = &v226[v56[12]];
      uint64_t v60 = &v226[v56[16]];
      uint64_t v61 = &v226[v56[20]];
      uint64_t v62 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v63 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v63 - 8) + 104))(v57, v62, v63);
      uint64_t v64 = type metadata accessor for Date();
      *(void *)id v59 = 0;
      *((void *)v59 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v60, 1, 1, v64);
      *(void *)uint64_t v61 = 0;
      *((void *)v61 + 1) = 0;
      uint64_t v65 = v227;
      ((void (**)(char *, void, uint64_t))v227)[13](v57, enum case for REMAnalyticsEvent.userOperation(_:), v58);
      REMAnalyticsManager.post(event:)();
      swift_release();
      ((void (*)(char *, uint64_t))v65[1])(v57, v58);
    }
    unint64_t v66 = v236;
    uint64_t v67 = v236[4];
    uint64_t v68 = v236[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v237 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = *(void (**)(id, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v71(v53, v69, v70);
    swift_unknownObjectRelease();
    uint64_t v72 = (void *)zalgoIfMain.getter();
    uint64_t v74 = v234;
    id v73 = v235;
    uint64_t v75 = *(void (**)(char *, char *, id))(v234 + 16);
    unint64_t v76 = v230;
    v227 = (void (**)(void, void, void))v53;
    uint64_t v77 = v232;
    v75(v230, v232, v235);
    unint64_t v78 = (*(unsigned __int8 *)(v74 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
    unint64_t v79 = (v229 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v80 = swift_allocObject();
    *(void *)(v80 + 16) = v66;
    ((void (*)(unint64_t, char *, id))v228)(v80 + v78, v76, v73);
    *(void *)(v80 + v79) = v233;
    swift_retain();
    uint64_t v52 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, id))(v74 + 8))(v77, v73);
    return v52;
  }
  uint64_t v81 = v236;
  if (v39 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    id v82 = *v37;
    uint64_t v83 = (char *)v37 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = *(char **)(v234 + 32);
    v232 = (char *)(v234 + 32);
    ((void (*)(char *, char *, id))v231)(v228, v83, v235);
    if ((v233 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      uint64_t v84 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v86 = v225;
      long long v85 = v226;
      uint64_t v87 = &v226[v84[12]];
      unint64_t v88 = &v226[v84[16]];
      uint64_t v89 = &v226[v84[20]];
      uint64_t v90 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v91 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v91 - 8) + 104))(v85, v90, v91);
      uint64_t v92 = type metadata accessor for Date();
      *(void *)uint64_t v87 = 0;
      *((void *)v87 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v88, 1, 1, v92);
      *(void *)uint64_t v89 = 0;
      *((void *)v89 + 1) = 0;
      uint64_t v93 = v227;
      ((void (**)(char *, void, uint64_t))v227)[13](v85, enum case for REMAnalyticsEvent.userOperation(_:), v86);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v94 = v85;
      uint64_t v81 = v236;
      ((void (*)(char *, uint64_t))v93[1])(v94, v86);
    }
    uint64_t v95 = v81[4];
    uint64_t v96 = v81[5];
    uint64_t v97 = swift_getObjectType();
    uint64_t v237 = v95;
    uint64_t v98 = *(void *)(v96 + 8);
    uint64_t v99 = v81;
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v98 + 48);
    swift_unknownObjectRetain();
    v100(v82, v97, v98);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = v234;
    id v102 = v235;
    uint64_t v104 = v230;
    uint64_t v105 = v228;
    (*(void (**)(char *, char *, id))(v234 + 16))(v230, v228, v235);
    unint64_t v106 = (*(unsigned __int8 *)(v103 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    uint64_t v107 = swift_allocObject();
    *(void *)(v107 + 16) = v99;
    ((void (*)(unint64_t, char *, id))v231)(v107 + v106, v104, v102);
    swift_retain();
    uint64_t v52 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, id))(v103 + 8))(v105, v102);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    uint64_t v109 = v222;
    uint64_t v108 = v223;
    uint64_t v110 = v220;
    (*(void (**)(char *, id *, uint64_t))(v222 + 32))(v220, v37, v223);
    uint64_t v111 = sub_100038D28(v81 + 6, v81[9]);
    __chkstk_darwin(v111);
    *(&v197 - 2) = v112;
    *(&v197 - 1) = (uint64_t)v110;
    uint64_t v52 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v109 + 8))(v110, v108);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    id v235 = *v37;
    uint64_t v113 = (char *)v37 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v114 = v217;
    uint64_t v234 = *(void *)(v217 + 32);
    ((void (*)(char *, char *, uint64_t))v234)(v224, v113, v221);
    uint64_t v115 = v81[4];
    uint64_t v116 = v81[5];
    uint64_t v117 = swift_getObjectType();
    uint64_t v237 = v115;
    uint64_t v118 = *(void *)(v116 + 8);
    __int16 v119 = *(void (**)(id, uint64_t, uint64_t))(v118 + 64);
    swift_unknownObjectRetain();
    v119(v235, v117, v118);
    swift_unknownObjectRelease();
    int v120 = (void *)zalgoIfMain.getter();
    uint64_t v121 = v216;
    uint64_t v122 = v221;
    (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v216, v224, v221);
    unint64_t v123 = (*(unsigned __int8 *)(v114 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v114 + 80);
    uint64_t v124 = swift_allocObject();
    *(void *)(v124 + 16) = v81;
    ((void (*)(unint64_t, char *, uint64_t))v234)(v124 + v123, v121, v122);
    swift_retain();
    uint64_t v52 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v224, v122);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    uint64_t v125 = v81;
    id v235 = *v37;
    id v126 = v235;
    char v127 = (char *)v37 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v128 = v215;
    uint64_t v234 = *(void *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v234)(v218, v127, v219);
    uint64_t v129 = v125[4];
    uint64_t v130 = v125[5];
    uint64_t v131 = swift_getObjectType();
    uint64_t v237 = v129;
    uint64_t v132 = *(void *)(v130 + 8);
    char v133 = *(void (**)(id, uint64_t, uint64_t))(v132 + 72);
    swift_unknownObjectRetain();
    v133(v126, v131, v132);
    swift_unknownObjectRelease();
    uint64_t v134 = (void *)zalgoIfMain.getter();
    uint64_t v135 = v214;
    unint64_t v136 = v218;
    uint64_t v137 = v219;
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v214, v218, v219);
    unint64_t v138 = (*(unsigned __int8 *)(v128 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
    uint64_t v139 = swift_allocObject();
    *(void *)(v139 + 16) = v125;
    ((void (*)(unint64_t, char *, uint64_t))v234)(v139 + v138, v135, v137);
    swift_retain();
LABEL_19:
    uint64_t v52 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v128 + 8))(v136, v137);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    char v140 = v81;
    id v235 = *v37;
    id v141 = v235;
    uint64_t v142 = (char *)v37 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v128 = v215;
    uint64_t v234 = *(void *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v234)(v218, v142, v219);
    uint64_t v143 = v140[4];
    uint64_t v144 = v140[5];
    uint64_t v145 = swift_getObjectType();
    uint64_t v237 = v143;
    uint64_t v146 = *(void *)(v144 + 8);
    uint64_t v147 = *(void (**)(id, uint64_t, uint64_t))(v146 + 80);
    swift_unknownObjectRetain();
    v147(v141, v145, v146);
    swift_unknownObjectRelease();
    uint64_t v134 = (void *)zalgoIfMain.getter();
    v148 = v214;
    unint64_t v136 = v218;
    uint64_t v137 = v219;
    (*(void (**)(char *, char *, uint64_t))(v128 + 16))(v214, v218, v219);
    unint64_t v149 = (*(unsigned __int8 *)(v128 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
    uint64_t v150 = swift_allocObject();
    *(void *)(v150 + 16) = v140;
    ((void (*)(unint64_t, char *, uint64_t))v234)(v150 + v149, v148, v137);
    swift_retain();
    goto LABEL_19;
  }
  if (v39 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(v236 + 6, v236[9]);
    uint64_t v52 = sub_10034812C(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v37, v34);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.today(_:)
    || v39 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v39 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v39 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v39 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    uint64_t v152 = v209;
    uint64_t v153 = *(void (**)(char *, id *, uint64_t))(v209 + 32);
    uint64_t v154 = v211;
    uint64_t v155 = v210;
    v153(v211, v37, v210);
    uint64_t v156 = *sub_100038D28(v81 + 6, v81[9]);
    sub_10034812C(0);
    v157 = v208;
    (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v208, v154, v155);
    unint64_t v158 = (*(unsigned __int8 *)(v152 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v152 + 80);
    unint64_t v159 = (v207 + v158 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v160 = swift_allocObject();
    v153((char *)(v160 + v158), (id *)v157, v155);
    *(void *)(v160 + v159) = v156;
    swift_retain();
    uint64_t v161 = (void *)zalgo.getter();
    uint64_t v52 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v152 + 8))(v211, v155);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.assigned(_:)
    || v39 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v39 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    uint64_t v162 = v205;
    uint64_t v163 = (uint64_t)v204;
    char v164 = v37;
    uint64_t v165 = v206;
    (*(void (**)(char *, id *, uint64_t))(v205 + 32))(v204, v164, v206);
    sub_100038D28(v81 + 6, v81[9]);
    uint64_t v52 = sub_10032B344(v163);
    (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v163, v165);
    return v52;
  }
  if (v39 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v37, v34);
    char v166 = v233;
    if ((v233 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v225;
      uint64_t v169 = v226;
      v170 = &v226[v167[12]];
      uint64_t v171 = &v226[v167[16]];
      v172 = &v226[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      uint64_t v81 = v236;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v227;
      ((void (**)(char *, void, uint64_t))v227)[13](v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      ((void (*)(char *, uint64_t))v176[1])(v169, v168);
    }
    sub_100038D28(v81 + 6, v81[9]);
    return sub_1003274C4(v212, v166 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100327E40, &qword_10079C8C0);
  }
  if (v39 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v37, v34);
    uint64_t v177 = v202;
    uint64_t v178 = (uint64_t)v201;
    uint64_t v179 = v203;
    (*(void (**)(char *, id *, uint64_t))(v202 + 32))(v201, v37, v203);
    v180 = (uint64_t **)sub_100038D28(v81 + 6, v81[9]);
    uint64_t v181 = v81[4];
    uint64_t v182 = v81[5];
    uint64_t v183 = swift_getObjectType();
    uint64_t v237 = v181;
    v184 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v182 + 8) + 8))(v183);
    v185 = *v180;
    swift_retain();
    sub_10032DB38(v178, v184, (uint64_t)v81, v185);

    swift_release();
    v186 = self;
    NSString v187 = String._bridgeToObjectiveC()();
    id v188 = [v186 internalErrorWithDebugDescription:v187];

    sub_10003B754(&qword_10079C8C0);
    swift_allocObject();
    uint64_t v52 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v179);
    return v52;
  }
  v189 = v236;
  if (v39 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(v236 + 6, v236[9]);
    return firstly<A>(closure:)();
  }
  if (v39 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v200;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v200, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = v189;
    sub_1000286A4(v191, (uint64_t)&unk_10079B148, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079C8C0);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10030BF00(uint64_t a1, void *a2, void *a3)
{
  id v232 = a3;
  uint64_t v223 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v225 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v224 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v198 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v221 = *(void *)(v8 - 8);
  uint64_t v222 = v8;
  __chkstk_darwin(v8);
  v218 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v202 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = v12;
  __chkstk_darwin(v13);
  uint64_t v209 = (char *)&v197 - v14;
  uint64_t v220 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v215 = *(void *)(v220 - 8);
  uint64_t v15 = *(void *)(v215 + 64);
  __chkstk_darwin(v220);
  v214 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (char *)&v197 - v17;
  uint64_t v217 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v213 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v212 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v18;
  __chkstk_darwin(v19);
  v216 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v233 = (char *)*(v21 - 1);
  id v234 = v21;
  __chkstk_darwin(v21);
  v228 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  uint64_t v227 = v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  v230 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (*)(char *, char *, id))((char *)&v197 - v32);
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  double v36 = __chkstk_darwin(v34);
  uint64_t v38 = (id *)((char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v39 = *(void (**)(id *, uint64_t, uint64_t, double))(v35 + 16);
  uint64_t v210 = a1;
  v39(v38, a1, v34, v36);
  int v40 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v38, v34);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v41 = *v38;
    uint64_t v42 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v233 = *(char **)(v29 + 32);
    uint64_t v229 = v33;
    uint64_t v197 = v28;
    ((void (*)(void, char *, uint64_t))v233)(v33, v42, v28);
    uint64_t v44 = a2[4];
    uint64_t v43 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v44;
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 24);
    swift_unknownObjectRetain();
    v47(v41, ObjectType, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = (void *)zalgoIfMain.getter();
    uint64_t v49 = v230;
    uint64_t v50 = v197;
    (*(void (**)(char *, void, uint64_t))(v29 + 16))(v230, v229, v197);
    unint64_t v51 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v52 = swift_allocObject();
    id v53 = (void (*)(unint64_t, char *, uint64_t))v233;
    *(void *)(v52 + 16) = v234;
    v53(v52 + v51, v49, v50);
    swift_retain();
    sub_10003B754(&qword_100791C48);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(void (*)(char *, char *, id), uint64_t))(v29 + 8))(v229, v50);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v55 = (char *)*v38;
    uint64_t v56 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v229 = (void (*)(char *, char *, id))*((void *)v233 + 4);
    v230 = v233 + 32;
    v229(v231, v56, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      BOOL v57 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v59 = v223;
      uint64_t v58 = v224;
      uint64_t v60 = &v224[v57[12]];
      uint64_t v61 = &v224[v57[16]];
      uint64_t v62 = &v224[v57[20]];
      uint64_t v63 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v64 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
      uint64_t v65 = type metadata accessor for Date();
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
      *(void *)uint64_t v62 = 0;
      *((void *)v62 + 1) = 0;
      uint64_t v66 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v58, enum case for REMAnalyticsEvent.userOperation(_:), v59);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
    }
    uint64_t v67 = a2[4];
    uint64_t v68 = a2[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v235 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = a2;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v72(v55, v69, v70);
    swift_unknownObjectRelease();
    id v73 = (void *)zalgoIfMain.getter();
    uint64_t v75 = (void (**)(char *, id))v233;
    id v74 = v234;
    unint64_t v76 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v77 = v228;
    v226 = v55;
    unint64_t v78 = v231;
    v76(v228, v231, v234);
    unint64_t v79 = (*((unsigned __int8 *)v75 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v75 + 80);
    unint64_t v80 = (v227 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v71;
    v229((char *)(v81 + v79), v77, v74);
    *(void *)(v81 + v80) = v232;
    swift_retain();
    sub_10003B754(&qword_100791C48);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v75[1](v78, v74);
    return v54;
  }
  id v82 = a2;
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v83 = *v38;
    uint64_t v84 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = (char *)*((void *)v233 + 4);
    ((void (*)(char *, char *, id))v231)(v226, v84, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      long long v85 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v87 = v223;
      uint64_t v86 = v224;
      unint64_t v88 = &v224[v85[12]];
      uint64_t v89 = &v224[v85[16]];
      uint64_t v90 = &v224[v85[20]];
      uint64_t v91 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v92 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v86, v91, v92);
      uint64_t v93 = type metadata accessor for Date();
      *(void *)unint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 1, 1, v93);
      *(void *)uint64_t v90 = 0;
      *((void *)v90 + 1) = 0;
      uint64_t v94 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v86, enum case for REMAnalyticsEvent.userOperation(_:), v87);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v95 = v87;
      id v82 = a2;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
    }
    uint64_t v96 = v82[4];
    uint64_t v97 = v82[5];
    uint64_t v98 = swift_getObjectType();
    uint64_t v235 = v96;
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v99 + 48);
    swift_unknownObjectRetain();
    v100(v83, v98, v99);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = (void (**)(char *, id))v233;
    id v102 = v234;
    uint64_t v104 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v105 = v228;
    id v232 = v83;
    unint64_t v106 = v226;
    v104(v228, v226, v234);
    unint64_t v107 = (*((unsigned __int8 *)v103 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v103 + 80);
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v82;
    ((void (*)(unint64_t, char *, id))v231)(v108 + v107, v105, v102);
    swift_retain();
    sub_10003B754(&qword_100791C48);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v103[1](v106, v102);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v110 = v221;
    uint64_t v109 = v222;
    uint64_t v111 = v218;
    (*(void (**)(char *, id *, uint64_t))(v221 + 32))(v218, v38, v222);
    uint64_t v112 = sub_100038D28(a2 + 6, a2[9]);
    __chkstk_darwin(v112);
    *(&v197 - 2) = v113;
    *(&v197 - 1) = (uint64_t)v111;
    sub_10003B754(&qword_100791C48);
    uint64_t v54 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v233 = (char *)*v38;
    uint64_t v114 = v233;
    uint64_t v115 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v116 = v215;
    id v232 = *(id *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v232)(v219, v115, v220);
    uint64_t v118 = a2[4];
    uint64_t v117 = a2[5];
    uint64_t v119 = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v118;
    uint64_t v120 = *(void *)(v117 + 8);
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 64);
    swift_unknownObjectRetain();
    v121(v114, v119, v120);
    swift_unknownObjectRelease();
    uint64_t v122 = (void *)zalgoIfMain.getter();
    unint64_t v123 = v214;
    uint64_t v124 = v219;
    uint64_t v125 = v220;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v214, v219, v220);
    unint64_t v126 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v234;
    ((void (*)(unint64_t, char *, uint64_t))v232)(v127 + v126, v123, v125);
    swift_retain();
    sub_10003B754(&qword_100791C48);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v128 = v234;
    uint64_t v129 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v129, v217);
    uint64_t v132 = a2[4];
    uint64_t v131 = a2[5];
    uint64_t v133 = swift_getObjectType();
    uint64_t v235 = v132;
    uint64_t v134 = *(void *)(v131 + 8);
    uint64_t v135 = *(void (**)(id, uint64_t, uint64_t))(v134 + 72);
    swift_unknownObjectRetain();
    v135(v128, v133, v134);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    uint64_t v137 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v140 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v141 = swift_allocObject();
    *(void *)(v141 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v141 + v140, v137, v139);
    swift_retain();
    sub_10003B754(&qword_100791C48);
LABEL_19:
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v138, v139);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v142 = v234;
    uint64_t v143 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v143, v217);
    uint64_t v145 = a2[4];
    uint64_t v144 = a2[5];
    uint64_t v146 = swift_getObjectType();
    uint64_t v235 = v145;
    uint64_t v147 = *(void *)(v144 + 8);
    v148 = *(void (**)(id, uint64_t, uint64_t))(v147 + 80);
    swift_unknownObjectRetain();
    v148(v142, v146, v147);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    unint64_t v149 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v150 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v151 + v150, v149, v139);
    swift_retain();
    sub_10003B754(&qword_100791C48);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_1003484A8(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    return v54;
  }
  char v153 = (char)v232;
  if (v40 == enum case for REMNavigationSpecifier.today(_:)
    || v40 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v40 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v154 = v207;
    uint64_t v155 = *(void (**)(char *, id *, uint64_t))(v207 + 32);
    uint64_t v156 = v209;
    uint64_t v157 = v208;
    v155(v209, v38, v208);
    uint64_t v158 = *sub_100038D28(v82 + 6, v82[9]);
    sub_10034812C(0);
    unint64_t v159 = v206;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v206, v156, v157);
    unint64_t v160 = (*(unsigned __int8 *)(v154 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    unint64_t v161 = (v205 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v162 = swift_allocObject();
    v155((char *)(v162 + v160), (id *)v159, v157);
    *(void *)(v162 + v161) = v158;
    swift_retain();
    uint64_t v163 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v154 + 8))(v209, v157);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:)
    || v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v164 = v203;
    uint64_t v165 = (uint64_t)v202;
    uint64_t v166 = v204;
    (*(void (**)(char *, id *, uint64_t))(v203 + 32))(v202, v38, v204);
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_10032B630(v165, (uint64_t)sub_1003484A8, (uint64_t)&unk_100744C70, &qword_100791C48, (uint64_t)sub_10033237C);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    if ((v153 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v223;
      uint64_t v169 = v224;
      v170 = &v224[v167[12]];
      uint64_t v171 = &v224[v167[16]];
      v172 = &v224[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v168);
    }
    sub_100038D28(a2 + 6, a2[9]);
    return sub_1003274C4(v210, v153 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100328490, &qword_10079B158);
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v177 = v200;
    uint64_t v178 = (uint64_t)v199;
    uint64_t v179 = v38;
    uint64_t v180 = v201;
    (*(void (**)(char *, id *, uint64_t))(v200 + 32))(v199, v179, v201);
    uint64_t v181 = (uint64_t **)sub_100038D28(a2 + 6, a2[9]);
    uint64_t v182 = a2[4];
    uint64_t v183 = a2[5];
    uint64_t v184 = swift_getObjectType();
    uint64_t v235 = v182;
    v185 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v183 + 8) + 8))(v184);
    v186 = *v181;
    swift_retain();
    sub_10032DB38(v178, v185, (uint64_t)a2, v186);

    swift_release();
    NSString v187 = self;
    NSString v188 = String._bridgeToObjectiveC()();
    id v189 = [v187 internalErrorWithDebugDescription:v188];

    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    uint64_t v54 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v180);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    sub_10003B754(&qword_100791C48);
    return firstly<A>(closure:)();
  }
  if (v40 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v198, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = a2;
    sub_1000286A4(v191, (uint64_t)&unk_10079B198, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10030DA74(uint64_t a1, void *a2, void *a3)
{
  id v232 = a3;
  uint64_t v223 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v225 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v224 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v198 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v221 = *(void *)(v8 - 8);
  uint64_t v222 = v8;
  __chkstk_darwin(v8);
  v218 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v202 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = v12;
  __chkstk_darwin(v13);
  uint64_t v209 = (char *)&v197 - v14;
  uint64_t v220 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v215 = *(void *)(v220 - 8);
  uint64_t v15 = *(void *)(v215 + 64);
  __chkstk_darwin(v220);
  v214 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (char *)&v197 - v17;
  uint64_t v217 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v213 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v212 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v18;
  __chkstk_darwin(v19);
  v216 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v233 = (char *)*(v21 - 1);
  id v234 = v21;
  __chkstk_darwin(v21);
  v228 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  uint64_t v227 = v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  v230 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (*)(char *, char *, id))((char *)&v197 - v32);
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  double v36 = __chkstk_darwin(v34);
  uint64_t v38 = (id *)((char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v39 = *(void (**)(id *, uint64_t, uint64_t, double))(v35 + 16);
  uint64_t v210 = a1;
  v39(v38, a1, v34, v36);
  int v40 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v38, v34);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v41 = *v38;
    uint64_t v42 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v233 = *(char **)(v29 + 32);
    uint64_t v229 = v33;
    uint64_t v197 = v28;
    ((void (*)(void, char *, uint64_t))v233)(v33, v42, v28);
    uint64_t v44 = a2[4];
    uint64_t v43 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v44;
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 24);
    swift_unknownObjectRetain();
    v47(v41, ObjectType, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = (void *)zalgoIfMain.getter();
    uint64_t v49 = v230;
    uint64_t v50 = v197;
    (*(void (**)(char *, void, uint64_t))(v29 + 16))(v230, v229, v197);
    unint64_t v51 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v52 = swift_allocObject();
    id v53 = (void (*)(unint64_t, char *, uint64_t))v233;
    *(void *)(v52 + 16) = v234;
    v53(v52 + v51, v49, v50);
    swift_retain();
    sub_10003B754(&qword_100799F38);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(void (*)(char *, char *, id), uint64_t))(v29 + 8))(v229, v50);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v55 = (char *)*v38;
    uint64_t v56 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v229 = (void (*)(char *, char *, id))*((void *)v233 + 4);
    v230 = v233 + 32;
    v229(v231, v56, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      BOOL v57 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v59 = v223;
      uint64_t v58 = v224;
      uint64_t v60 = &v224[v57[12]];
      uint64_t v61 = &v224[v57[16]];
      uint64_t v62 = &v224[v57[20]];
      uint64_t v63 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v64 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
      uint64_t v65 = type metadata accessor for Date();
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
      *(void *)uint64_t v62 = 0;
      *((void *)v62 + 1) = 0;
      uint64_t v66 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v58, enum case for REMAnalyticsEvent.userOperation(_:), v59);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
    }
    uint64_t v67 = a2[4];
    uint64_t v68 = a2[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v235 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = a2;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v72(v55, v69, v70);
    swift_unknownObjectRelease();
    id v73 = (void *)zalgoIfMain.getter();
    uint64_t v75 = (void (**)(char *, id))v233;
    id v74 = v234;
    unint64_t v76 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v77 = v228;
    v226 = v55;
    unint64_t v78 = v231;
    v76(v228, v231, v234);
    unint64_t v79 = (*((unsigned __int8 *)v75 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v75 + 80);
    unint64_t v80 = (v227 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v71;
    v229((char *)(v81 + v79), v77, v74);
    *(void *)(v81 + v80) = v232;
    swift_retain();
    sub_10003B754(&qword_100799F38);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v75[1](v78, v74);
    return v54;
  }
  id v82 = a2;
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v83 = *v38;
    uint64_t v84 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = (char *)*((void *)v233 + 4);
    ((void (*)(char *, char *, id))v231)(v226, v84, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      long long v85 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v87 = v223;
      uint64_t v86 = v224;
      unint64_t v88 = &v224[v85[12]];
      uint64_t v89 = &v224[v85[16]];
      uint64_t v90 = &v224[v85[20]];
      uint64_t v91 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v92 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v86, v91, v92);
      uint64_t v93 = type metadata accessor for Date();
      *(void *)unint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 1, 1, v93);
      *(void *)uint64_t v90 = 0;
      *((void *)v90 + 1) = 0;
      uint64_t v94 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v86, enum case for REMAnalyticsEvent.userOperation(_:), v87);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v95 = v87;
      id v82 = a2;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
    }
    uint64_t v96 = v82[4];
    uint64_t v97 = v82[5];
    uint64_t v98 = swift_getObjectType();
    uint64_t v235 = v96;
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v99 + 48);
    swift_unknownObjectRetain();
    v100(v83, v98, v99);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = (void (**)(char *, id))v233;
    id v102 = v234;
    uint64_t v104 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v105 = v228;
    id v232 = v83;
    unint64_t v106 = v226;
    v104(v228, v226, v234);
    unint64_t v107 = (*((unsigned __int8 *)v103 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v103 + 80);
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v82;
    ((void (*)(unint64_t, char *, id))v231)(v108 + v107, v105, v102);
    swift_retain();
    sub_10003B754(&qword_100799F38);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v103[1](v106, v102);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v110 = v221;
    uint64_t v109 = v222;
    uint64_t v111 = v218;
    (*(void (**)(char *, id *, uint64_t))(v221 + 32))(v218, v38, v222);
    uint64_t v112 = sub_100038D28(a2 + 6, a2[9]);
    __chkstk_darwin(v112);
    *(&v197 - 2) = v113;
    *(&v197 - 1) = (uint64_t)v111;
    sub_10003B754(&qword_100799F38);
    uint64_t v54 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v233 = (char *)*v38;
    uint64_t v114 = v233;
    uint64_t v115 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v116 = v215;
    id v232 = *(id *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v232)(v219, v115, v220);
    uint64_t v118 = a2[4];
    uint64_t v117 = a2[5];
    uint64_t v119 = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v118;
    uint64_t v120 = *(void *)(v117 + 8);
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 64);
    swift_unknownObjectRetain();
    v121(v114, v119, v120);
    swift_unknownObjectRelease();
    uint64_t v122 = (void *)zalgoIfMain.getter();
    unint64_t v123 = v214;
    uint64_t v124 = v219;
    uint64_t v125 = v220;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v214, v219, v220);
    unint64_t v126 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v234;
    ((void (*)(unint64_t, char *, uint64_t))v232)(v127 + v126, v123, v125);
    swift_retain();
    sub_10003B754(&qword_100799F38);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v128 = v234;
    uint64_t v129 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v129, v217);
    uint64_t v132 = a2[4];
    uint64_t v131 = a2[5];
    uint64_t v133 = swift_getObjectType();
    uint64_t v235 = v132;
    uint64_t v134 = *(void *)(v131 + 8);
    uint64_t v135 = *(void (**)(id, uint64_t, uint64_t))(v134 + 72);
    swift_unknownObjectRetain();
    v135(v128, v133, v134);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    uint64_t v137 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v140 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v141 = swift_allocObject();
    *(void *)(v141 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v141 + v140, v137, v139);
    swift_retain();
    sub_10003B754(&qword_100799F38);
LABEL_19:
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v138, v139);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v142 = v234;
    uint64_t v143 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v143, v217);
    uint64_t v145 = a2[4];
    uint64_t v144 = a2[5];
    uint64_t v146 = swift_getObjectType();
    uint64_t v235 = v145;
    uint64_t v147 = *(void *)(v144 + 8);
    v148 = *(void (**)(id, uint64_t, uint64_t))(v147 + 80);
    swift_unknownObjectRetain();
    v148(v142, v146, v147);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    unint64_t v149 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v150 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v151 + v150, v149, v139);
    swift_retain();
    sub_10003B754(&qword_100799F38);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_1003484D8(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    return v54;
  }
  char v153 = (char)v232;
  if (v40 == enum case for REMNavigationSpecifier.today(_:)
    || v40 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v40 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v154 = v207;
    uint64_t v155 = *(void (**)(char *, id *, uint64_t))(v207 + 32);
    uint64_t v156 = v209;
    uint64_t v157 = v208;
    v155(v209, v38, v208);
    uint64_t v158 = *sub_100038D28(v82 + 6, v82[9]);
    sub_10034812C(0);
    unint64_t v159 = v206;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v206, v156, v157);
    unint64_t v160 = (*(unsigned __int8 *)(v154 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    unint64_t v161 = (v205 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v162 = swift_allocObject();
    v155((char *)(v162 + v160), (id *)v159, v157);
    *(void *)(v162 + v161) = v158;
    swift_retain();
    uint64_t v163 = (void *)zalgo.getter();
    sub_10003B754(&qword_100799F38);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v154 + 8))(v209, v157);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:)
    || v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v164 = v203;
    uint64_t v165 = (uint64_t)v202;
    uint64_t v166 = v204;
    (*(void (**)(char *, id *, uint64_t))(v203 + 32))(v202, v38, v204);
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_10032B630(v165, (uint64_t)sub_1003484D8, (uint64_t)&unk_100744770, &qword_100799F38, (uint64_t)sub_100331E40);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    if ((v153 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v223;
      uint64_t v169 = v224;
      v170 = &v224[v167[12]];
      uint64_t v171 = &v224[v167[16]];
      v172 = &v224[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v168);
    }
    sub_100038D28(a2 + 6, a2[9]);
    return sub_1003274C4(v210, v153 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100329140, &qword_10079B160);
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v177 = v200;
    uint64_t v178 = (uint64_t)v199;
    uint64_t v179 = v38;
    uint64_t v180 = v201;
    (*(void (**)(char *, id *, uint64_t))(v200 + 32))(v199, v179, v201);
    uint64_t v181 = (uint64_t **)sub_100038D28(a2 + 6, a2[9]);
    uint64_t v182 = a2[4];
    uint64_t v183 = a2[5];
    uint64_t v184 = swift_getObjectType();
    uint64_t v235 = v182;
    v185 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v183 + 8) + 8))(v184);
    v186 = *v181;
    swift_retain();
    sub_10032DB38(v178, v185, (uint64_t)a2, v186);

    swift_release();
    NSString v187 = self;
    NSString v188 = String._bridgeToObjectiveC()();
    id v189 = [v187 internalErrorWithDebugDescription:v188];

    sub_10003B754(&qword_10079B160);
    swift_allocObject();
    uint64_t v54 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v180);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    sub_10003B754(&qword_100799F38);
    return firstly<A>(closure:)();
  }
  if (v40 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v198, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = a2;
    sub_1000286A4(v191, (uint64_t)&unk_10079B190, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079B160);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10030F5E8(uint64_t a1, void *a2, void *a3)
{
  id v232 = a3;
  uint64_t v223 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v225 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v224 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v198 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v221 = *(void *)(v8 - 8);
  uint64_t v222 = v8;
  __chkstk_darwin(v8);
  v218 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v202 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = v12;
  __chkstk_darwin(v13);
  uint64_t v209 = (char *)&v197 - v14;
  uint64_t v220 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v215 = *(void *)(v220 - 8);
  uint64_t v15 = *(void *)(v215 + 64);
  __chkstk_darwin(v220);
  v214 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (char *)&v197 - v17;
  uint64_t v217 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v213 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v212 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v18;
  __chkstk_darwin(v19);
  v216 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v233 = (char *)*(v21 - 1);
  id v234 = v21;
  __chkstk_darwin(v21);
  v228 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  uint64_t v227 = v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  v230 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (*)(char *, char *, id))((char *)&v197 - v32);
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  double v36 = __chkstk_darwin(v34);
  uint64_t v38 = (id *)((char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v39 = *(void (**)(id *, uint64_t, uint64_t, double))(v35 + 16);
  uint64_t v210 = a1;
  v39(v38, a1, v34, v36);
  int v40 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v38, v34);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v41 = *v38;
    uint64_t v42 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v233 = *(char **)(v29 + 32);
    uint64_t v229 = v33;
    uint64_t v197 = v28;
    ((void (*)(void, char *, uint64_t))v233)(v33, v42, v28);
    uint64_t v44 = a2[4];
    uint64_t v43 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v44;
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 24);
    swift_unknownObjectRetain();
    v47(v41, ObjectType, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = (void *)zalgoIfMain.getter();
    uint64_t v49 = v230;
    uint64_t v50 = v197;
    (*(void (**)(char *, void, uint64_t))(v29 + 16))(v230, v229, v197);
    unint64_t v51 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v52 = swift_allocObject();
    id v53 = (void (*)(unint64_t, char *, uint64_t))v233;
    *(void *)(v52 + 16) = v234;
    v53(v52 + v51, v49, v50);
    swift_retain();
    sub_10003B754(&qword_10079B1A0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(void (*)(char *, char *, id), uint64_t))(v29 + 8))(v229, v50);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v55 = (char *)*v38;
    uint64_t v56 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v229 = (void (*)(char *, char *, id))*((void *)v233 + 4);
    v230 = v233 + 32;
    v229(v231, v56, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      BOOL v57 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v59 = v223;
      uint64_t v58 = v224;
      uint64_t v60 = &v224[v57[12]];
      uint64_t v61 = &v224[v57[16]];
      uint64_t v62 = &v224[v57[20]];
      uint64_t v63 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v64 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
      uint64_t v65 = type metadata accessor for Date();
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
      *(void *)uint64_t v62 = 0;
      *((void *)v62 + 1) = 0;
      uint64_t v66 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v58, enum case for REMAnalyticsEvent.userOperation(_:), v59);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
    }
    uint64_t v67 = a2[4];
    uint64_t v68 = a2[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v235 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = a2;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v72(v55, v69, v70);
    swift_unknownObjectRelease();
    id v73 = (void *)zalgoIfMain.getter();
    uint64_t v75 = (void (**)(char *, id))v233;
    id v74 = v234;
    unint64_t v76 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v77 = v228;
    v226 = v55;
    unint64_t v78 = v231;
    v76(v228, v231, v234);
    unint64_t v79 = (*((unsigned __int8 *)v75 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v75 + 80);
    unint64_t v80 = (v227 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v71;
    v229((char *)(v81 + v79), v77, v74);
    *(void *)(v81 + v80) = v232;
    swift_retain();
    sub_10003B754(&qword_10079B1A0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v75[1](v78, v74);
    return v54;
  }
  id v82 = a2;
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v83 = *v38;
    uint64_t v84 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = (char *)*((void *)v233 + 4);
    ((void (*)(char *, char *, id))v231)(v226, v84, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      long long v85 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v87 = v223;
      uint64_t v86 = v224;
      unint64_t v88 = &v224[v85[12]];
      uint64_t v89 = &v224[v85[16]];
      uint64_t v90 = &v224[v85[20]];
      uint64_t v91 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v92 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v86, v91, v92);
      uint64_t v93 = type metadata accessor for Date();
      *(void *)unint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 1, 1, v93);
      *(void *)uint64_t v90 = 0;
      *((void *)v90 + 1) = 0;
      uint64_t v94 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v86, enum case for REMAnalyticsEvent.userOperation(_:), v87);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v95 = v87;
      id v82 = a2;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
    }
    uint64_t v96 = v82[4];
    uint64_t v97 = v82[5];
    uint64_t v98 = swift_getObjectType();
    uint64_t v235 = v96;
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v99 + 48);
    swift_unknownObjectRetain();
    v100(v83, v98, v99);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = (void (**)(char *, id))v233;
    id v102 = v234;
    uint64_t v104 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v105 = v228;
    id v232 = v83;
    unint64_t v106 = v226;
    v104(v228, v226, v234);
    unint64_t v107 = (*((unsigned __int8 *)v103 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v103 + 80);
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v82;
    ((void (*)(unint64_t, char *, id))v231)(v108 + v107, v105, v102);
    swift_retain();
    sub_10003B754(&qword_10079B1A0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v103[1](v106, v102);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v110 = v221;
    uint64_t v109 = v222;
    uint64_t v111 = v218;
    (*(void (**)(char *, id *, uint64_t))(v221 + 32))(v218, v38, v222);
    uint64_t v112 = sub_100038D28(a2 + 6, a2[9]);
    __chkstk_darwin(v112);
    *(&v197 - 2) = v113;
    *(&v197 - 1) = (uint64_t)v111;
    sub_10003B754(&qword_10079B1A0);
    uint64_t v54 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v233 = (char *)*v38;
    uint64_t v114 = v233;
    uint64_t v115 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v116 = v215;
    id v232 = *(id *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v232)(v219, v115, v220);
    uint64_t v118 = a2[4];
    uint64_t v117 = a2[5];
    uint64_t v119 = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v118;
    uint64_t v120 = *(void *)(v117 + 8);
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 64);
    swift_unknownObjectRetain();
    v121(v114, v119, v120);
    swift_unknownObjectRelease();
    uint64_t v122 = (void *)zalgoIfMain.getter();
    unint64_t v123 = v214;
    uint64_t v124 = v219;
    uint64_t v125 = v220;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v214, v219, v220);
    unint64_t v126 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v234;
    ((void (*)(unint64_t, char *, uint64_t))v232)(v127 + v126, v123, v125);
    swift_retain();
    sub_10003B754(&qword_10079B1A0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v128 = v234;
    uint64_t v129 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v129, v217);
    uint64_t v132 = a2[4];
    uint64_t v131 = a2[5];
    uint64_t v133 = swift_getObjectType();
    uint64_t v235 = v132;
    uint64_t v134 = *(void *)(v131 + 8);
    uint64_t v135 = *(void (**)(id, uint64_t, uint64_t))(v134 + 72);
    swift_unknownObjectRetain();
    v135(v128, v133, v134);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    uint64_t v137 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v140 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v141 = swift_allocObject();
    *(void *)(v141 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v141 + v140, v137, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1A0);
LABEL_19:
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v138, v139);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v142 = v234;
    uint64_t v143 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v143, v217);
    uint64_t v145 = a2[4];
    uint64_t v144 = a2[5];
    uint64_t v146 = swift_getObjectType();
    uint64_t v235 = v145;
    uint64_t v147 = *(void *)(v144 + 8);
    v148 = *(void (**)(id, uint64_t, uint64_t))(v147 + 80);
    swift_unknownObjectRetain();
    v148(v142, v146, v147);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    unint64_t v149 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v150 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v151 + v150, v149, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1A0);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_100348508(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    return v54;
  }
  char v153 = (char)v232;
  if (v40 == enum case for REMNavigationSpecifier.today(_:)
    || v40 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v40 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v154 = v207;
    uint64_t v155 = *(void (**)(char *, id *, uint64_t))(v207 + 32);
    uint64_t v156 = v209;
    uint64_t v157 = v208;
    v155(v209, v38, v208);
    uint64_t v158 = *sub_100038D28(v82 + 6, v82[9]);
    sub_10034812C(0);
    unint64_t v159 = v206;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v206, v156, v157);
    unint64_t v160 = (*(unsigned __int8 *)(v154 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    unint64_t v161 = (v205 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v162 = swift_allocObject();
    v155((char *)(v162 + v160), (id *)v159, v157);
    *(void *)(v162 + v161) = v158;
    swift_retain();
    uint64_t v163 = (void *)zalgo.getter();
    sub_10003B754(&qword_10079B1A0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v154 + 8))(v209, v157);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:)
    || v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v164 = v203;
    uint64_t v165 = (uint64_t)v202;
    uint64_t v166 = v204;
    (*(void (**)(char *, id *, uint64_t))(v203 + 32))(v202, v38, v204);
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_10032B630(v165, (uint64_t)sub_100348508, (uint64_t)&unk_100745170, &qword_10079B1A0, (uint64_t)sub_1003328E8);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    if ((v153 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v223;
      uint64_t v169 = v224;
      v170 = &v224[v167[12]];
      uint64_t v171 = &v224[v167[16]];
      v172 = &v224[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v168);
    }
    sub_100038D28(a2 + 6, a2[9]);
    return sub_1003274C4(v210, v153 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100329798, &qword_10079B1B0);
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v177 = v200;
    uint64_t v178 = (uint64_t)v199;
    uint64_t v179 = v38;
    uint64_t v180 = v201;
    (*(void (**)(char *, id *, uint64_t))(v200 + 32))(v199, v179, v201);
    uint64_t v181 = (uint64_t **)sub_100038D28(a2 + 6, a2[9]);
    uint64_t v182 = a2[4];
    uint64_t v183 = a2[5];
    uint64_t v184 = swift_getObjectType();
    uint64_t v235 = v182;
    v185 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v183 + 8) + 8))(v184);
    v186 = *v181;
    swift_retain();
    sub_10032DB38(v178, v185, (uint64_t)a2, v186);

    swift_release();
    NSString v187 = self;
    NSString v188 = String._bridgeToObjectiveC()();
    id v189 = [v187 internalErrorWithDebugDescription:v188];

    sub_10003B754(&qword_10079B1B0);
    swift_allocObject();
    uint64_t v54 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v180);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    sub_10003B754(&qword_10079B1A0);
    return firstly<A>(closure:)();
  }
  if (v40 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v198, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = a2;
    sub_1000286A4(v191, (uint64_t)&unk_10079B1A8, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079B1B0);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10031115C(uint64_t a1, void *a2, void *a3)
{
  id v232 = a3;
  uint64_t v223 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v225 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v224 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v198 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v221 = *(void *)(v8 - 8);
  uint64_t v222 = v8;
  __chkstk_darwin(v8);
  v218 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v202 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = v12;
  __chkstk_darwin(v13);
  uint64_t v209 = (char *)&v197 - v14;
  uint64_t v220 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v215 = *(void *)(v220 - 8);
  uint64_t v15 = *(void *)(v215 + 64);
  __chkstk_darwin(v220);
  v214 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (char *)&v197 - v17;
  uint64_t v217 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v213 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v212 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v18;
  __chkstk_darwin(v19);
  v216 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v233 = (char *)*(v21 - 1);
  id v234 = v21;
  __chkstk_darwin(v21);
  v228 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  uint64_t v227 = v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  v230 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (*)(char *, char *, id))((char *)&v197 - v32);
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  double v36 = __chkstk_darwin(v34);
  uint64_t v38 = (id *)((char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v39 = *(void (**)(id *, uint64_t, uint64_t, double))(v35 + 16);
  uint64_t v210 = a1;
  v39(v38, a1, v34, v36);
  int v40 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v38, v34);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v41 = *v38;
    uint64_t v42 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v233 = *(char **)(v29 + 32);
    uint64_t v229 = v33;
    uint64_t v197 = v28;
    ((void (*)(void, char *, uint64_t))v233)(v33, v42, v28);
    uint64_t v44 = a2[4];
    uint64_t v43 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v44;
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 24);
    swift_unknownObjectRetain();
    v47(v41, ObjectType, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = (void *)zalgoIfMain.getter();
    uint64_t v49 = v230;
    uint64_t v50 = v197;
    (*(void (**)(char *, void, uint64_t))(v29 + 16))(v230, v229, v197);
    unint64_t v51 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v52 = swift_allocObject();
    id v53 = (void (*)(unint64_t, char *, uint64_t))v233;
    *(void *)(v52 + 16) = v234;
    v53(v52 + v51, v49, v50);
    swift_retain();
    sub_10003B754(&qword_10079B1B8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(void (*)(char *, char *, id), uint64_t))(v29 + 8))(v229, v50);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v55 = (char *)*v38;
    uint64_t v56 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v229 = (void (*)(char *, char *, id))*((void *)v233 + 4);
    v230 = v233 + 32;
    v229(v231, v56, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      BOOL v57 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v59 = v223;
      uint64_t v58 = v224;
      uint64_t v60 = &v224[v57[12]];
      uint64_t v61 = &v224[v57[16]];
      uint64_t v62 = &v224[v57[20]];
      uint64_t v63 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v64 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
      uint64_t v65 = type metadata accessor for Date();
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
      *(void *)uint64_t v62 = 0;
      *((void *)v62 + 1) = 0;
      uint64_t v66 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v58, enum case for REMAnalyticsEvent.userOperation(_:), v59);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
    }
    uint64_t v67 = a2[4];
    uint64_t v68 = a2[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v235 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = a2;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v72(v55, v69, v70);
    swift_unknownObjectRelease();
    id v73 = (void *)zalgoIfMain.getter();
    uint64_t v75 = (void (**)(char *, id))v233;
    id v74 = v234;
    unint64_t v76 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v77 = v228;
    v226 = v55;
    unint64_t v78 = v231;
    v76(v228, v231, v234);
    unint64_t v79 = (*((unsigned __int8 *)v75 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v75 + 80);
    unint64_t v80 = (v227 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v71;
    v229((char *)(v81 + v79), v77, v74);
    *(void *)(v81 + v80) = v232;
    swift_retain();
    sub_10003B754(&qword_10079B1B8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v75[1](v78, v74);
    return v54;
  }
  id v82 = a2;
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v83 = *v38;
    uint64_t v84 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = (char *)*((void *)v233 + 4);
    ((void (*)(char *, char *, id))v231)(v226, v84, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      long long v85 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v87 = v223;
      uint64_t v86 = v224;
      unint64_t v88 = &v224[v85[12]];
      uint64_t v89 = &v224[v85[16]];
      uint64_t v90 = &v224[v85[20]];
      uint64_t v91 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v92 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v86, v91, v92);
      uint64_t v93 = type metadata accessor for Date();
      *(void *)unint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 1, 1, v93);
      *(void *)uint64_t v90 = 0;
      *((void *)v90 + 1) = 0;
      uint64_t v94 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v86, enum case for REMAnalyticsEvent.userOperation(_:), v87);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v95 = v87;
      id v82 = a2;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
    }
    uint64_t v96 = v82[4];
    uint64_t v97 = v82[5];
    uint64_t v98 = swift_getObjectType();
    uint64_t v235 = v96;
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v99 + 48);
    swift_unknownObjectRetain();
    v100(v83, v98, v99);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = (void (**)(char *, id))v233;
    id v102 = v234;
    uint64_t v104 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v105 = v228;
    id v232 = v83;
    unint64_t v106 = v226;
    v104(v228, v226, v234);
    unint64_t v107 = (*((unsigned __int8 *)v103 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v103 + 80);
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v82;
    ((void (*)(unint64_t, char *, id))v231)(v108 + v107, v105, v102);
    swift_retain();
    sub_10003B754(&qword_10079B1B8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v103[1](v106, v102);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v110 = v221;
    uint64_t v109 = v222;
    uint64_t v111 = v218;
    (*(void (**)(char *, id *, uint64_t))(v221 + 32))(v218, v38, v222);
    uint64_t v112 = sub_100038D28(a2 + 6, a2[9]);
    __chkstk_darwin(v112);
    *(&v197 - 2) = v113;
    *(&v197 - 1) = (uint64_t)v111;
    sub_10003B754(&qword_10079B1B8);
    uint64_t v54 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v233 = (char *)*v38;
    uint64_t v114 = v233;
    uint64_t v115 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v116 = v215;
    id v232 = *(id *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v232)(v219, v115, v220);
    uint64_t v118 = a2[4];
    uint64_t v117 = a2[5];
    uint64_t v119 = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v118;
    uint64_t v120 = *(void *)(v117 + 8);
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 64);
    swift_unknownObjectRetain();
    v121(v114, v119, v120);
    swift_unknownObjectRelease();
    uint64_t v122 = (void *)zalgoIfMain.getter();
    unint64_t v123 = v214;
    uint64_t v124 = v219;
    uint64_t v125 = v220;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v214, v219, v220);
    unint64_t v126 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v234;
    ((void (*)(unint64_t, char *, uint64_t))v232)(v127 + v126, v123, v125);
    swift_retain();
    sub_10003B754(&qword_10079B1B8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v128 = v234;
    uint64_t v129 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v129, v217);
    uint64_t v132 = a2[4];
    uint64_t v131 = a2[5];
    uint64_t v133 = swift_getObjectType();
    uint64_t v235 = v132;
    uint64_t v134 = *(void *)(v131 + 8);
    uint64_t v135 = *(void (**)(id, uint64_t, uint64_t))(v134 + 72);
    swift_unknownObjectRetain();
    v135(v128, v133, v134);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    uint64_t v137 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v140 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v141 = swift_allocObject();
    *(void *)(v141 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v141 + v140, v137, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1B8);
LABEL_19:
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v138, v139);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v142 = v234;
    uint64_t v143 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v143, v217);
    uint64_t v145 = a2[4];
    uint64_t v144 = a2[5];
    uint64_t v146 = swift_getObjectType();
    uint64_t v235 = v145;
    uint64_t v147 = *(void *)(v144 + 8);
    v148 = *(void (**)(id, uint64_t, uint64_t))(v147 + 80);
    swift_unknownObjectRetain();
    v148(v142, v146, v147);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    unint64_t v149 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v150 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v151 + v150, v149, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1B8);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_100348538(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    return v54;
  }
  char v153 = (char)v232;
  if (v40 == enum case for REMNavigationSpecifier.today(_:)
    || v40 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v40 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v154 = v207;
    uint64_t v155 = *(void (**)(char *, id *, uint64_t))(v207 + 32);
    uint64_t v156 = v209;
    uint64_t v157 = v208;
    v155(v209, v38, v208);
    uint64_t v158 = *sub_100038D28(v82 + 6, v82[9]);
    sub_10034812C(0);
    unint64_t v159 = v206;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v206, v156, v157);
    unint64_t v160 = (*(unsigned __int8 *)(v154 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    unint64_t v161 = (v205 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v162 = swift_allocObject();
    v155((char *)(v162 + v160), (id *)v159, v157);
    *(void *)(v162 + v161) = v158;
    swift_retain();
    uint64_t v163 = (void *)zalgo.getter();
    sub_10003B754(&qword_10079B1B8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v154 + 8))(v209, v157);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:)
    || v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v164 = v203;
    uint64_t v165 = (uint64_t)v202;
    uint64_t v166 = v204;
    (*(void (**)(char *, id *, uint64_t))(v203 + 32))(v202, v38, v204);
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_10032B630(v165, (uint64_t)sub_100348538, (uint64_t)&unk_100745670, &qword_10079B1B8, (uint64_t)sub_100332E24);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    if ((v153 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v223;
      uint64_t v169 = v224;
      v170 = &v224[v167[12]];
      uint64_t v171 = &v224[v167[16]];
      v172 = &v224[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v168);
    }
    sub_100038D28(a2 + 6, a2[9]);
    return sub_1003274C4(v210, v153 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_100329DF0, &qword_10079B1C8);
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v177 = v200;
    uint64_t v178 = (uint64_t)v199;
    uint64_t v179 = v38;
    uint64_t v180 = v201;
    (*(void (**)(char *, id *, uint64_t))(v200 + 32))(v199, v179, v201);
    uint64_t v181 = (uint64_t **)sub_100038D28(a2 + 6, a2[9]);
    uint64_t v182 = a2[4];
    uint64_t v183 = a2[5];
    uint64_t v184 = swift_getObjectType();
    uint64_t v235 = v182;
    v185 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v183 + 8) + 8))(v184);
    v186 = *v181;
    swift_retain();
    sub_10032DB38(v178, v185, (uint64_t)a2, v186);

    swift_release();
    NSString v187 = self;
    NSString v188 = String._bridgeToObjectiveC()();
    id v189 = [v187 internalErrorWithDebugDescription:v188];

    sub_10003B754(&qword_10079B1C8);
    swift_allocObject();
    uint64_t v54 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v180);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    sub_10003B754(&qword_10079B1B8);
    return firstly<A>(closure:)();
  }
  if (v40 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v198, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = a2;
    sub_1000286A4(v191, (uint64_t)&unk_10079B1C0, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079B1C8);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100312CD0(uint64_t a1, void *a2, void *a3)
{
  id v232 = a3;
  uint64_t v223 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v225 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v224 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v198 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v221 = *(void *)(v8 - 8);
  uint64_t v222 = v8;
  __chkstk_darwin(v8);
  v218 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v202 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = v12;
  __chkstk_darwin(v13);
  uint64_t v209 = (char *)&v197 - v14;
  uint64_t v220 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v215 = *(void *)(v220 - 8);
  uint64_t v15 = *(void *)(v215 + 64);
  __chkstk_darwin(v220);
  v214 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (char *)&v197 - v17;
  uint64_t v217 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v213 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v212 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v18;
  __chkstk_darwin(v19);
  v216 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v233 = (char *)*(v21 - 1);
  id v234 = v21;
  __chkstk_darwin(v21);
  v228 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  uint64_t v227 = v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  v230 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (*)(char *, char *, id))((char *)&v197 - v32);
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  double v36 = __chkstk_darwin(v34);
  uint64_t v38 = (id *)((char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v39 = *(void (**)(id *, uint64_t, uint64_t, double))(v35 + 16);
  uint64_t v210 = a1;
  v39(v38, a1, v34, v36);
  int v40 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v38, v34);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v41 = *v38;
    uint64_t v42 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v233 = *(char **)(v29 + 32);
    uint64_t v229 = v33;
    uint64_t v197 = v28;
    ((void (*)(void, char *, uint64_t))v233)(v33, v42, v28);
    uint64_t v44 = a2[4];
    uint64_t v43 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v44;
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 24);
    swift_unknownObjectRetain();
    v47(v41, ObjectType, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = (void *)zalgoIfMain.getter();
    uint64_t v49 = v230;
    uint64_t v50 = v197;
    (*(void (**)(char *, void, uint64_t))(v29 + 16))(v230, v229, v197);
    unint64_t v51 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v52 = swift_allocObject();
    id v53 = (void (*)(unint64_t, char *, uint64_t))v233;
    *(void *)(v52 + 16) = v234;
    v53(v52 + v51, v49, v50);
    swift_retain();
    sub_10003B754(&qword_10079B1D0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(void (*)(char *, char *, id), uint64_t))(v29 + 8))(v229, v50);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v55 = (char *)*v38;
    uint64_t v56 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v229 = (void (*)(char *, char *, id))*((void *)v233 + 4);
    v230 = v233 + 32;
    v229(v231, v56, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      BOOL v57 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v59 = v223;
      uint64_t v58 = v224;
      uint64_t v60 = &v224[v57[12]];
      uint64_t v61 = &v224[v57[16]];
      uint64_t v62 = &v224[v57[20]];
      uint64_t v63 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v64 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
      uint64_t v65 = type metadata accessor for Date();
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
      *(void *)uint64_t v62 = 0;
      *((void *)v62 + 1) = 0;
      uint64_t v66 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v58, enum case for REMAnalyticsEvent.userOperation(_:), v59);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
    }
    uint64_t v67 = a2[4];
    uint64_t v68 = a2[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v235 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = a2;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v72(v55, v69, v70);
    swift_unknownObjectRelease();
    id v73 = (void *)zalgoIfMain.getter();
    uint64_t v75 = (void (**)(char *, id))v233;
    id v74 = v234;
    unint64_t v76 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v77 = v228;
    v226 = v55;
    unint64_t v78 = v231;
    v76(v228, v231, v234);
    unint64_t v79 = (*((unsigned __int8 *)v75 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v75 + 80);
    unint64_t v80 = (v227 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v71;
    v229((char *)(v81 + v79), v77, v74);
    *(void *)(v81 + v80) = v232;
    swift_retain();
    sub_10003B754(&qword_10079B1D0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v75[1](v78, v74);
    return v54;
  }
  id v82 = a2;
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v83 = *v38;
    uint64_t v84 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = (char *)*((void *)v233 + 4);
    ((void (*)(char *, char *, id))v231)(v226, v84, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      long long v85 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v87 = v223;
      uint64_t v86 = v224;
      unint64_t v88 = &v224[v85[12]];
      uint64_t v89 = &v224[v85[16]];
      uint64_t v90 = &v224[v85[20]];
      uint64_t v91 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v92 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v86, v91, v92);
      uint64_t v93 = type metadata accessor for Date();
      *(void *)unint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 1, 1, v93);
      *(void *)uint64_t v90 = 0;
      *((void *)v90 + 1) = 0;
      uint64_t v94 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v86, enum case for REMAnalyticsEvent.userOperation(_:), v87);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v95 = v87;
      id v82 = a2;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
    }
    uint64_t v96 = v82[4];
    uint64_t v97 = v82[5];
    uint64_t v98 = swift_getObjectType();
    uint64_t v235 = v96;
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v99 + 48);
    swift_unknownObjectRetain();
    v100(v83, v98, v99);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = (void (**)(char *, id))v233;
    id v102 = v234;
    uint64_t v104 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v105 = v228;
    id v232 = v83;
    unint64_t v106 = v226;
    v104(v228, v226, v234);
    unint64_t v107 = (*((unsigned __int8 *)v103 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v103 + 80);
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v82;
    ((void (*)(unint64_t, char *, id))v231)(v108 + v107, v105, v102);
    swift_retain();
    sub_10003B754(&qword_10079B1D0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v103[1](v106, v102);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v110 = v221;
    uint64_t v109 = v222;
    uint64_t v111 = v218;
    (*(void (**)(char *, id *, uint64_t))(v221 + 32))(v218, v38, v222);
    uint64_t v112 = sub_100038D28(a2 + 6, a2[9]);
    __chkstk_darwin(v112);
    *(&v197 - 2) = v113;
    *(&v197 - 1) = (uint64_t)v111;
    sub_10003B754(&qword_10079B1D0);
    uint64_t v54 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v233 = (char *)*v38;
    uint64_t v114 = v233;
    uint64_t v115 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v116 = v215;
    id v232 = *(id *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v232)(v219, v115, v220);
    uint64_t v118 = a2[4];
    uint64_t v117 = a2[5];
    uint64_t v119 = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v118;
    uint64_t v120 = *(void *)(v117 + 8);
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 64);
    swift_unknownObjectRetain();
    v121(v114, v119, v120);
    swift_unknownObjectRelease();
    uint64_t v122 = (void *)zalgoIfMain.getter();
    unint64_t v123 = v214;
    uint64_t v124 = v219;
    uint64_t v125 = v220;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v214, v219, v220);
    unint64_t v126 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v234;
    ((void (*)(unint64_t, char *, uint64_t))v232)(v127 + v126, v123, v125);
    swift_retain();
    sub_10003B754(&qword_10079B1D0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v128 = v234;
    uint64_t v129 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v129, v217);
    uint64_t v132 = a2[4];
    uint64_t v131 = a2[5];
    uint64_t v133 = swift_getObjectType();
    uint64_t v235 = v132;
    uint64_t v134 = *(void *)(v131 + 8);
    uint64_t v135 = *(void (**)(id, uint64_t, uint64_t))(v134 + 72);
    swift_unknownObjectRetain();
    v135(v128, v133, v134);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    uint64_t v137 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v140 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v141 = swift_allocObject();
    *(void *)(v141 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v141 + v140, v137, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1D0);
LABEL_19:
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v138, v139);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v142 = v234;
    uint64_t v143 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v143, v217);
    uint64_t v145 = a2[4];
    uint64_t v144 = a2[5];
    uint64_t v146 = swift_getObjectType();
    uint64_t v235 = v145;
    uint64_t v147 = *(void *)(v144 + 8);
    v148 = *(void (**)(id, uint64_t, uint64_t))(v147 + 80);
    swift_unknownObjectRetain();
    v148(v142, v146, v147);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    unint64_t v149 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v150 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v151 + v150, v149, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1D0);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_100348568(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    return v54;
  }
  char v153 = (char)v232;
  if (v40 == enum case for REMNavigationSpecifier.today(_:)
    || v40 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v40 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v154 = v207;
    uint64_t v155 = *(void (**)(char *, id *, uint64_t))(v207 + 32);
    uint64_t v156 = v209;
    uint64_t v157 = v208;
    v155(v209, v38, v208);
    uint64_t v158 = *sub_100038D28(v82 + 6, v82[9]);
    sub_10034812C(0);
    unint64_t v159 = v206;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v206, v156, v157);
    unint64_t v160 = (*(unsigned __int8 *)(v154 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    unint64_t v161 = (v205 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v162 = swift_allocObject();
    v155((char *)(v162 + v160), (id *)v159, v157);
    *(void *)(v162 + v161) = v158;
    swift_retain();
    uint64_t v163 = (void *)zalgo.getter();
    sub_10003B754(&qword_10079B1D0);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v154 + 8))(v209, v157);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:)
    || v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v164 = v203;
    uint64_t v165 = (uint64_t)v202;
    uint64_t v166 = v204;
    (*(void (**)(char *, id *, uint64_t))(v203 + 32))(v202, v38, v204);
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_10032B630(v165, (uint64_t)sub_100348568, (uint64_t)&unk_100745B70, &qword_10079B1D0, (uint64_t)sub_100333360);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    if ((v153 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v223;
      uint64_t v169 = v224;
      v170 = &v224[v167[12]];
      uint64_t v171 = &v224[v167[16]];
      v172 = &v224[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v168);
    }
    sub_100038D28(a2 + 6, a2[9]);
    return sub_1003274C4(v210, v153 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_10032A448, &qword_10079B1E0);
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v177 = v200;
    uint64_t v178 = (uint64_t)v199;
    uint64_t v179 = v38;
    uint64_t v180 = v201;
    (*(void (**)(char *, id *, uint64_t))(v200 + 32))(v199, v179, v201);
    uint64_t v181 = (uint64_t **)sub_100038D28(a2 + 6, a2[9]);
    uint64_t v182 = a2[4];
    uint64_t v183 = a2[5];
    uint64_t v184 = swift_getObjectType();
    uint64_t v235 = v182;
    v185 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v183 + 8) + 8))(v184);
    v186 = *v181;
    swift_retain();
    sub_10032DB38(v178, v185, (uint64_t)a2, v186);

    swift_release();
    NSString v187 = self;
    NSString v188 = String._bridgeToObjectiveC()();
    id v189 = [v187 internalErrorWithDebugDescription:v188];

    sub_10003B754(&qword_10079B1E0);
    swift_allocObject();
    uint64_t v54 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v180);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    sub_10003B754(&qword_10079B1D0);
    return firstly<A>(closure:)();
  }
  if (v40 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v198, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = a2;
    sub_1000286A4(v191, (uint64_t)&unk_10079B1D8, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079B1E0);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100314844(uint64_t a1, void *a2, void *a3)
{
  id v232 = a3;
  uint64_t v223 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v225 = *(void *)(v223 - 8);
  __chkstk_darwin(v223);
  v224 = (char *)&v197 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v198 = (char *)&v197 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v221 = *(void *)(v8 - 8);
  uint64_t v222 = v8;
  __chkstk_darwin(v8);
  v218 = (char *)&v197 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201);
  v199 = (char *)&v197 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v202 = (char *)&v197 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v208 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v207 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v206 = (char *)&v197 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = v12;
  __chkstk_darwin(v13);
  uint64_t v209 = (char *)&v197 - v14;
  uint64_t v220 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v215 = *(void *)(v220 - 8);
  uint64_t v15 = *(void *)(v215 + 64);
  __chkstk_darwin(v220);
  v214 = (char *)&v197 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v219 = (char *)&v197 - v17;
  uint64_t v217 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v213 = *(void *)(v217 - 8);
  __chkstk_darwin(v217);
  uint64_t v212 = (char *)&v197 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v18;
  __chkstk_darwin(v19);
  v216 = (char *)&v197 - v20;
  uint64_t v21 = (void *)type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v233 = (char *)*(v21 - 1);
  id v234 = v21;
  __chkstk_darwin(v21);
  v228 = (char *)&v197 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v226 = (char *)&v197 - v24;
  uint64_t v227 = v25;
  __chkstk_darwin(v26);
  v231 = (char *)&v197 - v27;
  uint64_t v28 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  __chkstk_darwin(v28);
  v230 = (char *)&v197 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (void (*)(char *, char *, id))((char *)&v197 - v32);
  uint64_t v34 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v35 = *(void *)(v34 - 8);
  double v36 = __chkstk_darwin(v34);
  uint64_t v38 = (id *)((char *)&v197 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  int v39 = *(void (**)(id *, uint64_t, uint64_t, double))(v35 + 16);
  uint64_t v210 = a1;
  v39(v38, a1, v34, v36);
  int v40 = (*(uint64_t (**)(id *, uint64_t))(v35 + 88))(v38, v34);
  if (v40 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v41 = *v38;
    uint64_t v42 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v233 = *(char **)(v29 + 32);
    uint64_t v229 = v33;
    uint64_t v197 = v28;
    ((void (*)(void, char *, uint64_t))v233)(v33, v42, v28);
    uint64_t v44 = a2[4];
    uint64_t v43 = a2[5];
    uint64_t ObjectType = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v44;
    uint64_t v46 = *(void *)(v43 + 8);
    uint64_t v47 = *(void (**)(id, uint64_t, uint64_t))(v46 + 24);
    swift_unknownObjectRetain();
    v47(v41, ObjectType, v46);
    swift_unknownObjectRelease();
    uint64_t v48 = (void *)zalgoIfMain.getter();
    uint64_t v49 = v230;
    uint64_t v50 = v197;
    (*(void (**)(char *, void, uint64_t))(v29 + 16))(v230, v229, v197);
    unint64_t v51 = (*(unsigned __int8 *)(v29 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    uint64_t v52 = swift_allocObject();
    id v53 = (void (*)(unint64_t, char *, uint64_t))v233;
    *(void *)(v52 + 16) = v234;
    v53(v52 + v51, v49, v50);
    swift_retain();
    sub_10003B754(&qword_10079B1E8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(void (*)(char *, char *, id), uint64_t))(v29 + 8))(v229, v50);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.list(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v55 = (char *)*v38;
    uint64_t v56 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v229 = (void (*)(char *, char *, id))*((void *)v233 + 4);
    v230 = v233 + 32;
    v229(v231, v56, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      BOOL v57 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v59 = v223;
      uint64_t v58 = v224;
      uint64_t v60 = &v224[v57[12]];
      uint64_t v61 = &v224[v57[16]];
      uint64_t v62 = &v224[v57[20]];
      uint64_t v63 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v64 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v64 - 8) + 104))(v58, v63, v64);
      uint64_t v65 = type metadata accessor for Date();
      *(void *)uint64_t v60 = 0;
      *((void *)v60 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v61, 1, 1, v65);
      *(void *)uint64_t v62 = 0;
      *((void *)v62 + 1) = 0;
      uint64_t v66 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v58, enum case for REMAnalyticsEvent.userOperation(_:), v59);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v59);
    }
    uint64_t v67 = a2[4];
    uint64_t v68 = a2[5];
    uint64_t v69 = swift_getObjectType();
    uint64_t v235 = v67;
    uint64_t v70 = *(void *)(v68 + 8);
    uint64_t v71 = a2;
    uint64_t v72 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
    swift_unknownObjectRetain();
    v72(v55, v69, v70);
    swift_unknownObjectRelease();
    id v73 = (void *)zalgoIfMain.getter();
    uint64_t v75 = (void (**)(char *, id))v233;
    id v74 = v234;
    unint64_t v76 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v77 = v228;
    v226 = v55;
    unint64_t v78 = v231;
    v76(v228, v231, v234);
    unint64_t v79 = (*((unsigned __int8 *)v75 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v75 + 80);
    unint64_t v80 = (v227 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v81 = swift_allocObject();
    *(void *)(v81 + 16) = v71;
    v229((char *)(v81 + v79), v77, v74);
    *(void *)(v81 + v80) = v232;
    swift_retain();
    sub_10003B754(&qword_10079B1E8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v75[1](v78, v74);
    return v54;
  }
  id v82 = a2;
  if (v40 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v83 = *v38;
    uint64_t v84 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    v231 = (char *)*((void *)v233 + 4);
    ((void (*)(char *, char *, id))v231)(v226, v84, v234);
    if ((v232 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      long long v85 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v87 = v223;
      uint64_t v86 = v224;
      unint64_t v88 = &v224[v85[12]];
      uint64_t v89 = &v224[v85[16]];
      uint64_t v90 = &v224[v85[20]];
      uint64_t v91 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v92 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v92 - 8) + 104))(v86, v91, v92);
      uint64_t v93 = type metadata accessor for Date();
      *(void *)unint64_t v88 = 0;
      *((void *)v88 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v89, 1, 1, v93);
      *(void *)uint64_t v90 = 0;
      *((void *)v90 + 1) = 0;
      uint64_t v94 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v86, enum case for REMAnalyticsEvent.userOperation(_:), v87);
      REMAnalyticsManager.post(event:)();
      swift_release();
      uint64_t v95 = v87;
      id v82 = a2;
      (*(void (**)(char *, uint64_t))(v94 + 8))(v86, v95);
    }
    uint64_t v96 = v82[4];
    uint64_t v97 = v82[5];
    uint64_t v98 = swift_getObjectType();
    uint64_t v235 = v96;
    uint64_t v99 = *(void *)(v97 + 8);
    uint64_t v100 = *(void (**)(id, uint64_t, uint64_t))(v99 + 48);
    swift_unknownObjectRetain();
    v100(v83, v98, v99);
    swift_unknownObjectRelease();
    uint64_t v101 = (void *)zalgoIfMain.getter();
    uint64_t v103 = (void (**)(char *, id))v233;
    id v102 = v234;
    uint64_t v104 = (void (*)(char *, char *, id))*((void *)v233 + 2);
    uint64_t v105 = v228;
    id v232 = v83;
    unint64_t v106 = v226;
    v104(v228, v226, v234);
    unint64_t v107 = (*((unsigned __int8 *)v103 + 80) + 24) & ~(unint64_t)*((unsigned __int8 *)v103 + 80);
    uint64_t v108 = swift_allocObject();
    *(void *)(v108 + 16) = v82;
    ((void (*)(unint64_t, char *, id))v231)(v108 + v107, v105, v102);
    swift_retain();
    sub_10003B754(&qword_10079B1E8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    v103[1](v106, v102);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newList(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v110 = v221;
    uint64_t v109 = v222;
    uint64_t v111 = v218;
    (*(void (**)(char *, id *, uint64_t))(v221 + 32))(v218, v38, v222);
    uint64_t v112 = sub_100038D28(a2 + 6, a2[9]);
    __chkstk_darwin(v112);
    *(&v197 - 2) = v113;
    *(&v197 - 1) = (uint64_t)v111;
    sub_10003B754(&qword_10079B1E8);
    uint64_t v54 = firstly<A>(closure:)();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v111, v109);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v233 = (char *)*v38;
    uint64_t v114 = v233;
    uint64_t v115 = (char *)v38 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v116 = v215;
    id v232 = *(id *)(v215 + 32);
    ((void (*)(char *, char *, uint64_t))v232)(v219, v115, v220);
    uint64_t v118 = a2[4];
    uint64_t v117 = a2[5];
    uint64_t v119 = swift_getObjectType();
    id v234 = a2;
    uint64_t v235 = v118;
    uint64_t v120 = *(void *)(v117 + 8);
    uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 64);
    swift_unknownObjectRetain();
    v121(v114, v119, v120);
    swift_unknownObjectRelease();
    uint64_t v122 = (void *)zalgoIfMain.getter();
    unint64_t v123 = v214;
    uint64_t v124 = v219;
    uint64_t v125 = v220;
    (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v214, v219, v220);
    unint64_t v126 = (*(unsigned __int8 *)(v116 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v116 + 80);
    uint64_t v127 = swift_allocObject();
    *(void *)(v127 + 16) = v234;
    ((void (*)(unint64_t, char *, uint64_t))v232)(v127 + v126, v123, v125);
    swift_retain();
    sub_10003B754(&qword_10079B1E8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v116 + 8))(v124, v125);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.section(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v128 = v234;
    uint64_t v129 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v129, v217);
    uint64_t v132 = a2[4];
    uint64_t v131 = a2[5];
    uint64_t v133 = swift_getObjectType();
    uint64_t v235 = v132;
    uint64_t v134 = *(void *)(v131 + 8);
    uint64_t v135 = *(void (**)(id, uint64_t, uint64_t))(v134 + 72);
    swift_unknownObjectRetain();
    v135(v128, v133, v134);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    uint64_t v137 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v140 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v141 = swift_allocObject();
    *(void *)(v141 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v141 + v140, v137, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1E8);
LABEL_19:
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v130 + 8))(v138, v139);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    id v234 = *v38;
    id v142 = v234;
    uint64_t v143 = (char *)v38 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v130 = v213;
    uint64_t v233 = *(char **)(v213 + 32);
    ((void (*)(char *, char *, uint64_t))v233)(v216, v143, v217);
    uint64_t v145 = a2[4];
    uint64_t v144 = a2[5];
    uint64_t v146 = swift_getObjectType();
    uint64_t v235 = v145;
    uint64_t v147 = *(void *)(v144 + 8);
    v148 = *(void (**)(id, uint64_t, uint64_t))(v147 + 80);
    swift_unknownObjectRetain();
    v148(v142, v146, v147);
    swift_unknownObjectRelease();
    unint64_t v136 = (void *)zalgoIfMain.getter();
    unint64_t v149 = v212;
    unint64_t v138 = v216;
    uint64_t v139 = v217;
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v212, v216, v217);
    unint64_t v150 = (*(unsigned __int8 *)(v130 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v130 + 80);
    uint64_t v151 = swift_allocObject();
    *(void *)(v151 + 16) = v82;
    ((void (*)(unint64_t, char *, uint64_t))v233)(v151 + v150, v149, v139);
    swift_retain();
    sub_10003B754(&qword_10079B1E8);
    goto LABEL_19;
  }
  if (v40 == enum case for REMNavigationSpecifier.root(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_100348598(0);
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    return v54;
  }
  char v153 = (char)v232;
  if (v40 == enum case for REMNavigationSpecifier.today(_:)
    || v40 == enum case for REMNavigationSpecifier.scheduled(_:)
    || v40 == enum case for REMNavigationSpecifier.allReminders(_:)
    || v40 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.search(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v154 = v207;
    uint64_t v155 = *(void (**)(char *, id *, uint64_t))(v207 + 32);
    uint64_t v156 = v209;
    uint64_t v157 = v208;
    v155(v209, v38, v208);
    uint64_t v158 = *sub_100038D28(v82 + 6, v82[9]);
    sub_10034812C(0);
    unint64_t v159 = v206;
    (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v206, v156, v157);
    unint64_t v160 = (*(unsigned __int8 *)(v154 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80);
    unint64_t v161 = (v205 + v160 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v162 = swift_allocObject();
    v155((char *)(v162 + v160), (id *)v159, v157);
    *(void *)(v162 + v161) = v158;
    swift_retain();
    uint64_t v163 = (void *)zalgo.getter();
    sub_10003B754(&qword_10079B1E8);
    uint64_t v54 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v154 + 8))(v209, v157);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.assigned(_:)
    || v40 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    goto LABEL_34;
  }
  if (v40 == enum case for REMNavigationSpecifier.tagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v164 = v203;
    uint64_t v165 = (uint64_t)v202;
    uint64_t v166 = v204;
    (*(void (**)(char *, id *, uint64_t))(v203 + 32))(v202, v38, v204);
    sub_100038D28(a2 + 6, a2[9]);
    uint64_t v54 = sub_10032B630(v165, (uint64_t)sub_100348598, (uint64_t)&unk_100746070, &qword_10079B1E8, (uint64_t)sub_100333F00);
    (*(void (**)(uint64_t, uint64_t))(v164 + 8))(v165, v166);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.completed(_:))
  {
LABEL_34:
    (*(void (**)(id *, uint64_t))(v35 + 8))(v38, v34);
    if ((v153 & 2) != 0)
    {
      type metadata accessor for REMAnalyticsManager();
      static REMAnalyticsManager.shared.getter();
      char v167 = (int *)sub_10003B754(&qword_100791F78);
      uint64_t v168 = v223;
      uint64_t v169 = v224;
      v170 = &v224[v167[12]];
      uint64_t v171 = &v224[v167[16]];
      v172 = &v224[v167[20]];
      uint64_t v173 = enum case for REMUserOperation.widgetShowList(_:);
      uint64_t v174 = type metadata accessor for REMUserOperation();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v174 - 8) + 104))(v169, v173, v174);
      uint64_t v175 = type metadata accessor for Date();
      *(void *)v170 = 0;
      *((void *)v170 + 1) = 0;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v175 - 8) + 56))(v171, 1, 1, v175);
      *(void *)v172 = 0;
      *((void *)v172 + 1) = 0;
      uint64_t v176 = v225;
      (*(void (**)(char *, void, uint64_t))(v225 + 104))(v169, enum case for REMAnalyticsEvent.userOperation(_:), v168);
      REMAnalyticsManager.post(event:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v176 + 8))(v169, v168);
    }
    sub_100038D28(a2 + 6, a2[9]);
    return sub_1003274C4(v210, v153 & 1, (uint64_t (*)(uint64_t, char *, uint64_t))sub_10032AAA0, &qword_10079B1F8);
  }
  if (v40 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
    (*(void (**)(id *, uint64_t))(v35 + 96))(v38, v34);
    uint64_t v177 = v200;
    uint64_t v178 = (uint64_t)v199;
    uint64_t v179 = v38;
    uint64_t v180 = v201;
    (*(void (**)(char *, id *, uint64_t))(v200 + 32))(v199, v179, v201);
    uint64_t v181 = (uint64_t **)sub_100038D28(a2 + 6, a2[9]);
    uint64_t v182 = a2[4];
    uint64_t v183 = a2[5];
    uint64_t v184 = swift_getObjectType();
    uint64_t v235 = v182;
    v185 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v183 + 8) + 8))(v184);
    v186 = *v181;
    swift_retain();
    sub_10032DB38(v178, v185, (uint64_t)a2, v186);

    swift_release();
    NSString v187 = self;
    NSString v188 = String._bridgeToObjectiveC()();
    id v189 = [v187 internalErrorWithDebugDescription:v188];

    sub_10003B754(&qword_10079B1F8);
    swift_allocObject();
    uint64_t v54 = Promise.init(error:)();
    (*(void (**)(uint64_t, uint64_t))(v177 + 8))(v178, v180);
    return v54;
  }
  if (v40 == enum case for REMNavigationSpecifier.newReminder(_:))
  {
    sub_100038D28(a2 + 6, a2[9]);
    sub_10003B754(&qword_10079B1E8);
    return firstly<A>(closure:)();
  }
  if (v40 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    uint64_t v190 = type metadata accessor for TaskPriority();
    uint64_t v191 = (uint64_t)v198;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v198, 1, 1, v190);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v192 = static MainActor.shared.getter();
    v193 = (void *)swift_allocObject();
    v193[2] = v192;
    v193[3] = &protocol witness table for MainActor;
    v193[4] = a2;
    sub_1000286A4(v191, (uint64_t)&unk_10079B1F0, (uint64_t)v193);
    swift_release();
    v194 = self;
    NSString v195 = String._bridgeToObjectiveC()();
    id v196 = [v194 internalErrorWithDebugDescription:v195];

    sub_10003B754(&qword_10079B1F8);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003163B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for MainActor();
  void v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100316450, v6, v5);
}

uint64_t sub_100316450()
{
  v0[2] = *(void *)(v0[3] + 96);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[7] = v1;
  uint64_t v2 = type metadata accessor for TTRIPrivacyChecker();
  void *v1 = v0;
  v1[1] = sub_1001B43D8;
  return TTRPrivacyChecker.checkAndPromptNotificationAndLocationAccessForRemindersInCalendar()(v2, &protocol witness table for TTRIPrivacyChecker);
}

void sub_100316504(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = (void *)(v2 + 48);
  sub_100038D28(v5, *(void *)(v3 + 72));
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = Strong;
    id v8 = [Strong traitCollection];

    id v9 = [v8 horizontalSizeClass];
    if (v9 == (id)1)
    {
      uint64_t v10 = (char *)swift_unknownObjectWeakLoadStrong();
      if (!v10) {
        return;
      }
      uint64_t v11 = v10;
      if ([v10 isCollapsed])
      {
        id v12 = [*(id *)&v11[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController] viewControllers];
        sub_1000368FC(0, (unint64_t *)&qword_100791C40);
        unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v14 = *(id *)&v11[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
        char v15 = sub_10002A944((uint64_t)v14, v13);

        swift_bridgeObjectRelease();
        if ((v15 & 1) == 0) {
          return;
        }
      }
      else
      {
      }
    }
  }
  sub_100038D28(v5, *(void *)(v3 + 72));
  sub_10034812C(1);
  uint64_t v16 = swift_allocObject();
  *(unsigned char *)(v16 + 16) = a2 & 1;
  *(void *)(v16 + 24) = v3;
  swift_retain();
  id v17 = (id)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
}

void sub_100316710(uint64_t a1, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0 || *(unsigned char *)(a3 + 161) == 1)
  {
    type metadata accessor for TTRIPrivacyChecker();
    TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded()();
    *(unsigned char *)(a3 + 161) = 0;
  }
}

id sub_100316774()
{
  return *(id *)(v0 + 128);
}

void sub_100316780(void *a1, void *a2)
{
  sub_100038D28((void *)(v2 + 48), *(void *)(v2 + 72));
  sub_10034C41C(a1, a2, 1);
}

void *sub_1003167CC(void *a1, char a2)
{
  uint64_t v5 = *sub_100038D28((void *)(v2 + 48), *(void *)(v2 + 72));

  return sub_10032E810(a1, a2, v2, v5);
}

void sub_100316824(uint64_t a1, uint64_t a2)
{
}

uint64_t sub_10031682C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  sub_10034812C(0);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v3);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v8 + v7, (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  *(void *)(v8 + ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8)) = v6;
  id v9 = (void *)zalgo.getter();
  uint64_t v10 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_1003169D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  v16[1] = a5;
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  sub_10034812C(0);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v7);
  unint64_t v11 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v12 + v11, (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  *(void *)(v12 + ((v9 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = v10;
  unint64_t v13 = (void *)zalgo.getter();
  sub_10003B754(a4);
  uint64_t v14 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v14;
}

uint64_t sub_100316B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (uint64_t *)((char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  int v7 = (*(uint64_t (**)(uint64_t *, uint64_t))(v4 + 88))(v6, v3);
  if (v7 == enum case for REMNavigationSpecifier.NewListPathSpecifier.list(_:))
  {
    int v8 = 0;
  }
  else if (v7 == enum case for REMNavigationSpecifier.NewListPathSpecifier.groceryList(_:))
  {
    int v8 = 1;
  }
  else
  {
    if (v7 != enum case for REMNavigationSpecifier.NewListPathSpecifier.customSmartList(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    int v8 = 2;
  }
  (*(void (**)(uint64_t *, uint64_t))(v4 + 96))(v6, v3);
  unint64_t v11 = v6;
  uint64_t v10 = *v6;
  uint64_t v9 = v11[1];
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_unknownObjectRetain();
    swift_release();
    swift_retain();
    uint64_t v12 = TTRAccountsListsViewModel.accounts.getter();
    swift_release();
    if (*(void *)(v12 + 16))
    {
      uint64_t v13 = *(void *)(v12 + 32);
      uint64_t v14 = *(void *)(v12 + 40);
      uint64_t v32 = v10;
      uint64_t v33 = v13;
      char v15 = *(void **)(v12 + 48);
      uint64_t v16 = *(unsigned __int8 *)(v12 + 56);
      int v35 = v8;
      int v17 = *(unsigned __int8 *)(v12 + 57);
      int v18 = *(unsigned __int8 *)(v12 + 58);
      int v19 = *(unsigned __int8 *)(v12 + 59);
      HIDWORD(v31) = *(unsigned __int8 *)(v12 + 60);
      int v34 = *(unsigned __int8 *)(v12 + 61);
      swift_bridgeObjectRetain();
      id v20 = v15;
      swift_bridgeObjectRelease();
      uint64_t v21 = 256;
      if (!v17) {
        uint64_t v21 = 0;
      }
      uint64_t v22 = v21 | v16;
      uint64_t v23 = 0x10000;
      if (!v18) {
        uint64_t v23 = 0;
      }
      uint64_t v24 = 0x1000000;
      if (!v19) {
        uint64_t v24 = 0;
      }
      uint64_t v25 = v22 | v23 | v24;
      uint64_t v26 = &_mh_execute_header;
      if (!HIDWORD(v31)) {
        uint64_t v26 = 0;
      }
      uint64_t v27 = 0x10000000000;
      if (!v34) {
        uint64_t v27 = 0;
      }
      sub_1003FB5FC(v33, v14, v20, v25 | (unint64_t)v26 | v27, v32, v9, v35);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v28 = self;
  NSString v29 = String._bridgeToObjectiveC()();
  [v28 internalErrorWithDebugDescription:v29];

  return swift_willThrow();
}

uint64_t sub_100316EA8()
{
  sub_10034812C(0);
  swift_allocObject();
  swift_weakInit();
  uint64_t v0 = (void *)zalgo.getter();
  uint64_t v1 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v1;
}

uint64_t sub_100316F50(uint64_t a1, uint64_t *a2)
{
  sub_10034812C(0);
  swift_allocObject();
  swift_weakInit();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(a2);
  uint64_t v4 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v4;
}

uint64_t sub_100316FFC()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = *(void **)(Strong + 32);
    swift_unknownObjectRetain();
    swift_release();
    sub_100038D28(v1 + 14, v1[17]);
    uint64_t v2 = v1[9];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v4 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 8))(ObjectType);
    sub_1002637AC((uint64_t)v4, (uint64_t)v1, (uint64_t)&off_10074A4F0);
    swift_unknownObjectRelease();
  }
  uint64_t v5 = self;
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 internalErrorWithDebugDescription:v6];

  return swift_willThrow();
}

uint64_t sub_10031711C(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v91 = a4;
  id v102 = a3;
  uint64_t v100 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v95 = &v90[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v99 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v98 = *(void *)(v99 - 8);
  uint64_t v7 = __chkstk_darwin(v99);
  uint64_t v93 = &v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = v8;
  __chkstk_darwin(v7);
  uint64_t v96 = &v90[-v9];
  uint64_t v97 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  uint64_t v101 = *(void **)(v97 - 8);
  uint64_t v10 = v101[8];
  uint64_t v11 = __chkstk_darwin(v97);
  uint64_t v12 = &v90[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v112 = (id *)&v90[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  int v18 = &v90[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  id v20 = (id *)&v90[-v19];
  uint64_t v22 = (void *)(v15 + 16);
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v94 = a1;
  v21(&v90[-v19], a1, v14);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    uint64_t v24 = v101;
    uint64_t v25 = (void (*)(id *, id *))v101[4];
    uint64_t v26 = v112;
    uint64_t v27 = v20;
    uint64_t v28 = v97;
    v25(v112, v27);
    uint64_t v100 = *(void *)(*(void *)(*(void *)(v100 + 32) + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(unsigned char *, id *, uint64_t))v24[2])(v12, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    int v34 = v102;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    int v35 = v12;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v25)(v33 + v32, v35, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FA10;
    *(void *)(v37 + 24) = v33;
    swift_unknownObjectRetain();
    swift_retain();
    id v38 = v34;
    int v39 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    int v40 = self;
    NSString v41 = String._bridgeToObjectiveC()();
    [v40 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v101[1])(v112, v36);
    return (uint64_t)v40;
  }
  uint64_t v42 = (unsigned char *)v100;
  uint64_t v43 = v102;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
  }
  else if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_10034812C(0);
    }
    if (v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  v21(v18, v94, v14);
  uint64_t v44 = (uint64_t)v95;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v45 = v98;
  uint64_t v46 = v99;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v44, 1, v99) == 1)
  {
    sub_10003B6F8(v44, &qword_10079B150);
    uint64_t v47 = self;
    NSString v48 = String._bridgeToObjectiveC()();
    id v49 = [v47 internalErrorWithDebugDescription:v48];

    sub_10003B754(&qword_10079C8C0);
    swift_allocObject();
    return Promise.init(error:)();
  }
  id v20 = (id *)(v45 + 32);
  uint64_t v22 = *(void **)(v45 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v96, v44, v46);
  uint64_t v12 = v42;
  uint64_t v15 = (uint64_t)(v42 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v42 + 96), (uint64_t)v106);
  if (v108)
  {
    sub_100016998((uint64_t)v106);
    goto LABEL_31;
  }
  sub_100038ED8(v106, (uint64_t)v109);
  uint64_t v51 = *(void *)(*sub_100038D28(v109, v110)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(ObjectType, v51);
  if (v53)
  {
    uint64_t v54 = v53;
    id v55 = [v53 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v55 = 0;
LABEL_22:
  id v56 = [v43 objectID];
  BOOL v57 = v56;
  if (v55)
  {
    if (v56)
    {
      sub_1000368FC(0, qword_10078E3D0);
      uint64_t v58 = v43;
      id v59 = v55;
      char v60 = static NSObject.== infix(_:_:)();

      uint64_t v43 = v58;
      if (v60) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    BOOL v57 = v55;
  }
  else if (!v56)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v109);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v106);
  if (v108 != 2)
  {
    sub_100016998((uint64_t)v106);
LABEL_45:
    memset(v106, 0, sizeof(v106));
    uint64_t v107 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v106, (uint64_t)v109);
  uint64_t v61 = *(void *)(*sub_100038D28(v109, v110) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v62 = swift_getObjectType();
  uint64_t v63 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v62, v61);
  if (v63)
  {
    uint64_t v64 = v63;
    id v65 = [v63 objectID];
  }
  else
  {
    id v65 = 0;
  }
  id v66 = [v43 objectID];
  uint64_t v67 = v66;
  if (!v65)
  {
    if (!v66) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v109);
    goto LABEL_45;
  }
  if (!v66)
  {
    uint64_t v67 = v65;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v68 = v65;
  char v69 = static NSObject.== infix(_:_:)();

  if ((v69 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v70 = v110;
  uint64_t v71 = v111;
  uint64_t v72 = sub_100038D28(v109, v110);
  uint64_t v104 = v70;
  uint64_t v105 = *(void *)(v71 + 8);
  id v73 = sub_1000394A8((uint64_t *)&v103);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v73, v72, v70);
  sub_100028C3C((uint64_t)&v103, (uint64_t)v106, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v109);
LABEL_46:
  sub_10003B694((uint64_t)v106, (uint64_t)&v103, (uint64_t *)&unk_1007AD740);
  uint64_t v112 = v20;
  uint64_t v101 = v22;
  if (v104)
  {
    sub_100038ED8(&v103, (uint64_t)v109);
    uint64_t v74 = v110;
    uint64_t v75 = v111;
    unint64_t v76 = sub_100038D28(v109, v110);
    sub_10034E630((uint64_t)v76, (uint64_t)v12, v74, v75);
    sub_1000145EC((uint64_t)v109, (uint64_t)&v103);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v109);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v103, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v12;
    *(void *)(v77 + 24) = v43;
    *(unsigned char *)(v77 + 32) = v91 & 1;
    id v78 = v43;
    swift_retain();
    unint64_t v79 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v80 = v98;
  uint64_t v81 = v93;
  id v82 = v96;
  uint64_t v83 = v99;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v98 + 16))(v93, v96, v99);
  unint64_t v84 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  unint64_t v85 = (v92 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v86 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v101)(v86 + v84, v81, v83);
  *(void *)(v86 + v85) = v43;
  id v87 = v43;
  unint64_t v88 = (void *)zalgo.getter();
  int v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v106, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v82, v83);
  return (uint64_t)v40;
}

uint64_t sub_100317D94(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v92 = a4;
  long long v103 = a3;
  uint64_t v101 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v96 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v94 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = v7;
  __chkstk_darwin(v8);
  uint64_t v97 = &v91[-v9];
  uint64_t v98 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  id v102 = *(void **)(v98 - 8);
  uint64_t v10 = v102[8];
  __chkstk_darwin(v98);
  uint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v113 = (id *)&v91[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)&v91[-v20];
  int v23 = (void *)(v15 + 16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v95 = a1;
  v22(&v91[-v20], a1, v14, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    uint64_t v25 = v102;
    uint64_t v26 = (void (*)(id *, id *))v102[4];
    uint64_t v27 = v113;
    uint64_t v28 = v21;
    uint64_t v29 = v98;
    v26(v113, v28);
    uint64_t v101 = *(void *)(*(void *)(*(void *)(v101 + 32) + 48) + 40);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = v27;
    uint64_t v32 = v29;
    ((void (*)(unsigned char *, id *, uint64_t))v25[2])(v11, v31, v29);
    unint64_t v33 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    uint64_t v34 = swift_allocObject();
    int v35 = v103;
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v26)(v34 + v33, v36, v32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10032FA10;
    *(void *)(v38 + 24) = v34;
    swift_unknownObjectRetain();
    swift_retain();
    id v39 = v35;
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v102[1])(v113, v37);
    return (uint64_t)v41;
  }
  uint64_t v43 = (unsigned char *)v101;
  uint64_t v44 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
  }
  else if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_1003484A8(0);
    }
    if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v17, v95, v14);
  uint64_t v45 = (uint64_t)v96;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v46 = v99;
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v45, 1, v100) == 1)
  {
    sub_10003B6F8(v45, &qword_10079B150);
    NSString v48 = self;
    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [v48 internalErrorWithDebugDescription:v49];

    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v21 = (id *)(v46 + 32);
  int v23 = *(void **)(v46 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v97, v45, v47);
  uint64_t v11 = v43;
  uint64_t v15 = (uint64_t)(v43 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v43 + 96), (uint64_t)v107);
  if (v109)
  {
    sub_100016998((uint64_t)v107);
    goto LABEL_31;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v52 = *(void *)(*sub_100038D28(v110, v111)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
  if (v54)
  {
    id v55 = v54;
    id v56 = [v54 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v56 = 0;
LABEL_22:
  id v57 = [v44 objectID];
  uint64_t v58 = v57;
  if (v56)
  {
    if (v57)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v59 = v44;
      id v60 = v56;
      char v61 = static NSObject.== infix(_:_:)();

      uint64_t v44 = v59;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    uint64_t v58 = v56;
  }
  else if (!v57)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v110);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v107);
  if (v109 != 2)
  {
    sub_100016998((uint64_t)v107);
LABEL_45:
    memset(v107, 0, sizeof(v107));
    uint64_t v108 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v62 = *(void *)(*sub_100038D28(v110, v111) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
  if (v64)
  {
    id v65 = v64;
    id v66 = [v64 objectID];
  }
  else
  {
    id v66 = 0;
  }
  id v67 = [v44 objectID];
  id v68 = v67;
  if (!v66)
  {
    if (!v67) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v110);
    goto LABEL_45;
  }
  if (!v67)
  {
    id v68 = v66;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v69 = v66;
  char v70 = static NSObject.== infix(_:_:)();

  if ((v70 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v71 = v111;
  uint64_t v72 = v112;
  id v73 = sub_100038D28(v110, v111);
  uint64_t v105 = v71;
  uint64_t v106 = *(void *)(v72 + 8);
  uint64_t v74 = sub_1000394A8((uint64_t *)&v104);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v73, v71);
  sub_100028C3C((uint64_t)&v104, (uint64_t)v107, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v110);
LABEL_46:
  sub_10003B694((uint64_t)v107, (uint64_t)&v104, (uint64_t *)&unk_1007AD740);
  uint64_t v113 = v21;
  id v102 = v23;
  if (v105)
  {
    sub_100038ED8(&v104, (uint64_t)v110);
    uint64_t v75 = v111;
    uint64_t v76 = v112;
    uint64_t v77 = sub_100038D28(v110, v111);
    sub_10034E630((uint64_t)v77, (uint64_t)v11, v75, v76);
    sub_1000145EC((uint64_t)v110, (uint64_t)&v104);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v110);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v104, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v11;
    *(void *)(v78 + 24) = v44;
    *(unsigned char *)(v78 + 32) = v92 & 1;
    id v79 = v44;
    swift_retain();
    uint64_t v80 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v81 = v99;
  id v82 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v100;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v94, v97, v100);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v93 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v102)(v87 + v85, v82, v84);
  *(void *)(v87 + v86) = v44;
  id v88 = v44;
  uint64_t v89 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  NSString v41 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v107, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v84);
  return (uint64_t)v41;
}

uint64_t sub_100318A14(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v91 = a4;
  id v102 = a3;
  uint64_t v100 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v95 = &v90[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v99 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v98 = *(void *)(v99 - 8);
  uint64_t v7 = __chkstk_darwin(v99);
  uint64_t v93 = &v90[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v92 = v8;
  __chkstk_darwin(v7);
  uint64_t v96 = &v90[-v9];
  uint64_t v97 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  uint64_t v101 = *(void **)(v97 - 8);
  uint64_t v10 = v101[8];
  uint64_t v11 = __chkstk_darwin(v97);
  uint64_t v12 = &v90[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v112 = (id *)&v90[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = &v90[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v16);
  uint64_t v20 = (id *)&v90[-v19];
  uint64_t v22 = (void *)(v15 + 16);
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v94 = a1;
  v21(&v90[-v19], a1, v14);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    int v24 = v101;
    uint64_t v25 = (void (*)(id *, id *))v101[4];
    uint64_t v26 = v112;
    uint64_t v27 = v20;
    uint64_t v28 = v97;
    v25(v112, v27);
    uint64_t v100 = *(void *)(*(void *)(*(void *)(v100 + 32) + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(unsigned char *, id *, uint64_t))v24[2])(v12, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v102;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    int v35 = v12;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v25)(v33 + v32, v35, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FA10;
    *(void *)(v37 + 24) = v33;
    swift_unknownObjectRetain();
    swift_retain();
    id v38 = v34;
    id v39 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    int v40 = self;
    NSString v41 = String._bridgeToObjectiveC()();
    [v40 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v101[1])(v112, v36);
    return (uint64_t)v40;
  }
  NSString v42 = (unsigned char *)v100;
  uint64_t v43 = v102;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
  }
  else if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_10003FC84(0);
    }
    if (v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v23 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  v21(v18, v94, v14);
  uint64_t v44 = (uint64_t)v95;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v45 = v98;
  uint64_t v46 = v99;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v44, 1, v99) == 1)
  {
    sub_10003B6F8(v44, &qword_10079B150);
    uint64_t v47 = self;
    NSString v48 = String._bridgeToObjectiveC()();
    id v49 = [v47 internalErrorWithDebugDescription:v48];

    sub_10003B754(&qword_10079B188);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v20 = (id *)(v45 + 32);
  uint64_t v22 = *(void **)(v45 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v96, v44, v46);
  uint64_t v12 = v42;
  uint64_t v15 = (uint64_t)(v42 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v42 + 96), (uint64_t)v106);
  if (v108)
  {
    sub_100016998((uint64_t)v106);
    goto LABEL_31;
  }
  sub_100038ED8(v106, (uint64_t)v109);
  uint64_t v51 = *(void *)(*sub_100038D28(v109, v110)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(ObjectType, v51);
  if (v53)
  {
    uint64_t v54 = v53;
    id v55 = [v53 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v55 = 0;
LABEL_22:
  id v56 = [v43 objectID];
  id v57 = v56;
  if (v55)
  {
    if (v56)
    {
      sub_1000368FC(0, qword_10078E3D0);
      uint64_t v58 = v43;
      id v59 = v55;
      char v60 = static NSObject.== infix(_:_:)();

      uint64_t v43 = v58;
      if (v60) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    id v57 = v55;
  }
  else if (!v56)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v109);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v106);
  if (v108 != 2)
  {
    sub_100016998((uint64_t)v106);
LABEL_45:
    memset(v106, 0, sizeof(v106));
    uint64_t v107 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v106, (uint64_t)v109);
  uint64_t v61 = *(void *)(*sub_100038D28(v109, v110) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v62 = swift_getObjectType();
  uint64_t v63 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v61 + 16))(v62, v61);
  if (v63)
  {
    uint64_t v64 = v63;
    id v65 = [v63 objectID];
  }
  else
  {
    id v65 = 0;
  }
  id v66 = [v43 objectID];
  id v67 = v66;
  if (!v65)
  {
    if (!v66) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v109);
    goto LABEL_45;
  }
  if (!v66)
  {
    id v67 = v65;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v68 = v65;
  char v69 = static NSObject.== infix(_:_:)();

  if ((v69 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v70 = v110;
  uint64_t v71 = v111;
  uint64_t v72 = sub_100038D28(v109, v110);
  uint64_t v104 = v70;
  uint64_t v105 = *(void *)(v71 + 8);
  id v73 = sub_1000394A8((uint64_t *)&v103);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v70 - 8) + 16))(v73, v72, v70);
  sub_100028C3C((uint64_t)&v103, (uint64_t)v106, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v109);
LABEL_46:
  sub_10003B694((uint64_t)v106, (uint64_t)&v103, (uint64_t *)&unk_1007AD740);
  uint64_t v112 = v20;
  uint64_t v101 = v22;
  if (v104)
  {
    sub_100038ED8(&v103, (uint64_t)v109);
    uint64_t v74 = v110;
    uint64_t v75 = v111;
    uint64_t v76 = sub_100038D28(v109, v110);
    sub_10034E630((uint64_t)v76, (uint64_t)v12, v74, v75);
    sub_1000145EC((uint64_t)v109, (uint64_t)&v103);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v109);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v103, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v12;
    *(void *)(v77 + 24) = v43;
    *(unsigned char *)(v77 + 32) = v91 & 1;
    id v78 = v43;
    swift_retain();
    id v79 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v80 = v98;
  uint64_t v81 = v93;
  id v82 = v96;
  uint64_t v83 = v99;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v98 + 16))(v93, v96, v99);
  unint64_t v84 = (*(unsigned __int8 *)(v80 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v80 + 80);
  unint64_t v85 = (v92 + v84 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v86 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v101)(v86 + v84, v81, v83);
  *(void *)(v86 + v85) = v43;
  id v87 = v43;
  id v88 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F40);
  int v40 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v106, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v80 + 8))(v82, v83);
  return (uint64_t)v40;
}

uint64_t sub_100319694(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v92 = a4;
  long long v103 = a3;
  uint64_t v101 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v96 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v94 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = v7;
  __chkstk_darwin(v8);
  uint64_t v97 = &v91[-v9];
  uint64_t v98 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  id v102 = *(void **)(v98 - 8);
  uint64_t v10 = v102[8];
  __chkstk_darwin(v98);
  uint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v113 = (id *)&v91[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)&v91[-v20];
  int v23 = (void *)(v15 + 16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v95 = a1;
  v22(&v91[-v20], a1, v14, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    uint64_t v25 = v102;
    uint64_t v26 = (void (*)(id *, id *))v102[4];
    uint64_t v27 = v113;
    uint64_t v28 = v21;
    uint64_t v29 = v98;
    v26(v113, v28);
    uint64_t v101 = *(void *)(*(void *)(*(void *)(v101 + 32) + 48) + 40);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = v27;
    uint64_t v32 = v29;
    ((void (*)(unsigned char *, id *, uint64_t))v25[2])(v11, v31, v29);
    unint64_t v33 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    uint64_t v34 = swift_allocObject();
    int v35 = v103;
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v26)(v34 + v33, v36, v32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10032FA10;
    *(void *)(v38 + 24) = v34;
    swift_unknownObjectRetain();
    swift_retain();
    id v39 = v35;
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v102[1])(v113, v37);
    return (uint64_t)v41;
  }
  uint64_t v43 = (unsigned char *)v101;
  uint64_t v44 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
  }
  else if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_1003484D8(0);
    }
    if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v17, v95, v14);
  uint64_t v45 = (uint64_t)v96;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v46 = v99;
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v45, 1, v100) == 1)
  {
    sub_10003B6F8(v45, &qword_10079B150);
    NSString v48 = self;
    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [v48 internalErrorWithDebugDescription:v49];

    sub_10003B754(&qword_10079B160);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v21 = (id *)(v46 + 32);
  int v23 = *(void **)(v46 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v97, v45, v47);
  uint64_t v11 = v43;
  uint64_t v15 = (uint64_t)(v43 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v43 + 96), (uint64_t)v107);
  if (v109)
  {
    sub_100016998((uint64_t)v107);
    goto LABEL_31;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v52 = *(void *)(*sub_100038D28(v110, v111)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
  if (v54)
  {
    id v55 = v54;
    id v56 = [v54 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v56 = 0;
LABEL_22:
  id v57 = [v44 objectID];
  uint64_t v58 = v57;
  if (v56)
  {
    if (v57)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v59 = v44;
      id v60 = v56;
      char v61 = static NSObject.== infix(_:_:)();

      uint64_t v44 = v59;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    uint64_t v58 = v56;
  }
  else if (!v57)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v110);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v107);
  if (v109 != 2)
  {
    sub_100016998((uint64_t)v107);
LABEL_45:
    memset(v107, 0, sizeof(v107));
    uint64_t v108 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v62 = *(void *)(*sub_100038D28(v110, v111) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
  if (v64)
  {
    id v65 = v64;
    id v66 = [v64 objectID];
  }
  else
  {
    id v66 = 0;
  }
  id v67 = [v44 objectID];
  id v68 = v67;
  if (!v66)
  {
    if (!v67) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v110);
    goto LABEL_45;
  }
  if (!v67)
  {
    id v68 = v66;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v69 = v66;
  char v70 = static NSObject.== infix(_:_:)();

  if ((v70 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v71 = v111;
  uint64_t v72 = v112;
  id v73 = sub_100038D28(v110, v111);
  uint64_t v105 = v71;
  uint64_t v106 = *(void *)(v72 + 8);
  uint64_t v74 = sub_1000394A8((uint64_t *)&v104);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v73, v71);
  sub_100028C3C((uint64_t)&v104, (uint64_t)v107, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v110);
LABEL_46:
  sub_10003B694((uint64_t)v107, (uint64_t)&v104, (uint64_t *)&unk_1007AD740);
  uint64_t v113 = v21;
  id v102 = v23;
  if (v105)
  {
    sub_100038ED8(&v104, (uint64_t)v110);
    uint64_t v75 = v111;
    uint64_t v76 = v112;
    uint64_t v77 = sub_100038D28(v110, v111);
    sub_10034E630((uint64_t)v77, (uint64_t)v11, v75, v76);
    sub_1000145EC((uint64_t)v110, (uint64_t)&v104);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v110);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v104, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v11;
    *(void *)(v78 + 24) = v44;
    *(unsigned char *)(v78 + 32) = v92 & 1;
    id v79 = v44;
    swift_retain();
    uint64_t v80 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v81 = v99;
  id v82 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v100;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v94, v97, v100);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v93 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v102)(v87 + v85, v82, v84);
  *(void *)(v87 + v86) = v44;
  id v88 = v44;
  uint64_t v89 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  NSString v41 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v107, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v84);
  return (uint64_t)v41;
}

uint64_t sub_10031A314(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v92 = a4;
  long long v103 = a3;
  uint64_t v101 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v96 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v94 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = v7;
  __chkstk_darwin(v8);
  uint64_t v97 = &v91[-v9];
  uint64_t v98 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  id v102 = *(void **)(v98 - 8);
  uint64_t v10 = v102[8];
  __chkstk_darwin(v98);
  uint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v113 = (id *)&v91[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)&v91[-v20];
  int v23 = (void *)(v15 + 16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v95 = a1;
  v22(&v91[-v20], a1, v14, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    uint64_t v25 = v102;
    uint64_t v26 = (void (*)(id *, id *))v102[4];
    uint64_t v27 = v113;
    uint64_t v28 = v21;
    uint64_t v29 = v98;
    v26(v113, v28);
    uint64_t v101 = *(void *)(*(void *)(*(void *)(v101 + 32) + 48) + 40);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = v27;
    uint64_t v32 = v29;
    ((void (*)(unsigned char *, id *, uint64_t))v25[2])(v11, v31, v29);
    unint64_t v33 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    uint64_t v34 = swift_allocObject();
    int v35 = v103;
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v26)(v34 + v33, v36, v32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10032FA10;
    *(void *)(v38 + 24) = v34;
    swift_unknownObjectRetain();
    swift_retain();
    id v39 = v35;
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v102[1])(v113, v37);
    return (uint64_t)v41;
  }
  uint64_t v43 = (unsigned char *)v101;
  uint64_t v44 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
  }
  else if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_100348508(0);
    }
    if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v17, v95, v14);
  uint64_t v45 = (uint64_t)v96;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v46 = v99;
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v45, 1, v100) == 1)
  {
    sub_10003B6F8(v45, &qword_10079B150);
    NSString v48 = self;
    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [v48 internalErrorWithDebugDescription:v49];

    sub_10003B754(&qword_10079B1B0);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v21 = (id *)(v46 + 32);
  int v23 = *(void **)(v46 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v97, v45, v47);
  uint64_t v11 = v43;
  uint64_t v15 = (uint64_t)(v43 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v43 + 96), (uint64_t)v107);
  if (v109)
  {
    sub_100016998((uint64_t)v107);
    goto LABEL_31;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v52 = *(void *)(*sub_100038D28(v110, v111)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
  if (v54)
  {
    id v55 = v54;
    id v56 = [v54 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v56 = 0;
LABEL_22:
  id v57 = [v44 objectID];
  uint64_t v58 = v57;
  if (v56)
  {
    if (v57)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v59 = v44;
      id v60 = v56;
      char v61 = static NSObject.== infix(_:_:)();

      uint64_t v44 = v59;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    uint64_t v58 = v56;
  }
  else if (!v57)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v110);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v107);
  if (v109 != 2)
  {
    sub_100016998((uint64_t)v107);
LABEL_45:
    memset(v107, 0, sizeof(v107));
    uint64_t v108 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v62 = *(void *)(*sub_100038D28(v110, v111) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
  if (v64)
  {
    id v65 = v64;
    id v66 = [v64 objectID];
  }
  else
  {
    id v66 = 0;
  }
  id v67 = [v44 objectID];
  id v68 = v67;
  if (!v66)
  {
    if (!v67) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v110);
    goto LABEL_45;
  }
  if (!v67)
  {
    id v68 = v66;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v69 = v66;
  char v70 = static NSObject.== infix(_:_:)();

  if ((v70 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v71 = v111;
  uint64_t v72 = v112;
  id v73 = sub_100038D28(v110, v111);
  uint64_t v105 = v71;
  uint64_t v106 = *(void *)(v72 + 8);
  uint64_t v74 = sub_1000394A8((uint64_t *)&v104);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v73, v71);
  sub_100028C3C((uint64_t)&v104, (uint64_t)v107, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v110);
LABEL_46:
  sub_10003B694((uint64_t)v107, (uint64_t)&v104, (uint64_t *)&unk_1007AD740);
  uint64_t v113 = v21;
  id v102 = v23;
  if (v105)
  {
    sub_100038ED8(&v104, (uint64_t)v110);
    uint64_t v75 = v111;
    uint64_t v76 = v112;
    uint64_t v77 = sub_100038D28(v110, v111);
    sub_10034E630((uint64_t)v77, (uint64_t)v11, v75, v76);
    sub_1000145EC((uint64_t)v110, (uint64_t)&v104);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v110);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v104, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v11;
    *(void *)(v78 + 24) = v44;
    *(unsigned char *)(v78 + 32) = v92 & 1;
    id v79 = v44;
    swift_retain();
    uint64_t v80 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v81 = v99;
  id v82 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v100;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v94, v97, v100);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v93 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v102)(v87 + v85, v82, v84);
  *(void *)(v87 + v86) = v44;
  id v88 = v44;
  uint64_t v89 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1A0);
  NSString v41 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v107, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v84);
  return (uint64_t)v41;
}

uint64_t sub_10031AF94(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v92 = a4;
  long long v103 = a3;
  uint64_t v101 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v96 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v94 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = v7;
  __chkstk_darwin(v8);
  uint64_t v97 = &v91[-v9];
  uint64_t v98 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  id v102 = *(void **)(v98 - 8);
  uint64_t v10 = v102[8];
  __chkstk_darwin(v98);
  uint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v113 = (id *)&v91[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)&v91[-v20];
  int v23 = (void *)(v15 + 16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v95 = a1;
  v22(&v91[-v20], a1, v14, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    uint64_t v25 = v102;
    uint64_t v26 = (void (*)(id *, id *))v102[4];
    uint64_t v27 = v113;
    uint64_t v28 = v21;
    uint64_t v29 = v98;
    v26(v113, v28);
    uint64_t v101 = *(void *)(*(void *)(*(void *)(v101 + 32) + 48) + 40);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = v27;
    uint64_t v32 = v29;
    ((void (*)(unsigned char *, id *, uint64_t))v25[2])(v11, v31, v29);
    unint64_t v33 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    uint64_t v34 = swift_allocObject();
    int v35 = v103;
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v26)(v34 + v33, v36, v32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10032FA10;
    *(void *)(v38 + 24) = v34;
    swift_unknownObjectRetain();
    swift_retain();
    id v39 = v35;
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v102[1])(v113, v37);
    return (uint64_t)v41;
  }
  uint64_t v43 = (unsigned char *)v101;
  uint64_t v44 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
  }
  else if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_100348538(0);
    }
    if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v17, v95, v14);
  uint64_t v45 = (uint64_t)v96;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v46 = v99;
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v45, 1, v100) == 1)
  {
    sub_10003B6F8(v45, &qword_10079B150);
    NSString v48 = self;
    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [v48 internalErrorWithDebugDescription:v49];

    sub_10003B754(&qword_10079B1C8);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v21 = (id *)(v46 + 32);
  int v23 = *(void **)(v46 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v97, v45, v47);
  uint64_t v11 = v43;
  uint64_t v15 = (uint64_t)(v43 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v43 + 96), (uint64_t)v107);
  if (v109)
  {
    sub_100016998((uint64_t)v107);
    goto LABEL_31;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v52 = *(void *)(*sub_100038D28(v110, v111)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
  if (v54)
  {
    id v55 = v54;
    id v56 = [v54 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v56 = 0;
LABEL_22:
  id v57 = [v44 objectID];
  uint64_t v58 = v57;
  if (v56)
  {
    if (v57)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v59 = v44;
      id v60 = v56;
      char v61 = static NSObject.== infix(_:_:)();

      uint64_t v44 = v59;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    uint64_t v58 = v56;
  }
  else if (!v57)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v110);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v107);
  if (v109 != 2)
  {
    sub_100016998((uint64_t)v107);
LABEL_45:
    memset(v107, 0, sizeof(v107));
    uint64_t v108 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v62 = *(void *)(*sub_100038D28(v110, v111) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
  if (v64)
  {
    id v65 = v64;
    id v66 = [v64 objectID];
  }
  else
  {
    id v66 = 0;
  }
  id v67 = [v44 objectID];
  id v68 = v67;
  if (!v66)
  {
    if (!v67) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v110);
    goto LABEL_45;
  }
  if (!v67)
  {
    id v68 = v66;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v69 = v66;
  char v70 = static NSObject.== infix(_:_:)();

  if ((v70 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v71 = v111;
  uint64_t v72 = v112;
  id v73 = sub_100038D28(v110, v111);
  uint64_t v105 = v71;
  uint64_t v106 = *(void *)(v72 + 8);
  uint64_t v74 = sub_1000394A8((uint64_t *)&v104);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v73, v71);
  sub_100028C3C((uint64_t)&v104, (uint64_t)v107, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v110);
LABEL_46:
  sub_10003B694((uint64_t)v107, (uint64_t)&v104, (uint64_t *)&unk_1007AD740);
  uint64_t v113 = v21;
  id v102 = v23;
  if (v105)
  {
    sub_100038ED8(&v104, (uint64_t)v110);
    uint64_t v75 = v111;
    uint64_t v76 = v112;
    uint64_t v77 = sub_100038D28(v110, v111);
    sub_10034E630((uint64_t)v77, (uint64_t)v11, v75, v76);
    sub_1000145EC((uint64_t)v110, (uint64_t)&v104);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v110);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v104, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v11;
    *(void *)(v78 + 24) = v44;
    *(unsigned char *)(v78 + 32) = v92 & 1;
    id v79 = v44;
    swift_retain();
    uint64_t v80 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v81 = v99;
  id v82 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v100;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v94, v97, v100);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v93 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v102)(v87 + v85, v82, v84);
  *(void *)(v87 + v86) = v44;
  id v88 = v44;
  uint64_t v89 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1B8);
  NSString v41 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v107, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v84);
  return (uint64_t)v41;
}

uint64_t sub_10031BC14(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v92 = a4;
  long long v103 = a3;
  uint64_t v101 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v96 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v94 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = v7;
  __chkstk_darwin(v8);
  uint64_t v97 = &v91[-v9];
  uint64_t v98 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  id v102 = *(void **)(v98 - 8);
  uint64_t v10 = v102[8];
  __chkstk_darwin(v98);
  uint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v113 = (id *)&v91[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)&v91[-v20];
  int v23 = (void *)(v15 + 16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v95 = a1;
  v22(&v91[-v20], a1, v14, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    uint64_t v25 = v102;
    uint64_t v26 = (void (*)(id *, id *))v102[4];
    uint64_t v27 = v113;
    uint64_t v28 = v21;
    uint64_t v29 = v98;
    v26(v113, v28);
    uint64_t v101 = *(void *)(*(void *)(*(void *)(v101 + 32) + 48) + 40);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = v27;
    uint64_t v32 = v29;
    ((void (*)(unsigned char *, id *, uint64_t))v25[2])(v11, v31, v29);
    unint64_t v33 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    uint64_t v34 = swift_allocObject();
    int v35 = v103;
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v26)(v34 + v33, v36, v32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10032FA10;
    *(void *)(v38 + 24) = v34;
    swift_unknownObjectRetain();
    swift_retain();
    id v39 = v35;
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v102[1])(v113, v37);
    return (uint64_t)v41;
  }
  uint64_t v43 = (unsigned char *)v101;
  uint64_t v44 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
  }
  else if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_100348568(0);
    }
    if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v17, v95, v14);
  uint64_t v45 = (uint64_t)v96;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v46 = v99;
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v45, 1, v100) == 1)
  {
    sub_10003B6F8(v45, &qword_10079B150);
    NSString v48 = self;
    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [v48 internalErrorWithDebugDescription:v49];

    sub_10003B754(&qword_10079B1E0);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v21 = (id *)(v46 + 32);
  int v23 = *(void **)(v46 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v97, v45, v47);
  uint64_t v11 = v43;
  uint64_t v15 = (uint64_t)(v43 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v43 + 96), (uint64_t)v107);
  if (v109)
  {
    sub_100016998((uint64_t)v107);
    goto LABEL_31;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v52 = *(void *)(*sub_100038D28(v110, v111)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
  if (v54)
  {
    id v55 = v54;
    id v56 = [v54 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v56 = 0;
LABEL_22:
  id v57 = [v44 objectID];
  uint64_t v58 = v57;
  if (v56)
  {
    if (v57)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v59 = v44;
      id v60 = v56;
      char v61 = static NSObject.== infix(_:_:)();

      uint64_t v44 = v59;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    uint64_t v58 = v56;
  }
  else if (!v57)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v110);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v107);
  if (v109 != 2)
  {
    sub_100016998((uint64_t)v107);
LABEL_45:
    memset(v107, 0, sizeof(v107));
    uint64_t v108 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v62 = *(void *)(*sub_100038D28(v110, v111) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
  if (v64)
  {
    id v65 = v64;
    id v66 = [v64 objectID];
  }
  else
  {
    id v66 = 0;
  }
  id v67 = [v44 objectID];
  id v68 = v67;
  if (!v66)
  {
    if (!v67) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v110);
    goto LABEL_45;
  }
  if (!v67)
  {
    id v68 = v66;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v69 = v66;
  char v70 = static NSObject.== infix(_:_:)();

  if ((v70 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v71 = v111;
  uint64_t v72 = v112;
  id v73 = sub_100038D28(v110, v111);
  uint64_t v105 = v71;
  uint64_t v106 = *(void *)(v72 + 8);
  uint64_t v74 = sub_1000394A8((uint64_t *)&v104);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v73, v71);
  sub_100028C3C((uint64_t)&v104, (uint64_t)v107, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v110);
LABEL_46:
  sub_10003B694((uint64_t)v107, (uint64_t)&v104, (uint64_t *)&unk_1007AD740);
  uint64_t v113 = v21;
  id v102 = v23;
  if (v105)
  {
    sub_100038ED8(&v104, (uint64_t)v110);
    uint64_t v75 = v111;
    uint64_t v76 = v112;
    uint64_t v77 = sub_100038D28(v110, v111);
    sub_10034E630((uint64_t)v77, (uint64_t)v11, v75, v76);
    sub_1000145EC((uint64_t)v110, (uint64_t)&v104);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v110);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v104, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v11;
    *(void *)(v78 + 24) = v44;
    *(unsigned char *)(v78 + 32) = v92 & 1;
    id v79 = v44;
    swift_retain();
    uint64_t v80 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v81 = v99;
  id v82 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v100;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v94, v97, v100);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v93 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v102)(v87 + v85, v82, v84);
  *(void *)(v87 + v86) = v44;
  id v88 = v44;
  uint64_t v89 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1D0);
  NSString v41 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v107, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v84);
  return (uint64_t)v41;
}

uint64_t sub_10031C894(uint64_t a1, uint64_t a2, void *a3, int a4)
{
  int v92 = a4;
  long long v103 = a3;
  uint64_t v101 = a2;
  uint64_t v5 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v5 - 8);
  uint64_t v96 = &v91[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v100 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v99 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v94 = &v91[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v93 = v7;
  __chkstk_darwin(v8);
  uint64_t v97 = &v91[-v9];
  uint64_t v98 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  id v102 = *(void **)(v98 - 8);
  uint64_t v10 = v102[8];
  __chkstk_darwin(v98);
  uint64_t v11 = &v91[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  uint64_t v113 = (id *)&v91[-v13];
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = &v91[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)&v91[-v20];
  int v23 = (void *)(v15 + 16);
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v95 = a1;
  v22(&v91[-v20], a1, v14, v19);
  int v24 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    uint64_t v25 = v102;
    uint64_t v26 = (void (*)(id *, id *))v102[4];
    uint64_t v27 = v113;
    uint64_t v28 = v21;
    uint64_t v29 = v98;
    v26(v113, v28);
    uint64_t v101 = *(void *)(*(void *)(*(void *)(v101 + 32) + 48) + 40);
    uint64_t v30 = swift_allocObject();
    swift_weakInit();
    uint64_t v31 = v27;
    uint64_t v32 = v29;
    ((void (*)(unsigned char *, id *, uint64_t))v25[2])(v11, v31, v29);
    unint64_t v33 = (*((unsigned __int8 *)v25 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v25 + 80);
    uint64_t v34 = swift_allocObject();
    int v35 = v103;
    *(void *)(v34 + 16) = v30;
    *(void *)(v34 + 24) = v35;
    uint64_t v36 = v11;
    uint64_t v37 = v32;
    ((void (*)(unint64_t, unsigned char *, uint64_t))v26)(v34 + v33, v36, v32);
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_10032FA10;
    *(void *)(v38 + 24) = v34;
    swift_unknownObjectRetain();
    swift_retain();
    id v39 = v35;
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(id *, uint64_t))v102[1])(v113, v37);
    return (uint64_t)v41;
  }
  uint64_t v43 = (unsigned char *)v101;
  uint64_t v44 = v103;
  if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
  }
  else if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    if (v24 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
      return sub_100348598(0);
    }
    if (v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:)
      && v24 != enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
    {
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      goto LABEL_21;
    }
  }
  ((void (*)(unsigned char *, uint64_t, uint64_t))v22)(v17, v95, v14);
  uint64_t v45 = (uint64_t)v96;
  REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
  uint64_t v46 = v99;
  uint64_t v47 = v100;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v99 + 48))(v45, 1, v100) == 1)
  {
    sub_10003B6F8(v45, &qword_10079B150);
    NSString v48 = self;
    NSString v49 = String._bridgeToObjectiveC()();
    id v50 = [v48 internalErrorWithDebugDescription:v49];

    sub_10003B754(&qword_10079B1F8);
    swift_allocObject();
    return Promise.init(error:)();
  }
  uint64_t v21 = (id *)(v46 + 32);
  int v23 = *(void **)(v46 + 32);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v23)(v97, v45, v47);
  uint64_t v11 = v43;
  uint64_t v15 = (uint64_t)(v43 + 96);
  swift_beginAccess();
  sub_100016AFC((uint64_t)(v43 + 96), (uint64_t)v107);
  if (v109)
  {
    sub_100016998((uint64_t)v107);
    goto LABEL_31;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v52 = *(void *)(*sub_100038D28(v110, v111)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
  if (v54)
  {
    id v55 = v54;
    id v56 = [v54 objectID];

    goto LABEL_22;
  }
LABEL_21:
  id v56 = 0;
LABEL_22:
  id v57 = [v44 objectID];
  uint64_t v58 = v57;
  if (v56)
  {
    if (v57)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v59 = v44;
      id v60 = v56;
      char v61 = static NSObject.== infix(_:_:)();

      uint64_t v44 = v59;
      if (v61) {
        goto LABEL_41;
      }
      goto LABEL_30;
    }
    uint64_t v58 = v56;
  }
  else if (!v57)
  {
    goto LABEL_41;
  }

LABEL_30:
  sub_100038CD8((uint64_t)v110);
LABEL_31:
  sub_100016AFC(v15, (uint64_t)v107);
  if (v109 != 2)
  {
    sub_100016998((uint64_t)v107);
LABEL_45:
    memset(v107, 0, sizeof(v107));
    uint64_t v108 = 0;
    goto LABEL_46;
  }
  sub_100038ED8(v107, (uint64_t)v110);
  uint64_t v62 = *(void *)(*sub_100038D28(v110, v111) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v63 = swift_getObjectType();
  uint64_t v64 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v62 + 16))(v63, v62);
  if (v64)
  {
    id v65 = v64;
    id v66 = [v64 objectID];
  }
  else
  {
    id v66 = 0;
  }
  id v67 = [v44 objectID];
  id v68 = v67;
  if (!v66)
  {
    if (!v67) {
      goto LABEL_41;
    }
LABEL_43:

LABEL_44:
    sub_100038CD8((uint64_t)v110);
    goto LABEL_45;
  }
  if (!v67)
  {
    id v68 = v66;
    goto LABEL_43;
  }
  sub_1000368FC(0, qword_10078E3D0);
  id v69 = v66;
  char v70 = static NSObject.== infix(_:_:)();

  if ((v70 & 1) == 0) {
    goto LABEL_44;
  }
LABEL_41:
  uint64_t v71 = v111;
  uint64_t v72 = v112;
  id v73 = sub_100038D28(v110, v111);
  uint64_t v105 = v71;
  uint64_t v106 = *(void *)(v72 + 8);
  uint64_t v74 = sub_1000394A8((uint64_t *)&v104);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v71 - 8) + 16))(v74, v73, v71);
  sub_100028C3C((uint64_t)&v104, (uint64_t)v107, (uint64_t *)&unk_1007AD740);
  sub_100038CD8((uint64_t)v110);
LABEL_46:
  sub_10003B694((uint64_t)v107, (uint64_t)&v104, (uint64_t *)&unk_1007AD740);
  uint64_t v113 = v21;
  id v102 = v23;
  if (v105)
  {
    sub_100038ED8(&v104, (uint64_t)v110);
    uint64_t v75 = v111;
    uint64_t v76 = v112;
    uint64_t v77 = sub_100038D28(v110, v111);
    sub_10034E630((uint64_t)v77, (uint64_t)v11, v75, v76);
    sub_1000145EC((uint64_t)v110, (uint64_t)&v104);
    sub_10003B754(&qword_10079B158);
    swift_allocObject();
    Promise.init(value:)();
    sub_100038CD8((uint64_t)v110);
  }
  else
  {
    sub_10003B6F8((uint64_t)&v104, (uint64_t *)&unk_1007AD740);
    sub_10034812C(0);
    uint64_t v78 = swift_allocObject();
    *(void *)(v78 + 16) = v11;
    *(void *)(v78 + 24) = v44;
    *(unsigned char *)(v78 + 32) = v92 & 1;
    id v79 = v44;
    swift_retain();
    uint64_t v80 = (void *)zalgo.getter();
    sub_10003B754(&qword_100791C48);
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();
  }
  uint64_t v81 = v99;
  id v82 = v94;
  uint64_t v83 = v97;
  uint64_t v84 = v100;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v99 + 16))(v94, v97, v100);
  unint64_t v85 = (*(unsigned __int8 *)(v81 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
  unint64_t v86 = (v93 + v85 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = swift_allocObject();
  ((void (*)(unint64_t, unsigned char *, uint64_t))v102)(v87 + v85, v82, v84);
  *(void *)(v87 + v86) = v44;
  id v88 = v44;
  uint64_t v89 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1E8);
  NSString v41 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  sub_10003B6F8((uint64_t)v107, (uint64_t *)&unk_1007AD740);
  (*(void (**)(unsigned char *, uint64_t))(v81 + 8))(v83, v84);
  return (uint64_t)v41;
}

uint64_t sub_10031D514(uint64_t a1, void *a2, void *a3)
{
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  id v88 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  unint64_t v86 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = v8;
  __chkstk_darwin(v7);
  uint64_t v89 = (char *)&v84 - v9;
  uint64_t v90 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  uint64_t v95 = *(void **)(v90 - 8);
  uint64_t v10 = v95[8];
  uint64_t v11 = __chkstk_darwin(v90);
  uint64_t v12 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v103 = (char *)&v84 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (id *)((char *)&v84 - v19);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v87 = a1;
  v21((char *)&v84 - v19, a1, v14);
  int v22 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    int v23 = v95;
    int v24 = (void (*)(char *, id *))v95[4];
    uint64_t v25 = v103;
    uint64_t v26 = v20;
    uint64_t v27 = v90;
    v24(v103, v26);
    uint64_t v94 = *(void **)(*(void *)(v94[4] + 48) + 40);
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = v25;
    uint64_t v30 = v27;
    ((void (*)(char *, char *, uint64_t))v23[2])(v12, v29, v27);
    unint64_t v31 = (*((unsigned __int8 *)v23 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v23 + 80);
    uint64_t v32 = swift_allocObject();
    unint64_t v33 = v93;
    *(void *)(v32 + 16) = v28;
    *(void *)(v32 + 24) = v33;
    unint64_t v34 = v32 + v31;
    uint64_t v35 = v30;
    ((void (*)(unint64_t, char *, uint64_t))v24)(v34, v12, v30);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_10032FD48;
    *(void *)(v36 + 24) = v32;
    id v37 = v33;
    swift_unknownObjectRetain();
    uint64_t v38 = v94;
    swift_retain();
    id v39 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    int v40 = self;
    NSString v41 = String._bridgeToObjectiveC()();
    [v40 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v95[1])(v103, v35);
    return (uint64_t)v38;
  }
  uint64_t v42 = (uint64_t)v94;
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);

    goto LABEL_7;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_10034812C(0);
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    v21(v18, v87, v14);
    uint64_t v43 = (uint64_t)v88;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v45 = v91;
    uint64_t v44 = v92;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v43, 1, v92) == 1)
    {
      sub_10003B6F8(v43, &qword_10079B150);
      uint64_t v46 = self;
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = [v46 internalErrorWithDebugDescription:v47];

      sub_10003B754(&qword_10079C8C0);
      swift_allocObject();
      return Promise.init(error:)();
    }
    id v50 = *(void **)(v45 + 32);
    long long v103 = (char *)(v45 + 32);
    uint64_t v95 = v50;
    ((void (*)(char *, uint64_t, uint64_t))v50)(v89, v43, v44);
    swift_beginAccess();
    sub_100016AFC(v42 + 96, (uint64_t)&v96);
    if (v99 != 1)
    {
      sub_100016998((uint64_t)&v96);
      uint64_t v54 = v93;
LABEL_31:
      sub_10034812C(0);
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = v42;
      *(void *)(v71 + 24) = v54;
      id v72 = v54;
      swift_retain();
      id v73 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v96, (uint64_t)v100);
    uint64_t v51 = *(void *)(*sub_100038D28(v100, v101)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(ObjectType, v51);
    uint64_t v54 = v93;
    if (v53)
    {
      id v55 = v53;
      id v56 = [v53 objectID];
    }
    else
    {
      id v56 = 0;
    }
    id v58 = [v54 objectID];
    id v59 = v58;
    if (v56)
    {
      if (v58)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v60 = v56;
        char v61 = static NSObject.== infix(_:_:)();

        if ((v61 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v62 = v101;
        uint64_t v63 = v102;
        uint64_t v64 = sub_100038D28(v100, v101);
        uint64_t v97 = v62;
        uint64_t v65 = *(void *)(v63 + 8);
        uint64_t v98 = v65;
        id v66 = sub_1000394A8((uint64_t *)&v96);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v64, v62);
        sub_10034E630((uint64_t)v66, v42, v62, v65);
        sub_100038CD8((uint64_t)&v96);
        uint64_t v67 = v101;
        uint64_t v68 = v102;
        id v69 = sub_100038D28(v100, v101);
        uint64_t v97 = v67;
        uint64_t v98 = *(void *)(v68 + 8);
        char v70 = sub_1000394A8((uint64_t *)&v96);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v70, v69, v67);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v100);
LABEL_32:
        uint64_t v75 = v91;
        uint64_t v74 = v92;
        uint64_t v76 = v86;
        uint64_t v77 = v89;
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v86, v89, v92);
        unint64_t v78 = (*(unsigned __int8 *)(v75 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        unint64_t v79 = (v85 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v80 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v95)(v80 + v78, v76, v74);
        *(void *)(v80 + v79) = v54;
        id v81 = v54;
        id v82 = (void *)zalgo.getter();
        uint64_t v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v74);
        return (uint64_t)v38;
      }
      id v59 = v56;
    }
    else if (!v58)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v100);
    goto LABEL_31;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    uint64_t v38 = self;
    NSString v57 = String._bridgeToObjectiveC()();
    [v38 internalErrorWithDebugDescription:v57];

    swift_willThrow();
    return (uint64_t)v38;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10031E028(uint64_t a1, void *a2, void *a3)
{
  uint64_t v94 = a3;
  uint64_t v95 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v7;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v9;
  uint64_t v91 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  long long v96 = *(void **)(v91 - 8);
  uint64_t v10 = v96[8];
  __chkstk_darwin(v91);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v104 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v85 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v88 = a1;
  v22((char *)&v85 - v20, a1, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    int v24 = v96;
    uint64_t v25 = (void (*)(char *, id *))v96[4];
    uint64_t v26 = v104;
    uint64_t v27 = v21;
    uint64_t v28 = v91;
    v25(v104, v27);
    uint64_t v95 = *(void **)(*(void *)(v95[4] + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(char *, char *, uint64_t))v24[2])(v11, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    unint64_t v34 = v94;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    unint64_t v35 = v33 + v32;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, char *, uint64_t))v25)(v35, v11, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FD48;
    *(void *)(v37 + 24) = v33;
    id v38 = v34;
    swift_unknownObjectRetain();
    id v39 = v95;
    swift_retain();
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v96[1])(v104, v36);
    return (uint64_t)v39;
  }
  uint64_t v43 = (uint64_t)v95;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_1003484A8(0);
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v88, v14);
    uint64_t v44 = (uint64_t)v89;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v44, 1, v93) == 1)
    {
      sub_10003B6F8(v44, &qword_10079B150);
      NSString v47 = self;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v47 internalErrorWithDebugDescription:v48];

      sub_10003B754(&qword_10079B158);
      swift_allocObject();
      return Promise.init(error:)();
    }
    uint64_t v51 = *(void **)(v46 + 32);
    long long v104 = (char *)(v46 + 32);
    long long v96 = v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v90, v44, v45);
    swift_beginAccess();
    sub_100016AFC(v43 + 96, (uint64_t)&v97);
    if (v100 != 1)
    {
      sub_100016998((uint64_t)&v97);
      id v55 = v94;
LABEL_31:
      sub_10034812C(0);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v43;
      *(void *)(v72 + 24) = v55;
      id v73 = v55;
      swift_retain();
      uint64_t v74 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v97, (uint64_t)v101);
    uint64_t v52 = *(void *)(*sub_100038D28(v101, v102)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
    id v55 = v94;
    if (v54)
    {
      id v56 = v54;
      id v57 = [v54 objectID];
    }
    else
    {
      id v57 = 0;
    }
    id v59 = [v55 objectID];
    id v60 = v59;
    if (v57)
    {
      if (v59)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v61 = v57;
        char v62 = static NSObject.== infix(_:_:)();

        if ((v62 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v63 = v102;
        uint64_t v64 = v103;
        uint64_t v65 = sub_100038D28(v101, v102);
        uint64_t v98 = v63;
        uint64_t v66 = *(void *)(v64 + 8);
        uint64_t v99 = v66;
        uint64_t v67 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v67, v65, v63);
        sub_10034E630((uint64_t)v67, v43, v63, v66);
        sub_100038CD8((uint64_t)&v97);
        uint64_t v68 = v102;
        uint64_t v69 = v103;
        char v70 = sub_100038D28(v101, v102);
        uint64_t v98 = v68;
        uint64_t v99 = *(void *)(v69 + 8);
        uint64_t v71 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v71, v70, v68);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v101);
LABEL_32:
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v87;
        unint64_t v78 = v90;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v90, v93);
        unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        unint64_t v80 = (v86 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v96)(v81 + v79, v77, v75);
        *(void *)(v81 + v80) = v55;
        id v82 = v55;
        uint64_t v83 = (void *)zalgo.getter();
        sub_10003B754(&qword_100791C48);
        id v39 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
        return (uint64_t)v39;
      }
      id v60 = v57;
    }
    else if (!v59)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v101);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v39 = self;
    NSString v58 = String._bridgeToObjectiveC()();
    [v39 internalErrorWithDebugDescription:v58];

    swift_willThrow();
    return (uint64_t)v39;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10031EB44(uint64_t a1, void *a2, void *a3)
{
  uint64_t v93 = a3;
  uint64_t v94 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v88 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v91 = *(void *)(v6 - 8);
  uint64_t v92 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v86 = (char *)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = v8;
  __chkstk_darwin(v7);
  uint64_t v89 = (char *)&v84 - v9;
  uint64_t v90 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  uint64_t v95 = *(void **)(v90 - 8);
  uint64_t v10 = v95[8];
  uint64_t v11 = __chkstk_darwin(v90);
  uint64_t v12 = (char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v103 = (char *)&v84 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (id *)((char *)&v84 - v19);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v87 = a1;
  v21((char *)&v84 - v19, a1, v14);
  int v22 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    int v23 = v95;
    int v24 = (void (*)(char *, id *))v95[4];
    uint64_t v25 = v103;
    uint64_t v26 = v20;
    uint64_t v27 = v90;
    v24(v103, v26);
    uint64_t v94 = *(void **)(*(void *)(v94[4] + 48) + 40);
    uint64_t v28 = swift_allocObject();
    swift_weakInit();
    uint64_t v29 = v25;
    uint64_t v30 = v27;
    ((void (*)(char *, char *, uint64_t))v23[2])(v12, v29, v27);
    unint64_t v31 = (*((unsigned __int8 *)v23 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v23 + 80);
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v93;
    *(void *)(v32 + 16) = v28;
    *(void *)(v32 + 24) = v33;
    unint64_t v34 = v32 + v31;
    uint64_t v35 = v30;
    ((void (*)(unint64_t, char *, uint64_t))v24)(v34, v12, v30);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = sub_10032FD48;
    *(void *)(v36 + 24) = v32;
    id v37 = v33;
    swift_unknownObjectRetain();
    id v38 = v94;
    swift_retain();
    id v39 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    int v40 = self;
    NSString v41 = String._bridgeToObjectiveC()();
    [v40 internalErrorWithDebugDescription:v41];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v95[1])(v103, v35);
    return (uint64_t)v38;
  }
  uint64_t v42 = (uint64_t)v94;
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);

    goto LABEL_7;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_10003FC84(0);
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    v21(v18, v87, v14);
    uint64_t v43 = (uint64_t)v88;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v45 = v91;
    uint64_t v44 = v92;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v43, 1, v92) == 1)
    {
      sub_10003B6F8(v43, &qword_10079B150);
      uint64_t v46 = self;
      NSString v47 = String._bridgeToObjectiveC()();
      id v48 = [v46 internalErrorWithDebugDescription:v47];

      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      return Promise.init(error:)();
    }
    id v50 = *(void **)(v45 + 32);
    uint64_t v103 = (char *)(v45 + 32);
    uint64_t v95 = v50;
    ((void (*)(char *, uint64_t, uint64_t))v50)(v89, v43, v44);
    swift_beginAccess();
    sub_100016AFC(v42 + 96, (uint64_t)&v96);
    if (v99 != 1)
    {
      sub_100016998((uint64_t)&v96);
      uint64_t v54 = v93;
LABEL_31:
      sub_10034812C(0);
      uint64_t v71 = swift_allocObject();
      *(void *)(v71 + 16) = v42;
      *(void *)(v71 + 24) = v54;
      id v72 = v54;
      swift_retain();
      id v73 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v96, (uint64_t)v100);
    uint64_t v51 = *(void *)(*sub_100038D28(v100, v101)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v51 + 16))(ObjectType, v51);
    uint64_t v54 = v93;
    if (v53)
    {
      id v55 = v53;
      id v56 = [v53 objectID];
    }
    else
    {
      id v56 = 0;
    }
    id v58 = [v54 objectID];
    id v59 = v58;
    if (v56)
    {
      if (v58)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v60 = v56;
        char v61 = static NSObject.== infix(_:_:)();

        if ((v61 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v62 = v101;
        uint64_t v63 = v102;
        uint64_t v64 = sub_100038D28(v100, v101);
        uint64_t v97 = v62;
        uint64_t v65 = *(void *)(v63 + 8);
        uint64_t v98 = v65;
        uint64_t v66 = sub_1000394A8((uint64_t *)&v96);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(v66, v64, v62);
        sub_10034E630((uint64_t)v66, v42, v62, v65);
        sub_100038CD8((uint64_t)&v96);
        uint64_t v67 = v101;
        uint64_t v68 = v102;
        uint64_t v69 = sub_100038D28(v100, v101);
        uint64_t v97 = v67;
        uint64_t v98 = *(void *)(v68 + 8);
        char v70 = sub_1000394A8((uint64_t *)&v96);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v67 - 8) + 16))(v70, v69, v67);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v100);
LABEL_32:
        uint64_t v75 = v91;
        uint64_t v74 = v92;
        uint64_t v76 = v86;
        uint64_t v77 = v89;
        (*(void (**)(char *, char *, uint64_t))(v91 + 16))(v86, v89, v92);
        unint64_t v78 = (*(unsigned __int8 *)(v75 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80);
        unint64_t v79 = (v85 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v80 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v95)(v80 + v78, v76, v74);
        *(void *)(v80 + v79) = v54;
        id v81 = v54;
        id v82 = (void *)zalgo.getter();
        sub_10003B754(&qword_100799F40);
        id v38 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v75 + 8))(v77, v74);
        return (uint64_t)v38;
      }
      id v59 = v56;
    }
    else if (!v58)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v100);
    goto LABEL_31;
  }
  if (v22 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v38 = self;
    NSString v57 = String._bridgeToObjectiveC()();
    [v38 internalErrorWithDebugDescription:v57];

    swift_willThrow();
    return (uint64_t)v38;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10031F660(uint64_t a1, void *a2, void *a3)
{
  uint64_t v94 = a3;
  uint64_t v95 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v7;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v9;
  uint64_t v91 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  long long v96 = *(void **)(v91 - 8);
  uint64_t v10 = v96[8];
  __chkstk_darwin(v91);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v104 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v85 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v88 = a1;
  v22((char *)&v85 - v20, a1, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    int v24 = v96;
    uint64_t v25 = (void (*)(char *, id *))v96[4];
    uint64_t v26 = v104;
    uint64_t v27 = v21;
    uint64_t v28 = v91;
    v25(v104, v27);
    uint64_t v95 = *(void **)(*(void *)(v95[4] + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(char *, char *, uint64_t))v24[2])(v11, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    unint64_t v34 = v94;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    unint64_t v35 = v33 + v32;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, char *, uint64_t))v25)(v35, v11, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FD48;
    *(void *)(v37 + 24) = v33;
    id v38 = v34;
    swift_unknownObjectRetain();
    id v39 = v95;
    swift_retain();
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v96[1])(v104, v36);
    return (uint64_t)v39;
  }
  uint64_t v43 = (uint64_t)v95;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_1003484D8(0);
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v88, v14);
    uint64_t v44 = (uint64_t)v89;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v44, 1, v93) == 1)
    {
      sub_10003B6F8(v44, &qword_10079B150);
      NSString v47 = self;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v47 internalErrorWithDebugDescription:v48];

      sub_10003B754(&qword_10079B160);
      swift_allocObject();
      return Promise.init(error:)();
    }
    uint64_t v51 = *(void **)(v46 + 32);
    long long v104 = (char *)(v46 + 32);
    long long v96 = v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v90, v44, v45);
    swift_beginAccess();
    sub_100016AFC(v43 + 96, (uint64_t)&v97);
    if (v100 != 1)
    {
      sub_100016998((uint64_t)&v97);
      id v55 = v94;
LABEL_31:
      sub_10034812C(0);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v43;
      *(void *)(v72 + 24) = v55;
      id v73 = v55;
      swift_retain();
      uint64_t v74 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v97, (uint64_t)v101);
    uint64_t v52 = *(void *)(*sub_100038D28(v101, v102)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
    id v55 = v94;
    if (v54)
    {
      id v56 = v54;
      id v57 = [v54 objectID];
    }
    else
    {
      id v57 = 0;
    }
    id v59 = [v55 objectID];
    id v60 = v59;
    if (v57)
    {
      if (v59)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v61 = v57;
        char v62 = static NSObject.== infix(_:_:)();

        if ((v62 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v63 = v102;
        uint64_t v64 = v103;
        uint64_t v65 = sub_100038D28(v101, v102);
        uint64_t v98 = v63;
        uint64_t v66 = *(void *)(v64 + 8);
        uint64_t v99 = v66;
        uint64_t v67 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v67, v65, v63);
        sub_10034E630((uint64_t)v67, v43, v63, v66);
        sub_100038CD8((uint64_t)&v97);
        uint64_t v68 = v102;
        uint64_t v69 = v103;
        char v70 = sub_100038D28(v101, v102);
        uint64_t v98 = v68;
        uint64_t v99 = *(void *)(v69 + 8);
        uint64_t v71 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v71, v70, v68);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v101);
LABEL_32:
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v87;
        unint64_t v78 = v90;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v90, v93);
        unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        unint64_t v80 = (v86 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v96)(v81 + v79, v77, v75);
        *(void *)(v81 + v80) = v55;
        id v82 = v55;
        uint64_t v83 = (void *)zalgo.getter();
        sub_10003B754(&qword_100799F38);
        id v39 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
        return (uint64_t)v39;
      }
      id v60 = v57;
    }
    else if (!v59)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v101);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v39 = self;
    NSString v58 = String._bridgeToObjectiveC()();
    [v39 internalErrorWithDebugDescription:v58];

    swift_willThrow();
    return (uint64_t)v39;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10032017C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v94 = a3;
  uint64_t v95 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v7;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v9;
  uint64_t v91 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  long long v96 = *(void **)(v91 - 8);
  uint64_t v10 = v96[8];
  __chkstk_darwin(v91);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v104 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v85 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v88 = a1;
  v22((char *)&v85 - v20, a1, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    int v24 = v96;
    uint64_t v25 = (void (*)(char *, id *))v96[4];
    uint64_t v26 = v104;
    uint64_t v27 = v21;
    uint64_t v28 = v91;
    v25(v104, v27);
    uint64_t v95 = *(void **)(*(void *)(v95[4] + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(char *, char *, uint64_t))v24[2])(v11, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    unint64_t v34 = v94;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    unint64_t v35 = v33 + v32;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, char *, uint64_t))v25)(v35, v11, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FD48;
    *(void *)(v37 + 24) = v33;
    id v38 = v34;
    swift_unknownObjectRetain();
    id v39 = v95;
    swift_retain();
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v96[1])(v104, v36);
    return (uint64_t)v39;
  }
  uint64_t v43 = (uint64_t)v95;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_100348508(0);
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v88, v14);
    uint64_t v44 = (uint64_t)v89;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v44, 1, v93) == 1)
    {
      sub_10003B6F8(v44, &qword_10079B150);
      NSString v47 = self;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v47 internalErrorWithDebugDescription:v48];

      sub_10003B754(&qword_10079B1B0);
      swift_allocObject();
      return Promise.init(error:)();
    }
    uint64_t v51 = *(void **)(v46 + 32);
    long long v104 = (char *)(v46 + 32);
    long long v96 = v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v90, v44, v45);
    swift_beginAccess();
    sub_100016AFC(v43 + 96, (uint64_t)&v97);
    if (v100 != 1)
    {
      sub_100016998((uint64_t)&v97);
      id v55 = v94;
LABEL_31:
      sub_10034812C(0);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v43;
      *(void *)(v72 + 24) = v55;
      id v73 = v55;
      swift_retain();
      uint64_t v74 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v97, (uint64_t)v101);
    uint64_t v52 = *(void *)(*sub_100038D28(v101, v102)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
    id v55 = v94;
    if (v54)
    {
      id v56 = v54;
      id v57 = [v54 objectID];
    }
    else
    {
      id v57 = 0;
    }
    id v59 = [v55 objectID];
    id v60 = v59;
    if (v57)
    {
      if (v59)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v61 = v57;
        char v62 = static NSObject.== infix(_:_:)();

        if ((v62 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v63 = v102;
        uint64_t v64 = v103;
        uint64_t v65 = sub_100038D28(v101, v102);
        uint64_t v98 = v63;
        uint64_t v66 = *(void *)(v64 + 8);
        uint64_t v99 = v66;
        uint64_t v67 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v67, v65, v63);
        sub_10034E630((uint64_t)v67, v43, v63, v66);
        sub_100038CD8((uint64_t)&v97);
        uint64_t v68 = v102;
        uint64_t v69 = v103;
        char v70 = sub_100038D28(v101, v102);
        uint64_t v98 = v68;
        uint64_t v99 = *(void *)(v69 + 8);
        uint64_t v71 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v71, v70, v68);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v101);
LABEL_32:
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v87;
        unint64_t v78 = v90;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v90, v93);
        unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        unint64_t v80 = (v86 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v96)(v81 + v79, v77, v75);
        *(void *)(v81 + v80) = v55;
        id v82 = v55;
        uint64_t v83 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1A0);
        id v39 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
        return (uint64_t)v39;
      }
      id v60 = v57;
    }
    else if (!v59)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v101);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v39 = self;
    NSString v58 = String._bridgeToObjectiveC()();
    [v39 internalErrorWithDebugDescription:v58];

    swift_willThrow();
    return (uint64_t)v39;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100320C98(uint64_t a1, void *a2, void *a3)
{
  uint64_t v94 = a3;
  uint64_t v95 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v7;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v9;
  uint64_t v91 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  long long v96 = *(void **)(v91 - 8);
  uint64_t v10 = v96[8];
  __chkstk_darwin(v91);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v104 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v85 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v88 = a1;
  v22((char *)&v85 - v20, a1, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    int v24 = v96;
    uint64_t v25 = (void (*)(char *, id *))v96[4];
    uint64_t v26 = v104;
    uint64_t v27 = v21;
    uint64_t v28 = v91;
    v25(v104, v27);
    uint64_t v95 = *(void **)(*(void *)(v95[4] + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(char *, char *, uint64_t))v24[2])(v11, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    unint64_t v34 = v94;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    unint64_t v35 = v33 + v32;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, char *, uint64_t))v25)(v35, v11, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FD48;
    *(void *)(v37 + 24) = v33;
    id v38 = v34;
    swift_unknownObjectRetain();
    id v39 = v95;
    swift_retain();
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v96[1])(v104, v36);
    return (uint64_t)v39;
  }
  uint64_t v43 = (uint64_t)v95;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_100348538(0);
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v88, v14);
    uint64_t v44 = (uint64_t)v89;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v44, 1, v93) == 1)
    {
      sub_10003B6F8(v44, &qword_10079B150);
      NSString v47 = self;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v47 internalErrorWithDebugDescription:v48];

      sub_10003B754(&qword_10079B1C8);
      swift_allocObject();
      return Promise.init(error:)();
    }
    uint64_t v51 = *(void **)(v46 + 32);
    long long v104 = (char *)(v46 + 32);
    long long v96 = v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v90, v44, v45);
    swift_beginAccess();
    sub_100016AFC(v43 + 96, (uint64_t)&v97);
    if (v100 != 1)
    {
      sub_100016998((uint64_t)&v97);
      id v55 = v94;
LABEL_31:
      sub_10034812C(0);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v43;
      *(void *)(v72 + 24) = v55;
      id v73 = v55;
      swift_retain();
      uint64_t v74 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v97, (uint64_t)v101);
    uint64_t v52 = *(void *)(*sub_100038D28(v101, v102)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
    id v55 = v94;
    if (v54)
    {
      id v56 = v54;
      id v57 = [v54 objectID];
    }
    else
    {
      id v57 = 0;
    }
    id v59 = [v55 objectID];
    id v60 = v59;
    if (v57)
    {
      if (v59)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v61 = v57;
        char v62 = static NSObject.== infix(_:_:)();

        if ((v62 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v63 = v102;
        uint64_t v64 = v103;
        uint64_t v65 = sub_100038D28(v101, v102);
        uint64_t v98 = v63;
        uint64_t v66 = *(void *)(v64 + 8);
        uint64_t v99 = v66;
        uint64_t v67 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v67, v65, v63);
        sub_10034E630((uint64_t)v67, v43, v63, v66);
        sub_100038CD8((uint64_t)&v97);
        uint64_t v68 = v102;
        uint64_t v69 = v103;
        char v70 = sub_100038D28(v101, v102);
        uint64_t v98 = v68;
        uint64_t v99 = *(void *)(v69 + 8);
        uint64_t v71 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v71, v70, v68);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v101);
LABEL_32:
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v87;
        unint64_t v78 = v90;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v90, v93);
        unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        unint64_t v80 = (v86 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v96)(v81 + v79, v77, v75);
        *(void *)(v81 + v80) = v55;
        id v82 = v55;
        uint64_t v83 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1B8);
        id v39 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
        return (uint64_t)v39;
      }
      id v60 = v57;
    }
    else if (!v59)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v101);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v39 = self;
    NSString v58 = String._bridgeToObjectiveC()();
    [v39 internalErrorWithDebugDescription:v58];

    swift_willThrow();
    return (uint64_t)v39;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003217B4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v94 = a3;
  uint64_t v95 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v7;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v9;
  uint64_t v91 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  long long v96 = *(void **)(v91 - 8);
  uint64_t v10 = v96[8];
  __chkstk_darwin(v91);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v104 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v85 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v88 = a1;
  v22((char *)&v85 - v20, a1, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    int v24 = v96;
    uint64_t v25 = (void (*)(char *, id *))v96[4];
    uint64_t v26 = v104;
    uint64_t v27 = v21;
    uint64_t v28 = v91;
    v25(v104, v27);
    uint64_t v95 = *(void **)(*(void *)(v95[4] + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(char *, char *, uint64_t))v24[2])(v11, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    unint64_t v34 = v94;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    unint64_t v35 = v33 + v32;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, char *, uint64_t))v25)(v35, v11, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FD48;
    *(void *)(v37 + 24) = v33;
    id v38 = v34;
    swift_unknownObjectRetain();
    id v39 = v95;
    swift_retain();
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v96[1])(v104, v36);
    return (uint64_t)v39;
  }
  uint64_t v43 = (uint64_t)v95;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_100348568(0);
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v88, v14);
    uint64_t v44 = (uint64_t)v89;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v44, 1, v93) == 1)
    {
      sub_10003B6F8(v44, &qword_10079B150);
      NSString v47 = self;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v47 internalErrorWithDebugDescription:v48];

      sub_10003B754(&qword_10079B1E0);
      swift_allocObject();
      return Promise.init(error:)();
    }
    uint64_t v51 = *(void **)(v46 + 32);
    long long v104 = (char *)(v46 + 32);
    long long v96 = v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v90, v44, v45);
    swift_beginAccess();
    sub_100016AFC(v43 + 96, (uint64_t)&v97);
    if (v100 != 1)
    {
      sub_100016998((uint64_t)&v97);
      id v55 = v94;
LABEL_31:
      sub_10034812C(0);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v43;
      *(void *)(v72 + 24) = v55;
      id v73 = v55;
      swift_retain();
      uint64_t v74 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v97, (uint64_t)v101);
    uint64_t v52 = *(void *)(*sub_100038D28(v101, v102)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
    id v55 = v94;
    if (v54)
    {
      id v56 = v54;
      id v57 = [v54 objectID];
    }
    else
    {
      id v57 = 0;
    }
    id v59 = [v55 objectID];
    id v60 = v59;
    if (v57)
    {
      if (v59)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v61 = v57;
        char v62 = static NSObject.== infix(_:_:)();

        if ((v62 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v63 = v102;
        uint64_t v64 = v103;
        uint64_t v65 = sub_100038D28(v101, v102);
        uint64_t v98 = v63;
        uint64_t v66 = *(void *)(v64 + 8);
        uint64_t v99 = v66;
        uint64_t v67 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v67, v65, v63);
        sub_10034E630((uint64_t)v67, v43, v63, v66);
        sub_100038CD8((uint64_t)&v97);
        uint64_t v68 = v102;
        uint64_t v69 = v103;
        char v70 = sub_100038D28(v101, v102);
        uint64_t v98 = v68;
        uint64_t v99 = *(void *)(v69 + 8);
        uint64_t v71 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v71, v70, v68);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v101);
LABEL_32:
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v87;
        unint64_t v78 = v90;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v90, v93);
        unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        unint64_t v80 = (v86 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v96)(v81 + v79, v77, v75);
        *(void *)(v81 + v80) = v55;
        id v82 = v55;
        uint64_t v83 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1D0);
        id v39 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
        return (uint64_t)v39;
      }
      id v60 = v57;
    }
    else if (!v59)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v101);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v39 = self;
    NSString v58 = String._bridgeToObjectiveC()();
    [v39 internalErrorWithDebugDescription:v58];

    swift_willThrow();
    return (uint64_t)v39;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_1003222D0(uint64_t a1, void *a2, void *a3)
{
  uint64_t v94 = a3;
  uint64_t v95 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v89 = (char *)&v85 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v92 = *(void *)(v6 - 8);
  uint64_t v93 = v6;
  __chkstk_darwin(v6);
  uint64_t v87 = (char *)&v85 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = v7;
  __chkstk_darwin(v8);
  uint64_t v90 = (char *)&v85 - v9;
  uint64_t v91 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  long long v96 = *(void **)(v91 - 8);
  uint64_t v10 = v96[8];
  __chkstk_darwin(v91);
  uint64_t v11 = (char *)&v85 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  long long v104 = (char *)&v85 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v85 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v85 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  uint64_t v88 = a1;
  v22((char *)&v85 - v20, a1, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showDetail(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    int v24 = v96;
    uint64_t v25 = (void (*)(char *, id *))v96[4];
    uint64_t v26 = v104;
    uint64_t v27 = v21;
    uint64_t v28 = v91;
    v25(v104, v27);
    uint64_t v95 = *(void **)(*(void *)(v95[4] + 48) + 40);
    uint64_t v29 = swift_allocObject();
    swift_weakInit();
    uint64_t v30 = v26;
    uint64_t v31 = v28;
    ((void (*)(char *, char *, uint64_t))v24[2])(v11, v30, v28);
    unint64_t v32 = (*((unsigned __int8 *)v24 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v24 + 80);
    uint64_t v33 = swift_allocObject();
    unint64_t v34 = v94;
    *(void *)(v33 + 16) = v29;
    *(void *)(v33 + 24) = v34;
    unint64_t v35 = v33 + v32;
    uint64_t v36 = v31;
    ((void (*)(unint64_t, char *, uint64_t))v25)(v35, v11, v31);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10032FD48;
    *(void *)(v37 + 24) = v33;
    id v38 = v34;
    swift_unknownObjectRetain();
    id v39 = v95;
    swift_retain();
    int v40 = (void *)zalgo.getter();
    dispatch thunk of Promise.then<A>(on:closure:)();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    NSString v41 = self;
    NSString v42 = String._bridgeToObjectiveC()();
    [v41 internalErrorWithDebugDescription:v42];

    swift_willThrow();
    ((void (*)(char *, uint64_t))v96[1])(v104, v36);
    return (uint64_t)v39;
  }
  uint64_t v43 = (uint64_t)v95;
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showInAccount(_:)) {
    return sub_100348598(0);
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showSectionlessSection(_:))
  {
LABEL_7:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, v88, v14);
    uint64_t v44 = (uint64_t)v89;
    REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
    uint64_t v46 = v92;
    uint64_t v45 = v93;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v44, 1, v93) == 1)
    {
      sub_10003B6F8(v44, &qword_10079B150);
      NSString v47 = self;
      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [v47 internalErrorWithDebugDescription:v48];

      sub_10003B754(&qword_10079B1F8);
      swift_allocObject();
      return Promise.init(error:)();
    }
    uint64_t v51 = *(void **)(v46 + 32);
    long long v104 = (char *)(v46 + 32);
    long long v96 = v51;
    ((void (*)(char *, uint64_t, uint64_t))v51)(v90, v44, v45);
    swift_beginAccess();
    sub_100016AFC(v43 + 96, (uint64_t)&v97);
    if (v100 != 1)
    {
      sub_100016998((uint64_t)&v97);
      id v55 = v94;
LABEL_31:
      sub_10034812C(0);
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = v43;
      *(void *)(v72 + 24) = v55;
      id v73 = v55;
      swift_retain();
      uint64_t v74 = (void *)zalgo.getter();
      sub_10003B754(&qword_100791C48);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      goto LABEL_32;
    }
    sub_100038ED8(&v97, (uint64_t)v101);
    uint64_t v52 = *(void *)(*sub_100038D28(v101, v102)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v52 + 16))(ObjectType, v52);
    id v55 = v94;
    if (v54)
    {
      id v56 = v54;
      id v57 = [v54 objectID];
    }
    else
    {
      id v57 = 0;
    }
    id v59 = [v55 objectID];
    id v60 = v59;
    if (v57)
    {
      if (v59)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v61 = v57;
        char v62 = static NSObject.== infix(_:_:)();

        if ((v62 & 1) == 0) {
          goto LABEL_30;
        }
LABEL_27:
        uint64_t v63 = v102;
        uint64_t v64 = v103;
        uint64_t v65 = sub_100038D28(v101, v102);
        uint64_t v98 = v63;
        uint64_t v66 = *(void *)(v64 + 8);
        uint64_t v99 = v66;
        uint64_t v67 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v63 - 8) + 16))(v67, v65, v63);
        sub_10034E630((uint64_t)v67, v43, v63, v66);
        sub_100038CD8((uint64_t)&v97);
        uint64_t v68 = v102;
        uint64_t v69 = v103;
        char v70 = sub_100038D28(v101, v102);
        uint64_t v98 = v68;
        uint64_t v99 = *(void *)(v69 + 8);
        uint64_t v71 = sub_1000394A8((uint64_t *)&v97);
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v68 - 8) + 16))(v71, v70, v68);
        sub_10003B754(&qword_10079B158);
        swift_allocObject();
        Promise.init(value:)();
        sub_100038CD8((uint64_t)v101);
LABEL_32:
        uint64_t v76 = v92;
        uint64_t v75 = v93;
        uint64_t v77 = v87;
        unint64_t v78 = v90;
        (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v87, v90, v93);
        unint64_t v79 = (*(unsigned __int8 *)(v76 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80);
        unint64_t v80 = (v86 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v81 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v96)(v81 + v79, v77, v75);
        *(void *)(v81 + v80) = v55;
        id v82 = v55;
        uint64_t v83 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1E8);
        id v39 = (void *)dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();

        (*(void (**)(char *, uint64_t))(v76 + 8))(v78, v75);
        return (uint64_t)v39;
      }
      id v60 = v57;
    }
    else if (!v59)
    {
      goto LABEL_27;
    }

LABEL_30:
    sub_100038CD8((uint64_t)v101);
    goto LABEL_31;
  }
  if (v23 == enum case for REMNavigationSpecifier.ListPathSpecifier.showManageSharedList(_:))
  {
    id v39 = self;
    NSString v58 = String._bridgeToObjectiveC()();
    [v39 internalErrorWithDebugDescription:v58];

    swift_willThrow();
    return (uint64_t)v39;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100322DEC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  v19[0] = a4;
  v19[1] = a5;
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = a1[3];
  uint64_t v12 = a1[4];
  sub_100038D28(a1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v14 + ((v10 + v13 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  id v15 = a3;
  uint64_t v16 = (void *)zalgo.getter();
  uint64_t v17 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v17;
}

uint64_t sub_100322FA0(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t *a5, uint64_t a6)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  v20[1] = a4;
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = a1[3];
  uint64_t v13 = a1[4];
  sub_100038D28(a1, v12);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v9);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v14, (char *)v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  *(void *)(v15 + ((v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  id v16 = a3;
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(v21);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_10032315C(void *a1, uint64_t a2, void *a3)
{
  id v20 = a3;
  uint64_t v21 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v9 + 88))(v11, v8);
  int v13 = enum case for REMNavigationSpecifier.CommonListPathSpecifier.showSectionlessSection(_:);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  sub_100038D28(a1, v14);
  if (v12 != v13) {
    return (*(uint64_t (**)(uint64_t, char *, char *, uint64_t, uint64_t))(v15 + 72))(a2, &type metadata for Any[8], &type metadata for Any[8], v14, v15);
  }
  id v16 = [v20 objectID];
  uint64_t v17 = v21;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:), v21);
  uint64_t v18 = (*(uint64_t (**)(id, char *, char *, char *, uint64_t, uint64_t))(v15 + 64))(v16, v7, &type metadata for Any[8], &type metadata for Any[8], v14, v15);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  return v18;
}

uint64_t sub_100323404(void *a1, uint64_t a2, void *a3, uint64_t *a4)
{
  id v25 = a3;
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v27 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_10003B754(a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a2, v10);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  int v16 = enum case for REMNavigationSpecifier.CommonListPathSpecifier.showSectionlessSection(_:);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v17 = a1[3];
  uint64_t v18 = a1[4];
  sub_100038D28(a1, v17);
  if (v15 != v16) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 72))(a2, v14, v14, v17, v18);
  }
  id v19 = [v25 objectID];
  uint64_t v21 = v26;
  uint64_t v20 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v9, enum case for REMNavigationSpecifier.SectionPathSpecifier.showExpanded(_:), v27);
  uint64_t v22 = (*(uint64_t (**)(id, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 64))(v19, v9, v14, v14, v17, v18);

  (*(void (**)(char *, uint64_t))(v21 + 8))(v9, v20);
  return v22;
}

uint64_t sub_1003236A8(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10032ED24;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10032ED44;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100323928(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332304;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100323BA4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100331040;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F40);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100323E2C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100331D54;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1003240B4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332870;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1A0);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_10032433C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332DAC;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1B8);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1003245C4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1003332E8;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1D0);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_10032484C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334494;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100333B90;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1E8);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100324AD4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_10003B754(a4);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_100038D28(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 40))(a2, a3, v7, v7, v8, v9);
}

uint64_t sub_100324B5C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10032FB6C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10032FB8C;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100324DDC(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1003321FC;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100325058(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100330EB4;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F40);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1003252E0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100331C4C;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100325568(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332738;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1A0);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1003257F0(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332CA4;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1B8);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100325A78(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 list];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1003331E0;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1D0);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100325D00(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 list:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10033448C;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10033384C;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1E8);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100325F88(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_10003B754(a4);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_100038D28(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 48))(a2, a3, v7, v7, v8, v9);
}

uint64_t sub_100326010(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a1 smartList];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_10032FC48;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10032FC68;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100326290(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 smartList:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332248;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_10032650C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = [a1 smartList];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100330F00;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F40);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100326794(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 smartList];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100331C98;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100326A1C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 smartList:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1003327B4;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1A0);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100326CA4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 smartList:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100332CF0;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1B8);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_100326F2C(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  [a1 smartList:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10033322C;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1D0);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_1003271B4(void *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  id v7 = [a1 smartList:__chkstk_darwin(v4)];
  id v8 = [v7 objectID];

  id v9 = [v8 description];
  uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v12 = v11;

  uint64_t v22 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v14 + v13, (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  v20[4] = v20[1];
  v20[5] = v10;
  v20[6] = v12;
  v20[7] = sub_100334490;
  v20[8] = &v21;
  id v15 = a1;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_100333898;
  *(void *)(v16 + 24) = v14;
  swift_retain();
  uint64_t v17 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1E8);
  uint64_t v18 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v18;
}

uint64_t sub_10032743C(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7 = sub_10003B754(a4);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1[4];
  sub_100038D28(a1, v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, a3, v7, v7, v8, v9);
}

uint64_t sub_1003274C4(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, char *, uint64_t), uint64_t *a4)
{
  uint64_t v44 = a4;
  NSString v42 = a3;
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v43 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  id v15 = (char *)&v41 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (id *)((char *)&v41 - v16);
  uint64_t v20 = v18 + 16;
  id v19 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v45 = a1;
  uint64_t v21 = a1;
  uint64_t v22 = v18;
  v19((char *)&v41 - v16, v21, v10);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v22 + 88))(v17, v10);
  if (v23 == enum case for REMNavigationSpecifier.account(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);

    uint64_t v24 = (char *)v17 + *(int *)(sub_10003B754(&qword_100793BB8) + 48);
    uint64_t v25 = type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
LABEL_6:
    (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v24, v25);
LABEL_7:
    if (qword_1007854D0 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100018BF8(v26, (uint64_t)qword_10079BB90);
    v19(v15, v45, v10);
    uint64_t v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v41 = v20;
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      v47[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315138;
      NSString v42 = (uint64_t (*)(uint64_t, char *, uint64_t))(v29 + 4);
      v19(v43, (uint64_t)v15, v10);
      uint64_t v30 = String.init<A>(describing:)();
      uint64_t v46 = sub_1000385A8(v30, v31, v47);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v10);
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Tried to navigate to unknown smart list {navigation: %s}", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v10);
    }

    unint64_t v32 = self;
    v47[0] = 0;
    v47[1] = 0xE000000000000000;
    _StringGuts.grow(_:)(42);
    v33._object = (void *)0x80000001006B63B0;
    v33._countAndFlagsBits = 0xD000000000000028;
    String.append(_:)(v33);
    _print_unlocked<A, B>(_:_:)();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v35 = [v32 internalErrorWithDebugDescription:v34];

    sub_10003B754(v44);
    swift_allocObject();
    return Promise.init(error:)();
  }
  if (v23 == enum case for REMNavigationSpecifier.list(_:)
    || v23 == enum case for REMNavigationSpecifier.customSmartList(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);

    uint64_t v24 = (char *)v17 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
    uint64_t v25 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
    goto LABEL_6;
  }
  if (v23 == enum case for REMNavigationSpecifier.newList(_:)) {
    goto LABEL_15;
  }
  if (v23 == enum case for REMNavigationSpecifier.reminder(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);

    uint64_t v24 = (char *)v17 + *(int *)(sub_10003B754((uint64_t *)&unk_10078AC20) + 48);
    uint64_t v25 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
    goto LABEL_6;
  }
  if (v23 == enum case for REMNavigationSpecifier.section(_:)
    || v23 == enum case for REMNavigationSpecifier.smartListSection(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);

    uint64_t v24 = (char *)v17 + *(int *)(sub_10003B754(&qword_100793BB0) + 48);
    uint64_t v25 = type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
    goto LABEL_6;
  }
  if (v23 == enum case for REMNavigationSpecifier.root(_:)) {
    goto LABEL_15;
  }
  if (v23 == enum case for REMNavigationSpecifier.today(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 0;
LABEL_30:
    uint64_t v36 = v42(v40, v9, v39);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v6);
    return v36;
  }
  if (v23 == enum case for REMNavigationSpecifier.scheduled(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 1;
    goto LABEL_30;
  }
  if (v23 == enum case for REMNavigationSpecifier.allReminders(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 2;
    goto LABEL_30;
  }
  if (v23 == enum case for REMNavigationSpecifier.flagged(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 3;
    goto LABEL_30;
  }
  if (v23 == enum case for REMNavigationSpecifier.search(_:)) {
    goto LABEL_15;
  }
  if (v23 == enum case for REMNavigationSpecifier.assigned(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 4;
    goto LABEL_30;
  }
  if (v23 == enum case for REMNavigationSpecifier.siriFoundInApps(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 5;
    goto LABEL_30;
  }
  if (v23 == enum case for REMNavigationSpecifier.tagged(_:)) {
    goto LABEL_15;
  }
  if (v23 == enum case for REMNavigationSpecifier.completed(_:))
  {
    (*(void (**)(id *, uint64_t))(v22 + 96))(v17, v10);
    uint64_t v38 = v7;
    (*(void (**)(char *, id *, uint64_t))(v7 + 32))(v9, v17, v6);
    uint64_t v39 = a2 & 1;
    uint64_t v40 = 6;
    goto LABEL_30;
  }
  if (v23 == enum case for REMNavigationSpecifier.publicTemplate(_:))
  {
LABEL_15:
    (*(void (**)(id *, uint64_t))(v22 + 8))(v17, v10);
    goto LABEL_7;
  }
  if (v23 == enum case for REMNavigationSpecifier.newReminder(_:)
    || v23 == enum case for REMNavigationSpecifier.requestLocationAuthorization(_:))
  {
    goto LABEL_7;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100327E40(int a1, uint64_t a2, int a3)
{
  int v46 = a3;
  int v47 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v51 = *(void *)(v7 - 8);
  *(void *)&long long v52 = v7;
  uint64_t v8 = *(void *)(v51 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  id v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - v11;
  __chkstk_darwin(v10);
  id v50 = (char *)&v45 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (id *)((char *)&v45 - v19);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v21((char *)&v45 - v19, a2, v14);
  int v22 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v22 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);

    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    v21(v18, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v26 = v51;
    uint64_t v25 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v51 + 48))(v6, 1, v52) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      uint64_t v27 = self;
      NSString v28 = String._bridgeToObjectiveC()();
      id v29 = [v27 internalErrorWithDebugDescription:v28];

      sub_10003B754(&qword_10079C8C0);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
      unint64_t v31 = v50;
      v30(v50, v6, v25);
      unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
      v32(v12, v31, v25);
      v32(v49, v12, v25);
      unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v48;
      *(void *)(v34 + 16) = v48;
      char v37 = v46;
      char v36 = v47;
      *(unsigned char *)(v34 + 24) = v47;
      *(unsigned char *)(v34 + 25) = v37 & 1;
      v30((char *)(v34 + v33), v12, v25);
      swift_beginAccess();
      sub_100016AFC(v35 + 96, (uint64_t)v53);
      swift_retain();
      unsigned __int8 v38 = sub_10034D834();
      sub_100016998((uint64_t)v53);
      if (v38 == 7 || (sub_10032D8C4(v38, v36) & 1) == 0)
      {
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v41((uint64_t)v49, v25);
        sub_10034812C(0);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = sub_10032FE74;
        *(void *)(v42 + 24) = v34;
        swift_retain();
        uint64_t v43 = (void *)zalgo.getter();
        uint64_t v23 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v41((uint64_t)v50, v25);
      }
      else
      {
        uint64_t v39 = (uint64_t)v49;
        uint64_t v23 = sub_10032C5A8(v35, v36, v37 & 1, (uint64_t)v49);
        uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v40(v39, v25);
        swift_release();
        v40((uint64_t)v50, v25);
      }
    }
    return v23;
  }
  if (v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v52 = *(_OWORD *)(v48 + 32);
  v53[0] = v52;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  uint64_t v23 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v23;
}

uint64_t sub_100328490(int a1, uint64_t a2, int a3)
{
  int v47 = a3;
  int v48 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v52 = *(void *)(v7 - 8);
  *(void *)&long long v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  __chkstk_darwin(v7);
  id v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v46 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v46 - v20, a2, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v6, 1, v53) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      NSString v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_10079B158);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      unint64_t v32 = v51;
      v31(v51, v6, v26);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v33(v11, v32, v26);
      v33(v50, v11, v26);
      unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v49;
      *(void *)(v35 + 16) = v49;
      char v38 = v47;
      char v37 = v48;
      *(unsigned char *)(v35 + 24) = v48;
      *(unsigned char *)(v35 + 25) = v38 & 1;
      v31((char *)(v35 + v34), v11, v26);
      swift_beginAccess();
      sub_100016AFC(v36 + 96, (uint64_t)v54);
      swift_retain();
      unsigned __int8 v39 = sub_10034D834();
      sub_100016998((uint64_t)v54);
      if (v39 == 7 || (sub_10032D8C4(v39, v37) & 1) == 0)
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42((uint64_t)v50, v26);
        sub_10034812C(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_10033233C;
        *(void *)(v43 + 24) = v35;
        swift_retain();
        uint64_t v44 = (void *)zalgo.getter();
        sub_10003B754(&qword_100791C48);
        uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v42((uint64_t)v51, v26);
      }
      else
      {
        uint64_t v40 = (uint64_t)v50;
        uint64_t v24 = sub_10032C7F0(v36, v37, v38 & 1, (uint64_t)v50);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v41(v40, v26);
        swift_release();
        v41((uint64_t)v51, v26);
      }
    }
    return v24;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v53 = *(_OWORD *)(v49 + 32);
  v54[0] = v53;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_100791C48);
  uint64_t v24 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v24;
}

uint64_t sub_100328AE8(int a1, uint64_t a2, int a3)
{
  int v46 = a3;
  int v47 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v51 = *(void *)(v7 - 8);
  *(void *)&long long v52 = v7;
  uint64_t v8 = *(void *)(v51 + 64);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v49 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - v11;
  __chkstk_darwin(v10);
  id v50 = (char *)&v45 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (id *)((char *)&v45 - v19);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v21((char *)&v45 - v19, a2, v14);
  int v22 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v20, v14);
  if (v22 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);

    goto LABEL_12;
  }
  if (v22 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v20, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    v21(v18, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v26 = v51;
    uint64_t v25 = v52;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v51 + 48))(v6, 1, v52) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      uint64_t v27 = self;
      NSString v28 = String._bridgeToObjectiveC()();
      id v29 = [v27 internalErrorWithDebugDescription:v28];

      sub_10003B754(&qword_10079B188);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      id v30 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
      unint64_t v31 = v50;
      v30(v50, v6, v25);
      unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
      v32(v12, v31, v25);
      v32(v49, v12, v25);
      unint64_t v33 = (*(unsigned __int8 *)(v26 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v34 = swift_allocObject();
      uint64_t v35 = v48;
      *(void *)(v34 + 16) = v48;
      char v37 = v46;
      char v36 = v47;
      *(unsigned char *)(v34 + 24) = v47;
      *(unsigned char *)(v34 + 25) = v37 & 1;
      v30((char *)(v34 + v33), v12, v25);
      swift_beginAccess();
      sub_100016AFC(v35 + 96, (uint64_t)v53);
      swift_retain();
      unsigned __int8 v38 = sub_10034D834();
      sub_100016998((uint64_t)v53);
      if (v38 == 7 || (sub_10032D8C4(v38, v36) & 1) == 0)
      {
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v41((uint64_t)v49, v25);
        sub_10034812C(0);
        uint64_t v42 = swift_allocObject();
        *(void *)(v42 + 16) = sub_100331078;
        *(void *)(v42 + 24) = v34;
        swift_retain();
        uint64_t v43 = (void *)zalgo.getter();
        sub_10003B754(&qword_100799F40);
        uint64_t v23 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v41((uint64_t)v50, v25);
      }
      else
      {
        uint64_t v39 = (uint64_t)v49;
        uint64_t v23 = sub_10032CA38(v35, v36, v37 & 1, (uint64_t)v49);
        uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
        v40(v39, v25);
        swift_release();
        v40((uint64_t)v50, v25);
      }
    }
    return v23;
  }
  if (v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v22 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v52 = *(_OWORD *)(v48 + 32);
  v53[0] = v52;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_100799F40);
  uint64_t v23 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v23;
}

uint64_t sub_100329140(int a1, uint64_t a2, int a3)
{
  int v47 = a3;
  int v48 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v52 = *(void *)(v7 - 8);
  *(void *)&long long v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  __chkstk_darwin(v7);
  id v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v46 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v46 - v20, a2, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v6, 1, v53) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      NSString v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_10079B160);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      unint64_t v32 = v51;
      v31(v51, v6, v26);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v33(v11, v32, v26);
      v33(v50, v11, v26);
      unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v49;
      *(void *)(v35 + 16) = v49;
      char v38 = v47;
      char v37 = v48;
      *(unsigned char *)(v35 + 24) = v48;
      *(unsigned char *)(v35 + 25) = v38 & 1;
      v31((char *)(v35 + v34), v11, v26);
      swift_beginAccess();
      sub_100016AFC(v36 + 96, (uint64_t)v54);
      swift_retain();
      unsigned __int8 v39 = sub_10034D834();
      sub_100016998((uint64_t)v54);
      if (v39 == 7 || (sub_10032D8C4(v39, v37) & 1) == 0)
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42((uint64_t)v50, v26);
        sub_10034812C(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_100331D8C;
        *(void *)(v43 + 24) = v35;
        swift_retain();
        uint64_t v44 = (void *)zalgo.getter();
        sub_10003B754(&qword_100799F38);
        uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v42((uint64_t)v51, v26);
      }
      else
      {
        uint64_t v40 = (uint64_t)v50;
        uint64_t v24 = sub_10032CC88(v36, v37, v38 & 1, (uint64_t)v50);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v41(v40, v26);
        swift_release();
        v41((uint64_t)v51, v26);
      }
    }
    return v24;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v53 = *(_OWORD *)(v49 + 32);
  v54[0] = v53;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_100799F38);
  uint64_t v24 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v24;
}

uint64_t sub_100329798(int a1, uint64_t a2, int a3)
{
  int v47 = a3;
  int v48 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v52 = *(void *)(v7 - 8);
  *(void *)&long long v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  __chkstk_darwin(v7);
  id v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v46 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v46 - v20, a2, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v6, 1, v53) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      NSString v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_10079B1B0);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      unint64_t v32 = v51;
      v31(v51, v6, v26);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v33(v11, v32, v26);
      v33(v50, v11, v26);
      unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v49;
      *(void *)(v35 + 16) = v49;
      char v38 = v47;
      char v37 = v48;
      *(unsigned char *)(v35 + 24) = v48;
      *(unsigned char *)(v35 + 25) = v38 & 1;
      v31((char *)(v35 + v34), v11, v26);
      swift_beginAccess();
      sub_100016AFC(v36 + 96, (uint64_t)v54);
      swift_retain();
      unsigned __int8 v39 = sub_10034D834();
      sub_100016998((uint64_t)v54);
      if (v39 == 7 || (sub_10032D8C4(v39, v37) & 1) == 0)
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42((uint64_t)v50, v26);
        sub_10034812C(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_1003328A8;
        *(void *)(v43 + 24) = v35;
        swift_retain();
        uint64_t v44 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1A0);
        uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v42((uint64_t)v51, v26);
      }
      else
      {
        uint64_t v40 = (uint64_t)v50;
        uint64_t v24 = sub_10032CED8(v36, v37, v38 & 1, (uint64_t)v50);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v41(v40, v26);
        swift_release();
        v41((uint64_t)v51, v26);
      }
    }
    return v24;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v53 = *(_OWORD *)(v49 + 32);
  v54[0] = v53;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_10079B1A0);
  uint64_t v24 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v24;
}

uint64_t sub_100329DF0(int a1, uint64_t a2, int a3)
{
  int v47 = a3;
  int v48 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v52 = *(void *)(v7 - 8);
  *(void *)&long long v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  __chkstk_darwin(v7);
  id v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v46 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v46 - v20, a2, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v6, 1, v53) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      NSString v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_10079B1C8);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      unint64_t v32 = v51;
      v31(v51, v6, v26);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v33(v11, v32, v26);
      v33(v50, v11, v26);
      unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v49;
      *(void *)(v35 + 16) = v49;
      char v38 = v47;
      char v37 = v48;
      *(unsigned char *)(v35 + 24) = v48;
      *(unsigned char *)(v35 + 25) = v38 & 1;
      v31((char *)(v35 + v34), v11, v26);
      swift_beginAccess();
      sub_100016AFC(v36 + 96, (uint64_t)v54);
      swift_retain();
      unsigned __int8 v39 = sub_10034D834();
      sub_100016998((uint64_t)v54);
      if (v39 == 7 || (sub_10032D8C4(v39, v37) & 1) == 0)
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42((uint64_t)v50, v26);
        sub_10034812C(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_100332DE4;
        *(void *)(v43 + 24) = v35;
        swift_retain();
        uint64_t v44 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1B8);
        uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v42((uint64_t)v51, v26);
      }
      else
      {
        uint64_t v40 = (uint64_t)v50;
        uint64_t v24 = sub_10032D128(v36, v37, v38 & 1, (uint64_t)v50);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v41(v40, v26);
        swift_release();
        v41((uint64_t)v51, v26);
      }
    }
    return v24;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v53 = *(_OWORD *)(v49 + 32);
  v54[0] = v53;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_10079B1B8);
  uint64_t v24 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v24;
}

uint64_t sub_10032A448(int a1, uint64_t a2, int a3)
{
  int v47 = a3;
  int v48 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v52 = *(void *)(v7 - 8);
  *(void *)&long long v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  __chkstk_darwin(v7);
  id v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v46 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v46 - v20, a2, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v6, 1, v53) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      NSString v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_10079B1E0);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      unint64_t v32 = v51;
      v31(v51, v6, v26);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v33(v11, v32, v26);
      v33(v50, v11, v26);
      unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v49;
      *(void *)(v35 + 16) = v49;
      char v38 = v47;
      char v37 = v48;
      *(unsigned char *)(v35 + 24) = v48;
      *(unsigned char *)(v35 + 25) = v38 & 1;
      v31((char *)(v35 + v34), v11, v26);
      swift_beginAccess();
      sub_100016AFC(v36 + 96, (uint64_t)v54);
      swift_retain();
      unsigned __int8 v39 = sub_10034D834();
      sub_100016998((uint64_t)v54);
      if (v39 == 7 || (sub_10032D8C4(v39, v37) & 1) == 0)
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42((uint64_t)v50, v26);
        sub_10034812C(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_100333320;
        *(void *)(v43 + 24) = v35;
        swift_retain();
        uint64_t v44 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1D0);
        uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v42((uint64_t)v51, v26);
      }
      else
      {
        uint64_t v40 = (uint64_t)v50;
        uint64_t v24 = sub_10032D378(v36, v37, v38 & 1, (uint64_t)v50);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v41(v40, v26);
        swift_release();
        v41((uint64_t)v51, v26);
      }
    }
    return v24;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v53 = *(_OWORD *)(v49 + 32);
  v54[0] = v53;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_10079B1D0);
  uint64_t v24 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v24;
}

uint64_t sub_10032AAA0(int a1, uint64_t a2, int a3)
{
  int v47 = a3;
  int v48 = a1;
  uint64_t v4 = sub_10003B754(&qword_10079B150);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v52 = *(void *)(v7 - 8);
  *(void *)&long long v53 = v7;
  uint64_t v8 = *(void *)(v52 + 64);
  __chkstk_darwin(v7);
  id v50 = (char *)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v46 - v10;
  __chkstk_darwin(v12);
  uint64_t v51 = (char *)&v46 - v13;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v19 = __chkstk_darwin(v18);
  uint64_t v21 = (id *)((char *)&v46 - v20);
  int v22 = *(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16);
  v22((char *)&v46 - v20, a2, v14, v19);
  int v23 = (*(uint64_t (**)(id *, uint64_t))(v15 + 88))(v21, v14);
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);

    goto LABEL_12;
  }
  if (v23 == enum case for REMNavigationSpecifier.SmartListPathSpecifier.showEdits(_:))
  {
    (*(void (**)(id *, uint64_t))(v15 + 96))(v21, v14);
    swift_bridgeObjectRelease();
LABEL_12:
    ((void (*)(char *, uint64_t, uint64_t))v22)(v17, a2, v14);
    REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
    uint64_t v27 = v52;
    uint64_t v26 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, void))(v52 + 48))(v6, 1, v53) == 1)
    {
      sub_10003B6F8((uint64_t)v6, &qword_10079B150);
      NSString v28 = self;
      NSString v29 = String._bridgeToObjectiveC()();
      id v30 = [v28 internalErrorWithDebugDescription:v29];

      sub_10003B754(&qword_10079B1F8);
      swift_allocObject();
      return Promise.init(error:)();
    }
    else
    {
      unint64_t v31 = *(void (**)(char *, char *, uint64_t))(v27 + 32);
      unint64_t v32 = v51;
      v31(v51, v6, v26);
      unint64_t v33 = *(void (**)(char *, char *, uint64_t))(v27 + 16);
      v33(v11, v32, v26);
      v33(v50, v11, v26);
      unint64_t v34 = (*(unsigned __int8 *)(v27 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
      uint64_t v35 = swift_allocObject();
      uint64_t v36 = v49;
      *(void *)(v35 + 16) = v49;
      char v38 = v47;
      char v37 = v48;
      *(unsigned char *)(v35 + 24) = v48;
      *(unsigned char *)(v35 + 25) = v38 & 1;
      v31((char *)(v35 + v34), v11, v26);
      swift_beginAccess();
      sub_100016AFC(v36 + 96, (uint64_t)v54);
      swift_retain();
      unsigned __int8 v39 = sub_10034D834();
      sub_100016998((uint64_t)v54);
      if (v39 == 7 || (sub_10032D8C4(v39, v37) & 1) == 0)
      {
        uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v42((uint64_t)v50, v26);
        sub_10034812C(0);
        uint64_t v43 = swift_allocObject();
        *(void *)(v43 + 16) = sub_100333CCC;
        *(void *)(v43 + 24) = v35;
        swift_retain();
        uint64_t v44 = (void *)zalgo.getter();
        sub_10003B754(&qword_10079B1E8);
        uint64_t v24 = dispatch thunk of Promise.then<A>(on:closure:)();
        swift_release();
        swift_release();
        swift_release();

        v42((uint64_t)v51, v26);
      }
      else
      {
        uint64_t v40 = (uint64_t)v50;
        uint64_t v24 = sub_10032D5C8(v36, v37, v38 & 1, (uint64_t)v50);
        uint64_t v41 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
        v41(v40, v26);
        swift_release();
        v41((uint64_t)v51, v26);
      }
    }
    return v24;
  }
  if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showInAccountsList(_:))
  {
    if (v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:)
      && v23 != enum case for REMNavigationSpecifier.SmartListPathSpecifier.newReminder(_:))
    {
      uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return result;
    }
    goto LABEL_12;
  }
  long long v53 = *(_OWORD *)(v49 + 32);
  v54[0] = v53;
  sub_10003B754(&qword_10079B160);
  swift_allocObject();
  swift_unknownObjectRetain();
  Promise.init(value:)();
  sub_10003B754(&qword_10079B1E8);
  uint64_t v24 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v24;
}

uint64_t sub_10032B0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
  int v10 = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 88))(v9, v6);
  if (v10 == enum case for REMNavigationSpecifier.SearchPathSpecifier.showContents(_:))
  {
    (*(void (**)(uint64_t *, uint64_t))(v7 + 96))(v9, v6);
    uint64_t v12 = *v9;
    unint64_t v11 = v9[1];
    if (!swift_unknownObjectWeakLoadStrong())
    {
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_unknownObjectRetain();
    sub_100084068(v12, v11);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  if (v10 == enum case for REMNavigationSpecifier.SearchPathSpecifier.focusInAccountsList(_:))
  {
    if (!swift_unknownObjectWeakLoadStrong())
    {
LABEL_9:
      uint64_t v13 = self;
      NSString v14 = String._bridgeToObjectiveC()();
      id v15 = [v13 internalErrorWithDebugDescription:v14];

      sub_10003B754(a4);
      swift_allocObject();
      return Promise.init(error:)();
    }
    swift_unknownObjectRetain();
    sub_100084068(0, 0xE000000000000000);
    swift_unknownObjectRelease();
LABEL_7:
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10032B344(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v11 + 88))(v13, v10);
  if (v14 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showContents(_:))
  {
    (*(void (**)(char *, uint64_t))(v11 + 96))(v13, v10);
    id v15 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v15(v9, v13, v3);
    sub_10034812C(0);
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
    unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v1;
    v15((char *)(v17 + v16), v7, v3);
    swift_retain();
    uint64_t v18 = (void *)zalgo.getter();
    uint64_t v19 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    return v19;
  }
  if (v14 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showInAccount(_:)) {
    return sub_10034812C(0);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10032B630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v26 = a4;
  uint64_t v27 = a5;
  v25[0] = a2;
  v25[1] = a3;
  uint64_t v7 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - v12;
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a1, v14);
  int v18 = (*(uint64_t (**)(char *, uint64_t))(v15 + 88))(v17, v14);
  if (v18 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showContents(_:))
  {
    (*(void (**)(char *, uint64_t))(v15 + 96))(v17, v14);
    uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v19(v13, v17, v7);
    v25[0] = sub_10034812C(0);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    unint64_t v20 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v5;
    v19((char *)(v21 + v20), v11, v7);
    swift_retain();
    int v22 = (void *)zalgo.getter();
    sub_10003B754(v26);
    uint64_t v23 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return v23;
  }
  if (v18 == enum case for REMNavigationSpecifier.TaggedPathSpecifier.showInAccount(_:)) {
    return ((uint64_t (*)(void))v25[0])(0);
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_10032B924(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032BAB4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032BC48(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_10003B754(&qword_100799F40);
  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032BDD8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_10003B754(&qword_100799F38);
  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032BF68(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_10003B754(&qword_10079B1A0);
  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032C0F8(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_10003B754(&qword_10079B1B8);
  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032C288(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_10003B754(&qword_10079B1D0);
  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032C418(uint64_t a1, uint64_t a2)
{
  type metadata accessor for REMHashtagLabelSpecifier();
  sub_10032FF8C(&qword_10079B168, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  uint64_t v3 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v5 = v4;
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v3;
  v6[3] = v5;
  v6[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  sub_10003B754(&qword_10079B1E8);
  uint64_t v8 = dispatch thunk of Promise.cast<A>(as:)();
  swift_release();
  return v8;
}

uint64_t sub_10032C5A8(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_10032FE8C;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10032FE9C;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032C7F0(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100332358;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032CA38(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100331094;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F40);
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032CC88(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100331DA8;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032CED8(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_1003328C4;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1A0);
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032D128(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100332E00;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1B8);
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032D378(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_10033333C;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1D0);
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032D5C8(uint64_t a1, char a2, char a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  v23[31] = a2;
  _print_unlocked<A, B>(_:_:)();
  v23[16] = a2;
  v23[17] = a3;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], a4, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v12 + v11, &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)], v8);
  uint64_t v18 = a1;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  uint64_t v21 = sub_100334614;
  int v22 = v23;
  sub_10003B754(&qword_100791C48);
  firstly<A>(closure:)();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_100333DF8;
  *(void *)(v13 + 24) = v12;
  swift_retain();
  uint64_t v14 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1E8);
  uint64_t v15 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v15;
}

uint64_t sub_10032D818(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_10003B754(a3);
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_100038D28(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 72))(a2, v5, v5, v6, v7);
}

uint64_t sub_10032D894(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10032D8C4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  uint64_t v3 = 0x6574656C706D6F63;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6574656C706D6F63;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x656C756465686373;
      break;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      uint64_t v5 = 7105633;
      break;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x64656767616C66;
      break;
    case 4:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x64656E6769737361;
      break;
    case 5:
      uint64_t v5 = 0x6E756F4669726973;
      unint64_t v6 = 0xEF737070416E4964;
      break;
    case 6:
      break;
    default:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x7961646F74;
      break;
  }
  switch(a2)
  {
    case 1:
      if (v5 == 0x656C756465686373) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xE300000000000000;
      if (v5 != 7105633) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x64656767616C66) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x64656E6769737361;
      goto LABEL_18;
    case 5:
      unint64_t v2 = 0xEF737070416E4964;
      if (v5 != 0x6E756F4669726973) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 6:
LABEL_18:
      if (v5 == v3) {
        goto LABEL_19;
      }
      goto LABEL_22;
    default:
      unint64_t v2 = 0xE500000000000000;
      if (v5 != 0x7961646F74) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10032DB10(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_10032DB38(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  id v97 = a2;
  uint64_t v98 = a3;
  uint64_t v101 = *a4;
  uint64_t v6 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v6 - 8);
  uint64_t v99 = (char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v94 = *(void *)(v8 - 8);
  uint64_t v95 = v8;
  uint64_t v9 = *(void *)(v94 + 64);
  __chkstk_darwin(v8);
  char v100 = (char *)v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v103 = v10;
  uint64_t v104 = v11;
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t v13 = __chkstk_darwin(v10);
  long long v96 = (char *)v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v84 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  uint64_t v19 = (char *)v84 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  int v22 = (char *)v84 - v21;
  __chkstk_darwin(v20);
  uint64_t v24 = (char *)v84 - v23;
  uint64_t v25 = a1;
  REMiCloudSharedItemSpecifier.PublicTemplate.uuid.getter();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (Strong)
  {
    swift_beginAccess();
    uint64_t v27 = a4[11];
    swift_bridgeObjectRetain();
    char v28 = sub_100458310((uint64_t)v24, v27);
    swift_bridgeObjectRelease();
    uint64_t v102 = v24;
    if (v28)
    {
      if (qword_1007854D0 != -1) {
        swift_once();
      }
      uint64_t v29 = type metadata accessor for Logger();
      sub_100018BF8(v29, (uint64_t)qword_10079BB90);
      uint64_t v30 = v104;
      (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v19, v102, v103);
      unint64_t v31 = Logger.logObject.getter();
      os_log_type_t v32 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        v106[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136315394;
        uint64_t v34 = sub_10034A820(v101);
        uint64_t v105 = sub_1000385A8(v34, v35, v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 12) = 2080;
        uint64_t v36 = UUID.uuidString.getter();
        uint64_t v105 = sub_1000385A8(v36, v37, v106);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        char v38 = *(void (**)(char *, uint64_t))(v30 + 8);
        unsigned __int8 v39 = v19;
        uint64_t v40 = v103;
        v38(v39, v103);
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s.showPublicTemplate(_:store:delegate:) Skipped because there is already a pending request to download the same public template and then show it. {templatePublicLinkURLUUID: %s}", (uint8_t *)v33, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        char v38 = *(void (**)(char *, uint64_t))(v30 + 8);
        uint64_t v83 = v19;
        uint64_t v40 = v103;
        v38(v83, v103);
      }
      return ((uint64_t (*)(char *, uint64_t))v38)(v102, v40);
    }
    else
    {
      swift_allocObject();
      swift_weakInit();
      swift_allocObject();
      swift_weakInit();
      type metadata accessor for TTRPotentiallyLongOperationPerformer();
      swift_allocObject();
      uint64_t v92 = TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)();
      uint64_t v88 = (void (*)(char *, char *, uint64_t))swift_allocObject();
      swift_weakInit();
      uint64_t v86 = a4 + 11;
      uint64_t v53 = v104;
      uint64_t v54 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 16);
      v84[1] = v104 + 16;
      uint64_t v85 = v54;
      id v55 = v16;
      uint64_t v93 = v16;
      uint64_t v56 = v103;
      v54((uint64_t)v16, v102, v103);
      uint64_t v57 = v94;
      uint64_t v58 = v25;
      uint64_t v59 = v95;
      (*(void (**)(char *, uint64_t, uint64_t))(v94 + 16))(v100, v58, v95);
      uint64_t v89 = *(unsigned __int8 *)(v53 + 80);
      uint64_t v60 = (v89 + 24) & ~v89;
      uint64_t v91 = v89 | 7;
      uint64_t v90 = v12 + 7;
      unint64_t v61 = (v12 + 7 + v60) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = (*(unsigned __int8 *)(v57 + 80) + v61 + 8) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = v88;
      uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
      uint64_t v87 = v53 + 32;
      uint64_t v88 = v64;
      v64((char *)(v63 + v60), v55, v56);
      id v65 = v97;
      *(void *)(v63 + v61) = v97;
      (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v63 + v62, v100, v59);
      uint64_t v66 = (void *)(v63 + ((v9 + v62 + 7) & 0xFFFFFFFFFFFFFFF8));
      *uint64_t v66 = v98;
      v66[1] = &off_100743578;
      uint64_t v67 = v96;
      uint64_t v68 = v102;
      uint64_t v69 = v85;
      v85((uint64_t)v96, v102, v56);
      swift_beginAccess();
      id v97 = v65;
      swift_retain();
      uint64_t v70 = (uint64_t)v93;
      sub_1005A4D40((uint64_t)v93, v67);
      swift_endAccess();
      uint64_t v71 = *(char **)(v104 + 8);
      v104 += 8;
      char v100 = v71;
      ((void (*)(uint64_t, uint64_t))v71)(v70, v56);
      uint64_t v72 = type metadata accessor for TaskPriority();
      uint64_t v73 = (uint64_t)v99;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v99, 1, 1, v72);
      v69(v70, v68, v56);
      type metadata accessor for MainActor();
      id v74 = v97;
      uint64_t v75 = v92;
      swift_retain();
      swift_retain();
      uint64_t v76 = static MainActor.shared.getter();
      uint64_t v77 = (v89 + 48) & ~v89;
      unint64_t v78 = (v90 + v77) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v79 = (char *)swift_allocObject();
      *((void *)v79 + 2) = v76;
      *((void *)v79 + 3) = &protocol witness table for MainActor;
      *((void *)v79 + 4) = v75;
      *((void *)v79 + 5) = v74;
      v88(&v79[v77], v93, v56);
      unint64_t v80 = (uint64_t (**)(void *, char))&v79[v78];
      *unint64_t v80 = sub_100330268;
      v80[1] = (uint64_t (*)(void *, char))v63;
      *(void *)&v79[(v78 + 23) & 0xFFFFFFFFFFFFFFF8] = v101;
      sub_1000286A4(v73, (uint64_t)&unk_10079B178, (uint64_t)v79);
      swift_release();
      swift_release();
      swift_release();
      return ((uint64_t (*)(char *, uint64_t))v100)(v102, v56);
    }
  }
  else
  {
    if (qword_1007854D0 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100018BF8(v41, (uint64_t)qword_10079BB90);
    uint64_t v42 = v104;
    (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v22, v24, v103);
    uint64_t v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      v107[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136315394;
      uint64_t v46 = sub_10034A820(v101);
      v106[0] = sub_1000385A8(v46, v47, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v48 = UUID.uuidString.getter();
      v106[0] = sub_1000385A8(v48, v49, v107);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      id v50 = *(void (**)(char *, uint64_t))(v42 + 8);
      uint64_t v51 = v103;
      v50(v22, v103);
      _os_log_impl((void *)&_mh_execute_header, v43, v44, "%s.showPublicTemplate(_:store:delegate:) Skipped because 'viewController' is nil and cannot present a modal view for showing public template. {templatePublicLinkURLUUID: %s}", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return ((uint64_t (*)(char *, uint64_t))v50)(v24, v51);
    }
    else
    {

      uint64_t v81 = *(void (**)(char *, uint64_t))(v42 + 8);
      uint64_t v82 = v103;
      v81(v22, v103);
      return ((uint64_t (*)(char *, uint64_t))v81)(v24, v82);
    }
  }
}

uint64_t sub_10032E5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return firstly<A>(closure:)();
}

uint64_t sub_10032E67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return firstly<A>(closure:)();
}

uint64_t sub_10032E6F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 32);
  v4[3] = swift_getObjectType();
  v4[0] = v2;
  swift_unknownObjectRetain();
  throwingCast<A>(_:as:failureMessage:)();
  return sub_100038CD8((uint64_t)v4);
}

uint64_t sub_10032E780(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *(void *)(a2 + 32);
  v6[3] = swift_getObjectType();
  v6[0] = v4;
  sub_10003B754(a3);
  swift_unknownObjectRetain();
  throwingCast<A>(_:as:failureMessage:)();
  return sub_100038CD8((uint64_t)v6);
}

void *sub_10032E810(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (void **)((char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_10034C2EC() >= 2u)
  {
    *uint64_t v17 = a2 & 1;
    v17[1] = 0;
    uint64_t v39 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.revealSubtasks(_:);
    uint64_t v40 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 104))(v17, v39, v40);
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for REMNavigationSpecifier.ReminderPathSpecifier.showInList(_:), v14);
    sub_1003236A8(a1, (uint64_t)v17);
    swift_release();
    return (void *)(*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  else
  {
    uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      *uint64_t v17 = a2 & 1;
      v17[1] = 1;
      uint64_t v19 = enum case for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier.revealSubtasks(_:);
      id v45 = result;
      uint64_t v20 = type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 104))(v17, v19, v20);
      (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, enum case for REMNavigationSpecifier.ReminderPathSpecifier.showInList(_:), v14);
      id v21 = [a1 list];
      id v22 = [a1 store];
      uint64_t v42 = a3;
      id v23 = v22;
      uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ItemID();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v10, 1, 1, v24);
      uint64_t v43 = a1;
      uint64_t v44 = v14;
      uint64_t v25 = *(void **)(a4 + 56);
      sub_10003B694((uint64_t)v10, (uint64_t)v13 + v11[5], (uint64_t *)&unk_10078E360);
      *uint64_t v13 = v23;
      *(void **)((char *)v13 + v11[6]) = v25;
      uint64_t v26 = v11[7];
      long long v41 = *(_OWORD *)(a4 + 64);
      *(_OWORD *)((char *)v13 + v26) = v41;
      *((unsigned char *)v13 + v11[8]) = 0;
      swift_retain();
      swift_unknownObjectRetain();
      sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_10078E360);
      type metadata accessor for TTRIShowRemindersInListAssembly();
      id v27 = v21;
      char v28 = sub_1005DE950(v47, v13, v21, v42, (uint64_t)&off_100743650, 0);

      uint64_t v29 = type metadata accessor for TTRIRemindersListAssembly();
      uint64_t v30 = v48;
      uint64_t v31 = v49;
      os_log_type_t v32 = sub_100038D28(v47, v48);
      v46[3] = v30;
      uint64_t v33 = *(void *)(v31 + 8);
      v46[4] = v33;
      uint64_t v34 = sub_1000394A8(v46);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v30 - 8) + 16))(v34, v32, v30);
      id v35 = sub_10005772C((uint64_t)v28, (uint64_t)v34, v29, v30, v33);
      sub_100038CD8((uint64_t)v46);
      id v36 = v45;
      [v45 presentViewController:v35 animated:1 completion:0];
      uint64_t v37 = v48;
      uint64_t v38 = v49;
      sub_100038D28(v47, v48);
      (*(void (**)(void *, char *, char *, char *, uint64_t))(*(void *)(v38 + 8) + 40))(v43, v17, &type metadata for Any[8], &type metadata for Any[8], v37);

      swift_release();
      sub_10032F3DC((uint64_t)v13, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v44);
      return (void *)sub_100038CD8((uint64_t)v47);
    }
  }
  return result;
}

uint64_t sub_10032ED24(int a1, int a2)
{
  return sub_100348A5C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10032ED2C()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_10032ED44(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_100038D28(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v7 + 40))(v4, v5, &type metadata for Any[8], &type metadata for Any[8], v6, v7);
}

void sub_10032EE04(uint64_t a1)
{
  sub_100316710(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_10032EE24(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for TTRUndoNavigationRequest();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_10003B754(&qword_1007AD700);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - v14;
  sub_100038D28((void *)(v1 + 48), *(void *)(v1 + 72));
  if (sub_10034C2EC() == 2)
  {
    TTRUndoNavigationRequest.navigationSpecifier.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {
      sub_10003B6F8((uint64_t)v8, &qword_1007AD700);
      if (qword_100785498 != -1) {
        swift_once();
      }
      uint64_t v16 = type metadata accessor for Logger();
      sub_100018BF8(v16, (uint64_t)qword_10079B010);
      sub_1003340CC(a1, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRUndoNavigationRequest);
      uint64_t v17 = Logger.logObject.getter();
      os_log_type_t v18 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v17, v18))
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136315138;
        uint64_t v20 = TTRUndoNavigationRequest.description.getter();
        uint64_t v32 = sub_1000385A8(v20, v21, &v33);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        sub_10032F3DC((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRUndoNavigationRequest);
        _os_log_impl((void *)&_mh_execute_header, v17, v18, "TTRIRootPresenter: cannot perform undo navigation; no navigationSpecifier {request: %s}",
          v19,
          0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_10032F3DC((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRUndoNavigationRequest);
      }
    }
    else
    {
      uint64_t v31 = *(NSObject **)(v10 + 32);
      ((void (*)(char *, char *, uint64_t))v31)(v15, v8, v9);
      uint64_t v26 = swift_allocObject();
      swift_weakInit();
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v9);
      unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v28 = swift_allocObject();
      *(void *)(v28 + 16) = v26;
      ((void (*)(unint64_t, char *, uint64_t))v31)(v28 + v27, v12, v9);
      *(void *)(v28 + ((v11 + v27 + 7) & 0xFFFFFFFFFFFFFFF8)) = 0;
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = sub_10032F454;
      *(void *)(v29 + 24) = v28;
      swift_retain();
      swift_retain();
      TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    }
  }
  else
  {
    if (qword_100785498 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100018BF8(v22, (uint64_t)qword_10079B010);
    uint64_t v31 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v31, v23))
    {
      uint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v31, v23, "TTRIRootPresenter: skip undo navigation because only one child is visible", v24, 2u);
      swift_slowDealloc();
    }
    os_log_t v25 = v31;
  }
}

uint64_t sub_10032F3DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10032F43C()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier);
}

uint64_t sub_10032F454()
{
  return sub_100334244();
}

uint64_t sub_10032F46C()
{
  return sub_10030A3CC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10032F47C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10003D2E4;
  return sub_1003163B8(a1, v4, v5, v6);
}

uint64_t sub_10032F530()
{
  return sub_100316EA8();
}

uint64_t sub_10032F538()
{
  return sub_10031682C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_10032F540()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_10032F558(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079C8C0);
}

uint64_t sub_10032F578()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_10032F590(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1003236A8);
}

uint64_t sub_10032F5D0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_10032F5E8()
{
  type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  sub_100038D28((void *)(*(void *)(v0 + 16) + 48), *(void *)(*(void *)(v0 + 16) + 72));
  return firstly<A>(closure:)();
}

uint64_t sub_10032F6A4()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10032F6BC(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100326010);
}

uint64_t sub_10032F6FC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10032F714(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100324B5C);
}

uint64_t sub_10032F754()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_10032F76C()
{
  type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  sub_100038D28((void *)(*(void *)(v0 + 16) + 48), *(void *)(*(void *)(v0 + 16) + 72));
  return firstly<A>(closure:)();
}

uint64_t sub_10032F85C()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_10032F874(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_10032F8A0);
}

uint64_t sub_10032F8A0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_10032F9CC(uint64_t a1)
{
  return sub_10032E6F8(a1, v1);
}

uint64_t sub_10032F9E8()
{
  return sub_10031711C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_10032FA10()
{
  return sub_1003339C4(sub_10040DE08);
}

uint64_t sub_10032FA28()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10032FA58()
{
  return sub_100333A44(33);
}

uint64_t sub_10032FA60(int a1)
{
  return sub_1003485C8(a1, *(void *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_10032FA84(void *a1)
{
  return sub_10032FDBC(a1, (uint64_t)&unk_100743AC8, (uint64_t)sub_10032FABC);
}

uint64_t sub_10032FABC(void *a1)
{
  return sub_10032FAD4(a1);
}

uint64_t sub_10032FAD4(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return sub_10032315C(a1, v1 + v4, *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10032FB6C(int a1, int a2)
{
  return sub_100348A7C(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10032FB74()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10032FB8C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_100038D28(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v7 + 48))(v4, v5, &type metadata for Any[8], &type metadata for Any[8], v6, v7);
}

uint64_t sub_10032FC48(int a1, int a2)
{
  return sub_100348B84(a1, a2, *(id *)(v2 + 16));
}

uint64_t sub_10032FC50()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10032FC68(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  sub_100038D28(a1, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, char *, uint64_t, uint64_t))(v7 + 56))(v4, v5, &type metadata for Any[8], &type metadata for Any[8], v6, v7);
}

uint64_t sub_10032FD24()
{
  return sub_10031D514(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10032FD48()
{
  return sub_1003339C4((uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_10040DEDC);
}

uint64_t sub_10032FD60()
{
  return sub_100333A44(32);
}

uint64_t sub_10032FD68(int a1)
{
  return sub_10034881C(a1, *(void *)(v1 + 16), *(id *)(v1 + 24));
}

uint64_t sub_10032FD88(void *a1)
{
  return sub_10032FDBC(a1, (uint64_t)&unk_100743C30, (uint64_t)sub_10032FABC);
}

uint64_t sub_10032FDBC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  return sub_100322DEC(a1, v3 + v8, *(void **)(v3 + ((*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3);
}

uint64_t sub_10032FE74()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032C5A8);
}

uint64_t sub_10032FE8C(uint64_t a1, uint64_t a2)
{
  return sub_10034DC8C(a1, a2, *(unsigned char *)(v2 + 16), *(unsigned char *)(v2 + 17));
}

uint64_t sub_10032FE9C(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[4];
  sub_100038D28(a1, v5);
  return (*(uint64_t (**)(uint64_t, char *, char *, uint64_t, uint64_t))(v6 + 72))(v4, &type metadata for Any[8], &type metadata for Any[8], v5, v6);
}

uint64_t sub_10032FF48()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_10032FF60(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032B924);
}

uint64_t sub_10032FF8C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10032FFD4(uint64_t a1, uint64_t a2)
{
  return sub_100348C74(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_10032FFDC()
{
  return sub_10034D908(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10032FFEC(unsigned char *a1)
{
  return sub_10034D95C(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10033000C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100330044()
{
}

uint64_t sub_10033004C()
{
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10000C2D4;
  return sub_10034A8D0(v0);
}

uint64_t sub_1003300DC()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v12 = v3 | v8 | 7;
  unint64_t v10 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v10, v12);
}

uint64_t sub_100330268(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate() - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v2 + 16);
  uint64_t v11 = *(void **)(v2 + v7);
  uint64_t v12 = v2 + v9;
  uint64_t v13 = (uint64_t *)(v2 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];

  return sub_10034ACA0(a1, v4, v10, v2 + v6, v11, v12, v14, v15);
}

uint64_t sub_100330390()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_100330494(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = v1[5];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = *(void *)((char *)v1 + v6 + 8);
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v14;
  *uint64_t v14 = v2;
  v14[1] = sub_10003D2E4;
  return sub_10034B658(a1, v7, v8, v9, v10, v11, v12, v13);
}

uint64_t sub_1003305F0()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100330608(uint64_t a1)
{
  return sub_100330620(a1);
}

uint64_t sub_100330620(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier() - 8);
  return sub_100316B84(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_1003306B8()
{
  return sub_100316FFC();
}

uint64_t sub_1003306D8()
{
  return sub_100316F50(v0, &qword_100799F40);
}

uint64_t sub_100330710()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007442C0, &qword_100799F40, (uint64_t)sub_100330608);
}

uint64_t sub_100330750()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100330768(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B188);
}

uint64_t sub_100330788(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10032B0F8(a1, v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_100330830()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100330848(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100323BA4);
}

uint64_t sub_100330888()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1003308A0(uint64_t a1)
{
  return sub_100331264(a1, &qword_100799F40);
}

uint64_t sub_1003308D4()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1003308EC(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10032650C);
}

uint64_t sub_10033092C()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100330944(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100325058);
}

uint64_t sub_100330984()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_10033099C(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_100799F40);
}

uint64_t sub_1003309D0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_1003309E8(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_100330B48);
}

uint64_t sub_100330A14()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100330B48()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F40);
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100330C7C(uint64_t a1)
{
  return sub_10032E780(a1, v1, &qword_100799F40);
}

uint64_t sub_100330CA0()
{
  return sub_100318A14(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100330CC8()
{
  return sub_100333A44(33);
}

uint64_t sub_100330CD4(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100743FF0, &qword_100799F40, (uint64_t)sub_100330DD4);
}

uint64_t sub_100330D10(void *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  return sub_100322FA0(a1, v4 + v10, *(void **)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8)), a2, a3, a4);
}

uint64_t sub_100330DD4(void *a1)
{
  return sub_100330DF4(a1, &qword_100799F40);
}

uint64_t sub_100330DF4(void *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_100323404(a1, v2 + v6, *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_100330E9C()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100330EB4(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100799F40, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_100330EE8()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100330F00(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100799F40, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_100330F34(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(uint64_t, void, unint64_t, uint64_t))
{
  uint64_t v8 = *(void *)(a2(0) - 8);
  return a4(a1, *(void *)(v4 + 16), v4 + ((*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)), a3);
}

uint64_t sub_100330FB8()
{
  return sub_10031EB44(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100330FDC()
{
  return sub_100333A44(32);
}

uint64_t sub_100330FE8(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100744158, &qword_100799F40, (uint64_t)sub_100330DD4);
}

uint64_t sub_100331028()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100331040(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100799F40, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_100331078()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032CA38);
}

uint64_t sub_100331094(void *a1)
{
  return sub_100331DB4(a1, &qword_100799F40);
}

uint64_t sub_1003310A0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_1003310B8(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032BC48);
}

uint64_t sub_1003310E8()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100331100()
{
  return sub_10030DA74(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100331110()
{
  return sub_100316F50(v0, &qword_100799F38);
}

uint64_t sub_100331148()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007447C0, &qword_100799F38, (uint64_t)sub_100330608);
}

uint64_t sub_100331188()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_1003311A0(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B160);
}

uint64_t sub_1003311C0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_1003311D8(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100323E2C);
}

uint64_t sub_100331218()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100331230(uint64_t a1)
{
  return sub_100331264(a1, &qword_100799F38);
}

uint64_t sub_100331264(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier() - 8);
  return sub_10032E67C(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_1003312EC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100331304(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100326794);
}

uint64_t sub_100331344()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10033135C(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1003252E0);
}

uint64_t sub_10033139C()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1003313B4(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_100799F38);
}

uint64_t sub_1003313E8(uint64_t a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_10032E5F4(a1, *(void *)(v2 + 16), v2 + v6, *(void *)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), a2);
}

uint64_t sub_10033149C()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_1003314B4(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_1003314E0);
}

uint64_t sub_1003314E0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100331610@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100331B10(v1);
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_100331640()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1A0);
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100331774()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1B8);
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1003318A8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1D0);
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_1003319DC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100007128;
  *(void *)(v2 + 24) = v1;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v3 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  swift_retain();
  uint64_t v4 = (void *)zalgo.getter();
  sub_10003B754(&qword_10079B1E8);
  uint64_t v5 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v5;
}

uint64_t sub_100331B10(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  v4[3] = swift_getObjectType();
  v4[0] = v2;
  sub_10003B754(&qword_100799F38);
  swift_unknownObjectRetain();
  throwingCast<A>(_:as:failureMessage:)();
  uint64_t result = sub_100038CD8((uint64_t)v4);
  if (!v1) {
    return v4[4];
  }
  return result;
}

uint64_t sub_100331BA0()
{
  return sub_100319694(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100331BC8()
{
  return sub_100333A44(33);
}

uint64_t sub_100331BD4(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_1007444F0, &qword_100799F38, (uint64_t)sub_100331C14);
}

uint64_t sub_100331C14(void *a1)
{
  return sub_100330DF4(a1, &qword_100799F38);
}

uint64_t sub_100331C34()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100331C4C(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100799F38, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_100331C80()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100331C98(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100799F38, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_100331CCC()
{
  return sub_10031F660(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100331CF0()
{
  return sub_100333A44(32);
}

uint64_t sub_100331CFC(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100744658, &qword_100799F38, (uint64_t)sub_100331C14);
}

uint64_t sub_100331D3C()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100331D54(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100799F38, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_100331D8C()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032CC88);
}

uint64_t sub_100331DA8(void *a1)
{
  return sub_100331DB4(a1, &qword_100799F38);
}

uint64_t sub_100331DB4(void *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  return sub_10032D818(a1, v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a2);
}

uint64_t sub_100331E28()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100331E40(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032BDD8);
}

uint64_t sub_100331E70()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100331E88()
{
  return sub_10030BF00(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100331E98()
{
  return sub_100316F50(v0, &qword_100791C48);
}

uint64_t sub_100331ED0()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100744CC0, &qword_100791C48, (uint64_t)sub_100330608);
}

uint64_t sub_100331F10()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100331F28(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B158);
}

uint64_t sub_100331F48()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100331F60(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100323928);
}

uint64_t sub_100331FA0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100331FB8(uint64_t a1)
{
  return sub_100331264(a1, &qword_100791C48);
}

uint64_t sub_100331FEC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332004(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100326290);
}

uint64_t sub_100332044()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10033205C(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100324DDC);
}

uint64_t sub_10033209C()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1003320B4(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_100791C48);
}

uint64_t sub_1003320E8()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100332100(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_100330A14);
}

uint64_t sub_10033212C(uint64_t a1)
{
  return sub_10032E780(a1, v1, &qword_100791C48);
}

uint64_t sub_100332150()
{
  return sub_100317D94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100332178()
{
  return sub_100333A44(33);
}

uint64_t sub_100332184(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_1007449F0, &qword_100791C48, (uint64_t)sub_1003321C4);
}

uint64_t sub_1003321C4(void *a1)
{
  return sub_100330DF4(a1, &qword_100791C48);
}

uint64_t sub_1003321E4()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1003321FC(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100791C48, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_100332230()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332248(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_100791C48, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_10033227C()
{
  return sub_10031E028(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003322A0()
{
  return sub_100333A44(32);
}

uint64_t sub_1003322AC(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100744B58, &qword_100791C48, (uint64_t)sub_1003321C4);
}

uint64_t sub_1003322EC()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100332304(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_100791C48, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_10033233C()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032C7F0);
}

uint64_t sub_100332358(void *a1)
{
  return sub_100331DB4(a1, &qword_100791C48);
}

uint64_t sub_100332364()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_10033237C(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032BAB4);
}

uint64_t sub_1003323AC()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_1003323C4()
{
  return sub_10030F5E8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003323D4()
{
  return sub_100316F50(v0, &qword_10079B1A0);
}

uint64_t sub_10033240C()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007451C0, &qword_10079B1A0, (uint64_t)sub_100330608);
}

uint64_t sub_10033244C()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100332464(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B1B0);
}

uint64_t sub_100332484()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_10033249C(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1003240B4);
}

uint64_t sub_1003324DC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1003324F4(uint64_t a1)
{
  return sub_100331264(a1, &qword_10079B1A0);
}

uint64_t sub_100332528()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332540(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100326A1C);
}

uint64_t sub_100332580()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332598(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100325568);
}

uint64_t sub_1003325D8()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1003325F0(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_10079B1A0);
}

uint64_t sub_100332624()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_10033263C(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_100331640);
}

uint64_t sub_100332668(uint64_t a1)
{
  return sub_10032E780(a1, v1, &qword_10079B1A0);
}

uint64_t sub_10033268C()
{
  return sub_10031A314(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1003326B4()
{
  return sub_100333A44(33);
}

uint64_t sub_1003326C0(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100744EF0, &qword_10079B1A0, (uint64_t)sub_100332700);
}

uint64_t sub_100332700(void *a1)
{
  return sub_100330DF4(a1, &qword_10079B1A0);
}

uint64_t sub_100332720()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332738(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1A0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_10033276C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10033279C()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1003327B4(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1A0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_1003327E8()
{
  return sub_10032017C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_10033280C()
{
  return sub_100333A44(32);
}

uint64_t sub_100332818(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100745058, &qword_10079B1A0, (uint64_t)sub_100332700);
}

uint64_t sub_100332858()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100332870(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_10079B1A0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_1003328A8()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032CED8);
}

uint64_t sub_1003328C4(void *a1)
{
  return sub_100331DB4(a1, &qword_10079B1A0);
}

uint64_t sub_1003328D0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_1003328E8(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032BF68);
}

uint64_t sub_100332918()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100332930()
{
  return sub_10031115C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100332940()
{
  return sub_100316F50(v0, &qword_10079B1B8);
}

uint64_t sub_100332978()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007456C0, &qword_10079B1B8, (uint64_t)sub_100330608);
}

uint64_t sub_1003329B8()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_1003329D0(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B1C8);
}

uint64_t sub_1003329F0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100332A08(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10032433C);
}

uint64_t sub_100332A48()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100332A60(uint64_t a1)
{
  return sub_100331264(a1, &qword_10079B1B8);
}

uint64_t sub_100332A94()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332AAC(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100326CA4);
}

uint64_t sub_100332AEC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332B04(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1003257F0);
}

uint64_t sub_100332B44()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100332B5C(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_10079B1B8);
}

uint64_t sub_100332B90()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_100332BA8(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_100331774);
}

uint64_t sub_100332BD4(uint64_t a1)
{
  return sub_10032E780(a1, v1, &qword_10079B1B8);
}

uint64_t sub_100332BF8()
{
  return sub_10031AF94(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_100332C20()
{
  return sub_100333A44(33);
}

uint64_t sub_100332C2C(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_1007453F0, &qword_10079B1B8, (uint64_t)sub_100332C6C);
}

uint64_t sub_100332C6C(void *a1)
{
  return sub_100330DF4(a1, &qword_10079B1B8);
}

uint64_t sub_100332C8C()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332CA4(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1B8, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_100332CD8()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332CF0(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1B8, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_100332D24()
{
  return sub_100320C98(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100332D48()
{
  return sub_100333A44(32);
}

uint64_t sub_100332D54(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100745558, &qword_10079B1B8, (uint64_t)sub_100332C6C);
}

uint64_t sub_100332D94()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100332DAC(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_10079B1B8, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_100332DE4()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032D128);
}

uint64_t sub_100332E00(void *a1)
{
  return sub_100331DB4(a1, &qword_10079B1B8);
}

uint64_t sub_100332E0C()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100332E24(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032C0F8);
}

uint64_t sub_100332E54()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100332E6C()
{
  return sub_100312CD0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100332E7C()
{
  return sub_100316F50(v0, &qword_10079B1D0);
}

uint64_t sub_100332EB4()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100745BC0, &qword_10079B1D0, (uint64_t)sub_100330608);
}

uint64_t sub_100332EF4()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100332F0C(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B1E0);
}

uint64_t sub_100332F2C()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100332F44(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1003245C4);
}

uint64_t sub_100332F84()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100332F9C(uint64_t a1)
{
  return sub_100331264(a1, &qword_10079B1D0);
}

uint64_t sub_100332FD0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100332FE8(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100326F2C);
}

uint64_t sub_100333028()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100333040(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100325A78);
}

uint64_t sub_100333080()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100333098(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_10079B1D0);
}

uint64_t sub_1003330CC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_1003330E4(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_1003318A8);
}

uint64_t sub_100333110(uint64_t a1)
{
  return sub_10032E780(a1, v1, &qword_10079B1D0);
}

uint64_t sub_100333134()
{
  return sub_10031BC14(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_10033315C()
{
  return sub_100333A44(33);
}

uint64_t sub_100333168(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_1007458F0, &qword_10079B1D0, (uint64_t)sub_1003331A8);
}

uint64_t sub_1003331A8(void *a1)
{
  return sub_100330DF4(a1, &qword_10079B1D0);
}

uint64_t sub_1003331C8()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_1003331E0(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1D0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_100333214()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10033322C(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1D0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_100333260()
{
  return sub_1003217B4(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100333284()
{
  return sub_100333A44(32);
}

uint64_t sub_100333290(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100745A58, &qword_10079B1D0, (uint64_t)sub_1003331A8);
}

uint64_t sub_1003332D0()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_1003332E8(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_10079B1D0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_100333320()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032D378);
}

uint64_t sub_10033333C(void *a1)
{
  return sub_100331DB4(a1, &qword_10079B1D0);
}

uint64_t sub_100333348()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100333360(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032C288);
}

uint64_t sub_100333390()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_1003333A8()
{
  return sub_100314844(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003333B8()
{
  return sub_100316F50(v0, &qword_10079B1E8);
}

uint64_t sub_1003333F0()
{
  return sub_1003169D4(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007460C0, &qword_10079B1E8, (uint64_t)sub_100330608);
}

uint64_t sub_100333430()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier);
}

uint64_t sub_100333448(uint64_t a1)
{
  return sub_100330788(a1, &qword_10079B1F8);
}

uint64_t sub_100333468()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100333480(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_10032484C);
}

uint64_t sub_1003334C0()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_1003334D8(uint64_t a1)
{
  return sub_100331264(a1, &qword_10079B1E8);
}

uint64_t sub_10033350C()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100333524(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_1003271B4);
}

uint64_t sub_100333564()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10033357C(uint64_t *a1)
{
  return sub_1003335BC(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t (*)(uint64_t, uint64_t))sub_100325D00);
}

uint64_t sub_1003335BC(uint64_t *a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = *(void *)(a2(0) - 8);
  uint64_t v7 = v3 + ((*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  uint64_t v8 = *a1;
  sub_100038D28((void *)(*(void *)(v3 + 16) + 48), *(void *)(*(void *)(v3 + 16) + 72));
  return a3(v8, v7);
}

uint64_t sub_100333660()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ListPathSpecifier);
}

uint64_t sub_100333678(uint64_t a1)
{
  return sub_1003313E8(a1, &qword_10079B1E8);
}

uint64_t sub_1003336AC()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier);
}

uint64_t sub_1003336C4(uint64_t a1)
{
  return sub_1003336F0(a1, (uint64_t (*)(uint64_t))sub_1003319DC);
}

uint64_t sub_1003336F0(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier() - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  sub_100038D28((void *)(*(void *)(v2 + 16) + 48), *(void *)(*(void *)(v2 + 16) + 72));
  return a2(v5);
}

uint64_t sub_10033377C(uint64_t a1)
{
  return sub_10032E780(a1, v1, &qword_10079B1E8);
}

uint64_t sub_1003337A0()
{
  return sub_10031C894(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_1003337C8()
{
  return sub_100333A44(33);
}

uint64_t sub_1003337D4(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100745DF0, &qword_10079B1E8, (uint64_t)sub_100333814);
}

uint64_t sub_100333814(void *a1)
{
  return sub_100330DF4(a1, &qword_10079B1E8);
}

uint64_t sub_100333834()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_10033384C(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1E8, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100325F88);
}

uint64_t sub_100333880()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier);
}

uint64_t sub_100333898(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier, (uint64_t)&qword_10079B1E8, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_10032743C);
}

uint64_t sub_1003338CC()
{
  return sub_1003222D0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1003338F0()
{
  uint64_t v1 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_1003339C4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4, v5);
}

uint64_t sub_100333A3C()
{
  return sub_100333A44(32);
}

uint64_t sub_100333A44(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

uint64_t sub_100333A94(void *a1)
{
  return sub_100330D10(a1, (uint64_t)&unk_100745F58, &qword_10079B1E8, (uint64_t)sub_100333814);
}

uint64_t sub_100333AD4()
{
  uint64_t v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6 + 8, v5);
}

uint64_t sub_100333B78()
{
  return sub_10000780C((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier);
}

uint64_t sub_100333B90(uint64_t a1)
{
  return sub_100330F34(a1, (uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier, (uint64_t)&qword_10079B1E8, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t))sub_100324AD4);
}

uint64_t sub_100333BC4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100333C00()
{
  uint64_t v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 26) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100333CCC()
{
  return sub_100333CE4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10032D5C8);
}

uint64_t sub_100333CE4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(unsigned __int8 *)(v1 + 25);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 26) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v6 = *(unsigned __int8 *)(v1 + 24);

  return a1(v3, v6, v4, v5);
}

uint64_t sub_100333D68()
{
  uint64_t v1 = type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_100333DF8(void *a1)
{
  return sub_100331DB4(a1, &qword_10079B1E8);
}

uint64_t sub_100333E04()
{
  return sub_10034DB94(v0[2], v0[3], v0[4]);
}

uint64_t sub_100333E14()
{
  return sub_100333E2C((uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
}

uint64_t sub_100333E2C(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v5 + *(void *)(v3 + 64);
  uint64_t v7 = v4 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v6, v7);
}

uint64_t sub_100333F00(uint64_t a1)
{
  return sub_100333F2C(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_10032C418);
}

uint64_t sub_100333F2C(uint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  uint64_t v5 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  return a2(a1, *(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));
}

uint64_t sub_100333FB0()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_100333FF0()
{
  return sub_100334008((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier);
}

uint64_t sub_100334008(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_1003340B4()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier);
}

uint64_t sub_1003340CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100334134()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier);
}

uint64_t sub_10033414C()
{
  return sub_100334164((uint64_t (*)(void))&type metadata accessor for REMNavigationSpecifier);
}

uint64_t sub_100334164(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 24) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);

  return _swift_deallocObject(v1, v7, v6);
}

uint64_t sub_100334244()
{
  uint64_t v1 = *(void *)(type metadata accessor for REMNavigationSpecifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  return sub_100308F14(*(void *)(v0 + 16), (uint8_t *)(v0 + v2), *(uint8_t **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1003342D8()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

unint64_t sub_100334318()
{
  unint64_t result = qword_10079B218;
  if (!qword_10079B218)
  {
    sub_100039710(&qword_10079B200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079B218);
  }
  return result;
}

uint64_t sub_100334374()
{
  swift_unknownObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1003343C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10003D2E4;
  return sub_10030836C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003345AC()
{
  return sub_10032FA28();
}

uint64_t sub_1003345C4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1000070B4(a1);
}

uint64_t sub_1003345DC()
{
  return sub_10033276C();
}

uint64_t sub_1003345FC(int a1)
{
  return sub_10032FD68(a1);
}

uint64_t sub_10033461C(int a1)
{
  return sub_10032FA60(a1);
}

uint64_t sub_100334634(unsigned char *a1)
{
  return sub_10032FFEC(a1);
}

id sub_10033464C(uint64_t *a1, void **a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  uint64_t v83 = a1;
  uint64_t v84 = a6;
  id v78 = a5;
  uint64_t v80 = a4;
  uint64_t v81 = a3;
  uint64_t v7 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v77 = (uint64_t)&v74 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v76 = (uint64_t)&v74 - v10;
  uint64_t v82 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v82);
  uint64_t v85 = (uint64_t)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for TTRListType.SortingCapability();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v74 - v16;
  uint64_t v18 = type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v20 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v23 - 8);
  os_log_t v25 = (void **)((char *)&v74 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v79 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  uint64_t v75 = a2;
  sub_1002F216C((uint64_t)a2, (uint64_t)v25, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
  sub_100055D48(v25, (uint64_t)v22, 0, (uint64_t)v89);
  uint64_t v26 = *a2;
  swift_bridgeObjectRetain();
  id v27 = v26;
  static REMRemindersListDataView.SortingStyle.defaultForSearchResult.getter();
  type metadata accessor for TTRShowSearchResultDataModelSource();
  swift_allocObject();
  uint64_t v28 = TTRShowSearchResultDataModelSource.init(store:searchTerm:countCompleted:sortingStyle:canChangeSortingStyle:)();
  id v29 = v89[0];
  (*(void (**)(char *, void, uint64_t))(v19 + 104))(v17, enum case for REMRemindersListDataView.SortingStyle.default(_:), v18);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTRIShowSearchResultViewModelSource();
  uint64_t v30 = (uint64_t *)swift_allocObject();
  sub_1002F216C((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  id v31 = v29;
  uint64_t v32 = sub_100334FE4(v28, v31, (uint64_t)v15, v30);

  sub_100335368((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  sub_1002F216C((uint64_t)v75, (uint64_t)v25, v79);
  sub_100057134((uint64_t)v89, (uint64_t)v86);
  swift_retain();
  uint64_t v80 = v32;
  sub_100056B24((uint64_t)v25, (uint64_t)v86, v32, (uint64_t)&off_1007512D8, v85);
  uint64_t v33 = v76;
  sub_100056CAC(v76);
  unint64_t v79 = (uint64_t (*)(void))type metadata accessor for TTRIShowSearchResultPresenter();
  uint64_t v34 = swift_allocObject();
  id v35 = (uint64_t *)(v34 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_dataModelSource);
  *id v35 = v28;
  v35[1] = (uint64_t)&protocol witness table for TTRShowSearchResultDataModelSource;
  *(unsigned char *)(v34 + OBJC_IVAR____TtC9Reminders29TTRIShowSearchResultPresenter_didFinalizeSearchQuery) = 0;
  uint64_t v36 = v77;
  sub_1002F216C(v33, v77, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v37 = (uint64_t)v78;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v39 = v84[1];
  uint64_t v81 = v28;
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v40 = sub_1001D0FC0(v36, v37, v34, ObjectType, v39);
  sub_100335368(v33, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v41 = *(void *)(v40 + 144);
  uint64_t v42 = swift_getObjectType();
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 104);
  swift_retain();
  if (v43(v42, v41))
  {
    uint64_t v45 = v44;
    uint64_t v46 = swift_getObjectType();
    LOBYTE(v45) = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 16))(v46, v45);
    swift_release();
    swift_unknownObjectRelease();
    char v47 = v45 & 1;
  }
  else
  {
    swift_release();
    char v47 = 0;
  }
  uint64_t v48 = sub_1001D0C84(v47, v40);
  id v78 = v49;
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v77 = swift_getObjectType();
  *(void *)(v40 + 24) = *(void *)(v53 + 8);
  swift_unknownObjectWeakAssign();
  uint64_t v54 = *(void *)(v40 + 144);
  uint64_t v55 = swift_getObjectType();
  uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 104);
  swift_retain_n();
  uint64_t v84 = v48;
  if (v56(v55, v54))
  {
    uint64_t v58 = v57;
    uint64_t v59 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v58 + 16))(v59, v58);
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
  id v60 = objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  id v61 = v84;
  unint64_t v62 = (void *)sub_10035A06C(v40);
  swift_release();

  uint64_t v63 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v53 + 32);
  id v78 = v62;
  v63(v62, &off_1007464D0, v77, v53);
  uint64_t v64 = (char *)v89[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v64 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v77 = v51;
  id v65 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v81 + 400);
  uint64_t v66 = swift_retain();
  v65(v66, &off_10074FBF8);
  swift_retain();
  uint64_t v67 = swift_retain();
  sub_1005B1F9C(v67, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v68 = v85;
  *(void *)(*(void *)(v85 + *(int *)(v82 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v90, (uint64_t)v86);
  long long v87 = v91;
  long long v88 = v92;
  *(void *)(v91 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v86);
  sub_100038DC0((uint64_t)&v93, (uint64_t)v86);
  uint64_t v69 = *((void *)&v94 + 1);
  long long v87 = v94;
  uint64_t v70 = swift_getObjectType();
  uint64_t v71 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v69 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v71(v40, &off_10073CA90, v70, v69);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v86);
  uint64_t v72 = v83;
  v83[3] = (uint64_t)v79;
  v72[4] = (uint64_t)&off_10074FBD0;
  uint64_t *v72 = v40;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_100335368(v68, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  sub_100057B44(v89);
  return v78;
}

id TTRIShowSearchResultAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowSearchResultAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowSearchResultAssembly()
{
  return self;
}

id TTRIShowSearchResultAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowSearchResultAssembly();
  return [super dealloc];
}

uint64_t sub_100334FE4(uint64_t a1, void *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = *a4;
  v33[0] = a3;
  v33[1] = v8;
  uint64_t v9 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char *)a4 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_completedRemindersCount;
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  uint64_t v20 = (uint64_t *)((char *)a4 + OBJC_IVAR____TtC9Reminders34TTRShowSearchResultViewModelSource_searchTerm);
  *uint64_t v20 = 0;
  v20[1] = 0;
  sub_1002F216C(a3, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain();
  uint64_t v21 = sub_100359DC4(a1, (uint64_t)a2, (uint64_t)v18, (uint64_t)a4);
  swift_retain();
  sub_100546B98((uint64_t)v15);
  uint64_t v22 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 0, 1, v22);
  sub_1005885DC((uint64_t)v15);
  sub_1000A1724((uint64_t)v15);
  uint64_t v23 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v24 = v23;
  static REMAnalyticsManager.shared.getter();
  uint64_t v25 = sub_10003B754(&qword_10078D258);
  uint64_t v26 = (uint64_t *)&v12[*(int *)(v25 + 48)];
  id v27 = (uint64_t *)&v12[*(int *)(v25 + 80)];
  uint64_t v28 = enum case for REMRemindersOpenUserOperation.search(_:);
  uint64_t v29 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v29 - 8) + 104))(v12, v28, v29);
  *uint64_t v26 = TTRUserDefaults.activitySessionId.getter();
  v26[1] = v30;
  TTRUserDefaults.activitySessionBeginTime.getter();
  uint64_t *v27 = _typeName(_:qualified:)();
  v27[1] = v31;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for REMAnalyticsEvent.openListUserOperation(_:), v9);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_100335368(v33[0], (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return v21;
}

uint64_t sub_100335368(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *sub_1003353C8(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_10003B754(&qword_10079B280);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_10066C680;
  *(void *)(v13 + 32) = a2;
  *(void *)(v13 + 40) = a7;
  v46[0] = a5;
  swift_unknownObjectRetain();
  if (a3)
  {
    sub_100335918(a3);

    uint64_t v14 = a4;
  }
  else
  {
    uint64_t v14 = 0;
    a5 = 0;
  }
  *(void *)(v13 + 48) = v14;
  *(void *)(v13 + 56) = a5;
  sub_10003B754(&qword_10079B288);
  sub_10003B754(&qword_10079B290);
  sub_1003358BC();
  uint64_t v15 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  uint64_t v16 = type metadata accessor for TTRIListDetailContainerRouter();
  uint64_t v17 = swift_allocObject();
  uint64_t v47 = v17 + 16;
  swift_unknownObjectWeakInit();
  v48[3] = v16;
  v48[4] = &off_100736D58;
  v48[0] = v17;
  type metadata accessor for TTRIListDetailContainerPresenter();
  uint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = sub_100038E88((uint64_t)v48, v16);
  __chkstk_darwin(v19);
  uint64_t v21 = (void *)((char *)v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  uint64_t v23 = *v21;
  v18[9] = v16;
  v18[10] = &off_100736D58;
  void v18[6] = v23;
  v18[3] = 0;
  swift_unknownObjectWeakInit();
  v18[5] = 0;
  swift_unknownObjectWeakInit();
  v18[11] = v15;
  v46[1] = v17;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_100038CD8((uint64_t)v48);
  sub_10003B754(&qword_10079B2A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  v25._countAndFlagsBits = 0xD000000000000013;
  v25._object = (void *)0x80000001006A8310;
  v26._countAndFlagsBits = 0x7473694C2077654ELL;
  v26._object = (void *)0xE800000000000000;
  v27._countAndFlagsBits = 0xD00000000000001ELL;
  v27._object = (void *)0x80000001006A8330;
  Swift::String v28 = TTRLocalizedString(_:value:comment:)(v25, v26, v27);
  *(void *)(inited + 32) = 7824750;
  *(void *)(inited + 40) = 0xE300000000000000;
  *(Swift::String *)(inited + 48) = v28;
  *(void *)(inited + 64) = a1;
  if (a3)
  {
    sub_100335918(a3);
    id v29 = a1;
    v30._countAndFlagsBits = 0xD000000000000019;
    v30._object = (void *)0x80000001006B64A0;
    v31._countAndFlagsBits = 0x6574616C706D6554;
    v31._object = (void *)0xE900000000000073;
    v32._countAndFlagsBits = 0xD00000000000001ELL;
    v32._object = (void *)0x80000001006A8330;
    Swift::String v33 = TTRLocalizedString(_:value:comment:)(v30, v31, v32);
    id v34 = a3;
    uint64_t inited = (uint64_t)sub_100570AB8((void *)1, 2, 1, (void *)inited);
    *(void *)(inited + 16) = 2;
    *(void *)(inited + 72) = 0x6574616C706D6574;
    *(void *)(inited + 80) = 0xE900000000000073;
    *(Swift::String *)(inited + 88) = v33;
    *(void *)(inited + 104) = v34;
    swift_unknownObjectRelease();
  }
  else
  {
    id v35 = a1;
  }
  uint64_t v36 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIListDetailContainerViewController())
      + OBJC_IVAR____TtC9Reminders37TTRIListDetailContainerViewController_presenter;
  void *v36 = v18;
  v36[1] = &off_10074E510;
  swift_retain();
  uint64_t v37 = (void *)sub_1003B6040(inited, 0);
  v18[3] = &off_10073AEB0;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v38 = [v37 presentationController:v46[0]];
  if (v38)
  {
    uint64_t v39 = v38;
    [v38 setDelegate:v37];
  }
  uint64_t v47 = v15;
  uint64_t v40 = *(void *)(v15 + 16);
  if (v40)
  {
    uint64_t v41 = (uint64_t *)(v47 + 40);
    do
    {
      uint64_t v42 = *v41;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v44 = *(void (**)(void *, _UNKNOWN **, uint64_t, uint64_t))(v42 + 16);
      swift_retain();
      swift_unknownObjectRetain();
      v44(v18, &off_10074E4F0, ObjectType, v42);
      swift_unknownObjectRelease();
      v41 += 2;
      --v40;
    }
    while (v40);
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v37;
}

unint64_t sub_1003358BC()
{
  unint64_t result = qword_10079B298;
  if (!qword_10079B298)
  {
    sub_100039710(&qword_10079B288);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079B298);
  }
  return result;
}

void *sub_100335918(void *result)
{
  if (result)
  {
    id v1 = result;
    return (void *)swift_unknownObjectRetain();
  }
  return result;
}

void sub_100335958()
{
  qword_1007BBAB8 = 0x4010000000000000;
}

void sub_100335968()
{
  id v1 = self;
  id v2 = [v1 ttr_systemBlueColor];
  [v0 setBackgroundColor:v2];

  id v3 = [v0 layer];
  if (qword_1007854A8 != -1) {
    swift_once();
  }
  [v3 setCornerRadius:*(double *)&qword_10079B2A8];

  id v4 = [v0 layer];
  [v4 setCornerCurve:kCACornerCurveContinuous];

  id v5 = [v0 layer];
  [v5 setBorderWidth:1.0];

  id v6 = [v0 layer];
  id v7 = [v1 whiteColor];
  id v8 = [v7 CGColor];

  [v6 setBorderColor:v8];
  id v9 = [v0 layer];
  [v9 setShadowRadius:3.0];

  id v10 = [v0 layer];
  id v11 = [v1 blackColor];
  id v12 = [v11 CGColor];

  [v10 setShadowColor:v12];
  id v13 = [v0 layer];
  LODWORD(v14) = 1050253722;
  [v13 setShadowOpacity:v14];

  id v15 = [v0 layer];
  [v15 setShadowOffset:0.0, 1.0];
}

void sub_100335D50()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  [v0 bounds];
  double v3 = v1;
  double v4 = v2;
  id v5 = (double *)&v0[OBJC_IVAR____TtC9Reminders47TTRITreeViewMultiRowReorderingDropIndicatorView_shadowPathSize];
  if ((v0[OBJC_IVAR____TtC9Reminders47TTRITreeViewMultiRowReorderingDropIndicatorView_shadowPathSize + 16] & 1) != 0
    || v1 != *v5
    || v2 != v5[1])
  {
    *id v5 = v1;
    v5[1] = v2;
    *((unsigned char *)v5 + 16) = 0;
    id v6 = [v0 layer];
    if (qword_1007854A8 != -1) {
      swift_once();
    }
    id v7 = [self bezierPathWithRoundedRect:0.0, 0.0, v3, v4, *(double *)&qword_10079B2A8];
    id v8 = [v7 CGPath];

    [v6 setShadowPath:v8];
  }
}

void sub_100335F00()
{
  qword_10079B2A8 = 0x4000000000000000;
}

uint64_t type metadata accessor for TTRITreeViewMultiRowReorderingDropIndicatorView()
{
  return self;
}

uint64_t sub_100335F34@<X0>(uint64_t a1@<X8>)
{
  double v2 = v1;
  uint64_t v53 = a1;
  uint64_t v3 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v3 - 8);
  uint64_t v52 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v5 - 8);
  uint64_t v48 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100791C20);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  id v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  id v12 = (unint64_t *)((char *)&v41 - v11);
  uint64_t v43 = OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation;
  id v13 = *(void **)&v1[OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation];
  if (v13)
  {
    id v14 = v13;
    id v15 = [v14 displayName];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v41 = v16;

    type metadata accessor for TTRListColors();
    uint64_t v62 = sub_1000368FC(0, &qword_100791CF0);
    uint64_t v63 = &protocol witness table for REMList;
    v61[0] = v14;
    static TTRListColors.color(for:)();
    uint64_t v18 = v54;
    uint64_t v17 = v55;
    uint64_t v20 = v56;
    uint64_t v19 = v57;
    uint64_t v21 = v58;
    uint64_t v22 = v59;
    int v23 = v60;
    sub_10003B6F8((uint64_t)v61, &qword_100787480);
  }
  else
  {
    uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_publicTemplateDataModelSource
                       + 8];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v26 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 16))(ObjectType, v24);
    uint64_t v50 = v1;
    id v29 = v28;
    if (v27) {
      uint64_t v30 = v26;
    }
    else {
      uint64_t v30 = 0;
    }
    uint64_t v42 = v30;
    unint64_t v31 = 0xE000000000000000;
    if (v27) {
      unint64_t v31 = v27;
    }
    unint64_t v41 = v31;
    type metadata accessor for TTRListColors();
    swift_bridgeObjectRetain();
    static TTRListColors.color(for:)();
    uint64_t v18 = v54;
    uint64_t v20 = v56;
    uint64_t v19 = v57;
    uint64_t v21 = v58;
    uint64_t v22 = v59;
    int v23 = v60;
    uint64_t v17 = v55;
    swift_bridgeObjectRelease();

    double v2 = v50;
  }
  v61[0] = v18;
  v61[1] = v17;
  void v61[2] = v20;
  uint64_t v62 = v19;
  uint64_t v63 = (void *)v21;
  uint64_t v64 = v22;
  char v65 = v23;
  Swift::String v32 = *(void **)&v2[v43];
  uint64_t v49 = v20;
  uint64_t v50 = v18;
  if (v32 && (id v33 = [v32 objectID]) != 0)
  {
    *id v12 = v33;
    uint64_t v34 = type metadata accessor for TTRListType();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v12, 0, 1, v34);
  }
  else
  {
    uint64_t v35 = type metadata accessor for TTRListType();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v12, 1, 1, v35);
  }
  sub_10003B694((uint64_t)v12, (uint64_t)v10, (uint64_t *)&unk_100791C20);
  TTRListColors.Color.nativeColor.getter();
  uint64_t v51 = v12;
  uint64_t v47 = v19;
  uint64_t v46 = v21;
  uint64_t v45 = v22;
  int v44 = v23;
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v48, 1, 1, v36);
  uint64_t v37 = type metadata accessor for TTRTemplatePublicLinkData();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v52, 1, 1, v37);
  uint64_t v38 = v53;
  TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
  sub_10003B9C0(v50, v17, v49, v47, v46, v45, v44);
  sub_10003B6F8((uint64_t)v51, (uint64_t *)&unk_100791C20);
  uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
}

double sub_1003364A4@<D0>(uint64_t a1@<X8>)
{
  *(unsigned char *)a1 = 2;
  *(_OWORD *)(a1 + 8) = 0u;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_DWORD *)(a1 + 40) = 16843009;
  double result = 7.29290211e-304;
  *(_DWORD *)(a1 + 44) = 16777472;
  return result;
}

unint64_t sub_1003364CC()
{
  uint64_t v0 = (unsigned __int8 *)TTRReminderCellStyle.publicTemplate.unsafeMutableAddressor();
  double v1 = &_mh_execute_header;
  if (!v0[4]) {
    double v1 = 0;
  }
  uint64_t v2 = 0x1000000;
  if (!v0[3]) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = 0x10000;
  if (!v0[2]) {
    uint64_t v3 = 0;
  }
  uint64_t v4 = 256;
  if (!v0[1]) {
    uint64_t v4 = 0;
  }
  return v4 | *v0 | v3 | v2 | (unint64_t)v1;
}

uint64_t sub_100336538()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  char v1 = TTRUserDefaults.showingLargeAttachments(forType:)();

  return v1 & 1;
}

void sub_100336578()
{
  id v0 = *(id *)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

uint64_t sub_1003365D8()
{
  uint64_t result = 64;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount + 16) & 1) == 0)
  {
    if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount) <= 0) {
      return 64;
    }
    else {
      return 65;
    }
  }
  return result;
}

void sub_100336600()
{
  swift_unknownObjectRelease();
  char v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation);
}

uint64_t sub_100336640()
{
  uint64_t v0 = sub_100588C8C();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1003366C4()
{
  return type metadata accessor for TTRShowPublicTemplateViewModelSource();
}

uint64_t type metadata accessor for TTRShowPublicTemplateViewModelSource()
{
  uint64_t result = qword_10079B328;
  if (!qword_10079B328) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100336718()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100336778(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v51 = a3;
  uint64_t v54 = a2;
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for REMRemindersListDataView.CountByCompleted();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_10003B754(&qword_100786F00);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v49 - v20;
  uint64_t v52 = v8;
  uint64_t v53 = (uint64_t)a1;
  if (!a1)
  {
    char v29 = 0;
    goto LABEL_14;
  }
  uint64_t v50 = v11;
  id v22 = [a1 objectID];
  uint64_t v23 = OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation;
  uint64_t v24 = *(void **)(v4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_listRepresentation);
  if (!v24)
  {
    if (v22) {
      goto LABEL_8;
    }
LABEL_12:
    char v29 = 0;
    goto LABEL_13;
  }
  id v25 = [v24 objectID];
  uint64_t v26 = v25;
  if (!v22)
  {
    if (v25)
    {

      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (!v25)
  {
LABEL_8:

LABEL_11:
    char v29 = 1;
    goto LABEL_13;
  }
  uint64_t v49 = sub_1000368FC(0, qword_10078E3D0);
  id v27 = v22;
  char v28 = static NSObject.== infix(_:_:)();

  char v29 = v28 ^ 1;
LABEL_13:
  uint64_t v30 = *(void **)(v4 + v23);
  *(void *)(v4 + v23) = v53;

  uint64_t v11 = v50;
LABEL_14:
  REMRemindersListDataView.SectionsModel.remindersCount.getter();
  sub_10003B694((uint64_t)v21, (uint64_t)v18, &qword_100786F00);
  int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  if (v31 == 1)
  {
    uint64_t v32 = 0;
    uint64_t v33 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v18, v12);
    uint64_t v32 = REMRemindersListDataView.CountByCompleted.completed.getter();
    uint64_t v33 = REMRemindersListDataView.CountByCompleted.incomplete.getter();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  uint64_t v34 = v51;
  sub_10003B6F8((uint64_t)v21, &qword_100786F00);
  uint64_t v35 = v4 + OBJC_IVAR____TtC9Reminders36TTRShowPublicTemplateViewModelSource_remindersCount;
  *(void *)uint64_t v35 = v32;
  *(void *)(v35 + 8) = v33;
  *(unsigned char *)(v35 + 16) = v31 == 1;
  sub_100335F34((uint64_t)v11);
  uint64_t v36 = v54;
  uint64_t v37 = REMRemindersListDataView.SectionsModel.sections.getter();
  __chkstk_darwin(v37);
  *(&v49 - 2) = v53;
  *(&v49 - 1) = v36;
  uint64_t v39 = sub_1000D60EC(v38, (void (*)(void, char *))sub_1003371C0, (uint64_t)(&v49 - 4));
  swift_bridgeObjectRelease();
  uint64_t v40 = type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v43 = (uint64_t)v52;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v52, 1, 1, v42);
  v56[3] = v40;
  v56[4] = &off_10074D320;
  v56[0] = v41;
  sub_1000145EC((uint64_t)v56, (uint64_t)v55);
  uint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v39;
  sub_100038ED8(v55, v44 + 24);
  *(void *)(v44 + 64) = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10059DBB0(1, (uint64_t)v11, (uint64_t (*)(uint64_t))sub_100051174, v44, v34, 0, v43);
  swift_release();
  sub_100038CD8((uint64_t)v56);
  swift_bridgeObjectRelease();
  sub_10003B6F8(v43, (uint64_t *)&unk_100788DC0);
  swift_release();
  if (v29)
  {
    uint64_t v45 = v4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v46 = *(void *)(v45 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 88))(1, ObjectType, v46);
      swift_unknownObjectRelease();
    }
  }
  return sub_10003B6F8((uint64_t)v11, &qword_100786EF0);
}

uint64_t sub_100336CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v36 = a1;
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (uint64_t *)((char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v15 - 8);
  uint64_t v37 = (uint64_t)&v32 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v32 - v18;
  uint64_t v38 = a2;
  REMRemindersListDataView.SectionLite.type.getter();
  int v20 = (*(uint64_t (**)(uint64_t *, uint64_t))(v12 + 88))(v14, v11);
  if (v20 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectioned(_:))
  {
    uint64_t v35 = a5;
    (*(void (**)(uint64_t *, uint64_t))(v12 + 96))(v14, v11);
    uint64_t v22 = *v14;
    uint64_t v21 = v14[1];
    uint64_t v34 = v14[2];
    swift_bridgeObjectRelease();
    if (v36) {
      int v23 = 3;
    }
    else {
      int v23 = 2;
    }
    LODWORD(v36) = v23;
    if (a3)
    {
      *((void *)&v42 + 1) = sub_1000368FC(0, &qword_100791CF0);
      uint64_t v43 = &protocol witness table for REMList;
      *(void *)&long long v41 = a3;
    }
    else
    {
      uint64_t v43 = 0;
      long long v41 = 0u;
      long long v42 = 0u;
    }
    type metadata accessor for TTRListColors();
    id v25 = a3;
    static TTRListColors.color(for:)();
    long long v32 = v56;
    long long v33 = v55;
    uint64_t v26 = v57;
    uint64_t v27 = v58;
    char v28 = v59;
    sub_10003B6F8((uint64_t)&v41, &qword_100787480);
    *uint64_t v10 = v22;
    swift_storeEnumTagMultiPayload();
    *(void *)&v44[0] = v21;
    *((void *)&v44[0] + 1) = v34;
    memset(&v44[1], 0, 48);
    int v45 = 192;
    char v46 = v36;
    __int16 v47 = v39;
    char v48 = v40;
    long long v49 = v33;
    long long v50 = v32;
    uint64_t v51 = v26;
    uint64_t v52 = v27;
    char v53 = v28;
    char v54 = 0;
    TTRReminderIDsWithMatchingHashtagsProvider.init(reminders:)((Swift::OpaquePointer)v44);
    sub_100050E5C((uint64_t)v44, (uint64_t)v60);
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    a5 = v35;
LABEL_15:
    uint64_t v29 = v37;
    sub_100337210((uint64_t)v19, v37);
    uint64_t v30 = REMRemindersListDataView.SectionLite.reminders.getter();
    sub_100337274((uint64_t)v19);
    sub_1003372D0(v29, a5);
    uint64_t result = type metadata accessor for TTRRemindersListTreeViewModel.Section(0);
    *(void *)(a5 + *(int *)(result + 20)) = v30;
    *(unsigned char *)(a5 + *(int *)(result + 24)) = 0;
    return result;
  }
  if (v20 == enum case for REMRemindersListDataView.SectionLite.SectionType.sectionless(_:))
  {
    if (a3 && (id v24 = [a3 objectID]) != 0)
    {
      *uint64_t v10 = v24;
      swift_storeEnumTagMultiPayload();
      sub_100105478(v44);
      sub_100050E5C((uint64_t)v44, (uint64_t)v60);
      REMRemindersListDataView.SectionsModel.sections.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      *(unsigned char *)uint64_t v10 = 2;
      swift_storeEnumTagMultiPayload();
      sub_100105478(v44);
      sub_100050E5C((uint64_t)v44, (uint64_t)v60);
    }
    TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
    goto LABEL_15;
  }
  uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
  __break(1u);
  return result;
}

uint64_t sub_100337144()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 136))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003371C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100336CE4(a1, a2, *(void **)(v3 + 16), *(void *)(v3 + 24), a3);
}

uint64_t sub_1003371C8()
{
  swift_bridgeObjectRelease();
  sub_100038CD8(v0 + 24);
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_100337210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100337274(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003372D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100337334()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079B8B0);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079B8B0);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10033743C()
{
  id v1 = [objc_allocWithZone((Class)UITableView) initWithFrame:2 style:0.0];
  id v2 = [objc_allocWithZone((Class)UIView) initWithFrame:0.0, 0.0, 1.0, 8.0];
  [v1 setTableHeaderView:v2];

  uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView];
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView] = v1;
  id v4 = v1;

  [v0 setView:v4];
}

void sub_100337568()
{
  id v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v48.receiver = v0;
  v48.super_class = ObjectType;
  [super viewDidLoad];
  id v3 = [v0 navigationItem];
  v4._countAndFlagsBits = 0xD000000000000016;
  v5._object = (void *)0x80000001006AC9D0;
  v4._object = (void *)0x80000001006B6680;
  v5._countAndFlagsBits = 0xD000000000000010;
  TTRLocalizedString(_:comment:)(v5, v4);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v3 setTitle:v6];

  id v7 = [objc_allocWithZone((Class)UIBarButtonItem) initWithBarButtonSystemItem:1 target:v1 action:"didTapCancel:"];
  id v8 = [v1 navigationItem];
  [v8 setLeftBarButtonItem:v7];

  static TTRLocalizableStrings.Common.saveButton.getter();
  *((void *)&v50 + 1) = ObjectType;
  *(void *)&long long v49 = v1;
  uint64_t v9 = v1;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v11 = *((void *)&v50 + 1);
  if (*((void *)&v50 + 1))
  {
    uint64_t v12 = sub_100038D28(&v49, *((uint64_t *)&v50 + 1));
    uint64_t v13 = *(void *)(v11 - 8);
    double v14 = __chkstk_darwin(v12);
    uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, double))(v13 + 16))(v16, v14);
    uint64_t v17 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v11);
    sub_100038CD8((uint64_t)&v49);
  }
  else
  {
    uint64_t v17 = 0;
  }
  id v18 = [objc_allocWithZone((Class)UIBarButtonItem) initWithTitle:v10 style:2 target:v17 action:"didTapCommit:"];

  swift_unknownObjectRelease();
  id v19 = [v9 navigationItem];
  [v19 setRightBarButtonItem:v18];

  int v20 = *(void **)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton];
  *(void *)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton] = v7;
  id v21 = v7;

  uint64_t v22 = *(void **)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton];
  *(void *)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] = v18;
  id v23 = v18;

  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C430;
  *(void *)(inited + 32) = sub_100338590(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeSection, (uint64_t (*)(uint64_t))sub_10033886C);
  *(void *)(inited + 40) = sub_100337A90();
  *(void *)&long long v49 = inited;
  specialized Array._endMutation()();
  uint64_t v25 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView;
  uint64_t v26 = *(void **)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView];
  if (!v26)
  {
    __break(1u);
    goto LABEL_11;
  }
  unint64_t v27 = v49;
  id v28 = v26;
  sub_100399E7C(v27);
  swift_bridgeObjectRelease();
  *((void *)&v50 + 1) = sub_1002AB620();
  *(void *)&long long v51 = &protocol witness table for UITableView;
  *(void *)&long long v49 = v28;
  id v29 = objc_allocWithZone((Class)type metadata accessor for TTRITableDataController());
  uint64_t v30 = (char *)TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)();
  int v31 = &v30[direct field offset for TTRITableDataController.customSectionSpacing];
  swift_beginAccess();
  *(void *)int v31 = 0x4030000000000000;
  v31[8] = 0;
  uint64_t v32 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController;
  long long v33 = *(void **)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController];
  *(void *)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController] = v30;
  uint64_t v34 = v30;

  uint64_t v35 = *(void **)&v9[v25];
  if (!v35)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  [v35 setDataSource:v34];
  uint64_t v36 = *(void **)&v9[v25];
  if (!v36)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v37 = [v36 setDelegate:v34];
  uint64_t v38 = *(void *)&v9[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter];
  long long v39 = *(_OWORD *)(v38 + 112);
  long long v40 = *(_OWORD *)(v38 + 64);
  long long v41 = *(_OWORD *)(v38 + 80);
  long long v52 = *(_OWORD *)(v38 + 96);
  long long v53 = v39;
  long long v50 = v40;
  long long v51 = v41;
  __int16 v42 = *(_WORD *)(v38 + 176);
  long long v43 = *(_OWORD *)(v38 + 160);
  long long v55 = *(_OWORD *)(v38 + 144);
  long long v56 = v43;
  long long v44 = *(_OWORD *)(v38 + 128);
  __int16 v57 = v42;
  long long v54 = v44;
  long long v49 = *(_OWORD *)(v38 + 48);
  int v45 = *(void **)&v9[v32];
  if (v45)
  {
    __chkstk_darwin(v37);
    sub_100338FE4((uint64_t)&v49);
    id v46 = v45;
    TTRITableDataController.performBatchUpdates(by:updates:)();

    sub_100265810((uint64_t)&v49);
  }
}

uint64_t sub_100337A90()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection);
  }
  else
  {
    uint64_t v3 = v0;
    sub_10003B754(&qword_100792AE0);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_10066C6F0;
    *(void *)(v4 + 32) = sub_1003385F8();
    *(void *)(v4 + 40) = &protocol witness table for TTRITableCell<A>;
    type metadata accessor for TTRITableSection();
    swift_allocObject();
    uint64_t v2 = TTRITableSection.init(header:footer:items:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

id sub_100337BC0(char a1)
{
  v7.receiver = v1;
  v7.super_class = (Class)swift_getObjectType();
  id result = [super viewWillAppear:a1 & 1];
  uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView];
  if (v4)
  {
    v6[3] = sub_1002AB620();
    void v6[4] = &protocol witness table for UITableView;
    v6[0] = v4;
    id v5 = v4;
    UIViewController.deselectRowsAlongsideTransition(for:animated:)();
    sub_100038CD8((uint64_t)v6);
    TTRKeyboardAvoidance<>.startAvoidingKeyboard()();
    return [*(id *)&v1[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] setEnabled:*(unsigned __int8 *)(*(void *)&v1[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter]+ 48)];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100337E18()
{
  v9.receiver = v0;
  v9.super_class = (Class)swift_getObjectType();
  uint64_t result = (uint64_t)[super viewWillLayoutSubviews];
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize) == 1)
  {
    *((unsigned char *)v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize) = 0;
    uint64_t v2 = self;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_1003393A8;
    *(void *)(v4 + 24) = v3;
    v8[4] = sub_1000218B0;
    void v8[5] = v4;
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 1107296256;
    v8[2] = sub_100021888;
    _OWORD v8[3] = &unk_100746350;
    id v5 = _Block_copy(v8);
    id v6 = v0;
    swift_retain();
    swift_release();
    [v2 performWithoutAnimation:v5];
    _Block_release(v5);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_100337FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UIListContentConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  objc_super v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  NSString v10 = (char *)&v49 - v9;
  id v11 = *(id *)(sub_10033850C() + 32);
  swift_release();
  long long v12 = *(_OWORD *)(a2 + 72);
  long long v74 = *(_OWORD *)(a2 + 56);
  long long v75 = v12;
  v76[0] = *(_OWORD *)(a2 + 88);
  *(_OWORD *)((char *)v76 + 10) = *(_OWORD *)(a2 + 98);
  long long v13 = *(_OWORD *)(a2 + 40);
  long long v72 = *(_OWORD *)(a2 + 24);
  long long v73 = v13;
  sub_1002AB328((uint64_t)v76 + 8, (uint64_t)v78);
  sub_1002AB328((uint64_t)v78, (uint64_t)v79);
  uint64_t v52 = v5;
  uint64_t v53 = v4;
  long long v50 = v7;
  long long v51 = v10;
  id v57 = v11;
  *(void *)&long long v58 = a1;
  if (v80)
  {
    uint64_t v14 = v79[1];
    uint64_t v54 = v79[0];
    sub_1002AB384((uint64_t)&v72);
    sub_1002AB424((uint64_t)v78);
    uint64_t v15 = 0;
  }
  else
  {
    sub_1002AB384((uint64_t)&v72);
    sub_1002AB424((uint64_t)v78);
    uint64_t v15 = REMListBadgeEmblem.image.getter();
    sub_1002AB4F8((uint64_t)v78);
    uint64_t v54 = 0;
    uint64_t v14 = 0;
  }
  sub_1000D67A4((uint64_t)&v73, (uint64_t)v77);
  long long v55 = v74;
  long long v56 = v73;
  long long v16 = v75;
  char v17 = v76[0];
  long long v18 = v72;
  char v19 = BYTE9(v76[1]);
  sub_100339094((uint64_t)v77);
  swift_bridgeObjectRetain();
  sub_1002AB458((uint64_t)&v72);
  uint64_t v59 = v15;
  uint64_t v60 = v54;
  *(void *)id v61 = v14;
  *(_OWORD *)&v61[8] = v56;
  *(_OWORD *)uint64_t v62 = v55;
  *(_OWORD *)&v62[16] = v16;
  char v63 = v17;
  long long v69 = v18;
  char v70 = v19;
  int v20 = v57;
  TTRITableCellContent.state.setter();

  id v21 = *(id *)(sub_100338590(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, (uint64_t (*)(uint64_t))sub_100338944)+ 32);
  swift_release();
  TTRITextCellContent.setTextIfNotEditing(_:)(*(Swift::String *)(a2 + 8));

  uint64_t v22 = *(id *)(sub_100338590(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, (uint64_t (*)(uint64_t))sub_100338944)+ 32);
  swift_release();
  uint64_t v23 = TTRListColors.Color.nativeColor.getter();
  id v24 = (char *)v22 + *(void *)((swift_isaMask & *v22) + 0x78);
  swift_beginAccess();
  uint64_t v25 = *(void **)v24;
  uint64_t v26 = *((void *)v24 + 1);
  char v27 = v24[16];
  char v28 = v24[17];
  uint64_t v29 = *((void *)v24 + 3);
  uint64_t v30 = *((void *)v24 + 4);
  uint64_t v59 = (uint64_t)v25;
  uint64_t v60 = v26;
  v61[0] = v27;
  v61[1] = v28;
  *(void *)&v61[8] = v29;
  *(void *)&v61[16] = v30;
  *(void *)uint64_t v62 = v23;
  sub_1002AB310(v25, v26, v27);
  swift_bridgeObjectRetain();
  TTRITableCellContent.state.setter();

  sub_100028C3C(a2 + 120, (uint64_t)v71, (uint64_t *)&unk_100792CD0);
  sub_100028C3C((uint64_t)v71, (uint64_t)&v81, (uint64_t *)&unk_100792CD0);
  if ((v82 & 1) != 0 || v81 < 1)
  {
    sub_100337A90();
    TTRITableSection.isHidden.setter();
    return swift_release();
  }
  else
  {
    sub_100337A90();
    TTRITableSection.isHidden.setter();
    swift_release();
    int v31 = v51;
    static UIListContentConfiguration.groupedFooter()();
    static TTRLocalizableStrings.Templates.includeCompletedRemindersDescription(completedCount:)();
    UIListContentConfiguration.attributedText.setter();
    sub_100337A90();
    uint64_t v33 = v52;
    uint64_t v32 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v50, v31, v53);
    TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)();
    TTRITableSection.footer.setter();
    swift_release();
    uint64_t v34 = *(id *)(sub_1003385F8() + 32);
    swift_release();
    char v35 = *(unsigned char *)(a2 + 129);
    uint64_t v36 = (char *)v34 + *(void *)((swift_isaMask & *v34) + 0x78);
    swift_beginAccess();
    id v37 = *(void **)v36;
    uint64_t v38 = (void *)*((void *)v36 + 1);
    uint64_t v40 = *((void *)v36 + 4);
    uint64_t v39 = *((void *)v36 + 5);
    uint64_t v41 = *((void *)v36 + 8);
    char v42 = v36[73];
    char v43 = v36[74];
    char v44 = v36[75];
    char v45 = v36[76];
    char v46 = v36[77];
    long long v47 = *((_OWORD *)v36 + 1);
    long long v58 = *((_OWORD *)v36 + 3);
    uint64_t v59 = (uint64_t)v37;
    uint64_t v60 = (uint64_t)v38;
    *(_OWORD *)id v61 = v47;
    *(void *)&v61[16] = v40;
    *(void *)uint64_t v62 = v39;
    *(_OWORD *)&v62[8] = v58;
    *(void *)&v62[24] = v41;
    char v63 = v35;
    char v64 = v42;
    char v65 = v43;
    char v66 = v44;
    char v67 = v45;
    char v68 = v46;
    sub_100112528(v37, v38, (void *)v47);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    TTRITableCellContent.state.setter();

    return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v31, v32);
  }
}

uint64_t sub_10033850C()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell;
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell);
  }
  else
  {
    uint64_t v2 = sub_1002A8E04();
    *(void *)(v0 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100338570()
{
  return sub_100338590(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, (uint64_t (*)(uint64_t))sub_100338944);
}

uint64_t sub_100338590(uint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(v2 + *a1);
  if (v4)
  {
    uint64_t v5 = v4;
  }
  else
  {
    uint64_t v5 = a2(v2);
    *(void *)(v2 + v3) = v5;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v5;
}

uint64_t sub_1003385F8()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell);
  }
  else
  {
    uint64_t v3 = v0;
    static TTRLocalizableStrings.Templates.includeCompletedReminders.getter();
    TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)();
    id v4 = objc_allocWithZone((Class)type metadata accessor for TTRIToggleCellContent());
    uint64_t v5 = TTRIToggleCellContent.init(state:)();
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    objc_super v7 = (uint64_t *)(v5 + direct field offset for TTRIToggleCellContent.stateChangeBlock);
    swift_beginAccess();
    uint64_t v8 = *v7;
    *objc_super v7 = (uint64_t)sub_100339108;
    v7[1] = v6;
    sub_1000499C4(v8);
    sub_10003B754((uint64_t *)&unk_100793D30);
    swift_allocObject();
    uint64_t v2 = TTRITableCell.init(_:)();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_10033886C()
{
  static TTRLocalizableStrings.Templates.savingDescription.getter();
  TTRITableSectionHeaderFooter.init(title:height:)();
  sub_10003B754(&qword_100792AE0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10066C680;
  *(void *)(v0 + 32) = sub_10033850C();
  *(void *)(v0 + 40) = &protocol witness table for TTRITableCell<A>;
  *(void *)(v0 + 48) = sub_100338590(&OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell, (uint64_t (*)(uint64_t))sub_100338944);
  *(void *)(v0 + 56) = &protocol witness table for TTRITableCell<A>;
  type metadata accessor for TTRITableSection();
  swift_allocObject();
  return TTRITableSection.init(header:footer:items:)();
}

uint64_t sub_100338944()
{
  [objc_allocWithZone((Class)NSAttributedString) init];
  static TTRLocalizableStrings.Templates.namePlaceholderText.getter();
  TTRITextCellContentState.init(attributedText:placeholder:)();
  TTRITextCellContentStateChangeEvent.editingChanged.unsafeMutableAddressor();
  id v0 = objc_allocWithZone((Class)sub_10003B754(&qword_1007958F0));
  uint64_t v1 = TTRITextCellContent.init(textAutocapitalizationType:keyboardType:state:stateChangeEvent:)();
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = (uint64_t *)(v1 + direct field offset for TTRITextCellContent.stateChangeBlock);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = (uint64_t)sub_100339110;
  v3[1] = v2;
  sub_1000499C4(v4);
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = (uint64_t *)(v1 + direct field offset for TTRITextCellContent.didEndEditingBlock);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = (uint64_t)sub_100339118;
  v6[1] = v5;
  sub_1000499C4(v7);
  sub_10003B754(&qword_10079B950);
  swift_allocObject();
  return TTRITableCell.init(_:)();
}

uint64_t sub_100338AE0()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_unknownObjectRetain();

    v2._object = (void *)0x80000001006AD3D0;
    v2._countAndFlagsBits = 0xD000000000000019;
    TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(v2);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100338B74()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    swift_unknownObjectRetain();

    uint64_t v2 = TTRITextCellContentState.text.getter();
    sub_1002D1708(v2, v3);
    swift_bridgeObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_100338C04(uint64_t a1)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)result;
    char v4 = *(unsigned char *)(a1 + 72);
    swift_unknownObjectRetain();
    sub_1002D1950(v4);

    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for TTRITemplateSavingViewController()
{
  return self;
}

id sub_100338DBC()
{
  id result = [v0 isViewLoaded];
  if (result)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_presenter];
    uint64_t v3 = (unsigned __int8 *)(v2 + 48);
    long long v4 = *(_OWORD *)(v2 + 64);
    long long v5 = *(_OWORD *)(v2 + 112);
    long long v6 = *(_OWORD *)(v2 + 128);
    LOWORD(v19) = *(_WORD *)(v2 + 176);
    long long v15 = v5;
    long long v16 = v6;
    long long v7 = *(_OWORD *)(v2 + 160);
    long long v17 = *(_OWORD *)(v2 + 144);
    long long v18 = v7;
    long long v8 = *(_OWORD *)(v2 + 96);
    long long v13 = *(_OWORD *)(v2 + 80);
    long long v14 = v8;
    long long v11 = *(_OWORD *)(v2 + 48);
    long long v12 = v4;
    uint64_t v9 = *(void **)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController];
    if (v9)
    {
      __chkstk_darwin(result);
      sub_100338FE4((uint64_t)&v11);
      id v10 = v9;
      TTRITableDataController.performBatchUpdates(by:updates:)();

      sub_100265810((uint64_t)&v11);
    }
    return [*(id *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] setEnabled:*v3 v11, v12, v13, v14, v15, v16, v17, v18, v19];
  }
  return result;
}

id sub_100338EE0()
{
  id result = *(id *)(v0 + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView);
  if (result) {
    return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_100338FDC()
{
  return sub_100337FF4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100338FE4(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a1 + 72);
  uint64_t v7 = *(void *)(a1 + 80);
  char v8 = *(unsigned char *)(a1 + 88);
  uint64_t v9 = *(void **)(a1 + 96);
  id v12 = *(id *)(a1 + 104);
  char v11 = *(unsigned char *)(a1 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10003BED8(v2, v3, v4, v5, v6, v7, v8);
  sub_10003BF34(v9, v12, v11);
  return a1;
}

uint64_t sub_100339094(uint64_t a1)
{
  return a1;
}

uint64_t sub_1003390D0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100339108(uint64_t a1)
{
  return sub_100338C04(a1);
}

uint64_t sub_100339110()
{
  return sub_100338AE0();
}

uint64_t sub_100339118()
{
  return sub_100338B74();
}

void sub_100339120(uint64_t a1@<X8>)
{
  uint64_t v2 = *(id *)(sub_10033850C() + 32);
  swift_release();
  uint64_t v3 = (id *)((char *)v2 + *(void *)((swift_isaMask & *v2) + 0x68));
  swift_beginAccess();
  if (!*v3)
  {

    id v6 = 0;
LABEL_7:
    double v14 = 0.0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    double top = 0.0;
    double left = 0.0;
    double bottom = 0.0;
    double right = 0.0;
    goto LABEL_10;
  }
  uint64_t v4 = (char *)*v3;

  uint64_t v5 = *(id *)&v4[OBJC_IVAR____TtC9Reminders32TTRIListDetailBadgeCellTableCell_badgeView];
  id v6 = [v5 superview];
  if (!v6)
  {

    goto LABEL_7;
  }
  (*(void (**)(void *__return_ptr))((swift_isaMask & *v5) + 0x1F8))(v31);
  double v8 = *(double *)v31;
  double v7 = *(double *)&v31[1];
  double v9 = *(double *)&v31[2];
  sub_100028C3C((uint64_t)v31, (uint64_t)v32, &qword_10079B958);
  if (v32[32])
  {
    double top = UIEdgeInsetsZero.top;
    double left = UIEdgeInsetsZero.left;
    double bottom = UIEdgeInsetsZero.bottom;
    double right = UIEdgeInsetsZero.right;
  }
  else
  {
    double v18 = v9 + 4.0;
    double top = v9 + 4.0 - v7;
    double left = v18 - v8;
    double bottom = v7 + v18;
    double right = v8 + v18;
  }
  UIEdgeInsetsSubtract();
  double v29 = v20;
  double v30 = v19;
  [v5 frame];
  double v22 = v21;
  double v24 = v23;
  double v26 = v25;
  double v28 = v27;

  double v14 = sub_10004980C(v22, v24, v26, v28, v30, v29);
LABEL_10:
  *(void *)a1 = v6;
  *(double *)(a1 + 8) = v14;
  *(void *)(a1 + 16) = v15;
  *(void *)(a1 + 24) = v16;
  *(void *)(a1 + 32) = v17;
  *(double *)(a1 + 40) = top;
  *(double *)(a1 + 48) = left;
  *(double *)(a1 + 56) = bottom;
  *(double *)(a1 + 64) = right;
}

uint64_t sub_100339370()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1003393A8()
{
  id result = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView);
  if (result) {
    return [result performBatchUpdates:0 completion:0];
  }
  __break(1u);
  return result;
}

uint64_t sub_1003393D4()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003393E4()
{
  uint64_t v1 = type metadata accessor for Logger();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_cancelButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_commitButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_tableDataController] = 0;
  v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController_needsTableCellResize] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___badgeCell] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___nameCell] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___templateConfigurationSection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders32TTRITemplateSavingViewController____lazy_storage___includeCompletedCell] = 0;

  if (qword_1007854B0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100018BF8(v1, (uint64_t)qword_10079B8B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, v1);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
  sub_1003AA010((uint64_t)"init(coder:) has not been implemented", 37, 2);
  __break(1u);
}

uint64_t sub_100339588()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079B960);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079B960);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100339678(uint64_t a1)
{
  uint64_t v3 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
  swift_beginAccess();
  sub_100347700(a1, v3);
  swift_endAccess();
  sub_100347580(v3, (uint64_t)v12);
  if ((v12[0] & 1) == 0)
  {
    sub_10034775C((uint64_t)&v13, (uint64_t)&v7);
    if (v11 == 3 && !v10)
    {
      int8x16_t v4 = vorrq_s8(v8, v9);
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v7))
      {
        sub_1003477B8((uint64_t)&v7);
        sub_10034780C((uint64_t)v12);
        return (id)sub_10034780C(a1);
      }
    }
    sub_1003477B8((uint64_t)&v7);
  }
  sub_10034780C((uint64_t)v12);
  id result = [v1 view];
  if (result)
  {
    uint64_t v6 = result;
    [result setNeedsLayout];

    return (id)sub_10034780C(a1);
  }
  __break(1u);
  return result;
}

id sub_100339794()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10003B754(&qword_100791B80);
  __chkstk_darwin(v3 - 8);
  id v57 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_10079BB50);
  uint64_t v6 = *(void *)(v5 - 8);
  double v7 = __chkstk_darwin(v5);
  int8x16_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v60.receiver = v0;
  v60.super_class = ObjectType;
  [super viewDidLoad:v7];
  sub_100339FA0();
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_12;
  }
  char v11 = result;
  uint64_t v12 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  id result = [*(id *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController] view];
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v13 = result;
  [v11 addSubview:result];

  [*(id *)&v1[v12] didMoveToParentViewController:v1];
  id v14 = sub_10033A304();
  [v14 setTranslatesAutoresizingMaskIntoConstraints:0];

  id result = [v1 view];
  if (!result)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v15 = result;
  long long v55 = v9;
  uint64_t v56 = v6;
  id v16 = sub_10033A304();
  [v15 addSubview:v16];

  id v17 = sub_10033A304();
  id v18 = [v17 bottomAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  double v19 = result;
  id v20 = [result safeAreaLayoutGuide];

  id v21 = [v20 bottomAnchor];
  id v22 = [v18 constraintEqualToAnchor:v21];

  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10066D460;
  id v24 = sub_10033A304();
  id v25 = [v24 leadingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  double v26 = result;
  uint64_t v53 = v5;
  uint64_t v54 = ObjectType;
  id v27 = [result leadingAnchor];

  id v28 = [v25 constraintEqualToAnchor:v27];
  *(void *)(v23 + 32) = v28;
  id v29 = sub_10033A304();
  id v30 = [v29 trailingAnchor];

  id result = [v1 view];
  if (!result)
  {
LABEL_16:
    __break(1u);
    return result;
  }
  int v31 = result;
  uint64_t v32 = self;
  id v33 = [v31 trailingAnchor];

  id v34 = [v30 constraintEqualToAnchor:v33];
  *(void *)(v23 + 40) = v34;
  *(void *)(v23 + 48) = v22;
  uint64_t v59 = v23;
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100793B60);
  id v35 = v22;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v32 activateConstraints:isa];

  id v37 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint] = v35;
  id v38 = v35;

  id v39 = sub_10033A304();
  type metadata accessor for TTRIRemindersListToolbarController();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(v40 + 40) = _swiftEmptyDictionarySingleton;
  *(void *)(v40 + 48) = 0;
  *(_WORD *)(v40 + 56) = -258;
  *(_OWORD *)(v40 + 64) = 0u;
  *(_OWORD *)(v40 + 80) = 0u;
  *(void *)(v40 + 24) = &off_100746580;
  *(void *)(v40 + 32) = v39;
  swift_unknownObjectWeakAssign();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController] = v40;
  swift_retain();
  swift_release();
  uint64_t v41 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  uint64_t v42 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v41 + 416))(v42, v41);
  id v43 = [v1 navigationItem];
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1000A511C(v43, v1);
    swift_unknownObjectRelease();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v44 = (uint64_t)v57;
  id v45 = [v1 navigationItem];
  [v45 setLargeTitleDisplayMode:1];

  [v1 setExtendedLayoutIncludesOpaqueBars:1];
  type metadata accessor for TTRICurrentTextInputModeObserver();
  swift_allocObject();
  uint64_t v46 = TTRICurrentTextInputModeObserver.init()();
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver] = v46;
  swift_retain();
  swift_release();
  uint64_t v59 = *(void *)(v46 + 16);
  long long v47 = self;
  swift_retain();
  id v58 = [v47 mainRunLoop];
  uint64_t v48 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v44, 1, 1, v48);
  sub_10003B754((uint64_t *)&unk_10079BB60);
  sub_1000368FC(0, (unint64_t *)&qword_10078AC90);
  sub_100037EA0((unint64_t *)&unk_10079BB70, (uint64_t *)&unk_10079BB60);
  sub_1000C7F30();
  uint64_t v49 = v55;
  Publisher.receive<A>(on:options:)();
  sub_10003B6F8(v44, &qword_100791B80);

  swift_release();
  sub_100037EA0((unint64_t *)&unk_10079BB80, (uint64_t *)&unk_10079BB50);
  uint64_t v50 = v53;
  uint64_t v51 = Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v49, v50);
  *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeCancellable] = v51;
  swift_release();
  sub_10033A3D4();
  sub_10033A8AC();
  sub_10033AE68();
  sub_10033AFF8();
  sub_10033B180();
  sub_10033B6F8(1);

  swift_release();
  return (id)swift_release();
}

void sub_100339FA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v34[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v5 = [v0 view];
  if (!v5)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = v5;
  [v5 bounds];
  double v8 = v7;
  double v10 = v9;
  double v12 = v11;
  double v14 = v13;

  uint64_t v15 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  id v16 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  uint64_t v17 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  uint64_t ObjectType = swift_getObjectType();
  *(double *)id v35 = v8;
  *(double *)&v35[1] = v10;
  *(double *)&uint64_t v35[2] = v12;
  *(double *)&void v35[3] = v14;
  char v36 = 0;
  double v19 = *(void (**)(void *, uint64_t, uint64_t))(v17 + 16);
  id v20 = v16;
  v19(v35, ObjectType, v17);

  [v1 addChildViewController:*(void *)v15];
  id v21 = [*(id *)v15 view];
  if (!v21)
  {
LABEL_11:
    __break(1u);
    return;
  }
  id v22 = v21;
  [v21 frame];
  v38.origin.CGFloat x = v8;
  v38.origin.CGFloat y = v10;
  v38.size.CGFloat width = v12;
  v38.size.CGFloat height = v14;
  if (!CGRectEqualToRect(v37, v38))
  {
    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100018BF8(v23, (uint64_t)qword_10079B960);
    id v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      double v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "TTRIShowRemindersViewController: contentView is not sized to initialFrameForLoadingView; may have perf/correctness issues.",
        v26,
        2u);
      swift_slowDealloc();
    }

    [v22 setFrame:v8, v10, v12, v14];
  }
  [v22 setAutoresizingMask:18];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:1];
  id v27 = *(id *)v15;
  [v27 setEditing:[v1 isEditing] animated:0];

  sub_10034368C();
  id v28 = *(id *)v15;
  uint64_t v29 = *((void *)v15 + 1);
  uint64_t v30 = swift_getObjectType();
  uint64_t v31 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
  swift_beginAccess();
  sub_100347150(v31, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v29 + 128);
  id v33 = v28;
  v32(v4, v30, v29);

  sub_1003475DC((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
}

id sub_10033A304()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIToolbar) initWithFrame:0.0, 0.0, 0.0, 0.0];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10033A388(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 272))(ObjectType, v1);
}

void sub_10033A3D4()
{
  uint64_t v1 = v0;
  if ([v0 isViewLoaded])
  {
    uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess();
    id v3 = *(void **)&v2[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() + 24)];
    uint64_t v4 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor;
    id v5 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor];
    if (v5)
    {
      sub_1000368FC(0, (unint64_t *)&qword_10078E640);
      id v6 = v3;
      id v7 = v5;
      char v8 = static NSObject.== infix(_:_:)();

      if (v8)
      {
LABEL_10:
        if (*(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController])
        {
          id v31 = v3;
          swift_retain();
          unsigned __int8 v32 = *(unsigned char *)(sub_1002CB294() + 32);
          swift_release();
          sub_1002CB294();
          sub_10015D1F0(v32, v3);
          swift_release();

          swift_release();
        }
        else
        {
        }
        return;
      }
      double v9 = *(void **)&v1[v4];
    }
    else
    {
      id v10 = v3;
      double v9 = 0;
    }
    *(void *)&v1[v4] = v3;
    id v33 = v3;

    id v11 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
    [v11 configureWithDefaultBackground];
    sub_10003B754(&qword_100793B40);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v13 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
    double v14 = NSFontAttributeName;
    uint64_t v15 = static UIFont.roundedNavigationTitleFont.getter();
    *(void *)(inited + 64) = v13;
    *(void *)(inited + 40) = v15;
    sub_100421E1C(inited);
    type metadata accessor for Key(0);
    sub_10002ECEC((unint64_t *)&qword_100793B50, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 setTitleTextAttributes:isa];

    uint64_t v17 = swift_initStackObject();
    *(_OWORD *)(v17 + 16) = xmmword_10066C680;
    *(void *)(v17 + 32) = v14;
    id v18 = v14;
    *(void *)(v17 + 40) = static UIFont.roundedLargeNavigationTitleFont.getter();
    *(void *)(v17 + 64) = v13;
    *(void *)(v17 + 72) = NSForegroundColorAttributeName;
    *(void *)(v17 + 104) = sub_1000368FC(0, (unint64_t *)&qword_10078E640);
    *(void *)(v17 + 80) = v33;
    id v19 = v33;
    id v20 = NSForegroundColorAttributeName;
    sub_100421E1C(v17);
    Class v21 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 setLargeTitleTextAttributes:v21];

    id v22 = [v1 navigationItem];
    [v22 setStandardAppearance:v11];

    id v23 = [v1 navigationItem];
    id v24 = [v23 scrollEdgeAppearance];

    if (v24)
    {
      id v25 = [v24 copy];

      id v26 = [v11 titleTextAttributes];
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      Class v27 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v25 setTitleTextAttributes:v27];

      id v28 = [v11 largeTitleTextAttributes];
      static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      Class v29 = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v25 setLargeTitleTextAttributes:v29];
    }
    else
    {
      id v25 = v11;
      [v25 configureWithTransparentBackground];
    }
    id v30 = [v1 navigationItem];
    [v30 setScrollEdgeAppearance:v25];

    goto LABEL_10;
  }
}

id sub_10033A8AC()
{
  void (*v18)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char *v24;
  int *v25;
  char *v26;
  uint64_t v27;
  int v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  char v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  id v44;
  void *v45;
  id v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  unsigned char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void v57[3];
  uint64_t v58;
  uint64_t v59;

  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  __chkstk_darwin(v5);
  id v7 = (char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_100787460);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v0 isViewLoaded];
  if (result)
  {
    uint64_t v15 = *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
    uint64_t v16 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t ObjectType = swift_getObjectType();
    id v18 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v16 + 208);
    uint64_t v54 = v16;
    long long v55 = v15;
    uint64_t v53 = ObjectType;
    v18(v57, ObjectType, v16);
    id v19 = v58;
    id v20 = v59;
    sub_100038D28(v57, v58);
    Class v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 16))(v19, v20);
    uint64_t v56 = v11;
    if (v21)
    {
      id v22 = sub_10003B754(&qword_100787468);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
      id v23 = v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout];
    }
    else
    {
      uint64_t v50 = v4;
      uint64_t v51 = v13;
      id v24 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
      swift_beginAccess();
      id v25 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo();
      id v26 = &v24[v25[9]];
      if (*((void *)v26 + 1) == 3)
      {
        Class v27 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
      }
      else
      {
        id v28 = *(_DWORD *)v26;
        Class v29 = (unint64_t)(*((void *)v26 + 1) - 3) < 0xFFFFFFFFFFFFFFFELL;
        id v30 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar];
        swift_beginAccess();
        id v31 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
        sub_10003B694(v30, (uint64_t)&v10[*(int *)(v31 + 28)], &qword_100791C80);
        *id v10 = v29;
        v10[1] = v28 & 1;
        v10[2] = BYTE1(v28) & 1;
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v10, 0, 1, v31);
      }
      unsigned __int8 v32 = v24[v25[30]];
      sub_10003B694((uint64_t)v10, (uint64_t)&v7[v5[5]], &qword_100787460);
      sub_10003B694((uint64_t)&v24[v25[25]], (uint64_t)&v7[v5[6]], &qword_10079BAB0);
      id v33 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
      uint64_t v52 = v1;
      id v35 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
      long long v47 = *((void *)v33 + 1);
      id v34 = v47;
      char v36 = v24[v25[26]];
      CGRect v37 = v24[v25[13]];
      *id v7 = v32;
      CGRect v38 = &v7[v5[7]];
      *(void *)CGRect v38 = v35;
      *((void *)v38 + 1) = v34;
      v38[16] = v33[16];
      v7[v5[8]] = v36;
      v7[v5[9]] = v37;
      id v39 = sub_10003B754(&qword_100787468);
      uint64_t v48 = *(int *)(v39 + 48);
      uint64_t v40 = (uint64_t)v50;
      sub_100347150((uint64_t)v7, (uint64_t)v50, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
      uint64_t v49 = v24;
      sub_100038D28(v57, v58);
      uint64_t v41 = v35;
      uint64_t v1 = v52;
      sub_100065658(v41, v47);
      uint64_t v42 = TTRRemindersListEditingState.isEditingItem.getter();
      sub_1003475DC((uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo);
      sub_10003B6F8((uint64_t)v10, &qword_100787460);
      *(unsigned char *)(v40 + v48) = v42 & 1;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v40, 0, 1, v39);
      id v23 = v49[v25[8]];
      uint64_t v13 = v51;
      sub_1003470E8(v40, (uint64_t)v51, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode);
    }
    v13[*(int *)(v56 + 20)] = v23;
    (*(void (**)(uint64_t))(v54 + 416))(v53);
    id v43 = sub_100063BC4((uint64_t)v13);
    swift_unknownObjectRelease();
    if (v43)
    {
      uint64_t v44 = [v1 navigationController];
      if (v44)
      {
        id v45 = v44;
        uint64_t v46 = [v44 navigationBar];

        [v46 ttriAccessibilityNavigationBarContentsDidChange];
      }
    }
    sub_1003475DC((uint64_t)v13, type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration);
    return (id)sub_100038CD8((uint64_t)v57);
  }
  return result;
}

uint64_t sub_10033AE68()
{
  uint64_t v1 = sub_10003B754(&qword_10079BAB0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  sub_10003B694(v4 + *(int *)(v5 + 100), (uint64_t)v3, &qword_10079BAB0);
  uint64_t v6 = type metadata accessor for TTRTemplatePublicLinkData();
  unsigned __int8 v7 = 1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6);
  uint64_t result = sub_10003B6F8((uint64_t)v3, &qword_10079BAB0);
  if (v8 == 1)
  {
    if (*(unsigned char *)(v4 + *(int *)(v5 + 112))) {
      unsigned __int8 v7 = 2;
    }
    else {
      unsigned __int8 v7 = 0;
    }
  }
  if (*(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController))
  {
    swift_retain();
    id v10 = *(void **)(sub_1002CB294() + 40);
    id v11 = v10;
    swift_release();
    sub_1002CB294();
    sub_10015D1F0(v7, v10);
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10033AFF8()
{
  if ([v0 isViewLoaded])
  {
    [v0 ttr_setNeedsUpdateContentUnavailableConfiguration];
    unsigned __int8 v1 = v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging];
    uint64_t v2 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView;
    uint64_t v3 = *(unsigned char **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView];
    if ((v1 & 0xC0) != 0x40 || (v1 & 0x3E) == 0)
    {
      uint64_t v5 = v3;
      id v6 = [v0 view];
      if (v6)
      {
        unsigned __int8 v7 = v6;
        int v8 = sub_100259BD4(v1, v3, v6);

        uint64_t v9 = *(void **)&v0[v2];
        *(void *)&v0[v2] = v8;

        uint64_t v10 = *(void *)&v0[v2];
        if (v10)
        {
          *(unsigned char *)(v10 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_listLayout) = v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout];
          uint64_t v11 = *(void *)&v0[v2];
          if (v11)
          {
            *(void *)(v11 + OBJC_IVAR____TtC9Reminders30TTRIRemindersListMessagingView_messagingViewDelegate + 8) = &off_100746420;
            swift_unknownObjectWeakAssign();
          }
        }
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      if (v3)
      {
        [*(id *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView] removeFromSuperview];
        uint64_t v12 = *(void **)&v0[v2];
      }
      else
      {
        uint64_t v12 = 0;
      }
      *(void *)&v0[v2] = 0;
    }
  }
}

void sub_10033B180()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = type metadata accessor for AppEntityID();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  id v28 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for REMFeatureFlags();
  uint64_t v31 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRListType();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  double v14 = (id *)((char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v17 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo;
  swift_beginAccess();
  sub_10003B694(v17, (uint64_t)v9, (uint64_t *)&unk_100791C20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100791C20);
  }
  else
  {
    sub_1003470E8((uint64_t)v9, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRListType);
    sub_100347150((uint64_t)v16, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRListType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        double v14 = (id *)*v14;
        if (![v1 isViewLoaded]) {
          goto LABEL_15;
        }
        uint64_t v22 = v31;
        (*(void (**)(char *, void, uint64_t))(v31 + 104))(v6, enum case for REMFeatureFlags.viewAnnotation(_:), v4);
        char v23 = REMFeatureFlags.isEnabled.getter();
        (*(void (**)(char *, uint64_t))(v22 + 8))(v6, v4);
        if ((v23 & 1) == 0) {
          goto LABEL_15;
        }
        id v20 = [v1 view];
        if (!v20)
        {
          __break(1u);
          JUMPOUT(0x10033B6E0);
        }
        goto LABEL_14;
      case 2u:
        goto LABEL_8;
      case 3u:
        sub_1003475DC((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRListType);
        uint64_t v21 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(id *, uint64_t))(*(void *)(v21 - 8) + 8))(v14, v21);
        return;
      case 4u:
        sub_1003475DC((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRListType);
        swift_bridgeObjectRelease();
        return;
      case 5u:
        sub_1003475DC((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRListType);

        return;
      default:
        double v14 = (id *)*v14;
        if (![v1 isViewLoaded]) {
          goto LABEL_15;
        }
        uint64_t v18 = v31;
        (*(void (**)(char *, void, uint64_t))(v31 + 104))(v6, enum case for REMFeatureFlags.viewAnnotation(_:), v4);
        char v19 = REMFeatureFlags.isEnabled.getter();
        (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v4);
        if ((v19 & 1) == 0) {
          goto LABEL_15;
        }
        id v20 = [v1 view];
        if (v20)
        {
LABEL_14:
          id v24 = v20;
          type metadata accessor for ListEntity();
          id v25 = v14;
          id v26 = v28;
          AppEntityID.init(objectID:)();
          sub_10002ECEC((unint64_t *)&unk_10078E630, (void (*)(uint64_t))&type metadata accessor for ListEntity);
          UIView.setAssociatedAppEntity<A>(entityType:identifier:)();

          (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v30);
LABEL_15:
        }
        else
        {
          __break(1u);
LABEL_8:
          sub_100345C8C(*(unsigned char *)v14);
        }
        sub_1003475DC((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRListType);
        break;
    }
  }
}

uint64_t sub_10033B6F8(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
  id v9 = v5;
  v8(v2, ObjectType, v6);

  uint64_t v10 = (void *)UIViewController.effectiveNavigationControllerForBars.getter();
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 viewIfLoaded];

    [v12 setNeedsLayout];
  }
  uint64_t v13 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver;
  if (!*(void *)(v2
                  + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver))
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_10003B754((uint64_t *)&unk_10079BAF0);
    swift_allocObject();
    *(void *)(v2 + v13) = TTRViewModelObserver.init(didReceiveNewValue:)();
    swift_retain();
    swift_release();
  }
  double v14 = *(void **)v4;
  uint64_t v15 = *(void *)(v4 + 8);
  uint64_t v16 = swift_getObjectType();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 56);
  swift_retain();
  id v18 = v14;
  v17(v16, v15);

  TTRViewModelObserver.subscribeIfNeeded(to:)();
  swift_release();
  if ((a1 & 1) == 0) {
    sub_100343894();
  }

  return swift_release();
}

void sub_10033B918()
{
  v6.receiver = v0;
  v6.super_class = (Class)swift_getObjectType();
  [super viewWillLayoutSubviews];
  sub_10033B9A8();
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint];
  if (v1)
  {
    id v2 = v1;
    id v3 = sub_10033A304();
    UIToolbar.toolbarHeightAdjustment_workaround60289707.getter();
    double v5 = v4;

    [v2 setConstant:-v5];
  }
}

uint64_t sub_10033B9A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v54 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
  swift_beginAccess();
  sub_100347580(v9, (uint64_t)v64);
  if ((v64[0] & 1) == 0)
  {
    sub_10034775C((uint64_t)v65, (uint64_t)&v61);
    if (v62[33] == 3 && !v62[32])
    {
      int8x16_t v10 = vorrq_s8(*(int8x16_t *)v62, *(int8x16_t *)&v62[16]);
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v10.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)) | (unint64_t)v61))
      {
        sub_1003477B8((uint64_t)&v61);
        return sub_10034780C((uint64_t)v64);
      }
    }
    sub_1003477B8((uint64_t)&v61);
  }
  LOBYTE(v61) = 0;
  memset(v62, 0, sizeof(v62));
  char v63 = 3;
  swift_beginAccess();
  uint64_t v53 = v9;
  sub_100347F40((uint64_t)&v61, v9);
  swift_endAccess();
  if (v64[0] == 1)
  {
    uint64_t v11 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
    uint64_t v52 = v4;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v51 = v8;
    uint64_t v14 = v6;
    uint64_t v15 = v1;
    uint64_t v16 = v5;
    uint64_t v17 = v2;
    id v18 = *(void (**)(uint64_t, uint64_t))(v12 + 112);
    id v19 = v11;
    uint64_t v20 = ObjectType;
    double v4 = v52;
    v18(v20, v12);
    uint64_t v2 = v17;
    uint64_t v5 = v16;
    uint64_t v1 = v15;
    uint64_t v6 = v14;
    uint64_t v8 = v51;
  }
  sub_10034775C((uint64_t)v65, (uint64_t)v57);
  switch(v59)
  {
    case 1:
      uint64_t v26 = v58;
      sub_100038ED8(v57, (uint64_t)&v61);
      if (v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState]
         - 1 < 2
        || (static TTRIKeyboard.isInFloatingKeyboardMode.getter() & 1) != 0)
      {
        uint64_t v27 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
        uint64_t v29 = swift_getObjectType();
        uint64_t v30 = *(void (**)(uint64_t, void ***, void, uint64_t, uint64_t))(v28 + 160);
        id v31 = v27;
        v30(v26, &v61, 0, v29, v28);
      }
      unsigned __int8 v32 = &v61;
      goto LABEL_23;
    case 2:
      sub_100038ED8(v57, (uint64_t)v60);
      if (v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState]
         - 1 < 2)
      {
        id v33 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        uint64_t v34 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
        uint64_t v35 = swift_getObjectType();
        char v36 = *(void (**)(void, unsigned char *, uint64_t, uint64_t, uint64_t))(v34 + 160);
        id v37 = v33;
        v36(0, v60, 1, v35, v34);
      }
      unsigned __int8 v32 = (void ***)v60;
      goto LABEL_23;
    case 3:
      return sub_10034780C((uint64_t)v64);
    default:
      sub_100038ED8(v57, (uint64_t)v56);
      if (v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState]
         - 2 >= 2)
      {
        if (!v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState]
          && (static TTRIKeyboard.isInFloatingKeyboardMode.getter() & 1) == 0)
        {
          if (qword_1007854B8 != -1) {
            swift_once();
          }
          uint64_t v44 = type metadata accessor for Logger();
          sub_100018BF8(v44, (uint64_t)qword_10079B960);
          id v45 = Logger.logObject.getter();
          os_log_type_t v46 = static os_log_type_t.debug.getter();
          BOOL v47 = os_log_type_enabled(v45, v46);
          uint64_t v48 = v53;
          if (v47)
          {
            uint64_t v49 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v49 = 0;
            _os_log_impl((void *)&_mh_execute_header, v45, v46, "Deferring handling of pendingScrollAction=beginEditing; keyboard is not yet visible",
              v49,
              2u);
            swift_slowDealloc();
          }

          sub_100038CD8((uint64_t)v56);
          sub_100347FE8((uint64_t)v65, (uint64_t)v62);
          LOBYTE(v61) = 0;
          swift_beginAccess();
          sub_100347F40((uint64_t)&v61, v48);
          return swift_endAccess();
        }
        sub_1000368FC(0, (unint64_t *)&qword_100788E40);
        uint64_t v38 = v6;
        uint64_t v53 = static OS_dispatch_queue.main.getter();
        sub_1000145EC((uint64_t)v56, (uint64_t)v55);
        uint64_t v39 = swift_allocObject();
        *(void *)(v39 + 16) = v1;
        sub_100038ED8(v55, v39 + 24);
        *(void *)&v62[24] = sub_100347FDC;
        *(void *)&unsigned char v62[32] = v39;
        id v61 = _NSConcreteStackBlock;
        *(void *)uint64_t v62 = 1107296256;
        *(void *)&v62[8] = sub_10000AD88;
        *(void *)&v62[16] = &unk_100746830;
        uint64_t v40 = _Block_copy(&v61);
        uint64_t v41 = v1;
        swift_release();
        static DispatchQoS.unspecified.getter();
        id v61 = (void **)_swiftEmptyArrayStorage;
        sub_10002ECEC((unint64_t *)&qword_10078C6E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_10003B754((uint64_t *)&unk_100788E50);
        sub_100037EA0((unint64_t *)&qword_10078C6F0, (uint64_t *)&unk_100788E50);
        dispatch thunk of SetAlgebra.init<A>(_:)();
        uint64_t v42 = (void *)v53;
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v40);

        (*(void (**)(char *, uint64_t))(v54 + 8))(v4, v2);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v8, v5);
      }
      else
      {
        uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        uint64_t v22 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
        uint64_t v23 = swift_getObjectType();
        id v24 = *(void (**)(void, unsigned char *, void, uint64_t, uint64_t))(v22 + 160);
        id v25 = v21;
        v24(0, v56, 0, v23, v22);
      }
      unsigned __int8 v32 = (void ***)v56;
LABEL_23:
      sub_100038CD8((uint64_t)v32);
      break;
  }
  return sub_10034780C((uint64_t)v64);
}

void sub_10033C13C(char a1, char a2)
{
  uint64_t v3 = v2;
  if ([v2 isViewLoaded])
  {
    uint64_t v6 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess();
    if (v6[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() + 76)]) {
      unsigned int v7 = 1;
    }
    else {
      unsigned int v7 = [v3 isEditing];
    }
    if (*(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] > 0.0) {
      uint64_t v8 = 1;
    }
    else {
      uint64_t v8 = v7 ^ 1;
    }
    id v9 = sub_10033A304();
    unsigned int v10 = [v9 isHidden];

    if (v8 == v10)
    {
      if (!(v8 & 1 | ((a1 & 1) == 0))
        && *(void *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController])
      {
        swift_retain();
        sub_1002CB370((char)[v3 isEditing], a2 & 1);
        swift_release();
      }
      if (!v7)
      {
LABEL_22:
        double v35 = *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight];
        *(void *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = 0;
        if (v35 == 0.0) {
          return;
        }
        goto LABEL_23;
      }
    }
    else
    {
      if ((v8 & 1) == 0
        && *(void *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController])
      {
        swift_retain();
        sub_1002CB370((char)[v3 isEditing], 0);
        swift_release();
      }
      if (a2)
      {
        uint64_t v11 = self;
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v3;
        *(unsigned char *)(v12 + 24) = v8;
        aBlock[4] = sub_10034708C;
        aBlock[5] = v12;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        void aBlock[2] = sub_10000AD88;
        aBlock[3] = &unk_100746678;
        uint64_t v13 = _Block_copy(aBlock);
        uint64_t v14 = v3;
        swift_release();
        [v11 animateWithDuration:v13 animations:0.33];
        _Block_release(v13);
      }
      else
      {
        id v29 = sub_10033A304();
        [v29 setHidden:v8];
      }
      uint64_t v30 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      uint64_t v31 = *(void *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      id v33 = *(void (**)(uint64_t, uint64_t))(v31 + 184);
      id v34 = v30;
      v33(ObjectType, v31);

      if (!v7) {
        goto LABEL_22;
      }
    }
    id v15 = sub_10033A304();
    [v15 bounds];
    CGFloat v17 = v16;
    CGFloat v19 = v18;
    CGFloat v21 = v20;
    CGFloat v23 = v22;

    v37.origin.CGFloat x = v17;
    v37.origin.CGFloat y = v19;
    v37.size.CGFloat width = v21;
    v37.size.CGFloat height = v23;
    double Height = CGRectGetHeight(v37);
    id v25 = sub_10033A304();
    UIToolbar.toolbarHeightAdjustment_workaround60289707.getter();
    double v27 = v26;

    double v28 = *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight];
    *(double *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = Height + v27;
    if (Height + v27 == v28) {
      return;
    }
LABEL_23:
    sub_100343894();
  }
}

void sub_10033C4DC(char a1)
{
  uint64_t v2 = v1;
  v10.receiver = v2;
  v10.super_class = (Class)swift_getObjectType();
  [super viewWillAppear:a1 & 1];
  sub_10033A3D4();
  double v4 = (void *)UIViewController.effectiveNavigationControllerForBars.getter();
  if (v4)
  {
    uint64_t v5 = v4;
    [v4 setToolbarHidden:1 animated:1];
  }
  sub_10033C6F4(0);
  double v6 = *(double *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight];
  *(void *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] = 0;
  sub_100343B64(v6);
  sub_10033C13C(1, 0);
  id v7 = [self defaultCenter];
  [v7 addObserver:v2 selector:"keyboardWillShowNotificationWithNotification:" name:UIKeyboardWillShowNotification object:0];
  [v7 addObserver:v2 selector:"keyboardDidShowNotificationWithNotification:" name:UIKeyboardDidShowNotification object:0];
  [v7 addObserver:v2 selector:"keyboardWillHideNotificationWithNotification:" name:UIKeyboardWillHideNotification object:0];
  [v7 addObserver:v2 selector:"keyboardDidHideNotificationWithNotification:" name:UIKeyboardDidHideNotification object:0];
  [v7 addObserver:v2 selector:"keyboardWillChangeFrameNotificationWithNotification:" name:UIKeyboardWillChangeFrameNotification object:0];
  [v7 addObserver:v2 selector:"willAddDeactivationReasonWithNotification:" name:_UIApplicationWillAddDeactivationReasonNotification object:0];
  uint64_t v8 = *(void *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v8 + 696))(ObjectType, v8);
  if (*(void *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver])
  {
    swift_retain();
    TTRICurrentTextInputModeObserver.startObserving()();
    swift_release();
  }
}

void sub_10033C6F4(unsigned __int8 a1)
{
  int v2 = v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState];
  v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState] = a1;
  if (v2 != a1)
  {
    uint64_t v3 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
    swift_beginAccess();
    sub_100347580(v3, (uint64_t)v12);
    if ((v12[0] & 1) == 0)
    {
      sub_10034775C((uint64_t)&v13, (uint64_t)&v7);
      if (v11 == 3 && !v10)
      {
        int8x16_t v4 = vorrq_s8(v8, v9);
        if (!(*(void *)&vorr_s8(*(int8x8_t *)v4.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v4, v4, 8uLL)) | v7))
        {
          sub_1003477B8((uint64_t)&v7);
          sub_10034780C((uint64_t)v12);
          return;
        }
      }
      sub_1003477B8((uint64_t)&v7);
    }
    sub_10034780C((uint64_t)v12);
    id v5 = [v1 view];
    if (v5)
    {
      double v6 = v5;
      [v5 setNeedsLayout];
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_10033C860(char a1)
{
  int v2 = v1;
  v8.receiver = v2;
  v8.super_class = (Class)swift_getObjectType();
  [super viewDidAppear:a1 & 1];
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v4 + 688))(ObjectType, v4);
  sub_10033C994(1);
  (*(void (**)(uint64_t, uint64_t))(v4 + 408))(ObjectType, v4);
  TTRModuleState.viewDidAppear()();
  swift_release();
  sub_10033CDE0();
  [*(id *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator] prepare];
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 712))(v7, ObjectType, v4);
  sub_100038D28(v7, v7[3]);
  sub_100561304(v2);
  return sub_100038CD8((uint64_t)v7);
}

void sub_10033C994(char a1)
{
  int v2 = v1;
  if (a1)
  {
    uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t ObjectType = swift_getObjectType();
    id v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
    id v6 = [v1 userActivity];
    [v6 invalidate];

    [v2 setUserActivity:v5];
    if (v5) {
      [v5 setNeedsSave:1];
    }
    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100018BF8(v7, (uint64_t)qword_10079B960);
    id v24 = v5;
    objc_super v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v9))
    {
      char v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)char v10 = 136315138;
      if (v5)
      {
        uint64_t v11 = NSUserActivity.ttrDescription.getter();
        unint64_t v13 = v12;
      }
      else
      {
        uint64_t v11 = 7104878;
        unint64_t v13 = 0xE300000000000000;
      }
      sub_1000385A8(v11, v13, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Reminders list make userActivity current {userActivity: %s}", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_25:
      return;
    }
  }
  else
  {
    id v14 = [v1 userActivity];
    if (v14)
    {
      id v15 = v14;
      [v14 setNeedsSave:1];
    }
    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v16 = type metadata accessor for Logger();
    sub_100018BF8(v16, (uint64_t)qword_10079B960);
    id v24 = v2;
    objc_super v8 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v8, v17))
    {
      double v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)double v18 = 136315138;
      id v19 = [v24 userActivity];
      if (v19)
      {
        double v20 = v19;
        uint64_t v21 = NSUserActivity.ttrDescription.getter();
        unint64_t v23 = v22;
      }
      else
      {
        uint64_t v21 = 7104878;
        unint64_t v23 = 0xE300000000000000;
      }
      sub_1000385A8(v21, v23, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v17, "Reminders list mark userActivity needsSave = true {userActivity: %s}", v18, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_25;
    }
  }
}

void sub_10033CDE0()
{
  id v1 = [v0 splitViewController];
  if (v1)
  {
    id v6 = v1;
    if ([v1 displayMode] == (id)2)
    {
      UIAccessibilityNotifications v2 = UIAccessibilityLayoutChangedNotification;
      id v3 = [v0 navigationController];
      uint64_t v4 = v3;
      if (v3)
      {
        id v5 = [v3 navigationBar];

        sub_1000368FC(0, (unint64_t *)&unk_10079BB40);
        uint64_t v4 = (void *)_bridgeAnythingToObjectiveC<A>(_:)();
      }
      UIAccessibilityPostNotification(v2, v4);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

uint64_t sub_10033CF58(char a1)
{
  UIAccessibilityNotifications v2 = v1;
  v19.receiver = v1;
  v19.super_class = (Class)swift_getObjectType();
  [super viewWillDisappear:a1 & 1];
  uint64_t v4 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 712))(v18, ObjectType, v4);
  *(void *)(*sub_100038D28(v18, v18[3]) + 48) = 0;
  swift_release();
  sub_100038CD8((uint64_t)v18);
  if (*(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver])
  {
    swift_retain();
    TTRICurrentTextInputModeObserver.stopObserving()();
    swift_release();
  }
  [v1 resignFirstResponder];
  (*(void (**)(uint64_t, uint64_t))(v4 + 368))(ObjectType, v4);
  (*(void (**)(uint64_t, uint64_t))(v4 + 704))(ObjectType, v4);
  (*(void (**)(uint64_t, uint64_t))(v4 + 112))(ObjectType, v4);
  id v6 = [self defaultCenter];
  [v6 removeObserver:v1 name:UIKeyboardWillShowNotification object:0];
  [v6 removeObserver:v1 name:UIKeyboardDidShowNotification object:0];
  [v6 removeObserver:v1 name:UIKeyboardWillHideNotification object:0];
  [v6 removeObserver:v1 name:UIKeyboardDidHideNotification object:0];
  [v6 removeObserver:v1 name:UIKeyboardWillChangeFrameNotification object:0];
  [v6 removeObserver:v1 name:_UIApplicationWillAddDeactivationReasonNotification object:0];
  id v7 = [v1 userActivity];
  if (v7)
  {
    objc_super v8 = v7;
    id v9 = [v2 userActivity];
    [v9 resignCurrent];

    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_10079B960);
    id v11 = v8;
    unint64_t v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v12, v13))
    {
      id v14 = (uint8_t *)swift_slowAlloc();
      v18[0] = swift_slowAlloc();
      *(_DWORD *)id v14 = 136315138;
      uint64_t v15 = NSUserActivity.ttrDescription.getter();
      sub_1000385A8(v15, v16, v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Make NSUserActivity resign current {activity: %s}", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 408))(ObjectType, v4);
  TTRModuleState.viewWillDisappear()();

  return swift_release();
}

void sub_10033D468(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(v3 + 24))(a1, ObjectType, v3);
  if (qword_1007854B8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_10079B960);
  id v11 = a1;
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    objc_super v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)objc_super v8 = 136315138;
    uint64_t v9 = NSUserActivity.ttrDescription.getter();
    sub_1000385A8(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Reminders list updated userActivity state {activity: %s}", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10033D6DC()
{
  uint64_t v1 = v0;
  if ([v0 isViewLoaded])
  {
    if ([v0 isEditing])
    {
      UIAccessibilityNotifications v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(uint64_t (**)(void, uint64_t, uint64_t))(v3 + 152);
      id v6 = v2;
      uint64_t v7 = v5(0, ObjectType, v3);

      uint64_t v8 = *(void *)(v7 + 16);
      swift_bridgeObjectRelease();
      if (v8) {
        static TTRLocalizableStrings.RemindersList.selectedCountText(withCount:)();
      }
      else {
        static TTRLocalizableStrings.RemindersList.selectReminders.getter();
      }
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setTitle:v10];
    }
    else
    {
      swift_beginAccess();
      type metadata accessor for TTRRemindersListViewModel.ListInfo();
      swift_bridgeObjectRetain();
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v1 setTitle:v9];
    }
  }
}

uint64_t sub_10033DA04(uint64_t a1, uint64_t a2)
{
  uint64_t v274 = a2;
  uint64_t v275 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v259 = (uint64_t)&v243 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v258 = (uint64_t)&v243 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v257 = (uint64_t)&v243 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v261 = (uint64_t)&v243 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v262 = (uint64_t)&v243 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v263 = (uint64_t)&v243 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v264 = (uint64_t)&v243 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v265 = (uint64_t)&v243 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v267 = (uint64_t)&v243 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v268 = (uint64_t)&v243 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v266 = (uint64_t)&v243 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v269 = (uint64_t)&v243 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v270 = (uint64_t)&v243 - v29;
  __chkstk_darwin(v28);
  v273 = (char *)&v243 - v30;
  uint64_t v31 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v271 = v31;
  uint64_t v272 = v32;
  uint64_t v33 = __chkstk_darwin(v31);
  uint64_t v256 = (uint64_t)&v243 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v33);
  uint64_t v255 = (uint64_t)&v243 - v36;
  uint64_t v37 = __chkstk_darwin(v35);
  uint64_t v254 = (uint64_t)&v243 - v38;
  uint64_t v39 = __chkstk_darwin(v37);
  uint64_t v253 = (uint64_t)&v243 - v40;
  uint64_t v41 = __chkstk_darwin(v39);
  id v43 = (char *)&v243 - v42;
  uint64_t v44 = __chkstk_darwin(v41);
  os_log_type_t v46 = (char *)&v243 - v45;
  uint64_t v47 = __chkstk_darwin(v44);
  uint64_t v49 = (char *)&v243 - v48;
  uint64_t v50 = __chkstk_darwin(v47);
  uint64_t v52 = (char *)&v243 - v51;
  uint64_t v53 = __chkstk_darwin(v50);
  long long v55 = (char *)&v243 - v54;
  uint64_t v56 = __chkstk_darwin(v53);
  unsigned __int8 v58 = (char *)&v243 - v57;
  uint64_t v59 = __chkstk_darwin(v56);
  id v61 = (char *)&v243 - v60;
  __chkstk_darwin(v59);
  char v63 = (char *)&v243 - v62;
  char v64 = v2;
  id v65 = [v2 presentedViewController];

  if (v65) {
    return 0;
  }
  v251 = v63;
  uint64_t v67 = (uint64_t)v273;
  v248 = v58;
  v250 = v61;
  v249 = v55;
  v247 = v52;
  v246 = v49;
  v245 = v46;
  v244 = v43;
  uint64_t v68 = v274;
  v252 = v64;
  uint64_t v69 = v275;
  if (static Selector.== infix(_:_:)())
  {
    char v70 = &v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess();
    return v70[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() + 68)] & 1;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v71 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v72 = swift_getObjectType();
    char v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 848))(v72, v71);
    return v73 & 1;
  }
  if (static Selector.== infix(_:_:)())
  {
    long long v74 = v252;
    uint64_t v75 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    if ([v252 isEditing])
    {
      uint64_t v76 = &v74[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      uint64_t v77 = *(void **)&v74[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      uint64_t v78 = *((void *)v76 + 1);
      uint64_t v79 = swift_getObjectType();
      char v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 152);
      id v81 = v77;
      char v82 = (void *)v80(1, v79, v78);
    }
    else
    {
      char v82 = _swiftEmptyArrayStorage;
    }
    uint64_t v83 = swift_getObjectType();
    char v84 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v75 + 896))(v82, v83, v75);
LABEL_15:
    char v85 = v84;
    swift_bridgeObjectRelease();
    return v85 & 1;
  }
  if (static Selector.== infix(_:_:)()) {
    return 1;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v86 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v87 = swift_getObjectType();
    char v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v86 + 800))(v87, v86);
    return v73 & 1;
  }
  if (static Selector.== infix(_:_:)())
  {
    long long v88 = v252;
    uint64_t v89 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v90 = swift_getObjectType();
    uint64_t v91 = (*(uint64_t (**)(uint64_t, uint64_t))(v89 + 448))(v90, v89);
    uint64_t v92 = *(void *)(v91 + 16);
    if (v92)
    {
      unint64_t v93 = v91 + ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80));
      long long v94 = &v88[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      uint64_t v95 = *(void *)(v272 + 72);
      while (1)
      {
        long long v96 = *(void **)v94;
        uint64_t v97 = *((void *)v94 + 1);
        uint64_t v98 = swift_getObjectType();
        uint64_t v99 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v97 + 192);
        id v100 = v96;
        LOBYTE(v97) = v99(v93, v98, v97);

        if ((v97 & 1) == 0) {
          break;
        }
        v93 += v95;
        if (!--v92) {
          goto LABEL_29;
        }
      }
LABEL_34:
      swift_bridgeObjectRelease();
      return 1;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v101 = v252;
    uint64_t v102 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v103 = swift_getObjectType();
    uint64_t v104 = (*(uint64_t (**)(uint64_t, uint64_t))(v102 + 448))(v103, v102);
    uint64_t v105 = *(void *)(v104 + 16);
    if (v105)
    {
      unint64_t v106 = v104 + ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80));
      uint64_t v107 = &v101[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      uint64_t v108 = *(void *)(v272 + 72);
      while (1)
      {
        char v109 = *(void **)v107;
        uint64_t v110 = *((void *)v107 + 1);
        uint64_t v111 = swift_getObjectType();
        uint64_t v112 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v110 + 192);
        id v113 = v109;
        LOBYTE(v110) = v112(v106, v111, v110);

        if (v110) {
          goto LABEL_34;
        }
        v106 += v108;
        if (!--v105) {
          goto LABEL_29;
        }
      }
    }
    goto LABEL_29;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v114 = v252;
    sub_10033FC48(v67);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v67, 1, v271) == 1)
    {
      uint64_t v115 = v67;
LABEL_33:
      sub_10003B6F8(v115, (uint64_t *)&unk_100788DC0);
      return 0;
    }
    uint64_t v117 = (uint64_t)v251;
    sub_1003470E8(v67, (uint64_t)v251, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v118 = *(void **)&v114[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v119 = *(void *)&v114[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
    uint64_t v120 = swift_getObjectType();
    uint64_t v121 = *(uint64_t (**)(uint64_t, uint64_t))(v119 + 64);
    id v122 = v118;
    unint64_t v123 = (void *)v121(v120, v119);

    if (v123)
    {
      uint64_t v124 = v117;
LABEL_39:
      sub_1003475DC(v124, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return 0;
    }
    uint64_t v127 = *(void *)&v114[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v128 = swift_getObjectType();
    char v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 56))(v117, v128, v127);
    uint64_t v130 = v117;
    goto LABEL_49;
  }
  if (static Selector.== infix(_:_:)())
  {
    int v116 = 1;
LABEL_42:
    int v125 = 1;
LABEL_43:
    uint64_t v126 = (uint64_t)v252;
    return sub_10033F8E0(v116, v125, v126);
  }
  if (static Selector.== infix(_:_:)())
  {
    int v116 = 0;
    goto LABEL_42;
  }
  if (static Selector.== infix(_:_:)())
  {
    int v116 = 1;
    int v125 = 0;
    goto LABEL_43;
  }
  if (static Selector.== infix(_:_:)())
  {
    int v116 = 0;
    int v125 = 0;
    goto LABEL_43;
  }
  if (static Selector.== infix(_:_:)() & 1) != 0 || (static Selector.== infix(_:_:)())
  {
    uint64_t v131 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v132 = swift_getObjectType();
    if (((*(uint64_t (**)(uint64_t, uint64_t))(v131 + 600))(v132, v131) & 1) == 0) {
      return 0;
    }
    uint64_t v133 = v270;
    sub_10033FC48(v270);
    unsigned int v134 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v133, 1, v271);
LABEL_56:
    BOOL v135 = v134 != 1;
    sub_10003B6F8(v133, (uint64_t *)&unk_100788DC0);
    return v135;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v136 = v269;
    sub_10033FC48(v269);
    uint64_t v137 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48);
    if (v137(v136, 1, v271) == 1)
    {
      uint64_t v115 = v269;
      goto LABEL_33;
    }
    uint64_t v139 = (uint64_t)v250;
    sub_1003470E8(v269, (uint64_t)v250, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v140 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v141 = swift_getObjectType();
    sub_10003B754((uint64_t *)&unk_10078E960);
    unint64_t v142 = (*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80);
    uint64_t v143 = swift_allocObject();
    *(_OWORD *)(v143 + 16) = xmmword_10066C6F0;
    sub_100347150(v139, v143 + v142, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    LOBYTE(v140) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 592))(v143, v141, v140);
    swift_bridgeObjectRelease();
    if ((v140 & 1) == 0)
    {
      uint64_t v124 = (uint64_t)v250;
      goto LABEL_39;
    }
    uint64_t v133 = v266;
    sub_10033FC48(v266);
    sub_1003475DC((uint64_t)v250, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    unsigned int v134 = v137(v133, 1, v271);
    goto LABEL_56;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v138 = v268;
    sub_10033FC48(v268);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v138, 1, v271) == 1)
    {
      uint64_t v115 = v268;
      goto LABEL_33;
    }
    uint64_t v145 = (uint64_t)v248;
    sub_1003470E8(v268, (uint64_t)v248, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v146 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v147 = swift_getObjectType();
    char v148 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v146 + 64))(v145, v147, v146);
    goto LABEL_69;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v144 = v267;
    sub_10033FC48(v267);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v144, 1, v271) == 1)
    {
      uint64_t v115 = v267;
      goto LABEL_33;
    }
    uint64_t v150 = (uint64_t)v249;
    sub_1003470E8(v267, (uint64_t)v249, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v151 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v152 = swift_getObjectType();
    __int16 v153 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v151 + 616))(v150, v152, v151);
    if (v153)
    {
      char v129 = 1;
      switch(HIBYTE(v153))
      {
        case 1:
          swift_bridgeObjectRelease();
          char v129 = 0;
          break;
        case 6:
          break;
        default:
          char v170 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v129 = v170 ^ 1;
          break;
      }
    }
    else
    {
      char v129 = 0;
    }
    p_super_class = &v279;
    goto LABEL_132;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v149 = v265;
    sub_10033FC48(v265);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v149, 1, v271) == 1)
    {
      uint64_t v115 = v265;
      goto LABEL_33;
    }
    uint64_t v155 = (uint64_t)v247;
    sub_1003470E8(v265, (uint64_t)v247, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v156 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v157 = swift_getObjectType();
    __int16 v158 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v156 + 616))(v155, v157, v156);
    if (v158)
    {
      char v129 = 1;
      switch(HIBYTE(v158))
      {
        case 2:
          swift_bridgeObjectRelease();
          char v129 = 0;
          break;
        case 6:
          break;
        default:
          char v177 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v129 = v177 ^ 1;
          break;
      }
    }
    else
    {
      char v129 = 0;
    }
    p_super_class = (uint64_t *)&v278;
    goto LABEL_132;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v154 = v264;
    sub_10033FC48(v264);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v154, 1, v271) == 1)
    {
      uint64_t v115 = v264;
      goto LABEL_33;
    }
    uint64_t v160 = (uint64_t)v246;
    sub_1003470E8(v264, (uint64_t)v246, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v161 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v162 = swift_getObjectType();
    __int16 v163 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v161 + 616))(v160, v162, v161);
    if (v163)
    {
      char v129 = 1;
      switch(HIBYTE(v163))
      {
        case 3:
          swift_bridgeObjectRelease();
          char v129 = 0;
          break;
        case 6:
          break;
        default:
          char v181 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v129 = v181 ^ 1;
          break;
      }
    }
    else
    {
      char v129 = 0;
    }
    p_super_class = &v277;
    goto LABEL_132;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v159 = v263;
    sub_10033FC48(v263);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v159, 1, v271) == 1)
    {
      uint64_t v115 = v263;
      goto LABEL_33;
    }
    uint64_t v165 = (uint64_t)v245;
    sub_1003470E8(v263, (uint64_t)v245, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v166 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v167 = swift_getObjectType();
    __int16 v168 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v166 + 616))(v165, v167, v166);
    if (v168)
    {
      char v129 = 1;
      switch(HIBYTE(v168))
      {
        case 4:
          swift_bridgeObjectRelease();
          char v129 = 0;
          break;
        case 6:
          break;
        default:
          char v185 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v129 = v185 ^ 1;
          break;
      }
    }
    else
    {
      char v129 = 0;
    }
    p_super_class = (uint64_t *)&v276.super_class;
    goto LABEL_132;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v164 = v262;
    sub_10033FC48(v262);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v164, 1, v271) == 1)
    {
      uint64_t v115 = v262;
      goto LABEL_33;
    }
    uint64_t v172 = (uint64_t)v244;
    sub_1003470E8(v262, (uint64_t)v244, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v173 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v174 = swift_getObjectType();
    __int16 v175 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v173 + 616))(v172, v174, v173);
    if (v175)
    {
      char v129 = 1;
      switch(HIBYTE(v175))
      {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          char v204 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          char v129 = v204 ^ 1;
          break;
        case 6:
          break;
        default:
          swift_bridgeObjectRelease();
          char v129 = 0;
          break;
      }
    }
    else
    {
      char v129 = 0;
    }
    p_super_class = (uint64_t *)&v276;
LABEL_132:
    uint64_t v130 = *(p_super_class - 32);
    goto LABEL_49;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v169 = v261;
    sub_10033FC48(v261);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v169, 1, v271) == 1)
    {
      uint64_t v115 = v261;
      goto LABEL_33;
    }
    uint64_t v145 = v253;
    sub_1003470E8(v261, v253, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v178 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v179 = swift_getObjectType();
    char v148 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v178 + 648))(v145, v179, v178);
    goto LABEL_69;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v176 = v257;
    sub_10033FC48(v257);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v176, 1, v271) == 1)
    {
      uint64_t v115 = v257;
      goto LABEL_33;
    }
    uint64_t v145 = v254;
    sub_1003470E8(v257, v254, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v182 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v183 = swift_getObjectType();
    char v148 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v182 + 656))(v145, v183, v182);
LABEL_69:
    char v129 = v148;
    uint64_t v130 = v145;
LABEL_49:
    sub_1003475DC(v130, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return v129 & 1;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v180 = v258;
    sub_10033FC48(v258);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v180, 1, v271) == 1)
    {
      uint64_t v115 = v258;
      goto LABEL_33;
    }
    uint64_t v186 = v255;
    sub_1003470E8(v258, v255, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v187 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v188 = swift_getObjectType();
    unsigned __int8 v189 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v187 + 72))(v186, v188, v187);
    goto LABEL_134;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v184 = v259;
    sub_10033FC48(v259);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v272 + 48))(v184, 1, v271) == 1)
    {
      uint64_t v115 = v259;
      goto LABEL_33;
    }
    uint64_t v186 = v256;
    sub_1003470E8(v259, v256, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v205 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v206 = swift_getObjectType();
    unsigned __int8 v189 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 168))(v186, v206, v205);
LABEL_134:
    int v207 = v189;
    sub_1003475DC(v186, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    return v207 != 2;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v190 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v191 = &v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v192 = *(void **)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v193 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
    uint64_t v194 = swift_getObjectType();
    NSString v195 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v193 + 152);
    id v196 = v192;
    uint64_t v197 = v195(1, v194, v193);

    if (!*(void *)(v197 + 16))
    {
      swift_bridgeObjectRelease();
      uint64_t v198 = *(void **)v191;
      uint64_t v199 = *((void *)v191 + 1);
      uint64_t v200 = swift_getObjectType();
      uint64_t v201 = *(uint64_t (**)(uint64_t, uint64_t))(v199 + 80);
      id v202 = v198;
      uint64_t v197 = v201(v200, v199);
    }
    uint64_t v203 = swift_getObjectType();
    char v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v190 + 544))(v197, v203, v190);
    goto LABEL_15;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v208 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v209 = &v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v210 = *(void **)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v211 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
    uint64_t v212 = swift_getObjectType();
    uint64_t v213 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 152);
    id v214 = v210;
    uint64_t v215 = v213(1, v212, v211);

    if (!*(void *)(v215 + 16))
    {
      swift_bridgeObjectRelease();
      v216 = *(void **)v209;
      uint64_t v217 = *((void *)v209 + 1);
      uint64_t v218 = swift_getObjectType();
      uint64_t v219 = *(uint64_t (**)(uint64_t, uint64_t))(v217 + 80);
      id v220 = v216;
      uint64_t v215 = v219(v218, v217);
    }
    uint64_t v221 = swift_getObjectType();
    char v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v208 + 552))(v215, v221, v208);
    goto LABEL_15;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v222 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v223 = &v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    v224 = *(void **)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v225 = *(void *)&v252[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
    uint64_t v226 = swift_getObjectType();
    uint64_t v227 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v225 + 152);
    id v228 = v224;
    uint64_t v229 = v227(1, v226, v225);

    if (!*(void *)(v229 + 16))
    {
      swift_bridgeObjectRelease();
      v230 = *(void **)v223;
      uint64_t v231 = *((void *)v223 + 1);
      uint64_t v232 = swift_getObjectType();
      uint64_t v233 = *(uint64_t (**)(uint64_t, uint64_t))(v231 + 80);
      id v234 = v230;
      uint64_t v229 = v233(v232, v231);
    }
    uint64_t v235 = swift_getObjectType();
    char v84 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v222 + 560))(v229, v235, v222);
    goto LABEL_15;
  }
  sub_10003B694(v68, (uint64_t)&v277, &qword_100788D60);
  uint64_t v236 = v279;
  if (v279)
  {
    uint64_t v237 = sub_100038D28(&v277, v279);
    uint64_t v238 = *(void *)(v236 - 8);
    __chkstk_darwin(v237);
    v240 = (char *)&v243 - ((v239 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v238 + 16))(v240);
    uint64_t v241 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v238 + 8))(v240, v236);
    sub_100038CD8((uint64_t)&v277);
  }
  else
  {
    uint64_t v241 = 0;
  }
  v276.receiver = v252;
  v276.super_class = ObjectType;
  unsigned __int8 v242 = [super canPerformAction:v69 withSender:v241];
  swift_unknownObjectRelease();
  return v242 & 1;
}

uint64_t sub_10033F8E0(int a1, int a2, uint64_t a3)
{
  int v43 = a2;
  int v40 = a1;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v39[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v41 = &v39[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v42 = &v39[-v11];
  uint64_t v12 = a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v14 = *(void *)(a3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 96);
  id v17 = v13;
  int v18 = v16(ObjectType, v14);

  if ((v18 ^ v43)) {
    goto LABEL_10;
  }
  sub_10033FC48((uint64_t)v6);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
LABEL_10:
    char v37 = 0;
    return v37 & 1;
  }
  uint64_t v19 = a3;
  uint64_t v20 = v42;
  sub_1003470E8((uint64_t)v6, (uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v21 = *(void **)v12;
  uint64_t v22 = *(void *)(v12 + 8);
  uint64_t v23 = swift_getObjectType();
  uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 64);
  id v25 = v21;
  uint64_t v26 = (void *)v24(v23, v22);

  if (v26)
  {
    uint64_t v27 = (uint64_t)v20;
LABEL_9:
    sub_1003475DC(v27, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    goto LABEL_10;
  }
  uint64_t v28 = *(void *)(v19 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v29 = swift_getObjectType();
  char v30 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v28 + 456))(v20, v29, v28);
  uint64_t v31 = v41;
  sub_100347150((uint64_t)v20, (uint64_t)v41, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  if ((v30 & 1) == 0)
  {
    sub_1003475DC((uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    uint64_t v27 = (uint64_t)v20;
    goto LABEL_9;
  }
  uint64_t v32 = *(void **)v12;
  uint64_t v33 = *(void *)(v12 + 8);
  uint64_t v34 = swift_getObjectType();
  uint64_t v35 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v33 + 192);
  id v36 = v32;
  LOBYTE(v33) = v35(v31, v34, v33);

  sub_1003475DC((uint64_t)v31, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  sub_1003475DC((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  char v37 = v33 ^ v40;
  return v37 & 1;
}

uint64_t sub_10033FC48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v8 = *(void *)(v6 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 64);
  id v11 = v7;
  uint64_t v12 = (void *)v10(ObjectType, v8);
  uint64_t v14 = v13;

  if (!v12)
  {
    uint64_t v15 = *(void **)v6;
    uint64_t v16 = *(void *)(v6 + 8);
    uint64_t v17 = swift_getObjectType();
    int v18 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 72);
    id v19 = v15;
    uint64_t v12 = (void *)v18(v17, v16);
    uint64_t v14 = v20;

    if (!v12) {
      goto LABEL_7;
    }
  }
  uint64_t v21 = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v14 + 16))(v29, v21, v14);

  uint64_t v22 = v30;
  if (!v30)
  {
    sub_10003B6F8((uint64_t)v29, (uint64_t *)&unk_10079C850);
LABEL_7:
    uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
LABEL_8:
    sub_10003B6F8((uint64_t)v5, (uint64_t *)&unk_100788DC0);
    type metadata accessor for TTRRemindersListViewModel.Item();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 1, 1, v24);
  }
  uint64_t v23 = v31;
  sub_100038D28(v29, v30);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v23);
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
  v26(v5, 0, 1, v24);
  sub_100038CD8((uint64_t)v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v5, 1, v24) == 1) {
    goto LABEL_8;
  }
  sub_1003470E8((uint64_t)v5, a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v26)(a1, 0, 1, v24);
}

uint64_t sub_10033FFD4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v2 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 152);
  id v7 = v3;
  uint64_t v8 = v6(1, ObjectType, v4);

  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)v2;
    uint64_t v10 = *(void *)(v2 + 8);
    uint64_t v11 = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 80);
    id v13 = v9;
    uint64_t v8 = v12(v11, v10);
  }
  uint64_t v14 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 568))(v8, v14, v1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100340108()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v2 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 152);
  id v7 = v3;
  uint64_t v8 = v6(1, ObjectType, v4);

  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)v2;
    uint64_t v10 = *(void *)(v2 + 8);
    uint64_t v11 = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 80);
    id v13 = v9;
    uint64_t v8 = v12(v11, v10);
  }
  uint64_t v14 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 576))(v8, v14, v1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_10034023C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t v2 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 152);
  id v7 = v3;
  uint64_t v8 = v6(1, ObjectType, v4);

  if (!*(void *)(v8 + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = *(void **)v2;
    uint64_t v10 = *(void *)(v2 + 8);
    uint64_t v11 = swift_getObjectType();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 80);
    id v13 = v9;
    uint64_t v8 = v12(v11, v10);
  }
  uint64_t v14 = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 584))(v8, v14, v1);

  return swift_bridgeObjectRelease();
}

void sub_100340370(void *a1)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v70 - v8;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v13 = (char *)&v70 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v70 - v16;
  [a1 action:v15];
  if (static Selector.== infix(_:_:)())
  {
    v18._countAndFlagsBits = 0xD00000000000002DLL;
    v18._object = (void *)0x80000001006B6C00;
    v19._countAndFlagsBits = 0x696D65522077654ELL;
    v19._object = (void *)0xEC0000007265646ELL;
    TTRLocalizedString(_:comment:)(v19, v18);
    unint64_t v20 = 0xD000000000000029;
    unint64_t v21 = 0x80000001006B6C30;
    uint64_t v22 = 0x6D6574492077654ELL;
    unint64_t v23 = 0xE800000000000000;
LABEL_3:
    TTRLocalizedString(_:comment:)(*(Swift::String *)&v22, *(Swift::String *)&v20);
    swift_beginAccess();
    type metadata accessor for TTRRemindersListViewModel.ListInfo();
LABEL_4:
    swift_bridgeObjectRelease();
    NSString v24 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a1 setDiscoverabilityTitle:v24];

    return;
  }
  if (static Selector.== infix(_:_:)())
  {
    static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)();
LABEL_9:
    NSString v25 = String._bridgeToObjectiveC()();
    [a1 setTitle:v25];

    NSString v71 = String._bridgeToObjectiveC()();
LABEL_10:
    swift_bridgeObjectRelease();
    [a1 setDiscoverabilityTitle:v71];
    uint64_t v26 = v71;

    return;
  }
  if (static Selector.== infix(_:_:)())
  {
    static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)();
    goto LABEL_9;
  }
  if (static Selector.== infix(_:_:)())
  {
    v27._object = (void *)0x80000001006B6B80;
    v28._countAndFlagsBits = 0x6D6F4320776F6853;
    v28._object = (void *)0xEE00646574656C70;
    v27._countAndFlagsBits = 0xD000000000000037;
    TTRLocalizedString(_:comment:)(v28, v27);
    v29._object = (void *)0x80000001006B6BC0;
    v30._countAndFlagsBits = 0x6D6F432065646948;
    v30._object = (void *)0xEE00646574656C70;
    v29._countAndFlagsBits = 0xD000000000000037;
    TTRLocalizedString(_:comment:)(v30, v29);
    swift_beginAccess();
    type metadata accessor for TTRRemindersListViewModel.ListInfo();
    goto LABEL_4;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v31 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
    uint64_t v32 = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 608))(3, v32, v31);
    NSString v71 = String._bridgeToObjectiveC()();
    goto LABEL_10;
  }
  if (static Selector.== infix(_:_:)())
  {
    uint64_t v33 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v34 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v35 = *((void *)v33 + 1);
    uint64_t v36 = swift_getObjectType();
    char v37 = *(uint64_t (**)(uint64_t, uint64_t))(v35 + 64);
    id v38 = v34;
    uint64_t v39 = (void *)v37(v36, v35);
    uint64_t v41 = v40;

    if (v39) {
      goto LABEL_20;
    }
    uint64_t v42 = *(void **)v33;
    uint64_t v43 = *((void *)v33 + 1);
    uint64_t v44 = swift_getObjectType();
    uint64_t v45 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 72);
    id v46 = v42;
    uint64_t v39 = (void *)v45(v44, v43);
    uint64_t v41 = v47;

    if (v39)
    {
LABEL_20:
      uint64_t v48 = swift_getObjectType();
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v41 + 16))(&v72, v48, v41);

      if (*((void *)&v73 + 1))
      {
        sub_100038ED8(&v72, (uint64_t)v75);
        v49._countAndFlagsBits = 0xD000000000000011;
        v49._object = (void *)0x80000001006AC930;
        v50._object = (void *)0x80000001006B6B00;
        v50._countAndFlagsBits = 0xD000000000000032;
        TTRLocalizedString(_:comment:)(v49, v50);
        v51._countAndFlagsBits = 0xD000000000000012;
        v52._countAndFlagsBits = 0xD000000000000034;
        v51._object = (void *)0x80000001006AC8E0;
        v52._object = (void *)0x80000001006B6B40;
        TTRLocalizedString(_:comment:)(v51, v52);
        uint64_t v53 = v76;
        uint64_t v54 = v77;
        sub_100038D28(v75, v76);
        (*(void (**)(uint64_t, uint64_t))(v54 + 40))(v53, v54);
        swift_bridgeObjectRelease();
        NSString v55 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [a1 setDiscoverabilityTitle:v55];

        sub_100038CD8((uint64_t)v75);
        return;
      }
    }
    else
    {
      uint64_t v74 = 0;
      long long v72 = 0u;
      long long v73 = 0u;
    }
    sub_10003B6F8((uint64_t)&v72, (uint64_t *)&unk_10079C850);
  }
  else
  {
    if (static Selector.== infix(_:_:)())
    {
      v56._countAndFlagsBits = 0xD000000000000036;
      v56._object = (void *)0x80000001006B6A80;
      v57._countAndFlagsBits = 0x5220746E65646E49;
      v57._object = (void *)0xEF7265646E696D65;
      TTRLocalizedString(_:comment:)(v57, v56);
      unint64_t v21 = 0x80000001006B6AC0;
      uint64_t v22 = 0x4920746E65646E49;
      unint64_t v23 = 0xEB000000006D6574;
      unint64_t v20 = 0xD000000000000032;
      goto LABEL_3;
    }
    if (static Selector.== infix(_:_:)())
    {
      v58._countAndFlagsBits = 0xD000000000000010;
      v59._countAndFlagsBits = 0xD000000000000038;
      v58._object = (void *)0x80000001006B69E0;
      v59._object = (void *)0x80000001006B6A00;
      TTRLocalizedString(_:comment:)(v58, v59);
      unint64_t v20 = 0xD000000000000034;
      unint64_t v21 = 0x80000001006B6A40;
      uint64_t v22 = 0x20746E656474754FLL;
      unint64_t v23 = 0xEC0000006D657449;
      goto LABEL_3;
    }
    if (static Selector.== infix(_:_:)())
    {
      sub_10033FC48((uint64_t)v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
      {
        sub_10003B6F8((uint64_t)v9, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        sub_1003470E8((uint64_t)v9, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v60 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
        uint64_t v61 = swift_getObjectType();
        if ((*(unsigned __int8 (**)(char *, uint64_t, uint64_t))(v60 + 72))(v17, v61, v60) != 2)
        {
          v62._countAndFlagsBits = 0xD000000000000025;
          v62._object = (void *)0x80000001006B6980;
          v63._countAndFlagsBits = 1734437958;
          v63._object = (void *)0xE400000000000000;
          TTRLocalizedString(_:comment:)(v63, v62);
          v64._countAndFlagsBits = 0xD000000000000027;
          v64._object = (void *)0x80000001006B69B0;
          v65._countAndFlagsBits = 0x67616C666E55;
          v65._object = (void *)0xE600000000000000;
          TTRLocalizedString(_:comment:)(v65, v64);
          swift_bridgeObjectRelease();
          NSString v66 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [a1 setDiscoverabilityTitle:v66];
        }
        sub_1003475DC((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
    else if (static Selector.== infix(_:_:)())
    {
      sub_10033FC48((uint64_t)v6);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) == 1)
      {
        sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
      }
      else
      {
        sub_1003470E8((uint64_t)v6, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
        uint64_t v67 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
        uint64_t v68 = swift_getObjectType();
        if ((*(unsigned __int8 (**)(char *, uint64_t, uint64_t))(v67 + 168))(v13, v68, v67) != 2)
        {
          static TTRLocalizableStrings.RemindersList.keyCommandTitleForAddingStructuredHashtag(hasExistingStructuredHashtags:)();
          NSString v69 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [a1 setDiscoverabilityTitle:v69];
        }
        sub_1003475DC((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
    else
    {
      v78.receiver = v1;
      v78.super_class = ObjectType;
      [super validateCommand:a1];
    }
  }
}

uint64_t sub_100340F24()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033FC48((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
  }
  sub_1003470E8((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754((uint64_t *)&unk_10078E960);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10066C6F0;
  sub_100347150((uint64_t)v7, v14 + v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  double v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 208);
  id v16 = v10;
  v15(v14, ObjectType, v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();

  return sub_1003475DC((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100341188()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033FC48((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
  }
  sub_1003470E8((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v11 = *(void *)(v9 + 8);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754((uint64_t *)&unk_10078E960);
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10066C6F0;
  sub_100347150((uint64_t)v7, v14 + v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  double v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 200);
  id v16 = v10;
  v15(v14, ObjectType, v11);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();

  return sub_1003475DC((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

void sub_10034162C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  sub_1001B18B8(0, ObjectType, v1);
  LODWORD(v1) = UIAccessibilityLayoutChangedNotification;
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t v5 = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 64);
  id v7 = v3;
  id argument = (id)v6(v5, v4);

  UIAccessibilityPostNotification(v1, argument);
}

void sub_100341720()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 64);
  id v6 = v2;
  id v17 = (id)v5(ObjectType, v3);
  uint64_t v8 = v7;

  id v9 = v17;
  if (v17) {
    goto LABEL_3;
  }
  uint64_t v10 = *(void **)v1;
  uint64_t v11 = *(void *)(v1 + 8);
  uint64_t v12 = swift_getObjectType();
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 72);
  id v14 = v10;
  id v18 = (id)v13(v12, v11);
  uint64_t v8 = v15;

  id v9 = v18;
  if (v18)
  {
LABEL_3:
    id v19 = v9;
    uint64_t v16 = swift_getObjectType();
    (*(void (**)(void, uint64_t))(*(void *)(v8 + 8) + 16))(0, v16);
  }
}

void sub_100341A88()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v0;
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  id v9 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v10 = *(void *)(v8 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 64);
  id v13 = v9;
  id v14 = (void *)v12(ObjectType, v10);
  uint64_t v16 = v15;

  if (v14) {
    goto LABEL_3;
  }
  id v17 = *(void **)v8;
  uint64_t v18 = *(void *)(v8 + 8);
  uint64_t v19 = swift_getObjectType();
  unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 72);
  id v21 = v17;
  id v14 = (void *)v20(v19, v18);
  uint64_t v16 = v22;

  if (v14)
  {
LABEL_3:
    uint64_t v23 = (uint64_t)v35;
    sub_10033FC48((uint64_t)v3);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
    {

      sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
    }
    else
    {
      sub_1003470E8((uint64_t)v3, v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      uint64_t v24 = swift_getObjectType();
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v24, v16);
      if (v25)
      {
        uint64_t v26 = (void *)v25;
        uint64_t v27 = *(void *)(v7 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
        Swift::String v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 32))(v24, v16);
        Swift::String v29 = v28;
        if (v28)
        {
          id v30 = [v28 string];

          Swift::String v29 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v32 = v31;
        }
        else
        {
          uint64_t v32 = 0;
        }
        uint64_t v33 = swift_getObjectType();
        (*(void (**)(uint64_t, void *, uint64_t, void *, uint64_t, uint64_t))(v27 + 96))(v23, v29, v32, v26, v33, v27);

        swift_bridgeObjectRelease();
        sub_1003475DC(v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      else
      {
        sub_1003475DC(v23, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
    }
  }
}

uint64_t sub_100341DD8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController;
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v7 = *(void *)(v5 + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 64);
  id v10 = v6;
  uint64_t v11 = (void *)v9(ObjectType, v7);
  uint64_t v13 = v12;

  if (v11) {
    goto LABEL_3;
  }
  id v14 = *(void **)v5;
  uint64_t v15 = *(void *)(v5 + 8);
  uint64_t v16 = swift_getObjectType();
  id v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 72);
  id v18 = v14;
  uint64_t v11 = (void *)v17(v16, v15);
  uint64_t v13 = v19;

  if (v11)
  {
LABEL_3:
    uint64_t v20 = swift_getObjectType();
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v13 + 16))(&v28, v20, v13);

    if (*((void *)&v29 + 1))
    {
      sub_100038ED8(&v28, (uint64_t)v31);
      uint64_t v21 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
      uint64_t v22 = swift_getObjectType();
      uint64_t v23 = v32;
      uint64_t v24 = v33;
      sub_100038D28(v31, v32);
      LOBYTE(v23) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 40))(v23, v24);
      uint64_t v25 = v32;
      uint64_t v26 = v33;
      sub_100038D28(v31, v32);
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v25, v26);
      (*(void (**)(BOOL, char *, uint64_t, uint64_t))(v21 + 40))((v23 & 1) == 0, v4, v22, v21);
      sub_1003475DC((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      return sub_100038CD8((uint64_t)v31);
    }
  }
  else
  {
    uint64_t v30 = 0;
    long long v28 = 0u;
    long long v29 = 0u;
  }
  return sub_10003B6F8((uint64_t)&v28, (uint64_t *)&unk_10079C850);
}

uint64_t sub_100342048()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033FC48((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
  }
  sub_1003470E8((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754((uint64_t *)&unk_10078E960);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10066C6F0;
  sub_100347150((uint64_t)v7, v12 + v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 664))(v12, ObjectType, v9);
  swift_bridgeObjectRelease();
  return sub_1003475DC((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_10034226C()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033FC48((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
  }
  sub_1003470E8((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  sub_10003B754((uint64_t *)&unk_10078E960);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_10066C6F0;
  sub_100347150((uint64_t)v7, v12 + v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 672))(v12, ObjectType, v9);
  swift_bridgeObjectRelease();
  return sub_1003475DC((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100342490()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033FC48((uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1) {
    return sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788DC0);
  }
  sub_1003470E8((uint64_t)v3, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v11 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 72))(v7, ObjectType, v9);
  if (v11 != 2) {
    (*(void (**)(void, char *, uint64_t, uint64_t))(v9 + 88))(v11 & 1, v7, ObjectType, v9);
  }
  return sub_1003475DC((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100342880(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10033FC48((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_100788DC0);
  }
  sub_1003470E8((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 624))(v10, a2, ObjectType, v12);
  return sub_1003475DC((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
}

uint64_t sub_100342A4C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  sub_100342880((uint64_t)v7, a4);

  return sub_10003B6F8((uint64_t)v9, &qword_100788D60);
}

uint64_t sub_100342DB0()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  if ([v0 isEditing])
  {
    uint64_t v2 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v3 = *(void **)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v4 = *((void *)v2 + 1);
    uint64_t ObjectType = swift_getObjectType();
    id v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 152);
    id v7 = v3;
    uint64_t v8 = (void *)v6(1, ObjectType, v4);
  }
  else
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
  }
  uint64_t v9 = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t))(v1 + 904))(v8, v9, v1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_100342EB8(void *a1, uint64_t a2, uint64_t a3, void (*a4)(id))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    _bridgeAnyObjectToAny(_:)();
    id v7 = (id)swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
    id v7 = a1;
  }
  a4(v7);

  return sub_10003B6F8((uint64_t)v9, &qword_100788D60);
}

void sub_100342F3C()
{
  qword_10079B978 = 0x4046000000000000;
}

void sub_100342F4C()
{
  qword_10079B980 = 0x4059000000000000;
}

void sub_100342F5C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4);
  uint64_t v63 = (uint64_t)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_10003B754(&qword_10079BAB8);
  __chkstk_darwin(v65);
  id v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_10003B754(&qword_10079BAB0);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v64 = (uint64_t)&v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v70 = (uint64_t)&v62 - v11;
  uint64_t v12 = (int *)type metadata accessor for TTRRemindersListViewModel.ListInfo();
  uint64_t v13 = __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v68 = (uint64_t)&v62 - v16;
  __chkstk_darwin(v15);
  id v18 = (char *)&v62 - v17;
  uint64_t v19 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  NSString v20 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setTitle:v20];

  uint64_t v21 = v12[6];
  uint64_t v22 = *(void **)(v19 + v21);
  uint64_t v23 = *(void **)(a1 + v21);
  sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  id v24 = v22;
  id v25 = v23;
  LOBYTE(v20) = static NSObject.== infix(_:_:)();

  if ((v20 & 1) == 0) {
    sub_10033A3D4();
  }
  uint64_t v26 = v12[19];
  int v27 = *(unsigned __int8 *)(v19 + v26);
  int v28 = *(unsigned __int8 *)(a1 + v26);
  sub_100347150(a1, (uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v27 == v28)
  {
    uint64_t v30 = v12[28];
    int v31 = *(unsigned __int8 *)(v19 + v30);
    int v32 = v18[v30];
    sub_1003475DC((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    uint64_t v29 = v66;
    if (v31 == v32) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_1003475DC((uint64_t)v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
    uint64_t v29 = v66;
  }
  sub_10033C13C(1, 0);
LABEL_7:
  uint64_t v33 = v12[22];
  uint64_t v34 = (void *)(v19 + v33);
  uint64_t v35 = *(void *)(v19 + v33 + 8);
  uint64_t v36 = (void *)(a1 + v33);
  uint64_t v37 = v36[1];
  if (!v35)
  {
    if (!v37) {
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (!v37 || (*v34 != *v36 || v35 != v37) && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0) {
LABEL_14:
  }
    sub_10034368C();
LABEL_15:
  uint64_t v38 = v12[25];
  uint64_t v39 = v19 + v38;
  uint64_t v40 = v70;
  sub_10003B694(a1 + v38, v70, &qword_10079BAB0);
  uint64_t v41 = (uint64_t)&v7[*(int *)(v65 + 48)];
  sub_10003B694(v39, (uint64_t)v7, &qword_10079BAB0);
  sub_10003B694(v40, v41, &qword_10079BAB0);
  uint64_t v42 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  uint64_t v43 = v67;
  if (v42((uint64_t)v7, 1, v67) == 1)
  {
    sub_10003B6F8(v40, &qword_10079BAB0);
    if (v42(v41, 1, v43) == 1)
    {
      sub_10003B6F8((uint64_t)v7, &qword_10079BAB0);
      uint64_t v44 = a1;
      uint64_t v45 = v68;
      sub_100347150(v44, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  uint64_t v46 = v64;
  sub_10003B694((uint64_t)v7, v64, &qword_10079BAB0);
  if (v42(v41, 1, v43) == 1)
  {
    sub_10003B6F8(v70, &qword_10079BAB0);
    sub_1003475DC(v46, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
LABEL_20:
    sub_10003B6F8((uint64_t)v7, &qword_10079BAB8);
    uint64_t v47 = a1;
    uint64_t v45 = v68;
    sub_100347150(v47, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_21:
    sub_1003475DC(v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
LABEL_24:
    sub_10033AE68();
    goto LABEL_25;
  }
  uint64_t v48 = v63;
  sub_1003470E8(v41, v63, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  char v49 = static TTRTemplatePublicLinkData.__derived_struct_equals(_:_:)();
  sub_1003475DC(v48, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  sub_10003B6F8(v70, &qword_10079BAB0);
  sub_1003475DC(v46, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
  sub_10003B6F8((uint64_t)v7, &qword_10079BAB0);
  uint64_t v50 = a1;
  uint64_t v45 = v68;
  sub_100347150(v50, v68, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if ((v49 & 1) == 0) {
    goto LABEL_21;
  }
LABEL_23:
  uint64_t v51 = v12[28];
  int v52 = *(unsigned __int8 *)(v19 + v51);
  int v53 = *(unsigned __int8 *)(v45 + v51);
  sub_1003475DC(v45, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  if (v52 != v53) {
    goto LABEL_24;
  }
LABEL_25:
  sub_10033A8AC();
  if ([self deviceSupportsPencil]
    && (*(unsigned char *)(v19 + v12[30] + 1) & 1) != 0)
  {
    double v54 = 176.0;
  }
  else
  {
    double v54 = 0.0;
  }
  double v55 = *(double *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight];
  *(double *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight] = v54;
  if (v54 != v55) {
    sub_100343894();
  }
  Swift::String v56 = *(void **)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  uint64_t v57 = *(void *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v59 = v69;
  sub_100347150(v19, v69, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 128);
  id v61 = v56;
  v60(v59, ObjectType, v57);

  sub_1003475DC(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  sub_10033B180();
}

id sub_10034368C()
{
  uint64_t v1 = v0;
  id result = [v0 isViewLoaded];
  if (result)
  {
    uint64_t v3 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
    swift_beginAccess();
    if (*(void *)&v3[*(int *)(type metadata accessor for TTRRemindersListViewModel.ListInfo() + 88) + 8])
    {
      sub_10003B754(&qword_10079BAD8);
      swift_bridgeObjectRetain();
      uint64_t v4 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
      type metadata accessor for TTRUserDefaults();
      id v5 = v4;
      TTRTreeViewCollapsedStatesUserDefaultsPersistence.__allocating_init(autosaveName:userDefaults:)();
      sub_10003B754(&qword_10079C820);
      swift_allocObject();
      sub_100037EA0((unint64_t *)&unk_10079BAE0, &qword_10079BAD8);
    }
    else
    {
      sub_10003B754((uint64_t *)&unk_10079BAC0);
      swift_allocObject();
      TTRTreeViewCollapsedStatesInMemoryPersistence.init()();
      sub_10003B754(&qword_10079C820);
      swift_allocObject();
      sub_100037EA0(&qword_10079BAD0, (uint64_t *)&unk_10079BAC0);
    }
    uint64_t v6 = TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)();
    id v7 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
    uint64_t v9 = *((void *)v7 + 1);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 216);
    id v12 = v8;
    v11(v6, ObjectType, v9);

    return (id)swift_release();
  }
  return result;
}

void sub_100343894()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ([v0 isViewLoaded])
  {
    uint64_t v5 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight;
    double v6 = *(double *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight];
    if (v6 <= 0.0)
    {
      double v6 = *(double *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight];
    }
    else
    {
      if (qword_1007854C8 != -1) {
        swift_once();
      }
      if (v6 >= *(double *)&qword_10079B980)
      {
        uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v9 = (uint64_t)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance];
        swift_beginAccess();
        sub_10003B694(v9, (uint64_t)v4, (uint64_t *)&unk_100788DC0);
        char v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 280))(v4, ObjectType, v7);
        sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
        if ((v10 & 1) == 0)
        {
          double v19 = v6;
          goto LABEL_17;
        }
        uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        uint64_t v12 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
        uint64_t v13 = swift_getObjectType();
        sub_10003B694(v9, (uint64_t)v4, (uint64_t *)&unk_100788DC0);
        uint64_t v14 = *(double (**)(char *, uint64_t, uint64_t))(v12 + 136);
        id v15 = v11;
        double v16 = v14(v4, v13, v12);

        sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DC0);
        double v17 = v16 - *(double *)&v1[v5];
        double v18 = v17 * 0.2;
        if (qword_1007854C0 != -1)
        {
          double v26 = v17 * 0.2;
          swift_once();
          double v18 = v26;
        }
        if (v17 < 0.0) {
          double v18 = 0.0;
        }
        if (v18 >= *(double *)&qword_10079B978 * 3.0) {
          double v18 = *(double *)&qword_10079B978 * 3.0;
        }
LABEL_16:
        double v19 = v6 + v18;
LABEL_17:
        NSString v20 = &v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        uint64_t v22 = *((void *)v20 + 1);
        uint64_t v23 = swift_getObjectType();
        id v24 = *(void (**)(uint64_t, uint64_t, double, double))(v22 + 176);
        id v25 = v21;
        v24(v23, v22, v19, v6);

        return;
      }
    }
    double v18 = *(double *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight];
    goto LABEL_16;
  }
}

uint64_t sub_100343B64(double a1)
{
  uint64_t result = sub_1004F75A0(a1, 0.0000000149011612, *(double *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight]);
  if ((result & 1) == 0)
  {
    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100018BF8(v3, (uint64_t)qword_10079B960);
    uint64_t v4 = v1;
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      v13[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315394;
      uint64_t v8 = Double.description.getter();
      sub_1000385A8(v8, v9, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2080;
      uint64_t v10 = Double.description.getter();
      sub_1000385A8(v10, v11, v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Update keyboardHeight from %s to %s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100343894();
    uint64_t result = (uint64_t)[v4 isViewLoaded];
    if (result)
    {
      uint64_t v12 = &v4[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo];
      swift_beginAccess();
      uint64_t result = type metadata accessor for TTRRemindersListViewModel.ListInfo();
      if (v12[*(int *)(result + 112)] == 1)
      {
        sub_100343DDC();
        sub_10010797C();
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_100343DDC()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController;
  if (*(void *)(v0
                 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController))
  {
    uint64_t v2 = *(void *)(v0
                   + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController);
  }
  else
  {
    uint64_t v3 = v0;
    type metadata accessor for TTRIAutoCategorizationOverlayController();
    swift_allocObject();
    uint64_t v2 = sub_10010844C();
    *(void *)(v2 + 24) = &off_100746618;
    swift_unknownObjectWeakAssign();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_100343E74(char *a1)
{
  sub_10003B754((uint64_t *)&unk_100793B30);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_10066C680;
  uint64_t v3 = *(void **)&a1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView];
  *(void *)(v2 + 32) = v3;
  id v4 = v3;
  *(void *)(v2 + 40) = sub_10033A304();
  aBlock[0] = v2;
  specialized Array._endMutation()();
  sub_10003B754((uint64_t *)&unk_10079BB00);
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  sub_100037EA0(&qword_10079BB10, (uint64_t *)&unk_10079BB00);
  unint64_t v5 = Sequence.removingNils<A>()();
  swift_bridgeObjectRelease();
  uint64_t isEscapingClosureAtFileLocation = a1;
  unint64_t v7 = (unint64_t)sub_1003472D0(v5, (void *)isEscapingClosureAtFileLocation);
  swift_bridgeObjectRelease();

  if (v7 >> 62) {
    goto LABEL_5;
  }
  if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return swift_bridgeObjectRelease();
  }
  while (1)
  {
    uint64_t v8 = self;
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = isEscapingClosureAtFileLocation;
    unint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1003474B4;
    *(void *)(v7 + 24) = v9;
    aBlock[4] = sub_1000218B0;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100021888;
    aBlock[3] = &unk_1007467B8;
    uint64_t v10 = _Block_copy(aBlock);
    id v11 = (id)isEscapingClosureAtFileLocation;
    swift_retain();
    swift_release();
    [v8 performWithoutAnimation:v10];
    _Block_release(v10);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_5:
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v13) {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

id sub_100344118(unint64_t a1, void *a2)
{
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_10:
    return (id)swift_bridgeObjectRelease();
  }
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v5 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(a1 + 8 * v5);
    }
    unint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_14;
    }
    id result = [a2 view];
    if (!result) {
      break;
    }
    uint64_t v10 = result;
    [result bringSubviewToFront:v7];

    ++v5;
    if (v8 == v4) {
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

void sub_100344234(uint64_t a1)
{
  unsigned __int16 v1 = *(_WORD *)(a1 + 1);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_100344290(v1);
  }
}

void sub_100344290(unsigned __int16 a1)
{
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver];
  if (v2)
  {
    swift_beginAccess();
    __int16 v4 = *(_WORD *)(v2 + 16);
    if (v4 != 2)
    {
      unsigned int v5 = a1;
      int v6 = v4 & 1;
      unsigned int v7 = v4 & 0x100;
      int v8 = a1;
      if (a1 == 2 || v6 != (a1 & 1))
      {
        id v9 = [v1 navigationItem];
        id v10 = [v9 scrollEdgeAppearance];

        if (v10)
        {
          id v11 = [v10 copy];

          uint64_t v12 = &selRef_configureWithTransparentBackground;
          if (v6) {
            uint64_t v12 = &selRef_configureWithDefaultBackground;
          }
          [v11 *v12];
          id v13 = [v1 navigationItem];
          [v13 setScrollEdgeAppearance:v11];
        }
        if (v8 == 2) {
          goto LABEL_11;
        }
      }
      if (((v5 >> 8) & 1) != v7 >> 8)
      {
LABEL_11:
        id v14 = sub_10033A304();
        id v15 = [v14 standardAppearance];

        id v16 = [v15 copy];
        double v17 = &selRef_configureWithDefaultBackground;
        if (v7) {
          double v17 = &selRef_configureWithTransparentBackground;
        }
        [v16 *v17];
        id v18 = sub_10033A304();
        [v18 setStandardAppearance:v16];

        id v19 = sub_10033A304();
        [v19 setNeedsLayout];
      }
    }
  }
}

void sub_10034447C()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (!v0)
  {
    long long v7 = 0u;
    long long v8 = 0u;
LABEL_13:
    sub_10003B6F8((uint64_t)&v7, &qword_100788D60);
    goto LABEL_14;
  }
  uint64_t v1 = v0;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10035C79C((uint64_t)v6), (v3 & 1) != 0))
  {
    sub_100038DC0(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v7);
  }
  else
  {
    long long v7 = 0u;
    long long v8 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100055AE8((uint64_t)v6);
  if (!*((void *)&v8 + 1)) {
    goto LABEL_13;
  }
  sub_1000368FC(0, (unint64_t *)&qword_100798730);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_14:
    UIViewController.endFirstResponderEditing()();
    return;
  }
  id v4 = v6[0];
  uint64_t v5 = (uint64_t)[v6[0] integerValue];

  if (v5 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v5 > 0x7FFFFFFF)
  {
LABEL_16:
    __break(1u);
    return;
  }
  if ((v5 & 0xFFFFFFFE) != 0xC) {
    goto LABEL_14;
  }
}

void sub_1003445F4(uint64_t a1@<X8>)
{
  uint64_t v2 = Notification.userInfo.getter();
  if (!v2)
  {
    long long v17 = 0u;
    long long v18 = 0u;
LABEL_10:
    sub_10003B6F8((uint64_t)&v17, &qword_100788D60);
    goto LABEL_11;
  }
  uint64_t v3 = v2;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  AnyHashable.init<A>(_:)();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_10035C79C((uint64_t)v16), (v5 & 1) != 0))
  {
    sub_100038DC0(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v17);
  }
  else
  {
    long long v17 = 0u;
    long long v18 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100055AE8((uint64_t)v16);
  if (!*((void *)&v18 + 1)) {
    goto LABEL_10;
  }
  sub_1000368FC(0, (unint64_t *)&unk_10079BB30);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_11:
    char v15 = 1;
    uint64_t v8 = 0;
    uint64_t v10 = 0;
    uint64_t v12 = 0;
    uint64_t v14 = 0;
    goto LABEL_12;
  }
  id v6 = v16[0];
  [v16[0] CGRectValue];
  uint64_t v8 = v7;
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v14 = v13;

  char v15 = 0;
LABEL_12:
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = v10;
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v14;
  *(unsigned char *)(a1 + 32) = v15;
}

void sub_100344754()
{
  uint64_t v1 = v0;
  sub_1003445F4((uint64_t)v18);
  sub_100347954((uint64_t)v18, (uint64_t)v19);
  if (v20)
  {
    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100018BF8(v2, (uint64_t)qword_10079B960);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      char v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)char v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "can't get keyboardFrameEnd in keyboard change notification", v5, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    double v6 = *(double *)v19;
    double v7 = *(double *)&v19[1];
    double v8 = *(double *)&v19[2];
    double v9 = *(double *)&v19[3];
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    uint64_t v11 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = *(double (**)(uint64_t, uint64_t, double, double, double, double))(v11 + 168);
    id v14 = v10;
    double v15 = v13(ObjectType, v11, v6, v7, v8, v9);

    if (static TTRIKeyboard.isInFloatingKeyboardMode.getter()) {
      double v16 = 0.0;
    }
    else {
      double v16 = v15;
    }
    double v17 = *(double *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight);
    *(double *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight) = v16;
    sub_100343B64(v17);
  }
}

uint64_t sub_100344B10(void *a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = a1;
  sub_10033C6F4(a4);
  uint64_t v11 = *(void *)&v10[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(v11 + 832))(ObjectType, v11);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100344C30()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight;
  double v3 = *(double *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight);
  sub_100344754();
  double v4 = *(double *)(v0 + v2);
  if (v4 > 0.0 && v3 > 0.0 && v4 != v3)
  {
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
    uint64_t ObjectType = swift_getObjectType();
    double v9 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 64);
    id v10 = v6;
    uint64_t v11 = (void *)v9(ObjectType, v7);
    uint64_t v13 = v12;

    if (v11)
    {
      v18[3] = swift_getObjectType();
      v18[4] = *(void *)(*(void *)(v13 + 8) + 8);
      v18[0] = v11;
      char v19 = 2;
      uint64_t v14 = v1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
      swift_beginAccess();
      sub_100347580(v14, (uint64_t)v16);
      id v15 = v11;
      sub_10034763C((uint64_t)v18, (uint64_t)&v17);
      sub_100339678((uint64_t)v16);
    }
  }
  sub_10033C13C(0, 1);
}

uint64_t sub_100344D98(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_100345068()
{
  return type metadata accessor for TTRIShowRemindersViewController();
}

uint64_t type metadata accessor for TTRIShowRemindersViewController()
{
  uint64_t result = qword_10079BA68;
  if (!qword_10079BA68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003450BC()
{
  type metadata accessor for TTRRemindersListViewModel.ListInfo();
  if (v0 <= 0x3F)
  {
    sub_100345270(319, &qword_10079BA78, (void (*)(uint64_t))&type metadata accessor for TTRSharedWithYouHighlight);
    if (v1 <= 0x3F)
    {
      sub_100345270(319, (unint64_t *)&qword_10079BA80, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_100345270(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1003452C4(uint64_t a1, uint64_t a2)
{
  double v3 = *(void **)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *(void (**)(void, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 160);
  id v7 = v3;
  v6(0, a2, 1, ObjectType, v4);
}

id sub_100345364(void *a1)
{
  unint64_t v2 = v1;
  if ([v1 isViewLoaded])
  {
    if (qword_1007854B8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100018BF8(v4, (uint64_t)qword_10079B960);
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v5, v6))
    {
      id v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "TTRIShowRemindersViewController: prepareForModalPresentation is called after viewDidLoad", v7, 2u);
      swift_slowDealloc();
    }
  }
  id result = [a1 setDelegate:v2];
  double v9 = &v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
  if (*(void *)&v2[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions + 8] == 1)
  {
    uint64_t v10 = *(void *)v9;
    *(void *)double v9 = 0;
    *((void *)v9 + 1) = 0;
    v9[16] = 0;
    return (id)sub_10006566C(v10, 1);
  }
  return result;
}

void sub_1003454C4(char a1, char a2)
{
  double v3 = v2;
  uint64_t v5 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout;
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout)) {
    uint64_t v6 = 0x736E6D756C6F63;
  }
  else {
    uint64_t v6 = 1953720684;
  }
  if (*((unsigned char *)v2 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout)) {
    unint64_t v7 = 0xE700000000000000;
  }
  else {
    unint64_t v7 = 0xE400000000000000;
  }
  uint64_t v8 = a1 & 1;
  if (a1) {
    uint64_t v9 = 0x736E6D756C6F63;
  }
  else {
    uint64_t v9 = 1953720684;
  }
  if (a1) {
    unint64_t v10 = 0xE700000000000000;
  }
  else {
    unint64_t v10 = 0xE400000000000000;
  }
  if (v6 == v9 && v7 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      if (qword_1007854B8 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100018BF8(v14, (uint64_t)qword_10079B960);
      id v15 = v3;
      double v16 = Logger.logObject.getter();
      os_log_type_t type = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v16, type))
      {
        unsigned int v42 = v8;
        uint64_t v17 = swift_slowAlloc();
        uint64_t aBlock = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        if (*((unsigned char *)v3 + v5)) {
          uint64_t v18 = 0x736E6D756C6F63;
        }
        else {
          uint64_t v18 = 1953720684;
        }
        if (*((unsigned char *)v3 + v5)) {
          unint64_t v19 = 0xE700000000000000;
        }
        else {
          unint64_t v19 = 0xE400000000000000;
        }
        sub_1000385A8(v18, v19, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v17 + 12) = 2080;
        sub_1000385A8(v9, v10, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v16, type, "TTRIShowRemindersViewController: replace content view controller {from: %s, to: %s}", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v8 = v42;
        swift_slowDealloc();
      }
      else
      {
      }
      *((unsigned char *)v3 + v5) = v8;
      uint64_t v20 = *(void *)&v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
      uint64_t ObjectType = swift_getObjectType();
      id v22 = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 8))(v8, ObjectType, v20);
      uint64_t v24 = v23;
      uint64_t v26 = v25;
      uint64_t v27 = swift_getObjectType();
      int v28 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v26 + 32);
      uint64_t v29 = swift_unknownObjectRetain();
      v28(v29, &off_1007464D0, v27, v26);
      uint64_t v30 = &v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      id v31 = *(id *)&v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
      if (v22 == v31)
      {

        swift_unknownObjectRelease();
      }
      else
      {
        *(_OWORD *)typea = *(_OWORD *)&v15[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
        *(void *)uint64_t v30 = v22;
        *((void *)v30 + 1) = v24;
        id v32 = v22;
        if ([v15 isViewLoaded])
        {
          [v31 willMoveToParentViewController:0];
          sub_100339FA0();
          if (a2) {
            uint64_t v33 = 5242880;
          }
          else {
            uint64_t v33 = 0;
          }
          uint64_t v34 = swift_allocObject();
          *(void *)(v34 + 16) = v15;
          char v49 = sub_1003471F0;
          uint64_t v50 = v34;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v46 = 1107296256;
          uint64_t v47 = sub_10000AD88;
          uint64_t v48 = &unk_1007466C8;
          uint64_t v35 = _Block_copy(&aBlock);
          uint64_t v36 = v15;
          id v37 = v31;
          swift_release();
          uint64_t v38 = swift_allocObject();
          *(_OWORD *)(v38 + 16) = *(_OWORD *)typea;
          *(void *)(v38 + 32) = v32;
          *(void *)(v38 + 40) = v24;
          *(void *)(v38 + 48) = v36;
          char v49 = sub_100347240;
          uint64_t v50 = v38;
          uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
          uint64_t v46 = 1107296256;
          uint64_t v47 = sub_100106858;
          uint64_t v48 = &unk_100746718;
          uint64_t v39 = _Block_copy(&aBlock);
          uint64_t v40 = v36;
          id v31 = v37;
          id v41 = v32;
          swift_release();
          [v40 transitionFromViewController:v31 toViewController:v41 duration:v33 options:v35 animations:v39 completion:0.25];
          _Block_release(v39);
          _Block_release(v35);

          swift_unknownObjectRelease();
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
    }
  }
}

id sub_1003459FC(void *a1, char a2)
{
  double v3 = v2;
  uint64_t v6 = type metadata accessor for AppEntityID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for REMFeatureFlags();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  char v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v3 isViewLoaded];
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for REMFeatureFlags.viewAnnotation(_:), v10);
    char v15 = REMFeatureFlags.isEnabled.getter();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v15)
    {
      id result = [v3 view];
      double v16 = result;
      if (a2)
      {
        if (result)
        {
          type metadata accessor for GroupEntity();
          id v17 = a1;
          AppEntityID.init(objectID:)();
          uint64_t v18 = (unint64_t *)&qword_10079BAA0;
          unint64_t v19 = &type metadata accessor for GroupEntity;
LABEL_8:
          sub_10002ECEC(v18, (void (*)(uint64_t))v19);
          UIView.setAssociatedAppEntity<A>(entityType:identifier:)();

          return (id)(*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
        __break(1u);
      }
      else if (result)
      {
        type metadata accessor for ListEntity();
        id v20 = a1;
        AppEntityID.init(objectID:)();
        uint64_t v18 = (unint64_t *)&unk_10078E630;
        unint64_t v19 = &type metadata accessor for ListEntity;
        goto LABEL_8;
      }
      __break(1u);
    }
  }
  return result;
}

id sub_100345C8C(char a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SmartListType();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for REMFeatureFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v2 isViewLoaded];
  if (result)
  {
    (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for REMFeatureFlags.viewAnnotation(_:), v8);
    char v13 = REMFeatureFlags.isEnabled.getter();
    id result = (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    if (v13)
    {
      (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *(unsigned int *)*(&off_100746858 + a1), v4);
      id result = [v2 view];
      if (result)
      {
        uint64_t v14 = result;
        type metadata accessor for SmartListEntity();
        v16[0] = SmartListType.id.getter();
        v16[1] = v15;
        sub_10002ECEC((unint64_t *)&unk_10079BA90, (void (*)(uint64_t))&type metadata accessor for SmartListEntity);
        UIView.setAssociatedAppEntity<A>(entityType:identifier:)();
        swift_bridgeObjectRelease();

        return (id)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      }
      else
      {
        __break(1u);
      }
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TTRIShowRemindersViewController.KeyboardAppearState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100346490);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIShowRemindersViewController.KeyboardAppearState()
{
  return &type metadata for TTRIShowRemindersViewController.KeyboardAppearState;
}

unint64_t sub_1003464CC()
{
  unint64_t result = qword_10079BA88;
  if (!qword_10079BA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079BA88);
  }
  return result;
}

void sub_100346520(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v44 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v42 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v41 - v13;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = TTRIReminderCellTitleModuleInterface.editableReminderCell.getter();
  if (v16)
  {
    uint64_t v18 = v17;
    switch(a3)
    {
      case 1:
        uint64_t v30 = v45;
        uint64_t v31 = v45 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
        id v32 = (void *)v16;
        swift_beginAccess();
        sub_100347580(v31, (uint64_t)&v50);
        LOBYTE(v50) = 1;
        sub_100339678((uint64_t)&v50);
        uint64_t v47 = swift_getObjectType();
        uint64_t v48 = *(void *)(*(void *)(v18 + 8) + 8);
        v46[0] = v32;
        HIBYTE(v49) = 0;
        sub_100347580(v31, (uint64_t)&v50);
        id v33 = v32;
        sub_10034763C((uint64_t)v46, (uint64_t)v51);
        sub_100339678((uint64_t)&v50);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v44 + 56))(v14, 1, 1, v7);
        uint64_t v34 = v30
            + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance;
        swift_beginAccess();
        sub_100347698((uint64_t)v14, v34);
        swift_endAccess();
        UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v33);

        break;
      case 2:
        uint64_t v23 = v45 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
        uint64_t v24 = (void *)v16;
        swift_beginAccess();
        sub_100347580(v23, (uint64_t)&v50);
        LOBYTE(v50) = 1;
        sub_100339678((uint64_t)&v50);
        uint64_t v47 = swift_getObjectType();
        uint64_t v48 = *(void *)(*(void *)(v18 + 8) + 8);
        v46[0] = v24;
        __int16 v49 = 257;
        sub_100347580(v23, (uint64_t)&v50);
        id v25 = v24;
        sub_10034763C((uint64_t)v46, (uint64_t)v51);
        sub_100339678((uint64_t)&v50);

        break;
      case 3:
        uint64_t v26 = (void *)v16;
        uint64_t v27 = v45;
        uint64_t v28 = v45 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
        swift_beginAccess();
        sub_100347580(v28, (uint64_t)&v50);
        LOBYTE(v50) = 1;
        sub_100339678((uint64_t)&v50);
        TTRIReminderCellTitleModuleInterface.item.getter();
        uint64_t v29 = v44;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v11, 1, v7) == 1)
        {

          sub_10003B6F8((uint64_t)v11, (uint64_t *)&unk_100788DC0);
        }
        else
        {
          uint64_t v35 = v42;
          sub_1003470E8((uint64_t)v11, v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          uint64_t v36 = (uint64_t)v43;
          TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 2u:
              sub_1003475DC(v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);

              goto LABEL_11;
            case 3u:
              sub_1003475DC(v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);

              break;
            default:
              uint64_t v37 = *(void *)(v27 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
              uint64_t v38 = swift_getObjectType();
              sub_10003B754((uint64_t *)&unk_10078E960);
              unint64_t v39 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
              uint64_t v40 = swift_allocObject();
              *(_OWORD *)(v40 + 16) = xmmword_10066C6F0;
              sub_100347150(v35, v40 + v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 784))(v40, v38, v37);

              swift_bridgeObjectRelease();
              sub_1003475DC(v35, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
LABEL_11:
              sub_1003475DC(v36, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem);
              break;
          }
        }
        break;
      default:
        unint64_t v19 = (void *)v16;
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a2 + 8) + 32))(&v50, ObjectType);
        uint64_t v20 = v52;
        uint64_t v21 = v53;
        sub_100038D28(&v50, v52);
        (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);

        (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v14, 0, 1, v7);
        uint64_t v22 = v45
            + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance;
        swift_beginAccess();
        sub_100347698((uint64_t)v14, v22);
        swift_endAccess();
        sub_100038CD8((uint64_t)&v50);
        break;
    }
  }
}

uint64_t sub_100346BA0()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 88);
  id v5 = v1;
  LOBYTE(v1) = v4(ObjectType, v2);

  return v1 & 1;
}

void sub_100346C1C()
{
  unint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8);
  uint64_t ObjectType = swift_getObjectType();
  unsigned int v4 = *(void (**)(uint64_t, uint64_t))(v2 + 144);
  id v5 = v1;
  v4(ObjectType, v2);
}

void sub_100346CA8(uint64_t a1, uint64_t a2, char a3)
{
  swift_getObjectType();
  uint64_t v5 = TTRIReminderCellNotesModuleInterface.editableReminderCell.getter();
  if (v5)
  {
    id v7 = (id)v5;
    uint64_t v8 = v6;
    uint64_t v9 = v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
    swift_beginAccess();
    sub_100347580(v9, (uint64_t)v14);
    v14[0] = 1;
    sub_100339678((uint64_t)v14);
    switch(a3)
    {
      case 1:
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v12 = *(void *)(*(void *)(v8 + 8) + 8);
        v10[0] = v7;
        HIBYTE(v13) = 0;
        goto LABEL_5;
      case 2:
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v12 = *(void *)(*(void *)(v8 + 8) + 8);
        v10[0] = v7;
        __int16 v13 = 258;
LABEL_5:
        sub_100347580(v9, (uint64_t)v14);
        id v7 = v7;
        sub_10034763C((uint64_t)v10, (uint64_t)&v15);
        sub_100339678((uint64_t)v14);
        break;
      default:
        break;
    }
  }
}

void sub_100346E00(uint64_t a1, uint64_t a2, char a3)
{
  swift_getObjectType();
  uint64_t v5 = TTRIReminderCellHashtagModuleInterface.tableCell.getter();
  if (v5)
  {
    id v11 = (id)v5;
    swift_getObjectType();
    uint64_t v6 = swift_conformsToProtocol2();
    if (v6) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    if (v6) {
      id v8 = v11;
    }
    else {
      id v8 = 0;
    }
    if (v8)
    {
      uint64_t v9 = v3 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates;
      swift_beginAccess();
      sub_100347580(v9, (uint64_t)v14);
      v14[0] = 1;
      sub_100339678((uint64_t)v14);
      if (a3 == 1)
      {
        v12[3] = swift_getObjectType();
        v12[4] = *(void *)(v7 + 8);
        v12[0] = v8;
        char v13 = 0;
        sub_100347580(v9, (uint64_t)v14);
        id v10 = v11;
        sub_10034763C((uint64_t)v12, (uint64_t)&v15);
        sub_100339678((uint64_t)v14);
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

void sub_100346F90()
{
  sub_10033A3D4();
  uint64_t v0 = (void *)UIViewController.effectiveNavigationControllerForBars.getter();
  if (v0)
  {
    id v1 = v0;
    [v0 setToolbarHidden:1 animated:1];
  }
}

uint64_t sub_100347000()
{
  uint64_t v1 = *(void *)(*v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 720))(ObjectType, v1) & 1;
}

uint64_t sub_100347054()
{
  return _swift_deallocObject(v0, 25, 7);
}

void sub_10034708C()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 24);
  id v2 = sub_10033A304();
  [v2 setHidden:v1];
}

uint64_t sub_1003470E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100347150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003471B8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003471F0()
{
  return sub_100343E74(*(char **)(v0 + 16));
}

uint64_t sub_1003471F8()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100347240()
{
  uint64_t v1 = (void *)v0[2];
  id v2 = (void *)v0[4];
  uint64_t v3 = v0[6];
  [v1 removeFromParentViewController];
  [v2 didMoveToParentViewController:v3];
  return sub_10033B6F8(0);
}

uint64_t sub_100347290()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1003472C8(uint64_t a1)
{
}

void *sub_1003472D0(unint64_t a1, void *a2)
{
  if (a1 >> 62) {
    goto LABEL_21;
  }
  uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v3)
  {
    while (1)
    {
      unint64_t v4 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v6 = v5;
        unint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1)) {
          goto LABEL_20;
        }
        id v8 = [v5 superview];
        id v9 = [a2 view];
        id v10 = v9;
        if (v8)
        {
          if (!v9)
          {

            goto LABEL_5;
          }

          if (v8 != v10)
          {

            goto LABEL_5;
          }
        }
        else if (v9)
        {

          goto LABEL_5;
        }
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
LABEL_5:
        ++v4;
        if (v7 == v3) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
      if (!v3) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v5 = *(id *)(a1 + 8 * v4 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100347474()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_1003474B4()
{
  return sub_100344118(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003474BC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003474CC()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  double v2 = v1;

  double v3 = ceil(v2 / 44.0);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= 9.22337204e18) {
LABEL_7:
  }
    __break(1u);
}

uint64_t sub_100347580(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003475DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10034763C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100347698(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100347700(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10034775C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1003477B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_10034780C(uint64_t a1)
{
  return a1;
}

uint64_t sub_100347860()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1003478A0()
{
  double v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10000C2D4;
  return sub_10017E86C();
}

uint64_t sub_100347954(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10079C840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1003479BC()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = v0;
  sub_1001B18B8(0, ObjectType, v1);
  UIAccessibilityNotifications v4 = UIAccessibilityLayoutChangedNotification;
  id v5 = *(void **)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  uint64_t v6 = *(void *)&v3[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController + 8];
  uint64_t v7 = swift_getObjectType();
  id v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 64);
  id v9 = v5;
  id argument = (id)v8(v7, v6);

  UIAccessibilityPostNotification(v4, argument);
}

void sub_100347AA8()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) initWithStyle:0];
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint] = 0;
  v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState] = 0;
  double v2 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
  *(_OWORD *)double v2 = xmmword_10066C910;
  v2[16] = 0;
  v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging] = 0x80;
  uint64_t v3 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
  *uint64_t v3 = 0;
  *(_OWORD *)(v3 + 8) = 0u;
  *(_OWORD *)(v3 + 24) = 0u;
  *(_OWORD *)(v3 + 33) = 0u;
  v3[49] = 3;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeCancellable] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController] = 0;
  UIAccessibilityNotifications v4 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar];
  uint64_t v5 = type metadata accessor for TTRSharedWithYouHighlight();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = &v0[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance];
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100347CBC()
{
  uint64_t v1 = v0;
  char v2 = *((unsigned char *)v0 + OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging);
  BOOL v3 = (v2 & 0xC0) != 0x40 || (v2 & 0x3E) == 0;
  if (v3 || (uint64_t v4 = TTRRemindersListViewModel.EmptyListMessagingType.localizedSubtitle(currentLayout:)()) == 0)
  {
    id v10 = 0;
  }
  else
  {
    uint64_t v5 = (void *)v4;
    id v19 = [self emptyProminentConfiguration];
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [self _systemImageNamed:v6];

    [v19 setImage:v7];
    TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)();
    if (v8)
    {
      NSString v9 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      NSString v9 = 0;
    }
    [v19 setText:v9];

    id v11 = [v19 textProperties];
    id v12 = [v19 textProperties];
    id v13 = [v12 font];

    Class isa = UIFont.withRoundedDesign()().super.isa;
    [v11 setFont:isa];

    id v15 = [v19 secondaryTextProperties];
    id v16 = [v19 secondaryTextProperties];
    id v17 = [v16 font];

    Class v18 = UIFont.withRoundedDesign()().super.isa;
    [v15 setFont:v18];

    [v19 setSecondaryAttributedText:v5];
    id v10 = v19;
  }
  id v20 = v10;
  [v1 ttr_setContentUnavailableConfiguration:];
}

uint64_t sub_100347F40(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100347F9C()
{
  sub_100038CD8(v0 + 24);

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100347FDC()
{
  sub_1003452C4(*(void *)(v0 + 16), v0 + 24);
}

uint64_t sub_100347FE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_100348064()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079BB90);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079BB90);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  BOOL v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10034812C(char a1)
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    if (v5)
    {
      uint64_t v6 = v5;
      uint64_t v7 = *(void *)(v1 + 24);
      sub_100010C38(a1 & 1);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v6;
      *(void *)(v8 + 24) = v7;
      swift_unknownObjectRetain();
      NSString v9 = (void *)zalgo.getter();
      sub_10003B754(&qword_10079BC80);
      dispatch thunk of Promise.then<A>(on:closure:)();
      swift_release();
      swift_release();

      uint64_t v10 = dispatch thunk of Promise.cast<A>(as:)();
      swift_unknownObjectRelease();
      swift_release();
    }
    else
    {
      if (qword_1007854D0 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_100018BF8(v19, (uint64_t)qword_10079BB90);
      id v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v22 = 0;
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "Root Router has a nil delegate. Navigation failed", v22, 2u);
        swift_slowDealloc();
      }

      uint64_t v23 = self;
      NSString v24 = String._bridgeToObjectiveC()();
      id v25 = [v23 internalErrorWithDebugDescription:v24];

      sub_10003B754(&qword_10079C8C0);
      swift_allocObject();
      uint64_t v10 = Promise.init(error:)();
    }
    return v10;
  }
  else
  {
    if (qword_1007854D0 != -1) {
      swift_once();
    }
    uint64_t v11 = type metadata accessor for Logger();
    sub_100018BF8(v11, (uint64_t)qword_10079BB90);
    id v12 = Logger.logObject.getter();
    os_log_type_t v13 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl((void *)&_mh_execute_header, v12, v13, "Root Router has a nil view controller. Navigation failed", v14, 2u);
      swift_slowDealloc();
    }

    id v15 = self;
    NSString v16 = String._bridgeToObjectiveC()();
    id v17 = [v15 internalErrorWithDebugDescription:v16];

    sub_10003B754(&qword_10079C8C0);
    swift_allocObject();
    return Promise.init(error:)();
  }
}

uint64_t sub_1003484A8(char a1)
{
  return sub_100011BA4(a1, (uint64_t)&unk_100746DF8, (uint64_t)sub_10003FC48, &qword_100791C48, &qword_10079B158);
}

uint64_t sub_1003484D8(char a1)
{
  return sub_100011BA4(a1, (uint64_t)&unk_100746DD0, (uint64_t)sub_10003FC48, &qword_100799F38, &qword_10079B160);
}

uint64_t sub_100348508(char a1)
{
  return sub_100011BA4(a1, (uint64_t)&unk_100746E20, (uint64_t)sub_10003FC48, &qword_10079B1A0, &qword_10079B1B0);
}

uint64_t sub_100348538(char a1)
{
  return sub_100011BA4(a1, (uint64_t)&unk_100746E48, (uint64_t)sub_10003FC48, &qword_10079B1B8, &qword_10079B1C8);
}

uint64_t sub_100348568(char a1)
{
  return sub_100011BA4(a1, (uint64_t)&unk_100746E70, (uint64_t)sub_10003FC48, &qword_10079B1D0, &qword_10079B1E0);
}

uint64_t sub_100348598(char a1)
{
  return sub_100011BA4(a1, (uint64_t)&unk_100746E98, (uint64_t)sub_10003FC48, &qword_10079B1E8, &qword_10079B1F8);
}

uint64_t sub_1003485C8(int a1, uint64_t a2, id a3)
{
  id v4 = [a3 objectID];
  id v5 = [v4 description];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  firstly<A>(closure:)();
  NSString v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v6;
  v9[3] = v8;
  v9[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  uint64_t v11 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_10034873C(uint64_t a1, uint64_t a2, void *a3, char a4)
{
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(void *)(v7 + 24) = a3;
  *(unsigned char *)(v7 + 32) = a4;
  swift_retain();
  id v8 = a3;
  NSString v9 = (void *)zalgo.getter();
  uint64_t v10 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v10;
}

uint64_t sub_10034881C(int a1, uint64_t a2, id a3)
{
  id v4 = [a3 objectID];
  id v5 = [v4 description];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  firstly<A>(closure:)();
  NSString v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v6;
  v9[3] = v8;
  v9[4] = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v10 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  uint64_t v11 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_100348988(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = a3;
  swift_retain();
  id v6 = a3;
  uint64_t v7 = (void *)zalgo.getter();
  uint64_t v8 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_100348A5C(int a1, int a2, void *a3)
{
  return sub_100348A9C(a1, a2, a3);
}

uint64_t sub_100348A7C(int a1, int a2, void *a3)
{
  return sub_100348A9C(a1, a2, a3);
}

uint64_t sub_100348A9C(int a1, int a2, id a3)
{
  id v3 = [a3 list];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  *(unsigned char *)(v5 + 32) = 0;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = (void *)zalgo.getter();
  uint64_t v8 = dispatch thunk of Promise.then<A>(on:closure:)();

  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_100348B84(int a1, int a2, id a3)
{
  id v3 = [a3 smartList];
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  swift_retain();
  id v6 = v3;
  uint64_t v7 = (void *)zalgo.getter();
  uint64_t v8 = dispatch thunk of Promise.then<A>(on:closure:)();

  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_100348C74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v4);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  swift_retain();
  uint64_t v10 = (void *)zalgo.getter();
  uint64_t v11 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v11;
}

uint64_t sub_100348E44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  uint64_t v13 = (int *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (void **)((char *)&v30[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v16 = [a1 store];
  id v17 = *(void **)(v6 + 56);
  sub_10003B694(a2, (uint64_t)v15 + v13[7], (uint64_t *)&unk_10078E360);
  *id v15 = v16;
  *(void **)((char *)v15 + v13[8]) = v17;
  uint64_t v18 = v13[9];
  long long v29 = *(_OWORD *)(v6 + 64);
  *(_OWORD *)((char *)v15 + v18) = v29;
  *((unsigned char *)v15 + v13[10]) = 0;
  type metadata accessor for TTRIShowRemindersInListAssembly();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v19 = sub_1005DE950(a5, v15, a1, a3, a4, 1);
  sub_1000145EC((uint64_t)a5, (uint64_t)v33);
  char v34 = 0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    os_log_type_t v21 = (void *)Strong;
    uint64_t v22 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_10066D470;
    *(void *)(v23 + 32) = v19;
    *(void *)&v30[0] = v23;
    specialized Array._endMutation()();
    sub_1000368FC(0, (unint64_t *)&qword_100791C40);
    NSString v24 = v19;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v22 setViewControllers:isa animated:0];

    sub_1002D2C14(0);
  }
  uint64_t v26 = swift_unknownObjectWeakLoadStrong();
  if (v26)
  {
    uint64_t v27 = (void *)v26;
    sub_1000130E8(a1);
  }
  sub_100016A10((uint64_t)&v31);
  if (v32)
  {
    sub_100038ED8(&v31, (uint64_t)v30);
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_retain();

      sub_10034E844((uint64_t)v15, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)v30);
      swift_release();
    }
    else
    {

      sub_100038CD8((uint64_t)v30);
      sub_10034E844((uint64_t)v15, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    }
  }
  else
  {
    sub_10034E844((uint64_t)v15, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);

    sub_10003B6F8((uint64_t)&v31, (uint64_t *)&unk_1007AD740);
  }
  sub_10034EF10(v33, v30);
  swift_beginAccess();
  sub_10034EF28((uint64_t)v30, v6 + 96);
  return swift_endAccess();
}

uint64_t sub_100349178@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1003491D8(a1, a2, a3, a4, (void (*)(void))type metadata accessor for TTRIShowCustomSmartListAssembly, (uint64_t (*)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))sub_10053FE24, 1, a5);
}

uint64_t sub_1003491A8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1003491D8(a1, a2, a3, a4, (void (*)(void))type metadata accessor for TTRIShowGroupAssembly, (uint64_t (*)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t))sub_100357C34, 2, a5);
}

uint64_t sub_1003491D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(void)@<X4>, uint64_t (*a6)(uint64_t, void *, void *, uint64_t, uint64_t, uint64_t)@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  int v33 = a7;
  uint64_t v31 = a4;
  uint64_t v32 = a6;
  uint64_t v10 = v8;
  uint64_t v15 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  id v16 = (int *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (void *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = [a1 store];
  uint64_t v20 = *(void *)(v8 + 56);
  sub_10003B694(a2, (uint64_t)v18 + v16[7], (uint64_t *)&unk_10078E360);
  void *v18 = v19;
  *(void *)((char *)v18 + v16[8]) = v20;
  uint64_t v21 = v16[9];
  long long v30 = *(_OWORD *)(v10 + 64);
  *(_OWORD *)((char *)v18 + v21) = v30;
  *((unsigned char *)v18 + v16[10]) = 0;
  a5(0);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v22 = (void *)v32(a8, v18, a1, a3, v31, 1);
  sub_1000145EC(a8, (uint64_t)v37);
  char v38 = v33;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v24 = (void *)Strong;
    id v25 = *(void **)(Strong + OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController);
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v26 = swift_allocObject();
    *(_OWORD *)(v26 + 16) = xmmword_10066D470;
    *(void *)(v26 + 32) = v22;
    *(void *)&v34[0] = v26;
    specialized Array._endMutation()();
    sub_1000368FC(0, (unint64_t *)&qword_100791C40);
    id v27 = v22;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v25 setViewControllers:isa animated:0];

    sub_1002D2C14(0);
  }
  sub_100016A10((uint64_t)&v35);
  if (v36)
  {
    sub_100038ED8(&v35, (uint64_t)v34);
    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_retain();

      sub_10034E844((uint64_t)v18, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      swift_unknownObjectRelease();
      sub_100038CD8((uint64_t)v34);
      swift_release();
    }
    else
    {

      sub_100038CD8((uint64_t)v34);
      sub_10034E844((uint64_t)v18, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
    }
  }
  else
  {
    sub_10034E844((uint64_t)v18, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);

    sub_10003B6F8((uint64_t)&v35, (uint64_t *)&unk_1007AD740);
  }
  sub_10034EF10(v37, v34);
  swift_beginAccess();
  sub_10034EF28((uint64_t)v34, v10 + 96);
  return swift_endAccess();
}

uint64_t sub_100349508@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (void **)((char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(v6 + 96, (uint64_t)&v56);
  if (v59)
  {
    sub_100016998((uint64_t)&v56);
    id v18 = [a1 store];
    uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 1, 1, v19);
    id v55 = a2;
    uint64_t v20 = (uint64_t *)a5;
    uint64_t v21 = *(void **)(v6 + 56);
    sub_10003B694((uint64_t)v14, (uint64_t)v17 + v15[5], (uint64_t *)&unk_10078E360);
    *uint64_t v17 = v18;
    *(void **)((char *)v17 + v15[6]) = v21;
    uint64_t v22 = v15[7];
    long long v54 = *(_OWORD *)(v6 + 64);
    *(_OWORD *)((char *)v17 + v22) = v54;
    *((unsigned char *)v17 + v15[8]) = a4 & 1;
    swift_retain();
    swift_unknownObjectRetain();
    sub_10003B6F8((uint64_t)v14, (uint64_t *)&unk_10078E360);
    type metadata accessor for TTRIShowRemindersInListAssembly();
    uint64_t v23 = sub_1005DE950(v20, v17, a1, (uint64_t)v55, a3, 0);
    sub_1000145EC((uint64_t)v20, (uint64_t)&v56);
    char v59 = 0;
    sub_10034A728(&v56, v23);

    sub_100016998((uint64_t)&v56);
    return sub_10034E844((uint64_t)v17, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  }
  id v55 = a1;
  sub_100038ED8(&v56, (uint64_t)&v60);
  uint64_t v25 = *(void *)(*sub_100038D28(&v60, v61)
                  + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                  + 8);
  uint64_t ObjectType = swift_getObjectType();
  id v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 16))(ObjectType, v25);
  if (v27)
  {
    uint64_t v28 = v27;
    id v29 = [v27 objectID];
  }
  else
  {
    id v29 = 0;
  }
  id v30 = [v55 objectID];
  uint64_t v31 = v30;
  if (v29)
  {
    if (v30)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v32 = v29;
      char v33 = static NSObject.== infix(_:_:)();

      if (v33) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    uint64_t v31 = v29;
  }
  else if (!v30)
  {
    goto LABEL_16;
  }

LABEL_14:
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v35 = v61;
    uint64_t v34 = v62;
    uint64_t v36 = sub_100038D28(&v60, v61);
    uint64_t v57 = v35;
    uint64_t v58 = *(void *)(v34 + 8);
    uint64_t v37 = sub_1000394A8((uint64_t *)&v56);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v35 - 8) + 16))(v37, v36, v35);
    swift_retain();
    swift_unknownObjectRelease();
    sub_100038CD8((uint64_t)&v56);
    swift_release();
  }
LABEL_16:
  uint64_t v39 = v61;
  uint64_t v38 = v62;
  sub_100038D28(&v60, v61);
  (*(void (**)(uint64_t))(*(void *)(v38 + 8) + 24))(v39);
  uint64_t v40 = sub_100038D28(&v60, v61);
  uint64_t v41 = *v40;
  uint64_t v42 = *(void *)(*v40 + 232);
  uint64_t v43 = *(void *)(v42 + 96);
  swift_beginAccess();
  if (*(void *)(v43 + 40))
  {
    uint64_t v44 = *(void *)(v43 + 48);
    uint64_t v45 = swift_getObjectType();
    uint64_t v46 = *(void (**)(uint64_t, uint64_t))(v44 + 24);
    swift_unknownObjectRetain();
    v46(v45, v44);
    swift_unknownObjectRelease();
  }
  sub_100527398(v42);
  uint64_t v47 = *(void *)(v41 + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource + 8);
  uint64_t v48 = swift_getObjectType();
  (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v47 + 24))(v55, 1, v48, v47);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return sub_100038ED8(&v60, a5);
  }
  uint64_t v50 = (char *)Strong;
  sub_1002D2C14(1);
  sub_100038D28((void *)(*(void *)&v50[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(void *)(*(void *)&v50[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  uint64_t v51 = sub_10034D540();
  if (v52 == -1) {
    goto LABEL_22;
  }
  uint64_t v53 = v51;
  if (v52)
  {
    sub_100095434(v51, v52);
LABEL_22:
    uint64_t v53 = 0;
  }
  sub_1000130E8(v53);

  return sub_100038ED8(&v60, a5);
}

uint64_t sub_100349A4C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v13);
  uint64_t v15 = (uint64_t *)((char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(v4 + 96, (uint64_t)&v80);
  if (v82 == 1)
  {
    sub_100038ED8(&v80, (uint64_t)&v83);
    uint64_t v16 = *(void *)(*sub_100038D28(&v83, v84)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t ObjectType = swift_getObjectType();
    id v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v16 + 16))(ObjectType, v16);
    uint64_t v75 = a4;
    if (!v18)
    {
      sub_1000145EC((uint64_t)&v83, (uint64_t)&v80);
      goto LABEL_11;
    }
    uint64_t v19 = v18;
    uint64_t v77 = a2;
    uint64_t v78 = a3;
    id v20 = [v18 smartListType];

    uint64_t v21 = (void *)REMSmartListTypeCustom;
    uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v24 = v23;
    if (v22 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v24 == v25)
    {
      id v34 = v21;

      swift_bridgeObjectRelease_n();
      sub_1000145EC((uint64_t)&v83, (uint64_t)&v80);
    }
    else
    {
      char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
      id v28 = v21;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1000145EC((uint64_t)&v83, (uint64_t)&v80);
      if ((v27 & 1) == 0) {
        goto LABEL_11;
      }
    }
    uint64_t v35 = *(void *)(*sub_100038D28(&v80, v81)
                    + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                    + 8);
    uint64_t v36 = swift_getObjectType();
    uint64_t v37 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 16))(v36, v35);
    if (v37)
    {
      uint64_t v38 = v37;
      id v39 = [v37 objectID];
    }
    else
    {
      id v39 = 0;
    }
    id v44 = [a1 objectID];
    uint64_t v45 = v44;
    if (v39)
    {
      if (v44)
      {
        sub_1000368FC(0, qword_10078E3D0);
        id v46 = v39;
        char v47 = static NSObject.== infix(_:_:)();

        sub_100038CD8((uint64_t)&v80);
        a4 = v75;
        if ((v47 & 1) == 0) {
          goto LABEL_46;
        }
LABEL_12:
        uint64_t v29 = *(void *)(*sub_100038D28(&v83, v84)
                        + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                        + 8);
        uint64_t v30 = swift_getObjectType();
        uint64_t v31 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(v30, v29);
        if (v31)
        {
          id v32 = v31;
          id v33 = [v31 objectID];
        }
        else
        {
          id v33 = 0;
        }
        id v40 = [a1 objectID];
        uint64_t v41 = v40;
        if (v33)
        {
          if (v40)
          {
            sub_1000368FC(0, qword_10078E3D0);
            id v42 = v33;
            char v43 = static NSObject.== infix(_:_:)();

            if (v43) {
              goto LABEL_35;
            }
            goto LABEL_33;
          }
          uint64_t v41 = v33;
        }
        else if (!v40)
        {
          goto LABEL_35;
        }

LABEL_33:
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v48 = v84;
          uint64_t v49 = v85;
          uint64_t v50 = sub_100038D28(&v83, v84);
          v79[3] = v48;
          v79[4] = *(void *)(v49 + 8);
          uint64_t v51 = sub_1000394A8(v79);
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v48 - 8) + 16))(v51, v50, v48);
          swift_retain();
          swift_unknownObjectRelease();
          sub_100038CD8((uint64_t)v79);
          swift_release();
        }
LABEL_35:
        uint64_t v52 = v84;
        uint64_t v53 = v85;
        sub_100038D28(&v83, v84);
        (*(void (**)(uint64_t))(*(void *)(v53 + 8) + 24))(v52);
        long long v54 = sub_100038D28(&v83, v84);
        uint64_t v55 = *v54;
        uint64_t v56 = *(void *)(*v54 + 232);
        uint64_t v57 = *(void *)(v56 + 96);
        swift_beginAccess();
        if (*(void *)(v57 + 40))
        {
          uint64_t v58 = *(void *)(v57 + 48);
          uint64_t v59 = swift_getObjectType();
          long long v60 = *(void (**)(uint64_t, uint64_t))(v58 + 24);
          swift_unknownObjectRetain();
          v60(v59, v58);
          swift_unknownObjectRelease();
        }
        sub_100527398(v56);
        uint64_t v61 = *(void *)(v55 + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource + 8);
        uint64_t v62 = swift_getObjectType();
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v61 + 24))(a1, 1, v62, v61);
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        if (!Strong) {
          return sub_100038ED8(&v83, (uint64_t)a4);
        }
        uint64_t v64 = (char *)Strong;
        sub_1002D2C14(1);
        sub_100038D28((void *)(*(void *)&v64[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(void *)(*(void *)&v64[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
        uint64_t v65 = sub_10034D540();
        if (v66 != -1)
        {
          uint64_t v67 = v65;
          if ((v66 & 1) == 0)
          {
LABEL_42:
            sub_1000130E8(v67);

            return sub_100038ED8(&v83, (uint64_t)a4);
          }
          sub_100095434(v65, v66);
        }
        uint64_t v67 = 0;
        goto LABEL_42;
      }
      uint64_t v45 = v39;
LABEL_45:

      sub_100038CD8((uint64_t)&v80);
      a4 = v75;
LABEL_46:
      sub_100038CD8((uint64_t)&v83);
      goto LABEL_47;
    }
    if (v44) {
      goto LABEL_45;
    }
LABEL_11:
    sub_100038CD8((uint64_t)&v80);
    a4 = v75;
    goto LABEL_12;
  }
  uint64_t v77 = a2;
  uint64_t v78 = a3;
  sub_100016998((uint64_t)&v80);
LABEL_47:
  id v69 = [a1 store];
  uint64_t v70 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v12, 1, 1, v70);
  uint64_t v71 = *(void *)(v5 + 56);
  sub_10003B694((uint64_t)v12, (uint64_t)v15 + v13[5], (uint64_t *)&unk_10078E360);
  *uint64_t v15 = v69;
  *(void *)((char *)v15 + v13[6]) = v71;
  uint64_t v72 = v13[7];
  long long v76 = *(_OWORD *)(v5 + 64);
  *(_OWORD *)((char *)v15 + v72) = v76;
  *((unsigned char *)v15 + v13[8]) = 0;
  swift_retain();
  swift_unknownObjectRetain();
  sub_10003B6F8((uint64_t)v12, (uint64_t *)&unk_10078E360);
  type metadata accessor for TTRIShowCustomSmartListAssembly();
  long long v73 = sub_10053FE24(a4, (uint64_t)v15, a1, v77, v78, 0);
  sub_1000145EC((uint64_t)a4, (uint64_t)&v80);
  char v82 = 1;
  sub_10034A728(&v80, v73);

  sub_100016998((uint64_t)&v80);
  return sub_10034E844((uint64_t)v15, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
}

uint64_t sub_10034A1D8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v53 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v11);
  uint64_t v13 = (void **)((char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_beginAccess();
  sub_100016AFC(v3 + 96, (uint64_t)&v54);
  if (v57 != 2)
  {
    sub_100016998((uint64_t)&v54);
    id v19 = [a1 store];
    uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 1, 1, v20);
    uint64_t v21 = a1;
    uint64_t v22 = (uint64_t *)a3;
    uint64_t v23 = *(void **)(v4 + 56);
    sub_10003B694((uint64_t)v10, (uint64_t)v13 + v11[5], (uint64_t *)&unk_10078E360);
    *uint64_t v13 = v19;
    *(void **)((char *)v13 + v11[6]) = v23;
    uint64_t v24 = v11[7];
    long long v53 = *(_OWORD *)(v4 + 64);
    *(_OWORD *)((char *)v13 + v24) = v53;
    *((unsigned char *)v13 + v11[8]) = 0;
    swift_retain();
    swift_unknownObjectRetain();
    sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_10078E360);
    type metadata accessor for TTRIShowGroupAssembly();
    uint64_t v25 = sub_100357C34(v22, v13, v21, a2);
    sub_1000145EC((uint64_t)v22, (uint64_t)&v54);
    char v57 = 2;
    sub_10034A728(&v54, v25);

    sub_100016998((uint64_t)&v54);
    return sub_10034E844((uint64_t)v13, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  }
  sub_100038ED8(&v54, (uint64_t)&v58);
  uint64_t v14 = *(void *)(*sub_100038D28(&v58, v59) + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 16))(ObjectType, v14);
  if (v16)
  {
    uint64_t v17 = v16;
    id v18 = [v16 objectID];
  }
  else
  {
    id v18 = 0;
  }
  id v27 = [a1 objectID];
  id v28 = v27;
  if (v18)
  {
    if (v27)
    {
      sub_1000368FC(0, qword_10078E3D0);
      id v29 = v18;
      char v30 = static NSObject.== infix(_:_:)();

      if (v30) {
        goto LABEL_16;
      }
      goto LABEL_14;
    }
    id v28 = v18;
  }
  else if (!v27)
  {
    goto LABEL_16;
  }

LABEL_14:
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v31 = v59;
    uint64_t v32 = v60;
    id v33 = sub_100038D28(&v58, v59);
    uint64_t v55 = v31;
    uint64_t v56 = *(void *)(v32 + 8);
    id v34 = sub_1000394A8((uint64_t *)&v54);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v31 - 8) + 16))(v34, v33, v31);
    swift_retain();
    swift_unknownObjectRelease();
    sub_100038CD8((uint64_t)&v54);
    swift_release();
  }
LABEL_16:
  uint64_t v36 = v59;
  uint64_t v35 = v60;
  sub_100038D28(&v58, v59);
  (*(void (**)(uint64_t))(*(void *)(v35 + 8) + 24))(v36);
  uint64_t v37 = sub_100038D28(&v58, v59);
  uint64_t v38 = *v37;
  uint64_t v39 = *(void *)(*v37 + 232);
  uint64_t v40 = *(void *)(v39 + 96);
  swift_beginAccess();
  if (*(void *)(v40 + 40))
  {
    uint64_t v41 = *(void *)(v40 + 48);
    uint64_t v42 = swift_getObjectType();
    char v43 = a1;
    uint64_t v44 = a3;
    uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v41 + 24);
    swift_unknownObjectRetain();
    v45(v42, v41);
    a3 = v44;
    a1 = v43;
    swift_unknownObjectRelease();
  }
  sub_100527398(v39);
  uint64_t v46 = *(void *)(v38 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource + 8);
  uint64_t v47 = swift_getObjectType();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v46 + 24))(a1, 1, v47, v46);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return sub_100038ED8(&v58, a3);
  }
  uint64_t v49 = (char *)Strong;
  sub_1002D2C14(1);
  sub_100038D28((void *)(*(void *)&v49[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(void *)(*(void *)&v49[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  uint64_t v50 = sub_10034D540();
  if (v51 == -1) {
    goto LABEL_22;
  }
  uint64_t v52 = v50;
  if (v51)
  {
    sub_100095434(v50, v51);
LABEL_22:
    uint64_t v52 = 0;
  }
  sub_1000130E8(v52);

  return sub_100038ED8(&v58, a3);
}

uint64_t sub_10034A728(long long *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  sub_10034E5F8(a1, v3 + 96);
  swift_endAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    id v8 = a2;
    sub_1002D2688(a2);
  }
  sub_100016A10((uint64_t)&v10);
  if (!v11) {
    return sub_10003B6F8((uint64_t)&v10, (uint64_t *)&unk_1007AD740);
  }
  sub_100038ED8(&v10, (uint64_t)v12);
  if (!swift_unknownObjectWeakLoadStrong()) {
    return sub_100038CD8((uint64_t)v12);
  }
  swift_retain();
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v12);
  return swift_release();
}

void sub_10034A824()
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_retain();
    uint64_t v0 = static TTRLocalizableStrings.Templates.publicTemplateDownloading.getter();
    uint64_t v2 = v1;
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    sub_10044FC6C(v0, v2, Strong);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_10034A8D0(uint64_t a1)
{
  uint64_t v1[5] = a1;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_10034A968, v3, v2);
}

uint64_t sub_10034A968()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    *(void *)(v0 + 72) = *(void *)(Strong + 80);
    swift_retain();
    swift_release();
    return _swift_task_switch(sub_10034AA40, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_10034AA40()
{
  uint64_t v1 = *(void **)(v0[9] + 16);
  v0[10] = v1;
  if (v1)
  {
    v1;
    uint64_t v2 = (void *)swift_task_alloc();
    v0[11] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10034AB2C;
    return UIViewController.dismissAndWait(animated:)(1);
  }
  else
  {
    swift_release();
    uint64_t v3 = v0[7];
    uint64_t v4 = v0[8];
    return _swift_task_switch(sub_10017C258, v3, v4);
  }
}

uint64_t sub_10034AB2C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10034AC28, 0, 0);
}

uint64_t sub_10034AC28()
{
  uint64_t v1 = *(void *)(v0 + 72);

  uint64_t v2 = *(void **)(v1 + 16);
  *(void *)(v1 + 16) = 0;
  swift_release();

  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_10017C258, v3, v4);
}

uint64_t sub_10034ACA0(void *a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v53 = a6;
  uint64_t v54 = a7;
  uint64_t v52 = a5;
  uint64_t v12 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10078E360);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (int *)type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (void *)((char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v25 = result;
    uint64_t v51 = a8;
    swift_beginAccess();
    sub_100130154(a4, (uint64_t)v23);
    swift_endAccess();
    sub_10003B6F8((uint64_t)v23, &qword_100798708);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v27 = (void *)Strong;
      if ((a2 & 1) == 0)
      {
        uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.ItemID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v17, 1, 1, v28);
        uint64_t v29 = type metadata accessor for TTRAttachmentThumbnailSizeProvider();
        *(void *)&long long v49 = static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
        sub_1000368FC(0, (unint64_t *)&qword_100788E40);
        id v50 = a1;
        static OS_dispatch_queue.main.getter();
        type metadata accessor for RDIDispatchQueue();
        static RDIDispatchQueue.utilityQueue.getter();
        uint64_t v30 = type metadata accessor for TTRThumbnailGenerator();
        swift_allocObject();
        uint64_t v31 = TTRThumbnailGenerator.init(queue:backgroundQueue:)();
        v58[3] = v30;
        v58[4] = (uint64_t)&protocol witness table for TTRThumbnailGenerator;
        v58[0] = v31;
        uint64_t v56 = v29;
        char v57 = &protocol witness table for TTRAttachmentThumbnailSizeProvider;
        uint64_t v55 = v49;
        type metadata accessor for TTRAttachmentThumbnailsManager();
        swift_allocObject();
        uint64_t v32 = TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)();
        sub_10003B694((uint64_t)v17, (uint64_t)v20 + v18[5], (uint64_t *)&unk_10078E360);
        id v33 = v52;
        *uint64_t v20 = v52;
        uint64_t v34 = v18[6];
        long long v49 = *(_OWORD *)(v25 + 64);
        long long v35 = v49;
        *(void *)((char *)v20 + v34) = v32;
        *(_OWORD *)((char *)v20 + v18[7]) = v35;
        *((unsigned char *)v20 + v18[8]) = 0;
        id v36 = v33;
        swift_unknownObjectRetain();
        sub_10003B6F8((uint64_t)v17, (uint64_t *)&unk_10078E360);
        uint64_t v37 = REMiCloudSharedItemSpecifier.PublicTemplate.name.getter();
        id v39 = sub_1000A09E0(v58, (uint64_t)v20, v50, v37, v38, v54);
        swift_bridgeObjectRelease();
        sub_100038CD8((uint64_t)v58);
        id v40 = v27;
        uint64_t v41 = (void *)UIViewController.topPresentedViewController.getter();

        [v41 presentViewController:v39 animated:1 completion:0];
        sub_1002526E4(a1, 0);
        swift_release();

        return sub_10034E844((uint64_t)v20, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
      }
      uint64_t v42 = (void *)swift_unknownObjectWeakLoadStrong();
      swift_errorRetain();
      if (v42)
      {
        char v43 = UIViewController.isIPadIdiom.getter();
      }
      else
      {
        char v43 = 0;
      }
      id v44 = sub_1000A1784((uint64_t)a1, v43 & 1);
      uint64_t v45 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v14, 1, 1, v45);
      type metadata accessor for MainActor();
      swift_retain();
      id v46 = v44;
      uint64_t v47 = static MainActor.shared.getter();
      uint64_t v48 = (void *)swift_allocObject();
      v48[2] = v47;
      v48[3] = &protocol witness table for MainActor;
      v48[4] = v25;
      void v48[5] = v46;
      sub_1000286A4((uint64_t)v14, (uint64_t)&unk_10079BCB0, (uint64_t)v48);
      swift_release();

      sub_1002526E4(a1, 1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10034B1C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  void v5[4] = type metadata accessor for MainActor();
  void v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_10034B260, v7, v6);
}

uint64_t sub_10034B260()
{
  sub_10003B754(&qword_100791E90);
  uint64_t v1 = swift_allocObject();
  *(void *)(v0 + 64) = v1;
  *(_OWORD *)(v1 + 16) = xmmword_10066C6F0;
  static TTRLocalizableStrings.Common.alertOKButton.getter();
  *(unsigned char *)(v0 + 112) = 0;
  TTRIValueBasedAlertAction.init(title:style:value:)();
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 80) = v3;
  *(void *)(v0 + 88) = v2;
  return _swift_task_switch(sub_10034B338, v3, v2);
}

uint64_t sub_10034B338()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[12] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[13] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10034B44C;
    uint64_t v3 = v0[8];
    uint64_t v4 = v0[3];
    return UIViewController.present<A>(alert:actions:didPresent:animated:)((char *)v0 + 113, v4, v3, 0, 0, 1, &type metadata for Bool);
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v5 = v0[6];
    uint64_t v6 = v0[7];
    return _swift_task_switch(sub_10034B5F8, v5, v6);
  }
}

uint64_t sub_10034B44C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 96);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_10034B58C, v4, v3);
}

uint64_t sub_10034B58C()
{
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_10034B5F8, v1, v2);
}

uint64_t sub_10034B5F8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10034B658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v13;
  void v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  void v8[5] = a5;
  type metadata accessor for MainActor();
  v8[10] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[11] = v10;
  v8[12] = v9;
  return _swift_task_switch(sub_10034B700, v10, v9);
}

uint64_t sub_10034B700()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 104) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  uint64_t v4 = sub_10003B754(&qword_10079BCA0);
  *uint64_t v3 = v0;
  v3[1] = sub_10034B7F0;
  return TTRPotentiallyLongOperationPerformer.perform<A>(_:)(v0 + 16, &unk_10079BC98, v2, v4);
}

uint64_t sub_10034B7F0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 96);
  uint64_t v3 = *(void *)(v1 + 88);
  return _swift_task_switch(sub_10034B934, v3, v2);
}

uint64_t sub_10034B934()
{
  uint64_t v1 = *(void (**)(void *, void))(v0 + 56);
  swift_release();
  uint64_t v2 = *(void **)(v0 + 16);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 24);
  v1(v2, v3);
  sub_1002526E4(v2, v3);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_10034B9C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a3;
  v4[16] = a4;
  v4[14] = a1;
  uint64_t v6 = type metadata accessor for UUID();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = swift_task_alloc();
  v4[21] = type metadata accessor for MainActor();
  v4[22] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v4[23] = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_10034BAF8;
  return REMStore.downloadPublicTemplate(withPublicLinkURLUUID:)(a3);
}

uint64_t sub_10034BAF8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 192) = a1;
  *(void *)(v3 + 200) = v1;
  swift_task_dealloc();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  if (v1) {
    uint64_t v6 = sub_10034BFA4;
  }
  else {
    uint64_t v6 = sub_10034BC58;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_10034BC58()
{
  uint64_t v29 = v0;
  swift_release();
  if (qword_1007854D0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[24];
  uint64_t v2 = v0[20];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[18];
  uint64_t v5 = v0[15];
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_10079BB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  id v7 = v1;
  uint64_t v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  BOOL v10 = os_log_type_enabled(v8, v9);
  uint64_t v11 = (void *)v0[24];
  uint64_t v12 = v0[20];
  uint64_t v14 = v0[17];
  uint64_t v13 = v0[18];
  if (v10)
  {
    uint64_t v15 = v0[16];
    log = v8;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315650;
    v0[5] = v15;
    swift_getMetatypeMetadata();
    uint64_t v17 = String.init<A>(describing:)();
    v0[11] = sub_1000385A8(v17, v18, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v19 = UUID.uuidString.getter();
    v0[12] = sub_1000385A8(v19, v20, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    *(_WORD *)(v16 + 22) = 2112;
    v0[13] = v11;
    id v21 = v11;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v26 = v11;

    _os_log_impl((void *)&_mh_execute_header, log, v9, "%s Downloaded public template. Will show public template. {templatePublicLinkURLUUID: %s, publicTemplateObjectID: %@}", (uint8_t *)v16, 0x20u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v13 + 8))(v0[20], v0[17]);
  }
  uint64_t v22 = v0[14];
  BOOL v23 = v0[25] != 0;
  *(void *)uint64_t v22 = v11;
  *(unsigned char *)(v22 + 8) = v23;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v24 = (uint64_t (*)(void))v0[1];
  return v24();
}

uint64_t sub_10034BFA4()
{
  uint64_t v25 = v0;
  swift_release();
  if (qword_1007854D0 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[18];
  uint64_t v1 = v0[19];
  uint64_t v3 = v0[17];
  uint64_t v4 = v0[15];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_10079BB90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[18];
  uint64_t v9 = v0[19];
  uint64_t v11 = v0[17];
  if (v8)
  {
    uint64_t v12 = v0[16];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315650;
    v0[9] = v12;
    swift_getMetatypeMetadata();
    uint64_t v14 = String.init<A>(describing:)();
    v0[6] = sub_1000385A8(v14, v15, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v16 = UUID.uuidString.getter();
    v0[7] = sub_1000385A8(v16, v17, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v13 + 22) = 2080;
    swift_getErrorValue();
    uint64_t v18 = Error.rem_errorDescription.getter();
    v0[10] = sub_1000385A8(v18, v19, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s Failed to download public template. {templatePublicLinkURLUUID: %s, error: %s}", (uint8_t *)v13, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v10 + 8))(v0[19], v0[17]);
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v20 = v0[25];
  uint64_t v21 = v0[14];
  *(void *)uint64_t v21 = v20;
  *(unsigned char *)(v21 + 8) = v20 != 0;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_10034C2EC()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 2;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong traitCollection];

  id v3 = [v2 horizontalSizeClass];
  if (v3 != (id)1) {
    return 2;
  }
  uint64_t v4 = (char *)swift_unknownObjectWeakLoadStrong();
  if (!v4) {
    return 0;
  }
  uint64_t v5 = v4;
  if ([v4 isCollapsed])
  {
    id v6 = [*(id *)&v5[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController] viewControllers];
    sub_1000368FC(0, (unint64_t *)&qword_100791C40);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v8 = *(id *)&v5[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
    char v9 = sub_10002A944((uint64_t)v8, v7);

    swift_bridgeObjectRelease();
    if ((v9 & 1) == 0) {
      return 0;
    }
  }
  else
  {
  }
  return 1;
}

void sub_10034C41C(void *a1, void *a2, char a3)
{
  sub_10034812C(1);
  swift_allocObject();
  swift_weakInit();
  id v6 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  *(unsigned char *)(v7 + 32) = a3;
  id v8 = a1;
  id v9 = a2;
  id v10 = (id)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
}

void sub_10034C568(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = Strong;
    unsigned __int8 v7 = [Strong isCollapsed];
  }
  else
  {
    id v8 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v8)
    {
      id v9 = v8;
      id v10 = [v8 traitCollection];

      id v11 = [v10 horizontalSizeClass];
      unsigned __int8 v7 = v11 == (id)1;
    }
    else
    {
      unsigned __int8 v7 = 0;
    }
  }
  sub_10034812C(1);
  swift_allocObject();
  swift_weakInit();
  uint64_t v12 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  unint64_t v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v14 + v13, (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  *(unsigned char *)(v14 + v13 + v4) = v7 ^ 1;
  unint64_t v15 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
}

void sub_10034C7DC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_100007128;
  *(void *)(v7 + 24) = v6;
  swift_unknownObjectRetain_n();
  swift_retain();
  id v8 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v10 + v9, (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  id v11 = (void *)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_10034C9E8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRListType();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  if (swift_unknownObjectWeakLoadStrong())
  {
    sub_1000848FC(a2);
    swift_unknownObjectRelease();
  }
  uint64_t v8 = *(void *)(v7 + 72);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = type metadata accessor for REMHashtagLabelSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v6, a2, v10);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))(v6, ObjectType, v8);
  return sub_10034E844((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRListType);
}

void sub_10034CB38(void *a1, uint64_t a2)
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    uint64_t v8 = (void *)swift_unknownObjectWeakLoadStrong();
    if (!v8) {
      goto LABEL_7;
    }
    unint64_t v9 = v8;
    id v10 = [v8 traitCollection];

    id v11 = [v10 horizontalSizeClass];
    if (v11 != (id)1) {
      goto LABEL_7;
    }
LABEL_6:
    sub_10034812C(1);
    swift_allocObject();
    swift_weakInit();
    uint64_t v12 = (void *)zalgo.getter();
    sub_10003B754(&qword_100799F38);
    dispatch thunk of Promise.then<A>(on:closure:)();
    goto LABEL_8;
  }
  uint64_t v6 = Strong;
  unsigned __int8 v7 = [Strong isCollapsed];

  if (v7) {
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v13 = *(void *)(v2 + 32);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_100007128;
  *(void *)(v14 + 24) = v13;
  swift_unknownObjectRetain_n();
  swift_retain();
  uint64_t v12 = (void *)zalgo.getter();
  sub_10003B754(&qword_100799F38);
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_unknownObjectRelease();
LABEL_8:
  swift_release();
  swift_release();

  unint64_t v15 = (void *)swift_unknownObjectWeakLoadStrong();
  if (v15)
  {
    uint64_t v16 = v15;
    LOBYTE(v17) = [v15 isCollapsed];
  }
  else
  {
    uint64_t v18 = (void *)swift_unknownObjectWeakLoadStrong();
    id v17 = v18;
    if (v18)
    {
      id v19 = [v18 traitCollection];

      id v17 = [v19 horizontalSizeClass];
      LOBYTE(v17) = v17 == (id)1;
    }
  }
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a1;
  *(void *)(v20 + 24) = a2;
  *(unsigned char *)(v20 + 32) = v17 ^ 1;
  id v21 = a1;
  swift_bridgeObjectRetain();
  id v22 = (id)zalgo.getter();
  dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_10034CE18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = *(void *)(Strong + 32);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a4;
    *(void *)(v7 + 24) = v6;
    swift_unknownObjectRetain_n();
    swift_retain();
    uint64_t v8 = (void *)zalgo.getter();
    sub_10003B754(&qword_100799F38);
    uint64_t v9 = dispatch thunk of Promise.then<A>(on:closure:)();
    swift_release();
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v9 = type metadata accessor for PromiseError();
    sub_1000CC16C();
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v9 - 8) + 104))(v10, enum case for PromiseError.abandoned(_:), v9);
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_10034CF8C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7 = *(void *)(*(void *)a1 + 104);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = swift_allocObject();
  swift_weakInit();
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  *(unsigned char *)(v10 + 24) = a4;
  id v11 = *(void (**)(uint64_t, uint64_t, void (*)(void *, char), uint64_t, uint64_t, uint64_t))(v7 + 24);
  swift_retain();
  v11(a2, a3, sub_10034EF00, v10, ObjectType, v7);
  swift_release();
  return swift_release();
}

uint64_t sub_10034D08C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  sub_100016AFC(v3 + 96, (uint64_t)&v24);
  sub_100016A10((uint64_t)v27);
  sub_100016998((uint64_t)&v24);
  int v7 = sub_10034C2EC();
  if (v7)
  {
    if (v7 == 1)
    {
      sub_10003B694((uint64_t)v27, (uint64_t)&v24, (uint64_t *)&unk_1007AD740);
      uint64_t v8 = *((void *)&v25 + 1);
      if (*((void *)&v25 + 1))
      {
        uint64_t v9 = v26;
        sub_100038D28(&v24, *((uint64_t *)&v25 + 1));
        (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 112))(&v22, a1, a2, v8, v9);
        sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_1007AD740);
        sub_100038CD8((uint64_t)&v24);
      }
      else
      {
        sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_1007AD740);
        sub_10003B6F8((uint64_t)&v24, (uint64_t *)&unk_1007AD740);
        long long v22 = 0u;
        long long v23 = 0u;
      }
      uint64_t v16 = &v22;
      return sub_1002D3B90((uint64_t)v16, a3);
    }
    sub_10003B694((uint64_t)v27, (uint64_t)&v24, (uint64_t *)&unk_1007AD740);
    uint64_t v13 = *((void *)&v25 + 1);
    if (*((void *)&v25 + 1))
    {
      uint64_t v14 = v26;
      sub_100038D28(&v24, *((uint64_t *)&v25 + 1));
      (*(void (**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 112))(&v22, a1, a2, v13, v14);
      sub_100038CD8((uint64_t)&v24);
      uint64_t v15 = *((void *)&v23 + 1);
      sub_10003B694(a2, (uint64_t)v21, &qword_100788D60);
      if (v15)
      {
        sub_10003B6F8((uint64_t)v21, &qword_100788D60);
        sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_1007AD740);
        sub_100038E1C(&v22, &v24);
LABEL_27:
        uint64_t v16 = &v24;
        return sub_1002D3B90((uint64_t)v16, a3);
      }
    }
    else
    {
      sub_10003B6F8((uint64_t)&v24, (uint64_t *)&unk_1007AD740);
      long long v22 = 0u;
      long long v23 = 0u;
      sub_10003B694(a2, (uint64_t)v21, &qword_100788D60);
    }
    if ((TTRModuleState.isReady.getter() & 1) != 0 && (uint64_t Strong = swift_unknownObjectWeakLoadStrong()) != 0)
    {
      uint64_t v18 = Strong;
      uint64_t ObjectType = swift_getObjectType();
      swift_unknownObjectRetain();
      if (sub_10007D4DC(a1, (uint64_t)v21))
      {
        *((void *)&v25 + 1) = ObjectType;
        *(void *)&long long v24 = v18;
      }
      else
      {
        swift_unknownObjectRelease();
        long long v24 = 0u;
        long long v25 = 0u;
      }
      swift_unknownObjectRelease();
    }
    else
    {
      long long v24 = 0u;
      long long v25 = 0u;
    }
    sub_10003B6F8((uint64_t)v21, &qword_100788D60);
    sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_1007AD740);
    sub_10003B6F8((uint64_t)&v22, &qword_100788D60);
    goto LABEL_27;
  }
  if ((TTRModuleState.isReady.getter() & 1) != 0 && (uint64_t v10 = swift_unknownObjectWeakLoadStrong()) != 0)
  {
    uint64_t v11 = v10;
    uint64_t v12 = swift_getObjectType();
    swift_unknownObjectRetain();
    if (sub_10007D4DC(a1, a2))
    {
      *(void *)(a3 + 24) = v12;
      *(void *)a3 = v11;
    }
    else
    {
      swift_unknownObjectRelease();
      *(_OWORD *)a3 = 0u;
      *(_OWORD *)(a3 + 16) = 0u;
    }
    swift_unknownObjectRelease();
  }
  else
  {
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_1007AD740);
}

char *sub_10034D3C4()
{
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = Strong;
  if (Strong)
  {
    if ([Strong isCollapsed])
    {
      id v3 = [*(id *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController] viewControllers];
      sub_1000368FC(0, (unint64_t *)&qword_100791C40);
      unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      id v5 = *(id *)&v2[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
      char v6 = sub_10002A944((uint64_t)v5, v4);

      swift_bridgeObjectRelease();
      uint64_t v2 = 0;
      if ((v6 & 1) == 0) {
        return v2;
      }
    }
    else
    {
    }
    swift_beginAccess();
    sub_100016AFC(v0 + 96, (uint64_t)v9);
    sub_100016A10((uint64_t)v10);
    sub_100016998((uint64_t)v9);
    uint64_t v2 = v11;
    if (v11)
    {
      uint64_t v7 = v12;
      sub_100038D28(v10, (uint64_t)v11);
      uint64_t v2 = (char *)(*(uint64_t (**)(char *, uint64_t))(v7 + 88))(v2, v7);
      sub_100038CD8((uint64_t)v10);
    }
    else
    {
      sub_10003B6F8((uint64_t)v10, (uint64_t *)&unk_1007AD740);
    }
  }
  return v2;
}

char *sub_10034D540()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong traitCollection];

    id v4 = [v3 horizontalSizeClass];
    if (v4 == (id)1)
    {
      id v5 = (char *)swift_unknownObjectWeakLoadStrong();
      char v6 = v5;
      if (!v5) {
        return v6;
      }
      if ([v5 isCollapsed])
      {
        id v7 = [*(id *)&v6[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_mainNavigationController] viewControllers];
        sub_1000368FC(0, (unint64_t *)&qword_100791C40);
        unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        id v9 = *(id *)&v6[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_detailNavigationController];
        char v10 = sub_10002A944((uint64_t)v9, v8);

        swift_bridgeObjectRelease();
        if ((v10 & 1) == 0) {
          return 0;
        }
      }
      else
      {
      }
    }
  }
  swift_beginAccess();
  sub_100016AFC(v0 + 96, (uint64_t)v12);
  char v6 = (char *)sub_10034D6C0();
  sub_100016998((uint64_t)v12);
  return v6;
}

uint64_t sub_10034D6C0()
{
  sub_100016AFC(v0, (uint64_t)v9);
  uint64_t v1 = 0;
  switch(v10)
  {
    case 1:
      sub_100038ED8(v9, (uint64_t)v7);
      uint64_t v5 = *(void *)(*sub_100038D28(v7, v8)
                     + OBJC_IVAR____TtC9Reminders32TTRIShowCustomSmartListPresenter_dataModelSource
                     + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(ObjectType, v5);
      sub_100038CD8((uint64_t)v7);
      break;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      sub_100016998((uint64_t)v9);
      uint64_t v1 = 0;
      break;
    case 13:
      return v1;
    default:
      sub_100038ED8(v9, (uint64_t)v7);
      uint64_t v3 = *(void *)(*sub_100038D28(v7, v8)
                     + OBJC_IVAR____TtC9Reminders32TTRIShowRemindersInListPresenter_dataModelSource
                     + 8);
      uint64_t v4 = swift_getObjectType();
      uint64_t v1 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v4, v3);
      sub_100038CD8((uint64_t)v7);
      break;
  }
  return v1;
}

uint64_t sub_10034D834()
{
  sub_100016AFC(v0, (uint64_t)v3);
  uint64_t v1 = 7;
  switch(v3[40])
  {
    case 3:
      uint64_t v1 = 1;
      goto LABEL_2;
    case 4:
      uint64_t v1 = 3;
      goto LABEL_2;
    case 5:
      uint64_t v1 = 2;
      goto LABEL_2;
    case 6:
      uint64_t v1 = 0;
      goto LABEL_2;
    case 7:
      uint64_t v1 = 4;
      goto LABEL_2;
    case 8:
      uint64_t v1 = 5;
      goto LABEL_2;
    case 0xB:
      uint64_t v1 = 6;
      goto LABEL_2;
    case 0xD:
      return v1;
    default:
LABEL_2:
      sub_100016998((uint64_t)v3);
      return v1;
  }
}

uint64_t sub_10034D908(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 40);
  uint64_t v5 = swift_unknownObjectRetain();
  uint64_t v6 = a1(v5, v4);
  swift_unknownObjectRelease();
  return v6;
}

uint64_t sub_10034D95C(unsigned char *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if (*a1 != 1)
  {
    uint64_t v8 = self;
    _StringGuts.grow(_:)(43);
    swift_bridgeObjectRelease();
    unint64_t v20 = 0xD000000000000028;
    unint64_t v21 = 0x80000001006B6D40;
    v9._countAndFlagsBits = a2;
    v9._object = a3;
    String.append(_:)(v9);
    v10._countAndFlagsBits = 125;
    v10._object = (void *)0xE100000000000000;
    String.append(_:)(v10);
    uint64_t v7 = 0x80000001006B6D40;
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v8 internalErrorWithDebugDescription:v11];
LABEL_6:
    v12;

    swift_willThrow();
    return v7;
  }
  uint64_t v6 = a4 + 96;
  swift_beginAccess();
  sub_100016AFC(v6, (uint64_t)&v20);
  sub_100016A10((uint64_t)&v18);
  sub_100016998((uint64_t)&v20);
  if (!v19)
  {
    sub_10003B6F8((uint64_t)&v18, (uint64_t *)&unk_1007AD740);
    uint64_t v13 = self;
    unint64_t v20 = 0;
    unint64_t v21 = 0xE000000000000000;
    _StringGuts.grow(_:)(78);
    v14._countAndFlagsBits = 0xD00000000000004BLL;
    v14._object = (void *)0x80000001006B6D70;
    String.append(_:)(v14);
    v15._countAndFlagsBits = a2;
    v15._object = a3;
    String.append(_:)(v15);
    v16._countAndFlagsBits = 125;
    v16._object = (void *)0xE100000000000000;
    String.append(_:)(v16);
    uint64_t v7 = v21;
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v12 = [v13 internalErrorWithDebugDescription:v11];
    goto LABEL_6;
  }
  sub_100038ED8(&v18, (uint64_t)v22);
  sub_1000145EC((uint64_t)v22, (uint64_t)&v20);
  sub_10003B754(&qword_10079B158);
  swift_allocObject();
  uint64_t v7 = Promise.init(value:)();
  sub_100038CD8((uint64_t)v22);
  return v7;
}

uint64_t sub_10034DB94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  firstly<A>(closure:)();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  void v6[4] = a1;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = (void *)zalgo.getter();
  sub_10003B754(&qword_100791C48);
  uint64_t v8 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v8;
}

uint64_t sub_10034DC8C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = a3;
  *(unsigned char *)(v7 + 25) = a4;
  swift_retain();
  uint64_t v8 = (void *)zalgo.getter();
  uint64_t v9 = dispatch thunk of Promise.then<A>(on:closure:)();
  swift_release();
  swift_release();

  return v9;
}

uint64_t sub_10034DD6C()
{
  sub_1000499D4(v0 + 16);
  swift_unknownObjectRelease();
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_100016998(v0 + 96);
  return v0;
}

uint64_t sub_10034DDC4()
{
  sub_10034DD6C();

  return swift_deallocClassInstance();
}

uint64_t assignWithCopy for TTRIRootRouter.CurrentDetailContents(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD) {
      unsigned int v4 = *(_DWORD *)a1 + 13;
    }
    if (v4 <= 0xC) {
      sub_100038CD8(a1);
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 40);
    if (v5 >= 0xD) {
      unsigned int v5 = *(_DWORD *)a2 + 13;
    }
    switch(v5)
    {
      case 0u:
        uint64_t v6 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v6;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v6 - 8))(a1, a2);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        uint64_t v9 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v9;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v9 - 8))(a1, a2);
        char v10 = 1;
        goto LABEL_23;
      case 2u:
        uint64_t v11 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v11;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v11 - 8))(a1, a2);
        char v10 = 2;
        goto LABEL_23;
      case 3u:
        uint64_t v12 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v12;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v12 - 8))(a1, a2);
        char v10 = 3;
        goto LABEL_23;
      case 4u:
        uint64_t v13 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v13;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v13 - 8))(a1, a2);
        char v10 = 4;
        goto LABEL_23;
      case 5u:
        uint64_t v14 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v14;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v14 - 8))(a1, a2);
        char v10 = 5;
        goto LABEL_23;
      case 6u:
        uint64_t v15 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v15;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v15 - 8))(a1, a2);
        char v10 = 6;
        goto LABEL_23;
      case 7u:
        uint64_t v16 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v16;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v16 - 8))(a1, a2);
        char v10 = 7;
        goto LABEL_23;
      case 8u:
        uint64_t v17 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v17;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v17 - 8))(a1, a2);
        char v10 = 8;
        goto LABEL_23;
      case 9u:
        uint64_t v18 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v18;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v18 - 8))(a1, a2);
        char v10 = 9;
        goto LABEL_23;
      case 0xAu:
        uint64_t v19 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v19;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v19 - 8))(a1, a2);
        char v10 = 10;
        goto LABEL_23;
      case 0xBu:
        uint64_t v20 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v20;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v20 - 8))(a1, a2);
        char v10 = 11;
        goto LABEL_23;
      case 0xCu:
        uint64_t v21 = *((void *)a2 + 3);
        *(void *)(a1 + 24) = v21;
        *(void *)(a1 + 32) = *((void *)a2 + 4);
        (**(void (***)(uint64_t, long long *))(v21 - 8))(a1, a2);
        char v10 = 12;
LABEL_23:
        *(unsigned char *)(a1 + 40) = v10;
        break;
      default:
        long long v7 = *a2;
        long long v8 = a2[1];
        *(_OWORD *)(a1 + 25) = *(long long *)((char *)a2 + 25);
        *(_OWORD *)a1 = v7;
        *(_OWORD *)(a1 + 16) = v8;
        break;
    }
  }
  return a1;
}

__n128 initializeWithTake for TTRIRootRouter.CurrentDetailContents(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TTRIRootRouter.CurrentDetailContents(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 0xD) {
      unsigned int v4 = *(_DWORD *)a1 + 13;
    }
    if (v4 <= 0xC) {
      sub_100038CD8(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 0xD) {
      unsigned int v5 = *(_DWORD *)a2 + 13;
    }
    switch(v5)
    {
      case 0u:
        long long v6 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v6;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = 0;
        return a1;
      case 1u:
        long long v8 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v8;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 1;
        goto LABEL_23;
      case 2u:
        long long v10 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v10;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 2;
        goto LABEL_23;
      case 3u:
        long long v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v11;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 3;
        goto LABEL_23;
      case 4u:
        long long v12 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v12;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 4;
        goto LABEL_23;
      case 5u:
        long long v13 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v13;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 5;
        goto LABEL_23;
      case 6u:
        long long v14 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v14;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 6;
        goto LABEL_23;
      case 7u:
        long long v15 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v15;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 7;
        goto LABEL_23;
      case 8u:
        long long v16 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v16;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 8;
        goto LABEL_23;
      case 9u:
        long long v17 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v17;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 9;
        goto LABEL_23;
      case 0xAu:
        long long v18 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v18;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 10;
        goto LABEL_23;
      case 0xBu:
        long long v19 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v19;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 11;
        goto LABEL_23;
      case 0xCu:
        long long v20 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v20;
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        char v9 = 12;
LABEL_23:
        *(unsigned char *)(a1 + 40) = v9;
        break;
      default:
        long long v7 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v7;
        *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRootRouter.CurrentDetailContents(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF3 && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 243);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 0xE) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRootRouter.CurrentDetailContents(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF2)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)__n128 result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)__n128 result = a2 - 243;
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF3) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10034E560(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 0xD) {
    return (*(_DWORD *)a1 + 13);
  }
  return result;
}

uint64_t sub_10034E57C(uint64_t result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 13;
    LOBYTE(a2) = 13;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRootRouter.CurrentDetailContents()
{
  return &type metadata for TTRIRootRouter.CurrentDetailContents;
}

uint64_t sub_10034E5B4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = (void *)Strong;
  uint64_t v2 = UIViewController.topPresentedViewController.getter();

  return v2;
}

uint64_t sub_10034E5F8(long long *a1, uint64_t a2)
{
  return a2;
}

void sub_10034E630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  unsigned int v5 = (char *)Strong;
  sub_1002D2C14(1);
  sub_100038D28((void *)(*(void *)&v5[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 48), *(void *)(*(void *)&v5[OBJC_IVAR____TtC9Reminders22TTRIRootViewController_presenter] + 72));
  long long v6 = sub_10034D540();
  if (v7 == -1) {
    goto LABEL_5;
  }
  if (v7)
  {
    sub_100095434(v6, v7);
LABEL_5:
    long long v6 = 0;
  }
  long long v8 = v6;
  sub_1000130E8(v6);
}

uint64_t sub_10034E700()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034E738()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10034E7C8(uint64_t *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  return sub_10034C9E8(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_10034E844(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10034E8AC()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10034E8E4()
{
  return sub_100333A44(33);
}

void sub_10034E8EC(unsigned char *a1@<X8>)
{
  sub_10040DFB0(*(void **)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_10034E90C(uint64_t a1)
{
  return sub_10034CE18(a1, v1, (uint64_t)&unk_100746BF0, (uint64_t)sub_100007128);
}

uint64_t sub_10034E958()
{
  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10034E998()
{
  return sub_10040D2B8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned __int8 *)(v0 + 32));
}

uint64_t sub_10034E9D0(uint64_t a1, uint64_t a2)
{
  return sub_10034873C(a1, a2, *(void **)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_10034E9E0()
{
  return sub_100333A44(33);
}

uint64_t sub_10034E9E8()
{
  return sub_100333A44(33);
}

uint64_t sub_10034E9F0()
{
  return sub_100333A44(32);
}

void sub_10034E9F8(unsigned char *a1@<X8>)
{
  sub_10040EBB8(*(void **)(v1 + 24), a1);
}

uint64_t sub_10034EA14(uint64_t a1, uint64_t a2)
{
  return sub_100348988(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_10034EA1C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 16);
  uint64_t v2 = *(void *)(*(void *)(v0 + 32) + 40);
  uint64_t v3 = swift_unknownObjectRetain();
  uint64_t v4 = v1(v3, v2);
  swift_unknownObjectRelease();
  return v4;
}

uint64_t sub_10034EA78()
{
  return sub_100333A44(32);
}

uint64_t sub_10034EA80()
{
  swift_release();

  return _swift_deallocObject(v0, 26, 7);
}

uint64_t sub_10034EAB8@<X0>(char *a1@<X8>)
{
  return sub_10040F128(*(unsigned char *)(v1 + 24), *(unsigned char *)(v1 + 25), a1);
}

uint64_t sub_10034EADC()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10034EBA8@<X0>(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  return sub_10040F2BC(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_10034EC28(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_10003D2E4;
  return sub_10034B9C4(a1, v4, v5, v6);
}

uint64_t sub_10034ECDC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10034ED24(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *long long v8 = v2;
  v8[1] = sub_10000C2D4;
  return sub_10034B1C4(a1, v4, v5, v7, v6);
}

uint64_t sub_10034EDE4()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10034EE1C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 33, 7);
}

uint64_t sub_10034EE5C(uint64_t a1)
{
  return sub_10034CF8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_10034EE7C(uint64_t a1)
{
  return sub_10034CE18(a1, v1, (uint64_t)&unk_100746F10, (uint64_t)sub_100007128);
}

uint64_t sub_10034EEC8()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

void sub_10034EF00(void *a1, char a2)
{
  sub_10040CEF4(a1, a2 & 1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

_OWORD *sub_10034EF10(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(_OWORD *)((char *)a2 + 25) = *(long long *)((char *)a1 + 25);
  *a2 = v2;
  a2[1] = v3;
  return a2;
}

uint64_t sub_10034EF28(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_10034EF60(uint64_t a1)
{
  return sub_10034CE18(a1, v1, (uint64_t)&unk_100746F88, (uint64_t)sub_100007128);
}

uint64_t sub_10034EFAC()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + v4 + 1;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

void sub_10034F040()
{
  uint64_t v1 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_10040DC00(v0 + v2, *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64)));
}

uint64_t sub_10034F0D8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  a1[1] = v4;
  return result;
}

void sub_10034F144(unsigned char *a1@<X8>)
{
}

void sub_10034F160(unsigned char *a1@<X8>)
{
}

void sub_10034F178(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu;
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu] = a1;
  if (a1)
  {
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = swift_bridgeObjectRetain();
      char v5 = sub_1000BA798(v4, v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v5)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
  else if (!v3)
  {
    return;
  }
  id v6 = sub_10034F778();
  if (*(void *)&v1[v2])
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_1003506E0;
    *(void *)(v8 + 24) = v7;
    sub_10009672C();
    swift_bridgeObjectRetain();
    uint64_t v9 = v1;
    id v10 = (id)TTRValueBasedMenu.buildMenu(selectionHandler:)();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    id v10 = 0;
  }
  [v6 setMenu:v10];
  swift_bridgeObjectRelease();
}

void sub_10034F328(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v29 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v28 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v27 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for DispatchTime();
  uint64_t v7 = *(void *)(v30 - 8);
  uint64_t v8 = __chkstk_darwin(v30);
  id v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v12 = (char *)&v25 - v11;
  id v13 = sub_10034F778();
  unsigned __int8 v14 = [v13 isHidden];

  if (v14)
  {
    if ((a1 & 1) == 0)
    {
      long long v15 = (uint64_t *)TTRAccesibility.General.Announcements.MoreOptionsShown.unsafeMutableAddressor();
      uint64_t v16 = *v15;
      uint64_t v17 = v15[1];
      swift_bridgeObjectRetain();
LABEL_6:
      id v18 = sub_10034F778();
      [v18 setHidden:0];
      goto LABEL_10;
    }
    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    if ((a1 & 1) == 0)
    {
      uint64_t v16 = 0;
      uint64_t v17 = 0;
      goto LABEL_6;
    }
    long long v19 = (uint64_t *)TTRAccesibility.General.Announcements.FewerOptionsShown.unsafeMutableAddressor();
    uint64_t v16 = *v19;
    uint64_t v17 = v19[1];
    swift_bridgeObjectRetain();
  }
  id v18 = sub_10034F778();
  [v18 setHidden:1];
LABEL_10:

  if (v17)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100788E40);
    long long v20 = (void *)static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    uint64_t v25 = v5;
    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v10, v30);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v16;
    *(void *)(v21 + 24) = v17;
    aBlock[4] = sub_1003506A0;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10000AD88;
    aBlock[3] = &unk_100746FE8;
    long long v22 = _Block_copy(aBlock);
    swift_release();
    long long v23 = v27;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_100350750((unint64_t *)&qword_10078C6E0, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_10003B754((uint64_t *)&unk_100788E50);
    sub_10003D7C4();
    long long v24 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v24, v2);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v23, v25);
    v26(v12, v30);
  }
}

id sub_10034F778()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton);
  }
  else
  {
    uint64_t v4 = sub_10034FC30();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10034F7D8(char a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = result;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    if (v4) {
      sub_100094638(a1 & 1);
    }
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10034F870()
{
  UIAccessibilityNotifications v0 = UIAccessibilityAnnouncementNotification;
  NSString v1 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v0, v1);
}

char *sub_10034F8C8(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView_menu] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton] = 0;
  if (a2)
  {
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }
  v17.receiver = v2;
  v17.super_class = ObjectType;
  id v6 = (char *)objc_msgSendSuper2(&v17, "initWithReuseIdentifier:", v5);

  uint64_t v7 = *(void **)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_10066D460;
  uint64_t v9 = OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView;
  id v10 = *(void **)&v6[OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_labelView];
  *(void *)(v8 + 32) = v10;
  uint64_t v11 = v6;
  id v12 = v7;
  id v13 = v10;
  *(void *)(v8 + 40) = sub_10034F778();
  *(void *)(v8 + 48) = sub_100350520();
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v12 setArrangedSubviews:isa];

  id v15 = sub_10034F778();
  [v15 setCustomAlignmentRectInsets:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];

  [*(id *)&v6[v9] setIsAccessibilityElement:0];
  sub_10034FA94();

  return v11;
}

id sub_10034FA94()
{
  id v1 = [self sharedApplication];
  id v2 = [v1 preferredContentSizeCategory];

  LOBYTE(v1) = UIContentSizeCategory.isAccessibilityCategory.getter();
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders34TTRIAccountsListsSectionHeaderView_innerStackView);
  uint64_t v4 = v1 & 1;
  if (v1) {
    uint64_t v5 = 1;
  }
  else {
    uint64_t v5 = 2;
  }
  [v3 setAxis:v4];

  return [v3 setAlignment:v5];
}

void *sub_10034FC30()
{
  uint64_t v0 = sub_10003B754(&qword_10078ED08);
  __chkstk_darwin(v0 - 8);
  id v2 = (char *)&v17 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for UIButton.Configuration.Size();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIButton.Configuration();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v13 = (char *)&v17 - v12;
  static UIButton.Configuration.plain()();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for UIButton.Configuration.Size.small(_:), v3);
  UIButton.Configuration.buttonSize.setter();
  UIConfigurationTextAttributesTransformer.init(_:)();
  uint64_t v14 = type metadata accessor for UIConfigurationTextAttributesTransformer();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v2, 0, 1, v14);
  UIButton.Configuration.titleTextAttributesTransformer.setter();
  sub_1000368FC(0, &qword_100794990);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
  id v15 = (void *)UIButton.init(configuration:primaryAction:)();
  [v15 setChangesSelectionAsPrimaryAction:1];
  [v15 setShowsMenuAsPrimaryAction:1];
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  return v15;
}

uint64_t sub_10034FEEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributeContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  static UIFont.roundedBodyFont.getter();
  sub_10001B9FC();
  return AttributeContainer.subscript.setter();
}

void sub_10034FFBC()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIAccountsListsTagsSectionHeaderView____lazy_storage___menuButton);
}

uint64_t sub_100350048(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)&v21 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v12((char *)&v21 - v10, a1, v2);
  id v13 = *(uint64_t (**)(char *, uint64_t))(v3 + 88);
  int v14 = v13(v11, v2);
  if (v14 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
    || v14 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
  {
    return 1;
  }
  v12(v9, (uint64_t)v11, v2);
  static REMHashtagLabelSpecifier.empty.getter();
  sub_100350750((unint64_t *)&qword_100788D40, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
  char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
  id v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  v18(v6, v2);
  v18(v9, v2);
  if (v17)
  {
    v18(v11, v2);
    return 1;
  }
  else if (v13(v11, v2) == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v11, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v19 = &v11[*(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64)];
    uint64_t v20 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
    return 0;
  }
  else
  {
    uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
    __break(1u);
  }
  return result;
}

void *sub_100350318(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  TTRAccountsListsViewModel.HashtagFilterOperation.Option.init(selection:)();
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v26 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_1004D3914(0, v7, 0);
    uint64_t v8 = v26;
    v19[1] = a1;
    uint64_t v9 = (_WORD *)(a1 + 56);
    do
    {
      uint64_t v10 = *((void *)v9 - 3);
      __int16 v11 = *v9;
      if (*((void *)v9 - 2))
      {
        char v20 = HIBYTE(v11) & 1;
        sub_10009672C();
        TTRValueBasedMenuItem.init(title:image:state:value:)();
        uint64_t v10 = v21;
        uint64_t v12 = v22;
        uint64_t v13 = v23;
        if (v25) {
          __int16 v14 = 256;
        }
        else {
          __int16 v14 = 0;
        }
        __int16 v11 = v14 | v24;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v12 = 0;
        uint64_t v13 = *((void *)v9 - 1);
      }
      uint64_t v26 = v8;
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      if (v16 >= v15 >> 1)
      {
        sub_1004D3914(v15 > 1, v16 + 1, 1);
        uint64_t v8 = v26;
      }
      v9 += 16;
      v8[2] = v16 + 1;
      char v17 = &v8[4 * v16];
      v17[4] = v10;
      v17[5] = v12;
      v17[6] = v13;
      *((_WORD *)v17 + 28) = v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v8;
}

id sub_100350520()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  type metadata accessor for UILayoutPriority(0);
  sub_100350750((unint64_t *)&qword_1007A3F00, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v1) = v4;
  [v0 setContentHuggingPriority:0 forAxis:v1];
  static _UIKitNumericRawRepresentable.- infix(_:_:)();
  LODWORD(v2) = v4;
  [v0 setContentCompressionResistancePriority:0 forAxis:v2];
  return v0;
}

uint64_t sub_100350634()
{
  return 8;
}

uint64_t sub_100350640()
{
  return swift_release();
}

uint64_t sub_100350648(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10035065C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100350668()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_1003506A0()
{
}

uint64_t sub_1003506A8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1003506E0(char a1)
{
  return sub_10034F7D8(a1 & 1);
}

uint64_t sub_1003506EC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100350724(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_100350750(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100350798(void *a1, uint64_t a2, uint64_t a3)
{
  id v4 = objc_allocWithZone((Class)TTRUndoManager);
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 initWithDebugIdentifier:v5];

  type metadata accessor for TTREditTodaySectionsInteractor();
  swift_allocObject();
  id v7 = a1;
  id v8 = v6;
  uint64_t v9 = TTREditTodaySectionsInteractor.init(store:undoManager:)();
  type metadata accessor for TTRIEditTodaySectionsRouter();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  type metadata accessor for TTREditTodaySectionsPresenter();
  swift_allocObject();
  id v10 = v8;
  swift_retain();
  swift_retain();
  uint64_t v11 = TTREditTodaySectionsPresenter.init(interactor:router:undoManager:needsDiscardChangesConfirmation:)();
  type metadata accessor for TTREditTodaySectionsModelObject();
  swift_allocObject();
  TTREditTodaySectionsModelObject.init()();
  swift_retain();
  swift_retain();
  State.init(wrappedValue:)();
  uint64_t v12 = (uint64_t *)((char *)objc_allocWithZone((Class)type metadata accessor for TTRIEditTodaySectionsHostingController(0))
                  + qword_1007A16F0);
  *uint64_t v12 = v11;
  v12[1] = (uint64_t)&protocol witness table for TTREditTodaySectionsPresenter;
  swift_retain();
  swift_retain_n();
  id v13 = v10;
  swift_retain();
  __int16 v14 = (void *)TTRIHostingControllerWithCustomUndo.init(rootView:undoManager:)();
  id v15 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v14];
  swift_beginAccess();
  *(void *)(v9 + 24) = &protocol witness table for TTREditTodaySectionsPresenter;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *(void *)(v11 + 24) = &protocol witness table for TTREditTodaySectionsModelObject;
  swift_unknownObjectWeakAssign();
  swift_beginAccess();
  *(void *)(v11 + 40) = a3;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  id v16 = [v15 presentationController];
  if (v16)
  {
    char v17 = v16;
    [v16 setDelegate:v14];
  }
  TTREditTodaySectionsInteractor.start()();
  swift_release();
  swift_release();

  swift_release();
  swift_release_n();
  swift_release_n();

  return v15;
}

uint64_t sub_100350AFC(uint64_t a1)
{
  if ([v1 localContext])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1002D3B90((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    type metadata accessor for TTRIAnyTreeViewDragSessionContext();
    if (swift_dynamicCast())
    {
      uint64_t result = v4;
      if (*(void *)(v4 + qword_1007BBC50) == a1) {
        return result;
      }
      swift_release();
    }
  }
  else
  {
    sub_10003B6F8((uint64_t)v6, &qword_100788D60);
  }
  return 0;
}

uint64_t sub_100350C20()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_10079BD00);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_10079BD00);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100350CE8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  id v27 = (void *)a3;
  uint64_t v5 = type metadata accessor for Logger();
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(qword_10079C020);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRITreeViewDropProposal(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  char v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B694(a2, (uint64_t)v13, qword_10079C020);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_10003B6F8((uint64_t)v13, qword_10079C020);
  }
  else
  {
    sub_100354A34((uint64_t)v13, (uint64_t)v17, type metadata accessor for TTRITreeViewDropProposal);
    if (sub_100351E84(a1))
    {

      sub_10003B6F8(a2, qword_10079C020);
      return sub_100354A34((uint64_t)v17, (uint64_t)v27, type metadata accessor for TTRITreeViewDropProposal);
    }
    sub_100354970((uint64_t)v17);
  }
  switch((unint64_t)objc_msgSend(a1, "intent", v26))
  {
    case 0uLL:
      uint64_t v19 = sub_10003B754(&qword_10079BEF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v10, 1, 4, v19);
      break;
    case 1uLL:
      uint64_t v22 = sub_10003B754(&qword_10079BEF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v10, 2, 4, v22);
      break;
    case 2uLL:
      uint64_t v20 = sub_10003B754(&qword_10079BEF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v10, 3, 4, v20);
      break;
    case 3uLL:
      uint64_t v21 = sub_10003B754(&qword_10079BEF0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v10, 4, 4, v21);
      break;
    default:
      if (qword_1007854D8 != -1) {
        swift_once();
      }
      uint64_t v25 = sub_100018BF8(v5, (uint64_t)qword_10079BD00);
      (*(void (**)(char *, uint64_t, uint64_t))(v26 + 16))(v7, v25, v5);
      sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
      sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
      sub_1003AA010((uint64_t)"unknown intent", 14, 2);
      __break(1u);
      JUMPOUT(0x100351184);
  }
  uint64_t v23 = v27;
  id v24 = [a1 operation];

  sub_10003B6F8(a2, qword_10079C020);
  uint64_t result = sub_100354A34((uint64_t)v10, (uint64_t)v23 + *(int *)(v14 + 20), type metadata accessor for TTRITreeViewDropProposal.Intent);
  *uint64_t v23 = v24;
  return result;
}

uint64_t sub_100351194()
{
  sub_100354970(v0 + qword_1007BBAC0);
  swift_unknownObjectRelease();

  return v0;
}

uint64_t sub_1003511DC()
{
  sub_100351194();

  return swift_deallocClassInstance();
}

uint64_t sub_100351234()
{
  swift_beginAccess();
  type metadata accessor for TTRITreeViewDropUpdateCoordinator();
  Dictionary.subscript.getter();
  swift_endAccess();
  return v1;
}

void sub_100351304(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

uint64_t sub_10035131C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  id v6 = a3;
  swift_unknownObjectRetain();
  id v7 = a1;
  char v8 = sub_100353D2C(a4);

  swift_unknownObjectRelease();
  return v8 & 1;
}

void sub_100351380(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

id sub_100351398(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v42 - v11;
  id v44 = (char *)type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v44);
  uint64_t v14 = (char *)v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10079C010);
  __chkstk_darwin(v15 - 8);
  char v17 = (void *)((char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *(void *)(v3 + qword_10079BDE8) = a2;
  swift_unknownObjectRelease();
  swift_unknownObjectRetain();
  uint64_t v18 = sub_100351234();
  uint64_t v45 = v12;
  id v46 = v9;
  if (!v18) {
    uint64_t v18 = sub_100351854();
  }
  uint64_t v19 = v18;
  uint64_t v20 = sub_10003B754((uint64_t *)&unk_10079C9A0);
  uint64_t v21 = (uint64_t)v17 + *(int *)(v20 + 64);
  *char v17 = a2;
  v17[1] = a1;
  sub_10003B694(a3, v21, &qword_10078E8F0);
  uint64_t v22 = *(void *)(v20 - 8);
  uint64_t v23 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  v42[1] = v22 + 56;
  char v43 = v23;
  v23(v17, 0, 1, v20);
  uint64_t v24 = v19 + qword_1007BBA48;
  swift_beginAccess();
  swift_unknownObjectRetain();
  id v25 = a1;
  sub_100354908((uint64_t)v17, v24);
  swift_endAccess();
  uint64_t v26 = *(void (**)(void *, uint64_t))(v3 + qword_10079BDC8);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    JUMPOUT(0x100351840);
  }
  uint64_t v28 = (void *)Strong;
  uint64_t v29 = (void *)sub_100119CD0();

  v26(v29, v19);
  uint64_t v30 = (uint64_t)v45;
  id v44 = &v14[*((int *)v44 + 5)];
  sub_1003549CC((uint64_t)v44, (uint64_t)v45, type metadata accessor for TTRITreeViewDropProposal.Intent);
  uint64_t v31 = sub_10003B754(&qword_10079BEF0);
  uint64_t v32 = v14;
  id v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48);
  int v34 = v33(v30, 4, v31);
  uint64_t v47 = v32;
  if ((v34 - 2) >= 3)
  {
    if (!v34)
    {
      uint64_t v35 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v30, v35);
    }
  }
  else
  {
    sub_1000E6F90(v19, (uint64_t)v32);
  }
  sub_100154B48((uint64_t)v47);
  sub_100154DE4();
  v43(v17, 1, 1, v20);
  swift_beginAccess();
  sub_100354908((uint64_t)v17, v24);
  swift_endAccess();
  uint64_t v36 = (uint64_t)v46;
  sub_1003549CC((uint64_t)v44, (uint64_t)v46, type metadata accessor for TTRITreeViewDropProposal.Intent);
  uint64_t v37 = 0;
  switch(v33(v36, 4, v31))
  {
    case 1u:
      break;
    case 2u:
      uint64_t v37 = 1;
      break;
    case 3u:
      uint64_t v37 = 2;
      break;
    case 4u:
      uint64_t v37 = 3;
      break;
    default:
      uint64_t v38 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
      uint64_t v37 = 0;
      break;
  }
  id v39 = v47;
  id v40 = [objc_allocWithZone((Class)UITableViewDropProposal) initWithDropOperation:*v47 intent:v37];
  swift_release();
  sub_100354970((uint64_t)v39);
  return v40;
}

uint64_t sub_100351854()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    type metadata accessor for TTRITreeViewDropUpdateCoordinator();
    uint64_t v2 = sub_10014ED2C(v1);
    swift_retain();
    sub_100351910();
    swift_release();
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100351910()
{
  return swift_endAccess();
}

id sub_1003519EC(void *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5)
  {
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = type metadata accessor for IndexPath();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 0, 1, v12);
  }
  else
  {
    uint64_t v13 = type metadata accessor for IndexPath();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  }
  id v14 = a3;
  swift_unknownObjectRetain();
  id v15 = a1;
  id v16 = sub_100351398(v14, a4, (uint64_t)v11);

  swift_unknownObjectRelease();
  sub_10003B6F8((uint64_t)v11, &qword_10078E8F0);

  return v16;
}

void sub_100351B58(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

void sub_100351B70(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
}

void sub_100351B88(void *a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v8 = a3;
  swift_unknownObjectRetain();
  id v9 = a1;
  a5(a4);

  swift_unknownObjectRelease();
}

id sub_100351C0C(void *a1, uint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
  id v9 = a3;
  id v10 = a1;
  uint64_t v11 = (void *)sub_100354688((uint64_t)v8);

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);

  return v11;
}

void sub_100351D1C()
{
}

uint64_t sub_100351D60()
{
  swift_unknownObjectWeakDestroy();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

BOOL sub_100351E84(void *a1)
{
  uint64_t v3 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRITreeViewDropProposal(0);
  sub_1003549CC((uint64_t)v1 + *(int *)(v6 + 20), (uint64_t)v5, type metadata accessor for TTRITreeViewDropProposal.Intent);
  uint64_t v7 = sub_10003B754(&qword_10079BEF0);
  uint64_t v8 = 0;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 4, v7))
  {
    case 1u:
      break;
    case 2u:
      uint64_t v8 = 1;
      break;
    case 3u:
      uint64_t v8 = 2;
      break;
    case 4u:
      uint64_t v8 = 3;
      break;
    default:
      uint64_t v9 = type metadata accessor for IndexPath();
      (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v5, v9);
      uint64_t v8 = 0;
      break;
  }
  id v10 = [objc_allocWithZone((Class)UITableViewDropProposal) initWithDropOperation:*v1 intent:v8];
  id v11 = [v10 operation];
  if (v11 == [a1 operation])
  {
    id v12 = [v10 intent];
    id v13 = [a1 intent];

    return v12 == v13;
  }
  else
  {

    return 0;
  }
}

uint64_t UIDropOperation.description.getter()
{
  return 63;
}

uint64_t sub_10035210C()
{
  uint64_t result = type metadata accessor for TTRITreeViewDropProposal(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRITreeViewDropCoordinator()
{
  return sub_10003BC54();
}

uint64_t *sub_1003521CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_10003B754(&qword_10079BEF0);
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 4, v8))
    {
      uint64_t v10 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 4, v8);
    }
  }
  return v3;
}

uint64_t sub_10035234C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_10003B754(&qword_10079BEF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 4, v3);
  if (!result)
  {
    uint64_t v5 = type metadata accessor for IndexPath();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v2, v5);
  }
  return result;
}

void *sub_100352404(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10003B754(&qword_10079BEF0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 4, v7))
  {
    uint64_t v9 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v5, v6, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  }
  return a1;
}

void *sub_100352534(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10003B754(&qword_10079BEF0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 4, v7);
  int v11 = v9(v6, 4, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 24))(v5, v6, v15);
      return a1;
    }
    sub_10003B6F8((uint64_t)v5, &qword_10079BEF0);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  uint64_t v12 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  return a1;
}

void *sub_1003526E0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10003B754(&qword_10079BEF0);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 4, v7))
  {
    uint64_t v9 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  }
  return a1;
}

void *sub_100352810(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_10003B754(&qword_10079BEF0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 4, v7);
  int v11 = v9(v6, 4, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v5, v6, v15);
      return a1;
    }
    sub_10003B6F8((uint64_t)v5, &qword_10079BEF0);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
    memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  uint64_t v12 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 4, v7);
  return a1;
}

uint64_t sub_1003529BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003529D0);
}

uint64_t sub_1003529D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_100352A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100352A54);
}

uint64_t sub_100352A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t *sub_100352AC8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10003B754(&qword_10079BEF0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 4, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for IndexPath();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 4, v7);
    }
  }
  return a1;
}

uint64_t sub_100352C34(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10079BEF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 4, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for IndexPath();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(a1, v4);
  }
  return result;
}

void *sub_100352CE8(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_10079BEF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_100352E18(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_10079BEF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for IndexPath();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_10003B6F8((uint64_t)a1, &qword_10079BEF0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for IndexPath();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

void *sub_100352FC4(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_10079BEF0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 4, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  }
  return a1;
}

void *sub_1003530F4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_10079BEF0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 4, v6);
  int v10 = v8(a2, 4, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v13 = type metadata accessor for IndexPath();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_10003B6F8((uint64_t)a1, &qword_10079BEF0);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for IndexPath();
  (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 4, v6);
  return a1;
}

uint64_t sub_1003532A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003532B4);
}

uint64_t sub_1003532B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10079BEF0);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 5) {
    return v5 - 4;
  }
  else {
    return 0;
  }
}

uint64_t sub_100353324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100353338);
}

uint64_t sub_100353338(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 4);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10003B754(&qword_10079BEF0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1003533C0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_10079BEF0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 4, v2);
}

uint64_t sub_10035342C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10079BEF0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 4, v4);
}

unint64_t sub_1003534A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003549CC(v1, (uint64_t)v8, type metadata accessor for TTRITreeViewDropProposal.Intent);
  uint64_t v9 = sub_10003B754(&qword_10079BEF0);
  unint64_t v10 = 0x6669636570736E75;
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 4, v9))
  {
    case 1u:
      return v10;
    case 2u:
      unint64_t v10 = 0x747265736E69;
      break;
    case 3u:
      unint64_t v10 = 0xD000000000000019;
      break;
    case 4u:
      unint64_t v10 = 0x6974616D6F747561;
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      unint64_t v13 = 0;
      unint64_t v14 = 0xE000000000000000;
      _StringGuts.grow(_:)(21);
      swift_bridgeObjectRelease();
      unint64_t v13 = 0xD000000000000013;
      unint64_t v14 = 0x80000001006B70D0;
      sub_1003538B0();
      v11._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v11);
      swift_bridgeObjectRelease();
      unint64_t v10 = v13;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
  }
  return v10;
}

uint64_t sub_100353740()
{
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "(operation: ");
  BYTE5(v8[1]) = 0;
  HIWORD(v8[1]) = -5120;
  unint64_t v1 = 0xE600000000000000;
  uint64_t v2 = 0x6C65636E6163;
  switch(*v0)
  {
    case 0:
      break;
    case 1:
      unint64_t v1 = 0xE90000000000006ELL;
      uint64_t v2 = 0x6564646962726F66;
      break;
    case 2:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v2 = 2037411683;
      break;
    case 3:
      unint64_t v1 = 0xE400000000000000;
      uint64_t v2 = 1702260589;
      break;
    default:
      unint64_t v1 = 0xE100000000000000;
      uint64_t v2 = 63;
      break;
  }
  unint64_t v3 = v1;
  String.append(_:)(*(Swift::String *)&v2);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 0x746E65746E69202CLL;
  v4._object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v4);
  type metadata accessor for TTRITreeViewDropProposal(0);
  v5._countAndFlagsBits = sub_1003534A0();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = 41;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  return v8[0];
}

unint64_t sub_1003538B0()
{
  unint64_t result = qword_10078C820;
  if (!qword_10078C820)
  {
    type metadata accessor for IndexPath();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10078C820);
  }
  return result;
}

uint64_t sub_100353908(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = sub_10003B754(qword_10079C020);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v3 + qword_10079BD18) = a1;
  *(void *)(v3 + qword_10079BD20) = a2;
  swift_unknownObjectRetain();
  id v13 = a2;
  id v14 = [a1 proposal];
  sub_10003B694(a3, (uint64_t)v9, qword_10079C020);
  sub_100350CE8(v14, (uint64_t)v9, (uint64_t)v12);
  sub_10003B6F8(a3, qword_10079C020);
  sub_100354A34((uint64_t)v12, v3 + qword_1007BBAC0, type metadata accessor for TTRITreeViewDropProposal);
  return v3;
}

uint64_t sub_100353A74(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(qword_10079C020);
  __chkstk_darwin(v4 - 8);
  Swift::String v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = type metadata accessor for TTRITreeViewDropProposal(0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  id v12 = [a1 session];
  uint64_t v13 = sub_100351234();
  swift_unknownObjectRelease();
  if (v13)
  {
    sub_10015537C();
    sub_10003B6F8((uint64_t)v9, qword_10079C020);
    uint64_t v14 = v13 + qword_1007BBA40;
    swift_beginAccess();
    sub_1003549CC(v14, (uint64_t)v9, type metadata accessor for TTRITreeViewDropProposal);
    swift_release();
    v11(v9, 0, 1, v10);
  }
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v16 = (void *)result;
    type metadata accessor for TTRITreeViewDropCoordinator();
    sub_10003B694((uint64_t)v9, (uint64_t)v6, qword_10079C020);
    swift_allocObject();
    char v17 = (void *)swift_unknownObjectRetain();
    uint64_t v18 = sub_100353908(v17, v16, (uint64_t)v6);
    swift_unknownObjectRelease();

    uint64_t v19 = *(void (**)(void *, uint64_t))(v2 + qword_10079BDB0);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v20 = (void *)result;
      uint64_t v21 = (void *)sub_100119CD0();

      v19(v21, v18);
      swift_release();

      return sub_10003B6F8((uint64_t)v9, qword_10079C020);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100353D2C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(void *, uint64_t))(v1 + qword_10079BDB8);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    Swift::String v6 = (void *)sub_100119CD0();

    char v7 = v3(v6, a1);
    return v7 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100353DB4(uint64_t a1)
{
  *(void *)(v1 + qword_10079BDE8) = a1;
  swift_unknownObjectRelease();
  uint64_t v3 = *(void (**)(id, uint64_t))(v1 + qword_10079BDC0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    id v6 = (id)sub_100119CD0();
    swift_unknownObjectRetain();

    v3(v6, a1);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_100353E60(uint64_t a1)
{
  uint64_t v3 = *(void (**)(void *, uint64_t))(v1 + qword_10079BDD0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = (void *)result;
    id v6 = (void *)sub_100119CD0();

    v3(v6, a1);
    uint64_t result = sub_100351234();
    if (result)
    {
      sub_100154BA4();
      sub_10015537C();
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100353F28(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = swift_isaMask & *v1;
  uint64_t v5 = *(void *)(v4 + 0x50);
  uint64_t v58 = type metadata accessor for Optional();
  uint64_t v63 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  char v7 = (char *)v50 - v6;
  uint64_t v56 = *(void (***)(char *, uint64_t))(v5 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v50 - v9;
  uint64_t v64 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v4 + 88);
  uint64_t v65 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v59 = (char *)v50 - v12;
  uint64_t v13 = type metadata accessor for Optional();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v50 - v14;
  uint64_t v16 = *(void (**)(void *, void *))((char *)v2 + qword_10079BDD8);
  char v66 = (char *)v2 + qword_10079BDA8;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v18 = (void *)result;
    uint64_t v19 = (void *)sub_100119CD0();

    v16(v19, a1);
    if (sub_100351234())
    {
      sub_10015537C();
      swift_release();
    }
    if (![a1 localDragSession])
    {
LABEL_39:
      sub_100351910();
      *(void *)((char *)v2 + qword_10079BDE8) = 0;
      return swift_unknownObjectRelease();
    }
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v20 = (void *)result;
      uint64_t v21 = (void *)sub_100119CD0();

      uint64_t v22 = sub_100350AFC((uint64_t)v21);
      swift_unknownObjectRelease();

      if (v22)
      {
        uint64_t v23 = (uint64_t *)(v22 + qword_1007BBC60);
        swift_beginAccess();
        uint64_t v24 = *v23;
        BOOL v25 = (*v23 & 0xC000000000000001) == 0;
        uint64_t v51 = v2;
        v50[2] = a1;
        v50[1] = v22;
        if (v25)
        {
          uint64_t v28 = -1 << *(unsigned char *)(v24 + 32);
          uint64_t v29 = *(void *)(v24 + 56);
          uint64_t v53 = v24 + 56;
          uint64_t v26 = ~v28;
          uint64_t v30 = -v28;
          if (v30 < 64) {
            uint64_t v31 = ~(-1 << v30);
          }
          else {
            uint64_t v31 = -1;
          }
          unint64_t v27 = v31 & v29;
          uint64_t result = swift_bridgeObjectRetain();
          uint64_t v62 = 0;
        }
        else
        {
          swift_bridgeObjectRetain();
          __CocoaSet.makeIterator()();
          swift_getAssociatedConformanceWitness();
          Set.Iterator.init(_cocoa:)();
          uint64_t result = v67;
          uint64_t v53 = v68;
          uint64_t v26 = v69;
          uint64_t v62 = v70;
          unint64_t v27 = v71;
        }
        uint64_t v54 = result & 0x7FFFFFFFFFFFFFFFLL;
        uint64_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 56);
        v50[0] = v26;
        int64_t v52 = (unint64_t)(v26 + 64) >> 6;
        uint64_t v60 = v61 + 16;
        uint64_t v32 = (void (**)(uint64_t, char *, uint64_t))(v61 + 32);
        id v33 = (unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 6);
        int v34 = (void (**)(char *, char *, uint64_t))(v56 + 4);
        uint64_t v55 = v56 + 1;
        uint64_t v35 = (void (**)(uint64_t, uint64_t))(v61 + 8);
        uint64_t v56 = (void (**)(char *, uint64_t))(v63 + 8);
        char v57 = v34;
        uint64_t v36 = (uint64_t)v59;
        uint64_t v63 = result;
        if ((result & 0x8000000000000000) == 0) {
          goto LABEL_16;
        }
LABEL_31:
        if (__CocoaSet.Iterator.next()())
        {
          _forceBridgeFromObjectiveC<A>(_:_:)();
          swift_unknownObjectRelease();
          while (1)
          {
            (*v64)(v15, 0, 1, AssociatedTypeWitness);
            (*v32)(v36, v15, AssociatedTypeWitness);
            uint64_t result = swift_unknownObjectWeakLoadStrong();
            if (!result) {
              goto LABEL_41;
            }
            char v43 = (void *)result;
            sub_10011B0A8(v36, (uint64_t)v7);

            uint64_t v44 = v65;
            if ((*v33)(v7, 1, v65) == 1)
            {
              (*v35)(v36, AssociatedTypeWitness);
              (*v56)(v7, v58);
              uint64_t result = v63;
              if (v63 < 0) {
                goto LABEL_31;
              }
            }
            else
            {
              uint64_t v45 = v15;
              id v46 = v7;
              (*v57)(v10, v7, v44);
              uint64_t result = swift_unknownObjectWeakLoadStrong();
              if (!result) {
                goto LABEL_42;
              }
              uint64_t v47 = v44;
              uint64_t v48 = (void *)result;
              sub_10013C48C((uint64_t)v10, 100);

              (*v55)(v10, v47);
              long long v49 = v59;
              (*v35)((uint64_t)v59, AssociatedTypeWitness);
              char v7 = v46;
              uint64_t v15 = v45;
              uint64_t v36 = (uint64_t)v49;
              uint64_t result = v63;
              if (v63 < 0) {
                goto LABEL_31;
              }
            }
LABEL_16:
            if (v27)
            {
              unint64_t v37 = __clz(__rbit64(v27));
              v27 &= v27 - 1;
              unint64_t v38 = v37 | (v62 << 6);
            }
            else
            {
              int64_t v39 = v62 + 1;
              if (__OFADD__(v62, 1))
              {
                __break(1u);
LABEL_41:
                __break(1u);
LABEL_42:
                __break(1u);
                goto LABEL_43;
              }
              if (v39 >= v52) {
                break;
              }
              unint64_t v40 = *(void *)(v53 + 8 * v39);
              uint64_t v41 = v62 + 1;
              if (!v40)
              {
                uint64_t v41 = v62 + 2;
                if (v62 + 2 >= v52) {
                  break;
                }
                unint64_t v40 = *(void *)(v53 + 8 * v41);
                if (!v40)
                {
                  uint64_t v41 = v62 + 3;
                  if (v62 + 3 >= v52) {
                    break;
                  }
                  unint64_t v40 = *(void *)(v53 + 8 * v41);
                  if (!v40)
                  {
                    uint64_t v42 = v62 + 4;
                    while (v52 != v42)
                    {
                      unint64_t v40 = *(void *)(v53 + 8 * v42++);
                      if (v40)
                      {
                        uint64_t v41 = v42 - 1;
                        goto LABEL_29;
                      }
                    }
                    break;
                  }
                }
              }
LABEL_29:
              unint64_t v27 = (v40 - 1) & v40;
              unint64_t v38 = __clz(__rbit64(v40)) + (v41 << 6);
              uint64_t v62 = v41;
            }
            (*(void (**)(char *, unint64_t, uint64_t))(v61 + 16))(v15, *(void *)(result + 48) + *(void *)(v61 + 72) * v38, AssociatedTypeWitness);
          }
        }
        (*v64)(v15, 1, 1, AssociatedTypeWitness);
        sub_100051244();
        swift_release();
        uint64_t v2 = v51;
      }
      goto LABEL_39;
    }
  }
  else
  {
LABEL_43:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100354688(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)((swift_isaMask & *v2) + 0x50);
  uint64_t v5 = type metadata accessor for Optional();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - v7;
  uint64_t v9 = *(void *)(v4 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v14 = (void *)result;
    sub_10012BDB8(a1, (uint64_t)v8);

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return 0;
    }
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v8, v4);
    uint64_t v16 = *(uint64_t (**)(void *, char *))((char *)v2 + qword_10079BDE0);
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      char v17 = (void *)result;
      uint64_t v18 = (void *)sub_100119CD0();

      uint64_t v15 = v16(v18, v12);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v4);
      return v15;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_1003548D8()
{
}

uint64_t sub_100354908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10079C010);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100354970(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TTRITreeViewDropProposal(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003549CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100354A34(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100354A9C()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void **sub_100354B78(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64);
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = ((v9 + ((v8 + 8) & ~v8) + v12) & ~v12) + *(void *)(v11 + 64);
  int v14 = (*(_DWORD *)(v11 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000;
  uint64_t v15 = (char *)*a2;
  *a1 = *a2;
  if ((v12 | v8) > 7 || v14 != 0 || v13 > 0x18)
  {
    a1 = (void **)&v15[((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v18 = ~v8;
    uint64_t v19 = (char *)a1 + v8;
    uint64_t v20 = (char *)a2 + v8;
    uint64_t v21 = (unint64_t)(v19 + 8) & v18;
    uint64_t v22 = (unint64_t)(v20 + 8) & v18;
    uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    uint64_t v24 = v6;
    uint64_t v27 = v10;
    BOOL v25 = v15;
    v23(v21, v22, v24);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))((v21 + v9 + v12) & ~v12, (v22 + v9 + v12) & ~v12, v27);
  }
  return a1;
}

uint64_t sub_100354D40(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = v5 + 8;
  unint64_t v7 = ((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v8 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v9 = *(uint64_t (**)(unint64_t))(v8 + 8);
  unint64_t v10 = (v7 + *(void *)(v6 + 56) + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);

  return v9(v10);
}

void **sub_100354E08(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = ((unint64_t)a1 + v11 + 8) & ~v11;
  uint64_t v13 = ((unint64_t)a2 + v11 + 8) & ~v11;
  id v14 = v6;
  v9(v12, v13, v7);
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 16))((*(void *)(v10 + 48) + *(unsigned __int8 *)(v15 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (*(void *)(v10 + 48) + *(unsigned __int8 *)(v15 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

void **sub_100354EF8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10 + 24;
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)a1 + v12 + 8) & ~v12;
  uint64_t v14 = ((unint64_t)a2 + v12 + 8) & ~v12;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24))(v13, v14, v9);
  uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v15 + 24))((*(void *)(v11 + 40) + *(unsigned __int8 *)(v15 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80), (*(void *)(v11 + 40) + *(unsigned __int8 *)(v15 + 80) + v14) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
  return a1;
}

void *sub_100354FE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = v7 + 32;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 8) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 8) & ~v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v10, v11, v6);
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v12 + 32))((*(void *)(v8 + 32) + *(unsigned __int8 *)(v12 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v12 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  return a1;
}

void **sub_1003550C4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = ((unint64_t)a1 + v10 + 8) & ~v10;
  uint64_t v12 = ((unint64_t)a2 + v10 + 8) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, v7);
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v13 + 40))((*(void *)(v9 + 24) + *(unsigned __int8 *)(v13 + 80) + v11) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80), (*(void *)(v9 + 24) + *(unsigned __int8 *)(v13 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  return a1;
}

uint64_t sub_1003551AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for IndexPath() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  if (v7 <= v9) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v6 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v14) {
    goto LABEL_28;
  }
  uint64_t v15 = ((v11 + ((v10 + 8) & ~v10) + v12) & ~v12) + *(void *)(v8 + 64);
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v19 < 2)
    {
LABEL_28:
      if ((v13 & 0x80000000) != 0)
      {
        uint64_t v24 = ((unint64_t)a1 + v10 + 8) & ~v10;
        if (v7 == v14)
        {
          BOOL v25 = *(uint64_t (**)(uint64_t))(v6 + 48);
          return v25(v24);
        }
        else
        {
          uint64_t v26 = (v24 + v11 + v12) & ~v12;
          uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 48);
          return v27(v26, v9);
        }
      }
      else
      {
        uint64_t v23 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v23) = -1;
        }
        return (v23 + 1);
      }
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_28;
  }
LABEL_18:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (v15)
  {
    if (v15 <= 3) {
      int v21 = ((v11 + ((v10 + 8) & ~v10) + v12) & ~v12) + *(_DWORD *)(v8 + 64);
    }
    else {
      int v21 = 4;
    }
    switch(v21)
    {
      case 2:
        int v22 = *a1;
        break;
      case 3:
        int v22 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v22 = *(_DWORD *)a1;
        break;
      default:
        int v22 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v22 = 0;
  }
  return v14 + (v22 | v20) + 1;
}

void sub_100355450(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for IndexPath() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v11 = *(unsigned int *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v13 = *(void *)(v8 + 64);
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= v11) {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v15 = *(_DWORD *)(v8 + 84);
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  size_t v17 = ((v13 + ((v12 + 8) & ~v12) + v14) & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v16)
  {
    int v18 = 0;
  }
  else if (v17 <= 3)
  {
    unsigned int v21 = ((a3 - v16 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v21))
    {
      int v18 = 4;
    }
    else if (v21 >= 0x100)
    {
      int v18 = 2;
    }
    else
    {
      int v18 = v21 > 1;
    }
  }
  else
  {
    int v18 = 1;
  }
  if (v16 < a2)
  {
    unsigned int v19 = ~v16 + a2;
    if (v17 < 4)
    {
      int v20 = (v19 >> (8 * v17)) + 1;
      if (v17)
      {
        int v22 = v19 & ~(-1 << (8 * v17));
        bzero(a1, v17);
        if (v17 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v17 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v17);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v17] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v17] = v20;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v17] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x100355778);
    case 4:
      *(_DWORD *)&a1[v17] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if ((v15 & 0x80000000) != 0)
        {
          uint64_t v24 = (unint64_t)&a1[v12 + 8] & ~v12;
          if (v9 == v16)
          {
            BOOL v25 = *(void (**)(uint64_t, uint64_t))(v8 + 56);
            v25(v24, a2);
          }
          else
          {
            uint64_t v26 = (v24 + v13 + v14) & ~v14;
            uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 56);
            v27(v26, a2, v11);
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v23 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v23 = (a2 - 1);
          }
          *(void *)a1 = v23;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TTRITreeViewDropCoordinator.LocalDropItem()
{
  return sub_10003BC54();
}

void sub_1003557B8()
{
  sub_100007434();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Optional();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void **sub_10035589C(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(_DWORD *)(v7 + 80);
  if (*(_DWORD *)(v7 + 84)) {
    size_t v9 = *(void *)(v7 + 64);
  }
  else {
    size_t v9 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v12;
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v11 + 64) + 1;
  }
  uint64_t v15 = v14 + 7;
  int v16 = (v12 | *(_DWORD *)(v7 + 80)) & 0x100000;
  size_t v17 = (char *)*a2;
  *a1 = *a2;
  if ((v12 | v8) > 7
    || v16 != 0
    || ((v14 + 7 + ((v9 + ((v8 + 8) & ~v8) + v12) & ~(unint64_t)v12)) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    int v20 = (void **)&v17[((v12 | v8) & 0xF8 ^ 0x1F8) & ((v12 | v8) + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v33 = v10;
    int v34 = a1;
    uint64_t v21 = ~v8;
    size_t __n = v14;
    unint64_t v32 = ~(unint64_t)v12;
    int v22 = (char *)a1 + v8;
    uint64_t v23 = (char *)a2 + v8;
    uint64_t v24 = (void *)((unint64_t)(v22 + 8) & v21);
    BOOL v25 = (const void *)((unint64_t)(v23 + 8) & v21);
    uint64_t v26 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48);
    uint64_t v27 = v17;
    if (v26(v25, 1, v6))
    {
      memcpy(v24, v25, v9);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v24, v25, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(v24, 0, 1, v6);
    }
    uint64_t v28 = (void *)(((unint64_t)v24 + v9 + v13) & v32);
    uint64_t v29 = (const void *)(((unint64_t)v25 + v9 + v13) & v32);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v29, 1, v33))
    {
      memcpy(v28, v29, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v28, v29, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v33);
    }
    int v20 = v34;
    *(_OWORD *)(((unint64_t)v28 + v15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v29 + v15) & 0xFFFFFFFFFFFFFFF8);
  }
  return v20;
}

uint64_t sub_100355B60(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = ((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v6, v4);
  }
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v12 = *(void *)(v7 - 8);
  unint64_t v8 = *(void *)(v5 + 64) + v6;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v8;
  }
  unint64_t v9 = (v8 + *(unsigned __int8 *)(v12 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v9, 1, v7);
  if (!result)
  {
    uint64_t v11 = *(uint64_t (**)(unint64_t, uint64_t))(v12 + 8);
    return v11(v9, v7);
  }
  return result;
}

void **sub_100355CFC(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)(((unint64_t)a1 + v9 + 8) & ~v9);
  uint64_t v11 = (const void *)(((unint64_t)a2 + v9 + 8) & ~v9);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48);
  id v13 = v6;
  if (v12(v11, 1, v7))
  {
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
    if (v14) {
      size_t v16 = v15;
    }
    else {
      size_t v16 = v15 + 1;
    }
    memcpy(v10, v11, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    int v18 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v17 = v8 + 56;
    v18(v10, 0, 1, v7);
    int v14 = *(_DWORD *)(v17 + 28);
    size_t v15 = *(void *)(v17 + 8);
  }
  if (v14) {
    size_t v19 = v15;
  }
  else {
    size_t v19 = v15 + 1;
  }
  uint64_t v20 = *(void *)(a3 + 16);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v23 = v19 + v22;
  uint64_t v24 = (void *)(((unint64_t)v10 + v23) & ~v22);
  BOOL v25 = (const void *)(((unint64_t)v11 + v23) & ~v22);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v21 + 48))(v25, 1, v20))
  {
    int v26 = *(_DWORD *)(v21 + 84);
    uint64_t v27 = *(void *)(v21 + 64);
    if (v26) {
      size_t v28 = *(void *)(v21 + 64);
    }
    else {
      size_t v28 = v27 + 1;
    }
    memcpy(v24, v25, v28);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 16))(v24, v25, v20);
    uint64_t v30 = *(void (**)(void *, void, uint64_t, uint64_t))(v21 + 56);
    uint64_t v29 = v21 + 56;
    v30(v24, 0, 1, v20);
    int v26 = *(_DWORD *)(v29 + 28);
    uint64_t v27 = *(void *)(v29 + 8);
  }
  if (v26) {
    uint64_t v31 = v27;
  }
  else {
    uint64_t v31 = v27 + 1;
  }
  *(_OWORD *)(((unint64_t)v24 + v31 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v25 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void **sub_100355F5C(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (void *)(((unint64_t)a1 + v11 + 8) & ~v11);
  id v13 = (void *)(((unint64_t)a2 + v11 + 8) & ~v11);
  int v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v15 = v14(v12, 1, v9);
  int v16 = v14(v13, 1, v9);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 16))(v12, v13, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v12, 0, 1, v9);
      goto LABEL_12;
    }
    int v17 = *(_DWORD *)(v10 + 84);
    size_t v18 = *(void *)(v10 + 64);
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 24))(v12, v13, v9);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
    int v17 = *(_DWORD *)(v10 + 84);
    size_t v18 = *(void *)(v10 + 64);
  }
  if (v17) {
    size_t v19 = v18;
  }
  else {
    size_t v19 = v18 + 1;
  }
  memcpy(v12, v13, v19);
LABEL_12:
  uint64_t v20 = *(void *)(v10 + 64);
  if (!*(_DWORD *)(v10 + 84)) {
    ++v20;
  }
  uint64_t v21 = *(void *)(a3 + 16);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v20 + v23;
  BOOL v25 = (void *)(((unint64_t)v12 + v24) & ~v23);
  int v26 = (void *)(((unint64_t)v13 + v24) & ~v23);
  uint64_t v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v22 + 48);
  int v28 = v27(v25, 1, v21);
  int v29 = v27(v26, 1, v21);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 16))(v25, v26, v21);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v22 + 56))(v25, 0, 1, v21);
      goto LABEL_25;
    }
    int v30 = *(_DWORD *)(v22 + 84);
    size_t v31 = *(void *)(v22 + 64);
  }
  else
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v22 + 24))(v25, v26, v21);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v25, v21);
    int v30 = *(_DWORD *)(v22 + 84);
    size_t v31 = *(void *)(v22 + 64);
  }
  if (v30) {
    size_t v32 = v31;
  }
  else {
    size_t v32 = v31 + 1;
  }
  memcpy(v25, v26, v32);
LABEL_25:
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v33 = *(void *)(v22 + 64);
  }
  else {
    uint64_t v33 = *(void *)(v22 + 64) + 1;
  }
  int v34 = (void *)(((unint64_t)v25 + v33 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v35 = (void *)(((unint64_t)v26 + v33 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v34 = *v35;
  v34[1] = v35[1];
  return a1;
}

void *sub_1003562A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = type metadata accessor for IndexPath();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (void *)(((unint64_t)a1 + v8 + 8) & ~v8);
  uint64_t v10 = (const void *)(((unint64_t)a2 + v8 + 8) & ~v8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(v10, 1, v6))
  {
    int v11 = *(_DWORD *)(v7 + 84);
    size_t v12 = *(void *)(v7 + 64);
    if (v11) {
      size_t v13 = v12;
    }
    else {
      size_t v13 = v12 + 1;
    }
    memcpy(v9, v10, v13);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v9, v10, v6);
    int v15 = *(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56);
    uint64_t v14 = v7 + 56;
    v15(v9, 0, 1, v6);
    int v11 = *(_DWORD *)(v14 + 28);
    size_t v12 = *(void *)(v14 + 8);
  }
  if (v11) {
    size_t v16 = v12;
  }
  else {
    size_t v16 = v12 + 1;
  }
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = v16 + v19;
  uint64_t v21 = (void *)(((unint64_t)v9 + v20) & ~v19);
  uint64_t v22 = (const void *)(((unint64_t)v10 + v20) & ~v19);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v18 + 48))(v22, 1, v17))
  {
    int v23 = *(_DWORD *)(v18 + 84);
    uint64_t v24 = *(void *)(v18 + 64);
    if (v23) {
      size_t v25 = *(void *)(v18 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v18 + 32))(v21, v22, v17);
    uint64_t v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v18 + 56);
    uint64_t v26 = v18 + 56;
    v27(v21, 0, 1, v17);
    int v23 = *(_DWORD *)(v26 + 28);
    uint64_t v24 = *(void *)(v26 + 8);
  }
  if (v23) {
    uint64_t v28 = v24;
  }
  else {
    uint64_t v28 = v24 + 1;
  }
  *(_OWORD *)(((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void **sub_1003564EC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)(((unint64_t)a1 + v9 + 8) & ~v9);
  int v11 = (void *)(((unint64_t)a2 + v9 + 8) & ~v9);
  size_t v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v13 = v12(v10, 1, v7);
  int v14 = v12(v11, 1, v7);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v15 = *(_DWORD *)(v8 + 84);
    size_t v16 = *(void *)(v8 + 64);
  }
  if (v15) {
    size_t v17 = v16;
  }
  else {
    size_t v17 = v16 + 1;
  }
  memcpy(v10, v11, v17);
LABEL_12:
  uint64_t v18 = *(void *)(v8 + 64);
  if (!*(_DWORD *)(v8 + 84)) {
    ++v18;
  }
  uint64_t v19 = *(void *)(a3 + 16);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = v18 + v21;
  int v23 = (void *)(((unint64_t)v10 + v22) & ~v21);
  uint64_t v24 = (void *)(((unint64_t)v11 + v22) & ~v21);
  size_t v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  int v26 = v25(v23, 1, v19);
  int v27 = v25(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v23, v24, v19);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      goto LABEL_25;
    }
    int v28 = *(_DWORD *)(v20 + 84);
    size_t v29 = *(void *)(v20 + 64);
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v23, v24, v19);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v23, v19);
    int v28 = *(_DWORD *)(v20 + 84);
    size_t v29 = *(void *)(v20 + 64);
  }
  if (v28) {
    size_t v30 = v29;
  }
  else {
    size_t v30 = v29 + 1;
  }
  memcpy(v23, v24, v30);
LABEL_25:
  if (*(_DWORD *)(v20 + 84)) {
    uint64_t v31 = *(void *)(v20 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v20 + 64) + 1;
  }
  size_t v32 = (void *)(((unint64_t)v23 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = (void *)(((unint64_t)v24 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v32 = *v33;
  v32[1] = v33[1];
  return a1;
}

uint64_t sub_10035682C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v7 = v6;
  unsigned int v8 = *(_DWORD *)(v6 + 84);
  if (v8) {
    unsigned int v9 = v8 - 1;
  }
  else {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(unsigned int *)(v10 + 84);
  unsigned int v13 = v12 - 1;
  if (!v12) {
    unsigned int v13 = 0;
  }
  if (v9 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v9;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(void *)(v6 + 64);
  if (v8) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = v17 + 1;
  }
  uint64_t v19 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = 7;
  if (!v12) {
    uint64_t v21 = 8;
  }
  if (!a2) {
    return 0;
  }
  if (v15 < a2)
  {
    unint64_t v22 = ((v21 + v20 + ((v18 + ((v16 + 8) & ~v16) + v19) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v22 & 0xFFFFFFF8) != 0) {
      unsigned int v23 = 2;
    }
    else {
      unsigned int v23 = a2 - v15 + 1;
    }
    if (v23 >= 0x10000) {
      unsigned int v24 = 4;
    }
    else {
      unsigned int v24 = 2;
    }
    if (v23 < 0x100) {
      unsigned int v24 = 1;
    }
    if (v23 >= 2) {
      uint64_t v25 = v24;
    }
    else {
      uint64_t v25 = 0;
    }
    switch(v25)
    {
      case 1:
        int v26 = *((unsigned __int8 *)a1 + v22);
        if (!*((unsigned char *)a1 + v22)) {
          break;
        }
        goto LABEL_34;
      case 2:
        int v26 = *(unsigned __int16 *)((char *)a1 + v22);
        if (*(_WORD *)((char *)a1 + v22)) {
          goto LABEL_34;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100356A98);
      case 4:
        int v26 = *(_DWORD *)((char *)a1 + v22);
        if (!v26) {
          break;
        }
LABEL_34:
        int v27 = v26 - 1;
        if ((v22 & 0xFFFFFFF8) != 0)
        {
          int v27 = 0;
          int v28 = *a1;
        }
        else
        {
          int v28 = 0;
        }
        return v15 + (v28 | v27) + 1;
      default:
        break;
    }
  }
  if ((v14 & 0x80000000) != 0)
  {
    uint64_t v31 = ((unint64_t)a1 + v16 + 8) & ~v16;
    if (v9 == v15)
    {
      if (v8 >= 2)
      {
        unsigned int v32 = (*(uint64_t (**)(uint64_t))(v7 + 48))(v31);
        goto LABEL_49;
      }
    }
    else if (v12 >= 2)
    {
      unsigned int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))((v31 + v18 + v19) & ~v19, v12);
LABEL_49:
      if (v32 >= 2) {
        return v32 - 1;
      }
      else {
        return 0;
      }
    }
    return 0;
  }
  uint64_t v29 = *(void *)a1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v29) = -1;
  }
  return (v29 + 1);
}

void sub_100356AAC(_DWORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  uint64_t v12 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  uint64_t v14 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v17 = *(void *)(v12 + 64);
  unsigned int v18 = v13 - 1;
  if (!v13) {
    unsigned int v18 = 0;
  }
  if (v11 <= v18) {
    unsigned int v19 = v18;
  }
  else {
    unsigned int v19 = v11;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (!v10) {
    ++v15;
  }
  uint64_t v21 = 7;
  if (!v13) {
    uint64_t v21 = 8;
  }
  size_t v22 = ((v21 + v17 + ((v15 + ((v14 + 8) & ~v14) + v16) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v21 + v17 + ((v15 + ((v14 + 8) & ~v14) + v16) & ~v16)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v23 = a3 - v20 + 1;
  }
  else {
    unsigned int v23 = 2;
  }
  if (v23 >= 0x10000) {
    int v24 = 4;
  }
  else {
    int v24 = 2;
  }
  if (v23 < 0x100) {
    int v24 = 1;
  }
  if (v23 >= 2) {
    unsigned int v25 = v24;
  }
  else {
    unsigned int v25 = 0;
  }
  if (v20 < a3) {
    uint64_t v26 = v25;
  }
  else {
    uint64_t v26 = 0;
  }
  if (a2 > v20)
  {
    if (v22) {
      int v27 = 1;
    }
    else {
      int v27 = a2 - v20;
    }
    if (v22)
    {
      int v28 = ~v20 + a2;
      bzero(a1, v22);
      *a1 = v28;
    }
    switch(v26)
    {
      case 1:
        *((unsigned char *)a1 + v22) = v27;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v22) = v27;
        return;
      case 3:
        goto LABEL_62;
      case 4:
        *(_DWORD *)((char *)a1 + v22) = v27;
        return;
      default:
        return;
    }
  }
  switch(v26)
  {
    case 1:
      *((unsigned char *)a1 + v22) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 2:
      *(_WORD *)((char *)a1 + v22) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_45;
    case 3:
LABEL_62:
      __break(1u);
      JUMPOUT(0x100356D90);
    case 4:
      *(_DWORD *)((char *)a1 + v22) = 0;
      goto LABEL_44;
    default:
LABEL_44:
      if (a2)
      {
LABEL_45:
        if ((v19 & 0x80000000) != 0)
        {
          uint64_t v30 = ((unint64_t)a1 + v14 + 8) & ~v14;
          if (v11 == v20)
          {
            if (v10 >= 2)
            {
              uint64_t v31 = *(void (**)(uint64_t, void))(v9 + 56);
              v31(v30, a2 + 1);
            }
          }
          else if (v13 >= 2)
          {
            uint64_t v32 = (v30 + v15 + v16) & ~v16;
            uint64_t v33 = *(void (**)(uint64_t, void, uint64_t))(v12 + 56);
            v33(v32, a2 + 1, v13);
          }
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v29 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v29 = a2 - 1;
          }
          *(void *)a1 = v29;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TTRITreeViewDropCoordinator.DropItem()
{
  return sub_10003BC54();
}

uint64_t sub_100356DD0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v5 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    swift_getTupleTypeLayout2();
    uint64_t v7 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_100356EB4(void *__dst, unsigned __int8 *__src, uint64_t a3)
{
  char v4 = __dst;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v8 = v7 + 9;
  int v9 = *(_DWORD *)(v5 + 80);
  if ((v9 & 0x1000F8) != 0 || v8 > 0x18)
  {
    uint64_t v11 = *(void *)__src;
    *char v4 = *(void *)__src;
    char v4 = (void *)(v11 + ((unsigned __int16)((v9 & 0xF8) + 23) & (unsigned __int16)~(v9 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unint64_t v12 = v7 + 8;
    uint64_t v13 = (v7 + 8) & 0xFFFFFFF8;
    unsigned int v14 = __src[v7 + 8];
    if (v13) {
      BOOL v15 = v14 >= 3;
    }
    else {
      BOOL v15 = 0;
    }
    if (v15) {
      unsigned int v14 = *(_DWORD *)__src + 3;
    }
    if (v14 == 2)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v4 + v12) = 2;
    }
    else if (v14 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v4 + v12) = 1;
    }
    else if (v14)
    {
      memcpy(__dst, __src, v8);
    }
    else
    {
      (*(void (**)(void *, unsigned __int8 *))(v5 + 16))(__dst, __src);
      *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v4 + v12) = 0;
    }
  }
  return v4;
}

_DWORD *sub_100357080(_DWORD *result, uint64_t a2)
{
  unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v3 = v2 & 0xFFFFFFF8;
  unsigned int v4 = *((unsigned __int8 *)result + v2);
  if (v4 >= 3 && v3 != 0) {
    unsigned int v4 = *result + 3;
  }
  if (v4 <= 2) {
    return (_DWORD *)(*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  return result;
}

unsigned char *sub_10035710C(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unsigned int v9 = __src[v7 + 8];
  if (v9 >= 3 && ((v7 + 8) & 0xFFFFFFF8) != 0) {
    unsigned int v9 = *(_DWORD *)__src + 3;
  }
  if (v9 == 2)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v8] = 2;
  }
  else if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v8] = 1;
  }
  else if (v9)
  {
    memcpy(__dst, __src, v7 + 9);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 16))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v8] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100357298(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v9 = v8 + 8;
    uint64_t v10 = (v8 + 8) & 0xFFFFFFF8;
    unsigned int v11 = __dst[v8 + 8];
    if (v11 >= 3 && v10 != 0) {
      unsigned int v11 = *(_DWORD *)__dst + 3;
    }
    if (v11 <= 2) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v9];
    if (v10) {
      BOOL v14 = v13 >= 3;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14) {
      unsigned int v13 = *(_DWORD *)__src + 3;
    }
    if (v13 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v9] = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v9] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v8 + 9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v9] = 0;
    }
  }
  return __dst;
}

unsigned char *sub_100357484(unsigned char *__dst, unsigned __int8 *__src, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  unint64_t v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = v7 + 8;
  unsigned int v9 = __src[v7 + 8];
  if (v9 >= 3 && ((v7 + 8) & 0xFFFFFFF8) != 0) {
    unsigned int v9 = *(_DWORD *)__src + 3;
  }
  if (v9 == 2)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v8] = 2;
  }
  else if (v9 == 1)
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v8] = 1;
  }
  else if (v9)
  {
    memcpy(__dst, __src, v7 + 9);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned __int8 *))(v5 + 32))(__dst, __src);
    *(void *)((unint64_t)&__dst[v6 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
    __dst[v8] = 0;
  }
  return __dst;
}

unsigned __int8 *sub_100357610(unsigned __int8 *__dst, unsigned __int8 *__src, uint64_t a3)
{
  if (__dst != __src)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    unint64_t v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v9 = v8 + 8;
    uint64_t v10 = (v8 + 8) & 0xFFFFFFF8;
    unsigned int v11 = __dst[v8 + 8];
    if (v11 >= 3 && v10 != 0) {
      unsigned int v11 = *(_DWORD *)__dst + 3;
    }
    if (v11 <= 2) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(__dst, v5);
    }
    unsigned int v13 = __src[v9];
    if (v10) {
      BOOL v14 = v13 >= 3;
    }
    else {
      BOOL v14 = 0;
    }
    if (v14) {
      unsigned int v13 = *(_DWORD *)__src + 3;
    }
    if (v13 == 2)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v9] = 2;
    }
    else if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v9] = 1;
    }
    else if (v13)
    {
      memcpy(__dst, __src, v8 + 9);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(__dst, __src, v5);
      *(void *)((unint64_t)&__dst[v7 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&__src[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
      __dst[v9] = 0;
    }
  }
  return __dst;
}

uint64_t sub_1003577FC(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  if (!a2) {
    return 0;
  }
  unint64_t v3 = (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  if (a2 >= 0xFD)
  {
    unint64_t v4 = v3 + 9;
    if ((v3 + 9) < 4) {
      unsigned int v5 = ((a2 + 3) >> (8 * (v3 + 9))) + 1;
    }
    else {
      unsigned int v5 = 2;
    }
    if (v5 >= 0x10000) {
      unsigned int v6 = 4;
    }
    else {
      unsigned int v6 = 2;
    }
    if (v5 < 0x100) {
      unsigned int v6 = 1;
    }
    if (v5 >= 2) {
      uint64_t v7 = v6;
    }
    else {
      uint64_t v7 = 0;
    }
    switch(v7)
    {
      case 1:
        int v8 = a1[v4];
        if (!a1[v4]) {
          break;
        }
        goto LABEL_19;
      case 2:
        int v8 = *(unsigned __int16 *)&a1[v4];
        if (*(_WORD *)&a1[v4]) {
          goto LABEL_19;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1003578F0);
      case 4:
        int v8 = *(_DWORD *)&a1[v4];
        if (!v8) {
          break;
        }
LABEL_19:
        int v10 = (v8 - 1) << (8 * (v3 + 9));
        if (v4 >= 4) {
          int v10 = 0;
        }
        if (v4 == 1) {
          int v11 = *a1;
        }
        else {
          int v11 = *(_DWORD *)a1;
        }
        return (v11 | v10) + 253;
      default:
        break;
    }
  }
  unsigned int v12 = a1[v3 + 8];
  if (v12 >= 4) {
    return (v12 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_100357904(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = (*(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  size_t v6 = v5 + 9;
  char v7 = 8 * (v5 + 9);
  if (a3 < 0xFD)
  {
    int v10 = 0;
    if (a2 > 0xFC) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v6 <= 3) {
      unsigned int v8 = ((a3 + 3) >> v7) + 1;
    }
    else {
      unsigned int v8 = 2;
    }
    if (v8 >= 0x10000) {
      int v9 = 4;
    }
    else {
      int v9 = 2;
    }
    if (v8 < 0x100) {
      int v9 = 1;
    }
    if (v8 >= 2) {
      int v10 = v9;
    }
    else {
      int v10 = 0;
    }
    if (a2 > 0xFC)
    {
LABEL_14:
      unsigned int v11 = (a2 - 253) >> v7;
      if (v6 < 4) {
        int v12 = v11 + 1;
      }
      else {
        int v12 = 1;
      }
      if (v6 >= 4) {
        unsigned int v13 = a2 - 253;
      }
      else {
        unsigned int v13 = (a2 + 3);
      }
      bzero(a1, v6);
      if (v6 == 1) {
        *a1 = v13;
      }
      else {
        *(_DWORD *)a1 = v13;
      }
      switch(v10)
      {
        case 1:
          a1[v6] = v12;
          return;
        case 2:
          *(_WORD *)&a1[v6] = v12;
          return;
        case 3:
          goto LABEL_37;
        case 4:
          *(_DWORD *)&a1[v6] = v12;
          return;
        default:
          return;
      }
    }
  }
  unint64_t v14 = v5 + 8;
  switch(v10)
  {
    case 1:
      a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    case 2:
      *(_WORD *)&a1[v6] = 0;
      goto LABEL_30;
    case 3:
LABEL_37:
      __break(1u);
      JUMPOUT(0x100357A74);
    case 4:
      *(_DWORD *)&a1[v6] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_31;
    default:
LABEL_30:
      if (a2) {
LABEL_31:
      }
        a1[v14] = -(char)a2;
      return;
  }
}

uint64_t sub_100357A9C(_DWORD *a1, uint64_t a2)
{
  unint64_t v2 = ((*(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v3 = v2 & 0xFFFFFFF8;
  uint64_t v4 = *((unsigned __int8 *)a1 + v2);
  if (v4 >= 3 && v3 != 0) {
    return (*a1 + 3);
  }
  return v4;
}

void sub_100357AE4(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  size_t v4 = ((*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    a1[v4] = 3;
    bzero(a1, v4);
    *(_DWORD *)a1 = v5;
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for TTRITreeViewDropDestination()
{
  return sub_10003BC54();
}

uint64_t sub_100357B6C(uint64_t a1)
{
  uint64_t v6 = a1;
  unint64_t v7 = sub_100357BDC();
  unint64_t v2 = sub_1000394A8(v5);
  sub_10005FCB8(v1, (uint64_t)v2);
  sub_100038D28(v5, v6);
  uint64_t v3 = TTRRemindersListViewModel.Item.debugDescription.getter();
  sub_100038CD8((uint64_t)v5);
  return v3;
}

unint64_t sub_100357BDC()
{
  unint64_t result = qword_10079C1B0;
  if (!qword_10079C1B0)
  {
    type metadata accessor for TTRRemindersListViewModel.Item();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10079C1B0);
  }
  return result;
}

char *sub_100357C34(uint64_t *a1, void **a2, void *a3, uint64_t a4)
{
  long long v88 = a1;
  uint64_t v89 = a4;
  id v87 = a3;
  uint64_t v5 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v6 = __chkstk_darwin(v5 - 8);
  uint64_t v81 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v79 = (char *)&v78 - v8;
  uint64_t v84 = type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder(0);
  __chkstk_darwin(v84);
  uint64_t v90 = (uint64_t)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v83);
  unsigned int v11 = (char *)&v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = (void *)type metadata accessor for REMRemindersListDataView.SortingStyle();
  uint64_t v13 = *(v12 - 1);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  unsigned int v18 = (char *)&v78 - v17;
  uint64_t v19 = type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters(0);
  __chkstk_darwin(v22 - 8);
  int v24 = (void **)((char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v82 = type metadata accessor for TTRIRemindersListAssembly.CommonParameters;
  sub_10035A878((uint64_t)a2, (uint64_t)v24, type metadata accessor for TTRIRemindersListAssembly.CommonParameters);
  static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
  sub_100055D48(v24, (uint64_t)v21, 0, (uint64_t)v94);
  TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
  unsigned int v25 = *a2;
  uint64_t v26 = *(void (**)(char *, char *, void *))(v13 + 16);
  uint64_t v85 = v18;
  v26(v16, v18, v12);
  type metadata accessor for TTRShowGroupWithSectionsDataModelSource();
  swift_allocObject();
  id v27 = v87;
  id v28 = v25;
  uint64_t v29 = TTRShowGroupWithSectionsDataModelSource.init(group:store:countCompleted:sortingStyle:canChangeSortingStyle:)();
  id v30 = v94[0];
  uint64_t v86 = v13;
  id v87 = v12;
  (*(void (**)(char *, void, void *))(v13 + 104))(v11, enum case for REMRemindersListDataView.SortingStyle.default(_:), v12);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for TTRShowGroupViewModelSource();
  uint64_t v31 = (uint64_t *)swift_allocObject();
  id v32 = v30;
  uint64_t v33 = sub_10035A070(v29, v32, (uint64_t)v11, 0, v31);

  sub_10035A878((uint64_t)a2, (uint64_t)v24, v82);
  sub_100057134((uint64_t)v94, (uint64_t)v91);
  swift_retain();
  uint64_t v80 = v33;
  sub_100056B24((uint64_t)v24, (uint64_t)v91, v33, (uint64_t)&off_1007512D8, v90);
  uint64_t v34 = (uint64_t)v79;
  sub_100056CAC((uint64_t)v79);
  char v82 = (uint64_t (*)(void))type metadata accessor for TTRIShowGroupPresenter();
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = (uint64_t *)(v35 + OBJC_IVAR____TtC9Reminders22TTRIShowGroupPresenter_dataModelSource);
  uint64_t *v36 = v29;
  v36[1] = (uint64_t)&protocol witness table for TTRShowGroupWithSectionsDataModelSource;
  uint64_t v37 = (uint64_t)v81;
  sub_10035A878(v34, (uint64_t)v81, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v83 = v29;
  swift_retain();
  uint64_t v38 = v89;
  swift_unknownObjectRetain();
  uint64_t v39 = sub_1003585DC(v37, v38, v35);
  sub_1002F21D4(v34, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v40 = *(void *)(v39 + 144);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 104);
  swift_retain();
  if (v42(ObjectType, v40))
  {
    uint64_t v44 = v43;
    uint64_t v45 = swift_getObjectType();
    LOBYTE(v44) = (*(uint64_t (**)(uint64_t, uint64_t))(v44 + 16))(v45, v44);
    swift_release();
    swift_unknownObjectRelease();
    char v46 = v44 & 1;
  }
  else
  {
    swift_release();
    char v46 = 0;
  }
  uint64_t v47 = sub_1001D0C84(v46, v39);
  uint64_t v79 = v48;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v78 = swift_getObjectType();
  *(void *)(v39 + 24) = *(void *)(v52 + 8);
  uint64_t v89 = v50;
  swift_unknownObjectWeakAssign();
  uint64_t v53 = *(void *)(v39 + 144);
  uint64_t v54 = swift_getObjectType();
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(v53 + 104);
  swift_retain_n();
  uint64_t v56 = v47;
  uint64_t v57 = v55(v54, v53);
  char v59 = v57;
  if (v57)
  {
    uint64_t v60 = v58;
    uint64_t v61 = swift_getObjectType();
    char v62 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 16))(v61, v60);
    swift_release();
    swift_unknownObjectRelease();
    char v59 = v62 & 1;
  }
  else
  {
    swift_release();
  }
  uint64_t v63 = (char *)objc_allocWithZone((Class)type metadata accessor for TTRIShowRemindersViewController());
  uint64_t v81 = v56;
  id v64 = sub_10035A41C(v39, v56, (uint64_t)v79, v59, 0, 1, 0, v63);
  swift_release();

  uint64_t v65 = *(void (**)(id, _UNKNOWN **, uint64_t, uint64_t))(v52 + 32);
  uint64_t v79 = (char *)v64;
  v65(v64, &off_1007464D0, v78, v52);
  char v66 = (char *)v94[0] + direct field offset for TTRRemindersListInteractor.delegate;
  swift_beginAccess();
  *((void *)v66 + 1) = &off_10073CC30;
  swift_unknownObjectWeakAssign();
  uint64_t v67 = (char *)v94[0] + direct field offset for TTRRemindersListInteractor.optimisticUpdatesDelegate;
  swift_beginAccess();
  *((void *)v67 + 1) = &protocol witness table for TTRShowGroupWithSectionsDataModelSource;
  uint64_t v68 = v83;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectWeakAssign();
  uint64_t v69 = *(void (**)(uint64_t, _UNKNOWN **))(*(void *)v68 + 408);
  uint64_t v70 = swift_retain();
  v69(v70, &off_100739AB0);
  swift_retain();
  uint64_t v71 = swift_retain();
  sub_1005B1F9C(v71, (uint64_t)&off_10073CB60);
  swift_release();
  swift_release();
  uint64_t v72 = v90;
  *(void *)(*(void *)(v90 + *(int *)(v84 + 28)) + 24) = &off_10073CD00;
  swift_unknownObjectWeakAssign();
  sub_100038DC0((uint64_t)&v95, (uint64_t)v91);
  long long v92 = v96;
  long long v93 = v97;
  *(void *)(v96 + 40) = &off_10073CAE0;
  swift_unknownObjectWeakAssign();
  sub_100038CD8((uint64_t)v91);
  sub_100038DC0((uint64_t)&v98, (uint64_t)v91);
  uint64_t v73 = *((void *)&v99 + 1);
  long long v92 = v99;
  uint64_t v74 = swift_getObjectType();
  uint64_t v75 = *(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t))(v73 + 48);
  swift_retain();
  swift_unknownObjectRetain();
  v75(v39, &off_10073CA90, v74, v73);
  swift_unknownObjectRelease();
  sub_100038CD8((uint64_t)v91);
  long long v76 = v88;
  v88[3] = (uint64_t)v82;
  v76[4] = (uint64_t)&off_100736D78;
  *long long v76 = v39;
  swift_release();
  swift_release();

  swift_unknownObjectRelease();
  sub_1002F21D4(v72, type metadata accessor for TTRIRemindersListAssembly.PresenterConfigurationBuilder);
  (*(void (**)(char *, id))(v86 + 8))(v85, v87);
  sub_100057B44(v94);
  return v79;
}

id TTRIShowGroupAssembly.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowGroupAssembly();
  return [super init];
}

uint64_t type metadata accessor for TTRIShowGroupAssembly()
{
  return self;
}

id TTRIShowGroupAssembly.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIShowGroupAssembly();
  [super dealloc];
}

uint64_t sub_1003585DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a2;
  uint64_t v5 = (_OWORD *)(a3 + 264);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(a3 + 176) = xmmword_10066EDA0;
  uint64_t v61 = a3 + 464;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  *(_OWORD *)(a3 + 504) = 0u;
  uint64_t v9 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 520) = 0;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  uint64_t v11 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  uint64_t v60 = sub_10003B754((uint64_t *)&unk_100791D38);
  swift_allocObject();
  *(void *)(a3 + v11) = CurrentValueSubject.init(_:)();
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  long long v13 = *(_OWORD *)(a1 + 16);
  long long v51 = *(_OWORD *)a1;
  long long v52 = v13;
  *(_OWORD *)(a3 + 72) = v51;
  *(_OWORD *)(a3 + 88) = v13;
  long long v53 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v53;
  sub_100038DC0(a1 + 216, (uint64_t)&v65);
  long long v62 = *(_OWORD *)(a1 + 248);
  sub_100038E1C(&v65, (_OWORD *)(a3 + 280));
  uint64_t v58 = v5;
  uint64_t v5[3] = v62;
  sub_100038DC0(a1 + 264, (uint64_t)&v65);
  uint64_t v14 = *(void *)(a1 + 296);
  uint64_t v15 = *(void *)(a1 + 304);
  sub_100038E1C(&v65, (_OWORD *)(a3 + 328));
  *(void *)(a3 + 360) = v14;
  *(void *)(a3 + 368) = v15;
  sub_1000145EC(a1 + 120, a3 + 192);
  long long v45 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v45;
  long long v16 = *(_OWORD *)(a1 + 384);
  long long v46 = *(_OWORD *)(a1 + 368);
  long long v48 = v16;
  *(_OWORD *)(a3 + 248) = v46;
  *uint64_t v5 = v16;
  uint64_t v17 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v18 = *(int *)(v17 + 104);
  uint64_t v19 = v17;
  uint64_t v57 = v17;
  *(unsigned char *)(a3 + 168) = *(unsigned char *)(a1 + v18);
  *(void *)(a3 + 160) = &off_100743668;
  swift_unknownObjectWeakAssign();
  uint64_t v20 = *(void *)a1;
  uint64_t v56 = *(void *)(a1 + 8);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v55 = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v22 = *(void **)(a1 + 56);
  uint64_t v47 = *(void *)(a1 + 104);
  uint64_t v54 = *(void *)(a1 + 112);
  sub_1000145EC(a1 + 160, (uint64_t)&v65);
  uint64_t v24 = *(void *)(a1 + 200);
  uint64_t v50 = *(void *)(a1 + 208);
  uint64_t v25 = *(void *)(a1 + 312);
  uint64_t v49 = *(void *)(a1 + 320);
  sub_1000145EC(a1 + 328, (uint64_t)v64);
  sub_1000145EC(a1 + *(int *)(v19 + 96), (uint64_t)v63);
  type metadata accessor for TTRRemindersListPresenterCapability();
  v44[1] = swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v26 = v22;
  uint64_t v27 = v47;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v44[0] = v25;
  swift_unknownObjectRetain();
  id v28 = sub_1002322E4(v20, v56, v21, v55, v23, v26, v27, v54, (uint64_t)&v65, v24, v50, v25, v49, (uint64_t)v64, (uint64_t)v63);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(a3 + 104) = v28;
  *(unsigned char *)(a3 + 112) = *(unsigned char *)(a1 + 80);
  uint64_t v29 = *(void *)(a1 + 96);
  *(void *)(a3 + 120) = *(void *)(a1 + 88);
  *(void *)(a3 + 128) = v29;
  uint64_t v30 = v57;
  sub_1000145EC(a1 + *(int *)(v57 + 100), a3 + 32);
  v28[3] = &off_10073CC00;
  swift_unknownObjectWeakAssign();
  uint64_t v31 = self;
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = [v31 defaultCenter];
  long long v65 = 0u;
  long long v66 = 0u;
  id v33 = [self mainQueue];
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v34 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();

  swift_release();
  sub_10003B6F8((uint64_t)&v65, &qword_100788D60);
  swift_release();
  *(void *)(a3 + 512) = v34;
  swift_release();
  uint64_t v35 = a1 + *(int *)(v30 + 92);
  uint64_t v36 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess();
  sub_1001DF0EC(v35, v36);
  swift_endAccess();
  uint64_t v37 = *((void *)v58 + 6);
  swift_beginAccess();
  uint64_t v38 = *sub_100038D28((void *)(a3 + 32), *(void *)(a3 + 56));
  *((void *)&v66 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  uint64_t v67 = &off_1007509A8;
  *(void *)&long long v65 = v38;
  *(void *)(v37 + 120) = v28;
  swift_retain();
  swift_release();
  sub_1000145EC((uint64_t)&v65, (uint64_t)v64);
  swift_retain();
  sub_1005DB0B0((uint64_t)v64);
  sub_100038CD8((uint64_t)&v65);
  *(void *)&long long v65 = *(void *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  swift_allocObject();
  swift_weakInit();
  sub_10035A7B4();
  swift_retain();
  uint64_t v39 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v39;
  swift_release();
  uint64_t v40 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  *((void *)&v66 + 1) = type metadata accessor for TTRUserDefaults();
  uint64_t v67 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  id v41 = v40;
  swift_release();
  swift_release();
  *(void *)&long long v65 = v41;
  sub_1002F21D4(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v42 = v61;
  swift_beginAccess();
  sub_10035A810((uint64_t)&v65, v42);
  swift_endAccess();
  return a3;
}

uint64_t sub_100358DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a2;
  uint64_t v5 = (_OWORD *)(a3 + 264);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(a3 + 176) = xmmword_10066EDA0;
  uint64_t v61 = a3 + 464;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  *(_OWORD *)(a3 + 504) = 0u;
  uint64_t v9 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 520) = 0;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  uint64_t v11 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  uint64_t v60 = sub_10003B754((uint64_t *)&unk_100791D38);
  swift_allocObject();
  *(void *)(a3 + v11) = CurrentValueSubject.init(_:)();
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  long long v13 = *(_OWORD *)(a1 + 16);
  long long v51 = *(_OWORD *)a1;
  long long v52 = v13;
  *(_OWORD *)(a3 + 72) = v51;
  *(_OWORD *)(a3 + 88) = v13;
  long long v53 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v53;
  sub_100038DC0(a1 + 216, (uint64_t)&v65);
  long long v62 = *(_OWORD *)(a1 + 248);
  sub_100038E1C(&v65, (_OWORD *)(a3 + 280));
  uint64_t v58 = v5;
  uint64_t v5[3] = v62;
  sub_100038DC0(a1 + 264, (uint64_t)&v65);
  uint64_t v14 = *(void *)(a1 + 296);
  uint64_t v15 = *(void *)(a1 + 304);
  sub_100038E1C(&v65, (_OWORD *)(a3 + 328));
  *(void *)(a3 + 360) = v14;
  *(void *)(a3 + 368) = v15;
  sub_1000145EC(a1 + 120, a3 + 192);
  long long v45 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v45;
  long long v16 = *(_OWORD *)(a1 + 384);
  long long v46 = *(_OWORD *)(a1 + 368);
  long long v48 = v16;
  *(_OWORD *)(a3 + 248) = v46;
  *uint64_t v5 = v16;
  uint64_t v17 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v18 = *(int *)(v17 + 104);
  uint64_t v19 = v17;
  uint64_t v57 = v17;
  *(unsigned char *)(a3 + 168) = *(unsigned char *)(a1 + v18);
  *(void *)(a3 + 160) = &off_100740010;
  swift_unknownObjectWeakAssign();
  uint64_t v20 = *(void *)a1;
  uint64_t v56 = *(void *)(a1 + 8);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v55 = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v22 = *(void **)(a1 + 56);
  uint64_t v47 = *(void *)(a1 + 104);
  uint64_t v54 = *(void *)(a1 + 112);
  sub_1000145EC(a1 + 160, (uint64_t)&v65);
  uint64_t v24 = *(void *)(a1 + 200);
  uint64_t v50 = *(void *)(a1 + 208);
  uint64_t v25 = *(void *)(a1 + 312);
  uint64_t v49 = *(void *)(a1 + 320);
  sub_1000145EC(a1 + 328, (uint64_t)v64);
  sub_1000145EC(a1 + *(int *)(v19 + 96), (uint64_t)v63);
  type metadata accessor for TTRRemindersListPresenterCapability();
  v44[1] = swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v26 = v22;
  uint64_t v27 = v47;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v44[0] = v25;
  swift_unknownObjectRetain();
  id v28 = sub_1002322E4(v20, v56, v21, v55, v23, v26, v27, v54, (uint64_t)&v65, v24, v50, v25, v49, (uint64_t)v64, (uint64_t)v63);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(a3 + 104) = v28;
  *(unsigned char *)(a3 + 112) = *(unsigned char *)(a1 + 80);
  uint64_t v29 = *(void *)(a1 + 96);
  *(void *)(a3 + 120) = *(void *)(a1 + 88);
  *(void *)(a3 + 128) = v29;
  uint64_t v30 = v57;
  sub_1000145EC(a1 + *(int *)(v57 + 100), a3 + 32);
  v28[3] = &off_10073CC00;
  swift_unknownObjectWeakAssign();
  uint64_t v31 = self;
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = [v31 defaultCenter];
  long long v65 = 0u;
  long long v66 = 0u;
  id v33 = [self mainQueue];
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v34 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();

  swift_release();
  sub_10003B6F8((uint64_t)&v65, &qword_100788D60);
  swift_release();
  *(void *)(a3 + 512) = v34;
  swift_release();
  uint64_t v35 = a1 + *(int *)(v30 + 92);
  uint64_t v36 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess();
  sub_1001DF0EC(v35, v36);
  swift_endAccess();
  uint64_t v37 = *((void *)v58 + 6);
  swift_beginAccess();
  uint64_t v38 = *sub_100038D28((void *)(a3 + 32), *(void *)(a3 + 56));
  *((void *)&v66 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  uint64_t v67 = &off_1007509A8;
  *(void *)&long long v65 = v38;
  *(void *)(v37 + 120) = v28;
  swift_retain();
  swift_release();
  sub_1000145EC((uint64_t)&v65, (uint64_t)v64);
  swift_retain();
  sub_1005DB0B0((uint64_t)v64);
  sub_100038CD8((uint64_t)&v65);
  *(void *)&long long v65 = *(void *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  swift_allocObject();
  swift_weakInit();
  sub_10035A7B4();
  swift_retain();
  uint64_t v39 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v39;
  swift_release();
  uint64_t v40 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  *((void *)&v66 + 1) = type metadata accessor for TTRUserDefaults();
  uint64_t v67 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  id v41 = v40;
  swift_release();
  swift_release();
  *(void *)&long long v65 = v41;
  sub_1002F21D4(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v42 = v61;
  swift_beginAccess();
  sub_10035A810((uint64_t)&v65, v42);
  swift_endAccess();
  return a3;
}

uint64_t sub_1003595CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v59 = a2;
  uint64_t v5 = (_OWORD *)(a3 + 264);
  uint64_t v6 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(a3 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a3 + 160) = 0;
  swift_unknownObjectWeakInit();
  *(_OWORD *)(a3 + 176) = xmmword_10066EDA0;
  uint64_t v61 = a3 + 464;
  *(_OWORD *)(a3 + 376) = 0u;
  *(_OWORD *)(a3 + 392) = 0u;
  *(_OWORD *)(a3 + 408) = 0u;
  *(_OWORD *)(a3 + 424) = 0u;
  *(_OWORD *)(a3 + 440) = 0u;
  *(_OWORD *)(a3 + 456) = 0u;
  *(_OWORD *)(a3 + 472) = 0u;
  *(_OWORD *)(a3 + 488) = 0u;
  *(_OWORD *)(a3 + 504) = 0u;
  uint64_t v9 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  *(_WORD *)(a3 + 520) = 0;
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *(void *)(a3
            + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_activeTemplateSavingDismissAnimationCoordinator) = 0;
  uint64_t v11 = OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  uint64_t v60 = sub_10003B754((uint64_t *)&unk_100791D38);
  swift_allocObject();
  *(void *)(a3 + v11) = CurrentValueSubject.init(_:)();
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = 0;
  long long v13 = *(_OWORD *)(a1 + 16);
  long long v51 = *(_OWORD *)a1;
  long long v52 = v13;
  *(_OWORD *)(a3 + 72) = v51;
  *(_OWORD *)(a3 + 88) = v13;
  long long v53 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a3 + 136) = v53;
  sub_100038DC0(a1 + 216, (uint64_t)&v65);
  long long v62 = *(_OWORD *)(a1 + 248);
  sub_100038E1C(&v65, (_OWORD *)(a3 + 280));
  uint64_t v58 = v5;
  uint64_t v5[3] = v62;
  sub_100038DC0(a1 + 264, (uint64_t)&v65);
  uint64_t v14 = *(void *)(a1 + 296);
  uint64_t v15 = *(void *)(a1 + 304);
  sub_100038E1C(&v65, (_OWORD *)(a3 + 328));
  *(void *)(a3 + 360) = v14;
  *(void *)(a3 + 368) = v15;
  sub_1000145EC(a1 + 120, a3 + 192);
  long long v45 = *(_OWORD *)(a1 + 312);
  *(_OWORD *)(a3 + 232) = v45;
  long long v16 = *(_OWORD *)(a1 + 384);
  long long v46 = *(_OWORD *)(a1 + 368);
  long long v48 = v16;
  *(_OWORD *)(a3 + 248) = v46;
  *uint64_t v5 = v16;
  uint64_t v17 = type metadata accessor for TTRIRemindersCommonPresenterConfiguration(0);
  uint64_t v18 = *(int *)(v17 + 104);
  uint64_t v19 = v17;
  uint64_t v57 = v17;
  *(unsigned char *)(a3 + 168) = *(unsigned char *)(a1 + v18);
  *(void *)(a3 + 160) = &off_100737090;
  swift_unknownObjectWeakAssign();
  uint64_t v20 = *(void *)a1;
  uint64_t v56 = *(void *)(a1 + 8);
  uint64_t v21 = *(void *)(a1 + 32);
  uint64_t v55 = *(void *)(a1 + 40);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v22 = *(void **)(a1 + 56);
  uint64_t v47 = *(void *)(a1 + 104);
  uint64_t v54 = *(void *)(a1 + 112);
  sub_1000145EC(a1 + 160, (uint64_t)&v65);
  uint64_t v24 = *(void *)(a1 + 200);
  uint64_t v50 = *(void *)(a1 + 208);
  uint64_t v25 = *(void *)(a1 + 312);
  uint64_t v49 = *(void *)(a1 + 320);
  sub_1000145EC(a1 + 328, (uint64_t)v64);
  sub_1000145EC(a1 + *(int *)(v19 + 96), (uint64_t)v63);
  type metadata accessor for TTRRemindersListPresenterCapability();
  v44[1] = swift_allocObject();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  swift_retain();
  id v26 = v22;
  uint64_t v27 = v47;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  v44[0] = v25;
  swift_unknownObjectRetain();
  id v28 = sub_1002322E4(v20, v56, v21, v55, v23, v26, v27, v54, (uint64_t)&v65, v24, v50, v25, v49, (uint64_t)v64, (uint64_t)v63);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  *(void *)(a3 + 104) = v28;
  *(unsigned char *)(a3 + 112) = *(unsigned char *)(a1 + 80);
  uint64_t v29 = *(void *)(a1 + 96);
  *(void *)(a3 + 120) = *(void *)(a1 + 88);
  *(void *)(a3 + 128) = v29;
  uint64_t v30 = v57;
  sub_1000145EC(a1 + *(int *)(v57 + 100), a3 + 32);
  v28[3] = &off_10073CC00;
  swift_unknownObjectWeakAssign();
  uint64_t v31 = self;
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = [v31 defaultCenter];
  long long v65 = 0u;
  long long v66 = 0u;
  id v33 = [self mainQueue];
  swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v34 = NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();

  swift_release();
  sub_10003B6F8((uint64_t)&v65, &qword_100788D60);
  swift_release();
  *(void *)(a3 + 512) = v34;
  swift_release();
  uint64_t v35 = a1 + *(int *)(v30 + 92);
  uint64_t v36 = a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_firstVisibleItemIDToRestore;
  swift_beginAccess();
  sub_1001DF0EC(v35, v36);
  swift_endAccess();
  uint64_t v37 = *((void *)v58 + 6);
  swift_beginAccess();
  uint64_t v38 = *sub_100038D28((void *)(a3 + 32), *(void *)(a3 + 56));
  *((void *)&v66 + 1) = type metadata accessor for TTRIShowRemindersUndoManagerObserver();
  uint64_t v67 = &off_1007509A8;
  *(void *)&long long v65 = v38;
  *(void *)(v37 + 120) = v28;
  swift_retain();
  swift_release();
  sub_1000145EC((uint64_t)&v65, (uint64_t)v64);
  swift_retain();
  sub_1005DB0B0((uint64_t)v64);
  sub_100038CD8((uint64_t)&v65);
  *(void *)&long long v65 = *(void *)(a3
                              + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertion);
  swift_allocObject();
  swift_weakInit();
  sub_10035A7B4();
  swift_retain();
  uint64_t v39 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  *(void *)(a3 + OBJC_IVAR____TtC9Reminders28TTRIRemindersCommonPresenter_cellInfoButtonVisibilityAssertionCancellable) = v39;
  swift_release();
  uint64_t v40 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  *((void *)&v66 + 1) = type metadata accessor for TTRUserDefaults();
  uint64_t v67 = (_UNKNOWN **)&protocol witness table for TTRUserDefaults;
  id v41 = v40;
  swift_release();
  swift_release();
  *(void *)&long long v65 = v41;
  sub_1002F21D4(a1, type metadata accessor for TTRIRemindersCommonPresenterConfiguration);
  uint64_t v42 = v61;
  swift_beginAccess();
  sub_10035A810((uint64_t)&v65, v42);
  swift_endAccess();
  return a3;
}

uint64_t sub_100359DC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100359DDC(a1, a2, a3, a4, (uint64_t)sub_10035A948);
}

uint64_t sub_100359DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  type metadata accessor for TTRModuleState();
  swift_allocObject();
  *(void *)(a4 + 16) = TTRModuleState.init(name:)();
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v9 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_tree;
  type metadata accessor for TTRRemindersListObjectIDOnlyReminderIDProvider();
  uint64_t v10 = swift_allocObject();
  *(void *)(a4 + v9) = sub_1005B4720((uint64_t)&_swiftEmptyArrayStorage, 0, v10, (uint64_t)&_swiftEmptyArrayStorage, 0, 0);
  *(unsigned char *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_listMessaging) = 0x80;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_remReminderByObjectID) = &_swiftEmptyDictionarySingleton;
  uint64_t v11 = a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedListInfo;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability;
  type metadata accessor for TTRRemindersListCurrentTipCapability();
  swift_allocObject();
  *(void *)(a4 + v13) = TTRRemindersListCurrentTipCapability.init()();
  *(unsigned char *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_cachedEmptyListMessaging) = 0x80;
  *(unsigned char *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_receivedFirstUpdateFromDataModelSource) = 0;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_reminderCompletionViewModelOverrides) = &_swiftEmptyDictionarySingleton;
  *(void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_recurrentReminderReplacements) = &_swiftEmptyArrayStorage;
  uint64_t v14 = a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_nextDataModelUpdateOptions;
  *(_WORD *)uint64_t v14 = 257;
  *(unsigned char *)(v14 + 2) = 0;
  uint64_t v15 = (void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_dataModelSource);
  *uint64_t v15 = a1;
  v15[1] = &protocol witness table for TTRRemindersListDataModelSourceBase;
  long long v16 = (void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_interactor);
  *long long v16 = a2;
  v16[1] = &protocol witness table for TTRRemindersListInteractor;
  sub_10035A8E0(a3, a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_sortingCapability, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  uint64_t v17 = *(void *)(a4 + OBJC_IVAR____TtC9Reminders31TTRRemindersListViewModelSource_currentTipCapability);
  uint64_t v18 = swift_allocObject();
  swift_weakInit();
  swift_beginAccess();
  uint64_t v19 = *(void *)(v17 + 16);
  *(void *)(v17 + 16) = a5;
  *(void *)(v17 + 24) = v18;
  sub_1000499C4(v19);
  return a4;
}

uint64_t sub_10035A070(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v10 = *a5;
  v34[0] = a3;
  v34[1] = v10;
  uint64_t v11 = type metadata accessor for REMAnalyticsEvent();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_100786EF0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for TTRListType.SortingCapability();
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v34 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropUtils) = 0;
  *(uint64_t *)((char *)a5
             + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource____lazy_storage___dragAndDropCapability) = 0;
  uint64_t v21 = (char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_completedRemindersCount;
  *(void *)uint64_t v21 = 0;
  v21[8] = 1;
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_sectionsContextInstance) = 0;
  *(uint64_t *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_group) = 0;
  uint64_t v22 = (uint64_t *)((char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_groupDataModelSource);
  *uint64_t v22 = a1;
  v22[1] = (uint64_t)&protocol witness table for TTRShowGroupWithSectionsDataModelSource;
  *((unsigned char *)a5 + OBJC_IVAR____TtC9Reminders27TTRShowGroupViewModelSource_hasDefaultNewReminderButton) = a4;
  sub_10035A878(a3, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  swift_retain_n();
  uint64_t v23 = sub_100359DDC(a1, (uint64_t)a2, (uint64_t)v20, (uint64_t)a5, (uint64_t)sub_10035A948);
  swift_retain();
  sub_1000CD744((uint64_t)v17);
  sub_1005885DC((uint64_t)v17);
  sub_10003B6F8((uint64_t)v17, &qword_100786EF0);
  uint64_t v24 = *(void **)TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
  type metadata accessor for REMAnalyticsManager();
  id v25 = v24;
  static REMAnalyticsManager.shared.getter();
  uint64_t v26 = sub_10003B754(&qword_10078D258);
  uint64_t v27 = (uint64_t *)&v14[*(int *)(v26 + 48)];
  id v28 = (uint64_t *)&v14[*(int *)(v26 + 80)];
  uint64_t v29 = enum case for REMRemindersOpenUserOperation.group(_:);
  uint64_t v30 = type metadata accessor for REMRemindersOpenUserOperation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 104))(v14, v29, v30);
  uint64_t *v27 = TTRUserDefaults.activitySessionId.getter();
  v27[1] = v31;
  TTRUserDefaults.activitySessionBeginTime.getter();
  *id v28 = _typeName(_:qualified:)();
  v28[1] = v32;
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, enum case for REMAnalyticsEvent.openListUserOperation(_:), v11);
  REMAnalyticsManager.post(event:)();

  swift_release();
  swift_release();
  sub_1002F21D4(v34[0], (uint64_t (*)(void))&type metadata accessor for TTRListType.SortingCapability);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v23;
}

id sub_10035A41C(uint64_t a1, void *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, char a7, char *a8)
{
  uint64_t v36 = a3;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  int v35 = a4 & 1;
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.ListInfo();
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_feedbackGenerator;
  id v19 = objc_allocWithZone((Class)UIImpactFeedbackGenerator);
  uint64_t v20 = a8;
  *(void *)&a8[v18] = [v19 initWithStyle:0];
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___toolbar] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarBottomConstraint] = 0;
  v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardAppearState] = 0;
  uint64_t v21 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_navigationItemOptions];
  *(_OWORD *)uint64_t v21 = xmmword_10066C910;
  v21[16] = 0;
  v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_emptyListMessaging] = 0x80;
  uint64_t v22 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_internalDeferredItemUpdates];
  *uint64_t v22 = 0;
  *(_OWORD *)(v22 + 33) = 0u;
  *(_OWORD *)(v22 + 24) = 0u;
  *(_OWORD *)(v22 + 8) = 0u;
  v22[49] = 3;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarHeight] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_keyboardHeight] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_pencilInputAreaHeight] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_toolbarController] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_lastSetLargeTitleColor] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listMessagingView] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeObserver] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_currentTextInputModeCancellable] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentPreferredChromelessBarStatesObserver] = 0;
  *(void *)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController____lazy_storage___autoCategorizationController] = 0;
  uint64_t v23 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_swHighlightToShowInNavBar];
  uint64_t v24 = type metadata accessor for TTRSharedWithYouHighlight();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  id v25 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_cellTitleItemGainingFocus_forKeyboardAvoidance];
  uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.Item();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  uint64_t v27 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_presenter];
  *(void *)uint64_t v27 = a1;
  *((void *)v27 + 1) = &off_10073CD50;
  id v28 = &v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentViewController];
  uint64_t v29 = v36;
  *(void *)id v28 = a2;
  *((void *)v28 + 1) = v29;
  v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_contentLayout] = v35;
  swift_retain();
  id v30 = a2;
  TTRRemindersListViewModel.ListInfo.init()();
  sub_10035A8E0((uint64_t)v17, (uint64_t)&v20[OBJC_IVAR____TtC9Reminders31TTRIShowRemindersViewController_listInfo], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ListInfo);
  uint64_t v31 = *(void *)v21;
  uint64_t v32 = *((void *)v21 + 1);
  *(void *)uint64_t v21 = a5;
  *((void *)v21 + 1) = a6;
  v21[16] = a7;
  sub_100065658(a5, a6);
  sub_10006566C(v31, v32);

  sub_10006566C(a5, a6);
  v38.receiver = v20;
  v38.super_class = ObjectType;
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_10035A77C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_10035A7B4()
{
  unint64_t result = qword_100791D48;
  if (!qword_100791D48)
  {
    sub_100039710((uint64_t *)&unk_100791D38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100791D48);
  }
  return result;
}

uint64_t sub_10035A810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100791D50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10035A878(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10035A8E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10035A948()
{
  return sub_100599578();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Entity.listType.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Entity.smartListType.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Entity.reminderType.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.createList.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.openList.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.openSmartList.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.createReminder.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Intent.searchReminders.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createListName.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.openListEntity.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.openSmartListEntity.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderTitle.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderNotes.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderDueDate.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderFlagged.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.createReminderPriority.getter()
{
  return sub_10035ABC4();
}

uint64_t static TTRLocalizableStringResources.AppIntents.Parameter.searchRemindersQueryPhrase.getter()
{
  return sub_10035ABC4();
}

uint64_t sub_10035ABC4()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources()
{
  return &type metadata for TTRLocalizableStringResources;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents.Entity()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents.Entity;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents.Intent()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents.Intent;
}

ValueMetadata *type metadata accessor for TTRLocalizableStringResources.AppIntents.Parameter()
{
  return &type metadata for TTRLocalizableStringResources.AppIntents.Parameter;
}

void sub_10035ADD0(void **a1)
{
  uint64_t v2 = *(void *)(sub_10003B754(&qword_10079C1E8) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100475E14(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_100364FC8(v5);
  *a1 = v3;
}

uint64_t *TTRSmartListVersionWarningInteractor.__allocating_init(userDefaults:maxStoredValues:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = sub_100038E88(a1, v5);
  uint64_t v8 = sub_100368404(v7, a2, v2, v5, v6);
  sub_100038CD8(a1);
  return v8;
}

uint64_t *TTRSmartListVersionWarningInteractor.init(userDefaults:maxStoredValues:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v7 = sub_100038E88(a1, v5);
  double v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, double))(v11 + 16))(v10, v8);
  uint64_t v12 = sub_10036838C((uint64_t)v10, a2, v2, v5, v6);
  sub_100038CD8(a1);
  return v12;
}

BOOL TTRSmartListVersionWarningInteractor.hasVersionWarningAlertShown(for:supportedVersion:)(void *a1, uint64_t a2)
{
  uint64_t v26 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079C1E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
  uint64_t v12 = *(void *)(v11 - 8);
  double v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = [a1 uuid:v13];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  swift_beginAccess();
  sub_1000145EC(v2 + 16, (uint64_t)v27);
  uint64_t v17 = v28;
  uint64_t v18 = v29;
  sub_100038D28(v27, v28);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  sub_100038CD8((uint64_t)v27);
  if (*(void *)(v19 + 16) && (unint64_t v20 = sub_10035C704((uint64_t)v10), (v21 & 1) != 0))
  {
    sub_100368674(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v20, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v6, v22, 1, v11);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v6, 1, v11) == 1)
  {
    sub_10003B6F8((uint64_t)v6, &qword_10079C1E0);
    return 0;
  }
  else
  {
    sub_1003686DC((uint64_t)v6, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    uint64_t v24 = *(void *)&v15[*(int *)(v11 + 20)];
    sub_100368744((uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    return v24 >= v26;
  }
}

uint64_t TTRSmartListVersionWarningInteractor.setVersionWarningAlertShown(for:supportedVersion:)(void *a1, uint64_t a2)
{
  id v74 = a1;
  uint64_t v75 = a2;
  uint64_t v3 = sub_10003B754(&qword_10079C1E0);
  __chkstk_darwin(v3 - 8);
  uint64_t v71 = (uint64_t)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_10003B754(&qword_10079C1E8);
  uint64_t v73 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v69 = (uint64_t)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v68 = (uint64_t)&v60 - v7;
  __chkstk_darwin(v8);
  uint64_t v72 = (uint64_t)&v60 - v9;
  uint64_t v10 = sub_10003B754(&qword_100798708);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Date();
  __chkstk_darwin(v13 - 8);
  uint64_t v67 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
  uint64_t v63 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  id v16 = (char *)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v60 - v18;
  uint64_t v20 = type metadata accessor for UUID();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  long long v76 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v60 - v24;
  uint64_t v61 = v2;
  uint64_t v26 = v2 + 16;
  swift_beginAccess();
  sub_1000145EC(v2 + 16, (uint64_t)v78);
  uint64_t v27 = v79;
  uint64_t v28 = v80;
  sub_100038D28(v78, v79);
  uint64_t v29 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v27, v28);
  sub_100038CD8((uint64_t)v78);
  id v30 = [v74 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  Date.init()();
  TTRUserDefaults.SmartListVersionWarning.init(creationDate:supportedVersion:)();
  sub_1003686DC((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v78[0] = v29;
  sub_1000BBE34((uint64_t)v16, (uint64_t)v25, isUniquelyReferenced_nonNull_native);
  uint64_t v32 = v78[0];
  swift_bridgeObjectRelease();
  uint64_t v62 = v21;
  id v74 = *(id *)(v21 + 8);
  uint64_t v75 = v21 + 8;
  ((void (*)(char *, uint64_t))v74)(v25, v20);
  swift_bridgeObjectRetain_n();
  id v33 = sub_10035EB78((uint64_t)v32);
  swift_bridgeObjectRelease();
  v78[0] = v33;
  sub_10035ADD0(v78);
  swift_bridgeObjectRelease();
  uint64_t v34 = v78[0];
  uint64_t v35 = v32[2];
  uint64_t v36 = v61;
  uint64_t v67 = *(char **)(v61 + 56);
  if ((uint64_t)v67 >= v35)
  {
    swift_release();
LABEL_21:
    swift_beginAccess();
    uint64_t v57 = *(void *)(v36 + 40);
    uint64_t v58 = *(void *)(v36 + 48);
    sub_100038E88(v26, v57);
    (*(void (**)(void *, uint64_t, uint64_t))(v58 + 16))(v32, v57, v58);
    return swift_endAccess();
  }
  else
  {
    uint64_t v60 = v26;
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t))(v62 + 32);
    long long v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v62 + 56);
    long long v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
    id v64 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56);
    while (1)
    {
      uint64_t v38 = v34[2];
      if (!v38)
      {
        (*v66)(v12, 1, 1, v20);
LABEL_19:
        swift_bridgeObjectRelease();
        sub_10003B6F8((uint64_t)v12, &qword_100798708);
LABEL_20:
        uint64_t v36 = v61;
        uint64_t v26 = v60;
        goto LABEL_21;
      }
      unint64_t v39 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
      uint64_t v40 = *(void *)(v73 + 72);
      id v41 = v12;
      uint64_t v42 = v72;
      sub_100368518((uint64_t)v34 + v39 + v40 * (v38 - 1), v72);
      uint64_t v43 = v42 + *(int *)(v77 + 48);
      uint64_t v44 = *v37;
      uint64_t v45 = v42;
      uint64_t v12 = v41;
      (*v37)(v41, v45, v20);
      (*v66)(v41, 0, 1, v20);
      sub_100368744(v43, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      if ((*v65)(v41, 1, v20) == 1) {
        goto LABEL_19;
      }
      uint64_t v46 = (uint64_t)v76;
      v44(v76, (uint64_t)v41, v20);
      swift_bridgeObjectRetain();
      unint64_t v47 = sub_10035C704(v46);
      LOBYTE(v46) = v48;
      swift_bridgeObjectRelease();
      if (v46)
      {
        int v49 = swift_isUniquelyReferenced_nonNull_native();
        v78[0] = v32;
        if (!v49)
        {
          sub_1003631B8();
          uint64_t v32 = v78[0];
        }
        ((void (*)(unint64_t, uint64_t))v74)(v32[6] + *(void *)(v62 + 72) * v47, v20);
        uint64_t v32 = v78[0];
        uint64_t v50 = v71;
        sub_1003686DC(v78[0][7] + *(void *)(v63 + 72) * v47, v71, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        sub_1003605C8(v47, (uint64_t)v32);
        swift_bridgeObjectRelease();
        uint64_t v51 = 0;
      }
      else
      {
        uint64_t v51 = 1;
        uint64_t v50 = v71;
      }
      (*v64)(v50, v51, 1, v70);
      sub_10003B6F8(v50, &qword_10079C1E0);
      if (!v34[2]) {
        break;
      }
      if (swift_isUniquelyReferenced_nonNull_native())
      {
        uint64_t v52 = v34[2];
        if (!v52) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t v34 = (void *)sub_100367080((unint64_t)v34);
        uint64_t v52 = v34[2];
        if (!v52) {
          goto LABEL_23;
        }
      }
      uint64_t v53 = v52 - 1;
      uint64_t v54 = v69;
      sub_100368580((uint64_t)v34 + v39 + (v52 - 1) * v40, v69);
      uint64_t v34[2] = v53;
      uint64_t v55 = v68;
      sub_100368580(v54, v68);
      uint64_t v56 = (void (*)(uint64_t, uint64_t))v74;
      ((void (*)(char *, uint64_t))v74)(v76, v20);
      sub_100368744(v55 + *(int *)(v77 + 48), (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      v56(v55, v20);
      if ((uint64_t)v67 >= v32[2])
      {
        swift_bridgeObjectRelease();
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
  }
  return result;
}

uint64_t TTRSmartListVersionWarningInteractor.moveVersionWarningAlertShown(from:to:)(void *a1, void *a2)
{
  id v46 = a2;
  uint64_t v4 = sub_10003B754(&qword_10079C1E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v45 = (uint64_t)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v43 - v7;
  uint64_t v49 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v43 - v13;
  uint64_t v15 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v43 = (uint64_t)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v47 = (uint64_t)&v43 - v19;
  uint64_t v48 = v2;
  swift_beginAccess();
  uint64_t v44 = v2 + 16;
  sub_1000145EC(v2 + 16, (uint64_t)v50);
  uint64_t v21 = v51;
  uint64_t v20 = v52;
  sub_100038D28(v50, v51);
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(v21, v20);
  sub_100038CD8((uint64_t)v50);
  uint64_t v53 = v22;
  swift_bridgeObjectRetain();
  id v23 = [a1 uuid];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v22 + 16) && (unint64_t v24 = sub_10035C704((uint64_t)v14), (v25 & 1) != 0))
  {
    sub_100368674(*(void *)(v22 + 56) + *(void *)(v16 + 72) * v24, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    uint64_t v26 = 0;
  }
  else
  {
    uint64_t v26 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v8, v26, 1, v15);
  swift_bridgeObjectRelease();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v28 = v14;
  uint64_t v29 = v49;
  v27(v28, v49);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15) == 1)
  {
    swift_bridgeObjectRelease();
    return sub_10003B6F8((uint64_t)v8, &qword_10079C1E0);
  }
  else
  {
    uint64_t v31 = (uint64_t)v8;
    uint64_t v32 = v47;
    sub_1003686DC(v31, v47, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    id v33 = [a1 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v34 = v45;
    sub_10035F500((uint64_t)v11, v45);
    v27(v11, v29);
    sub_10003B6F8(v34, &qword_10079C1E0);
    id v35 = [v46 uuid];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v36 = v43;
    sub_100368674(v32, v43, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    uint64_t v37 = v53;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v50[0] = v37;
    sub_1000BBE34(v36, (uint64_t)v11, isUniquelyReferenced_nonNull_native);
    uint64_t v53 = v50[0];
    swift_bridgeObjectRelease();
    v27(v11, v29);
    uint64_t v39 = v53;
    uint64_t v40 = v44;
    swift_beginAccess();
    uint64_t v41 = *(void *)(v48 + 40);
    uint64_t v42 = *(void *)(v48 + 48);
    sub_100038E88(v40, v41);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 16))(v39, v41, v42);
    swift_endAccess();
    return sub_100368744(v32, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
  }
}

uint64_t TTRSmartListVersionWarningInteractor.deinit()
{
  sub_100038CD8(v0 + 16);
  return v0;
}

uint64_t TTRSmartListVersionWarningInteractor.__deallocating_deinit()
{
  sub_100038CD8(v0 + 16);

  return swift_deallocClassInstance();
}

BOOL sub_10035C074(void *a1, uint64_t a2)
{
  return TTRSmartListVersionWarningInteractor.hasVersionWarningAlertShown(for:supportedVersion:)(a1, a2);
}

uint64_t sub_10035C09C(void *a1, uint64_t a2)
{
  return TTRSmartListVersionWarningInteractor.setVersionWarningAlertShown(for:supportedVersion:)(a1, a2);
}

uint64_t sub_10035C0C0(void *a1, void *a2)
{
  return TTRSmartListVersionWarningInteractor.moveVersionWarningAlertShown(from:to:)(a1, a2);
}

uint64_t sub_10035C0E4()
{
  return TTRUserDefaults.smartListVersionWarnings.getter();
}

uint64_t sub_10035C108()
{
  return TTRUserDefaults.smartListVersionWarnings.setter();
}

void (*sub_10035C12C(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = TTRUserDefaults.smartListVersionWarnings.modify();
  return sub_1001157EC;
}

unint64_t sub_10035C188(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = NSObject._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10035CA04(a1, v4);
}

unint64_t sub_10035C1D4(uint64_t a1)
{
  Hasher.init(_seed:)();
  TTRRemindersListViewModel.ItemID.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  return sub_10035D2F0(a1, v2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(char *, uint64_t))&static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

unint64_t sub_10035C28C(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_10035CB20(a1, v2);
}

unint64_t sub_10035C2F8(Swift::UInt a1, char a2)
{
  Hasher.init(_seed:)();
  sub_1002CB0D8((uint64_t)v6, a1, a2);
  Swift::Int v4 = Hasher._finalize()();

  return sub_10035CBC0(a1, a2, v4);
}

unint64_t sub_10035C370(uint64_t a1)
{
  uint64_t v2 = static Hasher._hash(seed:_:)();

  return sub_10035CD24(a1, v2);
}

unint64_t sub_10035C3B4(unsigned __int8 a1)
{
  Hasher.init(_seed:)();
  String.hash(into:)();
  swift_bridgeObjectRelease();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10035CDC0(a1, v2);
}

unint64_t sub_10035C4E8(void *a1)
{
  Hasher.init(_seed:)();
  if (a1)
  {
    Hasher._combine(_:)(1u);
    id v2 = a1;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  Swift::Int v3 = Hasher._finalize()();

  return sub_10035D040(a1, v3);
}

unint64_t sub_10035C578(uint64_t a1)
{
  Hasher.init(_seed:)();
  TTRSectionID.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10035D144(a1, v2);
}

unint64_t sub_10035C5E4(uint64_t a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(*(void *)(a1 + 16));
  Swift::Int v2 = Hasher._finalize()();
  return sub_10035D248(a1, v2);
}

unint64_t sub_10035C64C(uint64_t a1)
{
  Hasher.init(_seed:)();
  TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  return sub_10035D2F0(a1, v2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(char *, uint64_t))&static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:), (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
}

unint64_t sub_10035C704(uint64_t a1)
{
  type metadata accessor for UUID();
  sub_1003687A4(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = dispatch thunk of Hashable._rawHashValue(seed:)();

  return sub_10035D44C(a1, v2);
}

unint64_t sub_10035C79C(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = AnyHashable._rawHashValue(seed:)(*(void *)(v2 + 40));

  return sub_10035D60C(a1, v4);
}

unint64_t sub_10035C7E0(uint64_t a1)
{
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Hasher.init(_seed:)();
  String.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();
  swift_bridgeObjectRelease();
  return sub_10035D6D4(a1, v2);
}

unint64_t sub_10035C870(uint64_t a1)
{
  Hasher.init(_seed:)();
  AnyListEntityID.hash(into:)();
  Swift::Int v2 = Hasher._finalize()();

  return sub_10035D84C(a1, v2);
}

unint64_t sub_10035C8DC(Swift::UInt a1)
{
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v2 = Hasher._finalize()();

  return sub_10035DF68(a1, v2);
}

unint64_t sub_10035C948(uint64_t a1, char a2, double a3, double a4)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = a1;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    Hasher._combine(_:)(v8);
  }
  sub_10064D048(a3, a4);
  Swift::Int v9 = Hasher._finalize()();

  return sub_10035E004(a1, a2 & 1, v9, a3, a4);
}

unint64_t sub_10035CA04(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_1000368FC(0, qword_10078E3D0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static NSObject.== infix(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static NSObject.== infix(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10035CB20(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(unsigned __int8 *)(v7 + result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(unsigned __int8 *)(v7 + result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10035CBC0(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
    return result;
  }
  uint64_t v7 = ~v5;
  BOOL v8 = a1 == 7 && a2 == 2;
  BOOL v9 = a1 == 6 && a2 == 2;
  BOOL v10 = a1 == 5 && a2 == 2;
  BOOL v11 = a1 == 4 && a2 == 2;
  BOOL v12 = a1 == 3 && a2 == 2;
  BOOL v13 = a1 == 2 && a2 == 2;
  BOOL v14 = a1 == 1 && a2 == 2;
  if (a1) {
    BOOL v15 = 0;
  }
  else {
    BOOL v15 = a2 == 2;
  }
  while (1)
  {
    uint64_t v16 = *(void *)(v3 + 48) + 16 * result;
    uint64_t v17 = *(void *)v16;
    int v18 = *(unsigned __int8 *)(v16 + 8);
    if (!v18)
    {
      if (!a2) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    if (v18 != 1) {
      break;
    }
    if (a2 == 1)
    {
LABEL_27:
      if (v17 == a1) {
        return result;
      }
    }
LABEL_28:
    unint64_t result = (result + 1) & v7;
    if (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) == 0) {
      return result;
    }
  }
  switch(v17)
  {
    case 1:
      if (!v14) {
        goto LABEL_28;
      }
      break;
    case 2:
      if (!v13) {
        goto LABEL_28;
      }
      break;
    case 3:
      if (!v12) {
        goto LABEL_28;
      }
      break;
    case 4:
      if (!v11) {
        goto LABEL_28;
      }
      break;
    case 5:
      if (!v10) {
        goto LABEL_28;
      }
      break;
    case 6:
      if (!v9) {
        goto LABEL_28;
      }
      break;
    case 7:
      if (!v8) {
        goto LABEL_28;
      }
      break;
    default:
      if (!v15) {
        goto LABEL_28;
      }
      break;
  }
  return result;
}

unint64_t sub_10035CD24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10035CDC0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1701736302;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x7961646F74;
          break;
        case 2:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x776F72726F6D6F74;
          break;
        case 3:
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x646E656B656577;
          break;
        case 4:
          uint64_t v8 = 0x57664F7472617473;
          unint64_t v7 = 0xEE007961646B6565;
          break;
        case 5:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6D6F74737563;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE400000000000000;
      uint64_t v10 = 1701736302;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE500000000000000;
          if (v8 == 0x7961646F74) {
            goto LABEL_18;
          }
          goto LABEL_19;
        case 2:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x776F72726F6D6F74) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 3:
          unint64_t v9 = 0xE700000000000000;
          if (v8 != 0x646E656B656577) {
            goto LABEL_19;
          }
          goto LABEL_18;
        case 4:
          uint64_t v10 = 0x57664F7472617473;
          unint64_t v9 = 0xEE007961646B6565;
          goto LABEL_17;
        case 5:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x6D6F74737563) {
            goto LABEL_19;
          }
          goto LABEL_18;
        default:
LABEL_17:
          if (v8 != v10) {
            goto LABEL_19;
          }
LABEL_18:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_19:
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_10035D040(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    do
    {
      unint64_t v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          sub_1000368FC(0, qword_10078E3D0);
          id v10 = v9;
          id v11 = a1;
          char v12 = static NSObject.== infix(_:_:)();

          if (v12) {
            return v5;
          }
        }
      }
      else if (!a1)
      {
        return v5;
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_10035D144(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = static TTRSectionID.__derived_enum_equals(_:_:)();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = static TTRSectionID.__derived_enum_equals(_:_:)();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_10035D248(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    uint64_t v8 = *(void *)(a1 + 16);
    if (*(void *)(*(void *)(v7 + 8 * result) + 16) != v8)
    {
      uint64_t v9 = ~v5;
      for (unint64_t result = (result + 1) & v9;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v9)
      {
        if (*(void *)(*(void *)(v7 + 8 * result) + 16) == v8) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10035D2F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), uint64_t (*a5)(char *, uint64_t), uint64_t (*a6)(void))
{
  uint64_t v22 = a6;
  uint64_t v11 = a3(0) - 8;
  __chkstk_darwin(v11);
  BOOL v14 = (char *)&v21 - v13;
  uint64_t v15 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v16 = a2 & ~v15;
  if ((*(void *)(v6 + 64 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16))
  {
    uint64_t v17 = ~v15;
    uint64_t v18 = *(void *)(v12 + 72);
    do
    {
      sub_100368674(*(void *)(v6 + 48) + v18 * v16, (uint64_t)v14, a4);
      char v19 = a5(v14, a1);
      sub_100368744((uint64_t)v14, v22);
      if (v19) {
        break;
      }
      unint64_t v16 = (v16 + 1) & v17;
    }
    while (((*(void *)(v6 + 64 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) != 0);
  }
  return v16;
}

unint64_t sub_10035D44C(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a1;
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  v6.n128_f64[0] = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v2;
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  uint64_t v19 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    BOOL v14 = *(void (**)(char *, unint64_t, uint64_t, __n128))(v5 + 16);
    uint64_t v13 = v5 + 16;
    uint64_t v12 = v14;
    uint64_t v15 = *(void *)(v13 + 56);
    do
    {
      v12(v8, *(void *)(v21 + 48) + v15 * v10, v4, v6);
      sub_1003687A4((unint64_t *)&qword_10078E350, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v16 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v13 - 8))(v8, v4);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(v19 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_10035D60C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_10013FF40(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = static AnyHashable.== infix(_:_:)();
      sub_100055AE8((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_10035D6D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;
    if (v6 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v15 = v14;
          if (v13 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v15 == v16) {
            break;
          }
          char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_10035D84C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v62 = a1;
  uint64_t v57 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v48 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v47 = (char *)&v46 - v8;
  uint64_t v56 = type metadata accessor for SmartListType();
  uint64_t v9 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v49 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_10003B754(&qword_100793C70);
  __chkstk_darwin(v61);
  uint64_t v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for AnyListEntityID();
  __chkstk_darwin(v13);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v46 - v15;
  __chkstk_darwin(v17);
  __chkstk_darwin(v18);
  id v23 = (char *)&v46 - v22;
  uint64_t v24 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v25 = a2 & ~v24;
  uint64_t v60 = v3 + 64;
  if (((*(void *)(v3 + 64 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
    return v25;
  }
  uint64_t v54 = v16;
  uint64_t v55 = v20;
  uint64_t v26 = *(void *)(v19 + 72);
  uint64_t v58 = ~v24;
  uint64_t v59 = v26;
  uint64_t v27 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v52 = v21;
  uint64_t v50 = (void (**)(uint64_t, uint64_t))(v9 + 8);
  id v46 = (void (**)(char *, uint64_t, uint64_t))(v9 + 32);
  uint64_t v53 = v3;
  while (1)
  {
    sub_100368674(*(void *)(v3 + 48) + v59 * v25, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    uint64_t v28 = (uint64_t)&v12[*(int *)(v61 + 48)];
    sub_100368674((uint64_t)v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    sub_100368674(v62, v28, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload) {
      break;
    }
    if (EnumCaseMultiPayload == 1)
    {
      sub_100368674((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        id v30 = v47;
        uint64_t v31 = v57;
        (*v51)(v47, v28, v57);
        char v32 = static UUID.== infix(_:_:)();
        id v33 = *v27;
        (*v27)(v30, v31);
        v33(v16, v31);
        if (v32) {
          goto LABEL_23;
        }
LABEL_20:
        sub_100368744((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
        uint64_t v3 = v53;
        goto LABEL_5;
      }
      (*v27)(v16, v57);
    }
    else
    {
      uint64_t v35 = v52;
      sub_100368674((uint64_t)v12, v52, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v36 = v48;
        uint64_t v37 = v57;
        (*v51)(v48, v28, v57);
        char v38 = static UUID.== infix(_:_:)();
        uint64_t v39 = *v27;
        (*v27)(v36, v37);
        v39((char *)v35, v37);
        uint64_t v16 = v54;
        if (v38) {
          goto LABEL_23;
        }
        goto LABEL_20;
      }
      (*v27)((char *)v35, v57);
      uint64_t v16 = v54;
    }
LABEL_4:
    sub_10003B6F8((uint64_t)v12, &qword_100793C70);
LABEL_5:
    sub_100368744((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    unint64_t v25 = (v25 + 1) & v58;
    if (((*(void *)(v60 + ((v25 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v25) & 1) == 0) {
      return v25;
    }
  }
  uint64_t v34 = v55;
  sub_100368674((uint64_t)v12, v55, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
  if (swift_getEnumCaseMultiPayload())
  {
    (*v50)(v34, v56);
    goto LABEL_4;
  }
  (*v46)(v49, v28, v56);
  sub_1003687A4(&qword_100793C78, (void (*)(uint64_t))&type metadata accessor for SmartListType);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v65 != v63 || v66 != v64)
  {
    char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = *v50;
    uint64_t v42 = v56;
    (*v50)((uint64_t)v49, v56);
    v41(v55, v42);
    uint64_t v16 = v54;
    if (v40) {
      goto LABEL_23;
    }
    goto LABEL_20;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v43 = *v50;
  uint64_t v44 = v56;
  (*v50)((uint64_t)v49, v56);
  v43(v55, v44);
LABEL_23:
  sub_100368744((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
  sub_100368744((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
  return v25;
}

unint64_t sub_10035DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_10035E004(uint64_t a1, char a2, uint64_t a3, double a4, double a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t result = a3 & ~v7;
  if ((*(void *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v9 = ~v7;
    double v10 = *(double *)&a1;
    do
    {
      uint64_t v11 = *(void *)(v5 + 48) + 32 * result;
      double v13 = *(double *)(v11 + 16);
      double v12 = *(double *)(v11 + 24);
      if (*(unsigned char *)(v11 + 8))
      {
        if ((a2 & 1) != 0 && v13 == a4 && v12 == a5) {
          return result;
        }
      }
      else if ((a2 & 1) == 0)
      {
        BOOL v15 = *(double *)v11 == v10 && v13 == a4;
        if (v15 && v12 == a5) {
          return result;
        }
      }
      unint64_t result = (result + 1) & v9;
    }
    while (((*(void *)(v5 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

void *sub_10035E0A8(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = &_swiftEmptyArrayStorage;
    }
    else
    {
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    unint64_t v1 = sub_100367094((uint64_t)&v7, (uint64_t)(v3 + 4), v2, v1);
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v2) {
      return &_swiftEmptyArrayStorage;
    }
  }
  return v3;
}

void *sub_10035E1B0(unint64_t a1)
{
  return sub_10035E91C(a1, (void (*)(void *, uint64_t, unint64_t))sub_100579EF8);
}

void *sub_10035E1C8(unint64_t a1)
{
  return sub_10035E91C(a1, (void (*)(void *, uint64_t, unint64_t))&specialized _ArrayBuffer._copyContents(initializing:));
}

void *sub_10035E1E0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10035E588(a1, a2, a3, a4, &qword_10078E370);
}

void *sub_10035E1EC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1003671FC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100051244();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10035E2D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = v5;
    if (v5 <= 0)
    {
      uint64_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 8 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        sub_1000368FC(0, (unint64_t *)&qword_1007894D0);
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      long long v9[2] = v5;
      v9[3] = (2 * (v11 >> 3)) | 1;
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10035E468(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = __CocoaSet.count.getter();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1003673FC(&v8, v3 + 4, v2, a1);
  unint64_t result = (void *)sub_100051244();
  if (v6 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

void *sub_10035E564(unint64_t a1)
{
  return sub_10035E91C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10057A148);
}

void *sub_10035E57C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_10035E588(a1, a2, a3, a4, (uint64_t *)&unk_100788D30);
}

void *sub_10035E588(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t *a5)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v6) {
      return &_swiftEmptyArrayStorage;
    }
    uint64_t v10 = v6;
    if (v6 <= 0)
    {
      uint64_t v11 = &_swiftEmptyArrayStorage;
      if (v5 != a3)
      {
LABEL_7:
        if (v6 < 0) {
          goto LABEL_19;
        }
        unint64_t v14 = a2 + 8 * a3;
        if (v14 < (unint64_t)&v11[v10 + 4] && (unint64_t)(v11 + 4) < v14 + v10 * 8) {
          goto LABEL_19;
        }
        sub_10003B754(a5);
        swift_arrayInitWithCopy();
        return v11;
      }
    }
    else
    {
      sub_10003B754((uint64_t *)&unk_1007894B0);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v6;
      void v11[3] = (2 * (v13 >> 3)) | 1;
      if (v5 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  unint64_t result = (void *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

void *sub_10035E718(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003B754(&qword_10079C390);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 56);
  unint64_t v5 = sub_100367708(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_100051244();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_10035E814(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003B754(&qword_10079C360);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  unint64_t v5 = sub_10036796C(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_100051244();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_10035E8EC(unint64_t a1)
{
  return sub_10035E91C(a1, (void (*)(void *, uint64_t, unint64_t))sub_10057AE28);
}

void *sub_10035E904(unint64_t a1)
{
  return sub_10035E91C(a1, (void (*)(void *, uint64_t, unint64_t))sub_100579F28);
}

void *sub_10035E91C(unint64_t a1, void (*a2)(void *, uint64_t, unint64_t))
{
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4) {
    return &_swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v4 <= 0)
    {
      unint64_t v5 = &_swiftEmptyArrayStorage;
    }
    else
    {
      sub_10003B754((uint64_t *)&unk_1007894B0);
      unint64_t v5 = (void *)swift_allocObject();
      int64_t v6 = j__malloc_size(v5);
      uint64_t v7 = v6 - 32;
      if (v6 < 32) {
        uint64_t v7 = v6 - 25;
      }
      void v5[2] = v4;
      uint64_t v5[3] = (2 * (v7 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    a2(v5 + 4, v4, a1);
    a2 = v8;
    swift_bridgeObjectRelease();
    if (a2 == (void (*)(void *, uint64_t, unint64_t))v4) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      return &_swiftEmptyArrayStorage;
    }
  }
  return v5;
}

void *sub_10035EA24(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003B754((uint64_t *)&unk_10078E960);
  uint64_t v3 = *(void *)(type metadata accessor for TTRRemindersListViewModel.Item() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  unint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      sub_100367B00(&v11, (uint64_t)v6 + v5, v1, a1);
      uint64_t v10 = v9;
      swift_bridgeObjectRetain();
      sub_100051244();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10035EB78(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003B754(&qword_10079C3E0);
  uint64_t v3 = *(void *)(sub_10003B754(&qword_10079C1E8) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  int64_t v6 = (void *)swift_allocObject();
  unint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_10003B754(&qword_10079C1E8) - 8);
      sub_100367E14(&v12, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      uint64_t v11 = v10;
      swift_bridgeObjectRetain();
      sub_100051244();
      if (v11 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_10035ED0C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_10036818C((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100051244();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

uint64_t sub_10035EDF4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10035C1D4(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100360D68();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  sub_100368744(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10035FE58(v4, v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(unsigned char *))&TTRRemindersListViewModel.ItemID.hash(into:), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10035EF34(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10035C188(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v10 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1003645EC(&qword_10079C3B8);
    uint64_t v7 = v10;
  }

  uint64_t v8 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10035F8E0(v4, v7);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_10035F004(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_10035C64C(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *v2;
  uint64_t v12 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100362310();
    uint64_t v7 = v12;
  }
  uint64_t v8 = *(void *)(v7 + 48);
  uint64_t v9 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  sub_100368744(v8 + *(void *)(*(void *)(v9 - 8) + 72) * v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 8 * v4);
  sub_10035FE58(v4, v7, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(unsigned char *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  *uint64_t v2 = v7;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10035F144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10035C64C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10036274C();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
    sub_100368744(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for REMHashtagLabelSpecifier();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_1003600EC(v6, v9, (uint64_t (*)(void))&type metadata accessor for REMHashtagLabelSpecifier);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for REMHashtagLabelSpecifier();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_10035F324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10035C64C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100362AC8();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
    sub_100368744(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1003686DC(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_1003600EC(v6, v9, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_10035F500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10035C704(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1003631B8();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_1003686DC(v12 + *(void *)(v20 + 72) * v6, a2, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    sub_1003605C8(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
    unint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

unint64_t sub_10035F6D0(unint64_t a1, uint64_t a2)
{
  return sub_10035FE58(a1, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID, (void (*)(unsigned char *))&TTRRemindersListViewModel.ItemID.hash(into:), (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
}

unint64_t sub_10035F724(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Swift::UInt v9 = *(unsigned __int8 *)(*(void *)(a2 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v9);
        unint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (unsigned char *)(v11 + v3);
          uint64_t v13 = (unsigned char *)(v11 + v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_10035F8E0(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (void *)(v19 + 8 * v3);
            BOOL v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_10035FA94(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = (_OWORD *)(v19 + 16 * v3);
            BOOL v21 = (_OWORD *)(v19 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *uint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10035FC48(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(*(void *)(a2 + 48) + 8 * v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(*(void *)(v9 + 16));
        unint64_t result = Hasher._finalize()();
        unint64_t v10 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (void *)(v11 + 8 * v3);
          Swift::Int v13 = (void *)(v11 + 8 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *Swift::Int v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_10035FE04(unint64_t a1, uint64_t a2)
{
  return sub_10035FE58(a1, a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier, (void (*)(unsigned char *))&TTRAccountsListsViewModel.ItemIdentifier.hash(into:), (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
}

unint64_t sub_10035FE58(unint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void), void (*a5)(unsigned char *), uint64_t (*a6)(void))
{
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  id v33 = a4;
  uint64_t v32 = a3(0);
  uint64_t v8 = *(void *)(v32 - 8);
  unint64_t result = __chkstk_darwin(v32);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = a2 + 64;
  uint64_t v13 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v14 = (a1 + 1) & ~v13;
  if (((1 << v14) & *(void *)(a2 + 64 + 8 * (v14 >> 6))) != 0)
  {
    uint64_t v15 = ~v13;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v12 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
    {
      unint64_t v16 = (result + 1) & v15;
      uint64_t v17 = *(void *)(v8 + 72);
      do
      {
        int64_t v18 = v17 * v14;
        sub_100368674(*(void *)(a2 + 48) + v17 * v14, (uint64_t)v11, v33);
        Hasher.init(_seed:)();
        v34(v36);
        Swift::Int v19 = Hasher._finalize()();
        unint64_t result = sub_100368744((uint64_t)v11, v35);
        unint64_t v20 = v19 & v15;
        if ((uint64_t)a1 >= (uint64_t)v16)
        {
          if (v20 < v16) {
            goto LABEL_5;
          }
        }
        else if (v20 >= v16)
        {
          goto LABEL_11;
        }
        if ((uint64_t)a1 >= (uint64_t)v20)
        {
LABEL_11:
          uint64_t v21 = *(void *)(a2 + 48);
          unint64_t result = v21 + v17 * a1;
          if ((uint64_t)(v17 * a1) < v18 || result >= v21 + v18 + v17)
          {
            unint64_t result = swift_arrayInitWithTakeFrontToBack();
          }
          else if (v17 * a1 != v18)
          {
            unint64_t result = swift_arrayInitWithTakeBackToFront();
          }
          uint64_t v22 = *(void *)(a2 + 56);
          uint64_t v23 = (void *)(v22 + 8 * a1);
          uint64_t v24 = (void *)(v22 + 8 * v14);
          if (a1 != v14 || (a1 = v14, v23 >= v24 + 1))
          {
            *uint64_t v23 = *v24;
            a1 = v14;
          }
        }
LABEL_5:
        unint64_t v14 = (v14 + 1) & v15;
      }
      while (((*(void *)(v12 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v12 + 8 * (a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v12 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  *uint64_t v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1003600EC(unint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v32 = a3;
  uint64_t v31 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v5 = *(void *)(v31 - 8);
  unint64_t result = __chkstk_darwin(v31);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v13 = (result + 1) & v12;
      uint64_t v14 = *(void *)(v5 + 72);
      while (1)
      {
        int64_t v15 = v14 * v11;
        sub_100368674(*(void *)(a2 + 48) + v14 * v11, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        Hasher.init(_seed:)();
        TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
        Swift::Int v16 = Hasher._finalize()();
        unint64_t result = sub_100368744((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
        unint64_t v17 = v16 & v12;
        if ((uint64_t)a1 >= (uint64_t)v13) {
          break;
        }
        if (v17 < v13) {
          goto LABEL_11;
        }
LABEL_12:
        if ((uint64_t)(v14 * a1) < v15 || *(void *)(a2 + 48) + v14 * a1 >= *(void *)(a2 + 48) + v15 + v14)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v14 * a1 != v15)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(v32(0) - 8) + 72);
        int64_t v20 = v19 * a1;
        unint64_t result = v18 + v19 * a1;
        int64_t v21 = v19 * v11;
        unint64_t v22 = v18 + v19 * v11 + v19;
        if (v20 < v21 || result >= v22)
        {
          unint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v11;
          if (v20 == v21) {
            goto LABEL_6;
          }
          unint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        a1 = v11;
LABEL_6:
        unint64_t v11 = (v11 + 1) & v12;
        if (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          goto LABEL_23;
        }
      }
      if (v17 < v13) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v17) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_23:
    uint64_t v24 = (uint64_t *)(v9 + 8 * (a1 >> 6));
    uint64_t v25 = *v24;
    uint64_t v26 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v24 = (uint64_t *)(v9 + 8 * (a1 >> 6));
    uint64_t v26 = *v24;
    uint64_t v25 = (-1 << a1) - 1;
  }
  *uint64_t v24 = v26 & v25;
  uint64_t v27 = *(void *)(a2 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v29;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1003603D4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v12 = Hasher._finalize()();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v13 = v12 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 < v8) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(a2 + 48);
          int64_t v15 = (_OWORD *)(v14 + 16 * v3);
          Swift::Int v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || v15 >= v16 + 1) {
            *int64_t v15 = *v16;
          }
          uint64_t v17 = *(void *)(a2 + 56);
          unint64_t v18 = v17 + 56 * v3;
          uint64_t v19 = (long long *)(v17 + 56 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v18 >= (unint64_t)v19 + 56))
          {
            long long v9 = *v19;
            long long v10 = v19[1];
            long long v11 = v19[2];
            *(void *)(v18 + 48) = *((void *)v19 + 6);
            *(_OWORD *)(v18 + 16) = v10;
            *(_OWORD *)(v18 + 32) = v11;
            *(_OWORD *)unint64_t v18 = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *int64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1003605C8(int64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v40 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v41 = v13;
      char v38 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v39 = v14;
      uint64_t v37 = v11;
      do
      {
        uint64_t v16 = v8;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v10;
        v39(v7, *(void *)(a2 + 48) + v15 * v10, v4);
        sub_1003687A4(&qword_10078E348, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v19 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v38)(v7, v4);
        unint64_t v20 = v19 & v11;
        if (a1 >= (uint64_t)v40)
        {
          if (v20 >= v40 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(type metadata accessor for TTRUserDefaults.SmartListVersionWarning() - 8)
                            + 72);
            int64_t v25 = v24 * a1;
            unint64_t v26 = v23 + v24 * a1;
            int64_t v27 = v24 * v10;
            unint64_t v28 = v23 + v24 * v10 + v24;
            BOOL v29 = v25 < v27 || v26 >= v28;
            uint64_t v8 = v16;
            if (v29)
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v11 = v37;
            }
            else
            {
              a1 = v10;
              uint64_t v11 = v37;
              if (v25 != v27)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v10;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v40 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v8 = v16;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
}

void sub_100360910(unint64_t a1, uint64_t a2)
{
  uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a2 + 64;
  uint64_t v8 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v9 = (a1 + 1) & ~v8;
  if (((1 << v9) & *(void *)(a2 + 64 + 8 * (v9 >> 6))) != 0)
  {
    uint64_t v10 = ~v8;
    uint64_t v11 = _HashTable.previousHole(before:)();
    if ((*(void *)(v7 + 8 * (v9 >> 6)) & (1 << v9)) != 0)
    {
      unint64_t v12 = (v11 + 1) & v10;
      uint64_t v13 = *(void *)(v4 + 72);
      while (1)
      {
        int64_t v14 = v13 * v9;
        sub_100368674(*(void *)(a2 + 48) + v13 * v9, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        Hasher.init(_seed:)();
        TTRRemindersListViewModel.ItemID.hash(into:)();
        Swift::Int v15 = Hasher._finalize()();
        sub_100368744((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        unint64_t v16 = v15 & v10;
        if ((uint64_t)a1 >= (uint64_t)v12) {
          break;
        }
        if (v16 < v12) {
          goto LABEL_11;
        }
LABEL_12:
        if ((uint64_t)(v13 * a1) < v14 || *(void *)(a2 + 48) + v13 * a1 >= *(void *)(a2 + 48) + v14 + v13)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v13 * a1 != v14)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        uint64_t v17 = 32 * a1;
        if ((uint64_t)(32 * a1) < (uint64_t)(32 * v9)
          || *(void *)(a2 + 56) + 32 * a1 >= *(void *)(a2 + 56) + 32 * v9 + 32)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v9;
          if (v17 == 32 * v9) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v9;
LABEL_6:
        unint64_t v9 = (v9 + 1) & v10;
        if (((*(void *)(v7 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v16 < v12) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v16) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v18 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v7 + 8 * (a1 >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << a1) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
}

void *sub_100360BDC()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C348);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    if (!v19) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    unint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_100360D68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C350);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    unint64_t result = (void *)swift_release();
LABEL_23:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  unint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    unint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    if (__OFADD__(v10++, 1)) {
      goto LABEL_25;
    }
    if (v10 >= v14)
    {
LABEL_21:
      unint64_t result = (void *)swift_release();
      uint64_t v1 = v24;
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    if (!v21) {
      break;
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_100368674(*(void *)(v5 + 48) + v17, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    sub_1003686DC((uint64_t)v4, *(void *)(v7 + 48) + v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v10 + 1;
  if (v10 + 1 >= v14) {
    goto LABEL_21;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    ++v10;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_21;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void *sub_100360FD4()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C358);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    if (!v24) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v21;
    v22[1] = v20;
    swift_retain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_100361174()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_100788DD0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    if (!v18) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

id sub_1003612EC()
{
  return sub_100364AB4(&qword_10079C3C0);
}

void *sub_1003612F8()
{
  return sub_100362FFC(&qword_10078E380);
}

void *sub_100361304()
{
  uint64_t v1 = type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay(0);
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C2F8);
  unint64_t v24 = v0;
  uint64_t v7 = *v0;
  uint64_t v8 = static _DictionaryStorage.copy(original:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    *unint64_t v24 = v9;
    return result;
  }
  unint64_t result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    unint64_t result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 64);
  uint64_t v25 = v7 + 64;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v27 + 72) * v17;
    sub_100368674(*(void *)(v7 + 48) + v18, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    unint64_t v19 = *(void *)(v28 + 72) * v17;
    sub_100368674(*(void *)(v7 + 56) + v19, (uint64_t)v3, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
    sub_1003686DC((uint64_t)v6, *(void *)(v9 + 48) + v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    unint64_t result = (void *)sub_1003686DC((uint64_t)v3, *(void *)(v9 + 56) + v19, type metadata accessor for TTRReminderListEditingPresenter.PendingDisplay);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_23;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10036161C()
{
  return sub_1003645EC(&qword_10079C3B8);
}

void *sub_100361628()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_100792538);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v24);
    ++v9;
    if (!v25)
    {
      int64_t v9 = v24 + 1;
      if (v24 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v6 + 8 * v9);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v15 = __clz(__rbit64(v25)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v20;
    v22[1] = v21;
    id v23 = v17;
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v13) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v6 + 8 * v26);
  if (v25)
  {
    int64_t v9 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v6 + 8 * v9);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003617E0()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C3A0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    unint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    unint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100361998()
{
  sub_10003B754(&qword_10079C378);
  char v38 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = static _DictionaryStorage.copy(original:)();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    uint64_t v37 = v3;
    unint64_t result = (void *)swift_release();
    *char v38 = v37;
    return result;
  }
  unint64_t result = (void *)(v2 + 64);
  unint64_t v5 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  __src = (void *)(v1 + 64);
  BOOL v6 = v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v5;
  uint64_t v42 = v3;
  if (v6)
  {
    unint64_t result = memmove(result, __src, 8 * v5);
    uint64_t v3 = v42;
  }
  int64_t v7 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v8 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(v1 + 64);
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v41 = v1;
  while (1)
  {
    if (v10)
    {
      uint64_t v43 = (v10 - 1) & v10;
      int64_t v44 = v7;
      unint64_t v11 = __clz(__rbit64(v10)) | (v7 << 6);
      uint64_t v12 = v41;
      uint64_t v3 = v42;
      goto LABEL_12;
    }
    int64_t v33 = v7 + 1;
    uint64_t v12 = v41;
    uint64_t v3 = v42;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v33 >= v40) {
      goto LABEL_26;
    }
    unint64_t v34 = *((void *)__src + v33);
    int64_t v35 = v7 + 1;
    if (!v34)
    {
      int64_t v35 = v7 + 2;
      if (v7 + 2 >= v40) {
        goto LABEL_26;
      }
      unint64_t v34 = *((void *)__src + v35);
      if (!v34) {
        break;
      }
    }
LABEL_25:
    uint64_t v43 = (v34 - 1) & v34;
    int64_t v44 = v35;
    unint64_t v11 = __clz(__rbit64(v34)) + (v35 << 6);
LABEL_12:
    uint64_t v13 = 8 * v11;
    unint64_t v14 = *(void **)(*(void *)(v12 + 48) + 8 * v11);
    uint64_t v15 = 112 * v11;
    uint64_t v16 = *(void *)(v12 + 56) + v15;
    uint64_t v17 = *(void *)v16;
    unint64_t v18 = *(void *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    uint64_t v20 = *(void **)(v16 + 24);
    uint64_t v21 = *(void *)(v16 + 40);
    unint64_t v22 = *(void *)(v16 + 48);
    uint64_t v23 = *(void *)(v16 + 56);
    int64_t v24 = *(void **)(v16 + 64);
    uint64_t v25 = *(void *)(v16 + 80);
    char v26 = *(unsigned char *)(v16 + 88);
    uint64_t v27 = *(void *)(v16 + 96);
    char v28 = *(unsigned char *)(v16 + 104);
    char v29 = *(unsigned char *)(v16 + 32);
    char v30 = *(unsigned char *)(v16 + 72);
    *(void *)(*(void *)(v3 + 48) + v13) = v14;
    uint64_t v31 = *(void *)(v3 + 56) + v15;
    *(void *)uint64_t v31 = v17;
    *(void *)(v31 + 8) = v18;
    *(void *)(v31 + 16) = v19;
    *(void *)(v31 + 24) = v20;
    *(unsigned char *)(v31 + 32) = v29;
    *(void *)(v31 + 40) = v21;
    *(void *)(v31 + 48) = v22;
    *(void *)(v31 + 56) = v23;
    *(void *)(v31 + 64) = v24;
    *(unsigned char *)(v31 + 72) = v30;
    *(void *)(v31 + 80) = v25;
    *(unsigned char *)(v31 + 88) = v26;
    *(void *)(v31 + 96) = v27;
    *(unsigned char *)(v31 + 104) = v28;
    id v32 = v14;
    sub_10026D4C8(v17, v18, v19, v20);
    unint64_t result = (void *)sub_10026D4C8(v21, v22, v23, v24);
    unint64_t v10 = v43;
    int64_t v7 = v44;
  }
  uint64_t v36 = v7 + 3;
  if (v7 + 3 >= v40) {
    goto LABEL_26;
  }
  unint64_t v34 = *((void *)__src + v36);
  if (v34)
  {
    int64_t v35 = v7 + 3;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v35 = v36 + 1;
    if (__OFADD__(v36, 1)) {
      break;
    }
    if (v35 >= v40) {
      goto LABEL_26;
    }
    unint64_t v34 = *((void *)__src + v35);
    ++v36;
    if (v34) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100361C14()
{
  uint64_t v35 = type metadata accessor for REMRemindersListDataView.SectionLite();
  uint64_t v1 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C300);
  char v30 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = static _DictionaryStorage.copy(original:)();
  uint64_t v6 = *(void *)(v4 + 16);
  uint64_t v36 = v5;
  if (!v6)
  {
    unint64_t result = (void *)swift_release();
    uint64_t v28 = v36;
    uint64_t v27 = v30;
LABEL_25:
    uint64_t *v27 = v28;
    return result;
  }
  uint64_t v7 = v5;
  unint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    unint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = v36;
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v4 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v31 = v4 + 64;
  int64_t v32 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v33 = v1 + 32;
  uint64_t v34 = v1 + 16;
  uint64_t v14 = v35;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 16 * v16;
    unint64_t v18 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v16);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    unint64_t v21 = *(void *)(v1 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v3, *(void *)(v4 + 56) + v21, v14);
    uint64_t v22 = v36;
    uint64_t v23 = (void *)(*(void *)(v36 + 48) + v17);
    *uint64_t v23 = v19;
    v23[1] = v20;
    (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(v22 + 56) + v21, v3, v14);
    unint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    unint64_t result = (void *)swift_release();
    uint64_t v27 = v30;
    uint64_t v28 = v36;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_100361ED8()
{
  uint64_t v1 = type metadata accessor for REMRemindersListDataView.SectionLite();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C2F0);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (id)swift_release();
    *uint64_t v23 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_10036216C()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C320);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100362310()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C328);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v26 + 72) * v16;
    sub_100368674(*(void *)(v5 + 48) + v17, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    uint64_t v18 = 8 * v16;
    uint64_t v19 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
    sub_1003686DC((uint64_t)v4, *(void *)(v7 + 48) + v17, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    *(void *)(*(void *)(v7 + 56) + v18) = v19;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100362594()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C330);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v21;
    v22[1] = v20;
    swift_retain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10036274C()
{
  uint64_t v39 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v1 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  char v38 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v37 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v36 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C318);
  uint64_t v31 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v41 = v6;
  if (!v7)
  {
    id result = (void *)swift_release();
    uint64_t v29 = v41;
    uint64_t v28 = v31;
LABEL_25:
    *uint64_t v28 = v29;
    return result;
  }
  uint64_t v8 = v6;
  id result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v41;
  }
  uint64_t v32 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5;
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v35 = v1 + 16;
  int64_t v33 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v34 = v1 + 32;
  uint64_t v15 = (uint64_t)v36;
  uint64_t v16 = v39;
  for (uint64_t i = v41;
        ;
        id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v1 + 32))(*(void *)(i + 56) + v22, v24, v16))
  {
    if (v14)
    {
      unint64_t v18 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v19 = v18 | (v11 << 6);
      uint64_t v20 = v40;
      goto LABEL_9;
    }
    int64_t v25 = v11 + 1;
    uint64_t v20 = v40;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v11;
    if (!v26)
    {
      int64_t v11 = v25 + 1;
      if (v25 + 1 >= v33) {
        goto LABEL_23;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v11);
      if (!v26) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v11 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v37 + 72) * v19;
    sub_100368674(*(void *)(v20 + 48) + v21, v15, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    unint64_t v22 = *(void *)(v1 + 72) * v19;
    unint64_t v23 = *(void *)(v20 + 56) + v22;
    unint64_t v24 = v38;
    (*(void (**)(char *, unint64_t, uint64_t))(v1 + 16))(v38, v23, v16);
    sub_1003686DC(v15, *(void *)(i + 48) + v21, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v33)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v28 = v31;
    uint64_t v29 = v41;
    goto LABEL_25;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v27);
  if (v26)
  {
    int64_t v11 = v27;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v11 >= v33) {
      goto LABEL_23;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v11);
    ++v27;
    if (v26) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100362AC8()
{
  uint64_t v1 = type metadata accessor for TTRAccountsListsViewModel.PinnedList();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C310);
  unint64_t v24 = v0;
  uint64_t v7 = *v0;
  uint64_t v8 = static _DictionaryStorage.copy(original:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v24 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 64);
  uint64_t v25 = v7 + 64;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v27 + 72) * v17;
    sub_100368674(*(void *)(v7 + 48) + v18, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    unint64_t v19 = *(void *)(v28 + 72) * v17;
    sub_100368674(*(void *)(v7 + 56) + v19, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
    sub_1003686DC((uint64_t)v6, *(void *)(v9 + 48) + v18, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier);
    id result = (void *)sub_1003686DC((uint64_t)v3, *(void *)(v9 + 56) + v19, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.PinnedList);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_23;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100362DE0()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C338);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v28 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v28 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v28);
    ++v9;
    if (!v29)
    {
      int64_t v9 = v28 + 1;
      if (v28 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v29 = *(void *)(v6 + 8 * v9);
      if (!v29) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v29 - 1) & v29;
    unint64_t v15 = __clz(__rbit64(v29)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = 56 * v15;
    uint64_t v21 = *(void *)(v2 + 56) + v20;
    uint64_t v23 = *(void *)(v21 + 16);
    uint64_t v22 = *(void *)(v21 + 24);
    uint64_t v24 = *(void *)(v21 + 48);
    uint64_t v25 = (void *)(*(void *)(v4 + 48) + v16);
    long long v31 = *(_OWORD *)(v21 + 32);
    long long v26 = *(_OWORD *)v21;
    *uint64_t v25 = v18;
    v25[1] = v19;
    uint64_t v27 = *(void *)(v4 + 56) + v20;
    *(_OWORD *)uint64_t v27 = v26;
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v22;
    *(_OWORD *)(v27 + 32) = v31;
    *(void *)(v27 + 48) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = *((id *)&v31 + 1);
  }
  int64_t v30 = v28 + 2;
  if (v30 >= v13) {
    goto LABEL_26;
  }
  unint64_t v29 = *(void *)(v6 + 8 * v30);
  if (v29)
  {
    int64_t v9 = v30;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v6 + 8 * v9);
    ++v30;
    if (v29) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100362FF0()
{
  return sub_100362FFC(&qword_10078E2D0);
}

void *sub_100362FFC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003B754(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v7 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v16 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    uint64_t v19 = 16 * v16;
    uint64_t v20 = *(void *)(v3 + 56) + v19;
    uint64_t v21 = *(void *)v20;
    LOBYTE(v20) = *(unsigned char *)(v20 + 8);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    uint64_t v22 = *(void *)(v5 + 56) + v19;
    *(void *)uint64_t v22 = v21;
    *(unsigned char *)(v22 + 8) = v20;
    id result = (void *)swift_retain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v14) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v7 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v7 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003631AC()
{
  return sub_1003636EC(&qword_10079C398);
}

char *sub_1003631B8()
{
  uint64_t v1 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
  uint64_t v40 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v39 = (char *)&v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C3D8);
  uint64_t v32 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v42 = v6;
  if (!v7)
  {
    id result = (char *)swift_release();
    uint64_t v30 = v42;
    unint64_t v29 = v32;
LABEL_25:
    *unint64_t v29 = v30;
    return result;
  }
  uint64_t v8 = v6;
  id result = (char *)(v6 + 64);
  int64_t v10 = (char *)(v5 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  uint64_t v33 = v5 + 64;
  if (v8 != v5 || result >= &v10[8 * v11])
  {
    id result = (char *)memmove(result, v10, 8 * v11);
    uint64_t v8 = v42;
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5;
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  uint64_t v36 = v3 + 16;
  int64_t v34 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v35 = v3 + 32;
  uint64_t v17 = v37;
  uint64_t v16 = v38;
  uint64_t v18 = (uint64_t)v39;
  for (uint64_t i = v42;
        ;
        id result = (char *)sub_1003686DC(v18, *(void *)(i + 56) + v25, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning))
  {
    if (v15)
    {
      unint64_t v20 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v21 = v20 | (v12 << 6);
      uint64_t v22 = v41;
      goto LABEL_9;
    }
    int64_t v26 = v12 + 1;
    uint64_t v22 = v41;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    ++v12;
    if (!v27)
    {
      int64_t v12 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v12);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v12 << 6);
LABEL_9:
    unint64_t v23 = *(void *)(v3 + 72) * v21;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v17, *(void *)(v22 + 48) + v23, v16);
    uint64_t v24 = *(void *)(v22 + 56);
    unint64_t v25 = *(void *)(v40 + 72) * v21;
    sub_100368674(v24 + v25, v18, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(i + 48) + v23, v17, v16);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v34)
  {
LABEL_23:
    id result = (char *)swift_release();
    unint64_t v29 = v32;
    uint64_t v30 = v42;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v28);
  if (v27)
  {
    int64_t v12 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v12 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v12);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

id sub_10036352C()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C3E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    unint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003636E0()
{
  return sub_1003636EC(&qword_10079AB70);
}

id sub_1003636EC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003B754(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void **)(*(void *)(v3 + 48) + 8 * v16);
    char v18 = *(unsigned char *)(*(void *)(v3 + 56) + v16);
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = v17;
    *(unsigned char *)(*(void *)(v5 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100363888()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C380);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  unint64_t v23 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v24 + 72) * v17;
    sub_100368674(*(void *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v19 = 32 * v17;
    sub_1000FF6B4(*(void *)(v5 + 56) + v19, (uint64_t)v25);
    sub_1003686DC((uint64_t)v4, *(void *)(v7 + 48) + v18, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    id result = (void *)sub_1000960E8((uint64_t)v25, *(void *)(v7 + 56) + v19);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100363B0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C388);
  uint64_t v5 = *v0;
  uint64_t v6 = static _DictionaryStorage.copy(original:)();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    uint64_t *v1 = v7;
    return result;
  }
  uint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v25 + 72) * v17;
    sub_100368674(*(void *)(v5 + 48) + v18, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v19 = 16 * v17;
    uint64_t v20 = *(void *)(v7 + 48) + v18;
    long long v26 = *(_OWORD *)(*(void *)(v5 + 56) + v19);
    sub_1003686DC((uint64_t)v4, v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    *(_OWORD *)(*(void *)(v7 + 56) + v19) = v26;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_100363D90()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C3B0);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100363F20()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C3A8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1003640C4()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C2E8);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v18;
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10036426C()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C308);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    int64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    int64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    int64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v23 = v19;
    v23[1] = v18;
    uint64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *uint64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100364428()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C340);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 16 * v15;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v21 = v18;
    *(unsigned char *)(v21 + 8) = v17;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1003645E0()
{
  return sub_1003645EC(&qword_10079C2E0);
}

void *sub_1003645EC(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003B754(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100364790()
{
  uint64_t v1 = type metadata accessor for AnyListEntity();
  uint64_t v28 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AnyListEntityID();
  uint64_t v27 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10003B754(&qword_10079C3C8);
  int64_t v24 = v0;
  uint64_t v7 = *v0;
  uint64_t v8 = static _DictionaryStorage.copy(original:)();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *int64_t v24 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 64);
  uint64_t v25 = v7 + 64;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v27 + 72) * v17;
    sub_100368674(*(void *)(v7 + 48) + v18, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    unint64_t v19 = *(void *)(v28 + 72) * v17;
    sub_100368674(*(void *)(v7 + 56) + v19, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
    sub_1003686DC((uint64_t)v6, *(void *)(v9 + 48) + v18, (uint64_t (*)(void))type metadata accessor for AnyListEntityID);
    id result = (void *)sub_1003686DC((uint64_t)v3, *(void *)(v9 + 56) + v19, (uint64_t (*)(void))type metadata accessor for AnyListEntity);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_23;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

id sub_100364AA8()
{
  return sub_100364AB4(&qword_10079C3D0);
}

id sub_100364AB4(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_10003B754(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = static _DictionaryStorage.copy(original:)();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    unint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_100364C54()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C370);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v26 = __clz(__rbit64(v24));
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = v26 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 32 * v15;
    char v18 = *(unsigned char *)(v17 + 8);
    uint64_t v19 = 16 * v15;
    uint64_t v20 = *(void *)(v4 + 48) + v16;
    long long v21 = *(_OWORD *)(v17 + 16);
    long long v22 = *(_OWORD *)(*(void *)(v2 + 56) + v19);
    *(void *)uint64_t v20 = *(void *)v17;
    *(unsigned char *)(v20 + 8) = v18;
    *(_OWORD *)(v20 + 16) = v21;
    *(_OWORD *)(*(void *)(v4 + 56) + v19) = v22;
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_100364E00()
{
  uint64_t v1 = v0;
  sub_10003B754(&qword_10079C368);
  uint64_t v2 = *v0;
  uint64_t v3 = static _DictionaryStorage.copy(original:)();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_100038DC0(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_100038E1C(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100364FC8(void *a1)
{
  uint64_t v184 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v184 - 8);
  __chkstk_darwin(v184);
  uint64_t v183 = (char *)&v164 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v198 = (char *)&v164 - v6;
  uint64_t v187 = sub_10003B754(&qword_10079C1E8);
  uint64_t v174 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v171 = (uint64_t)&v164 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v188 = (uint64_t)&v164 - v9;
  __chkstk_darwin(v10);
  char v185 = (char *)&v164 - v11;
  __chkstk_darwin(v12);
  uint64_t v197 = (char *)&v164 - v13;
  __chkstk_darwin(v14);
  uint64_t v199 = (uint64_t)&v164 - v15;
  __chkstk_darwin(v16);
  uint64_t v196 = (uint64_t)&v164 - v17;
  Swift::Int v18 = a1[1];
  Swift::Int v19 = _minimumMergeRunLength(_:)(v18);
  if (v19 >= v18)
  {
    if (v18 < 0) {
      goto LABEL_139;
    }
    if (v18) {
      sub_100366078(0, v18, 1, a1);
    }
    return;
  }
  if (v18 >= 0) {
    uint64_t v20 = v18;
  }
  else {
    uint64_t v20 = v18 + 1;
  }
  if (v18 < -1) {
    goto LABEL_147;
  }
  Swift::Int v164 = v19;
  uint64_t v176 = v1;
  if (v18 < 2)
  {
    int64_t v23 = _swiftEmptyArrayStorage;
    unint64_t v173 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
    if (v18 != 1)
    {
      unint64_t v26 = _swiftEmptyArrayStorage[2];
      int64_t v25 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      __int16 v175 = v23;
      if (v26 >= 2)
      {
        uint64_t v156 = *a1;
        uint64_t v157 = v174;
        do
        {
          unint64_t v158 = v26 - 2;
          if (v26 < 2) {
            goto LABEL_134;
          }
          if (!v156) {
            goto LABEL_146;
          }
          uint64_t v159 = *(void *)&v25[16 * v158 + 32];
          uint64_t v160 = *(void *)&v25[16 * v26 + 24];
          uint64_t v161 = v176;
          sub_1003665C0(v156 + *(void *)(v157 + 72) * v159, v156 + *(void *)(v157 + 72) * *(void *)&v25[16 * v26 + 16], v156 + *(void *)(v157 + 72) * v160, v173);
          uint64_t v176 = v161;
          if (v161) {
            break;
          }
          if (v160 < v159) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v25 = sub_10047596C((uint64_t)v25);
          }
          if (v158 >= *((void *)v25 + 2)) {
            goto LABEL_136;
          }
          uint64_t v162 = &v25[16 * v158 + 32];
          *(void *)uint64_t v162 = v159;
          *((void *)v162 + 1) = v160;
          unint64_t v163 = *((void *)v25 + 2);
          if (v26 > v163) {
            goto LABEL_137;
          }
          memmove(&v25[16 * v26 + 16], &v25[16 * v26 + 32], 16 * (v163 - v26));
          *((void *)v25 + 2) = v163 - 1;
          unint64_t v26 = v163 - 1;
        }
        while (v163 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v175[2] = 0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v21 = v20 >> 1;
    uint64_t v22 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v22 + 16) = v21;
    int64_t v23 = (void *)v22;
    unint64_t v173 = v22 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80));
  }
  Swift::Int v24 = 0;
  char v181 = (void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v182 = (uint64_t (***)(void))(v3 + 16);
  int64_t v25 = (char *)_swiftEmptyArrayStorage;
  __int16 v175 = v23;
  char v177 = a1;
  while (1)
  {
    Swift::Int v27 = v24 + 1;
    uint64_t v172 = v24;
    if (v24 + 1 < v18)
    {
      uint64_t v166 = (uint64_t (**)(void))*a1;
      uint64_t v28 = v166;
      uint64_t v29 = *(void *)(v174 + 72);
      uint64_t v192 = v29;
      Swift::Int v186 = v24 + 1;
      uint64_t v30 = v196;
      sub_100368518((uint64_t)v166 + v29 * v27, v196);
      sub_100368518((uint64_t)v28 + v29 * v172, v199);
      uint64_t v31 = *(int *)(v187 + 48);
      uint64_t v32 = v197;
      uint64_t v33 = (uint64_t)&v197[v31];
      uint64_t v34 = v30 + v31;
      NSString v195 = (void *)type metadata accessor for UUID();
      uint64_t v191 = *(v195 - 1);
      uint64_t v36 = v191 + 16;
      uint64_t v35 = *(void (**)(void))(v191 + 16);
      ((void (*)(char *, uint64_t, void *))v35)(v32, v30, v195);
      uint64_t v194 = &type metadata accessor for TTRUserDefaults.SmartListVersionWarning;
      sub_100368674(v34, v33, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      uint64_t v37 = *v182;
      Swift::Int v190 = v18;
      uint64_t v38 = v184;
      ((void (*)(char *, uint64_t, uint64_t))v37)(v198, v33, v184);
      uint64_t v193 = &type metadata accessor for TTRUserDefaults.SmartListVersionWarning;
      sub_100368744(v33, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      uint64_t v39 = *(int *)(v187 + 48);
      uint64_t v40 = (uint64_t)&v185[v39];
      uint64_t v41 = v199 + v39;
      uint64_t v179 = v35;
      uint64_t v180 = v36;
      v35();
      sub_100368674(v41, v40, (uint64_t (*)(void))v194);
      uint64_t v42 = v183;
      uint64_t v178 = v37;
      ((void (*)(char *, uint64_t, uint64_t))v37)(v183, v40, v38);
      sub_100368744(v40, (uint64_t (*)(void))v193);
      uint64_t v43 = v198;
      LODWORD(v189) = static Date.> infix(_:_:)();
      int64_t v44 = *v181;
      (*v181)(v42, v38);
      Swift::Int v18 = v190;
      char v170 = v44;
      v44(v43, v38);
      uint64_t v46 = v191 + 8;
      uint64_t v45 = *(void (**)(char *, void *))(v191 + 8);
      uint64_t v47 = v195;
      v45(v185, v195);
      uint64_t v191 = v46;
      uint64_t v169 = v45;
      v45(v197, v47);
      sub_10003B6F8(v199, &qword_10079C1E8);
      sub_10003B6F8(v196, &qword_10079C1E8);
      Swift::Int v24 = v172;
      Swift::Int v27 = v172 + 2;
      if (v172 + 2 < v18)
      {
        uint64_t v165 = v25;
        Swift::Int v168 = v192 * v186;
        uint64_t v48 = v166;
        Swift::Int v167 = v192 * v27;
        while (1)
        {
          Swift::Int v186 = v27;
          uint64_t v49 = v196;
          sub_100368518((uint64_t)v48 + v167, v196);
          uint64_t v193 = v48;
          sub_100368518((uint64_t)v48 + v168, v199);
          uint64_t v50 = v187;
          uint64_t v51 = *(int *)(v187 + 48);
          uint64_t v52 = (uint64_t)&v197[v51];
          uint64_t v53 = v49 + v51;
          uint64_t v54 = v179;
          v179();
          uint64_t v194 = &type metadata accessor for TTRUserDefaults.SmartListVersionWarning;
          sub_100368674(v53, v52, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          uint64_t v55 = v184;
          uint64_t v56 = (void (*)(char *, uint64_t, uint64_t))v178;
          ((void (*)(char *, uint64_t, uint64_t))v178)(v198, v52, v184);
          sub_100368744(v52, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          uint64_t v57 = *(int *)(v50 + 48);
          uint64_t v58 = v185;
          uint64_t v59 = (uint64_t)&v185[v57];
          uint64_t v60 = v199 + v57;
          ((void (*)(char *))v54)(v185);
          sub_100368674(v60, v59, (uint64_t (*)(void))v194);
          uint64_t v61 = v183;
          v56(v183, v59, v55);
          sub_100368744(v59, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          uint64_t v62 = v198;
          LODWORD(v59) = static Date.> infix(_:_:)();
          uint64_t v63 = v170;
          v170(v61, v55);
          v63(v62, v55);
          uint64_t v64 = v195;
          uint64_t v65 = v169;
          v169(v58, v195);
          v65(v197, v64);
          sub_10003B6F8(v199, &qword_10079C1E8);
          sub_10003B6F8(v196, &qword_10079C1E8);
          if ((v189 ^ v59)) {
            break;
          }
          Swift::Int v27 = v186 + 1;
          uint64_t v48 = (uint64_t (**)(void))((char *)v193 + v192);
          Swift::Int v18 = v190;
          if (v190 == v186 + 1)
          {
            Swift::Int v27 = v190;
            a1 = v177;
            int64_t v25 = v165;
            Swift::Int v24 = v172;
            goto LABEL_22;
          }
        }
        a1 = v177;
        int64_t v25 = v165;
        Swift::Int v27 = v186;
        Swift::Int v24 = v172;
        Swift::Int v18 = v190;
      }
LABEL_22:
      int64_t v23 = v175;
      if (v189)
      {
        if (v27 < v24) {
          goto LABEL_140;
        }
        if (v24 < v27)
        {
          uint64_t v165 = v25;
          uint64_t v66 = 0;
          uint64_t v67 = v192 * (v27 - 1);
          Swift::Int v68 = v27 * v192;
          Swift::Int v69 = v24;
          uint64_t v70 = v24 * v192;
          uint64_t v71 = v192;
          do
          {
            if (v69 != v27 + v66 - 1)
            {
              uint64_t v72 = v166;
              if (!v166) {
                goto LABEL_145;
              }
              uint64_t v73 = (char *)v166 + v70;
              sub_100368580((uint64_t)v166 + v70, v171);
              if (v70 < v67 || v73 >= (char *)v72 + v68)
              {
                swift_arrayInitWithTakeFrontToBack();
              }
              else if (v70 != v67)
              {
                swift_arrayInitWithTakeBackToFront();
              }
              sub_100368580(v171, (uint64_t)v72 + v67);
              int64_t v23 = v175;
              uint64_t v71 = v192;
            }
            ++v69;
            --v66;
            v67 -= v71;
            v68 -= v71;
            v70 += v71;
          }
          while (v69 < v27 + v66);
          a1 = v177;
          int64_t v25 = v165;
          Swift::Int v24 = v172;
          Swift::Int v18 = v190;
        }
      }
    }
    if (v27 < v18) {
      break;
    }
LABEL_56:
    if (v27 < v24) {
      goto LABEL_133;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    Swift::Int v186 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      int64_t v25 = sub_100475454(0, *((void *)v25 + 2) + 1, 1, v25);
    }
    unint64_t v105 = *((void *)v25 + 2);
    unint64_t v104 = *((void *)v25 + 3);
    unint64_t v26 = v105 + 1;
    if (v105 >= v104 >> 1) {
      int64_t v25 = sub_100475454((char *)(v104 > 1), v105 + 1, 1, v25);
    }
    *((void *)v25 + 2) = v26;
    unint64_t v106 = v25 + 32;
    uint64_t v107 = &v25[16 * v105 + 32];
    Swift::Int v108 = v186;
    *(void *)uint64_t v107 = v172;
    *((void *)v107 + 1) = v108;
    if (v105)
    {
      while (1)
      {
        unint64_t v109 = v26 - 1;
        if (v26 >= 4)
        {
          uint64_t v114 = &v106[16 * v26];
          uint64_t v115 = *((void *)v114 - 8);
          uint64_t v116 = *((void *)v114 - 7);
          BOOL v120 = __OFSUB__(v116, v115);
          uint64_t v117 = v116 - v115;
          if (v120) {
            goto LABEL_122;
          }
          uint64_t v119 = *((void *)v114 - 6);
          uint64_t v118 = *((void *)v114 - 5);
          BOOL v120 = __OFSUB__(v118, v119);
          uint64_t v112 = v118 - v119;
          char v113 = v120;
          if (v120) {
            goto LABEL_123;
          }
          unint64_t v121 = v26 - 2;
          id v122 = &v106[16 * v26 - 32];
          uint64_t v124 = *(void *)v122;
          uint64_t v123 = *((void *)v122 + 1);
          BOOL v120 = __OFSUB__(v123, v124);
          uint64_t v125 = v123 - v124;
          if (v120) {
            goto LABEL_125;
          }
          BOOL v120 = __OFADD__(v112, v125);
          uint64_t v126 = v112 + v125;
          if (v120) {
            goto LABEL_128;
          }
          if (v126 >= v117)
          {
            uint64_t v144 = &v106[16 * v109];
            uint64_t v146 = *(void *)v144;
            uint64_t v145 = *((void *)v144 + 1);
            BOOL v120 = __OFSUB__(v145, v146);
            uint64_t v147 = v145 - v146;
            if (v120) {
              goto LABEL_132;
            }
            BOOL v137 = v112 < v147;
            goto LABEL_93;
          }
        }
        else
        {
          if (v26 != 3)
          {
            uint64_t v138 = *((void *)v25 + 4);
            uint64_t v139 = *((void *)v25 + 5);
            BOOL v120 = __OFSUB__(v139, v138);
            uint64_t v131 = v139 - v138;
            char v132 = v120;
            goto LABEL_87;
          }
          uint64_t v111 = *((void *)v25 + 4);
          uint64_t v110 = *((void *)v25 + 5);
          BOOL v120 = __OFSUB__(v110, v111);
          uint64_t v112 = v110 - v111;
          char v113 = v120;
        }
        if (v113) {
          goto LABEL_124;
        }
        unint64_t v121 = v26 - 2;
        uint64_t v127 = &v106[16 * v26 - 32];
        uint64_t v129 = *(void *)v127;
        uint64_t v128 = *((void *)v127 + 1);
        BOOL v130 = __OFSUB__(v128, v129);
        uint64_t v131 = v128 - v129;
        char v132 = v130;
        if (v130) {
          goto LABEL_127;
        }
        uint64_t v133 = &v106[16 * v109];
        uint64_t v135 = *(void *)v133;
        uint64_t v134 = *((void *)v133 + 1);
        BOOL v120 = __OFSUB__(v134, v135);
        uint64_t v136 = v134 - v135;
        if (v120) {
          goto LABEL_130;
        }
        if (__OFADD__(v131, v136)) {
          goto LABEL_131;
        }
        if (v131 + v136 >= v112)
        {
          BOOL v137 = v112 < v136;
LABEL_93:
          if (v137) {
            unint64_t v109 = v121;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v132) {
          goto LABEL_126;
        }
        uint64_t v140 = &v106[16 * v109];
        uint64_t v142 = *(void *)v140;
        uint64_t v141 = *((void *)v140 + 1);
        BOOL v120 = __OFSUB__(v141, v142);
        uint64_t v143 = v141 - v142;
        if (v120) {
          goto LABEL_129;
        }
        if (v143 < v131) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v148 = v109 - 1;
        if (v109 - 1 >= v26)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!*a1) {
          goto LABEL_144;
        }
        uint64_t v149 = v25;
        uint64_t v150 = &v106[16 * v148];
        uint64_t v151 = *(void *)v150;
        uint64_t v152 = &v106[16 * v109];
        uint64_t v153 = *((void *)v152 + 1);
        uint64_t v154 = v176;
        sub_1003665C0(*a1 + *(void *)(v174 + 72) * *(void *)v150, *a1 + *(void *)(v174 + 72) * *(void *)v152, *a1 + *(void *)(v174 + 72) * v153, v173);
        uint64_t v176 = v154;
        if (v154) {
          goto LABEL_116;
        }
        if (v153 < v151) {
          goto LABEL_119;
        }
        if (v109 > *((void *)v149 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v150 = v151;
        *(void *)&v106[16 * v148 + 8] = v153;
        unint64_t v155 = *((void *)v149 + 2);
        if (v109 >= v155) {
          goto LABEL_121;
        }
        int64_t v25 = v149;
        unint64_t v26 = v155 - 1;
        memmove(&v106[16 * v109], v152 + 16, 16 * (v155 - 1 - v109));
        *((void *)v149 + 2) = v155 - 1;
        int64_t v23 = v175;
        if (v155 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v26 = 1;
LABEL_14:
    Swift::Int v18 = a1[1];
    Swift::Int v24 = v186;
    if (v186 >= v18) {
      goto LABEL_105;
    }
  }
  if (__OFSUB__(v27, v24)) {
    goto LABEL_138;
  }
  if (v27 - v24 >= v164)
  {
LABEL_55:
    Swift::Int v24 = v172;
    goto LABEL_56;
  }
  if (__OFADD__(v172, v164)) {
    goto LABEL_141;
  }
  if (v172 + v164 >= v18) {
    id v74 = (void (*)(char *, uint64_t))v18;
  }
  else {
    id v74 = (void (*)(char *, uint64_t))(v172 + v164);
  }
  if ((uint64_t)v74 >= v172)
  {
    if ((void (*)(char *, uint64_t))v27 == v74)
    {
      Swift::Int v24 = v172;
      goto LABEL_56;
    }
    uint64_t v165 = v25;
    uint64_t v75 = *(uint64_t (***)(void))(v174 + 72);
    uint64_t v76 = (void)v75 * (v27 - 1);
    uint64_t v178 = v75;
    uint64_t v77 = (void (*)(void))(v27 * (void)v75);
    char v170 = v74;
    do
    {
      uint64_t v79 = 0;
      uint64_t v80 = v172;
      Swift::Int v186 = v27;
      uint64_t v179 = v77;
      uint64_t v180 = v76;
      while (1)
      {
        uint64_t v191 = v80;
        uint64_t v81 = *a1;
        Swift::Int v190 = (Swift::Int)v77 + v79;
        uint64_t v82 = v196;
        sub_100368518((uint64_t)v77 + v79 + v81, v196);
        uint64_t v192 = v79;
        uint64_t v189 = v76 + v79;
        sub_100368518(v76 + v79 + v81, v199);
        uint64_t v83 = v187;
        uint64_t v84 = *(int *)(v187 + 48);
        uint64_t v85 = v197;
        uint64_t v86 = (uint64_t)&v197[v84];
        uint64_t v87 = v82 + v84;
        uint64_t v88 = v82;
        uint64_t v89 = type metadata accessor for UUID();
        uint64_t v90 = *(void *)(v89 - 8);
        NSString v195 = *(void **)(v90 + 16);
        ((void (*)(char *, uint64_t, uint64_t))v195)(v85, v88, v89);
        uint64_t v194 = &type metadata accessor for TTRUserDefaults.SmartListVersionWarning;
        sub_100368674(v87, v86, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        uint64_t v193 = *v182;
        uint64_t v91 = v184;
        ((void (*)(char *, uint64_t, uint64_t))v193)(v198, v86, v184);
        sub_100368744(v86, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        uint64_t v92 = *(int *)(v83 + 48);
        long long v93 = v185;
        uint64_t v94 = (uint64_t)&v185[v92];
        uint64_t v95 = v199 + v92;
        ((void (*)(char *))v195)(v185);
        sub_100368674(v95, v94, (uint64_t (*)(void))v194);
        long long v96 = v183;
        ((void (*)(char *, uint64_t, uint64_t))v193)(v183, v94, v91);
        sub_100368744(v94, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        long long v97 = v198;
        LOBYTE(v95) = static Date.> infix(_:_:)();
        uint64_t v98 = *v181;
        (*v181)(v96, v91);
        v98(v97, v91);
        long long v99 = *(void (**)(char *, uint64_t))(v90 + 8);
        v99(v93, v89);
        v99(v197, v89);
        sub_10003B6F8(v199, &qword_10079C1E8);
        sub_10003B6F8(v196, &qword_10079C1E8);
        if ((v95 & 1) == 0) {
          break;
        }
        a1 = v177;
        uint64_t v100 = *v177;
        if (!*v177) {
          goto LABEL_143;
        }
        uint64_t v77 = v179;
        uint64_t v76 = v180;
        uint64_t v101 = v192;
        uint64_t v102 = v100 + v180 + v192;
        sub_100368580((uint64_t)v179 + v100 + v192, v188);
        Swift::Int v78 = v186;
        swift_arrayInitWithTakeFrontToBack();
        sub_100368580(v188, v102);
        uint64_t v79 = v101 - (void)v178;
        uint64_t v80 = v191 + 1;
        if (v78 == v191 + 1) {
          goto LABEL_48;
        }
      }
      a1 = v177;
      Swift::Int v78 = v186;
      uint64_t v77 = v179;
      uint64_t v76 = v180;
LABEL_48:
      Swift::Int v27 = v78 + 1;
      v76 += (uint64_t)v178;
      uint64_t v77 = (void (*)(void))((char *)v178 + (void)v77);
    }
    while ((void (*)(char *, uint64_t))v27 != v170);
    Swift::Int v27 = (Swift::Int)v170;
    int64_t v23 = v175;
    int64_t v25 = v165;
    goto LABEL_55;
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100366078(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v51 = a1;
  uint64_t v57 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v56 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v72 = (char *)&v49 - v10;
  uint64_t v62 = sub_10003B754(&qword_10079C1E8);
  __chkstk_darwin(v62);
  uint64_t v63 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v55 = (char *)&v49 - v13;
  __chkstk_darwin(v14);
  uint64_t v71 = (char *)&v49 - v15;
  __chkstk_darwin(v16);
  uint64_t v74 = (uint64_t)&v49 - v17;
  __chkstk_darwin(v18);
  uint64_t v70 = (uint64_t)&v49 - v20;
  uint64_t v61 = a3;
  uint64_t v50 = a2;
  if (a3 != a2)
  {
    uint64_t v21 = *(void *)(v19 + 72);
    uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v7 + 16);
    uint64_t v52 = (void (**)(char *, uint64_t))(v7 + 8);
    uint64_t v22 = v21 * (v61 - 1);
    uint64_t v58 = v21;
    uint64_t v23 = v21 * v61;
    uint64_t v54 = a4;
LABEL_5:
    uint64_t v24 = 0;
    uint64_t v66 = v51;
    uint64_t v59 = v23;
    uint64_t v60 = v22;
    while (1)
    {
      uint64_t v69 = v24;
      uint64_t v25 = *a4;
      uint64_t v65 = v23 + v24;
      uint64_t v26 = v70;
      sub_100368518(v23 + v24 + v25, v70);
      uint64_t v64 = v22 + v24;
      sub_100368518(v22 + v24 + v25, v74);
      uint64_t v27 = v62;
      uint64_t v28 = *(int *)(v62 + 48);
      uint64_t v29 = v71;
      uint64_t v30 = (uint64_t)&v71[v28];
      uint64_t v31 = v26;
      uint64_t v32 = v26 + v28;
      uint64_t v73 = type metadata accessor for UUID();
      uint64_t v33 = *(void *)(v73 - 8);
      Swift::Int v68 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
      v68(v29, v31, v73);
      sub_100368674(v32, v30, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      uint64_t v67 = *v53;
      uint64_t v34 = v57;
      v67(v72, v30, v57);
      sub_100368744(v30, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      uint64_t v35 = *(int *)(v27 + 48);
      uint64_t v36 = v55;
      uint64_t v37 = (uint64_t)&v55[v35];
      uint64_t v38 = v74 + v35;
      ((void (*)(char *))v68)(v55);
      sub_100368674(v38, v37, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      uint64_t v39 = v56;
      v67(v56, v37, v34);
      sub_100368744(v37, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
      uint64_t v40 = v72;
      LOBYTE(v38) = static Date.> infix(_:_:)();
      uint64_t v41 = *v52;
      (*v52)(v39, v34);
      uint64_t v42 = v34;
      uint64_t v43 = v69;
      v41(v40, v42);
      int64_t v44 = *(void (**)(char *, uint64_t))(v33 + 8);
      uint64_t v45 = v36;
      uint64_t v23 = v59;
      uint64_t v46 = v73;
      v44(v45, v73);
      v44(v71, v46);
      uint64_t v22 = v60;
      a4 = v54;
      sub_10003B6F8(v74, &qword_10079C1E8);
      sub_10003B6F8(v70, &qword_10079C1E8);
      if ((v38 & 1) == 0)
      {
LABEL_4:
        v22 += v58;
        v23 += v58;
        if (++v61 == v50) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v47 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v48 = v47 + v22 + v43;
      sub_100368580(v47 + v23 + v43, v63);
      swift_arrayInitWithTakeFrontToBack();
      sub_100368580(v63, v48);
      uint64_t v24 = v43 - v58;
      if (v61 == ++v66) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1003665C0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v87 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v86 = (char *)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)&v75 - v11;
  uint64_t v90 = sub_10003B754(&qword_10079C1E8);
  __chkstk_darwin(v90);
  uint64_t v85 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  long long v93 = (char *)&v75 - v14;
  __chkstk_darwin(v15);
  uint64_t v95 = (uint64_t)&v75 - v16;
  __chkstk_darwin(v17);
  uint64_t v92 = (uint64_t)&v75 - v18;
  uint64_t v20 = *(void *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (a2 - a1 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_61;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1) {
    goto LABEL_62;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v20;
  unint64_t v98 = a1;
  unint64_t v97 = a4;
  uint64_t v23 = v21 / v20;
  if (v22 >= v21 / v20)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v20;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v50 = a4 + v25;
      unint64_t v96 = a4 + v25;
      unint64_t v98 = a2;
      if (v25 >= 1 && a1 < a2)
      {
        uint64_t v52 = -v20;
        uint64_t v77 = (void (**)(char *, uint64_t))(v8 + 8);
        Swift::Int v78 = (void (**)(char *, uint64_t))(v8 + 16);
        uint64_t v79 = (uint64_t (***)(void))a1;
        unint64_t v80 = a4;
        uint64_t v76 = v52;
        uint64_t v53 = v85;
        do
        {
          unint64_t v91 = a2;
          unint64_t v88 = a3 + v52;
          unint64_t v89 = a3;
          uint64_t v54 = v92;
          sub_100368518(v50 + v52, v92);
          uint64_t v81 = a2 + v52;
          sub_100368518(a2 + v52, v95);
          uint64_t v55 = v90;
          uint64_t v56 = *(int *)(v90 + 48);
          uint64_t v57 = v93;
          uint64_t v58 = (uint64_t)&v93[v56];
          uint64_t v59 = v54 + v56;
          uint64_t v60 = type metadata accessor for UUID();
          uint64_t v61 = *(void *)(v60 - 8);
          uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v61 + 16);
          v84(v57, v54, v60);
          uint64_t v83 = &type metadata accessor for TTRUserDefaults.SmartListVersionWarning;
          sub_100368674(v59, v58, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          uint64_t v82 = *v78;
          uint64_t v62 = v87;
          ((void (*)(char *, uint64_t, uint64_t))v82)(v94, v58, v87);
          sub_100368744(v58, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          uint64_t v63 = *(int *)(v55 + 48);
          uint64_t v64 = (uint64_t)&v53[v63];
          uint64_t v65 = v95 + v63;
          ((void (*)(char *))v84)(v53);
          sub_100368674(v65, v64, (uint64_t (*)(void))v83);
          uint64_t v66 = v86;
          ((void (*)(char *, uint64_t, uint64_t))v82)(v86, v64, v62);
          sub_100368744(v64, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
          uint64_t v67 = v94;
          LOBYTE(v65) = static Date.> infix(_:_:)();
          Swift::Int v68 = *v77;
          (*v77)(v66, v62);
          v68(v67, v62);
          uint64_t v69 = *(void (**)(char *, uint64_t))(v61 + 8);
          v69(v53, v60);
          v69(v93, v60);
          sub_10003B6F8(v95, &qword_10079C1E8);
          sub_10003B6F8(v92, &qword_10079C1E8);
          if (v65)
          {
            uint64_t v52 = v76;
            a3 = v88;
            if (v89 < v91 || v88 >= v91)
            {
              unint64_t v72 = v81;
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v71 = v79;
              unint64_t v70 = v80;
            }
            else
            {
              uint64_t v71 = v79;
              unint64_t v70 = v80;
              unint64_t v72 = v81;
              if (v89 != v91) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v98 += v52;
          }
          else
          {
            unint64_t v72 = v91;
            unint64_t v73 = v96;
            v96 += v76;
            a3 = v88;
            uint64_t v52 = v76;
            if (v89 < v73 || v88 >= v73)
            {
              swift_arrayInitWithTakeFrontToBack();
              uint64_t v71 = v79;
              unint64_t v70 = v80;
            }
            else
            {
              uint64_t v71 = v79;
              unint64_t v70 = v80;
              if (v89 != v73) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
          }
          unint64_t v50 = v96;
          if (v96 <= v70) {
            break;
          }
          a2 = v72;
        }
        while (v72 > (unint64_t)v71);
      }
      goto LABEL_59;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v20;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v82 = (void (*)(char *, uint64_t))(a4 + v24);
    unint64_t v96 = a4 + v24;
    if (v24 >= 1 && a2 < a3)
    {
      Swift::Int v78 = (void (**)(char *, uint64_t))(v8 + 8);
      uint64_t v79 = (uint64_t (***)(void))(v8 + 16);
      unint64_t v89 = a3;
      uint64_t v81 = v20;
      do
      {
        unint64_t v91 = a2;
        uint64_t v27 = v92;
        sub_100368518(a2, v92);
        sub_100368518(a4, v95);
        uint64_t v28 = v90;
        uint64_t v29 = *(int *)(v90 + 48);
        uint64_t v30 = v93;
        uint64_t v31 = (uint64_t)&v93[v29];
        uint64_t v32 = v27 + v29;
        unint64_t v88 = type metadata accessor for UUID();
        uint64_t v33 = *(void *)(v88 - 8);
        uint64_t v84 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
        v84(v30, v27, v88);
        sub_100368674(v32, v31, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        uint64_t v83 = *v79;
        uint64_t v34 = v87;
        ((void (*)(char *, uint64_t, uint64_t))v83)(v94, v31, v87);
        sub_100368744(v31, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        uint64_t v35 = *(int *)(v28 + 48);
        uint64_t v36 = v85;
        uint64_t v37 = (uint64_t)&v85[v35];
        uint64_t v38 = v95 + v35;
        ((void (*)(char *))v84)(v85);
        sub_100368674(v38, v37, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        uint64_t v39 = v86;
        ((void (*)(char *, uint64_t, uint64_t))v83)(v86, v37, v34);
        sub_100368744(v37, (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
        uint64_t v40 = v94;
        LOBYTE(v38) = static Date.> infix(_:_:)();
        uint64_t v41 = *v78;
        (*v78)(v39, v34);
        v41(v40, v34);
        uint64_t v42 = *(void (**)(char *, unint64_t))(v33 + 8);
        unint64_t v43 = v88;
        v42(v36, v88);
        v42(v93, v43);
        sub_10003B6F8(v95, &qword_10079C1E8);
        sub_10003B6F8(v92, &qword_10079C1E8);
        unint64_t v44 = v98;
        if (v38)
        {
          uint64_t v45 = v81;
          unint64_t v46 = v91 + v81;
          if (v98 < v91 || v98 >= v46)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v47 = v89;
          }
          else
          {
            unint64_t v47 = v89;
            if (v98 == v91) {
              unint64_t v44 = v91;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          unint64_t v48 = v91;
          uint64_t v45 = v81;
          unint64_t v49 = v97 + v81;
          if (v98 < v97 || v98 >= v49)
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v47 = v89;
          }
          else
          {
            unint64_t v47 = v89;
            if (v98 != v97) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v97 = v49;
          unint64_t v46 = v48;
        }
        unint64_t v98 = v44 + v45;
        a4 = v97;
        if (v97 >= (unint64_t)v82) {
          break;
        }
        a2 = v46;
      }
      while (v46 < v47);
    }
LABEL_59:
    sub_100475820(&v98, &v97, (uint64_t *)&v96);
    return 1;
  }
LABEL_63:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_100366F28(uint64_t a1)
{
  return sub_10056FEF4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100366F3C(unint64_t a1)
{
  return sub_10056FF1C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100366F50(unint64_t a1)
{
  return sub_100570280(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_100366F64(uint64_t a1)
{
  return sub_100022F98(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100366F78(unint64_t a1)
{
  return sub_1005709B8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100366F8C(unint64_t a1)
{
  return sub_100570A5C(0, *(void *)(a1 + 16), 0, a1);
}

char *sub_100366FA0(uint64_t a1)
{
  return sub_100570A70(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_100366FB4(unint64_t a1)
{
  return sub_100570D08(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_100366FC8(void *a1)
{
  return sub_100570D1C(0, a1[2], 0, a1);
}

uint64_t sub_100366FDC(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }

  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_100367058(unint64_t a1)
{
  return sub_100571928(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_10036706C(unint64_t a1)
{
  return sub_100571A6C(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100367080(unint64_t a1)
{
  return sub_100571A80(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100367094(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = (void *)result;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!a2) {
      goto LABEL_26;
    }
  }
  else
  {
    uint64_t v8 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!a2) {
      goto LABEL_26;
    }
  }
  if (!a3)
  {
LABEL_27:
    *uint64_t v7 = a4;
    v7[1] = v8;
    return a3;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (!v8)
  {
LABEL_26:
    a3 = 0;
    goto LABEL_27;
  }
  if ((a4 & 0xC000000000000001) != 0)
  {
    BOOL v9 = __OFSUB__(v8--, 1);
    if (!v9)
    {
      uint64_t v10 = 0;
      do
      {
        uint64_t result = specialized _ArrayBuffer._getElementSlowPath(_:)();
        *(void *)(a2 + 8 * v10) = result;
        if (a3 - 1 == v10) {
          goto LABEL_27;
        }
        if (!v8)
        {
          a3 = v10 + 1;
          goto LABEL_27;
        }
        ++v10;
        BOOL v9 = __OFSUB__(v8--, 1);
      }
      while (!v9);
    }
    __break(1u);
  }
  uint64_t v11 = (void *)(v8 - 1);
  if (!__OFSUB__(v8, 1))
  {
    unint64_t v12 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((unint64_t)v11 >= v12)
    {
LABEL_20:
      __break(1u);
    }
    else
    {
      uint64_t v13 = 0;
      while (1)
      {
        uint64_t v11 = *(void **)(a4 + 24 + 8 * v8);
        *(void *)(a2 + 8 * v13) = v11;
        if (a3 - 1 == v13) {
          break;
        }
        if (v8 == 1)
        {
          uint64_t v8 = 0;
          a3 = v13 + 1;
          goto LABEL_22;
        }
        id v14 = v11;
        uint64_t v11 = (void *)(v8 - 2);
        ++v13;
        --v8;
        if ((unint64_t)v11 >= v12) {
          goto LABEL_20;
        }
      }
    }
    --v8;
LABEL_22:
    id v15 = v11;
    goto LABEL_27;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1003671FC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    uint64_t v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1003673FC(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v7 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_1000368FC(0, &qword_100791E78);
    sub_10036860C();
    uint64_t result = (void *)Set.Iterator.init(_cocoa:)();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    uint64_t v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *uint64_t v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return (void *)v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  uint64_t v24 = result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_45;
      }
      sub_1000368FC(0, &qword_100791E78);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      unint64_t v15 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    unint64_t v15 = result;
    if (!result) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_100367708(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v25 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v26 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v27 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v13 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v14 = v13 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v18 = *(void *)(a4 + 56) + 56 * v14;
    uint64_t v20 = *(void *)(v18 + 16);
    uint64_t v19 = *(void *)(v18 + 24);
    uint64_t v21 = *(void *)(v18 + 32);
    uint64_t v22 = *(void **)(v18 + 40);
    uint64_t v23 = *(void *)(v18 + 48);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)v18;
    *(void *)(v10 + 16) = v20;
    *(void *)(v10 + 24) = v19;
    *(void *)(v10 + 32) = v21;
    *(void *)(v10 + 40) = v22;
    *(void *)(v10 + 48) = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v24 = v22;
      goto LABEL_38;
    }
    v10 += 56;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = v22;
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v15 >= v27) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    if (!v16)
    {
      v11 += 2;
      if (v15 + 1 >= v27)
      {
        unint64_t v8 = 0;
        int64_t v11 = v15;
      }
      else
      {
        unint64_t v16 = *(void *)(v5 + 8 * v11);
        if (v16) {
          goto LABEL_14;
        }
        int64_t v17 = v15 + 2;
        if (v15 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v17);
        if (v16)
        {
LABEL_17:
          int64_t v15 = v17;
          goto LABEL_18;
        }
        int64_t v11 = v15 + 3;
        if (v15 + 3 < v27)
        {
          unint64_t v16 = *(void *)(v5 + 8 * v11);
          if (v16)
          {
LABEL_14:
            int64_t v15 = v11;
            goto LABEL_18;
          }
          int64_t v17 = v15 + 4;
          if (v15 + 4 >= v27)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v17);
          if (!v16)
          {
            while (1)
            {
              int64_t v15 = v17 + 1;
              if (__OFADD__(v17, 1)) {
                goto LABEL_42;
              }
              if (v15 >= v27)
              {
                unint64_t v8 = 0;
                int64_t v11 = v27 - 1;
                goto LABEL_37;
              }
              unint64_t v16 = *(void *)(v5 + 8 * v15);
              ++v17;
              if (v16) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v15 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v25;
      uint64_t result = v26;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v11 = v15;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_10036796C(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void sub_100367B00(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  unint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v28 - v13;
  uint64_t v33 = a4;
  uint64_t v16 = a4 + 56;
  uint64_t v15 = *(void *)(a4 + 56);
  uint64_t v30 = -1 << *(unsigned char *)(a4 + 32);
  if (-v30 < 64) {
    uint64_t v17 = ~(-1 << -(char)v30);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
LABEL_34:
    uint64_t v27 = ~v30;
    *a1 = v33;
    a1[1] = v16;
    a1[2] = v27;
    a1[3] = v19;
    a1[4] = v18;
    return;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v29 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v31 = v16;
  int64_t v32 = (unint64_t)(63 - v30) >> 6;
  int64_t v28 = v32 - 1;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v26 = *(void *)(v9 + 72);
    sub_100368674(*(void *)(v33 + 48) + v26 * v22, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1003686DC((uint64_t)v11, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_1003686DC((uint64_t)v14, a2, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (v20 == a3) {
      goto LABEL_33;
    }
    a2 += v26;
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
LABEL_33:
      a1 = v29;
      uint64_t v16 = v31;
      goto LABEL_34;
    }
    uint64_t v16 = v31;
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23;
LABEL_39:
    a1 = v29;
    goto LABEL_34;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v32) {
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v19 = v23 + 3;
  if (v23 + 3 >= v32)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23 + 2;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v19);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v19;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v32)
  {
LABEL_36:
    unint64_t v18 = 0;
    goto LABEL_39;
  }
  unint64_t v24 = *(void *)(v31 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v32)
    {
      unint64_t v18 = 0;
      int64_t v19 = v28;
      goto LABEL_39;
    }
    unint64_t v24 = *(void *)(v31 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
}

void sub_100367E14(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_10003B754(&qword_10079C1E8);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v30 - v12;
  uint64_t v14 = *(void *)(a4 + 64);
  uint64_t v35 = a4 + 64;
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v15 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  if (!a2)
  {
    int64_t v17 = 0;
LABEL_37:
    uint64_t v28 = ~v33;
    uint64_t v29 = v35;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = v28;
    a1[3] = v17;
    a1[4] = v16;
    return;
  }
  if (!a3)
  {
    int64_t v17 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  int64_t v32 = a1;
  int64_t v17 = 0;
  uint64_t v18 = 0;
  int64_t v34 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v34 - 1;
  if (!v16) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v19 = __clz(__rbit64(v16));
  v16 &= v16 - 1;
  unint64_t v20 = v19 | (v17 << 6);
  while (1)
  {
    ++v18;
    uint64_t v24 = *(void *)(a4 + 48);
    uint64_t v25 = type metadata accessor for UUID();
    (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(v10, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v20, v25);
    uint64_t v26 = *(void *)(a4 + 56);
    uint64_t v27 = type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
    sub_100368674(v26 + *(void *)(*(void *)(v27 - 8) + 72) * v20, (uint64_t)&v10[*(int *)(v37 + 48)], (uint64_t (*)(void))&type metadata accessor for TTRUserDefaults.SmartListVersionWarning);
    sub_100368580((uint64_t)v10, (uint64_t)v13);
    sub_100368580((uint64_t)v13, a2);
    if (v18 == a3) {
      goto LABEL_36;
    }
    a2 += *(void *)(v36 + 72);
    if (v16) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v21 >= v34) {
      goto LABEL_32;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    if (!v22) {
      break;
    }
LABEL_18:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v17 = v21;
  }
  v17 += 2;
  if (v21 + 1 >= v34)
  {
    unint64_t v16 = 0;
    int64_t v17 = v21;
    goto LABEL_36;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v17);
  if (v22) {
    goto LABEL_14;
  }
  int64_t v23 = v21 + 2;
  if (v21 + 2 >= v34) {
    goto LABEL_32;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22) {
    goto LABEL_17;
  }
  int64_t v17 = v21 + 3;
  if (v21 + 3 >= v34)
  {
    unint64_t v16 = 0;
    int64_t v17 = v21 + 2;
    goto LABEL_36;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v17);
  if (v22)
  {
LABEL_14:
    int64_t v21 = v17;
    goto LABEL_18;
  }
  int64_t v23 = v21 + 4;
  if (v21 + 4 >= v34)
  {
LABEL_32:
    unint64_t v16 = 0;
LABEL_36:
    a1 = v32;
    goto LABEL_37;
  }
  unint64_t v22 = *(void *)(v35 + 8 * v23);
  if (v22)
  {
LABEL_17:
    int64_t v21 = v23;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v21 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v21 >= v34)
    {
      unint64_t v16 = 0;
      int64_t v17 = v31;
      goto LABEL_36;
    }
    unint64_t v22 = *(void *)(v35 + 8 * v21);
    ++v23;
    if (v22) {
      goto LABEL_18;
    }
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_10036818C(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    uint64_t v5[3] = v12;
    void v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    unint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t *sub_10036838C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  a3[5] = a4;
  a3[6] = a5;
  unint64_t v9 = sub_1000394A8(a3 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a1, a4);
  a3[7] = a2;
  return a3;
}

uint64_t *sub_100368404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a4 - 8);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TTRSmartListVersionWarningInteractor();
  int64_t v12 = (uint64_t *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  void v12[5] = a4;
  void v12[6] = a5;
  uint64_t v13 = sub_1000394A8(v12 + 2);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 32))(v13, v11, a4);
  v12[7] = a2;
  return v12;
}

uint64_t sub_100368518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10079C1E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100368580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10079C1E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TTRSmartListVersionWarningInteractor()
{
  return self;
}

unint64_t sub_10036860C()
{
  unint64_t result = qword_100791E88;
  if (!qword_100791E88)
  {
    sub_1000368FC(255, &qword_100791E78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100791E88);
  }
  return result;
}

uint64_t sub_100368674(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003686DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100368744(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003687A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003687EC(uint64_t a1, void *a2, void *a3, void *aBlock)
{
  uint64_t v6 = *(void (**)(id, id, uint64_t (*)(char), uint64_t))(a1 + 32);
  uint64_t v7 = _Block_copy(aBlock);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  swift_retain();
  id v10 = a2;
  id v9 = a3;
  v6(v10, v9, sub_100397EFC, v8);
  swift_release();
  swift_release();
}

uint64_t sub_1003688C0@<X0>(uint64_t a1@<X8>)
{
  return sub_100368968(&qword_10078E9E0, &qword_10078E9E8, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item, (uint64_t (*)(void))sub_10036CC4C, (void (*)(void))sub_1001465C0, &qword_100788F08, (void (*)(char *))sub_10014A658, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item, a1, (uint64_t *)&unk_100788EF0);
}

uint64_t sub_100368968@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(void)@<X3>, void (*a5)(void)@<X4>, uint64_t *a6@<X5>, void (*a7)(char *)@<X6>, uint64_t (*a8)(void)@<X7>, uint64_t a9@<X8>, uint64_t *a10)
{
  uint64_t v176 = a8;
  char v177 = a4;
  uint64_t v172 = a7;
  uint64_t v178 = a5;
  uint64_t v179 = a6;
  uint64_t v182 = a9;
  char v181 = a10;
  uint64_t v180 = type metadata accessor for Logger();
  uint64_t v157 = *(void *)(v180 - 8);
  uint64_t v14 = __chkstk_darwin(v180);
  v156[2] = (char *)v156 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v156[1] = (char *)v156 - v16;
  uint64_t v17 = type metadata accessor for IndexPath();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = __chkstk_darwin(v17);
  unint64_t v163 = (char *)v156 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  unint64_t v173 = (char *)v156 - v21;
  __int16 v175 = a1;
  uint64_t v22 = sub_10003B754(a1);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  Swift::Int v164 = (char *)v156 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v162 = (char *)v156 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  char v170 = (char *)v156 - v28;
  __chkstk_darwin(v27);
  uint64_t v171 = (char *)v156 - v29;
  uint64_t v174 = sub_10003B754(a2);
  uint64_t v30 = __chkstk_darwin(v174);
  uint64_t v161 = (uint64_t)v156 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v159 = (uint64_t)v156 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  uint64_t v168 = (uint64_t)v156 - v35;
  __chkstk_darwin(v34);
  uint64_t v169 = (uint64_t)v156 - v36;
  uint64_t v37 = a3(0);
  uint64_t v38 = __chkstk_darwin(v37 - 8);
  uint64_t v160 = (uint64_t)v156 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v38);
  uint64_t v158 = (uint64_t)v156 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  uint64_t v166 = (uint64_t)v156 - v43;
  __chkstk_darwin(v42);
  uint64_t v167 = (uint64_t)v156 - v44;
  uint64_t v45 = type metadata accessor for TTRITreeViewDropProposal.Intent(0);
  __chkstk_darwin(v45 - 8);
  unint64_t v47 = (char *)v156 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for TTRITreeViewDropProposal(0);
  __chkstk_darwin(v48);
  unint64_t v50 = (char *)v156 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_10003B754(&qword_10078E8F0);
  uint64_t v52 = __chkstk_darwin(v51 - 8);
  uint64_t v165 = (char *)v156 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __chkstk_darwin(v52);
  uint64_t v56 = (char *)v156 - v55;
  uint64_t v57 = __chkstk_darwin(v54);
  uint64_t v59 = (char *)v156 - v58;
  __chkstk_darwin(v57);
  uint64_t v61 = (char *)v156 - v60;
  id v62 = [*(id *)(v10 + qword_10079BD18) destinationIndexPath];
  if (v62)
  {
    uint64_t v63 = v62;
    static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v64 = v18;
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v65(v59, 0, 1, v17);
  }
  else
  {
    uint64_t v64 = v18;
    uint64_t v65 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
    v65(v59, 1, 1, v17);
  }
  sub_100028C3C((uint64_t)v59, (uint64_t)v61, &qword_10078E8F0);
  uint64_t v66 = (uint64_t *)(v10 + qword_1007BBAC0);
  sub_100034240(v10 + qword_1007BBAC0, (uint64_t)v50, type metadata accessor for TTRITreeViewDropProposal);
  sub_100398360((uint64_t)&v50[*(int *)(v48 + 20)], (uint64_t)v47, type metadata accessor for TTRITreeViewDropProposal.Intent);
  uint64_t v67 = sub_10003B754(&qword_10079BEF0);
  switch((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v67 - 8) + 48))(v47, 4, v67))
  {
    case 1u:
      uint64_t v81 = (uint64_t)v61;
      if ((unint64_t)*v66 < 2) {
        goto LABEL_38;
      }
      if (*v66 == 2)
      {
        sub_10003B694((uint64_t)v61, (uint64_t)v56, &qword_10078E8F0);
        uint64_t v82 = v64;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v56, 1, v17) == 1)
        {
          sub_10003B6F8(v81, &qword_10078E8F0);
          uint64_t v72 = (uint64_t)v56;
        }
        else
        {
          uint64_t v124 = v163;
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v163, v56, v17);
          uint64_t v125 = v17;
          uint64_t v126 = sub_1003772D4(v177);
          uint64_t v128 = v127 & 1;
          uint64_t v129 = (uint64_t)v165;
          (*(void (**)(char *, char *, uint64_t))(v82 + 16))(v165, v124, v17);
          v65((char *)v129, 0, 1, v17);
          uint64_t v130 = (uint64_t)v162;
          ((void (*)(void *, uint64_t, uint64_t))v178)(v126, v128, v129);
          swift_bridgeObjectRelease();
          sub_10003B6F8(v129, &qword_10078E8F0);
          uint64_t v131 = sub_10003B754(v179);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v131 - 8) + 48))(v130, 1, v131) != 1)
          {
            uint64_t v142 = *(void *)(v130 + *(int *)(v131 + 48));
            uint64_t v143 = v174;
            uint64_t v144 = *(int *)(v174 + 48);
            uint64_t v145 = v130;
            uint64_t v146 = v159;
            uint64_t v147 = v176;
            sub_100398360(v145, v159, v176);
            *(void *)(v146 + v144) = v142;
            (*(void (**)(char *, uint64_t))(v82 + 8))(v124, v125);
            sub_10003B6F8(v81, &qword_10078E8F0);
            uint64_t v148 = *(void *)(v146 + *(int *)(v143 + 48));
            uint64_t v149 = v158;
            sub_100398360(v146, v158, v147);
            uint64_t v150 = *(int *)(v131 + 48);
            uint64_t v151 = v182;
            sub_100398360(v149, v182, v147);
            *(void *)(v151 + v150) = v148;
            goto LABEL_40;
          }
          sub_10003B6F8(v130, v175);
          if (qword_1007854D8 != -1) {
            swift_once();
          }
          sub_100018BF8(v180, (uint64_t)qword_10079BD00);
          char v132 = Logger.logObject.getter();
          os_log_type_t v133 = static os_log_type_t.fault.getter();
          if (os_log_type_enabled(v132, v133))
          {
            uint64_t v134 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v134 = 0;
            _os_log_impl((void *)&_mh_execute_header, v132, v133, "Unable to get parent/index", v134, 2u);
            swift_slowDealloc();
          }

          (*(void (**)(char *, uint64_t))(v82 + 8))(v124, v125);
          uint64_t v72 = v81;
        }
        goto LABEL_39;
      }
      if (*v66 == 3)
      {
LABEL_38:
        uint64_t v72 = (uint64_t)v61;
        goto LABEL_39;
      }
      if (qword_1007854D8 != -1) {
        swift_once();
      }
      uint64_t v152 = v180;
      uint64_t v153 = sub_100018BF8(v180, (uint64_t)qword_10079BD00);
      uint64_t v154 = *(void (**)(void, uint64_t, uint64_t))(v157 + 16);
      unint64_t v155 = &v183;
      goto LABEL_62;
    case 2u:
      sub_1003772D4(v177);
      uint64_t v77 = (uint64_t)v171;
      v178();
      swift_bridgeObjectRelease();
      uint64_t v78 = sub_10003B754(v179);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 48))(v77, 1, v78) != 1)
      {
        uint64_t v83 = *(void *)(v77 + *(int *)(v78 + 48));
        uint64_t v84 = v174;
        uint64_t v85 = *(int *)(v174 + 48);
        uint64_t v86 = v77;
        uint64_t v87 = v169;
        unint64_t v88 = v176;
        sub_100398360(v86, v169, v176);
        *(void *)(v87 + v85) = v83;
        sub_10003B6F8((uint64_t)v61, &qword_10078E8F0);
        uint64_t v89 = *(void *)(v87 + *(int *)(v84 + 48));
        uint64_t v90 = v167;
        sub_100398360(v87, v167, v88);
        uint64_t v91 = *(int *)(v78 + 48);
        uint64_t v92 = v90;
        uint64_t v93 = v182;
        uint64_t v94 = v182;
        uint64_t v95 = v88;
        goto LABEL_29;
      }
      sub_10003B6F8(v77, v175);
      if (qword_1007854D8 != -1) {
        swift_once();
      }
      sub_100018BF8(v180, (uint64_t)qword_10079BD00);
      unint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.fault.getter();
      if (!os_log_type_enabled(v73, v74)) {
        goto LABEL_22;
      }
      goto LABEL_20;
    case 3u:
      uint64_t v79 = (uint64_t)v170;
      v172(v61);
      uint64_t v80 = sub_10003B754(v179);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v79, 1, v80) != 1)
      {
        uint64_t v96 = *(void *)(v79 + *(int *)(v80 + 48));
        uint64_t v97 = v174;
        uint64_t v98 = *(int *)(v174 + 48);
        uint64_t v99 = v79;
        uint64_t v100 = v168;
        uint64_t v101 = v176;
        sub_100398360(v99, v168, v176);
        *(void *)(v100 + v98) = v96;
        sub_10003B6F8((uint64_t)v61, &qword_10078E8F0);
        uint64_t v102 = *(void *)(v100 + *(int *)(v97 + 48));
        uint64_t v103 = v166;
        sub_100398360(v100, v166, v101);
        uint64_t v104 = *(int *)(v80 + 48);
        uint64_t v105 = v182;
        sub_100398360(v103, v182, v101);
        *(void *)(v105 + v104) = v102;
        goto LABEL_40;
      }
      sub_10003B6F8(v79, v175);
      if (qword_1007854D8 != -1) {
        swift_once();
      }
      sub_100018BF8(v180, (uint64_t)qword_10079BD00);
      unint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v73, v74))
      {
LABEL_20:
        uint64_t v75 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v75 = 0;
        uint64_t v76 = "Unable to get parent/index";
LABEL_21:
        _os_log_impl((void *)&_mh_execute_header, v73, v74, v76, v75, 2u);
        swift_slowDealloc();
      }
LABEL_22:

      goto LABEL_23;
    case 4u:
      if (qword_1007854D8 != -1) {
        swift_once();
      }
      sub_100018BF8(v180, (uint64_t)qword_10079BD00);
      unint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.fault.getter();
      if (!os_log_type_enabled(v73, v74)) {
        goto LABEL_22;
      }
      uint64_t v75 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v75 = 0;
      uint64_t v76 = "Unexpected unresolved intent";
      goto LABEL_21;
    default:
      uint64_t v68 = v64;
      uint64_t v69 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
      unint64_t v70 = v173;
      v69(v173, v47, v17);
      uint64_t v71 = *v66;
      if ((unint64_t)*v66 < 2)
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v17);
        uint64_t v72 = (uint64_t)v61;
LABEL_39:
        sub_10003B6F8(v72, &qword_10078E8F0);
        goto LABEL_40;
      }
      if (*v66 == 2)
      {
        if (qword_1007854D8 != -1) {
          swift_once();
        }
        sub_100018BF8(v180, (uint64_t)qword_10079BD00);
        unint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v106, v107))
        {
          Swift::Int v108 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)Swift::Int v108 = 0;
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Unexpected operation=.copy for intent=.multiRowReordering", v108, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v17);
LABEL_23:
        uint64_t v72 = (uint64_t)v61;
        goto LABEL_39;
      }
      uint64_t v172 = (void (*)(char *))v17;
      if (v71 != 3)
      {
        if (qword_1007854D8 != -1) {
          swift_once();
        }
        uint64_t v152 = v180;
        uint64_t v153 = sub_100018BF8(v180, (uint64_t)qword_10079BD00);
        uint64_t v154 = *(void (**)(void, uint64_t, uint64_t))(v157 + 16);
        unint64_t v155 = &v184;
LABEL_62:
        v154(*(v155 - 32), v153, v152);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
        sub_1003AA010((uint64_t)"Unknown UIDropOperation", 23, 2);
        __break(1u);
        JUMPOUT(0x100369B7CLL);
      }
      uint64_t v110 = sub_1003772D4(v177);
      uint64_t v112 = v111 & 1;
      uint64_t v113 = (uint64_t)v165;
      uint64_t v114 = v70;
      uint64_t v115 = v70;
      uint64_t v116 = v172;
      (*(void (**)(char *, char *, void (*)(char *)))(v68 + 16))(v165, v114, v172);
      v65((char *)v113, 0, 1, (uint64_t)v116);
      uint64_t v117 = (uint64_t)v164;
      ((void (*)(void *, uint64_t, uint64_t))v178)(v110, v112, v113);
      swift_bridgeObjectRelease();
      sub_10003B6F8(v113, &qword_10078E8F0);
      uint64_t v118 = sub_10003B754(v179);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 48))(v117, 1, v118) == 1)
      {
        sub_10003B6F8(v117, v175);
        if (qword_1007854D8 != -1) {
          swift_once();
        }
        sub_100018BF8(v180, (uint64_t)qword_10079BD00);
        uint64_t v119 = Logger.logObject.getter();
        os_log_type_t v120 = static os_log_type_t.fault.getter();
        BOOL v121 = os_log_type_enabled(v119, v120);
        id v122 = v173;
        if (v121)
        {
          uint64_t v123 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v123 = 0;
          _os_log_impl((void *)&_mh_execute_header, v119, v120, "Unable to get parent/index", v123, 2u);
          swift_slowDealloc();
        }

        (*(void (**)(char *, void (*)(char *)))(v68 + 8))(v122, v172);
        goto LABEL_23;
      }
      uint64_t v135 = *(void *)(v117 + *(int *)(v118 + 48));
      uint64_t v136 = v174;
      uint64_t v137 = *(int *)(v174 + 48);
      uint64_t v138 = v117;
      uint64_t v139 = v161;
      uint64_t v140 = v176;
      sub_100398360(v138, v161, v176);
      *(void *)(v139 + v137) = v135;
      (*(void (**)(char *, void (*)(char *)))(v68 + 8))(v115, v116);
      sub_10003B6F8((uint64_t)v61, &qword_10078E8F0);
      uint64_t v89 = *(void *)(v139 + *(int *)(v136 + 48));
      uint64_t v141 = v160;
      sub_100398360(v139, v160, v140);
      uint64_t v91 = *(int *)(v118 + 48);
      uint64_t v92 = v141;
      uint64_t v93 = v182;
      uint64_t v94 = v182;
      uint64_t v95 = v140;
LABEL_29:
      sub_100398360(v92, v94, v95);
      *(void *)(v93 + v91) = v89;
LABEL_40:
      sub_10003B754(v181);
      return swift_storeEnumTagMultiPayload();
  }
}

void *sub_100369B90(int a1)
{
  int v49 = a1;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v2 - 8);
  uint64_t v58 = (uint64_t)v48 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v68 = *(void **)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v51 = (uint64_t)v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v69 = (uint64_t)v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v64 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_10079CA80);
  __chkstk_darwin(v10 - 8);
  uint64_t v59 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_10003B754(&qword_100788F18);
  uint64_t v12 = *(void *)(v67 - 8);
  uint64_t v13 = __chkstk_darwin(v67);
  uint64_t v65 = (uint64_t)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v56 = (uint64_t)v48 - v15;
  uint64_t v66 = sub_10003B754(&qword_100788F10);
  uint64_t v16 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v18 = (void **)((char *)v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v19 = [*(id *)(v1 + qword_10079BD18) items];
  sub_10003B754(&qword_100788F20);
  unint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  uint64_t v21 = sub_100091BB0(v20, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v22 = *(void *)(v21 + 16);
  if (v22)
  {
    v48[2] = 0;
    uint64_t v23 = v21 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v61 = *(void *)(v16 + 72);
    id v62 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v64 + 48);
    uint64_t v53 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 6);
    uint64_t v54 = (void (**)(char *, uint64_t, uint64_t))(v64 + 32);
    uint64_t v24 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    unint64_t v50 = (void (**)(char *, uint64_t))(v64 + 8);
    uint64_t v55 = v12;
    uint64_t v60 = (unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    v48[1] = v21;
    swift_bridgeObjectRetain();
    uint64_t v68 = _swiftEmptyArrayStorage;
    uint64_t v25 = v7;
    uint64_t v63 = v9;
    uint64_t v64 = v7;
    uint64_t v26 = v59;
    uint64_t v27 = v66;
    uint64_t v52 = v24;
    while (1)
    {
      sub_10003B694(v23, (uint64_t)v18, &qword_100788F10);
      uint64_t v28 = v69;
      sub_10003B694((uint64_t)v18 + *(int *)(v27 + 36), v69, &qword_10078E8F0);
      if ((*v62)(v28, 1, v25) == 1)
      {
        sub_10003B6F8(v69, &qword_10078E8F0);
      }
      else
      {
        uint64_t v29 = v18;
        uint64_t v30 = v25;
        uint64_t v31 = *v54;
        (*v54)(v9, v69, v25);
        uint64_t v32 = (uint64_t)v29 + *(int *)(v27 + 40);
        uint64_t v33 = v58;
        sub_10003B694(v32, v58, (uint64_t *)&unk_100788D10);
        if ((*v53)(v33, 1, v57) != 1)
        {
          uint64_t v35 = v51;
          sub_100398360(v33, v51, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v36 = *v29;
          v31(&v59[*(int *)(v67 + 36)], (uint64_t)v9, v30);
          uint64_t v26 = v59;
          uint64_t v34 = v67;
          sub_100398360(v35, (uint64_t)&v59[*(int *)(v67 + 40)], (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          *uint64_t v26 = v36;
          uint64_t v24 = v52;
          (*v52)(v26, 0, 1, v34);
          id v37 = v36;
          uint64_t v27 = v66;
          uint64_t v18 = v29;
          goto LABEL_11;
        }
        (*v50)(v9, v25);
        sub_10003B6F8(v33, (uint64_t *)&unk_100788D10);
        uint64_t v27 = v66;
        uint64_t v18 = v29;
        uint64_t v24 = v52;
      }
      uint64_t v34 = v67;
      (*v24)(v26, 1, 1, v67);
LABEL_11:
      sub_10003B6F8((uint64_t)v18, &qword_100788F10);
      if ((*v60)(v26, 1, v34) == 1)
      {
        sub_10003B6F8((uint64_t)v26, (uint64_t *)&unk_10079CA80);
        id v9 = v63;
        uint64_t v25 = v64;
      }
      else
      {
        uint64_t v38 = v56;
        sub_100028C3C((uint64_t)v26, v56, &qword_100788F18);
        sub_100028C3C(v38, v65, &qword_100788F18);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v9 = v63;
        uint64_t v40 = v64;
        if (isUniquelyReferenced_nonNull_native) {
          unint64_t v41 = (unint64_t)v68;
        }
        else {
          unint64_t v41 = sub_100570D08(0, v68[2] + 1, 1, (unint64_t)v68);
        }
        unint64_t v43 = *(void *)(v41 + 16);
        unint64_t v42 = *(void *)(v41 + 24);
        uint64_t v44 = v55;
        if (v43 >= v42 >> 1)
        {
          uint64_t v46 = sub_100570D08(v42 > 1, v43 + 1, 1, v41);
          uint64_t v44 = v55;
          unint64_t v41 = v46;
        }
        uint64_t v25 = v40;
        *(void *)(v41 + 16) = v43 + 1;
        unint64_t v45 = (*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
        uint64_t v68 = (void *)v41;
        sub_100028C3C(v65, v41 + v45 + *(void *)(v44 + 72) * v43, &qword_100788F18);
        uint64_t v27 = v66;
      }
      v23 += v61;
      if (!--v22)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = v68;
        unint64_t v70 = v68;
        if (v49) {
          goto LABEL_19;
        }
        return result;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = _swiftEmptyArrayStorage;
  unint64_t v70 = _swiftEmptyArrayStorage;
  if (v49)
  {
LABEL_19:
    sub_1003774A4((uint64_t *)&v70, &qword_100788F18, (uint64_t (*)(uint64_t))sub_100366FB4, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100475690);
    return v70;
  }
  return result;
}

void *sub_10036A388(int a1)
{
  int v50 = a1;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v59 = (uint64_t)v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v69 = *(void **)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v52 = (uint64_t)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v5 - 8);
  uint64_t v70 = (uint64_t)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IndexPath();
  uint64_t v65 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754((uint64_t *)&unk_10079C9E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v60 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_10003B754((uint64_t *)&unk_10079C9C0);
  uint64_t v12 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v66 = (uint64_t)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v57 = (uint64_t)v49 - v15;
  uint64_t v67 = sub_10003B754(&qword_10079C9B8);
  uint64_t v16 = *(void *)(v67 - 8);
  double v17 = __chkstk_darwin(v67);
  id v19 = (void **)((char *)v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v20 = [*(id *)(v1 + qword_10079BD18) items:v17];
  sub_10003B754(&qword_100788F20);
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  uint64_t v22 = sub_10038EFB0(v21, v1);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v23 = *(void *)(v22 + 16);
  if (v23)
  {
    void v49[2] = 0;
    uint64_t v24 = v22 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v62 = *(void *)(v16 + 72);
    uint64_t v63 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48);
    uint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v69 + 6);
    uint64_t v55 = (void (**)(char *, uint64_t, uint64_t))(v65 + 32);
    uint64_t v25 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v51 = (void (**)(char *, uint64_t))(v65 + 8);
    uint64_t v56 = v12;
    uint64_t v61 = (unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    v49[1] = v22;
    swift_bridgeObjectRetain();
    uint64_t v69 = _swiftEmptyArrayStorage;
    uint64_t v26 = v7;
    uint64_t v64 = v9;
    uint64_t v65 = v7;
    uint64_t v27 = v60;
    uint64_t v28 = v67;
    uint64_t v53 = v25;
    while (1)
    {
      sub_10003B694(v24, (uint64_t)v19, &qword_10079C9B8);
      uint64_t v29 = v70;
      sub_10003B694((uint64_t)v19 + *(int *)(v28 + 36), v70, &qword_10078E8F0);
      if ((*v63)(v29, 1, v26) == 1)
      {
        sub_10003B6F8(v70, &qword_10078E8F0);
      }
      else
      {
        uint64_t v30 = v19;
        uint64_t v31 = v26;
        uint64_t v32 = *v55;
        (*v55)(v9, v70, v26);
        uint64_t v33 = (uint64_t)v30 + *(int *)(v28 + 40);
        uint64_t v34 = v59;
        sub_10003B694(v33, v59, (uint64_t *)&unk_100788DC0);
        if ((*v54)(v34, 1, v58) != 1)
        {
          uint64_t v36 = v52;
          sub_100398360(v34, v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          id v37 = *v30;
          v32(&v60[*(int *)(v68 + 36)], (uint64_t)v9, v31);
          uint64_t v27 = v60;
          uint64_t v35 = v68;
          sub_100398360(v36, (uint64_t)&v60[*(int *)(v68 + 40)], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          void *v27 = v37;
          uint64_t v25 = v53;
          (*v53)(v27, 0, 1, v35);
          id v38 = v37;
          uint64_t v28 = v67;
          id v19 = v30;
          goto LABEL_11;
        }
        (*v51)(v9, v26);
        sub_10003B6F8(v34, (uint64_t *)&unk_100788DC0);
        uint64_t v28 = v67;
        id v19 = v30;
        uint64_t v25 = v53;
      }
      uint64_t v35 = v68;
      (*v25)(v27, 1, 1, v68);
LABEL_11:
      sub_10003B6F8((uint64_t)v19, &qword_10079C9B8);
      if ((*v61)(v27, 1, v35) == 1)
      {
        sub_10003B6F8((uint64_t)v27, (uint64_t *)&unk_10079C9E0);
        id v9 = v64;
        uint64_t v26 = v65;
      }
      else
      {
        uint64_t v39 = v57;
        sub_100028C3C((uint64_t)v27, v57, (uint64_t *)&unk_10079C9C0);
        sub_100028C3C(v39, v66, (uint64_t *)&unk_10079C9C0);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v9 = v64;
        uint64_t v41 = v65;
        if (isUniquelyReferenced_nonNull_native) {
          unint64_t v42 = (unint64_t)v69;
        }
        else {
          unint64_t v42 = sub_100571A6C(0, v69[2] + 1, 1, (unint64_t)v69);
        }
        unint64_t v44 = *(void *)(v42 + 16);
        unint64_t v43 = *(void *)(v42 + 24);
        uint64_t v45 = v56;
        if (v44 >= v43 >> 1)
        {
          uint64_t v47 = sub_100571A6C(v43 > 1, v44 + 1, 1, v42);
          uint64_t v45 = v56;
          unint64_t v42 = v47;
        }
        uint64_t v26 = v41;
        *(void *)(v42 + 16) = v44 + 1;
        unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
        uint64_t v69 = (void *)v42;
        sub_100028C3C(v66, v42 + v46 + *(void *)(v45 + 72) * v44, (uint64_t *)&unk_10079C9C0);
        uint64_t v28 = v67;
      }
      v24 += v62;
      if (!--v23)
      {
        swift_bridgeObjectRelease_n();
        uint64_t result = v69;
        uint64_t v71 = v69;
        if (v50) {
          goto LABEL_19;
        }
        return result;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v71 = _swiftEmptyArrayStorage;
  if (v50)
  {
LABEL_19:
    sub_1003774A4((uint64_t *)&v71, (uint64_t *)&unk_10079C9C0, (uint64_t (*)(uint64_t))sub_10036706C, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100475814);
    return v71;
  }
  return result;
}

void sub_10036AB80(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = a1;
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v58 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v2;
  uint64_t v13 = sub_100089354();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v61 = a2;
  uint64_t v63 = sub_100091FDC(a2, v14);
  if (v63)
  {
    if (!*(void *)(v17 + 16)) {
      goto LABEL_43;
    }
    uint64_t v57 = v13;
    uint64_t v20 = sub_10035C1D0(v63);
    if ((v21 & 1) == 0) {
      goto LABEL_43;
    }
    unint64_t v22 = *(void *)(*(void *)(v17 + 56) + 8 * v20);
    unint64_t v51 = v22;
    uint64_t v52 = v4;
    if (v19)
    {
      uint64_t v23 = v63;
      uint64_t Strong = swift_weakLoadStrong();
      swift_retain();
      int v50 = v6;
      uint64_t v25 = 0;
      if (Strong)
      {
        uint64_t v55 = v11;
        uint64_t v56 = v10;
        uint64_t v53 = v15;
        uint64_t v54 = v9;
        uint64_t v62 = v17;
        do
        {
          BOOL v26 = __OFADD__(v25++, 1);
          if (v26)
          {
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            swift_once();
LABEL_47:
            uint64_t v38 = type metadata accessor for Logger();
            sub_100018BF8(v38, (uint64_t)qword_10079BD00);
            sub_100034240(v61, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            uint64_t v39 = Logger.logObject.getter();
            uint64_t v40 = (uint64_t)v6;
            os_log_type_t v41 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v39, v41))
            {
              unint64_t v42 = (uint8_t *)swift_slowAlloc();
              v65[0] = swift_slowAlloc();
              *(_DWORD *)unint64_t v42 = 136315138;
              sub_1003889DC(&qword_10079CA78, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item);
              uint64_t v43 = TTRTreeStorageItem.treeItemDescription.getter();
              uint64_t v64 = sub_1000385A8(v43, v44, v65);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100034624(v40, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v39, v41, "Row for the given item doesn't exist. Make sure the item is added to the tree view first {item: %s}", v42, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_100034624(v40, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            }

            return;
          }
          uint64_t v6 = (char *)Strong;
          swift_beginAccess();
          unint64_t v27 = *(void *)(Strong + 64);
          if (v27 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            if (!v28)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain();
            if (!v28) {
              goto LABEL_7;
            }
          }
          if ((v27 & 0xC000000000000001) != 0)
          {
            uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v29 != v23) {
              goto LABEL_15;
            }
          }
          else
          {
            if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_57;
            }
            uint64_t v29 = *(void *)(v27 + 32);
            swift_retain();
            if (v29 != v23)
            {
LABEL_15:
              uint64_t v30 = 0;
              uint64_t v31 = v28 - 1;
              while (1)
              {
                BOOL v26 = __OFADD__(v25, 1);
                uint64_t v32 = v25 + 1;
                if (v26) {
                  break;
                }
                if (*(unsigned char *)(v29 + 48))
                {
                  v65[0] = 0;
                  sub_10020B4F8(v29, v65);
                  uint64_t v33 = v65[0];
                  *(void *)(v29 + 40) = v65[0];
                  *(unsigned char *)(v29 + 48) = 0;
                }
                else
                {
                  uint64_t v33 = *(void *)(v29 + 40);
                }
                swift_release();
                BOOL v26 = __OFADD__(v32, v33);
                uint64_t v25 = v32 + v33;
                if (v26) {
                  goto LABEL_53;
                }
                if (v31 == v30)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_34;
                }
                unint64_t v34 = v30 + 1;
                if ((v27 & 0xC000000000000001) != 0)
                {
                  uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  if (__OFADD__(v34, 1)) {
                    goto LABEL_54;
                  }
                }
                else
                {
                  if (v34 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_55;
                  }
                  uint64_t v29 = *(void *)(v27 + 8 * v30 + 40);
                  swift_retain();
                  if (__OFADD__(v34, 1)) {
                    goto LABEL_54;
                  }
                }
                ++v30;
                if (v29 == v23) {
                  goto LABEL_33;
                }
              }
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
              goto LABEL_56;
            }
          }
LABEL_33:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_34:
          uint64_t v11 = v55;
          uint64_t v10 = v56;
          id v9 = v54;
LABEL_8:
          uint64_t Strong = swift_weakLoadStrong();
          swift_release();
          uint64_t v23 = (uint64_t)v6;
        }
        while (Strong);
      }
      swift_release();
      if (!__OFSUB__(v25, 1))
      {
        uint64_t v6 = v50;
        if (((v25 - 1) & 0x8000000000000000) == 0) {
          goto LABEL_42;
        }
        goto LABEL_43;
      }
    }
    else
    {
      if ((v22 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v22 < *(void *)(v57 + 16))
      {
        unint64_t v35 = swift_bridgeObjectRetain();
        sub_100091DD8(v35, v63);
        char v37 = v36;
        swift_bridgeObjectRelease();
        if ((v37 & 1) == 0)
        {
LABEL_42:
          IndexPath.init(row:section:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
LABEL_44:
          swift_release();
          goto LABEL_45;
        }
LABEL_43:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        goto LABEL_44;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_45:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10003B6F8((uint64_t)v9, &qword_10078E8F0);
    if (qword_1007854D8 != -1) {
      goto LABEL_58;
    }
    goto LABEL_47;
  }
  uint64_t v45 = v58;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v58, v9, v10);
  unint64_t v46 = *(void **)(v59 + qword_10079BD18);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v48 = [v46 dropItem:v60 toRowAtIndexPath:isa];
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v11 + 8))(v45, v10);
}

void sub_10036B350(uint64_t a1, uint64_t a2)
{
  uint64_t v61 = a1;
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = v2;
  uint64_t v13 = sub_1000890D8();
  uint64_t v15 = v14;
  uint64_t v17 = v16;
  char v19 = v18;
  uint64_t v62 = a2;
  uint64_t v64 = sub_100091DF0(a2, v14);
  if (v64)
  {
    if (!*(void *)(v17 + 16)) {
      goto LABEL_45;
    }
    uint64_t v58 = v13;
    uint64_t v20 = sub_10035C1D0(v64);
    if ((v21 & 1) == 0) {
      goto LABEL_45;
    }
    unint64_t v22 = *(void *)(*(void *)(v17 + 56) + 8 * v20);
    uint64_t v53 = v4;
    unint64_t v52 = v22;
    if (v19)
    {
      uint64_t v23 = v64;
      uint64_t Strong = swift_weakLoadStrong();
      swift_retain();
      unint64_t v51 = v6;
      uint64_t v25 = 0;
      if (Strong)
      {
        uint64_t v56 = v11;
        uint64_t v57 = v10;
        uint64_t v54 = v15;
        uint64_t v55 = v9;
        uint64_t v63 = v17;
        do
        {
          BOOL v26 = __OFADD__(v25++, 1);
          if (v26)
          {
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            swift_once();
LABEL_49:
            uint64_t v37 = type metadata accessor for Logger();
            sub_100018BF8(v37, (uint64_t)qword_10079BD00);
            sub_100034240(v62, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v38 = Logger.logObject.getter();
            uint64_t v39 = (uint64_t)v6;
            os_log_type_t v40 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v38, v40))
            {
              os_log_type_t v41 = (uint8_t *)swift_slowAlloc();
              uint64_t v68 = swift_slowAlloc();
              *(_DWORD *)os_log_type_t v41 = 136315138;
              uint64_t v66 = v10;
              uint64_t v67 = sub_1003889DC((unint64_t *)&qword_10079C1B0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
              unint64_t v42 = sub_1000394A8(v65);
              sub_100034240(v39, (uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_100038D28(v65, v66);
              uint64_t v43 = TTRRemindersListViewModel.Item.debugDescription.getter();
              unint64_t v45 = v44;
              sub_100038CD8((uint64_t)v65);
              v65[0] = sub_1000385A8(v43, v45, &v68);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100034624(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v38, v40, "Row for the given item doesn't exist. Make sure the item is added to the tree view first {item: %s}", v41, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_100034624(v39, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            }

            return;
          }
          uint64_t v6 = (char *)Strong;
          swift_beginAccess();
          unint64_t v27 = *(void *)(Strong + 64);
          if (v27 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();
            if (!v28)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain();
            if (!v28) {
              goto LABEL_7;
            }
          }
          if ((v27 & 0xC000000000000001) != 0)
          {
            uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v29 != v23) {
              goto LABEL_15;
            }
          }
          else
          {
            if (!*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            uint64_t v29 = *(void *)(v27 + 32);
            swift_retain();
            if (v29 != v23)
            {
LABEL_15:
              uint64_t v10 = 0;
              uint64_t v30 = v28 - 1;
              while (1)
              {
                BOOL v26 = __OFADD__(v25, 1);
                uint64_t v31 = v25 + 1;
                if (v26) {
                  break;
                }
                if (*(unsigned char *)(v29 + 48))
                {
                  v65[0] = 0;
                  sub_10020B4F8(v29, v65);
                  uint64_t v32 = v65[0];
                  *(void *)(v29 + 40) = v65[0];
                  *(unsigned char *)(v29 + 48) = 0;
                }
                else
                {
                  uint64_t v32 = *(void *)(v29 + 40);
                }
                swift_release();
                BOOL v26 = __OFADD__(v31, v32);
                uint64_t v25 = v31 + v32;
                if (v26) {
                  goto LABEL_55;
                }
                if (v30 == v10)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_34;
                }
                unint64_t v33 = v10 + 1;
                if ((v27 & 0xC000000000000001) != 0)
                {
                  uint64_t v29 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  if (__OFADD__(v33, 1)) {
                    goto LABEL_56;
                  }
                }
                else
                {
                  if (v33 >= *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_57;
                  }
                  uint64_t v29 = *(void *)(v27 + 8 * v10 + 40);
                  swift_retain();
                  if (__OFADD__(v33, 1)) {
                    goto LABEL_56;
                  }
                }
                ++v10;
                if (v29 == v23) {
                  goto LABEL_33;
                }
              }
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
          }
LABEL_33:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_34:
          uint64_t v11 = v56;
          uint64_t v10 = v57;
          id v9 = v55;
LABEL_8:
          uint64_t Strong = swift_weakLoadStrong();
          swift_release();
          uint64_t v23 = (uint64_t)v6;
        }
        while (Strong);
      }
      swift_release();
      uint64_t v4 = v53;
      if (!__OFSUB__(v25, 1))
      {
        uint64_t v6 = v51;
        if (((v25 - 1) & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
LABEL_46:
          swift_release();
          goto LABEL_47;
        }
LABEL_45:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        goto LABEL_46;
      }
    }
    else
    {
      if ((v22 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v22 < *(void *)(v58 + 16))
      {
        unint64_t v34 = swift_bridgeObjectRetain();
        sub_100091DD8(v34, v64);
        char v36 = v35;
        swift_bridgeObjectRelease();
        if (v36)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
        }
        else
        {
          IndexPath.init(row:section:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
        }
        swift_release();
        uint64_t v4 = v53;
        goto LABEL_47;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    uint64_t v10 = v4;
    sub_10003B6F8((uint64_t)v9, &qword_10078E8F0);
    if (qword_1007854D8 != -1) {
      goto LABEL_60;
    }
    goto LABEL_49;
  }
  unint64_t v46 = v59;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v59, v9, v10);
  uint64_t v47 = *(void **)(v60 + qword_10079BD18);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v49 = [v47 dropItem:v61 toRowAtIndexPath:isa];
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v11 + 8))(v46, v10);
}

void sub_10036BB8C(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v68 = a1;
  uint64_t v12 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for IndexPath();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v66 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = v6;
  uint64_t v21 = sub_100089354();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v69 = a2;
  uint64_t v71 = sub_100091FDC(a2, v22);
  if (v71)
  {
    if (!*(void *)(v25 + 16)) {
      goto LABEL_43;
    }
    uint64_t v65 = v21;
    uint64_t v28 = sub_10035C1D0(v71);
    if ((v29 & 1) == 0) {
      goto LABEL_43;
    }
    unint64_t v30 = *(void *)(*(void *)(v25 + 56) + 8 * v28);
    uint64_t v60 = v12;
    unint64_t v59 = v30;
    if (v27)
    {
      uint64_t v31 = v71;
      uint64_t Strong = swift_weakLoadStrong();
      swift_retain();
      uint64_t v58 = v14;
      uint64_t v33 = 0;
      if (Strong)
      {
        uint64_t v63 = v19;
        uint64_t v64 = v18;
        uint64_t v61 = v23;
        uint64_t v62 = v17;
        uint64_t v70 = v25;
        do
        {
          BOOL v34 = __OFADD__(v33++, 1);
          if (v34)
          {
LABEL_56:
            __break(1u);
LABEL_57:
            __break(1u);
LABEL_58:
            swift_once();
LABEL_47:
            uint64_t v46 = type metadata accessor for Logger();
            sub_100018BF8(v46, (uint64_t)qword_10079BD00);
            sub_100034240(v69, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            uint64_t v47 = Logger.logObject.getter();
            uint64_t v48 = (uint64_t)v14;
            os_log_type_t v49 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v47, v49))
            {
              uint64_t v50 = (uint8_t *)swift_slowAlloc();
              v73[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v50 = 136315138;
              sub_1003889DC(&qword_10079CA78, (void (*)(uint64_t))&type metadata accessor for TTRAccountsListsViewModel.Item);
              uint64_t v51 = TTRTreeStorageItem.treeItemDescription.getter();
              uint64_t v72 = sub_1000385A8(v51, v52, v73);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100034624(v48, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v47, v49, "Row for the given item doesn't exist. {item: %s}", v50, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_100034624(v48, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
            }

            return;
          }
          uint64_t v14 = (char *)Strong;
          swift_beginAccess();
          unint64_t v35 = *(void *)(Strong + 64);
          if (v35 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
            if (!v36)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain();
            if (!v36) {
              goto LABEL_7;
            }
          }
          if ((v35 & 0xC000000000000001) != 0)
          {
            uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v37 != v31) {
              goto LABEL_15;
            }
          }
          else
          {
            if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_57;
            }
            uint64_t v37 = *(void *)(v35 + 32);
            swift_retain();
            if (v37 != v31)
            {
LABEL_15:
              uint64_t v38 = 0;
              uint64_t v39 = v36 - 1;
              while (1)
              {
                BOOL v34 = __OFADD__(v33, 1);
                uint64_t v40 = v33 + 1;
                if (v34) {
                  break;
                }
                if (*(unsigned char *)(v37 + 48))
                {
                  v73[0] = 0;
                  sub_10020B4F8(v37, v73);
                  uint64_t v41 = v73[0];
                  *(void *)(v37 + 40) = v73[0];
                  *(unsigned char *)(v37 + 48) = 0;
                }
                else
                {
                  uint64_t v41 = *(void *)(v37 + 40);
                }
                swift_release();
                BOOL v34 = __OFADD__(v40, v41);
                uint64_t v33 = v40 + v41;
                if (v34) {
                  goto LABEL_53;
                }
                if (v39 == v38)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_34;
                }
                unint64_t v42 = v38 + 1;
                if ((v35 & 0xC000000000000001) != 0)
                {
                  uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  if (__OFADD__(v42, 1)) {
                    goto LABEL_54;
                  }
                }
                else
                {
                  if (v42 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_55;
                  }
                  uint64_t v37 = *(void *)(v35 + 8 * v38 + 40);
                  swift_retain();
                  if (__OFADD__(v42, 1)) {
                    goto LABEL_54;
                  }
                }
                ++v38;
                if (v37 == v31) {
                  goto LABEL_33;
                }
              }
              __break(1u);
LABEL_53:
              __break(1u);
LABEL_54:
              __break(1u);
LABEL_55:
              __break(1u);
              goto LABEL_56;
            }
          }
LABEL_33:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_34:
          uint64_t v19 = v63;
          uint64_t v18 = v64;
          uint64_t v17 = v62;
LABEL_8:
          uint64_t Strong = swift_weakLoadStrong();
          swift_release();
          uint64_t v31 = (uint64_t)v14;
        }
        while (Strong);
      }
      swift_release();
      if (!__OFSUB__(v33, 1))
      {
        uint64_t v14 = v58;
        if (((v33 - 1) & 0x8000000000000000) == 0) {
          goto LABEL_42;
        }
        goto LABEL_43;
      }
    }
    else
    {
      if ((v30 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v30 < *(void *)(v65 + 16))
      {
        unint64_t v43 = swift_bridgeObjectRetain();
        sub_100091DD8(v43, v71);
        char v45 = v44;
        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
        {
LABEL_42:
          IndexPath.init(row:section:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
LABEL_44:
          swift_release();
          goto LABEL_45;
        }
LABEL_43:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        goto LABEL_44;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_45:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_10078E8F0);
    if (qword_1007854D8 != -1) {
      goto LABEL_58;
    }
    goto LABEL_47;
  }
  uint64_t v53 = v66;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v66, v17, v18);
  uint64_t v54 = *(void **)(v67 + qword_10079BD18);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v56 = [v54 dropItem:v68 intoRowAtIndexPath:isa a3 a4 a5 a6];
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v53, v18);
}

void sub_10036C3B0(uint64_t a1, uint64_t a2, double a3, double a4, double a5, double a6)
{
  uint64_t v69 = a1;
  uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for IndexPath();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v67 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v6;
  uint64_t v21 = sub_1000890D8();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  char v27 = v26;
  uint64_t v70 = a2;
  uint64_t v72 = sub_100091DF0(a2, v22);
  if (v72)
  {
    if (!*(void *)(v25 + 16)) {
      goto LABEL_45;
    }
    uint64_t v66 = v21;
    uint64_t v28 = sub_10035C1D0(v72);
    if ((v29 & 1) == 0) {
      goto LABEL_45;
    }
    unint64_t v30 = *(void *)(*(void *)(v25 + 56) + 8 * v28);
    uint64_t v61 = v12;
    unint64_t v60 = v30;
    if (v27)
    {
      uint64_t v31 = v72;
      uint64_t Strong = swift_weakLoadStrong();
      swift_retain();
      unint64_t v59 = v14;
      uint64_t v33 = 0;
      if (Strong)
      {
        uint64_t v65 = v18;
        uint64_t v64 = v19;
        uint64_t v63 = v17;
        uint64_t v62 = v23;
        uint64_t v71 = v25;
        do
        {
          BOOL v34 = __OFADD__(v33++, 1);
          if (v34)
          {
LABEL_58:
            __break(1u);
LABEL_59:
            __break(1u);
LABEL_60:
            swift_once();
LABEL_49:
            uint64_t v45 = type metadata accessor for Logger();
            sub_100018BF8(v45, (uint64_t)qword_10079BD00);
            sub_100034240(v70, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            uint64_t v46 = Logger.logObject.getter();
            uint64_t v47 = (uint64_t)v14;
            os_log_type_t v48 = static os_log_type_t.fault.getter();
            if (os_log_type_enabled(v46, v48))
            {
              os_log_type_t v49 = (uint8_t *)swift_slowAlloc();
              uint64_t v76 = swift_slowAlloc();
              *(_DWORD *)os_log_type_t v49 = 136315138;
              uint64_t v74 = v18;
              uint64_t v75 = sub_1003889DC((unint64_t *)&qword_10079C1B0, (void (*)(uint64_t))&type metadata accessor for TTRRemindersListViewModel.Item);
              uint64_t v50 = sub_1000394A8(v73);
              sub_100034240(v47, (uint64_t)v50, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_100038D28(v73, v74);
              uint64_t v51 = TTRRemindersListViewModel.Item.debugDescription.getter();
              unint64_t v53 = v52;
              sub_100038CD8((uint64_t)v73);
              v73[0] = sub_1000385A8(v51, v53, &v76);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              sub_100034624(v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              _os_log_impl((void *)&_mh_execute_header, v46, v48, "Row for the given item doesn't exist. {item: %s}", v49, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_100034624(v47, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
            }

            return;
          }
          uint64_t v14 = (char *)Strong;
          swift_beginAccess();
          unint64_t v35 = *(void *)(Strong + 64);
          if (v35 >> 62)
          {
            swift_retain();
            swift_bridgeObjectRetain();
            uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
            if (!v36)
            {
LABEL_7:
              swift_release();
              swift_bridgeObjectRelease();
              goto LABEL_8;
            }
          }
          else
          {
            uint64_t v36 = *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_retain();
            swift_bridgeObjectRetain();
            if (!v36) {
              goto LABEL_7;
            }
          }
          if ((v35 & 0xC000000000000001) != 0)
          {
            uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
            if (v37 != v31) {
              goto LABEL_15;
            }
          }
          else
          {
            if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_59;
            }
            uint64_t v37 = *(void *)(v35 + 32);
            swift_retain();
            if (v37 != v31)
            {
LABEL_15:
              uint64_t v18 = 0;
              uint64_t v38 = v36 - 1;
              while (1)
              {
                BOOL v34 = __OFADD__(v33, 1);
                uint64_t v39 = v33 + 1;
                if (v34) {
                  break;
                }
                if (*(unsigned char *)(v37 + 48))
                {
                  v73[0] = 0;
                  sub_10020B4F8(v37, v73);
                  uint64_t v40 = v73[0];
                  *(void *)(v37 + 40) = v73[0];
                  *(unsigned char *)(v37 + 48) = 0;
                }
                else
                {
                  uint64_t v40 = *(void *)(v37 + 40);
                }
                swift_release();
                BOOL v34 = __OFADD__(v39, v40);
                uint64_t v33 = v39 + v40;
                if (v34) {
                  goto LABEL_55;
                }
                if (v38 == v18)
                {
                  swift_release();
                  swift_bridgeObjectRelease();
                  goto LABEL_34;
                }
                unint64_t v41 = v18 + 1;
                if ((v35 & 0xC000000000000001) != 0)
                {
                  uint64_t v37 = specialized _ArrayBuffer._getElementSlowPath(_:)();
                  if (__OFADD__(v41, 1)) {
                    goto LABEL_56;
                  }
                }
                else
                {
                  if (v41 >= *(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                    goto LABEL_57;
                  }
                  uint64_t v37 = *(void *)(v35 + 8 * v18 + 40);
                  swift_retain();
                  if (__OFADD__(v41, 1)) {
                    goto LABEL_56;
                  }
                }
                ++v18;
                if (v37 == v31) {
                  goto LABEL_33;
                }
              }
              __break(1u);
LABEL_55:
              __break(1u);
LABEL_56:
              __break(1u);
LABEL_57:
              __break(1u);
              goto LABEL_58;
            }
          }
LABEL_33:
          swift_bridgeObjectRelease();
          swift_release_n();
LABEL_34:
          uint64_t v18 = v65;
          uint64_t v19 = v64;
          uint64_t v17 = v63;
LABEL_8:
          uint64_t Strong = swift_weakLoadStrong();
          swift_release();
          uint64_t v31 = (uint64_t)v14;
        }
        while (Strong);
      }
      swift_release();
      uint64_t v12 = v61;
      if (!__OFSUB__(v33, 1))
      {
        uint64_t v14 = v59;
        if (((v33 - 1) & 0x8000000000000000) == 0)
        {
          IndexPath.init(row:section:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
LABEL_46:
          swift_release();
          goto LABEL_47;
        }
LABEL_45:
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        goto LABEL_46;
      }
    }
    else
    {
      if ((v30 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v30 < *(void *)(v66 + 16))
      {
        unint64_t v42 = swift_bridgeObjectRetain();
        sub_100091DD8(v42, v72);
        char v44 = v43;
        swift_bridgeObjectRelease();
        if (v44)
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
        }
        else
        {
          IndexPath.init(row:section:)();
          (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v17, 0, 1, v18);
        }
        swift_release();
        uint64_t v12 = v61;
        goto LABEL_47;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
LABEL_47:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    uint64_t v18 = v12;
    sub_10003B6F8((uint64_t)v17, &qword_10078E8F0);
    if (qword_1007854D8 != -1) {
      goto LABEL_60;
    }
    goto LABEL_49;
  }
  uint64_t v54 = v67;
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v67, v17, v18);
  uint64_t v55 = *(void **)(v68 + qword_10079BD18);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v57 = [v55 dropItem:v69 intoRowAtIndexPath:isa a3 a4 a5 a6];
  swift_unknownObjectRelease();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v54, v18);
}

void *sub_10036CC4C(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788D10);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for TTRAccountsListsViewModel.Item();
  uint64_t v7 = *(void *)(v74 - 8);
  uint64_t v8 = __chkstk_darwin(v74);
  uint64_t v62 = (char *)v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v65 = (uint64_t)v58 - v10;
  uint64_t v11 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v77 = (char *)v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v82 - 8);
  __chkstk_darwin(v82);
  unint64_t v73 = (char *)v58 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10079CA80);
  __chkstk_darwin(v15 - 8);
  uint64_t v86 = (char *)v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_10003B754(&qword_100788F18);
  uint64_t v75 = *(void *)(v85 - 8);
  uint64_t v17 = __chkstk_darwin(v85);
  uint64_t v61 = (char *)v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v81 = (uint64_t)v58 - v20;
  __chkstk_darwin(v19);
  uint64_t v72 = (uint64_t)v58 - v21;
  uint64_t v84 = sub_10003B754(&qword_100788F10);
  uint64_t v22 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v24 = (void **)((char *)v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v25 = [*(id *)(v2 + qword_10079BD18) items];
  sub_10003B754(&qword_100788F20);
  unint64_t v26 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  uint64_t v27 = sub_100091BB0(v26, v2);
  uint64_t v60 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = v27;
  uint64_t v29 = *(void *)(v27 + 16);
  uint64_t v63 = v7;
  if (v29)
  {
    uint64_t v71 = v6;
    int v59 = v3;
    uint64_t v30 = v28 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v79 = *(void *)(v22 + 72);
    uint64_t v80 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    uint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v70 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v78 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v75 + 56);
    uint64_t v64 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v31 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v75 + 48);
    v58[1] = v28;
    swift_bridgeObjectRetain();
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v32 = (uint64_t)v77;
    uint64_t v33 = v84;
    uint64_t v68 = v31;
    uint64_t v67 = v24;
    uint64_t v34 = v82;
    while (1)
    {
      sub_10003B694(v30, (uint64_t)v24, &qword_100788F10);
      sub_10003B694((uint64_t)v24 + *(int *)(v33 + 36), v32, &qword_10078E8F0);
      if ((*v80)(v32, 1, v34) == 1)
      {
        sub_10003B6F8(v32, &qword_10078E8F0);
      }
      else
      {
        uint64_t v83 = (void *)v3;
        unint64_t v35 = v86;
        uint64_t v36 = v73;
        uint64_t v76 = *v70;
        v76(v73, v32, v34);
        uint64_t v37 = (uint64_t)v71;
        sub_10003B694((uint64_t)v24 + *(int *)(v33 + 40), (uint64_t)v71, (uint64_t *)&unk_100788D10);
        if ((*v69)(v37, 1, v74) != 1)
        {
          uint64_t v39 = v37;
          uint64_t v40 = v65;
          sub_100398360(v39, v65, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          uint64_t v24 = v67;
          uint64_t v66 = *v67;
          v76(&v35[*(int *)(v85 + 36)], (uint64_t)v36, v34);
          uint64_t v32 = (uint64_t)v77;
          sub_100398360(v40, (uint64_t)&v35[*(int *)(v85 + 40)], (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
          unint64_t v41 = v66;
          *(void *)unint64_t v35 = v66;
          (*v78)(v35, 0, 1, v85);
          id v42 = v41;
          uint64_t v33 = v84;
          uint64_t v38 = v85;
          unint64_t v3 = (unint64_t)v83;
          uint64_t v31 = v68;
          goto LABEL_11;
        }
        (*v64)(v36, v34);
        sub_10003B6F8(v37, (uint64_t *)&unk_100788D10);
        unint64_t v3 = (unint64_t)v83;
        uint64_t v33 = v84;
        uint64_t v24 = v67;
        uint64_t v31 = v68;
      }
      uint64_t v38 = v85;
      (*v78)(v86, 1, 1, v85);
LABEL_11:
      sub_10003B6F8((uint64_t)v24, &qword_100788F10);
      if ((*v31)((uint64_t)v86, 1, v38) == 1)
      {
        sub_10003B6F8((uint64_t)v86, (uint64_t *)&unk_10079CA80);
      }
      else
      {
        uint64_t v43 = v72;
        sub_100028C3C((uint64_t)v86, v72, &qword_100788F18);
        sub_100028C3C(v43, v81, &qword_100788F18);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v3 = sub_100570D08(0, *(void *)(v3 + 16) + 1, 1, v3);
        }
        unint64_t v45 = *(void *)(v3 + 16);
        unint64_t v44 = *(void *)(v3 + 24);
        if (v45 >= v44 >> 1) {
          unint64_t v3 = sub_100570D08(v44 > 1, v45 + 1, 1, v3);
        }
        *(void *)(v3 + 16) = v45 + 1;
        sub_100028C3C(v81, v3+ ((*(unsigned __int8 *)(v75 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v75 + 80))+ *(void *)(v75 + 72) * v45, &qword_100788F18);
        uint64_t v32 = (uint64_t)v77;
        uint64_t v33 = v84;
      }
      v30 += v79;
      if (!--v29)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v46 = (void *)v3;
        LOBYTE(v3) = v59;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v46 = _swiftEmptyArrayStorage;
LABEL_19:
  uint64_t v87 = v46;
  uint64_t v47 = (uint64_t)v62;
  uint64_t v48 = (uint64_t)v61;
  if (v3)
  {
    sub_1003774A4((uint64_t *)&v87, &qword_100788F18, (uint64_t (*)(uint64_t))sub_100366FB4, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100475690);
    uint64_t v46 = v87;
  }
  int64_t v49 = v46[2];
  uint64_t v50 = v63;
  if (v49)
  {
    uint64_t v87 = _swiftEmptyArrayStorage;
    sub_1004D3954(0, v49, 0);
    uint64_t v51 = *(unsigned __int8 *)(v75 + 80);
    uint64_t v83 = v46;
    uint64_t v52 = (uint64_t)v46 + ((v51 + 32) & ~v51);
    uint64_t v53 = *(void *)(v75 + 72);
    do
    {
      sub_10003B694(v52, v48, &qword_100788F18);
      sub_100034240(v48 + *(int *)(v85 + 40), v47, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      sub_10003B6F8(v48, &qword_100788F18);
      uint64_t v54 = v87;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3954(0, v54[2] + 1, 1);
        uint64_t v54 = v87;
      }
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      if (v56 >= v55 >> 1)
      {
        sub_1004D3954(v55 > 1, v56 + 1, 1);
        uint64_t v54 = v87;
      }
      v54[2] = v56 + 1;
      sub_100398360(v47, (uint64_t)v54+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v56, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      v52 += v53;
      --v49;
    }
    while (v49);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v54;
}

void *sub_10036D604(int a1)
{
  uint64_t v2 = v1;
  LODWORD(v3) = a1;
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v7 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v63 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v66 = (uint64_t)v59 - v10;
  uint64_t v11 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v11 - 8);
  uint64_t v78 = (char *)v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = type metadata accessor for IndexPath();
  uint64_t v13 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v74 = (char *)v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_10003B754((uint64_t *)&unk_10079C9E0);
  __chkstk_darwin(v15 - 8);
  uint64_t v87 = (char *)v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_10003B754((uint64_t *)&unk_10079C9C0);
  uint64_t v76 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v62 = (char *)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v82 = (uint64_t)v59 - v19;
  __chkstk_darwin(v20);
  uint64_t v73 = (uint64_t)v59 - v21;
  uint64_t v85 = sub_10003B754(&qword_10079C9B8);
  uint64_t v22 = *(void *)(v85 - 8);
  double v23 = __chkstk_darwin(v85);
  id v25 = (void **)((char *)v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v26 = [*(id *)(v2 + qword_10079BD18) items:v23];
  sub_10003B754(&qword_100788F20);
  unint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_retain();
  uint64_t v28 = sub_10038EFB0(v27, v2);
  uint64_t v61 = 0;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v29 = v28;
  uint64_t v30 = *(void *)(v28 + 16);
  uint64_t v64 = v7;
  if (v30)
  {
    uint64_t v72 = v6;
    int v60 = v3;
    uint64_t v31 = v29 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
    uint64_t v80 = *(void *)(v22 + 72);
    uint64_t v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    uint64_t v70 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v71 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
    uint64_t v79 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v76 + 56);
    uint64_t v65 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v32 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
    v59[1] = v29;
    swift_bridgeObjectRetain();
    unint64_t v3 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v33 = (uint64_t)v78;
    uint64_t v34 = v85;
    uint64_t v69 = v32;
    uint64_t v68 = v25;
    uint64_t v35 = v83;
    while (1)
    {
      sub_10003B694(v31, (uint64_t)v25, &qword_10079C9B8);
      sub_10003B694((uint64_t)v25 + *(int *)(v34 + 36), v33, &qword_10078E8F0);
      if ((*v81)(v33, 1, v35) == 1)
      {
        sub_10003B6F8(v33, &qword_10078E8F0);
      }
      else
      {
        uint64_t v84 = (void *)v3;
        uint64_t v36 = v87;
        uint64_t v37 = v74;
        uint64_t v77 = *v71;
        v77(v74, v33, v35);
        uint64_t v38 = (uint64_t)v72;
        sub_10003B694((uint64_t)v25 + *(int *)(v34 + 40), (uint64_t)v72, (uint64_t *)&unk_100788DC0);
        if ((*v70)(v38, 1, v75) != 1)
        {
          uint64_t v40 = v38;
          uint64_t v41 = v66;
          sub_100398360(v40, v66, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          id v25 = v68;
          uint64_t v67 = *v68;
          v77(&v36[*(int *)(v86 + 36)], (uint64_t)v37, v35);
          uint64_t v33 = (uint64_t)v78;
          sub_100398360(v41, (uint64_t)&v36[*(int *)(v86 + 40)], (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          id v42 = v67;
          *(void *)uint64_t v36 = v67;
          (*v79)(v36, 0, 1, v86);
          id v43 = v42;
          uint64_t v34 = v85;
          uint64_t v39 = v86;
          unint64_t v3 = (unint64_t)v84;
          uint64_t v32 = v69;
          goto LABEL_11;
        }
        (*v65)(v37, v35);
        sub_10003B6F8(v38, (uint64_t *)&unk_100788DC0);
        unint64_t v3 = (unint64_t)v84;
        uint64_t v34 = v85;
        id v25 = v68;
        uint64_t v32 = v69;
      }
      uint64_t v39 = v86;
      (*v79)(v87, 1, 1, v86);
LABEL_11:
      sub_10003B6F8((uint64_t)v25, &qword_10079C9B8);
      if ((*v32)((uint64_t)v87, 1, v39) == 1)
      {
        sub_10003B6F8((uint64_t)v87, (uint64_t *)&unk_10079C9E0);
      }
      else
      {
        uint64_t v44 = v73;
        sub_100028C3C((uint64_t)v87, v73, (uint64_t *)&unk_10079C9C0);
        sub_100028C3C(v44, v82, (uint64_t *)&unk_10079C9C0);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v3 = sub_100571A6C(0, *(void *)(v3 + 16) + 1, 1, v3);
        }
        unint64_t v46 = *(void *)(v3 + 16);
        unint64_t v45 = *(void *)(v3 + 24);
        if (v46 >= v45 >> 1) {
          unint64_t v3 = sub_100571A6C(v45 > 1, v46 + 1, 1, v3);
        }
        *(void *)(v3 + 16) = v46 + 1;
        sub_100028C3C(v82, v3+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v46, (uint64_t *)&unk_10079C9C0);
        uint64_t v33 = (uint64_t)v78;
        uint64_t v34 = v85;
      }
      v31 += v80;
      if (!--v30)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v47 = (void *)v3;
        LOBYTE(v3) = v60;
        goto LABEL_19;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v47 = _swiftEmptyArrayStorage;
LABEL_19:
  unint64_t v88 = v47;
  uint64_t v48 = (uint64_t)v63;
  uint64_t v49 = (uint64_t)v62;
  if (v3)
  {
    sub_1003774A4((uint64_t *)&v88, (uint64_t *)&unk_10079C9C0, (uint64_t (*)(uint64_t))sub_10036706C, (void (*)(unint64_t *, unint64_t *, unint64_t *))sub_100475814);
    uint64_t v47 = v88;
  }
  int64_t v50 = v47[2];
  uint64_t v51 = v64;
  if (v50)
  {
    unint64_t v88 = _swiftEmptyArrayStorage;
    sub_1004D3504(0, v50, 0);
    uint64_t v52 = *(unsigned __int8 *)(v76 + 80);
    uint64_t v84 = v47;
    uint64_t v53 = (uint64_t)v47 + ((v52 + 32) & ~v52);
    uint64_t v54 = *(void *)(v76 + 72);
    do
    {
      sub_10003B694(v53, v49, (uint64_t *)&unk_10079C9C0);
      sub_100034240(v49 + *(int *)(v86 + 40), v48, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      sub_10003B6F8(v49, (uint64_t *)&unk_10079C9C0);
      unint64_t v55 = v88;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1004D3504(0, v55[2] + 1, 1);
        unint64_t v55 = v88;
      }
      unint64_t v57 = v55[2];
      unint64_t v56 = v55[3];
      if (v57 >= v56 >> 1)
      {
        sub_1004D3504(v56 > 1, v57 + 1, 1);
        unint64_t v55 = v88;
      }
      long long v55[2] = v57 + 1;
      sub_100398360(v48, (uint64_t)v55+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v57, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      v53 += v54;
      --v50;
    }
    while (v50);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v55;
}

void sub_10036DFBC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    TTRRemindersListItemStateTracker.fullfil(_:of:)();
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E034(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1003FF3D8(a2);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036E0A8(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = (void *)result;
    unsigned int v5 = sub_100080D38(a2);

    return (v5 >> 8) & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036E110(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    unsigned int v5 = (void *)result;
    char v6 = sub_100380D2C(a1, a2);

    return v6 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036E18C(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v5 = (void *)Strong;
    if (sub_100080D38(a1))
    {
      sub_100034240(a1, a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.Item();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a2, 0, 1, v7);
    }
    else
    {
      uint64_t v6 = type metadata accessor for TTRAccountsListsViewModel.Item();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a2, 1, 1, v6);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E290(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    sub_100380EA8(a1, a2, a3);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E30C(uint64_t a1@<X1>, uint64_t (*a2)(void)@<X3>, uint64_t (*a3)(void)@<X4>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_100034240(a1, a4, a2);
    uint64_t v10 = a3(0);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a4, 0, 1, v10);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E3D4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v5 = (void *)Strong;
    sub_1000810E8(a1, a2);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E448(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
LABEL_6:

    goto LABEL_7;
  }
  unsigned int v5 = Strong;
  id v6 = [Strong view];
  if (v6)
  {
    uint64_t v2 = v6;
    type metadata accessor for TTRIAccountsListsTreeView(0);
    if (swift_dynamicCastClass())
    {
      sub_1002C1340(a2, 0);

      return;
    }
    goto LABEL_6;
  }
LABEL_7:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10036E540(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unsigned int v5 = (void *)Strong;
    sub_1003812F4(a1, a2);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036E5BC()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_10079CA90);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TTRIAccountsListsSelection(0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    sub_10003B694(Strong + OBJC_IVAR____TtC9Reminders31TTRIAccountsListsViewController_lastAppliedSelection, (uint64_t)v2, (uint64_t *)&unk_10079CA90);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
    {
      sub_10003B6F8((uint64_t)v2, (uint64_t *)&unk_10079CA90);
    }
    else
    {
      sub_100398360((uint64_t)v2, (uint64_t)v6, type metadata accessor for TTRIAccountsListsSelection);
      sub_10007E938((uint64_t)v6, 0, 0);
      sub_100034624((uint64_t)v6, type metadata accessor for TTRIAccountsListsSelection);
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036E784(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    sub_100034240(a2, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
    BOOL v8 = swift_getEnumCaseMultiPayload() - 4 < 3;
    sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036E88C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036E8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v7 = (void *)result;
    uint64_t v8 = a4(a2);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_10036E95C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = result;
    uint64_t result = *(void **)(a1 + qword_1007A59E8);
    if (result)
    {
      char v6 = sub_1003F7014(a2, (char)[result isEditing]);

      return (void *)(v6 & 1);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_10036E9F4()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 1;
  }
  else
  {
    __break(1u);
  }
}

void sub_10036EA54()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10002A958();
    sub_1000262A4(1);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036EAB4()
{
  swift_beginAccess();
  uint64_t Strong = (unsigned char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Strong[OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_treeViewHasSwipedItem] = 0;
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036EB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t *a7)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v12 = (void *)result;
    sub_10003B694(a4, a1, a7);

    return a5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036EB98(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void *)(a1 + 16);
    uint64_t v7 = type metadata accessor for TTRAccountsListsViewModel.Item();
    uint64_t v8 = *(void *)(v7 - 8);
    if (v6)
    {
      sub_100034240(a1+ ((*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80)), a2, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      uint64_t v9 = 0;
    }
    else
    {
      uint64_t v9 = 1;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036EC98(uint64_t a1@<X1>, char a2@<W2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    sub_1003F4E7C(a1, a2 & 1, a3, a4);
  }
  else
  {
    __break(1u);
  }
}

void *sub_10036ED3C()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036ED90()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  else {
    __break(1u);
  }
}

void *sub_10036EDE0()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {

    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036EE34()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = *(void *)(result + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    char v4 = (*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 216))(ObjectType);

    return v4 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036EEC8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  else {
    __break(1u);
  }
}

void sub_10036EF18(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    a4(a2);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036EF8C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  else {
    __break(1u);
  }
}

void sub_10036EFDC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v1 = (void *)Strong;
  if (!*(void *)(Strong
                  + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_automaticSubtaskSelectionController))
  {
LABEL_13:
    __break(1u);
    return;
  }
  swift_retain();
  sub_10004AC2C();
  swift_release();
  id v2 = [v1 parentViewController];
  if (v2)
  {
    uint64_t v3 = v2;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      char v4 = v3;
    }
    else {
      char v4 = 0;
    }
    if (v4)
    {
      sub_10033C13C(1, 0);
      sub_10033D6DC();
    }
  }
  else
  {
    uint64_t v3 = v1;
  }
}

id sub_10036F0C4(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  id result = (id)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v4 = result;
    id result = [result view];
    if (result)
    {
      uint64_t v5 = result;
      id v6 = sub_100415158(a2);

      return v6;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10036F164(char *a1, uint64_t a2, double a3, double a4)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    sub_10038178C(a1, a2, a3, a4);
    uint64_t v11 = v10;

    return v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10036F1F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = (void *)Strong;
    uint64_t v7 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + 744))(a2, a3, ObjectType);
  }
  else
  {
    __break(1u);
  }
}

void sub_10036F2A4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = (void *)Strong;
  char v4 = *(void **)(a1 + qword_1007A59E8);
  if (!v4)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v5 = [v4 contextMenuInteraction];
  if (v5)
  {
    id v6 = v5;
    [v5 locationInView:a1];
    id v9 = sub_1003758B8(v7, v8);
    if (v9)
    {
      id v10 = v9;
      type metadata accessor for TTRIAccountsListsViewListCell(0);
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v11
                                                                       + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge))
                                        + 0x1D0))(1);
        uint64_t v12 = v10;
      }
      else
      {
        uint64_t v12 = v6;
        id v6 = v10;
      }

      uint64_t v3 = v12;
    }

    uint64_t v3 = v6;
  }
}

void sub_10036F3D8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  else {
    __break(1u);
  }
}

void sub_10036F428(uint64_t a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = (void *)Strong;
  char v4 = *(void **)(a1 + qword_1007A59E8);
  if (!v4)
  {
LABEL_12:
    __break(1u);
    return;
  }
  id v5 = [v4 contextMenuInteraction];
  if (v5)
  {
    id v6 = v5;
    [v5 locationInView:a1];
    id v9 = sub_1003758B8(v7, v8);
    if (v9)
    {
      id v10 = v9;
      type metadata accessor for TTRIAccountsListsViewListCell(0);
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        (*(void (**)(void))((swift_isaMask & **(void **)(v11
                                                                      + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge))
                                       + 0x1D0))(0);
        uint64_t v12 = v10;
      }
      else
      {
        uint64_t v12 = v6;
        id v6 = v10;
      }

      uint64_t v3 = v12;
    }

    uint64_t v3 = v6;
  }
}

void sub_10036F55C()
{
  uint64_t v0 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v0 - 8);
  id v2 = &v7[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v4 = (void *)Strong;
    uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = (uint64_t)v4 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_contextMenuOriginatorItem;
    swift_beginAccess();
    sub_10000A550((uint64_t)v2, v6, (uint64_t *)&unk_100788DC0);
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_10036F680(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for TTRAccountsListsViewModel.Item();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    JUMPOUT(0x10036F7DCLL);
  }
  double v7 = (void *)Strong;
  sub_100034240(a2, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
    case 4u:
    case 5u:
    case 6u:
    case 0xDu:
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);
      unsigned int v9 = [v7 isEditing];

      uint64_t result = v9 ^ 1;
      break;
    default:
      sub_100034624((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.Item);

      uint64_t result = 0;
      break;
  }
  return result;
}

void sub_10036F814()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_100390BA8();
  }
  else
  {
    __break(1u);
  }
}

void sub_10036F884()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong) {

  }
  else {
    __break(1u);
  }
}

uint64_t sub_10036F8DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    double v7 = (void *)result;
    uint64_t v8 = sub_10038222C(a1, a2, a3);

    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10036F960(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t *)(v3 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  *uint64_t v6 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v9 = qword_10078DEF8;
    *(unsigned char *)(v3 + qword_10078DEF8) = 0;
    if (*(void *)(v8 + 16) <= *(void *)(a1 + 16) >> 3)
    {
      swift_bridgeObjectRetain();
      sub_1001317F4(v8);
      uint64_t v10 = (void *)a1;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_1001636F0(v8, a1);
    }
    if (*(void *)(v7 + 16) <= v10[2] >> 3) {
      sub_1001317F4(v7);
    }
    else {
      sub_1001636F0(v7, (uint64_t)v10);
    }
    if (*(void *)(a1 + 16) <= *(void *)(v8 + 16) >> 3)
    {
      sub_1001317F4(a1);
      uint64_t v12 = (void *)v8;
    }
    else
    {
      uint64_t v12 = sub_1001636F0(a1, v8);
    }
    if (*(void *)(v7 + 16) <= v12[2] >> 3) {
      sub_1001317F4(v7);
    }
    else {
      sub_1001636F0(v7, (uint64_t)v12);
    }
    uint64_t v13 = swift_bridgeObjectRelease();
    __chkstk_darwin(v13);
    sub_100136390(0, 0, 0, 0, v3, (void (*)(uint64_t))sub_10038EF6C);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v3 + v9) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10036FB7C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t *)(v3 + qword_10078DEE8);
  swift_beginAccess();
  uint64_t v8 = *v6;
  uint64_t v7 = v6[1];
  *uint64_t v6 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a2)
  {
    uint64_t v9 = qword_10078DEF8;
    *(unsigned char *)(v3 + qword_10078DEF8) = 0;
    if (*(void *)(v8 + 16) <= *(void *)(a1 + 16) >> 3)
    {
      swift_bridgeObjectRetain();
      sub_100131DDC(v8);
      uint64_t v10 = (void *)a1;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_100163DF0(v8, a1);
    }
    if (*(void *)(v7 + 16) <= v10[2] >> 3) {
      sub_100131DDC(v7);
    }
    else {
      sub_100163DF0(v7, (uint64_t)v10);
    }
    if (*(void *)(a1 + 16) <= *(void *)(v8 + 16) >> 3)
    {
      sub_100131DDC(a1);
      uint64_t v12 = (void *)v8;
    }
    else
    {
      uint64_t v12 = sub_100163DF0(a1, v8);
    }
    if (*(void *)(v7 + 16) <= v12[2] >> 3) {
      sub_100131DDC(v7);
    }
    else {
      sub_100163DF0(v7, (uint64_t)v12);
    }
    uint64_t v13 = swift_bridgeObjectRelease();
    __chkstk_darwin(v13);
    sub_10013A560(0, 0, 0, 0, v3, (void (*)(uint64_t))sub_100398140);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    *(unsigned char *)(v3 + v9) = 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_10036FD98(void *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[qword_10078DE78] = 0;
  *(void *)&v2[qword_10078DE80] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v6 = qword_10078DE90;
  sub_10003B754((uint64_t *)&unk_10079BAC0);
  swift_allocObject();
  uint64_t v7 = v2;
  uint64_t v18 = TTRTreeViewCollapsedStatesInMemoryPersistence.init()();
  sub_10003B754(&qword_10079C820);
  swift_allocObject();
  sub_100037EA0(&qword_10079BAD0, (uint64_t *)&unk_10079BAC0);
  *(void *)&v2[v6] = TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)();
  *(void *)&v7[qword_10078DEB0] = 0;
  *(void *)&v7[qword_10078DEB8] = 0;
  *(void *)&v7[qword_10078DEC0] = 0;
  *(void *)&v7[qword_10078DEC8] = 0;
  uint64_t v8 = &v7[qword_10078DED0];
  *(void *)uint64_t v8 = 0;
  *((void *)v8 + 1) = 0;
  v8[24] = 0;
  *((void *)v8 + 2) = 0;
  v7[qword_10078DED8] = 0;
  *(void *)&v7[qword_10078DEE0] = 0;
  uint64_t v9 = &v7[qword_10078DEE8];
  *(void *)uint64_t v9 = &_swiftEmptySetSingleton;
  *((void *)v9 + 1) = &_swiftEmptySetSingleton;
  *(void *)&v7[qword_10078DEF0] = &_swiftEmptySetSingleton;
  v7[qword_10078DEF8] = 1;
  *(void *)&v7[qword_10078DF00] = 0;
  uint64_t v10 = qword_10078DF08;
  type metadata accessor for TTRListContentsPrefetchExtender();
  swift_allocObject();
  *(void *)&v7[v10] = TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)();
  swift_unknownObjectUnownedInit();
  *(void *)&v7[qword_10078DEA0] = a2;
  uint64_t v11 = &v7[qword_10078DEA8];
  *((void *)v11 + 3) = sub_1000368FC(0, (unint64_t *)&qword_10078E3B0);
  *((void *)v11 + 4) = &off_100754710;
  *(void *)uint64_t v11 = a2;
  id v12 = a2;

  v17.receiver = v7;
  v17.super_class = ObjectType;
  uint64_t v13 = (char *)[super init];
  swift_retain();
  uint64_t v14 = TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter();
  swift_release();
  uint64_t v18 = v14;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10003B754(&qword_10079C800);
  sub_100037EA0(&qword_10078CAC0, &qword_10079C800);
  uint64_t v15 = Publisher.sink(receiveCompletion:receiveValue:)();
  swift_release();
  swift_release();
  *(void *)&v13[qword_10078DF00] = v15;

  swift_release();
  return v13;
}

id sub_100370108()
{
  *(void *)(v0 + qword_10078DEB0) = 0;
  swift_release();
  uint64_t v1 = qword_10078DEA0;
  [*(id *)(v0 + qword_10078DEA0) setDataSource:0];
  uint64_t v2 = v0 + qword_10078DED0;
  uint64_t v3 = *(void *)(v0 + qword_10078DED0);
  *(void *)uint64_t v2 = 0;
  *(void *)(v2 + 8) = 0;
  *(void *)(v2 + 16) = 0;
  *(unsigned char *)(v2 + 24) = 0;
  sub_1000349CC(v3);
  *(void *)(v0 + qword_10078DEB8) = 0;
  swift_release();
  *(void *)(v0 + qword_10078DEC0) = 0;
  swift_release();
  [*(id *)(v0 + v1) setPrefetchDataSource:0];
  *(void *)(v0 + qword_10078DEC8) = 0;
  swift_release();
  [*(id *)(v0 + v1) setDelegate:0];
  sub_1000217FC(0, &qword_10078DE78, (uint64_t)&qword_1007A38B8, (const char **)&selRef_setDragDelegate_);
  return sub_1000217FC(0, &qword_10078DE80, (uint64_t)&qword_10079BDA8, (const char **)&selRef_setDropDelegate_);
}

uint64_t sub_100370220(uint64_t a1)
{
  return sub_1003702C8(a1, (void (*)(void))sub_100089354, (uint64_t (*)(uint64_t))sub_100091FDC, (uint64_t (*)(uint64_t, uint64_t))sub_100136378, sub_10035C1D0);
}

uint64_t sub_100370274(uint64_t a1)
{
  return sub_1003702C8(a1, (void (*)(void))sub_1000890D8, (uint64_t (*)(uint64_t))sub_100091DF0, (uint64_t (*)(uint64_t, uint64_t))sub_100136378, sub_10035C1D0);
}