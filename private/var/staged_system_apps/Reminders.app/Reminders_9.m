void *sub_100620A98(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  int v7;
  size_t v8;
  size_t v9;
  uint64_t v10;
  void (*v11)(void *, void, uint64_t, uint64_t);
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  size_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  char v37;
  void *v38;
  unint64_t v39;
  int v40;
  char v41;
  unsigned int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unint64_t v46;
  uint64_t v47;
  int v48;
  char v49;
  int v50;
  int v51;
  char v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  uint64_t v56;
  unint64_t v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  char v63;
  int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  char v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  unsigned int v82;
  unsigned int v83;
  uint64_t v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  uint64_t v88;
  int v89;
  unsigned char *v90;
  unsigned char *v91;
  unsigned char *v92;
  unsigned char *v93;
  unsigned char *v94;
  unsigned char *v95;
  long long v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  unsigned int v102;
  unsigned int v103;
  uint64_t v104;
  unint64_t v105;
  long long v106;
  unint64_t v107;
  int v108;
  char v109;
  char v110;
  void (*v111)(unint64_t, uint64_t, uint64_t);
  uint64_t v112;
  uint64_t v113;
  void (*v114)(unint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  void (*v117)(unint64_t, uint64_t, uint64_t);
  uint64_t v118;
  uint64_t v119;
  void (*v120)(unint64_t, uint64_t, uint64_t);
  uint64_t v121;
  uint64_t v122;
  long long v123;
  void (*v124)(unint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  void (*v127)(unint64_t, uint64_t, uint64_t);
  uint64_t v128;
  uint64_t v129;
  void (*v130)(unint64_t, uint64_t, uint64_t);
  uint64_t v131;
  uint64_t v132;
  void (*v133)(unint64_t, uint64_t, uint64_t);
  uint64_t v134;
  uint64_t v135;
  long long v136;
  void (*v137)(unint64_t, uint64_t, uint64_t);
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  unint64_t v141;
  long long v142;
  long long v143;
  long long v144;
  long long v145;
  long long v146;
  long long v147;
  void (*v148)(unint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  long long v153;
  long long v154;
  long long v155;
  long long v156;
  long long v157;
  long long v158;
  unsigned int v159;
  uint64_t v160;
  BOOL v161;
  uint64_t v162;
  unint64_t v163;
  unint64_t v164;
  unsigned int v165;
  uint64_t v166;
  unint64_t v167;
  unsigned int v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  long long v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  long long v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  long long v189;
  uint64_t v190;
  uint64_t v191;
  size_t v192;

  v5 = *(void *)(a3 + 16);
  v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    v7 = *(_DWORD *)(v6 + 84);
    v8 = *(void *)(v6 + 64);
    if (v7) {
      v9 = v8;
    }
    else {
      v9 = v8 + 1;
    }
    memcpy(a1, a2, v9);
  }
  else
  {
    (*(void (**)(void *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
    v11 = *(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56);
    v10 = v6 + 56;
    v11(a1, 0, 1, v5);
    v7 = *(_DWORD *)(v10 + 28);
    v8 = *(void *)(v10 + 8);
  }
  if (v7) {
    v12 = v8;
  }
  else {
    v12 = v8 + 1;
  }
  v192 = v12;
  v191 = type metadata accessor for Date();
  v13 = *(void *)(v191 - 8);
  v14 = v13;
  v15 = *(_DWORD *)(v13 + 80) & 0xF8;
  v16 = v15 | 7;
  v190 = type metadata accessor for REMHashtagLabelSpecifier();
  v17 = *(void *)(v190 - 8);
  v18 = v17;
  v19 = *(unsigned __int8 *)(v17 + 80);
  v20 = type metadata accessor for AnyTip();
  v21 = v15 | 7;
  v22 = v13;
  v23 = v20;
  v24 = *(void *)(v20 - 8);
  v25 = v24;
  v26 = *(unsigned __int8 *)(v24 + 80);
  v27 = v19 | v26 | v15 | 7;
  v28 = *(void *)(v13 + 64);
  if (v28 <= 0x19) {
    v29 = 25;
  }
  else {
    v29 = *(void *)(v13 + 64);
  }
  v30 = v29 + 1;
  v31 = (((v29 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  v32 = v15 + 15;
  v33 = *(void *)(v17 + 64) + ((v19 + 8) & ~v19);
  if (v29 + 1 + ((v15 + 15) & (unint64_t)~v16) > v31) {
    v31 = v29 + 1 + ((v15 + 15) & ~v16);
  }
  if (v31 <= ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    v31 = ((v33 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v31 <= (v28 & 0xFFFFFFFFFFFFFFF8) + 16) {
    v34 = (v28 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    v34 = v31;
  }
  v35 = *(void *)(v24 + 64) + ((v26 + 1) & ~v26);
  if (v34 > v35) {
    v35 = v34;
  }
  if (v35 <= 0x18) {
    v36 = 24;
  }
  else {
    v36 = v35;
  }
  v37 = 8 * v36;
  v38 = a1;
  v39 = (unint64_t)&a2[v27 + v192];
  if (v36 > 3)
  {
    v40 = 11;
LABEL_27:
    v41 = 8;
    goto LABEL_28;
  }
  v45 = ((1 << v37) + 1) >> v37;
  if (v45 > 0xFFF5)
  {
    v43 = 0x7FFFFFFF;
    goto LABEL_37;
  }
  v40 = v45 + 10;
  if (v45 <= 0xF5) {
    goto LABEL_27;
  }
  v41 = 16;
LABEL_28:
  v42 = (1 << v41) - v40;
  v43 = 0x7FFFFFFF;
  if (v42 <= 0x7FFFFFFF) {
    v44 = 0x7FFFFFFF;
  }
  else {
    v44 = v42;
  }
  if ((v42 & 0x80000000) == 0) {
    v43 = v44;
  }
LABEL_37:
  v46 = ((unint64_t)a1 + v27 + v192) & ~v27;
  v47 = v39 & ~v27;
  if (v36 > 3)
  {
    v48 = 11;
LABEL_39:
    v49 = 8;
    goto LABEL_40;
  }
  v54 = ((1 << v37) + 1) >> v37;
  if (v54 > 0xFFF5) {
    goto LABEL_51;
  }
  v48 = v54 + 10;
  if (v54 <= 0xF5) {
    goto LABEL_39;
  }
  v49 = 16;
LABEL_40:
  v50 = (1 << v49) - v48;
  if ((v50 & 0x80000000) == 0)
  {
    if (v50 == v43) {
      goto LABEL_42;
    }
LABEL_52:
    if (v36 > 3) {
      goto LABEL_56;
    }
    v55 = ((1 << v37) + 1) >> v37;
    v56 = 2;
    if (v55 > 0xFFF5) {
      v56 = 4;
    }
    if (v55 <= 0xF5) {
LABEL_56:
    }
      v56 = 1;
    v57 = *(void *)((((v36 + v47 + v56) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
    if (v57 >= 0xFFFFFFFF) {
      LODWORD(v57) = -1;
    }
    if (v57 != -1) {
      goto LABEL_197;
    }
LABEL_99:
    if (v36 > 3)
    {
LABEL_100:
      v76 = *(unsigned __int8 *)(v47 + v36);
      goto LABEL_105;
    }
    v77 = ((1 << v37) + 1) >> v37;
    if (v77 > 0xFFF5)
    {
      v76 = *(_DWORD *)(v47 + v36);
    }
    else
    {
      if (v77 <= 0xF5) {
        goto LABEL_100;
      }
      v76 = *(unsigned __int16 *)(v47 + v36);
    }
LABEL_105:
    v78 = v76 - 10;
    if (v76 >= 0xA)
    {
      if (v36 <= 3) {
        v79 = v36;
      }
      else {
        v79 = 4;
      }
      switch(v79)
      {
        case 1:
          v80 = *(unsigned __int8 *)v47;
          if (v36 < 4) {
            goto LABEL_117;
          }
          goto LABEL_118;
        case 2:
          v80 = *(unsigned __int16 *)v47;
          if (v36 >= 4) {
            goto LABEL_118;
          }
          goto LABEL_117;
        case 3:
          v80 = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
          if (v36 >= 4) {
            goto LABEL_118;
          }
          goto LABEL_117;
        case 4:
          v80 = *(_DWORD *)v47;
          if (v36 < 4) {
LABEL_117:
          }
            v80 |= v78 << v37;
LABEL_118:
          v76 = v80 + 10;
          break;
        default:
          break;
      }
    }
    v81 = ~v21;
    switch(v76)
    {
      case 0u:
        v82 = *(unsigned __int8 *)(v47 + v29);
        v83 = v82 - 10;
        if (v82 >= 0xA)
        {
          if (v29 <= 3) {
            v84 = v29;
          }
          else {
            v84 = 4;
          }
          switch(v84)
          {
            case 1:
              v85 = *(unsigned __int8 *)v47;
              goto LABEL_224;
            case 2:
              v85 = *(unsigned __int16 *)v47;
              goto LABEL_224;
            case 3:
              v85 = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
              goto LABEL_224;
            case 4:
              v85 = *(_DWORD *)v47;
LABEL_224:
              if (v29 < 4) {
                v82 = (v85 | (v83 << (8 * v29))) + 10;
              }
              else {
                v82 = v85 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v82)
        {
          case 1u:
            *(void *)v46 = *(void *)v47;
            v109 = 1;
            break;
          case 2u:
            v111 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v112 = v29;
            v113 = v29 + 1;
            v111(v46, v47, v191);
            v30 = v113;
            v29 = v112;
            v109 = 2;
            break;
          case 3u:
            v114 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v115 = v29;
            v116 = v29 + 1;
            v114(v46, v47, v191);
            v30 = v116;
            v29 = v115;
            v109 = 3;
            break;
          case 4u:
            v117 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v118 = v29;
            v119 = v29 + 1;
            v117(v46, v47, v191);
            v30 = v119;
            v29 = v118;
            v109 = 4;
            break;
          case 5u:
            v120 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v121 = v29;
            v122 = v29 + 1;
            v120(v46, v47, v191);
            v30 = v122;
            v29 = v121;
            v109 = 5;
            break;
          case 6u:
            v137 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v138 = v29;
            v139 = v29 + 1;
            v137(v46, v47, v191);
            v30 = v139;
            v29 = v138;
            v109 = 6;
            break;
          case 7u:
            v123 = *(_OWORD *)v47;
            *(_OWORD *)(v46 + 9) = *(_OWORD *)(v47 + 9);
            *(_OWORD *)v46 = v123;
            v109 = 7;
            break;
          case 8u:
            *(void *)v46 = *(void *)v47;
            v109 = 8;
            break;
          case 9u:
            *(void *)v46 = *(void *)v47;
            v109 = 9;
            break;
          default:
            v109 = 0;
            *(unsigned char *)v46 = *(unsigned char *)v47;
            break;
        }
        *(unsigned char *)(v46 + v29) = v109;
        v140 = ((v46 | 7) + v30) & 0xFFFFFFFFFFFFFFF8;
        v141 = ((v47 | 7) + v30) & 0xFFFFFFFFFFFFFFF8;
        v142 = *(_OWORD *)v141;
        v143 = *(_OWORD *)(v141 + 16);
        v144 = *(_OWORD *)(v141 + 48);
        *(_OWORD *)(v140 + 32) = *(_OWORD *)(v141 + 32);
        *(_OWORD *)(v140 + 48) = v144;
        *(_OWORD *)v140 = v142;
        *(_OWORD *)(v140 + 16) = v143;
        v145 = *(_OWORD *)(v141 + 64);
        v146 = *(_OWORD *)(v141 + 80);
        v147 = *(_OWORD *)(v141 + 96);
        *(_OWORD *)(v140 + 106) = *(_OWORD *)(v141 + 106);
        *(_OWORD *)(v140 + 80) = v146;
        *(_OWORD *)(v140 + 96) = v147;
        *(_OWORD *)(v140 + 64) = v145;
        *(unsigned char *)(v140 + 122) = *(unsigned char *)(v141 + 122);
        *(unsigned char *)(v140 + 123) = *(unsigned char *)(v141 + 123);
        *(unsigned char *)(v140 + 124) = *(unsigned char *)(v141 + 124);
        *(unsigned char *)(v140 + 125) = *(unsigned char *)(v141 + 125);
        *(unsigned char *)(v140 + 126) = *(unsigned char *)(v141 + 126);
        *(void *)((v140 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v141 + 134) & 0xFFFFFFFFFFFFFFF8);
        if (v36 <= 3)
        {
          v102 = ((1 << v37) + 1) >> v37;
          if (v102 > 0xFFF5)
          {
            *(_DWORD *)(v46 + v36) = 0;
            goto LABEL_273;
          }
          if (v102 > 0xF5)
          {
            *(_WORD *)(v46 + v36) = 0;
            goto LABEL_273;
          }
        }
        *(unsigned char *)(v46 + v36) = 0;
        if (v36 <= 3) {
          goto LABEL_265;
        }
        goto LABEL_268;
      case 1u:
        v86 = *(unsigned __int8 *)(v47 + v29);
        v87 = v86 - 10;
        if (v86 >= 0xA)
        {
          if (v29 <= 3) {
            v88 = v29;
          }
          else {
            v88 = 4;
          }
          switch(v88)
          {
            case 1:
              v89 = *(unsigned __int8 *)v47;
              goto LABEL_232;
            case 2:
              v89 = *(unsigned __int16 *)v47;
              goto LABEL_232;
            case 3:
              v89 = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
              goto LABEL_232;
            case 4:
              v89 = *(_DWORD *)v47;
LABEL_232:
              if (v29 < 4) {
                v86 = (v89 | (v87 << (8 * v29))) + 10;
              }
              else {
                v86 = v89 + 10;
              }
              break;
            default:
              break;
          }
        }
        switch(v86)
        {
          case 1u:
            *(void *)v46 = *(void *)v47;
            v110 = 1;
            break;
          case 2u:
            v124 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v125 = v29;
            v126 = v29 + 1;
            v124(v46, v47, v191);
            v30 = v126;
            v29 = v125;
            v110 = 2;
            break;
          case 3u:
            v127 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v128 = v29;
            v129 = v29 + 1;
            v127(v46, v47, v191);
            v30 = v129;
            v29 = v128;
            v110 = 3;
            break;
          case 4u:
            v130 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v131 = v29;
            v132 = v29 + 1;
            v130(v46, v47, v191);
            v30 = v132;
            v29 = v131;
            v110 = 4;
            break;
          case 5u:
            v133 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v134 = v29;
            v135 = v29 + 1;
            v133(v46, v47, v191);
            v30 = v135;
            v29 = v134;
            v110 = 5;
            break;
          case 6u:
            v148 = *(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32);
            v149 = v29;
            v150 = v29 + 1;
            v148(v46, v47, v191);
            v30 = v150;
            v29 = v149;
            v110 = 6;
            break;
          case 7u:
            v136 = *(_OWORD *)v47;
            *(_OWORD *)(v46 + 9) = *(_OWORD *)(v47 + 9);
            *(_OWORD *)v46 = v136;
            v110 = 7;
            break;
          case 8u:
            *(void *)v46 = *(void *)v47;
            v110 = 8;
            break;
          case 9u:
            *(void *)v46 = *(void *)v47;
            v110 = 9;
            break;
          default:
            v110 = 0;
            *(unsigned char *)v46 = *(unsigned char *)v47;
            break;
        }
        *(unsigned char *)(v46 + v29) = v110;
        v151 = ((v46 | 7) + v30) & 0xFFFFFFFFFFFFFFF8;
        v152 = ((v47 | 7) + v30) & 0xFFFFFFFFFFFFFFF8;
        v153 = *(_OWORD *)v152;
        v154 = *(_OWORD *)(v152 + 16);
        v155 = *(_OWORD *)(v152 + 48);
        *(_OWORD *)(v151 + 32) = *(_OWORD *)(v152 + 32);
        *(_OWORD *)(v151 + 48) = v155;
        *(_OWORD *)v151 = v153;
        *(_OWORD *)(v151 + 16) = v154;
        v156 = *(_OWORD *)(v152 + 64);
        v157 = *(_OWORD *)(v152 + 80);
        v158 = *(_OWORD *)(v152 + 96);
        *(_OWORD *)(v151 + 106) = *(_OWORD *)(v152 + 106);
        *(_OWORD *)(v151 + 80) = v157;
        *(_OWORD *)(v151 + 96) = v158;
        *(_OWORD *)(v151 + 64) = v156;
        *(unsigned char *)(v151 + 122) = *(unsigned char *)(v152 + 122);
        *(unsigned char *)(v151 + 123) = *(unsigned char *)(v152 + 123);
        *(unsigned char *)(v151 + 124) = *(unsigned char *)(v152 + 124);
        *(unsigned char *)(v151 + 125) = *(unsigned char *)(v152 + 125);
        *(unsigned char *)(v151 + 126) = *(unsigned char *)(v152 + 126);
        *(void *)((v151 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v152 + 134) & 0xFFFFFFFFFFFFFFF8);
        if (v36 > 3) {
          goto LABEL_263;
        }
        v108 = 1;
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5) {
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_263:
          v97 = 1;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 1;
        goto LABEL_273;
      case 2u:
        *(void *)v46 = *(void *)v47;
        v90 = (unsigned char *)((v32 + v46) & v81);
        v91 = (unsigned char *)((v32 + v47) & v81);
        switch(v91[v29])
        {
          case 0:
            *v90 = *v91;
            v90[v29] = 0;
            break;
          case 1:
            *(void *)v90 = *(void *)v91;
            v90[v29] = 1;
            break;
          case 2:
            v172 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v90[v172] = 2;
            break;
          case 3:
            v173 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v90[v173] = 3;
            break;
          case 4:
            v174 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v90[v174] = 4;
            break;
          case 5:
            v175 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v90[v175] = 5;
            break;
          case 6:
            v176 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v90[v176] = 6;
            break;
          case 7:
            v177 = *(_OWORD *)v91;
            *(_OWORD *)(((v32 + v46) & v81) + 9) = *(_OWORD *)(((v32 + v47) & v81) + 9);
            *(_OWORD *)v90 = v177;
            v90[v29] = 7;
            break;
          case 8:
            *(void *)v90 = *(void *)v91;
            v90[v29] = 8;
            break;
          case 9:
            *(void *)v90 = *(void *)v91;
            v90[v29] = 9;
            break;
          default:
            memcpy((void *)((v32 + v46) & v81), v91, v29 + 1);
            break;
        }
        if (v36 > 3) {
          goto LABEL_163;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 2;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_163:
          v97 = 2;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 2;
        goto LABEL_273;
      case 3u:
        *(void *)v46 = *(void *)v47;
        v92 = (unsigned char *)((v32 + v46) & v81);
        v93 = (unsigned char *)((v32 + v47) & v81);
        switch(v93[v29])
        {
          case 0:
            *v92 = *v93;
            v92[v29] = 0;
            break;
          case 1:
            *(void *)v92 = *(void *)v93;
            v92[v29] = 1;
            break;
          case 2:
            v178 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v92[v178] = 2;
            break;
          case 3:
            v179 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v92[v179] = 3;
            break;
          case 4:
            v180 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v92[v180] = 4;
            break;
          case 5:
            v181 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v92[v181] = 5;
            break;
          case 6:
            v182 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v92[v182] = 6;
            break;
          case 7:
            v183 = *(_OWORD *)v93;
            *(_OWORD *)(((v32 + v46) & v81) + 9) = *(_OWORD *)(((v32 + v47) & v81) + 9);
            *(_OWORD *)v92 = v183;
            v92[v29] = 7;
            break;
          case 8:
            *(void *)v92 = *(void *)v93;
            v92[v29] = 8;
            break;
          case 9:
            *(void *)v92 = *(void *)v93;
            v92[v29] = 9;
            break;
          default:
            memcpy((void *)((v32 + v46) & v81), v93, v29 + 1);
            break;
        }
        if (v36 > 3) {
          goto LABEL_166;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 3;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_166:
          v97 = 3;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 3;
        goto LABEL_273;
      case 4u:
        *(void *)v46 = *(void *)v47;
        v94 = (unsigned char *)((v32 + v46) & v81);
        v95 = (unsigned char *)((v32 + v47) & v81);
        switch(v95[v29])
        {
          case 0:
            *v94 = *v95;
            v94[v29] = 0;
            break;
          case 1:
            *(void *)v94 = *(void *)v95;
            v94[v29] = 1;
            break;
          case 2:
            v184 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v94[v184] = 2;
            break;
          case 3:
            v185 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v94[v185] = 3;
            break;
          case 4:
            v186 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v94[v186] = 4;
            break;
          case 5:
            v187 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v94[v187] = 5;
            break;
          case 6:
            v188 = v29;
            (*(void (**)(unint64_t))(v14 + 32))((v32 + v46) & v81);
            v94[v188] = 6;
            break;
          case 7:
            v189 = *(_OWORD *)v95;
            *(_OWORD *)(((v32 + v46) & v81) + 9) = *(_OWORD *)(((v32 + v47) & v81) + 9);
            *(_OWORD *)v94 = v189;
            v94[v29] = 7;
            break;
          case 8:
            *(void *)v94 = *(void *)v95;
            v94[v29] = 8;
            break;
          case 9:
            *(void *)v94 = *(void *)v95;
            v94[v29] = 9;
            break;
          default:
            memcpy((void *)((v32 + v46) & v81), v95, v29 + 1);
            break;
        }
        if (v36 > 3) {
          goto LABEL_169;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 4;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_169:
          v97 = 4;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 4;
        goto LABEL_273;
      case 5u:
        v96 = *(_OWORD *)v47;
        *(void *)(v46 + 16) = *(void *)(v47 + 16);
        *(_OWORD *)v46 = v96;
        if (v36 > 3) {
          goto LABEL_139;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 5;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_139:
          v97 = 5;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 5;
        goto LABEL_273;
      case 6u:
        *(void *)v46 = *(void *)v47;
        if (v36 > 3) {
          goto LABEL_157;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 6;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_157:
          v97 = 6;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 6;
        goto LABEL_273;
      case 7u:
        v98 = ~v19;
        if ((*(_DWORD *)(v18 + 84) & 0x80000000) != 0)
        {
          if ((*(unsigned int (**)(uint64_t))(v18 + 48))((v47 + v19 + 8) & v98))
          {
LABEL_144:
            memcpy((void *)v46, (const void *)v47, v33);
            goto LABEL_206;
          }
        }
        else
        {
          v99 = *(void *)v47;
          if (*(void *)v47 >= 0xFFFFFFFFuLL) {
            LODWORD(v99) = -1;
          }
          if (v99 != -1) {
            goto LABEL_144;
          }
        }
        *(void *)v46 = *(void *)v47;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v18 + 32))((v19 + 8 + v46) & v98, (v47 + v19 + 8) & v98, v190);
LABEL_206:
        v38 = a1;
        v105 = ((v47 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
        v106 = *(_OWORD *)v105;
        v107 = ((v46 | 7) + v33) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v107 + 16) = *(void *)(v105 + 16);
        *(_OWORD *)v107 = v106;
        if (v36 > 3) {
          goto LABEL_207;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 7;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_207:
          v97 = 7;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 7;
        goto LABEL_273;
      case 8u:
        if (*(_DWORD *)(v14 + 84) < 0xFDu)
        {
          if (*(unsigned __int8 *)(v47 + v28) >= 3u) {
            goto LABEL_160;
          }
        }
        else
        {
          if ((*(unsigned int (**)(uint64_t, void, uint64_t))(v14 + 48))(v47, *(unsigned int *)(v14 + 84), v191))
          {
LABEL_160:
            memcpy((void *)v46, (const void *)v47, v28 + 1);
            goto LABEL_189;
          }
          v22 = v14;
        }
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(v46, v47, v191);
        *(unsigned char *)(v46 + v28) = *(unsigned char *)(v47 + v28);
LABEL_189:
        *(void *)(((v46 | 7) + v28 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((v47 | 7) + v28 + 1) & 0xFFFFFFFFFFFFFFF8);
        if (v36 > 3) {
          goto LABEL_192;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 8;
LABEL_272:
          *(_DWORD *)(v46 + v36) = v108;
        }
        else
        {
          if (v102 <= 0xF5)
          {
LABEL_192:
            v97 = 8;
LABEL_264:
            *(unsigned char *)(v46 + v36) = v97;
            if (v36 > 3) {
              goto LABEL_268;
            }
LABEL_265:
            v159 = ((1 << v37) + 1) >> v37;
            v160 = 2;
            if (v159 > 0xFFF5) {
              v160 = 4;
            }
            if (v159 <= 0xF5) {
LABEL_268:
            }
              v160 = 1;
LABEL_275:
            v162 = v160 + v36;
            v163 = v162 + v46;
            v164 = v162 + v47;
            *(unsigned char *)v163 = *(unsigned char *)v164;
            v163 &= 0xFFFFFFFFFFFFFFF8;
            v164 &= 0xFFFFFFFFFFFFFFF8;
            *(_OWORD *)(v163 + 8) = *(_OWORD *)(v164 + 8);
            *(void *)((v163 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v164 + 31) & 0xFFFFFFFFFFFFFFF8);
            if (v36 > 3) {
              goto LABEL_279;
            }
            v165 = ((1 << v37) + 1) >> v37;
            v166 = 2;
            if (v165 > 0xFFF5) {
              v166 = 4;
            }
            if (v165 <= 0xF5) {
LABEL_279:
            }
              v166 = 1;
            v167 = ((((v166 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
            *(void *)((v46 + v167) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v47 + v167) & 0xFFFFFFFFFFFFFFF8);
            if (v36 > 3) {
              goto LABEL_284;
            }
            goto LABEL_281;
          }
          *(_WORD *)(v46 + v36) = 8;
        }
LABEL_273:
        v161 = v102 > 0xFFF5;
        v160 = 2;
        if (v161) {
          v160 = 4;
        }
        goto LABEL_275;
      case 9u:
        *(unsigned char *)v46 = *(unsigned char *)v47;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v25 + 32))((v26 + 1 + v46) & ~v26, (v26 + 1 + v47) & ~v26, v23);
        if (v36 > 3) {
          goto LABEL_146;
        }
        v102 = ((1 << v37) + 1) >> v37;
        if (v102 > 0xFFF5)
        {
          v108 = 9;
          goto LABEL_272;
        }
        if (v102 <= 0xF5)
        {
LABEL_146:
          v97 = 9;
          goto LABEL_264;
        }
        *(_WORD *)(v46 + v36) = 9;
        goto LABEL_273;
      default:
        if (v36 > 3) {
          goto LABEL_151;
        }
        v100 = ((1 << v37) + 1) >> v37;
        v101 = 2;
        if (v100 > 0xFFF5) {
          v101 = 4;
        }
        if (v100 <= 0xF5) {
LABEL_151:
        }
          v101 = 1;
        memcpy((void *)v46, (const void *)v47, v101 + v36);
        if (v36 > 3) {
          goto LABEL_268;
        }
        goto LABEL_265;
    }
  }
LABEL_51:
  if (v43 != 0x7FFFFFFF) {
    goto LABEL_52;
  }
LABEL_42:
  if (v36 > 3)
  {
    v51 = 11;
LABEL_44:
    v52 = 8;
    goto LABEL_45;
  }
  v58 = ((1 << v37) + 1) >> v37;
  if (v58 > 0xFFF5) {
    goto LABEL_64;
  }
  v51 = v58 + 10;
  if (v58 <= 0xF5) {
    goto LABEL_44;
  }
  v52 = 16;
LABEL_45:
  v53 = (1 << v52) - v51;
  if ((v53 & 0x80000000) == 0)
  {
    if (v36 > 3) {
      goto LABEL_68;
    }
    goto LABEL_65;
  }
LABEL_64:
  v53 = 0x7FFFFFFF;
  if (v36 > 3)
  {
LABEL_68:
    v60 = 1;
    goto LABEL_69;
  }
LABEL_65:
  v59 = ((1 << v37) + 1) >> v37;
  v60 = 2;
  if (v59 > 0xFFF5) {
    v60 = 4;
  }
  if (v59 <= 0xF5) {
    goto LABEL_68;
  }
LABEL_69:
  v61 = v43 - v53;
  if (v43 <= v53) {
    goto LABEL_86;
  }
  v62 = v60 + v36;
  v63 = 8 * (v60 + v36);
  if (v62 > 3)
  {
LABEL_71:
    v64 = *(unsigned __int8 *)(v47 + v62);
    if (!*(unsigned char *)(v47 + v62)) {
      goto LABEL_86;
    }
    goto LABEL_78;
  }
  v65 = ((v61 + ~(-1 << v63)) >> v63) + 1;
  if (HIWORD(v65))
  {
    v64 = *(_DWORD *)(v47 + v62);
    if (!v64) {
      goto LABEL_86;
    }
LABEL_78:
    v66 = (v64 - 1) << v63;
    if (v62 > 3) {
      v66 = 0;
    }
    if (v62)
    {
      if (v62 > 3) {
        LODWORD(v62) = 4;
      }
      switch((int)v62)
      {
        case 2:
          LODWORD(v62) = *(unsigned __int16 *)v47;
          break;
        case 3:
          LODWORD(v62) = *(unsigned __int16 *)v47 | (*(unsigned __int8 *)(v47 + 2) << 16);
          break;
        case 4:
          LODWORD(v62) = *(_DWORD *)v47;
          break;
        default:
          LODWORD(v62) = *(unsigned __int8 *)v47;
          break;
      }
    }
    if (v53 + (v62 | v66) != -1) {
      goto LABEL_197;
    }
    goto LABEL_99;
  }
  if (v65 > 0xFF)
  {
    v64 = *(unsigned __int16 *)(v47 + v62);
    if (!*(_WORD *)(v47 + v62)) {
      goto LABEL_86;
    }
    goto LABEL_78;
  }
  if (v65 >= 2) {
    goto LABEL_71;
  }
LABEL_86:
  if (!v53) {
    goto LABEL_99;
  }
  if (v36 <= 3)
  {
    v72 = ((1 << v37) + 1) >> v37;
    if (v72 > 0xFFF5)
    {
      v68 = *(_DWORD *)(v47 + v36);
      v69 = ~v68;
      goto LABEL_97;
    }
    v71 = v72 + 10;
    if (v72 > 0xF5)
    {
      v74 = *(unsigned __int16 *)(v47 + v36);
      v68 = v74 | 0xFFFF0000;
      v69 = v74 ^ 0xFFFF;
      v70 = 16;
    }
    else
    {
      v73 = *(unsigned __int8 *)(v47 + v36);
      v68 = v73 | 0xFFFFFF00;
      v69 = v73 ^ 0xFF;
      v70 = 8;
    }
  }
  else
  {
    v67 = *(unsigned __int8 *)(v47 + v36);
    v68 = v67 | 0xFFFFFF00;
    v69 = v67 ^ 0xFF;
    v70 = 8;
    v71 = 11;
  }
  v75 = (1 << v70) - v71;
  if ((v75 & 0x80000000) == 0)
  {
    if (v75 <= v69) {
      goto LABEL_99;
    }
    goto LABEL_98;
  }
LABEL_97:
  if (v69 >= 0x7FFFFFFF) {
    goto LABEL_99;
  }
LABEL_98:
  if (!v68) {
    goto LABEL_99;
  }
LABEL_197:
  if (v36 > 3) {
    goto LABEL_201;
  }
  v103 = ((1 << v37) + 1) >> v37;
  v104 = 2;
  if (v103 > 0xFFF5) {
    v104 = 4;
  }
  if (v103 <= 0xF5) {
LABEL_201:
  }
    v104 = 1;
  memcpy((void *)v46, (const void *)v47, ((((((v104 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v36 > 3) {
    goto LABEL_284;
  }
LABEL_281:
  v168 = ((1 << v37) + 1) >> v37;
  v169 = 2;
  if (v168 > 0xFFF5) {
    v169 = 4;
  }
  if (v168 <= 0xF5) {
LABEL_284:
  }
    v169 = 1;
  v170 = ((((((v169 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(unsigned char *)(v170 + v46) = *(unsigned char *)(v170 + v47);
  return v38;
}

void *sub_100622354(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  v428 = a1;
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      goto LABEL_12;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, char *, uint64_t))(v6 + 40))(a1, a2, v5);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v6 + 8))(a1, v5);
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  if (v10) {
    size_t v12 = v11;
  }
  else {
    size_t v12 = v11 + 1;
  }
  memcpy(a1, a2, v12);
LABEL_12:
  if (*(_DWORD *)(v6 + 84)) {
    uint64_t v13 = *(void *)(v6 + 64);
  }
  else {
    uint64_t v13 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v426 = v13;
  uint64_t v424 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v424 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = v15 | 7;
  uint64_t v423 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v17 = *(void *)(v423 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = type metadata accessor for AnyTip();
  uint64_t v20 = v18;
  uint64_t v21 = v19;
  uint64_t v22 = *(void *)(v19 - 8);
  uint64_t v23 = v22;
  uint64_t v24 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v25 = v18 | v24 | v15 | 7;
  unint64_t v26 = *(void *)(v14 + 64);
  if (v26 <= 0x19) {
    uint64_t v27 = 25;
  }
  else {
    uint64_t v27 = *(void *)(v14 + 64);
  }
  uint64_t v28 = v27 + 1;
  unint64_t v29 = (((v27 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v30 = v15 + 15;
  uint64_t v422 = v17;
  int v31 = *(_DWORD *)(v17 + 84);
  size_t v32 = *(void *)(v17 + 64) + ((v18 + 8) & ~v18);
  uint64_t v425 = v14;
  uint64_t v33 = *(unsigned int *)(v14 + 84);
  if (v27 + 1 + ((v15 + 15) & (unint64_t)~v16) > v29) {
    unint64_t v29 = v27 + 1 + ((v15 + 15) & ~v16);
  }
  if (v29 <= ((v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) {
    unint64_t v29 = ((v32 + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v29 <= (v26 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = (v26 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v34 = v24 + 1;
  unint64_t v35 = *(void *)(v22 + 64) + ((v24 + 1) & ~v24);
  if (v29 > v35) {
    unint64_t v35 = v29;
  }
  if (v35 <= 0x18) {
    uint64_t v36 = 24;
  }
  else {
    uint64_t v36 = v35;
  }
  v37 = v428;
  unint64_t v38 = (unint64_t)&a2[v25 + v426];
  if (v36 > 3)
  {
    int v39 = 11;
LABEL_31:
    char v40 = 8;
    goto LABEL_32;
  }
  unsigned int v44 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v44 > 0xFFF5)
  {
    unsigned int v42 = 0x7FFFFFFF;
    goto LABEL_41;
  }
  int v39 = v44 + 10;
  if (v44 <= 0xF5) {
    goto LABEL_31;
  }
  char v40 = 16;
LABEL_32:
  unsigned int v41 = (1 << v40) - v39;
  unsigned int v42 = 0x7FFFFFFF;
  if (v41 <= 0x7FFFFFFF) {
    int v43 = 0x7FFFFFFF;
  }
  else {
    int v43 = v41;
  }
  if ((v41 & 0x80000000) == 0) {
    unsigned int v42 = v43;
  }
LABEL_41:
  v45 = (unsigned __int16 *)(((unint64_t)v428 + v25 + v426) & ~v25);
  v46 = (unsigned __int8 *)(v38 & ~v25);
  if (v36 > 3)
  {
    int v47 = 11;
    goto LABEL_43;
  }
  unsigned int v50 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v50 <= 0xFFF5)
  {
    int v47 = v50 + 10;
    if (v50 > 0xF5)
    {
      char v48 = 16;
LABEL_44:
      int v49 = (1 << v48) - v47;
      if ((v49 & 0x80000000) == 0) {
        goto LABEL_50;
      }
      goto LABEL_49;
    }
LABEL_43:
    char v48 = 8;
    goto LABEL_44;
  }
LABEL_49:
  int v49 = 0x7FFFFFFF;
LABEL_50:
  uint64_t v51 = ~v16;
  uint64_t v52 = ~v18;
  uint64_t v53 = ~v24;
  if (v49 == v42)
  {
    if (v36 <= 3)
    {
      unsigned int v60 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v60 > 0xFFF5) {
        goto LABEL_69;
      }
      int v54 = v60 + 10;
      if (v60 > 0xF5)
      {
        char v55 = 16;
LABEL_54:
        unsigned int v56 = (1 << v55) - v54;
        if ((v56 & 0x80000000) == 0)
        {
          if (v36 > 3) {
            goto LABEL_73;
          }
LABEL_70:
          unsigned int v61 = ((1 << (8 * v36)) + 1) >> (8 * v36);
          uint64_t v62 = 2;
          if (v61 > 0xFFF5) {
            uint64_t v62 = 4;
          }
          if (v61 > 0xF5)
          {
LABEL_74:
            unsigned int v63 = v42 - v56;
            if (v42 <= v56) {
              goto LABEL_91;
            }
            uint64_t v64 = v62 + v36;
            char v65 = 8 * (v62 + v36);
            if (v64 > 3)
            {
LABEL_76:
              int v66 = *((unsigned __int8 *)v45 + v64);
              if (!*((unsigned char *)v45 + v64)) {
                goto LABEL_91;
              }
              goto LABEL_83;
            }
            unsigned int v67 = ((v63 + ~(-1 << v65)) >> v65) + 1;
            if (HIWORD(v67))
            {
              int v66 = *(_DWORD *)((char *)v45 + v64);
              if (!v66) {
                goto LABEL_91;
              }
            }
            else
            {
              if (v67 <= 0xFF)
              {
                if (v67 < 2)
                {
LABEL_91:
                  if (!v56) {
                    goto LABEL_103;
                  }
                  if (v36 <= 3)
                  {
                    unsigned int v75 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                    if (v75 > 0xFFF5)
                    {
                      unsigned int v70 = *(_DWORD *)((char *)v45 + v36);
                      unsigned int v71 = ~v70;
                      goto LABEL_101;
                    }
                    int v73 = v75 + 10;
                    if (v75 > 0xF5)
                    {
                      int v102 = *(unsigned __int16 *)((char *)v45 + v36);
                      unsigned int v70 = v102 | 0xFFFF0000;
                      unsigned int v71 = v102 ^ 0xFFFF;
                      char v72 = 16;
                    }
                    else
                    {
                      int v76 = *((unsigned __int8 *)v45 + v36);
                      unsigned int v70 = v76 | 0xFFFFFF00;
                      unsigned int v71 = v76 ^ 0xFF;
                      char v72 = 8;
                    }
                  }
                  else
                  {
                    int v69 = *((unsigned __int8 *)v45 + v36);
                    unsigned int v70 = v69 | 0xFFFFFF00;
                    unsigned int v71 = v69 ^ 0xFF;
                    char v72 = 8;
                    int v73 = 11;
                  }
                  unsigned int v74 = (1 << v72) - v73;
                  if ((v74 & 0x80000000) == 0)
                  {
                    if (v74 <= v71) {
                      goto LABEL_103;
                    }
                    goto LABEL_102;
                  }
LABEL_101:
                  if (v71 >= 0x7FFFFFFF) {
                    goto LABEL_103;
                  }
LABEL_102:
                  if (!v70) {
                    goto LABEL_103;
                  }
LABEL_168:
                  if (v36 <= 3)
                  {
                    unsigned int v104 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                    if (v104 > 0xFFF5)
                    {
                      unsigned int v107 = 0x7FFFFFFF;
                      if (v36 > 3)
                      {
LABEL_179:
                        int v109 = 11;
                        goto LABEL_183;
                      }
LABEL_181:
                      unsigned int v110 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                      if (v110 > 0xFFF5) {
                        goto LABEL_188;
                      }
                      int v109 = v110 + 10;
                      if (v110 > 0xF5)
                      {
                        char v111 = 16;
LABEL_184:
                        int v112 = (1 << v111) - v109;
                        if ((v112 & 0x80000000) == 0)
                        {
                          if (v112 == v107) {
                            goto LABEL_186;
                          }
                          goto LABEL_189;
                        }
LABEL_188:
                        if (v107 == 0x7FFFFFFF)
                        {
LABEL_186:
                          if (v36 <= 3)
                          {
                            unsigned int v117 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                            if (v117 > 0xFFF5) {
                              goto LABEL_204;
                            }
                            int v113 = v117 + 10;
                            if (v117 > 0xF5)
                            {
                              char v118 = 16;
LABEL_201:
                              unsigned int v119 = (1 << v118) - v113;
                              if ((v119 & 0x80000000) == 0)
                              {
                                if (v36 > 3) {
                                  goto LABEL_208;
                                }
LABEL_205:
                                unsigned int v120 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                uint64_t v121 = 2;
                                if (v120 > 0xFFF5) {
                                  uint64_t v121 = 4;
                                }
                                if (v120 > 0xF5)
                                {
LABEL_209:
                                  unsigned int v122 = v107 - v119;
                                  if (v107 <= v119) {
                                    goto LABEL_288;
                                  }
                                  uint64_t v123 = v121 + v36;
                                  char v124 = 8 * (v121 + v36);
                                  if (v123 <= 3)
                                  {
                                    unsigned int v126 = ((v122 + ~(-1 << v124)) >> v124) + 1;
                                    if (HIWORD(v126))
                                    {
                                      int v125 = *(_DWORD *)&v46[v123];
                                      if (!v125) {
                                        goto LABEL_288;
                                      }
                                      goto LABEL_221;
                                    }
                                    if (v126 > 0xFF)
                                    {
                                      int v125 = *(unsigned __int16 *)&v46[v123];
                                      if (!*(_WORD *)&v46[v123]) {
                                        goto LABEL_288;
                                      }
                                      goto LABEL_221;
                                    }
                                    if (v126 < 2)
                                    {
LABEL_288:
                                      if (!v119) {
                                        goto LABEL_300;
                                      }
                                      if (v36 <= 3)
                                      {
                                        unsigned int v167 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                        if (v167 > 0xFFF5)
                                        {
                                          unsigned int v162 = *(_DWORD *)&v46[v36];
                                          unsigned int v163 = ~v162;
LABEL_298:
                                          if (v163 < 0x7FFFFFFF) {
                                            goto LABEL_299;
                                          }
                                          if (v36 > 3) {
                                            goto LABEL_303;
                                          }
LABEL_300:
                                          unsigned int v169 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                          if (v169 > 0xFFF5)
                                          {
                                            unsigned int v170 = *(_DWORD *)&v46[v36];
                                            unsigned int v171 = v170 - 10;
                                            if (v170 < 0xA) {
                                              goto LABEL_320;
                                            }
                                            goto LABEL_308;
                                          }
                                          if (v169 > 0xF5)
                                          {
                                            unsigned int v170 = *(unsigned __int16 *)&v46[v36];
                                            unsigned int v171 = v170 - 10;
                                            if (v170 < 0xA)
                                            {
LABEL_320:
                                              switch(v170)
                                              {
                                                case 0u:
                                                  unsigned int v174 = v46[v27];
                                                  unsigned int v175 = v174 - 10;
                                                  if (v174 >= 0xA)
                                                  {
                                                    if (v27 <= 3) {
                                                      uint64_t v176 = v27;
                                                    }
                                                    else {
                                                      uint64_t v176 = 4;
                                                    }
                                                    switch(v176)
                                                    {
                                                      case 1:
                                                        int v177 = *v46;
                                                        goto LABEL_497;
                                                      case 2:
                                                        int v177 = *(unsigned __int16 *)v46;
                                                        goto LABEL_497;
                                                      case 3:
                                                        int v177 = *(unsigned __int16 *)v46 | (v46[2] << 16);
                                                        goto LABEL_497;
                                                      case 4:
                                                        int v177 = *(_DWORD *)v46;
LABEL_497:
                                                        if (v27 < 4) {
                                                          unsigned int v174 = (v177 | (v175 << (8 * v27))) + 10;
                                                        }
                                                        else {
                                                          unsigned int v174 = v177 + 10;
                                                        }
                                                        break;
                                                      default:
                                                        break;
                                                    }
                                                  }
                                                  switch(v174)
                                                  {
                                                    case 1u:
                                                      *(void *)v45 = *(void *)v46;
                                                      char v241 = 1;
                                                      break;
                                                    case 2u:
                                                      uint64_t v248 = v27 + 1;
                                                      uint64_t v249 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v248;
                                                      uint64_t v27 = v249;
                                                      char v241 = 2;
                                                      break;
                                                    case 3u:
                                                      uint64_t v250 = v27 + 1;
                                                      uint64_t v251 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v250;
                                                      uint64_t v27 = v251;
                                                      char v241 = 3;
                                                      break;
                                                    case 4u:
                                                      uint64_t v252 = v27 + 1;
                                                      uint64_t v253 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v252;
                                                      uint64_t v27 = v253;
                                                      char v241 = 4;
                                                      break;
                                                    case 5u:
                                                      uint64_t v254 = v27 + 1;
                                                      uint64_t v255 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v254;
                                                      uint64_t v27 = v255;
                                                      char v241 = 5;
                                                      break;
                                                    case 6u:
                                                      uint64_t v256 = v27 + 1;
                                                      uint64_t v257 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v256;
                                                      uint64_t v27 = v257;
                                                      char v241 = 6;
                                                      break;
                                                    case 7u:
                                                      long long v258 = *(_OWORD *)v46;
                                                      *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)(v46 + 9);
                                                      *(_OWORD *)v45 = v258;
                                                      char v241 = 7;
                                                      break;
                                                    case 8u:
                                                      *(void *)v45 = *(void *)v46;
                                                      char v241 = 8;
                                                      break;
                                                    case 9u:
                                                      *(void *)v45 = *(void *)v46;
                                                      char v241 = 9;
                                                      break;
                                                    default:
                                                      char v241 = 0;
                                                      *(unsigned char *)v45 = *v46;
                                                      break;
                                                  }
                                                  *((unsigned char *)v45 + v27) = v241;
                                                  unint64_t v259 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
                                                  unint64_t v260 = (unint64_t)&v46[v27 + 8] & 0xFFFFFFFFFFFFFFF8;
                                                  long long v261 = *(_OWORD *)v260;
                                                  long long v262 = *(_OWORD *)(v260 + 16);
                                                  long long v263 = *(_OWORD *)(v260 + 48);
                                                  *(_OWORD *)(v259 + 32) = *(_OWORD *)(v260 + 32);
                                                  *(_OWORD *)(v259 + 48) = v263;
                                                  *(_OWORD *)unint64_t v259 = v261;
                                                  *(_OWORD *)(v259 + 16) = v262;
                                                  long long v264 = *(_OWORD *)(v260 + 64);
                                                  long long v265 = *(_OWORD *)(v260 + 80);
                                                  long long v266 = *(_OWORD *)(v260 + 96);
                                                  *(_OWORD *)(v259 + 106) = *(_OWORD *)(v260 + 106);
                                                  *(_OWORD *)(v259 + 80) = v265;
                                                  *(_OWORD *)(v259 + 96) = v266;
                                                  *(_OWORD *)(v259 + 64) = v264;
                                                  *(unsigned char *)(v259 + 122) = *(unsigned char *)(v260 + 122);
                                                  *(unsigned char *)(v259 + 123) = *(unsigned char *)(v260 + 123);
                                                  *(unsigned char *)(v259 + 124) = *(unsigned char *)(v260 + 124);
                                                  *(unsigned char *)(v259 + 125) = *(unsigned char *)(v260 + 125);
                                                  *(unsigned char *)(v259 + 126) = *(unsigned char *)(v260 + 126);
                                                  *(void *)((v259 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v260 + 134) & 0xFFFFFFFFFFFFFFF8);
                                                  if (v36 > 3) {
                                                    goto LABEL_551;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 0;
                                                  }
                                                  else
                                                  {
                                                    if (v191 <= 0xF5)
                                                    {
LABEL_551:
                                                      *((unsigned char *)v45 + v36) = 0;
                                                      goto LABEL_568;
                                                    }
                                                    *(unsigned __int16 *)((char *)v45 + v36) = 0;
                                                  }
                                                  goto LABEL_574;
                                                case 1u:
                                                  unsigned int v180 = v46[v27];
                                                  unsigned int v181 = v180 - 10;
                                                  if (v180 >= 0xA)
                                                  {
                                                    if (v27 <= 3) {
                                                      uint64_t v182 = v27;
                                                    }
                                                    else {
                                                      uint64_t v182 = 4;
                                                    }
                                                    switch(v182)
                                                    {
                                                      case 1:
                                                        int v183 = *v46;
                                                        goto LABEL_505;
                                                      case 2:
                                                        int v183 = *(unsigned __int16 *)v46;
                                                        goto LABEL_505;
                                                      case 3:
                                                        int v183 = *(unsigned __int16 *)v46 | (v46[2] << 16);
                                                        goto LABEL_505;
                                                      case 4:
                                                        int v183 = *(_DWORD *)v46;
LABEL_505:
                                                        if (v27 < 4) {
                                                          unsigned int v180 = (v183 | (v181 << (8 * v27))) + 10;
                                                        }
                                                        else {
                                                          unsigned int v180 = v183 + 10;
                                                        }
                                                        break;
                                                      default:
                                                        break;
                                                    }
                                                  }
                                                  switch(v180)
                                                  {
                                                    case 1u:
                                                      *(void *)v45 = *(void *)v46;
                                                      char v242 = 1;
                                                      break;
                                                    case 2u:
                                                      uint64_t v267 = v27 + 1;
                                                      uint64_t v268 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v267;
                                                      uint64_t v27 = v268;
                                                      char v242 = 2;
                                                      break;
                                                    case 3u:
                                                      uint64_t v269 = v27 + 1;
                                                      uint64_t v270 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v269;
                                                      uint64_t v27 = v270;
                                                      char v242 = 3;
                                                      break;
                                                    case 4u:
                                                      uint64_t v271 = v27 + 1;
                                                      uint64_t v272 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v271;
                                                      uint64_t v27 = v272;
                                                      char v242 = 4;
                                                      break;
                                                    case 5u:
                                                      uint64_t v273 = v27 + 1;
                                                      uint64_t v274 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v273;
                                                      uint64_t v27 = v274;
                                                      char v242 = 5;
                                                      break;
                                                    case 6u:
                                                      uint64_t v275 = v27 + 1;
                                                      uint64_t v276 = v27;
                                                      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                      uint64_t v28 = v275;
                                                      uint64_t v27 = v276;
                                                      char v242 = 6;
                                                      break;
                                                    case 7u:
                                                      long long v277 = *(_OWORD *)v46;
                                                      *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)(v46 + 9);
                                                      *(_OWORD *)v45 = v277;
                                                      char v242 = 7;
                                                      break;
                                                    case 8u:
                                                      *(void *)v45 = *(void *)v46;
                                                      char v242 = 8;
                                                      break;
                                                    case 9u:
                                                      *(void *)v45 = *(void *)v46;
                                                      char v242 = 9;
                                                      break;
                                                    default:
                                                      char v242 = 0;
                                                      *(unsigned char *)v45 = *v46;
                                                      break;
                                                  }
                                                  *((unsigned char *)v45 + v27) = v242;
                                                  unint64_t v278 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
                                                  unint64_t v279 = (unint64_t)&v46[v27 + 8] & 0xFFFFFFFFFFFFFFF8;
                                                  long long v280 = *(_OWORD *)v279;
                                                  long long v281 = *(_OWORD *)(v279 + 16);
                                                  long long v282 = *(_OWORD *)(v279 + 48);
                                                  *(_OWORD *)(v278 + 32) = *(_OWORD *)(v279 + 32);
                                                  *(_OWORD *)(v278 + 48) = v282;
                                                  *(_OWORD *)unint64_t v278 = v280;
                                                  *(_OWORD *)(v278 + 16) = v281;
                                                  long long v283 = *(_OWORD *)(v279 + 64);
                                                  long long v284 = *(_OWORD *)(v279 + 80);
                                                  long long v285 = *(_OWORD *)(v279 + 96);
                                                  *(_OWORD *)(v278 + 106) = *(_OWORD *)(v279 + 106);
                                                  *(_OWORD *)(v278 + 80) = v284;
                                                  *(_OWORD *)(v278 + 96) = v285;
                                                  *(_OWORD *)(v278 + 64) = v283;
                                                  *(unsigned char *)(v278 + 122) = *(unsigned char *)(v279 + 122);
                                                  *(unsigned char *)(v278 + 123) = *(unsigned char *)(v279 + 123);
                                                  *(unsigned char *)(v278 + 124) = *(unsigned char *)(v279 + 124);
                                                  *(unsigned char *)(v278 + 125) = *(unsigned char *)(v279 + 125);
                                                  *(unsigned char *)(v278 + 126) = *(unsigned char *)(v279 + 126);
                                                  *(void *)((v278 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v279 + 134) & 0xFFFFFFFFFFFFFFF8);
                                                  if (v36 > 3) {
                                                    goto LABEL_566;
                                                  }
                                                  __int16 v240 = 1;
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 1;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 > 0xF5) {
                                                    goto LABEL_573;
                                                  }
LABEL_566:
                                                  char v192 = 1;
                                                  goto LABEL_567;
                                                case 2u:
                                                  *(void *)v45 = *(void *)v46;
                                                  v184 = (unsigned char *)(((unint64_t)v45 + v30) & v51);
                                                  v185 = (unsigned char *)((unint64_t)&v46[v30] & v51);
                                                  switch(v185[v27])
                                                  {
                                                    case 0:
                                                      unsigned char *v184 = *v185;
                                                      v184[v27] = 0;
                                                      break;
                                                    case 1:
                                                      *(void *)v184 = *(void *)v185;
                                                      v184[v27] = 1;
                                                      break;
                                                    case 2:
                                                      uint64_t v376 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v184[v376] = 2;
                                                      break;
                                                    case 3:
                                                      uint64_t v377 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v184[v377] = 3;
                                                      break;
                                                    case 4:
                                                      uint64_t v378 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v184[v378] = 4;
                                                      break;
                                                    case 5:
                                                      uint64_t v379 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v184[v379] = 5;
                                                      break;
                                                    case 6:
                                                      uint64_t v380 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v184[v380] = 6;
                                                      break;
                                                    case 7:
                                                      long long v381 = *(_OWORD *)v185;
                                                      *(_OWORD *)((((unint64_t)v45 + v30) & v51) + 9) = *(_OWORD *)(((unint64_t)&v46[v30] & v51) + 9);
                                                      *(_OWORD *)v184 = v381;
                                                      v184[v27] = 7;
                                                      break;
                                                    case 8:
                                                      *(void *)v184 = *(void *)v185;
                                                      v184[v27] = 8;
                                                      break;
                                                    case 9:
                                                      *(void *)v184 = *(void *)v185;
                                                      v184[v27] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)(((unint64_t)v45 + v30) & v51), v185, v27 + 1);
                                                      break;
                                                  }
                                                  v37 = v428;
                                                  if (v36 > 3) {
                                                    goto LABEL_419;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 2;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_419:
                                                    char v192 = 2;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 2;
                                                  goto LABEL_573;
                                                case 3u:
                                                  *(void *)v45 = *(void *)v46;
                                                  v186 = (unsigned char *)(((unint64_t)v45 + v30) & v51);
                                                  v187 = (unsigned char *)((unint64_t)&v46[v30] & v51);
                                                  switch(v187[v27])
                                                  {
                                                    case 0:
                                                      unsigned char *v186 = *v187;
                                                      v186[v27] = 0;
                                                      break;
                                                    case 1:
                                                      *(void *)v186 = *(void *)v187;
                                                      v186[v27] = 1;
                                                      break;
                                                    case 2:
                                                      uint64_t v382 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v186[v382] = 2;
                                                      break;
                                                    case 3:
                                                      uint64_t v383 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v186[v383] = 3;
                                                      break;
                                                    case 4:
                                                      uint64_t v384 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v186[v384] = 4;
                                                      break;
                                                    case 5:
                                                      uint64_t v385 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v186[v385] = 5;
                                                      break;
                                                    case 6:
                                                      uint64_t v386 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v186[v386] = 6;
                                                      break;
                                                    case 7:
                                                      long long v387 = *(_OWORD *)v187;
                                                      *(_OWORD *)((((unint64_t)v45 + v30) & v51) + 9) = *(_OWORD *)(((unint64_t)&v46[v30] & v51) + 9);
                                                      *(_OWORD *)v186 = v387;
                                                      v186[v27] = 7;
                                                      break;
                                                    case 8:
                                                      *(void *)v186 = *(void *)v187;
                                                      v186[v27] = 8;
                                                      break;
                                                    case 9:
                                                      *(void *)v186 = *(void *)v187;
                                                      v186[v27] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)(((unint64_t)v45 + v30) & v51), v187, v27 + 1);
                                                      break;
                                                  }
                                                  v37 = v428;
                                                  if (v36 > 3) {
                                                    goto LABEL_424;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 3;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_424:
                                                    char v192 = 3;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 3;
                                                  goto LABEL_573;
                                                case 4u:
                                                  *(void *)v45 = *(void *)v46;
                                                  v188 = (unsigned char *)(((unint64_t)v45 + v30) & v51);
                                                  v189 = (unsigned char *)((unint64_t)&v46[v30] & v51);
                                                  switch(v189[v27])
                                                  {
                                                    case 0:
                                                      unsigned char *v188 = *v189;
                                                      v188[v27] = 0;
                                                      break;
                                                    case 1:
                                                      *(void *)v188 = *(void *)v189;
                                                      v188[v27] = 1;
                                                      break;
                                                    case 2:
                                                      uint64_t v388 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v188[v388] = 2;
                                                      break;
                                                    case 3:
                                                      uint64_t v389 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v188[v389] = 3;
                                                      break;
                                                    case 4:
                                                      uint64_t v390 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v188[v390] = 4;
                                                      break;
                                                    case 5:
                                                      uint64_t v391 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v188[v391] = 5;
                                                      break;
                                                    case 6:
                                                      uint64_t v392 = v27;
                                                      (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v51);
                                                      v188[v392] = 6;
                                                      break;
                                                    case 7:
                                                      long long v393 = *(_OWORD *)v189;
                                                      *(_OWORD *)((((unint64_t)v45 + v30) & v51) + 9) = *(_OWORD *)(((unint64_t)&v46[v30] & v51) + 9);
                                                      *(_OWORD *)v188 = v393;
                                                      v188[v27] = 7;
                                                      break;
                                                    case 8:
                                                      *(void *)v188 = *(void *)v189;
                                                      v188[v27] = 8;
                                                      break;
                                                    case 9:
                                                      *(void *)v188 = *(void *)v189;
                                                      v188[v27] = 9;
                                                      break;
                                                    default:
                                                      memcpy((void *)(((unint64_t)v45 + v30) & v51), v189, v27 + 1);
                                                      break;
                                                  }
                                                  v37 = v428;
                                                  if (v36 > 3) {
                                                    goto LABEL_429;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 4;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_429:
                                                    char v192 = 4;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 4;
                                                  goto LABEL_573;
                                                case 5u:
                                                  long long v190 = *(_OWORD *)v46;
                                                  *((void *)v45 + 2) = *((void *)v46 + 2);
                                                  *(_OWORD *)v45 = v190;
                                                  if (v36 > 3) {
                                                    goto LABEL_348;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 5;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_348:
                                                    char v192 = 5;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 5;
                                                  goto LABEL_573;
                                                case 6u:
                                                  *(void *)v45 = *(void *)v46;
                                                  if (v36 > 3) {
                                                    goto LABEL_352;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 6;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_352:
                                                    char v192 = 6;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 6;
                                                  goto LABEL_573;
                                                case 7u:
                                                  uint64_t v193 = ~v18;
                                                  if (v31 < 0)
                                                  {
                                                    uint64_t v194 = v18 + 8;
                                                    int v196 = (*(uint64_t (**)(unint64_t))(v422 + 48))((unint64_t)&v46[v18 + 8] & v193);
                                                    uint64_t v20 = v18;
                                                  }
                                                  else
                                                  {
                                                    uint64_t v194 = v18 + 8;
                                                    uint64_t v195 = *(void *)v46;
                                                    if (*(void *)v46 >= 0xFFFFFFFFuLL) {
                                                      LODWORD(v195) = -1;
                                                    }
                                                    int v196 = v195 + 1;
                                                  }
                                                  if (v196)
                                                  {
                                                    memcpy(v45, v46, v32);
                                                  }
                                                  else
                                                  {
                                                    *(void *)v45 = *(void *)v46;
                                                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(((unint64_t)v45 + v20 + 8) & v193, (unint64_t)&v46[v194] & v193, v423);
                                                  }
                                                  unint64_t v228 = (((unint64_t)v46 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
                                                  long long v229 = *(_OWORD *)v228;
                                                  unint64_t v230 = (((unint64_t)v45 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
                                                  *(void *)(v230 + 16) = *(void *)(v228 + 16);
                                                  *(_OWORD *)unint64_t v230 = v229;
                                                  if (v36 > 3) {
                                                    goto LABEL_462;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 7;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_462:
                                                    char v192 = 7;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 7;
                                                  goto LABEL_573;
                                                case 8u:
                                                  if (v33 < 0xFD)
                                                  {
                                                    unsigned int v224 = v46[v26];
                                                    if (v224 < 3) {
                                                      goto LABEL_434;
                                                    }
                                                    unsigned int v197 = v224 - 2;
                                                  }
                                                  else
                                                  {
                                                    unsigned int v197 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v425 + 48))(v46, v33, v424);
                                                  }
                                                  if (v197)
                                                  {
                                                    memcpy(v45, v46, v26 + 1);
                                                    goto LABEL_435;
                                                  }
LABEL_434:
                                                  (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
                                                  *((unsigned char *)v45 + v26) = v46[v26];
LABEL_435:
                                                  *(void *)((((unint64_t)v45 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7) + v26 + 1) & 0xFFFFFFFFFFFFFFF8);
                                                  if (v36 > 3) {
                                                    goto LABEL_438;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 8;
                                                    goto LABEL_574;
                                                  }
                                                  if (v191 <= 0xF5)
                                                  {
LABEL_438:
                                                    char v192 = 8;
                                                    goto LABEL_567;
                                                  }
                                                  __int16 v240 = 8;
                                                  goto LABEL_573;
                                                case 9u:
                                                  *(unsigned char *)v45 = *v46;
                                                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))(((unint64_t)v45 + v34) & v53, (unint64_t)&v46[v34] & v53, v21);
                                                  if (v36 > 3) {
                                                    goto LABEL_362;
                                                  }
                                                  unsigned int v191 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  if (v191 > 0xFFF5)
                                                  {
                                                    *(_DWORD *)((char *)v45 + v36) = 9;
                                                  }
                                                  else
                                                  {
                                                    if (v191 <= 0xF5)
                                                    {
LABEL_362:
                                                      char v192 = 9;
LABEL_567:
                                                      *((unsigned char *)v45 + v36) = v192;
LABEL_568:
                                                      if (v36 > 3) {
                                                        goto LABEL_572;
                                                      }
                                                      unsigned int v286 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                      uint64_t v287 = 2;
                                                      if (v286 > 0xFFF5) {
                                                        uint64_t v287 = 4;
                                                      }
                                                      if (v286 <= 0xF5) {
LABEL_572:
                                                      }
                                                        uint64_t v287 = 1;
LABEL_576:
                                                      uint64_t v289 = v287 + v36;
                                                      unint64_t v290 = (unint64_t)v45 + v289;
                                                      unint64_t v291 = (unint64_t)&v46[v289];
                                                      *(unsigned char *)unint64_t v290 = *(unsigned char *)v291;
                                                      v290 &= 0xFFFFFFFFFFFFFFF8;
                                                      v291 &= 0xFFFFFFFFFFFFFFF8;
                                                      *(_OWORD *)(v290 + 8) = *(_OWORD *)(v291 + 8);
                                                      *(void *)((v290 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v291 + 31) & 0xFFFFFFFFFFFFFFF8);
                                                      if (v36 > 3) {
                                                        goto LABEL_767;
                                                      }
                                                      goto LABEL_764;
                                                    }
                                                    __int16 v240 = 9;
LABEL_573:
                                                    *(unsigned __int16 *)((char *)v45 + v36) = v240;
                                                  }
LABEL_574:
                                                  BOOL v288 = v191 > 0xFFF5;
                                                  uint64_t v287 = 2;
                                                  if (v288) {
                                                    uint64_t v287 = 4;
                                                  }
                                                  goto LABEL_576;
                                                default:
                                                  if (v36 > 3) {
                                                    goto LABEL_331;
                                                  }
                                                  unsigned int v178 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                                  uint64_t v179 = 2;
                                                  if (v178 > 0xFFF5) {
                                                    uint64_t v179 = 4;
                                                  }
                                                  if (v178 <= 0xF5) {
LABEL_331:
                                                  }
                                                    uint64_t v179 = 1;
                                                  memcpy(v45, v46, v179 + v36);
                                                  goto LABEL_568;
                                              }
                                            }
                                          }
                                          else
                                          {
LABEL_303:
                                            unsigned int v170 = v46[v36];
                                            unsigned int v171 = v170 - 10;
                                            if (v170 < 0xA) {
                                              goto LABEL_320;
                                            }
                                          }
LABEL_308:
                                          if (v36 <= 3) {
                                            uint64_t v172 = v36;
                                          }
                                          else {
                                            uint64_t v172 = 4;
                                          }
                                          switch(v172)
                                          {
                                            case 1:
                                              int v173 = *v46;
                                              if (v36 < 4) {
                                                goto LABEL_315;
                                              }
                                              goto LABEL_319;
                                            case 2:
                                              int v173 = *(unsigned __int16 *)v46;
                                              if (v36 < 4) {
                                                goto LABEL_315;
                                              }
                                              goto LABEL_319;
                                            case 3:
                                              int v173 = *(unsigned __int16 *)v46 | (v46[2] << 16);
                                              if (v36 < 4) {
                                                goto LABEL_315;
                                              }
                                              goto LABEL_319;
                                            case 4:
                                              int v173 = *(_DWORD *)v46;
                                              if (v36 < 4) {
LABEL_315:
                                              }
                                                unsigned int v170 = (v173 | (v171 << (8 * v36))) + 10;
                                              else {
LABEL_319:
                                              }
                                                unsigned int v170 = v173 + 10;
                                              break;
                                            default:
                                              goto LABEL_320;
                                          }
                                          goto LABEL_320;
                                        }
                                        int v165 = v167 + 10;
                                        if (v167 > 0xF5)
                                        {
                                          int v199 = *(unsigned __int16 *)&v46[v36];
                                          unsigned int v162 = v199 | 0xFFFF0000;
                                          unsigned int v163 = v199 ^ 0xFFFF;
                                          char v164 = 16;
                                        }
                                        else
                                        {
                                          int v168 = v46[v36];
                                          unsigned int v162 = v168 | 0xFFFFFF00;
                                          unsigned int v163 = v168 ^ 0xFF;
                                          char v164 = 8;
                                        }
                                      }
                                      else
                                      {
                                        int v161 = v46[v36];
                                        unsigned int v162 = v161 | 0xFFFFFF00;
                                        unsigned int v163 = v161 ^ 0xFF;
                                        char v164 = 8;
                                        int v165 = 11;
                                      }
                                      unsigned int v166 = (1 << v164) - v165;
                                      if ((v166 & 0x80000000) == 0)
                                      {
                                        if (v166 <= v163) {
                                          goto LABEL_300;
                                        }
LABEL_299:
                                        if (!v162) {
                                          goto LABEL_300;
                                        }
LABEL_447:
                                        if (v36 <= 3)
                                        {
LABEL_533:
                                          unsigned int v246 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                                          uint64_t v247 = 2;
                                          if (v246 > 0xFFF5) {
                                            uint64_t v247 = 4;
                                          }
                                          if (v246 > 0xF5)
                                          {
LABEL_537:
                                            memcpy(v45, v46, ((((((v247 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)+ 8);
                                            if (v36 <= 3) {
                                              goto LABEL_769;
                                            }
LABEL_772:
                                            uint64_t v373 = 1;
                                            goto LABEL_773;
                                          }
                                        }
LABEL_536:
                                        uint64_t v247 = 1;
                                        goto LABEL_537;
                                      }
                                      goto LABEL_298;
                                    }
                                  }
                                  int v125 = v46[v123];
                                  if (!v46[v123]) {
                                    goto LABEL_288;
                                  }
LABEL_221:
                                  int v127 = (v125 - 1) << v124;
                                  if (v123 > 3) {
                                    int v127 = 0;
                                  }
                                  if (v123)
                                  {
                                    if (v123 > 3) {
                                      LODWORD(v123) = 4;
                                    }
                                    switch((int)v123)
                                    {
                                      case 2:
                                        LODWORD(v123) = *(unsigned __int16 *)v46;
                                        break;
                                      case 3:
                                        LODWORD(v123) = *(unsigned __int16 *)v46 | (v46[2] << 16);
                                        break;
                                      case 4:
                                        LODWORD(v123) = *(_DWORD *)v46;
                                        break;
                                      default:
                                        LODWORD(v123) = *v46;
                                        break;
                                    }
                                  }
                                  if (v119 + (v123 | v127) == -1) {
                                    goto LABEL_300;
                                  }
                                  goto LABEL_447;
                                }
LABEL_208:
                                uint64_t v121 = 1;
                                goto LABEL_209;
                              }
LABEL_204:
                              unsigned int v119 = 0x7FFFFFFF;
                              if (v36 > 3) {
                                goto LABEL_208;
                              }
                              goto LABEL_205;
                            }
                          }
                          else
                          {
                            int v113 = 11;
                          }
                          char v118 = 8;
                          goto LABEL_201;
                        }
LABEL_189:
                        if (v36 > 3) {
                          goto LABEL_193;
                        }
                        unsigned int v114 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                        uint64_t v115 = 2;
                        if (v114 > 0xFFF5) {
                          uint64_t v115 = 4;
                        }
                        if (v114 <= 0xF5) {
LABEL_193:
                        }
                          uint64_t v115 = 1;
                        unint64_t v116 = *(void *)((((unint64_t)&v46[v36 + v115] & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
                        if (v116 >= 0xFFFFFFFF) {
                          LODWORD(v116) = -1;
                        }
                        if (v116 == -1) {
                          goto LABEL_300;
                        }
                        goto LABEL_447;
                      }
LABEL_183:
                      char v111 = 8;
                      goto LABEL_184;
                    }
                    int v103 = v104 + 10;
                    if (v104 > 0xF5)
                    {
                      char v105 = 16;
LABEL_173:
                      unsigned int v106 = (1 << v105) - v103;
                      unsigned int v107 = 0x7FFFFFFF;
                      if (v106 <= 0x7FFFFFFF) {
                        int v108 = 0x7FFFFFFF;
                      }
                      else {
                        int v108 = v106;
                      }
                      if ((v106 & 0x80000000) == 0) {
                        unsigned int v107 = v108;
                      }
                      if (v36 > 3) {
                        goto LABEL_179;
                      }
                      goto LABEL_181;
                    }
                  }
                  else
                  {
                    int v103 = 11;
                  }
                  char v105 = 8;
                  goto LABEL_173;
                }
                goto LABEL_76;
              }
              int v66 = *(unsigned __int16 *)((char *)v45 + v64);
              if (!*(unsigned __int16 *)((char *)v45 + v64)) {
                goto LABEL_91;
              }
            }
LABEL_83:
            int v68 = (v66 - 1) << v65;
            if (v64 > 3) {
              int v68 = 0;
            }
            if (v64)
            {
              if (v64 > 3) {
                LODWORD(v64) = 4;
              }
              switch((int)v64)
              {
                case 2:
                  LODWORD(v64) = *v45;
                  break;
                case 3:
                  LODWORD(v64) = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
                  break;
                case 4:
                  LODWORD(v64) = *(_DWORD *)v45;
                  break;
                default:
                  LODWORD(v64) = *(unsigned __int8 *)v45;
                  break;
              }
            }
            if (v56 + (v64 | v68) != -1) {
              goto LABEL_168;
            }
            goto LABEL_103;
          }
LABEL_73:
          uint64_t v62 = 1;
          goto LABEL_74;
        }
LABEL_69:
        unsigned int v56 = 0x7FFFFFFF;
        if (v36 > 3) {
          goto LABEL_73;
        }
        goto LABEL_70;
      }
    }
    else
    {
      int v54 = 11;
    }
    char v55 = 8;
    goto LABEL_54;
  }
  if (v36 > 3) {
    goto LABEL_61;
  }
  unsigned int v57 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  uint64_t v58 = 2;
  if (v57 > 0xFFF5) {
    uint64_t v58 = 4;
  }
  if (v57 <= 0xF5) {
LABEL_61:
  }
    uint64_t v58 = 1;
  unint64_t v59 = *(void *)(((((unint64_t)v45 + v36 + v58) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v59 >= 0xFFFFFFFF) {
    LODWORD(v59) = -1;
  }
  if (v59 != -1) {
    goto LABEL_168;
  }
LABEL_103:
  if (v36 > 3)
  {
    int v77 = 11;
    goto LABEL_107;
  }
  unsigned int v78 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v78 <= 0xFFF5)
  {
    int v77 = v78 + 10;
    if (v78 > 0xF5)
    {
      char v79 = 16;
LABEL_108:
      unsigned int v80 = (1 << v79) - v77;
      unsigned int v81 = 0x7FFFFFFF;
      if (v80 <= 0x7FFFFFFF) {
        int v82 = 0x7FFFFFFF;
      }
      else {
        int v82 = v80;
      }
      if ((v80 & 0x80000000) == 0) {
        unsigned int v81 = v82;
      }
      if (v36 > 3) {
        goto LABEL_114;
      }
      goto LABEL_116;
    }
LABEL_107:
    char v79 = 8;
    goto LABEL_108;
  }
  unsigned int v81 = 0x7FFFFFFF;
  if (v36 > 3)
  {
LABEL_114:
    int v83 = 11;
LABEL_118:
    char v85 = 8;
    goto LABEL_119;
  }
LABEL_116:
  unsigned int v84 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v84 > 0xFFF5) {
    goto LABEL_123;
  }
  int v83 = v84 + 10;
  if (v84 <= 0xF5) {
    goto LABEL_118;
  }
  char v85 = 16;
LABEL_119:
  int v86 = (1 << v85) - v83;
  if ((v86 & 0x80000000) == 0)
  {
    if (v86 == v81) {
      goto LABEL_121;
    }
    goto LABEL_124;
  }
LABEL_123:
  if (v81 == 0x7FFFFFFF)
  {
LABEL_121:
    if (v36 <= 3)
    {
      unsigned int v91 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v91 > 0xFFF5) {
        goto LABEL_139;
      }
      int v87 = v91 + 10;
      if (v91 > 0xF5)
      {
        char v92 = 16;
LABEL_136:
        unsigned int v93 = (1 << v92) - v87;
        if ((v93 & 0x80000000) == 0)
        {
          if (v36 > 3) {
            goto LABEL_143;
          }
LABEL_140:
          unsigned int v94 = ((1 << (8 * v36)) + 1) >> (8 * v36);
          uint64_t v95 = 2;
          if (v94 > 0xFFF5) {
            uint64_t v95 = 4;
          }
          if (v94 > 0xF5)
          {
LABEL_144:
            unsigned int v96 = v81 - v93;
            if (v81 <= v93) {
              goto LABEL_229;
            }
            uint64_t v97 = v95 + v36;
            char v98 = 8 * (v95 + v36);
            if (v97 > 3)
            {
LABEL_146:
              int v99 = v46[v97];
              if (!v46[v97]) {
                goto LABEL_229;
              }
              goto LABEL_156;
            }
            unsigned int v100 = ((v96 + ~(-1 << v98)) >> v98) + 1;
            if (HIWORD(v100))
            {
              int v99 = *(_DWORD *)&v46[v97];
              if (!v99) {
                goto LABEL_229;
              }
            }
            else
            {
              if (v100 <= 0xFF)
              {
                if (v100 < 2)
                {
LABEL_229:
                  if (!v93) {
                    goto LABEL_241;
                  }
                  if (v36 <= 3)
                  {
                    unsigned int v134 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                    if (v134 > 0xFFF5)
                    {
                      unsigned int v129 = *(_DWORD *)&v46[v36];
                      unsigned int v130 = ~v129;
                      goto LABEL_239;
                    }
                    int v132 = v134 + 10;
                    if (v134 > 0xF5)
                    {
                      int v198 = *(unsigned __int16 *)&v46[v36];
                      unsigned int v129 = v198 | 0xFFFF0000;
                      unsigned int v130 = v198 ^ 0xFFFF;
                      char v131 = 16;
                    }
                    else
                    {
                      int v135 = v46[v36];
                      unsigned int v129 = v135 | 0xFFFFFF00;
                      unsigned int v130 = v135 ^ 0xFF;
                      char v131 = 8;
                    }
                  }
                  else
                  {
                    int v128 = v46[v36];
                    unsigned int v129 = v128 | 0xFFFFFF00;
                    unsigned int v130 = v128 ^ 0xFF;
                    char v131 = 8;
                    int v132 = 11;
                  }
                  unsigned int v133 = (1 << v131) - v132;
                  if ((v133 & 0x80000000) == 0)
                  {
                    if (v133 <= v130) {
                      goto LABEL_241;
                    }
                    goto LABEL_240;
                  }
LABEL_239:
                  if (v130 >= 0x7FFFFFFF) {
                    goto LABEL_241;
                  }
LABEL_240:
                  if (!v129) {
                    goto LABEL_241;
                  }
LABEL_369:
                  if (v36 <= 3)
                  {
                    unsigned int v200 = ((1 << (8 * v36)) + 1) >> (8 * v36);
                    if (v200 > 0xFFF5)
                    {
                      unsigned int v201 = *(_DWORD *)((char *)v45 + v36);
                      unsigned int v202 = v201 - 10;
                      if (v201 < 0xA) {
                        goto LABEL_389;
                      }
LABEL_377:
                      if (v36 <= 3) {
                        uint64_t v203 = v36;
                      }
                      else {
                        uint64_t v203 = 4;
                      }
                      switch(v203)
                      {
                        case 1:
                          int v204 = *(unsigned __int8 *)v45;
                          if (v36 >= 4) {
                            goto LABEL_388;
                          }
                          goto LABEL_384;
                        case 2:
                          int v204 = *v45;
                          if (v36 < 4) {
                            goto LABEL_384;
                          }
                          goto LABEL_388;
                        case 3:
                          int v204 = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
                          if (v36 < 4) {
                            goto LABEL_384;
                          }
                          goto LABEL_388;
                        case 4:
                          int v204 = *(_DWORD *)v45;
                          if (v36 < 4) {
LABEL_384:
                          }
                            unsigned int v201 = (v204 | (v202 << (8 * v36))) + 10;
                          else {
LABEL_388:
                          }
                            unsigned int v201 = v204 + 10;
                          break;
                        default:
                          break;
                      }
LABEL_389:
                      switch(v201)
                      {
                        case 0u:
                          unsigned int v205 = *((unsigned __int8 *)v45 + v27);
                          unsigned int v206 = v205 - 10;
                          if (v205 >= 0xA)
                          {
                            if (v27 <= 3) {
                              uint64_t v207 = v27;
                            }
                            else {
                              uint64_t v207 = 4;
                            }
                            switch(v207)
                            {
                              case 1:
                                int v208 = *(unsigned __int8 *)v45;
                                goto LABEL_513;
                              case 2:
                                int v208 = *v45;
                                goto LABEL_513;
                              case 3:
                                int v208 = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
                                goto LABEL_513;
                              case 4:
                                int v208 = *(_DWORD *)v45;
LABEL_513:
                                if (v27 < 4) {
                                  unsigned int v205 = (v208 | (v206 << (8 * v27))) + 10;
                                }
                                else {
                                  unsigned int v205 = v208 + 10;
                                }
                                break;
                              default:
                                break;
                            }
                          }
                          switch(v205)
                          {
                            case 1u:
                            case 8u:
                            case 9u:
                              goto LABEL_525;
                            case 2u:
                            case 3u:
                            case 4u:
                            case 5u:
                            case 6u:
                              goto LABEL_524;
                            default:
                              goto LABEL_527;
                          }
                          goto LABEL_527;
                        case 1u:
                          unsigned int v209 = *((unsigned __int8 *)v45 + v27);
                          unsigned int v210 = v209 - 10;
                          if (v209 >= 0xA)
                          {
                            if (v27 <= 3) {
                              uint64_t v211 = v27;
                            }
                            else {
                              uint64_t v211 = 4;
                            }
                            switch(v211)
                            {
                              case 1:
                                int v212 = *(unsigned __int8 *)v45;
                                goto LABEL_520;
                              case 2:
                                int v212 = *v45;
                                goto LABEL_520;
                              case 3:
                                int v212 = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
                                goto LABEL_520;
                              case 4:
                                int v212 = *(_DWORD *)v45;
LABEL_520:
                                if (v27 < 4) {
                                  unsigned int v209 = (v212 | (v210 << (8 * v27))) + 10;
                                }
                                else {
                                  unsigned int v209 = v212 + 10;
                                }
                                break;
                              default:
                                break;
                            }
                          }
                          switch(v209)
                          {
                            case 1u:
                            case 8u:
                            case 9u:
LABEL_525:
                              uint64_t v243 = v27 + 1;

                              goto LABEL_526;
                            case 2u:
                            case 3u:
                            case 4u:
                            case 5u:
                            case 6u:
LABEL_524:
                              uint64_t v243 = v27 + 1;
                              (*(void (**)(unsigned __int16 *, uint64_t))(v425 + 8))(v45, v424);
LABEL_526:
                              uint64_t v28 = v243;
                              break;
                            default:
                              break;
                          }
LABEL_527:
                          unint64_t v244 = (((unint64_t)v45 | 7) + v28) & 0xFFFFFFFFFFFFFFF8;
                          if (*(void *)(v244 + 8) >= 0xFFFFFFFFuLL)
                          {
                            swift_bridgeObjectRelease();
                            sub_1000510EC(*(void **)(v244 + 16), *(void *)(v244 + 24), *(void *)(v244 + 32), *(void *)(v244 + 40), *(void *)(v244 + 48), *(void *)(v244 + 56), *(unsigned char *)(v244 + 64));
                            int v245 = *(unsigned __int8 *)(v244 + 120);
                            if (v245 != 255) {
                              sub_10003B9C0(*(void **)(v244 + 72), *(void *)(v244 + 80), *(void *)(v244 + 88), *(void *)(v244 + 96), *(void *)(v244 + 104), *(void *)(v244 + 112), v245 & 1);
                            }
                          }
                          v220 = *(void **)((v244 + 134) & 0xFFFFFFFFFFFFFFF8);
                          goto LABEL_531;
                        case 2u:
                          uint64_t v213 = v27;
                          uint64_t v214 = v30;

                          v215 = (void **)(((unint64_t)v45 + v214) & v51);
                          switch(*((unsigned char *)v215 + v213))
                          {
                            case 1:
                            case 8:
                            case 9:
                              goto LABEL_449;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                              goto LABEL_405;
                            default:
                              goto LABEL_532;
                          }
                          goto LABEL_532;
                        case 3u:
                          uint64_t v216 = v27;
                          uint64_t v217 = v30;

                          v215 = (void **)(((unint64_t)v45 + v217) & v51);
                          switch(*((unsigned char *)v215 + v216))
                          {
                            case 1:
                            case 8:
                            case 9:
                              goto LABEL_449;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
                              goto LABEL_405;
                            default:
                              goto LABEL_532;
                          }
                          goto LABEL_532;
                        case 4u:
                          uint64_t v218 = v27;
                          uint64_t v219 = v30;

                          v215 = (void **)(((unint64_t)v45 + v219) & v51);
                          switch(*((unsigned char *)v215 + v218))
                          {
                            case 1:
                            case 8:
                            case 9:
LABEL_449:
                              v220 = *v215;
                              goto LABEL_531;
                            case 2:
                            case 3:
                            case 4:
                            case 5:
                            case 6:
LABEL_405:
                              (*(void (**)(void **, uint64_t))(v425 + 8))(v215, v424);
                              break;
                            default:
                              goto LABEL_532;
                          }
                          goto LABEL_532;
                        case 5u:
                          v220 = (void *)*((void *)v45 + 2);
                          goto LABEL_531;
                        case 6u:
                          v220 = *(void **)v45;
                          goto LABEL_531;
                        case 7u:
                          if (v31 < 0)
                          {
                            int v222 = (*(uint64_t (**)(unint64_t))(v422 + 48))(((unint64_t)v45
                                                                                            + v18
                                                                                            + 8) & v52);
                            uint64_t v20 = v18;
                          }
                          else
                          {
                            uint64_t v221 = *(void *)v45;
                            if (*(void *)v45 >= 0xFFFFFFFFuLL) {
                              LODWORD(v221) = -1;
                            }
                            int v222 = v221 + 1;
                          }
                          if (!v222)
                          {
                            uint64_t v226 = v20;
                            swift_bridgeObjectRelease();
                            (*(void (**)(unint64_t, uint64_t))(v422 + 8))(((unint64_t)v45 + v226 + 8) & v52, v423);
                          }
                          unint64_t v227 = (((unint64_t)v45 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
                          if (*(void *)(v227 + 8) < 0xFFFFFFFFuLL) {
                            goto LABEL_532;
                          }
                          swift_bridgeObjectRelease();
                          v220 = *(void **)(v227 + 16);
LABEL_531:

                          goto LABEL_532;
                        case 8u:
                          if (v33 < 0xFD)
                          {
                            unsigned int v225 = *((unsigned __int8 *)v45 + v26);
                            if (v225 < 3) {
                              goto LABEL_442;
                            }
                            unsigned int v223 = v225 - 2;
                          }
                          else
                          {
                            unsigned int v223 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v425 + 48))(v45, v33, v424);
                          }
                          if (v223) {
                            goto LABEL_532;
                          }
LABEL_442:
                          (*(void (**)(unsigned __int16 *, uint64_t))(v425 + 8))(v45, v424);
LABEL_532:
                          swift_bridgeObjectRelease();
                          swift_bridgeObjectRelease();
                          if (v36 <= 3) {
                            goto LABEL_533;
                          }
                          goto LABEL_536;
                        case 9u:
                          (*(void (**)(unint64_t, uint64_t))(v23 + 8))(((unint64_t)v45 + v34) & v53, v21);
                          goto LABEL_532;
                        default:
                          goto LABEL_532;
                      }
                    }
                    if (v200 > 0xF5)
                    {
                      unsigned int v201 = *(unsigned __int16 *)((char *)v45 + v36);
                      unsigned int v202 = v201 - 10;
                      if (v201 < 0xA) {
                        goto LABEL_389;
                      }
                      goto LABEL_377;
                    }
                  }
                  unsigned int v201 = *((unsigned __int8 *)v45 + v36);
                  unsigned int v202 = v201 - 10;
                  if (v201 < 0xA) {
                    goto LABEL_389;
                  }
                  goto LABEL_377;
                }
                goto LABEL_146;
              }
              int v99 = *(unsigned __int16 *)&v46[v97];
              if (!*(_WORD *)&v46[v97]) {
                goto LABEL_229;
              }
            }
LABEL_156:
            int v101 = (v99 - 1) << v98;
            if (v97 > 3) {
              int v101 = 0;
            }
            if (v97)
            {
              if (v97 > 3) {
                LODWORD(v97) = 4;
              }
              switch((int)v97)
              {
                case 2:
                  LODWORD(v97) = *(unsigned __int16 *)v46;
                  break;
                case 3:
                  LODWORD(v97) = *(unsigned __int16 *)v46 | (v46[2] << 16);
                  break;
                case 4:
                  LODWORD(v97) = *(_DWORD *)v46;
                  break;
                default:
                  LODWORD(v97) = *v46;
                  break;
              }
            }
            if (v93 + (v97 | v101) != -1) {
              goto LABEL_369;
            }
            goto LABEL_241;
          }
LABEL_143:
          uint64_t v95 = 1;
          goto LABEL_144;
        }
LABEL_139:
        unsigned int v93 = 0x7FFFFFFF;
        if (v36 > 3) {
          goto LABEL_143;
        }
        goto LABEL_140;
      }
    }
    else
    {
      int v87 = 11;
    }
    char v92 = 8;
    goto LABEL_136;
  }
LABEL_124:
  if (v36 > 3) {
    goto LABEL_128;
  }
  unsigned int v88 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  uint64_t v89 = 2;
  if (v88 > 0xFFF5) {
    uint64_t v89 = 4;
  }
  if (v88 <= 0xF5) {
LABEL_128:
  }
    uint64_t v89 = 1;
  unint64_t v90 = *(void *)((((unint64_t)&v46[v36 + v89] & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
  if (v90 >= 0xFFFFFFFF) {
    LODWORD(v90) = -1;
  }
  if (v90 != -1) {
    goto LABEL_369;
  }
LABEL_241:
  if (v45 == (unsigned __int16 *)v46) {
    goto LABEL_752;
  }
  if (v36 > 3) {
    goto LABEL_243;
  }
  unsigned int v137 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  if (v137 > 0xFFF5)
  {
    unsigned int v136 = *(_DWORD *)((char *)v45 + v36);
  }
  else
  {
    if (v137 <= 0xF5)
    {
LABEL_243:
      unsigned int v136 = *((unsigned __int8 *)v45 + v36);
      goto LABEL_248;
    }
    unsigned int v136 = *(unsigned __int16 *)((char *)v45 + v36);
  }
LABEL_248:
  unsigned int v138 = v136 - 10;
  size_t v420 = v26 + 1;
  uint64_t v421 = v18 + 8;
  if (v136 >= 0xA)
  {
    if (v36 <= 3) {
      uint64_t v139 = v36;
    }
    else {
      uint64_t v139 = 4;
    }
    switch(v139)
    {
      case 1:
        int v140 = *(unsigned __int8 *)v45;
        goto LABEL_257;
      case 2:
        int v140 = *v45;
        goto LABEL_257;
      case 3:
        int v140 = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
        goto LABEL_257;
      case 4:
        int v140 = *(_DWORD *)v45;
LABEL_257:
        if (v36 < 4) {
          unsigned int v136 = (v140 | (v138 << (8 * v36))) + 10;
        }
        else {
          unsigned int v136 = v140 + 10;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v427 = v51;
  uint64_t v413 = ~v18;
  size_t __n = v27 + 1;
  uint64_t v418 = v21;
  uint64_t v419 = v30;
  uint64_t v417 = v23;
  int v141 = v31;
  unsigned int v416 = v33;
  uint64_t v415 = v53;
  switch(v136)
  {
    case 0u:
      unsigned int v142 = *((unsigned __int8 *)v45 + v27);
      unsigned int v143 = v142 - 10;
      if (v142 < 0xA)
      {
        size_t v145 = v27 + 1;
      }
      else
      {
        if (v27 <= 3) {
          uint64_t v144 = v27;
        }
        else {
          uint64_t v144 = 4;
        }
        size_t v145 = v27 + 1;
        switch(v144)
        {
          case 1:
            int v146 = *(unsigned __int8 *)v45;
            goto LABEL_582;
          case 2:
            int v146 = *v45;
            goto LABEL_582;
          case 3:
            int v146 = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
            goto LABEL_582;
          case 4:
            int v146 = *(_DWORD *)v45;
LABEL_582:
            if (v27 < 4) {
              unsigned int v142 = (v146 | (v143 << (8 * v27))) + 10;
            }
            else {
              unsigned int v142 = v146 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v412 = v18;
      uint64_t v292 = v27;
      switch(v142)
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_594;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_593;
        default:
          goto LABEL_596;
      }
      goto LABEL_596;
    case 1u:
      unsigned int v147 = *((unsigned __int8 *)v45 + v27);
      unsigned int v148 = v147 - 10;
      if (v147 < 0xA)
      {
        size_t v145 = v27 + 1;
      }
      else
      {
        if (v27 <= 3) {
          uint64_t v149 = v27;
        }
        else {
          uint64_t v149 = 4;
        }
        size_t v145 = v27 + 1;
        switch(v149)
        {
          case 1:
            int v150 = *(unsigned __int8 *)v45;
            goto LABEL_589;
          case 2:
            int v150 = *v45;
            goto LABEL_589;
          case 3:
            int v150 = *v45 | (*((unsigned __int8 *)v45 + 2) << 16);
            goto LABEL_589;
          case 4:
            int v150 = *(_DWORD *)v45;
LABEL_589:
            if (v27 < 4) {
              unsigned int v147 = (v150 | (v148 << (8 * v27))) + 10;
            }
            else {
              unsigned int v147 = v150 + 10;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v412 = v18;
      uint64_t v292 = v27;
      switch(v147)
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_594:

          goto LABEL_595;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_593:
          (*(void (**)(unsigned __int16 *, uint64_t))(v425 + 8))(v45, v424);
LABEL_595:
          size_t v145 = __n;
          break;
        default:
          break;
      }
LABEL_596:
      unint64_t v293 = (((unint64_t)v45 | 7) + v145) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v293 + 8) >= 0xFFFFFFFFuLL)
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v293 + 16), *(void *)(v293 + 24), *(void *)(v293 + 32), *(void *)(v293 + 40), *(void *)(v293 + 48), *(void *)(v293 + 56), *(unsigned char *)(v293 + 64));
        int v294 = *(unsigned __int8 *)(v293 + 120);
        if (v294 != 255) {
          sub_10003B9C0(*(void **)(v293 + 72), *(void *)(v293 + 80), *(void *)(v293 + 88), *(void *)(v293 + 96), *(void *)(v293 + 104), *(void *)(v293 + 112), v294 & 1);
        }
      }

      uint64_t v27 = v292;
      uint64_t v20 = v412;
      uint64_t v21 = v418;
      uint64_t v30 = v419;
      uint64_t v23 = v417;
      int v31 = v141;
      uint64_t v33 = v416;
      uint64_t v53 = v415;
      goto LABEL_600;
    case 2u:
      uint64_t v151 = v27;
      uint64_t v152 = v20;

      uint64_t v53 = v415;
      uint64_t v33 = v416;
      int v31 = v141;
      uint64_t v23 = v417;
      uint64_t v21 = v418;
      uint64_t v30 = v419;
      uint64_t v20 = v152;
      uint64_t v27 = v151;
      v153 = (id *)(((unint64_t)v45 + v419) & v427);
      switch(*((unsigned char *)v153 + v151))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_472;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_276;
        default:
          goto LABEL_600;
      }
      goto LABEL_600;
    case 3u:
      uint64_t v151 = v27;
      uint64_t v152 = v20;

      uint64_t v53 = v415;
      uint64_t v33 = v416;
      int v31 = v141;
      uint64_t v23 = v417;
      uint64_t v21 = v418;
      uint64_t v30 = v419;
      uint64_t v20 = v152;
      uint64_t v27 = v151;
      v153 = (id *)(((unint64_t)v45 + v419) & v427);
      switch(*((unsigned char *)v153 + v151))
      {
        case 1:
        case 8:
        case 9:
          goto LABEL_472;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
          goto LABEL_276;
        default:
          goto LABEL_600;
      }
      goto LABEL_600;
    case 4u:
      uint64_t v151 = v27;
      uint64_t v152 = v20;

      uint64_t v53 = v415;
      uint64_t v33 = v416;
      int v31 = v141;
      uint64_t v23 = v417;
      uint64_t v21 = v418;
      uint64_t v30 = v419;
      uint64_t v20 = v152;
      uint64_t v27 = v151;
      v153 = (id *)(((unint64_t)v45 + v419) & v427);
      switch(*((unsigned char *)v153 + v151))
      {
        case 1:
        case 8:
        case 9:
LABEL_472:

          goto LABEL_471;
        case 2:
        case 3:
        case 4:
        case 5:
        case 6:
LABEL_276:
          v154 = *(void (**)(void))(v425 + 8);
          goto LABEL_470;
        default:
          goto LABEL_600;
      }
      goto LABEL_600;
    case 5u:
      v155 = (void *)*((void *)v45 + 2);
      goto LABEL_284;
    case 6u:
      v155 = *(void **)v45;
LABEL_284:
      uint64_t v151 = v27;
      uint64_t v152 = v20;

      goto LABEL_471;
    case 7u:
      if (v31 < 0)
      {
        uint64_t v232 = ((unint64_t)v45 + v18 + 8) & v413;
        uint64_t v233 = v18;
        uint64_t v234 = v27;
        int v157 = (*(uint64_t (**)(uint64_t))(v422 + 48))(v232);
        uint64_t v53 = v415;
        uint64_t v33 = v416;
        int v31 = v141;
        uint64_t v23 = v417;
        uint64_t v21 = v418;
        uint64_t v30 = v419;
        uint64_t v20 = v233;
        uint64_t v27 = v234;
      }
      else
      {
        uint64_t v156 = *(void *)v45;
        if (*(void *)v45 >= 0xFFFFFFFFuLL) {
          LODWORD(v156) = -1;
        }
        int v157 = v156 + 1;
      }
      if (!v157)
      {
        uint64_t v235 = v27;
        uint64_t v236 = v20;
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v422 + 8))(((unint64_t)v45 + v236 + 8) & v413, v423);
        uint64_t v53 = v415;
        uint64_t v33 = v416;
        int v31 = v141;
        uint64_t v23 = v417;
        uint64_t v21 = v418;
        uint64_t v30 = v419;
        uint64_t v20 = v236;
        uint64_t v27 = v235;
      }
      unint64_t v237 = (((unint64_t)v45 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
      if (*(void *)(v237 + 8) >= 0xFFFFFFFFuLL)
      {
        uint64_t v238 = v27;
        uint64_t v239 = v20;
        swift_bridgeObjectRelease();

        uint64_t v53 = v415;
        uint64_t v33 = v416;
        int v31 = v141;
        uint64_t v23 = v417;
        uint64_t v21 = v418;
        uint64_t v30 = v419;
        uint64_t v20 = v239;
        v37 = v428;
        uint64_t v27 = v238;
      }
      goto LABEL_600;
    case 8u:
      if (v33 < 0xFD)
      {
        unsigned int v231 = *((unsigned __int8 *)v45 + v26);
        if (v231 < 3) {
          goto LABEL_468;
        }
        unsigned int v160 = v231 - 2;
      }
      else
      {
        uint64_t v158 = v18;
        uint64_t v159 = v27;
        unsigned int v160 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v425 + 48))(v45, v33, v424);
        uint64_t v53 = v415;
        uint64_t v33 = v416;
        int v31 = v141;
        uint64_t v23 = v417;
        uint64_t v21 = v418;
        uint64_t v30 = v419;
        uint64_t v20 = v158;
        uint64_t v27 = v159;
      }
      if (v160) {
        goto LABEL_600;
      }
LABEL_468:
      v154 = *(void (**)(void))(v425 + 8);
      uint64_t v152 = v20;
LABEL_469:
      uint64_t v151 = v27;
LABEL_470:
      v154();
LABEL_471:
      uint64_t v53 = v415;
      uint64_t v33 = v416;
      int v31 = v141;
      uint64_t v23 = v417;
      uint64_t v21 = v418;
      uint64_t v30 = v419;
      uint64_t v20 = v152;
      uint64_t v27 = v151;
LABEL_600:
      if (v36 > 3) {
        goto LABEL_601;
      }
      unsigned int v296 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v296 > 0xFFF5)
      {
        unsigned int v295 = *(_DWORD *)&v46[v36];
      }
      else if (v296 <= 0xF5)
      {
LABEL_601:
        unsigned int v295 = v46[v36];
      }
      else
      {
        unsigned int v295 = *(unsigned __int16 *)&v46[v36];
      }
      unsigned int v297 = v295 - 10;
      if (v295 >= 0xA)
      {
        if (v36 <= 3) {
          uint64_t v298 = v36;
        }
        else {
          uint64_t v298 = 4;
        }
        switch(v298)
        {
          case 1:
            int v299 = *v46;
            goto LABEL_615;
          case 2:
            int v299 = *(unsigned __int16 *)v46;
            goto LABEL_615;
          case 3:
            int v299 = *(unsigned __int16 *)v46 | (v46[2] << 16);
            goto LABEL_615;
          case 4:
            int v299 = *(_DWORD *)v46;
LABEL_615:
            if (v36 < 4) {
              unsigned int v295 = (v299 | (v297 << (8 * v36))) + 10;
            }
            else {
              unsigned int v295 = v299 + 10;
            }
            break;
          default:
            goto LABEL_618;
        }
      }
      break;
    case 9u:
      v154 = *(void (**)(void))(v23 + 8);
      uint64_t v152 = v18;
      goto LABEL_469;
    default:
      goto LABEL_600;
  }
LABEL_618:
  switch(v295)
  {
    case 0u:
      unsigned int v300 = v46[v27];
      unsigned int v301 = v300 - 10;
      if (v300 >= 0xA)
      {
        if (v27 <= 3) {
          uint64_t v302 = v27;
        }
        else {
          uint64_t v302 = 4;
        }
        switch(v302)
        {
          case 1:
            int v303 = *v46;
            goto LABEL_712;
          case 2:
            int v303 = *(unsigned __int16 *)v46;
            goto LABEL_712;
          case 3:
            int v303 = *(unsigned __int16 *)v46 | (v46[2] << 16);
            goto LABEL_712;
          case 4:
            int v303 = *(_DWORD *)v46;
LABEL_712:
            if (v27 < 4) {
              unsigned int v300 = (v303 | (v301 << (8 * v27))) + 10;
            }
            else {
              unsigned int v300 = v303 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v300)
      {
        case 1u:
          *(void *)v45 = *(void *)v46;
          char v332 = 1;
          break;
        case 2u:
          uint64_t v334 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v334;
          char v332 = 2;
          break;
        case 3u:
          uint64_t v335 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v335;
          char v332 = 3;
          break;
        case 4u:
          uint64_t v336 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v336;
          char v332 = 4;
          break;
        case 5u:
          uint64_t v337 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v337;
          char v332 = 5;
          break;
        case 6u:
          uint64_t v344 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v344;
          char v332 = 6;
          break;
        case 7u:
          long long v338 = *(_OWORD *)v46;
          *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)(v46 + 9);
          *(_OWORD *)v45 = v338;
          char v332 = 7;
          break;
        case 8u:
          *(void *)v45 = *(void *)v46;
          char v332 = 8;
          break;
        case 9u:
          *(void *)v45 = *(void *)v46;
          char v332 = 9;
          break;
        default:
          char v332 = 0;
          *(unsigned char *)v45 = *v46;
          break;
      }
      *((unsigned char *)v45 + v27) = v332;
      unint64_t v345 = (((unint64_t)v45 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v346 = (unint64_t)&v46[v27 + 8] & 0xFFFFFFFFFFFFFFF8;
      long long v347 = *(_OWORD *)v346;
      long long v348 = *(_OWORD *)(v346 + 16);
      long long v349 = *(_OWORD *)(v346 + 48);
      *(_OWORD *)(v345 + 32) = *(_OWORD *)(v346 + 32);
      *(_OWORD *)(v345 + 48) = v349;
      *(_OWORD *)unint64_t v345 = v347;
      *(_OWORD *)(v345 + 16) = v348;
      long long v350 = *(_OWORD *)(v346 + 64);
      long long v351 = *(_OWORD *)(v346 + 80);
      long long v352 = *(_OWORD *)(v346 + 96);
      *(_OWORD *)(v345 + 106) = *(_OWORD *)(v346 + 106);
      *(_OWORD *)(v345 + 80) = v351;
      *(_OWORD *)(v345 + 96) = v352;
      *(_OWORD *)(v345 + 64) = v350;
      *(unsigned char *)(v345 + 122) = *(unsigned char *)(v346 + 122);
      *(unsigned char *)(v345 + 123) = *(unsigned char *)(v346 + 123);
      *(unsigned char *)(v345 + 124) = *(unsigned char *)(v346 + 124);
      *(unsigned char *)(v345 + 125) = *(unsigned char *)(v346 + 125);
      *(unsigned char *)(v345 + 126) = *(unsigned char *)(v346 + 126);
      *(void *)((v345 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v346 + 134) & 0xFFFFFFFFFFFFFFF8);
      if (v36 > 3) {
        goto LABEL_742;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        *(_DWORD *)((char *)v45 + v36) = 0;
      }
      else
      {
        if (v324 <= 0xF5)
        {
LABEL_742:
          *((unsigned char *)v45 + v36) = 0;
          break;
        }
        *(unsigned __int16 *)((char *)v45 + v36) = 0;
      }
      goto LABEL_761;
    case 1u:
      unsigned int v304 = v46[v27];
      unsigned int v305 = v304 - 10;
      if (v304 >= 0xA)
      {
        if (v27 <= 3) {
          uint64_t v306 = v27;
        }
        else {
          uint64_t v306 = 4;
        }
        switch(v306)
        {
          case 1:
            int v307 = *v46;
            goto LABEL_720;
          case 2:
            int v307 = *(unsigned __int16 *)v46;
            goto LABEL_720;
          case 3:
            int v307 = *(unsigned __int16 *)v46 | (v46[2] << 16);
            goto LABEL_720;
          case 4:
            int v307 = *(_DWORD *)v46;
LABEL_720:
            if (v27 < 4) {
              unsigned int v304 = (v307 | (v305 << (8 * v27))) + 10;
            }
            else {
              unsigned int v304 = v307 + 10;
            }
            break;
          default:
            break;
        }
      }
      switch(v304)
      {
        case 1u:
          *(void *)v45 = *(void *)v46;
          char v333 = 1;
          break;
        case 2u:
          uint64_t v339 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v339;
          char v333 = 2;
          break;
        case 3u:
          uint64_t v340 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v340;
          char v333 = 3;
          break;
        case 4u:
          uint64_t v341 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v341;
          char v333 = 4;
          break;
        case 5u:
          uint64_t v342 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v342;
          char v333 = 5;
          break;
        case 6u:
          uint64_t v353 = v27;
          (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
          uint64_t v27 = v353;
          char v333 = 6;
          break;
        case 7u:
          long long v343 = *(_OWORD *)v46;
          *(_OWORD *)((char *)v45 + 9) = *(_OWORD *)(v46 + 9);
          *(_OWORD *)v45 = v343;
          char v333 = 7;
          break;
        case 8u:
          *(void *)v45 = *(void *)v46;
          char v333 = 8;
          break;
        case 9u:
          *(void *)v45 = *(void *)v46;
          char v333 = 9;
          break;
        default:
          char v333 = 0;
          *(unsigned char *)v45 = *v46;
          break;
      }
      *((unsigned char *)v45 + v27) = v333;
      unint64_t v354 = (((unint64_t)v45 | 7) + __n) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v355 = (unint64_t)&v46[v27 + 8] & 0xFFFFFFFFFFFFFFF8;
      long long v356 = *(_OWORD *)v355;
      long long v357 = *(_OWORD *)(v355 + 16);
      long long v358 = *(_OWORD *)(v355 + 48);
      *(_OWORD *)(v354 + 32) = *(_OWORD *)(v355 + 32);
      *(_OWORD *)(v354 + 48) = v358;
      *(_OWORD *)unint64_t v354 = v356;
      *(_OWORD *)(v354 + 16) = v357;
      long long v359 = *(_OWORD *)(v355 + 64);
      long long v360 = *(_OWORD *)(v355 + 80);
      long long v361 = *(_OWORD *)(v355 + 96);
      *(_OWORD *)(v354 + 106) = *(_OWORD *)(v355 + 106);
      *(_OWORD *)(v354 + 80) = v360;
      *(_OWORD *)(v354 + 96) = v361;
      *(_OWORD *)(v354 + 64) = v359;
      *(unsigned char *)(v354 + 122) = *(unsigned char *)(v355 + 122);
      *(unsigned char *)(v354 + 123) = *(unsigned char *)(v355 + 123);
      *(unsigned char *)(v354 + 124) = *(unsigned char *)(v355 + 124);
      *(unsigned char *)(v354 + 125) = *(unsigned char *)(v355 + 125);
      *(unsigned char *)(v354 + 126) = *(unsigned char *)(v355 + 126);
      *(void *)((v354 + 134) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v355 + 134) & 0xFFFFFFFFFFFFFFF8);
      if (v36 > 3) {
        goto LABEL_750;
      }
      int v331 = 1;
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5) {
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_750:
        char v318 = 1;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 1;
      goto LABEL_761;
    case 2u:
      v308 = v37;
      *(void *)v45 = *(void *)v46;
      v309 = (unsigned char *)(((unint64_t)v45 + v30) & v427);
      v310 = (unsigned char *)((unint64_t)&v46[v30] & v427);
      switch(v310[v27])
      {
        case 0:
          unsigned char *v309 = *v310;
          v309[v27] = 0;
          break;
        case 1:
          *(void *)v309 = *(void *)v310;
          v309[v27] = 1;
          break;
        case 2:
          uint64_t v394 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v309[v394] = 2;
          break;
        case 3:
          uint64_t v395 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v309[v395] = 3;
          break;
        case 4:
          uint64_t v396 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v309[v396] = 4;
          break;
        case 5:
          uint64_t v397 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v309[v397] = 5;
          break;
        case 6:
          uint64_t v398 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v309[v398] = 6;
          break;
        case 7:
          long long v399 = *(_OWORD *)v310;
          *(_OWORD *)((((unint64_t)v45 + v30) & v427) + 9) = *(_OWORD *)(((unint64_t)&v46[v30] & v427) + 9);
          *(_OWORD *)v309 = v399;
          v309[v27] = 7;
          break;
        case 8:
          *(void *)v309 = *(void *)v310;
          v309[v27] = 8;
          break;
        case 9:
          *(void *)v309 = *(void *)v310;
          v309[v27] = 9;
          break;
        default:
          memcpy((void *)(((unint64_t)v45 + v30) & v427), v310, __n);
          break;
      }
      v37 = v308;
      if (v36 > 3) {
        goto LABEL_659;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 2;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_659:
        char v318 = 2;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 2;
      goto LABEL_761;
    case 3u:
      v311 = v37;
      *(void *)v45 = *(void *)v46;
      v312 = (unsigned char *)(((unint64_t)v45 + v30) & v427);
      v313 = (unsigned char *)((unint64_t)&v46[v30] & v427);
      switch(v313[v27])
      {
        case 0:
          unsigned char *v312 = *v313;
          v312[v27] = 0;
          break;
        case 1:
          *(void *)v312 = *(void *)v313;
          v312[v27] = 1;
          break;
        case 2:
          uint64_t v400 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v312[v400] = 2;
          break;
        case 3:
          uint64_t v401 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v312[v401] = 3;
          break;
        case 4:
          uint64_t v402 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v312[v402] = 4;
          break;
        case 5:
          uint64_t v403 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v312[v403] = 5;
          break;
        case 6:
          uint64_t v404 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v312[v404] = 6;
          break;
        case 7:
          long long v405 = *(_OWORD *)v313;
          *(_OWORD *)((((unint64_t)v45 + v30) & v427) + 9) = *(_OWORD *)(((unint64_t)&v46[v30] & v427) + 9);
          *(_OWORD *)v312 = v405;
          v312[v27] = 7;
          break;
        case 8:
          *(void *)v312 = *(void *)v313;
          v312[v27] = 8;
          break;
        case 9:
          *(void *)v312 = *(void *)v313;
          v312[v27] = 9;
          break;
        default:
          memcpy((void *)(((unint64_t)v45 + v30) & v427), v313, __n);
          break;
      }
      v37 = v311;
      if (v36 > 3) {
        goto LABEL_662;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 3;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_662:
        char v318 = 3;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 3;
      goto LABEL_761;
    case 4u:
      v314 = v37;
      *(void *)v45 = *(void *)v46;
      v315 = (unsigned char *)(((unint64_t)v45 + v30) & v427);
      v316 = (unsigned char *)((unint64_t)&v46[v30] & v427);
      switch(v316[v27])
      {
        case 0:
          unsigned char *v315 = *v316;
          v315[v27] = 0;
          break;
        case 1:
          *(void *)v315 = *(void *)v316;
          v315[v27] = 1;
          break;
        case 2:
          uint64_t v406 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v315[v406] = 2;
          break;
        case 3:
          uint64_t v407 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v315[v407] = 3;
          break;
        case 4:
          uint64_t v408 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v315[v408] = 4;
          break;
        case 5:
          uint64_t v409 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v315[v409] = 5;
          break;
        case 6:
          uint64_t v410 = v27;
          (*(void (**)(unint64_t))(v425 + 32))(((unint64_t)v45 + v30) & v427);
          v315[v410] = 6;
          break;
        case 7:
          long long v411 = *(_OWORD *)v316;
          *(_OWORD *)((((unint64_t)v45 + v30) & v427) + 9) = *(_OWORD *)(((unint64_t)&v46[v30] & v427) + 9);
          *(_OWORD *)v315 = v411;
          v315[v27] = 7;
          break;
        case 8:
          *(void *)v315 = *(void *)v316;
          v315[v27] = 8;
          break;
        case 9:
          *(void *)v315 = *(void *)v316;
          v315[v27] = 9;
          break;
        default:
          memcpy((void *)(((unint64_t)v45 + v30) & v427), v316, __n);
          break;
      }
      v37 = v314;
      if (v36 > 3) {
        goto LABEL_665;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 4;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_665:
        char v318 = 4;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 4;
      goto LABEL_761;
    case 5u:
      long long v317 = *(_OWORD *)v46;
      *((void *)v45 + 2) = *((void *)v46 + 2);
      *(_OWORD *)v45 = v317;
      if (v36 > 3) {
        goto LABEL_638;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 5;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_638:
        char v318 = 5;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 5;
      goto LABEL_761;
    case 6u:
      *(void *)v45 = *(void *)v46;
      if (v36 > 3) {
        goto LABEL_654;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 6;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_654:
        char v318 = 6;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 6;
      goto LABEL_761;
    case 7u:
      if (v31 < 0)
      {
        uint64_t v319 = v421;
        uint64_t v327 = v20;
        int v321 = (*(uint64_t (**)(unint64_t))(v422 + 48))((unint64_t)&v46[v421] & v413);
        uint64_t v20 = v327;
      }
      else
      {
        uint64_t v319 = v421;
        uint64_t v320 = *(void *)v46;
        if (*(void *)v46 >= 0xFFFFFFFFuLL) {
          LODWORD(v320) = -1;
        }
        int v321 = v320 + 1;
      }
      if (v321)
      {
        memcpy(v45, v46, v32);
      }
      else
      {
        *(void *)v45 = *(void *)v46;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(((unint64_t)v45 + v20 + 8) & v413, (unint64_t)&v46[v319] & v413, v423);
      }
      unint64_t v328 = (((unint64_t)v46 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
      long long v329 = *(_OWORD *)v328;
      unint64_t v330 = (((unint64_t)v45 | 7) + v32) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v330 + 16) = *(void *)(v328 + 16);
      *(_OWORD *)unint64_t v330 = v329;
      if (v36 > 3) {
        goto LABEL_695;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 7;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_695:
        char v318 = 7;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 7;
      goto LABEL_761;
    case 8u:
      if (v33 < 0xFD)
      {
        unsigned int v326 = v46[v26];
        if (v326 < 3) {
          goto LABEL_685;
        }
        unsigned int v325 = v326 - 2;
      }
      else
      {
        unsigned int v325 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v425 + 48))(v46, v33, v424);
      }
      if (v325)
      {
        memcpy(v45, v46, v420);
        goto LABEL_686;
      }
LABEL_685:
      (*(void (**)(unsigned __int16 *, unsigned __int8 *, uint64_t))(v425 + 32))(v45, v46, v424);
      *((unsigned char *)v45 + v26) = v46[v26];
LABEL_686:
      *(void *)((((unint64_t)v45 | 7) + v420) & 0xFFFFFFFFFFFFFFF8) = *(void *)((((unint64_t)v46 | 7)
                                                                                            + v420) & 0xFFFFFFFFFFFFFFF8);
      if (v36 > 3) {
        goto LABEL_689;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 8;
        goto LABEL_760;
      }
      if (v324 <= 0xF5)
      {
LABEL_689:
        char v318 = 8;
        goto LABEL_751;
      }
      *(unsigned __int16 *)((char *)v45 + v36) = 8;
      goto LABEL_761;
    case 9u:
      *(unsigned char *)v45 = *v46;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v23 + 32))(((unint64_t)v45 + v34) & v53, (unint64_t)&v46[v34] & v53, v21);
      if (v36 > 3) {
        goto LABEL_644;
      }
      unsigned int v324 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      if (v324 > 0xFFF5)
      {
        int v331 = 9;
LABEL_760:
        *(_DWORD *)((char *)v45 + v36) = v331;
        goto LABEL_761;
      }
      if (v324 > 0xF5)
      {
        *(unsigned __int16 *)((char *)v45 + v36) = 9;
LABEL_761:
        BOOL v288 = v324 > 0xFFF5;
        uint64_t v363 = 2;
        if (v288) {
          uint64_t v363 = 4;
        }
        goto LABEL_763;
      }
LABEL_644:
      char v318 = 9;
LABEL_751:
      *((unsigned char *)v45 + v36) = v318;
      break;
    default:
      if (v36 > 3) {
        goto LABEL_649;
      }
      unsigned int v322 = ((1 << (8 * v36)) + 1) >> (8 * v36);
      uint64_t v323 = 2;
      if (v322 > 0xFFF5) {
        uint64_t v323 = 4;
      }
      if (v322 <= 0xF5) {
LABEL_649:
      }
        uint64_t v323 = 1;
      memcpy(v45, v46, v323 + v36);
      break;
  }
LABEL_752:
  if (v36 > 3) {
    goto LABEL_756;
  }
  unsigned int v362 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  uint64_t v363 = 2;
  if (v362 > 0xFFF5) {
    uint64_t v363 = 4;
  }
  if (v362 <= 0xF5) {
LABEL_756:
  }
    uint64_t v363 = 1;
LABEL_763:
  uint64_t v364 = v363 + v36;
  unint64_t v365 = (unint64_t)v45 + v364;
  unint64_t v366 = (unint64_t)&v46[v364];
  *(unsigned char *)unint64_t v365 = *(unsigned char *)v366;
  unint64_t v367 = v365 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v368 = v366 & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v367 + 8) = *(void *)((v366 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(void *)(v367 + 16) = *(void *)((v366 & 0xFFFFFFFFFFFFFFF8) + 16);
  swift_bridgeObjectRelease();
  *(void *)((v367 + 31) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v368 + 31) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  if (v36 > 3) {
    goto LABEL_767;
  }
LABEL_764:
  unsigned int v369 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  uint64_t v370 = 2;
  if (v369 > 0xFFF5) {
    uint64_t v370 = 4;
  }
  if (v369 <= 0xF5) {
LABEL_767:
  }
    uint64_t v370 = 1;
  unint64_t v371 = ((((v370 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 8;
  *(void *)(((unint64_t)v45 + v371) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v46[v371] & 0xFFFFFFFFFFFFFFF8);
  if (v36 > 3) {
    goto LABEL_772;
  }
LABEL_769:
  unsigned int v372 = ((1 << (8 * v36)) + 1) >> (8 * v36);
  uint64_t v373 = 2;
  if (v372 > 0xFFF5) {
    uint64_t v373 = 4;
  }
  if (v372 <= 0xF5) {
    goto LABEL_772;
  }
LABEL_773:
  unint64_t v374 = ((((((v373 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  *((unsigned char *)v45 + v374) = v46[v374];
  return v37;
}

uint64_t sub_10062649C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v109 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v109 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  if (v6) {
    unsigned int v7 = v6 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = 25;
  if (v9 > 0x19) {
    uint64_t v10 = *(void *)(v8 + 64);
  }
  uint64_t v11 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v12 = v11 | 7;
  uint64_t v13 = v10 + ((v11 + 15) & ~(v11 | 7));
  unint64_t v14 = (((v10 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v15 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = ((*(void *)(v15 + 64) + ((v16 + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v13 + 1 > v14) {
    unint64_t v18 = v13 + 1;
  }
  else {
    unint64_t v18 = v14;
  }
  if (v18 > v17) {
    unint64_t v17 = v18;
  }
  if (v17 <= (v9 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = (v9 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v19 = v17;
  }
  uint64_t v20 = *(void *)(type metadata accessor for AnyTip() - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = ((v21 + 1) & ~v21) + *(void *)(v20 + 64);
  if (v19 > v22) {
    unint64_t v22 = v19;
  }
  if (v22 <= 0x18) {
    unint64_t v22 = 24;
  }
  char v23 = 8 * v22;
  if (v22 > 3)
  {
    int v24 = 11;
LABEL_20:
    char v25 = 8;
    goto LABEL_21;
  }
  unsigned int v29 = ((1 << v23) + 1) >> v23;
  if (v29 > 0xFFF5)
  {
LABEL_29:
    unsigned int v28 = 2147483646;
    goto LABEL_30;
  }
  int v24 = v29 + 10;
  if (v29 <= 0xF5) {
    goto LABEL_20;
  }
  char v25 = 16;
LABEL_21:
  unsigned int v26 = (1 << v25) - v24;
  if (v26 <= 0x7FFFFFFF) {
    int v27 = 0x7FFFFFFF;
  }
  else {
    int v27 = v26;
  }
  if ((v26 & 0x80000000) != 0) {
    goto LABEL_29;
  }
  unsigned int v28 = v27 - 1;
LABEL_30:
  if (v28 <= v7) {
    unsigned int v30 = v7;
  }
  else {
    unsigned int v30 = v28;
  }
  uint64_t v31 = *(void *)(v5 + 64);
  if (!v6) {
    ++v31;
  }
  if (v22 > 3) {
    goto LABEL_39;
  }
  unsigned int v32 = ((1 << v23) + 1) >> v23;
  uint64_t v33 = 2;
  if (v32 > 0xFFF5) {
    uint64_t v33 = 4;
  }
  if (v32 <= 0xF5) {
LABEL_39:
  }
    uint64_t v33 = 1;
  if (!a2) {
    return 0;
  }
  uint64_t v34 = v16 | v12 | v21;
  uint64_t v35 = v31 + v34;
  if (a2 > v30)
  {
    unint64_t v36 = (v35 & ~v34)
        + ((((((v33 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    char v37 = 8 * v36;
    if (v36 > 3) {
      goto LABEL_43;
    }
    unsigned int v39 = ((a2 - v30 + ~(-1 << v37)) >> v37) + 1;
    if (HIWORD(v39))
    {
      int v38 = *(_DWORD *)((char *)a1 + v36);
      if (!v38) {
        goto LABEL_60;
      }
      goto LABEL_50;
    }
    if (v39 > 0xFF)
    {
      int v38 = *(unsigned __int16 *)((char *)a1 + v36);
      if (!*(unsigned __int16 *)((char *)a1 + v36)) {
        goto LABEL_60;
      }
      goto LABEL_50;
    }
    if (v39 >= 2)
    {
LABEL_43:
      int v38 = *((unsigned __int8 *)a1 + v36);
      if (!*((unsigned char *)a1 + v36)) {
        goto LABEL_60;
      }
LABEL_50:
      int v40 = (v38 - 1) << v37;
      if (v36 > 3) {
        int v40 = 0;
      }
      if (v36)
      {
        if (v36 <= 3) {
          int v41 = v36;
        }
        else {
          int v41 = 4;
        }
        switch(v41)
        {
          case 2:
            int v42 = *a1;
            break;
          case 3:
            int v42 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a1;
            break;
          default:
            int v42 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v42 = 0;
      }
      return v30 + (v42 | v40) + 1;
    }
  }
LABEL_60:
  if (v22 > 3)
  {
    int v43 = 11;
LABEL_62:
    char v44 = 8;
    goto LABEL_63;
  }
  unsigned int v48 = ((1 << v23) + 1) >> v23;
  if (v48 > 0xFFF5)
  {
LABEL_71:
    unsigned int v47 = 2147483646;
    goto LABEL_72;
  }
  int v43 = v48 + 10;
  if (v48 <= 0xF5) {
    goto LABEL_62;
  }
  char v44 = 16;
LABEL_63:
  unsigned int v45 = (1 << v44) - v43;
  if (v45 <= 0x7FFFFFFF) {
    int v46 = 0x7FFFFFFF;
  }
  else {
    int v46 = v45;
  }
  if ((v45 & 0x80000000) != 0) {
    goto LABEL_71;
  }
  unsigned int v47 = v46 - 1;
LABEL_72:
  if (v47 <= v7) {
    unsigned int v49 = v7;
  }
  else {
    unsigned int v49 = v47;
  }
  if (v7 < v47)
  {
    uint64_t v50 = ~v34;
    unint64_t v51 = (unint64_t)a1 + v35;
    if (v22 <= 3)
    {
      unsigned int v59 = ((1 << v23) + 1) >> v23;
      if (v59 > 0xFFF5) {
        goto LABEL_91;
      }
      int v52 = v59 + 10;
      if (v59 > 0xF5)
      {
        char v53 = 16;
LABEL_79:
        unsigned int v54 = (1 << v53) - v52;
        if (v54 <= 0x7FFFFFFF) {
          int v55 = 0x7FFFFFFF;
        }
        else {
          int v55 = v54;
        }
        if ((v54 & 0x80000000) == 0)
        {
          unsigned int v56 = v55 - 1;
LABEL_92:
          unsigned int v60 = (unsigned __int16 *)(v51 & v50);
          if (v22 > 3) {
            goto LABEL_96;
          }
          unsigned int v61 = ((1 << v23) + 1) >> v23;
          uint64_t v62 = 2;
          if (v61 > 0xFFF5) {
            uint64_t v62 = 4;
          }
          if (v61 <= 0xF5) {
LABEL_96:
          }
            uint64_t v62 = 1;
          unsigned int v63 = v49 - v56;
          if (v49 > v56)
          {
            unint64_t v64 = ((((((v62 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                + 8;
            uint64_t v65 = v64 & 0xFFFFFFF8;
            if ((v64 & 0xFFFFFFF8) != 0) {
              unsigned int v66 = 2;
            }
            else {
              unsigned int v66 = v63 + 1;
            }
            if (v66 >= 0x10000) {
              unsigned int v67 = 4;
            }
            else {
              unsigned int v67 = 2;
            }
            if (v66 < 0x100) {
              unsigned int v67 = 1;
            }
            if (v66 >= 2) {
              uint64_t v68 = v67;
            }
            else {
              uint64_t v68 = 0;
            }
            switch(v68)
            {
              case 1:
                int v69 = *((unsigned __int8 *)v60 + v64);
                if (!v69) {
                  break;
                }
                goto LABEL_117;
              case 2:
                int v69 = *(unsigned __int16 *)((char *)v60 + v64);
                if (v69) {
                  goto LABEL_117;
                }
                break;
              case 3:
                __break(1u);
                JUMPOUT(0x100626E44);
              case 4:
                int v69 = *(_DWORD *)((char *)v60 + v64);
                if (!v69) {
                  break;
                }
LABEL_117:
                int v70 = v69 - 1;
                if (v65)
                {
                  int v70 = 0;
                  int v71 = *(_DWORD *)v60;
                }
                else
                {
                  int v71 = 0;
                }
                return v56 + (v71 | v70) + 1;
              default:
                break;
            }
          }
          if (v22 <= 3)
          {
            unsigned int v83 = ((1 << v23) + 1) >> v23;
            if (v83 > 0xFFF5)
            {
              unsigned int v75 = 0x7FFFFFFF;
              if (v22 > 3)
              {
LABEL_129:
                int v77 = 11;
                goto LABEL_130;
              }
LABEL_154:
              unsigned int v91 = ((1 << v23) + 1) >> v23;
              if (v91 > 0xFFF5) {
                goto LABEL_157;
              }
              int v77 = v91 + 10;
              if (v91 > 0xF5)
              {
                char v78 = 16;
LABEL_131:
                int v79 = (1 << v78) - v77;
                if ((v79 & 0x80000000) == 0)
                {
                  if (v79 == v75) {
                    goto LABEL_133;
                  }
                  goto LABEL_158;
                }
LABEL_157:
                if (v75 == 0x7FFFFFFF)
                {
LABEL_133:
                  if (v22 <= 3)
                  {
                    unsigned int v84 = ((1 << v23) + 1) >> v23;
                    if (v84 > 0xFFF5) {
                      goto LABEL_145;
                    }
                    int v80 = v84 + 10;
                    if (v84 > 0xF5)
                    {
                      char v81 = 16;
LABEL_136:
                      unsigned int v82 = (1 << v81) - v80;
                      if ((v82 & 0x80000000) == 0)
                      {
                        if (v22 > 3) {
                          goto LABEL_149;
                        }
LABEL_146:
                        unsigned int v85 = ((1 << v23) + 1) >> v23;
                        uint64_t v86 = 2;
                        if (v85 > 0xFFF5) {
                          uint64_t v86 = 4;
                        }
                        if (v85 > 0xF5)
                        {
LABEL_150:
                          unsigned int v87 = v75 - v82;
                          if (v75 <= v82) {
                            goto LABEL_183;
                          }
                          unint64_t v88 = v86 + v22;
                          char v89 = 8 * (v86 + v22);
                          if (v88 > 3)
                          {
LABEL_152:
                            int v90 = *((unsigned __int8 *)v60 + v88);
                            goto LABEL_174;
                          }
                          unsigned int v96 = ((v87 + ~(-1 << v89)) >> v89) + 1;
                          if (HIWORD(v96))
                          {
                            int v90 = *(_DWORD *)((char *)v60 + v88);
                          }
                          else
                          {
                            if (v96 <= 0xFF)
                            {
                              if (v96 < 2) {
                                goto LABEL_183;
                              }
                              goto LABEL_152;
                            }
                            int v90 = *(unsigned __int16 *)((char *)v60 + v88);
                          }
LABEL_174:
                          if (v90)
                          {
                            int v97 = (v90 - 1) << v89;
                            if (v88 > 3) {
                              int v97 = 0;
                            }
                            if (v88)
                            {
                              if (v88 <= 3) {
                                int v98 = v88;
                              }
                              else {
                                int v98 = 4;
                              }
                              switch(v98)
                              {
                                case 2:
                                  int v99 = *v60;
                                  break;
                                case 3:
                                  int v99 = *v60 | (*((unsigned __int8 *)v60 + 2) << 16);
                                  break;
                                case 4:
                                  int v99 = *(_DWORD *)v60;
                                  break;
                                default:
                                  int v99 = *(unsigned __int8 *)v60;
                                  break;
                              }
                            }
                            else
                            {
                              int v99 = 0;
                            }
                            unsigned int v95 = v82 + (v99 | v97) + 1;
                            goto LABEL_201;
                          }
LABEL_183:
                          if (!v82) {
                            return 0;
                          }
                          if (v22 <= 3)
                          {
                            unsigned int v106 = ((1 << v23) + 1) >> v23;
                            if (v106 > 0xFFF5)
                            {
                              unsigned int v101 = *(_DWORD *)((char *)v60 + v22);
                              unsigned int v102 = ~v101;
LABEL_192:
                              unsigned int v105 = 0x7FFFFFFF;
LABEL_193:
                              if (v105 > v102)
                              {
                                unsigned int v95 = -v101;
                                goto LABEL_201;
                              }
                              return 0;
                            }
                            int v104 = v106 + 10;
                            if (v106 > 0xF5)
                            {
                              int v108 = *(unsigned __int16 *)((char *)v60 + v22);
                              unsigned int v101 = v108 | 0xFFFF0000;
                              unsigned int v102 = v108 ^ 0xFFFF;
                              char v103 = 16;
                            }
                            else
                            {
                              int v107 = *((unsigned __int8 *)v60 + v22);
                              unsigned int v101 = v107 | 0xFFFFFF00;
                              unsigned int v102 = v107 ^ 0xFF;
                              char v103 = 8;
                            }
                          }
                          else
                          {
                            int v100 = *((unsigned __int8 *)v60 + v22);
                            unsigned int v101 = v100 | 0xFFFFFF00;
                            unsigned int v102 = v100 ^ 0xFF;
                            char v103 = 8;
                            int v104 = 11;
                          }
                          unsigned int v105 = (1 << v103) - v104;
                          if ((v105 & 0x80000000) == 0) {
                            goto LABEL_193;
                          }
                          goto LABEL_192;
                        }
LABEL_149:
                        uint64_t v86 = 1;
                        goto LABEL_150;
                      }
LABEL_145:
                      unsigned int v82 = 0x7FFFFFFF;
                      if (v22 > 3) {
                        goto LABEL_149;
                      }
                      goto LABEL_146;
                    }
                  }
                  else
                  {
                    int v80 = 11;
                  }
                  char v81 = 8;
                  goto LABEL_136;
                }
LABEL_158:
                if (v22 > 3) {
                  goto LABEL_162;
                }
                unsigned int v92 = ((1 << v23) + 1) >> v23;
                uint64_t v93 = 2;
                if (v92 > 0xFFF5) {
                  uint64_t v93 = 4;
                }
                if (v92 <= 0xF5) {
LABEL_162:
                }
                  uint64_t v93 = 1;
                unint64_t v94 = *(void *)(((((unint64_t)v60 + v22 + v93) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
                if (v94 >= 0xFFFFFFFF) {
                  LODWORD(v94) = -1;
                }
                unsigned int v95 = v94 + 1;
LABEL_201:
                uint64_t result = v95 - 1;
                if (v95 > 1) {
                  return result;
                }
                return 0;
              }
LABEL_130:
              char v78 = 8;
              goto LABEL_131;
            }
            int v72 = v83 + 10;
            if (v83 > 0xF5)
            {
              char v73 = 16;
LABEL_123:
              unsigned int v74 = (1 << v73) - v72;
              unsigned int v75 = 0x7FFFFFFF;
              if (v74 <= 0x7FFFFFFF) {
                int v76 = 0x7FFFFFFF;
              }
              else {
                int v76 = v74;
              }
              if ((v74 & 0x80000000) == 0) {
                unsigned int v75 = v76;
              }
              if (v22 > 3) {
                goto LABEL_129;
              }
              goto LABEL_154;
            }
          }
          else
          {
            int v72 = 11;
          }
          char v73 = 8;
          goto LABEL_123;
        }
LABEL_91:
        unsigned int v56 = 2147483646;
        goto LABEL_92;
      }
    }
    else
    {
      int v52 = 11;
    }
    char v53 = 8;
    goto LABEL_79;
  }
  if (v6 < 2) {
    return 0;
  }
  unsigned int v57 = (*(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v109);
  if (v57 >= 2) {
    return v57 - 1;
  }
  else {
    return 0;
  }
}

void sub_100626E78(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v120 = *(void *)(a4 + 16);
  uint64_t v121 = *(void *)(v120 - 8);
  uint64_t v7 = *(unsigned int *)(v121 + 84);
  if (v7) {
    unsigned int v8 = v7 - 1;
  }
  else {
    unsigned int v8 = 0;
  }
  uint64_t v9 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v10 = *(void *)(v9 + 64);
  uint64_t v11 = 25;
  if (v10 > 0x19) {
    uint64_t v11 = *(void *)(v9 + 64);
  }
  uint64_t v12 = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v13 = v12 | 7;
  uint64_t v14 = v11 + ((v12 + 15) & ~(v12 | 7));
  unint64_t v15 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 142) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v16 = *(void *)(type metadata accessor for REMHashtagLabelSpecifier() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = ((*(void *)(v16 + 64) + ((v17 + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v14 + 1 > v15) {
    unint64_t v19 = v14 + 1;
  }
  else {
    unint64_t v19 = v15;
  }
  if (v19 > v18) {
    unint64_t v18 = v19;
  }
  if (v18 <= (v10 & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v20 = (v10 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v20 = v18;
  }
  uint64_t v21 = *(void *)(type metadata accessor for AnyTip() - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = ((v22 + 1) & ~v22) + *(void *)(v21 + 64);
  if (v20 > v23) {
    unint64_t v23 = v20;
  }
  if (v23 <= 0x18) {
    unint64_t v23 = 24;
  }
  char v24 = 8 * v23;
  if (v23 > 3)
  {
    int v25 = 11;
    goto LABEL_20;
  }
  unsigned int v33 = ((1 << v24) + 1) >> v24;
  if (v33 <= 0xFFF5)
  {
    int v25 = v33 + 10;
    if (v33 > 0xF5)
    {
      char v29 = 16;
      unsigned int v26 = a2;
      int v27 = a1;
      uint64_t v28 = v121;
      goto LABEL_21;
    }
LABEL_20:
    unsigned int v26 = a2;
    int v27 = a1;
    uint64_t v28 = v121;
    char v29 = 8;
LABEL_21:
    unsigned int v30 = (1 << v29) - v25;
    if (v30 <= 0x7FFFFFFF) {
      int v31 = 0x7FFFFFFF;
    }
    else {
      int v31 = v30;
    }
    if ((v30 & 0x80000000) != 0) {
      unsigned int v32 = 2147483646;
    }
    else {
      unsigned int v32 = v31 - 1;
    }
    goto LABEL_31;
  }
  unsigned int v32 = 2147483646;
  unsigned int v26 = a2;
  int v27 = a1;
  uint64_t v28 = v121;
LABEL_31:
  if (v32 <= v8) {
    unsigned int v32 = v8;
  }
  if (v7) {
    size_t v34 = *(void *)(v28 + 64);
  }
  else {
    size_t v34 = *(void *)(v28 + 64) + 1;
  }
  uint64_t v35 = v17 | v13 | v22;
  size_t v36 = v34 + v35;
  if (v23 > 3) {
    goto LABEL_40;
  }
  unsigned int v37 = ((1 << v24) + 1) >> v24;
  uint64_t v38 = 2;
  if (v37 > 0xFFF5) {
    uint64_t v38 = 4;
  }
  if (v37 <= 0xF5) {
LABEL_40:
  }
    uint64_t v38 = 1;
  size_t v39 = ((v34 + v35) & ~v35)
      + ((((((v38 + v23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 9;
  if (a3 <= v32)
  {
    int v40 = 0;
  }
  else if (v39 <= 3)
  {
    unsigned int v44 = ((a3 - v32 + ~(-1 << (8 * v39))) >> (8 * v39)) + 1;
    if (HIWORD(v44))
    {
      int v40 = 4;
    }
    else if (v44 >= 0x100)
    {
      int v40 = 2;
    }
    else
    {
      int v40 = v44 > 1;
    }
  }
  else
  {
    int v40 = 1;
  }
  if (v32 < v26)
  {
    unsigned int v41 = ~v32 + v26;
    if (v39 < 4)
    {
      int v42 = (v41 >> (8 * v39)) + 1;
      if (((v34 + v35) & ~v35)
         + ((((((v38 + v23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != -9)
      {
        int v45 = v41 & ~(-1 << (8 * v39));
        bzero(v27, v39);
        if (v39 == 3)
        {
          *(_WORD *)int v27 = v45;
          v27[2] = BYTE2(v45);
        }
        else if (v39 == 2)
        {
          *(_WORD *)int v27 = v45;
        }
        else
        {
          *int v27 = v45;
        }
      }
    }
    else
    {
      bzero(v27, v39);
      *(_DWORD *)int v27 = v41;
      int v42 = 1;
    }
    switch(v40)
    {
      case 1:
        v27[v39] = v42;
        return;
      case 2:
        *(_WORD *)&v27[v39] = v42;
        return;
      case 3:
        goto LABEL_263;
      case 4:
        *(_DWORD *)&v27[v39] = v42;
        return;
      default:
        return;
    }
  }
  uint64_t v43 = ~v35;
  switch(v40)
  {
    case 1:
      v27[v39] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_61;
    case 2:
      *(_WORD *)&v27[v39] = 0;
      if (!v26) {
        return;
      }
      goto LABEL_61;
    case 3:
LABEL_263:
      __break(1u);
      JUMPOUT(0x100627B58);
    case 4:
      *(_DWORD *)&v27[v39] = 0;
      goto LABEL_60;
    default:
LABEL_60:
      if (!v26) {
        return;
      }
LABEL_61:
      if (v23 > 3)
      {
        int v46 = 11;
LABEL_63:
        char v47 = 8;
        goto LABEL_64;
      }
      unsigned int v51 = ((1 << v24) + 1) >> v24;
      if (v51 > 0xFFF5) {
        goto LABEL_72;
      }
      int v46 = v51 + 10;
      if (v51 <= 0xF5) {
        goto LABEL_63;
      }
      char v47 = 16;
LABEL_64:
      unsigned int v48 = (1 << v47) - v46;
      if (v48 <= 0x7FFFFFFF) {
        int v49 = 0x7FFFFFFF;
      }
      else {
        int v49 = v48;
      }
      if ((v48 & 0x80000000) == 0)
      {
        unsigned int v50 = v49 - 1;
        goto LABEL_73;
      }
LABEL_72:
      unsigned int v50 = 2147483646;
LABEL_73:
      if (v50 <= v8) {
        unsigned int v52 = v8;
      }
      else {
        unsigned int v52 = v50;
      }
      if (v8 < v50)
      {
        if (v23 <= 3)
        {
          unsigned int v61 = ((1 << v24) + 1) >> v24;
          if (v61 > 0xFFF5) {
            goto LABEL_101;
          }
          int v53 = v61 + 10;
          if (v61 > 0xF5)
          {
            char v54 = 16;
LABEL_80:
            unsigned int v55 = (1 << v54) - v53;
            if (v55 <= 0x7FFFFFFF) {
              int v56 = 0x7FFFFFFF;
            }
            else {
              int v56 = v55;
            }
            if ((v55 & 0x80000000) == 0)
            {
              unsigned int v57 = v56 - 1;
LABEL_102:
              unint64_t v62 = (unint64_t)&v27[v36];
              if (v23 > 3) {
                goto LABEL_106;
              }
              unsigned int v63 = ((1 << v24) + 1) >> v24;
              uint64_t v64 = 2;
              if (v63 > 0xFFF5) {
                uint64_t v64 = 4;
              }
              if (v63 <= 0xF5) {
LABEL_106:
              }
                uint64_t v64 = 1;
              int v27 = (unsigned char *)(v62 & v43);
              size_t v65 = ((((((v64 + v23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 8;
              if (v52 <= v57)
              {
                int v68 = 0;
                int v69 = v26 - v57;
                if (v26 <= v57)
                {
LABEL_120:
                  switch(v68)
                  {
                    case 1:
                      v27[v65] = 0;
                      goto LABEL_142;
                    case 2:
                      *(_WORD *)&v27[v65] = 0;
                      goto LABEL_142;
                    case 3:
                      goto LABEL_263;
                    case 4:
                      *(_DWORD *)&v27[v65] = 0;
                      goto LABEL_142;
                    default:
LABEL_142:
                      if (v23 > 3)
                      {
                        int v73 = 11;
LABEL_144:
                        char v74 = 8;
                        goto LABEL_145;
                      }
                      unsigned int v78 = ((1 << v24) + 1) >> v24;
                      if (v78 > 0xFFF5)
                      {
                        unsigned int v76 = 0x7FFFFFFF;
                        goto LABEL_155;
                      }
                      int v73 = v78 + 10;
                      if (v78 <= 0xF5) {
                        goto LABEL_144;
                      }
                      char v74 = 16;
LABEL_145:
                      unsigned int v75 = (1 << v74) - v73;
                      unsigned int v76 = 0x7FFFFFFF;
                      if (v75 <= 0x7FFFFFFF) {
                        int v77 = 0x7FFFFFFF;
                      }
                      else {
                        int v77 = v75;
                      }
                      if ((v75 & 0x80000000) == 0) {
                        unsigned int v76 = v77;
                      }
LABEL_155:
                      unsigned int v79 = v26 + 1;
                      if (v23 > 3) {
                        goto LABEL_159;
                      }
                      unsigned int v80 = ((1 << v24) + 1) >> v24;
                      int v81 = 2;
                      if (v80 > 0xFFF5) {
                        int v81 = 4;
                      }
                      if (v80 <= 0xF5) {
LABEL_159:
                      }
                        int v81 = 1;
                      if (v79 > v76)
                      {
                        int v82 = (((((v81 + v23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8;
                        size_t v83 = (v82 + 8);
                        if (v82 == -8) {
                          return;
                        }
LABEL_190:
                        int v59 = v26 - v76;
                        bzero(v27, v83);
LABEL_191:
                        *(_DWORD *)int v27 = v59;
                        return;
                      }
                      if (v26 == -1) {
                        return;
                      }
                      if (v23 <= 3)
                      {
                        unsigned int v88 = ((1 << v24) + 1) >> v24;
                        if (v88 > 0xFFF5)
                        {
                          unsigned int v76 = 0x7FFFFFFF;
                          goto LABEL_178;
                        }
                        int v84 = v88 + 10;
                        if (v88 > 0xF5)
                        {
                          char v85 = 16;
LABEL_167:
                          unsigned int v86 = (1 << v85) - v84;
                          unsigned int v76 = 0x7FFFFFFF;
                          if (v86 <= 0x7FFFFFFF) {
                            int v87 = 0x7FFFFFFF;
                          }
                          else {
                            int v87 = v86;
                          }
                          if ((v86 & 0x80000000) == 0) {
                            unsigned int v76 = v87;
                          }
LABEL_178:
                          if (v23 > 3)
                          {
                            if (v79 <= v76)
                            {
                              char v89 = 8;
                              int v90 = 11;
                              goto LABEL_196;
                            }
                            goto LABEL_184;
                          }
                          unsigned int v91 = ((1 << v24) + 1) >> v24;
                          if (v91 > 0xFFF5)
                          {
                            if (v79 <= v76)
                            {
                              unsigned int v94 = 0x7FFFFFFF;
                              goto LABEL_201;
                            }
                            int v92 = v23 + 4;
                          }
                          else
                          {
                            if (v91 <= 0xF5)
                            {
                              if (v79 > v76)
                              {
LABEL_184:
                                int v92 = v23 + 1;
                                goto LABEL_189;
                              }
                              int v90 = v91 + 10;
                              char v89 = 8;
LABEL_196:
                              unsigned int v95 = (1 << v89) - v90;
                              unsigned int v94 = 0x7FFFFFFF;
                              if (v95 <= 0x7FFFFFFF) {
                                int v96 = 0x7FFFFFFF;
                              }
                              else {
                                int v96 = v95;
                              }
                              if ((v95 & 0x80000000) == 0) {
                                unsigned int v94 = v96;
                              }
LABEL_201:
                              if (v23 <= 3)
                              {
                                unsigned int v98 = ((1 << v24) + 1) >> v24;
                                if (v98 > 0xFFF5)
                                {
LABEL_207:
                                  int v100 = 0x7FFFFFFF;
LABEL_208:
                                  if (v100 != v94)
                                  {
                                    if (v23 > 3) {
                                      goto LABEL_215;
                                    }
                                    unsigned int v102 = ((1 << v24) + 1) >> v24;
                                    uint64_t v103 = 2;
                                    if (v102 > 0xFFF5) {
                                      uint64_t v103 = 4;
                                    }
                                    if (v102 <= 0xF5) {
LABEL_215:
                                    }
                                      uint64_t v103 = 1;
                                    int v104 = (void *)((((unint64_t)&v27[v23 + v103] & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8);
                                    if ((v79 & 0x80000000) != 0) {
                                      *int v104 = v26 - 0x7FFFFFFF;
                                    }
                                    else {
                                      *int v104 = v26;
                                    }
                                    return;
                                  }
                                  if (v23 <= 3)
                                  {
                                    unsigned int v105 = ((1 << v24) + 1) >> v24;
                                    if (v105 > 0xFFF5)
                                    {
LABEL_222:
                                      unsigned int v107 = 0x7FFFFFFF;
LABEL_223:
                                      if (v23 > 3) {
                                        goto LABEL_227;
                                      }
                                      unsigned int v108 = ((1 << v24) + 1) >> v24;
                                      uint64_t v109 = 2;
                                      if (v108 > 0xFFF5) {
                                        uint64_t v109 = 4;
                                      }
                                      if (v108 <= 0xF5) {
LABEL_227:
                                      }
                                        uint64_t v109 = 1;
                                      size_t v110 = v109 + v23;
                                      BOOL v111 = v94 >= v107;
                                      unsigned int v112 = v94 - v107;
                                      if (v112 != 0 && v111)
                                      {
                                        if (v110 <= 3)
                                        {
                                          unsigned int v114 = ((v112 + ~(-1 << (8 * v110))) >> (8 * v110)) + 1;
                                          if (HIWORD(v114))
                                          {
                                            int v113 = 4;
                                          }
                                          else if (v114 >= 0x100)
                                          {
                                            int v113 = 2;
                                          }
                                          else
                                          {
                                            int v113 = v114 > 1;
                                          }
                                        }
                                        else
                                        {
                                          int v113 = 1;
                                        }
                                      }
                                      else
                                      {
                                        int v113 = 0;
                                      }
                                      if (v79 > v107)
                                      {
                                        unsigned int v115 = v26 - v107;
                                        if (v110 < 4)
                                        {
                                          int v116 = (v115 >> (8 * v110)) + 1;
                                          if (v110)
                                          {
                                            int v117 = v115 & ~(-1 << (8 * v110));
                                            bzero(v27, v110);
                                            if (v110 == 3)
                                            {
                                              *(_WORD *)int v27 = v117;
                                              v27[2] = BYTE2(v117);
                                            }
                                            else if (v110 == 2)
                                            {
                                              *(_WORD *)int v27 = v117;
                                            }
                                            else
                                            {
                                              *int v27 = v117;
                                            }
                                          }
                                        }
                                        else
                                        {
                                          bzero(v27, v110);
                                          *(_DWORD *)int v27 = v115;
                                          int v116 = 1;
                                        }
                                        switch(v113)
                                        {
                                          case 1:
                                            v27[v110] = v116;
                                            return;
                                          case 2:
                                            *(_WORD *)&v27[v110] = v116;
                                            return;
                                          case 3:
                                            goto LABEL_263;
                                          case 4:
                                            *(_DWORD *)&v27[v110] = v116;
                                            return;
                                          default:
                                            return;
                                        }
                                      }
                                      switch(v113)
                                      {
                                        case 1:
                                          v27[v110] = 0;
                                          goto LABEL_251;
                                        case 2:
                                          *(_WORD *)&v27[v110] = 0;
                                          goto LABEL_251;
                                        case 3:
                                          goto LABEL_263;
                                        case 4:
                                          *(_DWORD *)&v27[v110] = 0;
                                          goto LABEL_251;
                                        default:
LABEL_251:
                                          int v118 = ~v26;
                                          if (v23 > 3) {
                                            goto LABEL_254;
                                          }
                                          unsigned int v119 = ((1 << v24) + 1) >> v24;
                                          if (v119 > 0xFFF5)
                                          {
                                            *(_DWORD *)&v27[v23] = v118;
                                          }
                                          else if (v119 > 0xF5)
                                          {
                                            *(_WORD *)&v27[v23] = v118;
                                          }
                                          else
                                          {
LABEL_254:
                                            v27[v23] = v118;
                                          }
                                          break;
                                      }
                                      return;
                                    }
                                    int v101 = v105 + 10;
                                    if (v105 > 0xF5)
                                    {
                                      char v106 = 16;
LABEL_221:
                                      unsigned int v107 = (1 << v106) - v101;
                                      if ((v107 & 0x80000000) == 0) {
                                        goto LABEL_223;
                                      }
                                      goto LABEL_222;
                                    }
                                  }
                                  else
                                  {
                                    int v101 = 11;
                                  }
                                  char v106 = 8;
                                  goto LABEL_221;
                                }
                                int v97 = v98 + 10;
                                if (v98 > 0xF5)
                                {
                                  char v99 = 16;
LABEL_206:
                                  int v100 = (1 << v99) - v97;
                                  if ((v100 & 0x80000000) == 0) {
                                    goto LABEL_208;
                                  }
                                  goto LABEL_207;
                                }
                              }
                              else
                              {
                                int v97 = 11;
                              }
                              char v99 = 8;
                              goto LABEL_206;
                            }
                            if (v79 <= v76)
                            {
                              int v90 = v91 + 10;
                              char v89 = 16;
                              goto LABEL_196;
                            }
                            int v92 = v23 + 2;
                          }
LABEL_189:
                          unsigned int v93 = ((v92 & 0xFFFFFFF8) + 31) & 0xFFFFFFF8;
                          size_t v83 = v93 + 8;
                          if (v93 == -8) {
                            return;
                          }
                          goto LABEL_190;
                        }
                      }
                      else
                      {
                        int v84 = 11;
                      }
                      char v85 = 8;
                      goto LABEL_167;
                  }
                }
              }
              else
              {
                if (((((((v64 + v23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
                  unsigned int v66 = v52 - v57 + 1;
                }
                else {
                  unsigned int v66 = 2;
                }
                if (v66 >= 0x10000) {
                  int v67 = 4;
                }
                else {
                  int v67 = 2;
                }
                if (v66 < 0x100) {
                  int v67 = 1;
                }
                if (v66 >= 2) {
                  int v68 = v67;
                }
                else {
                  int v68 = 0;
                }
                int v69 = v26 - v57;
                if (v26 <= v57) {
                  goto LABEL_120;
                }
              }
              if (((((((v64 + v23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) == 0xFFFFFFF8) {
                int v71 = v69;
              }
              else {
                int v71 = 1;
              }
              if (((((((v64 + v23) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF8)
              {
                unsigned int v72 = ~v57 + v26;
                bzero(v27, v65);
                *(_DWORD *)int v27 = v72;
              }
              switch(v68)
              {
                case 1:
                  v27[v65] = v71;
                  return;
                case 2:
                  *(_WORD *)&v27[v65] = v71;
                  return;
                case 3:
                  goto LABEL_263;
                case 4:
                  *(_DWORD *)&v27[v65] = v71;
                  return;
                default:
                  return;
              }
            }
LABEL_101:
            unsigned int v57 = 2147483646;
            goto LABEL_102;
          }
        }
        else
        {
          int v53 = 11;
        }
        char v54 = 8;
        goto LABEL_80;
      }
      if (v8 >= v26)
      {
        int v70 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v28 + 56);
        v70(v27, v26 + 1, v7, v120);
      }
      else
      {
        if (v34 <= 3) {
          int v58 = ~(-1 << (8 * v34));
        }
        else {
          int v58 = -1;
        }
        if (v34)
        {
          int v59 = v58 & (~v8 + v26);
          if (v34 <= 3) {
            int v60 = v34;
          }
          else {
            int v60 = 4;
          }
          bzero(v27, v34);
          switch(v60)
          {
            case 2:
              *(_WORD *)int v27 = v59;
              break;
            case 3:
              *(_WORD *)int v27 = v59;
              v27[2] = BYTE2(v59);
              break;
            case 4:
              goto LABEL_191;
            default:
              *int v27 = v59;
              break;
          }
        }
      }
      return;
  }
}

uint64_t type metadata accessor for TTRIBoardReminderCellAutoCompleteConfiguration()
{
  return sub_10003BC54();
}

void sub_100627BF8()
{
  if (!qword_1007AC290)
  {
    type metadata accessor for TTRIReminderCellAutoCompleteViewModel();
    unint64_t v0 = type metadata accessor for TTRBoardReminderCellOptionalUpdate();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007AC290);
    }
  }
}

uint64_t sub_100627C50(uint64_t a1, void *a2, char a3)
{
  uint64_t v6 = TTRIShowRemindersEditableCellScrollingTarget.resolvedTargetsToTry.getter();
  uint64_t v7 = *(void **)(v3 + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView);
  if (a3)
  {
    uint64_t v8 = *(void *)(v6 + 16);
    if (v8)
    {
      uint64_t v9 = (char *)(v6 + 32);
      unint64_t v10 = _swiftEmptyArrayStorage;
      do
      {
        char v12 = *v9++;
        sub_10062B568(a2, v12, v7, (uint64_t)&v19);
        uint64_t v13 = v19;
        long long v18 = v20;
        uint64_t v14 = v21;
        sub_100347954((uint64_t)&v19, (uint64_t)v22);
        if ((v22[32] & 1) == 0)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v10 = sub_10057195C(0, v10[2] + 1, 1, v10);
          }
          unint64_t v16 = v10[2];
          unint64_t v15 = v10[3];
          if (v16 >= v15 >> 1) {
            unint64_t v10 = sub_10057195C((void *)(v15 > 1), v16 + 1, 1, v10);
          }
          v10[2] = v16 + 1;
          uint64_t v11 = &v10[4 * v16];
          v11[4] = v13;
          *(_OWORD *)(v11 + 5) = v18;
          v11[7] = v14;
        }
        --v8;
      }
      while (v8);
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
    }
    UIScrollView.scrollRectToFullyVisibleAnimated(_:)((Swift::OpaquePointer)v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    UIScrollView.iterativelyScrollRectToFullyVisible(with:)();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_100627DC8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AC298);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AC298);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100627E90(uint64_t a1, uint64_t a2)
{
  v3[11] = a2;
  v3[12] = v2;
  v3[10] = a1;
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  v3[13] = swift_task_alloc();
  sub_10003B754(&qword_10078E8F0);
  v3[14] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for IndexPath();
  v3[15] = v4;
  v3[16] = *(void *)(v4 - 8);
  v3[17] = swift_task_alloc();
  v3[18] = type metadata accessor for MainActor();
  v3[19] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[20] = v6;
  v3[21] = v5;
  return _swift_task_switch(sub_100627FE8, v6, v5);
}

uint64_t sub_100627FE8()
{
  v0[8] = 0;
  uint64_t v1 = v0[12];
  uint64_t v2 = OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_dataSource;
  v0[22] = OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView;
  v0[23] = *(void *)(v1 + v2);
  swift_beginAccess();
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[14];
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v5, 1, v3) == 1)
  {
    uint64_t v6 = v0[14];
    swift_release();
    sub_10003B6F8(v6, &qword_10078E8F0);
    if (qword_100785780 != -1) {
      swift_once();
    }
    uint64_t v7 = v0[13];
    uint64_t v8 = v0[10];
    uint64_t v9 = type metadata accessor for Logger();
    sub_100018BF8(v9, (uint64_t)qword_1007AC298);
    sub_1000FF3FC(v8, v7);
    unint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = v0[13];
    if (v12)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v43 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      uint64_t v15 = TTRRemindersListViewModel.ItemID.description.getter();
      v0[9] = sub_1000385A8(v15, v16, &v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000FF460(v13);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "TTRIBoardColumnScrollingController: indexPath not found {itemID: %s}", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000FF460(v0[13]);
    }

    goto LABEL_12;
  }
  uint64_t v17 = v0[22];
  uint64_t v18 = v0[12];
  (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[14], v0[15]);
  id v19 = *(id *)(v18 + v17);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v21 = [v19 cellForItemAtIndexPath:isa];

  uint64_t v22 = v0[11];
  Class v23 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v19 scrollToItemAtIndexPath:v23 atScrollPosition:v22 animated:1];

  Class v24 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v25 = [v19 cellForItemAtIndexPath:v24];

  if (v25)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    uint64_t v26 = v0[8];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
      __break(1u);
    }
    else
    {
      v0[8] = v28;
      swift_release();
      type metadata accessor for TTRIBoardReminderCell();
      uint64_t v29 = swift_dynamicCastClass();
      if (v29)
      {
        uint64_t v30 = v29;
LABEL_13:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        int v31 = (uint64_t (*)(uint64_t))v0[1];
        return v31(v30);
      }
      uint64_t v37 = qword_100785780;
      id v19 = v25;
      if (v37 == -1) {
        goto LABEL_20;
      }
    }
    swift_once();
LABEL_20:
    uint64_t v38 = type metadata accessor for Logger();
    sub_100018BF8(v38, (uint64_t)qword_1007AC298);
    size_t v39 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v39, v40))
    {
      unsigned int v41 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v41 = 0;
      _os_log_impl((void *)&_mh_execute_header, v39, v40, "TTRIBoardColumnScrollingController: unexpected cell type", v41, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_12:
    uint64_t v30 = 0;
    goto LABEL_13;
  }
  uint64_t v33 = v0[17];
  uint64_t v34 = v0[12];
  v0[24] = static MainActor.shared.getter();
  uint64_t v35 = swift_task_alloc();
  v0[25] = v35;
  *(void *)(v35 + 16) = v34;
  *(void *)(v35 + 24) = v33;
  size_t v36 = (void *)swift_task_alloc();
  v0[26] = v36;
  *size_t v36 = v0;
  v36[1] = sub_10062854C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_10062854C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 168);
  uint64_t v3 = *(void *)(v1 + 160);
  return _swift_task_switch(sub_1006286AC, v3, v2);
}

uint64_t sub_1006286AC()
{
  (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
  Class v2 = (Class)(v0 + 8);
  uint64_t v1 = v0[8];
  uint64_t v3 = v1 + 1;
  if (__OFADD__(v1, 1)) {
    goto LABEL_42;
  }
  *(void *)Class v2 = v3;
  if (v3 > 4)
  {
    swift_release();
    goto LABEL_8;
  }
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  uint64_t v6 = v0[14];
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    uint64_t v7 = v0[14];
    swift_release();
    sub_10003B6F8(v7, &qword_10078E8F0);
    if (qword_100785780 == -1) {
      goto LABEL_5;
    }
    goto LABEL_43;
  }
  uint64_t v21 = v0[22];
  uint64_t v22 = v0[12];
  (*(void (**)(void, void, void))(v0[16] + 32))(v0[17], v0[14], v0[15]);
  Class v23 = *(void **)(v22 + v21);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v25 = &selRef_setAxis_;
  id v26 = [v23 cellForItemAtIndexPath:isa];

  if (v3 && v26) {
    goto LABEL_29;
  }
  if (v3 >= 1)
  {
    if (static Task<>.isCancelled.getter())
    {
      Class v23 = v0 + 5;
      swift_release();
      if (qword_100785780 != -1) {
        swift_once();
      }
      uint64_t v27 = type metadata accessor for Logger();
      sub_100018BF8(v27, (uint64_t)qword_1007AC298);
      uint64_t v28 = Logger.logObject.getter();
      os_log_type_t v29 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v28, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl((void *)&_mh_execute_header, v28, v29, "TTRIBoardColumnScrollingController: task canceled", v30, 2u);
        swift_slowDealloc();
      }
      uint64_t v32 = v0[16];
      uint64_t v31 = v0[17];
      uint64_t v33 = v0[15];

      uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
      id v25 = (char **)(v32 + 8);
      v34(v31, v33);
      swift_beginAccess();
      uint64_t v35 = v0[8];
      BOOL v36 = __OFADD__(v35, 1);
      uint64_t v37 = v35 + 1;
      if (!v36)
      {
        *(void *)Class v2 = v37;
        if (!v26) {
          goto LABEL_8;
        }
        goto LABEL_32;
      }
      __break(1u);
    }
    else if (qword_100785780 == -1)
    {
LABEL_25:
      uint64_t v38 = type metadata accessor for Logger();
      sub_100018BF8(v38, (uint64_t)qword_1007AC298);
      size_t v39 = Logger.logObject.getter();
      os_log_type_t v40 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        *(_DWORD *)uint64_t v41 = 134217984;
        *(void *)(v41 + 4) = *(void *)v2;
        _os_log_impl((void *)&_mh_execute_header, v39, v40, "TTRIBoardColumnScrollingController: additional scrollToItem animated {pass: %ld}", (uint8_t *)v41, 0xCu);
        swift_slowDealloc();
      }

      goto LABEL_28;
    }
    swift_once();
    goto LABEL_25;
  }
LABEL_28:
  uint64_t v42 = v0[11];
  Class v43 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v23 scrollToItemAtIndexPath:v43 atScrollPosition:v42 animated:1];

LABEL_29:
  Class v2 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v44 = [v23 v25[184] v2];

  if (v44)
  {
    (*(void (**)(void, void))(v0[16] + 8))(v0[17], v0[15]);
    uint64_t v45 = v0[8];
    BOOL v36 = __OFADD__(v45, 1);
    uint64_t v46 = v45 + 1;
    if (!v36)
    {
      v0[8] = v46;
      swift_release();
      id v26 = v44;
LABEL_32:
      type metadata accessor for TTRIBoardReminderCell();
      uint64_t v47 = swift_dynamicCastClass();
      if (v47)
      {
        uint64_t v18 = v47;
        goto LABEL_9;
      }
      uint64_t v52 = qword_100785780;
      id v53 = v26;
      if (v52 != -1) {
        swift_once();
      }
      uint64_t v54 = type metadata accessor for Logger();
      sub_100018BF8(v54, (uint64_t)qword_1007AC298);
      unsigned int v55 = Logger.logObject.getter();
      os_log_type_t v56 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v55, v56))
      {
        unsigned int v57 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unsigned int v57 = 0;
        _os_log_impl((void *)&_mh_execute_header, v55, v56, "TTRIBoardColumnScrollingController: unexpected cell type", v57, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
LABEL_8:
      uint64_t v18 = 0;
LABEL_9:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v19 = (uint64_t (*)(uint64_t))v0[1];
      return v19(v18);
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_once();
LABEL_5:
    uint64_t v8 = v0[13];
    uint64_t v9 = v0[10];
    uint64_t v10 = type metadata accessor for Logger();
    sub_100018BF8(v10, (uint64_t)qword_1007AC298);
    sub_1000FF3FC(v9, v8);
    os_log_type_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.debug.getter();
    BOOL v13 = os_log_type_enabled(v11, v12);
    uint64_t v14 = v0[13];
    if (v13)
    {
      int v58 = (uint64_t *)((char *)v2 + 8);
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v60 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v16 = TTRRemindersListViewModel.ItemID.description.getter();
      *int v58 = sub_1000385A8(v16, v17, &v60);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_1000FF460(v14);
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "TTRIBoardColumnScrollingController: indexPath not found {itemID: %s}", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1000FF460(v0[13]);
    }
    goto LABEL_8;
  }
  uint64_t v48 = v0[17];
  uint64_t v49 = v0[12];
  v0[24] = static MainActor.shared.getter();
  uint64_t v50 = swift_task_alloc();
  v0[25] = v50;
  *(void *)(v50 + 16) = v49;
  *(void *)(v50 + 24) = v48;
  unsigned int v51 = (void *)swift_task_alloc();
  v0[26] = v51;
  *unsigned int v51 = v0;
  v51[1] = sub_10062854C;
  return withTaskGroup<A, B>(of:returning:isolation:body:)();
}

uint64_t sub_100628E0C(uint64_t a1, uint64_t a2)
{
  v3[10] = a2;
  v3[11] = v2;
  v3[9] = a1;
  uint64_t v4 = sub_10003B754(&qword_10079DA80);
  v3[12] = v4;
  v3[13] = *(void *)(v4 - 8);
  v3[14] = swift_task_alloc();
  sub_10003B754(&qword_10078E8F0);
  v3[15] = swift_task_alloc();
  v3[16] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for IndexPath();
  v3[17] = v5;
  v3[18] = *(void *)(v5 - 8);
  v3[19] = swift_task_alloc();
  v3[20] = type metadata accessor for MainActor();
  v3[21] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[22] = v7;
  v3[23] = v6;
  return _swift_task_switch(sub_100628FA8, v7, v6);
}

uint64_t sub_100628FA8()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[18];
  uint64_t v3 = v0[16];
  dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    uint64_t v4 = v0[16];
    swift_release();
    sub_10003B6F8(v4, &qword_10078E8F0);
    uint64_t v5 = 0;
LABEL_16:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v27 = (uint64_t (*)(uint64_t))v0[1];
    return v27(v5);
  }
  uint64_t v6 = v0[10];
  uint64_t v7 = v0[11];
  (*(void (**)(void, void, void))(v0[18] + 32))(v0[19], v0[16], v0[17]);
  uint64_t v8 = *(id (**)())(v7 + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView);
  v0[24] = v8;
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v10 = [v8 cellForItemAtIndexPath:isa];

  id v11 = v10;
  Class v12 = IndexPath._bridgeToObjectiveC()().super.isa;
  [v8 scrollToItemAtIndexPath:v12 atScrollPosition:v6 animated:0];

  if (v11)
  {
    uint64_t v8 = 0;
    goto LABEL_8;
  }
  BOOL v13 = (void *)v0[11];
  uint64_t v14 = self;
  uint64_t v15 = swift_allocObject();
  v0[25] = v15;
  *(void *)(v15 + 16) = v13;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_10062B498;
  *(void *)(v16 + 24) = v15;
  v0[6] = sub_1000218B0;
  v0[7] = v16;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_100021888;
  v0[5] = &unk_100754ED8;
  unint64_t v17 = _Block_copy(v0 + 2);
  id v18 = v13;
  swift_retain();
  swift_release();
  [v14 performWithoutAnimation:v17];
  _Block_release(v17);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_23;
  }
  Class v20 = IndexPath._bridgeToObjectiveC()().super.isa;
  id v11 = [v8 cellForItemAtIndexPath:v20];

  if (v11)
  {
    uint64_t v8 = sub_10062B498;
LABEL_8:
    swift_release();
    type metadata accessor for TTRIBoardReminderCell();
    uint64_t v21 = swift_dynamicCastClass();
    if (v21)
    {
      uint64_t v5 = v21;
LABEL_15:
      (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
      sub_1000499C4((uint64_t)v8);
      goto LABEL_16;
    }
    uint64_t v22 = qword_100785780;
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)v11;
    if (v22 == -1)
    {
LABEL_11:
      uint64_t v23 = type metadata accessor for Logger();
      sub_100018BF8(v23, (uint64_t)qword_1007AC298);
      Class v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v24, v25))
      {
        id v26 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v26 = 0;
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "TTRIBoardColumnScrollingController: unexpected cell type", v26, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v5 = 0;
      goto LABEL_15;
    }
LABEL_23:
    swift_once();
    goto LABEL_11;
  }
  v0[26] = static MainActor.shared.getter();
  uint64_t v30 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[27] = v30;
  v0[28] = v29;
  return _swift_task_switch(sub_100629454, v30, v29);
}

uint64_t sub_100629454()
{
  uint64_t v1 = v0[19];
  v0[8] = *(void *)(v0[11] + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_willDisplayCell);
  sub_10003B754(&qword_10079DA88);
  sub_100037EA0(&qword_10079DA90, &qword_10079DA88);
  Publisher<>.rem_bufferedValues.getter();
  uint64_t v2 = swift_task_alloc();
  v0[29] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10079DAA8 + dword_10079DAA8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[30] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1006295A0;
  uint64_t v4 = v0[15];
  return v6(v4, (uint64_t)&unk_1007AC388, v2);
}

uint64_t sub_1006295A0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 120);
  uint64_t v3 = *(void *)(*v0 + 112);
  uint64_t v4 = *(void *)(*v0 + 104);
  uint64_t v5 = *(void *)(*v0 + 96);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_10003B6F8(v2, &qword_10078E8F0);
  uint64_t v6 = *(void *)(v1 + 224);
  uint64_t v7 = *(void *)(v1 + 216);
  return _swift_task_switch(sub_10062976C, v7, v6);
}

uint64_t sub_10062976C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v0 + 184);
  return _swift_task_switch(sub_1006297D0, v1, v2);
}

uint64_t sub_1006297D0()
{
  uint64_t v1 = (void *)v0[24];
  swift_release();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v3 = [v1 cellForItemAtIndexPath:isa];

  if (v3)
  {
    type metadata accessor for TTRIBoardReminderCell();
    uint64_t v4 = swift_dynamicCastClass();
    if (v4)
    {
      uint64_t v5 = v4;
      goto LABEL_10;
    }
    uint64_t v6 = qword_100785780;
    id v7 = v3;
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100018BF8(v8, (uint64_t)qword_1007AC298);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "TTRIBoardColumnScrollingController: unexpected cell type", v11, 2u);
      swift_slowDealloc();
    }
    else
    {
    }
  }
  uint64_t v5 = 0;
LABEL_10:
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);
  sub_1000499C4((uint64_t)sub_10062B498);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Class v12 = (uint64_t (*)(uint64_t))v0[1];
  return v12(v5);
}

void *sub_1006299D4(void *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = a1;
  id v7 = sub_10062B880(a2, v5, v6);

  return v7;
}

uint64_t sub_100629A3C()
{
  v1[3] = v0;
  uint64_t v2 = sub_10003B754(&qword_1007AC340);
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = sub_10003B754(&qword_1007AC348);
  v1[7] = v3;
  v1[8] = *(void *)(v3 - 8);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  v1[11] = type metadata accessor for MainActor();
  v1[12] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[13] = v5;
  v1[14] = v4;
  return _swift_task_switch(sub_100629BA8, v5, v4);
}

uint64_t sub_100629BA8()
{
  *(void *)(v0 + 16) = *(void *)(*(void *)(v0 + 24)
                                   + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_didEndScrollingAnimation);
  sub_10003B754((uint64_t *)&unk_10079F420);
  sub_100037EA0(&qword_10078CAB8, (uint64_t *)&unk_10079F420);
  Publisher<>.rem_bufferedValues.getter();
  return _swift_task_switch(sub_100629C74, 0, 0);
}

uint64_t sub_100629C74()
{
  (*(void (**)(void, void, void))(v0[8] + 16))(v0[9], v0[10], v0[7]);
  sub_100037EA0(&qword_1007AC350, &qword_1007AC348);
  dispatch thunk of AsyncSequence.makeAsyncIterator()();
  uint64_t v1 = sub_100037EA0(&qword_1007AC358, &qword_1007AC340);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[15] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100629DB0;
  uint64_t v3 = v0[4];
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 17, v3, v1);
}

uint64_t sub_100629DB0()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[6];
    uint64_t v4 = v2[4];
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v2[5] + 8);
    return v5(v3, v4);
  }
  else
  {
    return _swift_task_switch(sub_100629EE4, 0, 0);
  }
}

uint64_t sub_100629EE4()
{
  if (*(unsigned char *)(v0 + 136))
  {
    uint64_t v1 = *(void *)(v0 + 80);
    uint64_t v2 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    (*(void (**)(void, void))(*(void *)(v0 + 40) + 8))(*(void *)(v0 + 48), *(void *)(v0 + 32));
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
    uint64_t v4 = *(void *)(v0 + 104);
    uint64_t v5 = *(void *)(v0 + 112);
    id v6 = sub_10062A0D4;
  }
  else
  {
    *(void *)(v0 + 128) = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
    id v6 = sub_100629FD0;
    uint64_t v4 = v7;
    uint64_t v5 = v9;
  }
  return _swift_task_switch(v6, v4, v5);
}

uint64_t sub_100629FD0()
{
  swift_release();
  return _swift_task_switch(sub_10062A038, 0, 0);
}

uint64_t sub_10062A038()
{
  uint64_t v1 = v0[10];
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  uint64_t v4 = v0[13];
  uint64_t v5 = v0[14];
  return _swift_task_switch(sub_10062A0D4, v4, v5);
}

uint64_t sub_10062A0D4()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10062A15C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a3;
  v4[4] = a4;
  v4[2] = a2;
  uint64_t v5 = type metadata accessor for IndexPath();
  v4[5] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[6] = v6;
  v4[7] = *(void *)(v6 + 64);
  v4[8] = swift_task_alloc();
  sub_10003B754(&qword_10079AF90);
  v4[9] = swift_task_alloc();
  v4[10] = type metadata accessor for MainActor();
  v4[11] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[12] = v8;
  v4[13] = v7;
  return _swift_task_switch(sub_10062A290, v8, v7);
}

uint64_t sub_10062A290()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[9];
  id v19 = v0 + 16;
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = (void *)v0[3];
  uint64_t v7 = v0[4];
  uint64_t v8 = type metadata accessor for TaskPriority();
  id v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v18(v2, 1, 1, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v7, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = (char *)swift_allocObject();
  *((void *)v10 + 2) = 0;
  *((void *)v10 + 3) = 0;
  *((void *)v10 + 4) = v6;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v10[v9], v3, v4);
  id v11 = v6;
  sub_10062AB84(v2, (uint64_t)&unk_1007AC318, (uint64_t)v10);
  sub_10003B6F8(v2, &qword_10079AF90);
  v18(v2, 1, 1, v8);
  Class v12 = (void *)swift_allocObject();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = v11;
  id v13 = v11;
  sub_10062AB84(v2, (uint64_t)&unk_1007AC328, (uint64_t)v12);
  sub_10003B6F8(v2, &qword_10079AF90);
  uint64_t v14 = static MainActor.shared.getter();
  v1[14] = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  v1[15] = v15;
  uint64_t v16 = sub_10003B754(&qword_1007AC330);
  *uint64_t v15 = v1;
  v15[1] = sub_10062A4FC;
  return TaskGroup.next(isolation:)(v19, v14, &protocol witness table for MainActor, v16);
}

uint64_t sub_10062A4FC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10062A640, v3, v2);
}

uint64_t sub_10062A640()
{
  swift_release();
  TaskGroup.cancelAll()();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10062A6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  uint64_t v6 = sub_10003B754(&qword_10079DA80);
  v5[5] = v6;
  v5[6] = *(void *)(v6 - 8);
  v5[7] = swift_task_alloc();
  sub_10003B754(&qword_10078E8F0);
  v5[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[10] = v8;
  v5[11] = v7;
  return _swift_task_switch(sub_10062A7FC, v8, v7);
}

uint64_t sub_10062A7FC()
{
  uint64_t v1 = v0[4];
  v0[2] = *(void *)(v0[3] + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_willDisplayCell);
  sub_10003B754(&qword_10079DA88);
  sub_100037EA0(&qword_10079DA90, &qword_10079DA88);
  Publisher<>.rem_bufferedValues.getter();
  uint64_t v2 = swift_task_alloc();
  v0[12] = v2;
  *(void *)(v2 + 16) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_10079DAA8 + dword_10079DAA8);
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10062A944;
  uint64_t v4 = v0[8];
  return v6(v4, (uint64_t)&unk_1007AC378, v2);
}

uint64_t sub_10062A944()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 64);
  uint64_t v3 = *(void *)(*v0 + 56);
  uint64_t v4 = *(void *)(*v0 + 48);
  uint64_t v5 = *(void *)(*v0 + 40);
  swift_task_dealloc();
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  sub_10003B6F8(v2, &qword_10078E8F0);
  uint64_t v6 = *(void *)(v1 + 88);
  uint64_t v7 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_10062AB10, v7, v6);
}

uint64_t sub_10062AB10()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10062AB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10062B26C(a1, (uint64_t)v10);
  uint64_t v11 = type metadata accessor for TaskPriority();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10003B6F8((uint64_t)v10, &qword_10079AF90);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v15 = v14;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v13 = 0;
  uint64_t v15 = 0;
LABEL_6:
  uint64_t v16 = *v4;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a2;
  *(void *)(v17 + 24) = a3;
  id v18 = (void *)(v15 | v13);
  if (v15 | v13)
  {
    v21[0] = 0;
    v21[1] = 0;
    id v18 = v21;
    v21[2] = v13;
    v21[3] = v15;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v16;
  swift_task_create();
  return swift_release();
}

uint64_t sub_10062AD84()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10003D2E4;
  return sub_100629A3C();
}

uint64_t type metadata accessor for TTRIBoardColumnScrollingController()
{
  return self;
}

uint64_t sub_10062AED4(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_10000C2D4;
  return sub_10062A15C(a1, a2, v7, v6);
}

uint64_t sub_10062AF88()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10062B05C(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10003D2E4;
  return sub_10062A6D4(a1, v5, v6, v7, v8);
}

uint64_t sub_10062B158()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10062B198()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10003D2E4;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10003D2E4;
  return sub_100629A3C();
}

uint64_t sub_10062B26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10079AF90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10062B2D4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10062B30C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10000C2D4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_1007AC360 + dword_1007AC360);
  return v6(a1, v4);
}

uint64_t sub_10062B3C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_10062B9D0;
  return sub_1003E629C(a1, v4);
}

uint64_t sub_10062B460()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_10062B498()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9Reminders34TTRIBoardColumnScrollingController_collectionView) layoutIfNeeded];
}

uint64_t sub_10062B4B4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10062B4C4(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_1003E7AB8;
  return sub_1003E629C(a1, v4);
}

void *sub_10062B560(void *a1)
{
  return sub_1006299D4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_10062B568(id a1@<X2>, char a2@<W0>, void *a3@<X1>, uint64_t a4@<X8>)
{
  switch(a2)
  {
    case 1:
      id v15 = [a1 contentView];
      type metadata accessor for TTRIBoardReminderCellContentView();
      if (!swift_dynamicCastClass()) {
        goto LABEL_19;
      }
      sub_1004F8638();
      double v8 = v16;
      double v10 = v17;
      double v12 = v18;
      double v14 = v19;

      goto LABEL_23;
    case 2:
      id v15 = [a1 contentView];
      type metadata accessor for TTRIBoardReminderCellContentView();
      uint64_t v20 = swift_dynamicCastClass();
      if (!v20) {
        goto LABEL_19;
      }
      if (!*(void *)(v20 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator))
      {
        __break(1u);
LABEL_26:
        __break(1u);
        JUMPOUT(0x10062B86CLL);
      }
      LOBYTE(v31) = 2;
      swift_retain();
      uint64_t v21 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
      swift_release();
      if (!v21) {
        goto LABEL_20;
      }
      type metadata accessor for TTRIReminderTitleTextView();
      goto LABEL_16;
    case 3:
      id v15 = [a1 contentView];
      type metadata accessor for TTRIBoardReminderCellContentView();
      if (!swift_dynamicCastClass()) {
        goto LABEL_19;
      }
      sub_1004F8778((uint64_t)&v31);
      double v8 = v31;
      double v10 = v32;
      double v12 = v33;
      double v14 = v34;
      char v22 = v35;

      if ((v22 & 1) == 0) {
        goto LABEL_23;
      }
      goto LABEL_18;
    case 4:
      id v15 = [a1 contentView];
      type metadata accessor for TTRIBoardReminderCellContentView();
      uint64_t v23 = swift_dynamicCastClass();
      if (!v23)
      {
LABEL_19:

        char v26 = 1;
        double v8 = 0.0;
        double v10 = 0.0;
        double v12 = 0.0;
        double v14 = 0.0;
        goto LABEL_24;
      }
      if (!*(void *)(v23 + OBJC_IVAR____TtC9Reminders32TTRIBoardReminderCellContentView_contentGridPopulator)) {
        goto LABEL_26;
      }
      LOBYTE(v31) = 8;
      swift_retain();
      uint64_t v21 = (void *)TTRGridViewPredefinedContentPopulator.existingView(for:)();
      swift_release();
      if (!v21)
      {
LABEL_20:

LABEL_22:
        double v8 = 0.0;
        double v10 = 0.0;
        double v12 = 0.0;
        double v14 = 0.0;
        goto LABEL_23;
      }
      type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
LABEL_16:
      Class v24 = (void *)swift_dynamicCastClass();
      if (!v24)
      {

        goto LABEL_22;
      }
      sub_1005009A8(v24, (uint64_t)&v31);
      double v8 = v31;
      double v10 = v32;
      double v12 = v33;
      double v14 = v34;
      char v25 = v35;

      if ((v25 & 1) == 0)
      {
LABEL_23:
        [a3 convertRect:a1 fromCoordinateSpace:v8, v10, v12, v14];
        double v8 = v27;
        double v10 = v28;
        double v12 = v29;
        double v14 = v30;
        char v26 = 0;
        goto LABEL_24;
      }
LABEL_18:
      char v26 = 1;
LABEL_24:
      *(double *)a4 = v8;
      *(double *)(a4 + 8) = v10;
      *(double *)(a4 + 16) = v12;
      *(double *)(a4 + 24) = v14;
      *(unsigned char *)(a4 + 32) = v26;
      return;
    default:
      [a1 bounds];
      double v8 = v7;
      double v10 = v9;
      double v12 = v11;
      double v14 = v13;
      goto LABEL_23;
  }
}

void *sub_10062B880(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = 0;
  double v8 = _swiftEmptyArrayStorage;
  do
  {
    sub_10062B568(a2, *(unsigned char *)(a1 + v7 + 32), a3, (uint64_t)&v16);
    uint64_t v10 = v16;
    long long v15 = v17;
    uint64_t v11 = v18;
    sub_100347954((uint64_t)&v16, (uint64_t)v19);
    if ((v19[32] & 1) == 0)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v8 = sub_10057195C(0, v8[2] + 1, 1, v8);
      }
      unint64_t v13 = v8[2];
      unint64_t v12 = v8[3];
      if (v13 >= v12 >> 1) {
        double v8 = sub_10057195C((void *)(v12 > 1), v13 + 1, 1, v8);
      }
      v8[2] = v13 + 1;
      double v9 = &v8[4 * v13];
      v9[4] = v10;
      *(_OWORD *)(v9 + 5) = v15;
      v9[7] = v11;
    }
    ++v7;
  }
  while (v3 != v7);
  swift_bridgeObjectRelease();
  return v8;
}

void sub_10062B9D4()
{
  v17.receiver = v0;
  v17.super_class = (Class)swift_getObjectType();
  [super viewDidLoad];
  id v1 = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithActivityIndicatorStyle:100];
  [v1 sizeToFit];
  [v1 frame];
  [v0 setPreferredContentSize:CGRectGetHeight(v18)];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v3 = v2;
  [v2 addSubview:v1];

  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066C430;
  id v5 = [v0 view];
  if (!v5)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v6 = v5;
  id v7 = [v5 centerXAnchor];

  id v8 = [v1 centerXAnchor];
  id v9 = [v7 constraintEqualToAnchor:v8];

  *(void *)(v4 + 32) = v9;
  id v10 = [v0 view];
  if (v10)
  {
    uint64_t v11 = v10;
    unint64_t v12 = self;
    id v13 = [v11 centerYAnchor];

    id v14 = [v1 centerYAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    *(void *)(v4 + 40) = v15;
    specialized Array._endMutation()();
    sub_1001088A8();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 activateConstraints:isa];

    [v1 startAnimating];
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for TTRISpinnerAlertContentViewController()
{
  return self;
}

uint64_t sub_10062BDC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for TTRICollectionViewInsertAtIndexPathOption(0);
  __chkstk_darwin(v3);
  id v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TTRAdjustedIndexPath();
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  unint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v14 = (char *)&v25 - v13;
  uint64_t v15 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  sub_10062EF8C(v1 + *(int *)(v15 + 24), (uint64_t)v8, type metadata accessor for TTRICollectionViewDropIntent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    int v19 = v8[*(int *)(sub_10003B754(&qword_1007AC6A0) + 48)];
    sub_10062EF24((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
    uint64_t v20 = sub_10062C0E4();
    if ((unint64_t)(v20 - 1) >= 2 && !v20 && !v19)
    {
      sub_10062EF24((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
      uint64_t v23 = *(void *)(v1 + 8);
      sub_10062EF8C((uint64_t)v14, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
      swift_storeEnumTagMultiPayload();
      sub_1006046FC((uint64_t)v5, v23, a1);
      sub_10062EEC4((uint64_t)v5, type metadata accessor for TTRICollectionViewInsertAtIndexPathOption);
      sub_10062EEC4((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRAdjustedIndexPath);
      uint64_t v24 = type metadata accessor for TTRUnadjustedIndexPath();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(a1, 0, 1, v24);
    }
    objc_super v17 = &type metadata accessor for TTRAdjustedIndexPath;
    uint64_t v18 = (uint64_t)v12;
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 1)
  {
    objc_super v17 = &type metadata accessor for TTRUnadjustedIndexPath;
    uint64_t v18 = (uint64_t)v8;
LABEL_8:
    sub_10062EEC4(v18, (uint64_t (*)(void))v17);
  }
  uint64_t v21 = type metadata accessor for TTRUnadjustedIndexPath();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
}

uint64_t sub_10062C0E4()
{
  uint64_t v1 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  uint64_t v2 = v1 - 8;
  __chkstk_darwin(v1);
  uint64_t v4 = &v17[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v5);
  uint64_t v7 = &v17[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10062EF8C(v0 + *(int *)(v2 + 32), (uint64_t)v7, type metadata accessor for TTRICollectionViewDropIntent);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v9 = &type metadata accessor for TTRUnadjustedIndexPath;
  if (!EnumCaseMultiPayload)
  {
    int v11 = v7[*(int *)(sub_10003B754(&qword_1007AC6A0) + 48)];
    unint64_t v12 = *(void *)(*(void *)(v0 + 8) + 16);
    uint64_t v13 = *(void *)(*(void *)(v0 + 16) + 16);
    sub_10062EF8C(v0, (uint64_t)v4, type metadata accessor for TTRIRemindersBoardDropProposal);
    if (v13)
    {
      sub_10062EEC4((uint64_t)v4, type metadata accessor for TTRIRemindersBoardDropProposal);
      uint64_t v9 = &type metadata accessor for TTRAdjustedIndexPath;
      if (v12)
      {
        uint64_t v10 = 0;
        goto LABEL_19;
      }
    }
    else
    {
      unint64_t v14 = *((void *)v4 + 3);
      if (v14 >> 62)
      {
        int v18 = v11;
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        int v11 = v18;
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      sub_10062EEC4((uint64_t)v4, type metadata accessor for TTRIRemindersBoardDropProposal);
      if (v12)
      {
        if (v10) {
          BOOL v15 = 1;
        }
        else {
          BOOL v15 = v12 >= 2;
        }
        if (v15) {
          uint64_t v10 = 0;
        }
        else {
          uint64_t v10 = v11 ^ 1u;
        }
        uint64_t v9 = &type metadata accessor for TTRAdjustedIndexPath;
        goto LABEL_19;
      }
      uint64_t v9 = &type metadata accessor for TTRAdjustedIndexPath;
      if (!v10)
      {
LABEL_19:
        sub_10062EEC4((uint64_t)v7, (uint64_t (*)(void))v9);
        return v10;
      }
    }
    uint64_t v9 = &type metadata accessor for TTRAdjustedIndexPath;
    uint64_t v10 = 1;
    goto LABEL_19;
  }
  uint64_t v10 = 0;
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v10 = 2;
    goto LABEL_19;
  }
  return v10;
}

uint64_t sub_10062C348()
{
  v1._countAndFlagsBits = sub_100604DFC(*(void *)(v0 + 8), *(void *)(v0 + 16), *(void *)(v0 + 24));
  String.append(_:)(v1);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v4 = *((void *)v2 + 2);
  unint64_t v3 = *((void *)v2 + 3);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_100022F98((char *)(v3 > 1), v4 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v4 + 1;
  uint64_t v5 = &v2[16 * v4];
  *((void *)v5 + 4) = 0x203A67617244;
  *((void *)v5 + 5) = 0xE600000000000000;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  v6._countAndFlagsBits = UIDropOperation.debugHUDInfo.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 8236;
  v7._object = (void *)0xE200000000000000;
  String.append(_:)(v7);
  type metadata accessor for TTRIRemindersBoardDropProposal(0);
  v8._countAndFlagsBits = sub_1005DD248();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  unint64_t v10 = *((void *)v2 + 2);
  unint64_t v9 = *((void *)v2 + 3);
  if (v10 >= v9 >> 1) {
    uint64_t v2 = sub_100022F98((char *)(v9 > 1), v10 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v10 + 1;
  int v11 = &v2[16 * v10];
  *((void *)v11 + 4) = 0x6C61736F706F7250;
  *((void *)v11 + 5) = 0xEA0000000000203ALL;
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10062C524(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  uint64_t v6 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection) = 0;
  uint64_t v7 = OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_debugInfo;
  type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo(0);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput;
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v8 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult;
  uint64_t v12 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  uint64_t v13 = v8 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall;
  uint64_t v14 = type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  *(void *)(v8 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal) = 0;
  *(unsigned char *)(v8
           + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates) = 0;
  *(void *)(v2 + v7) = v8;
  sub_10062EF24(a1, v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  *(void *)(v2 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_session) = a2;
  return v2;
}

uint64_t sub_10062C708()
{
  uint64_t v1 = sub_10003B754(&qword_1007870B0);
  __chkstk_darwin(v1 - 8);
  unint64_t v87 = (unint64_t)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(0);
  uint64_t v86 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  char v85 = (uint64_t *)((char *)&v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_1007AC740);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRICollectionViewHitTestResult(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_10003B754(&qword_10078E8F0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = 0;
  unint64_t v94 = 0xE000000000000000;
  _StringGuts.grow(_:)(35);
  swift_bridgeObjectRelease();
  unint64_t v91 = 0xD000000000000021;
  unint64_t v92 = 0x80000001006C1B20;
  uint64_t v14 = v0;
  uint64_t v15 = v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput;
  swift_beginAccess();
  sub_10003B694(v15, (uint64_t)v13, &qword_10078E8F0);
  uint64_t v16 = Optional.descriptionOrNil.getter();
  int v18 = v17;
  sub_10003B6F8((uint64_t)v13, &qword_10078E8F0);
  v19._countAndFlagsBits = v16;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  unint64_t v20 = v91;
  unint64_t v21 = v92;
  char v22 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v24 = *((void *)v22 + 2);
  unint64_t v23 = *((void *)v22 + 3);
  if (v24 >= v23 >> 1) {
    char v22 = sub_100022F98((char *)(v23 > 1), v24 + 1, 1, v22);
  }
  *((void *)v22 + 2) = v24 + 1;
  uint64_t v25 = &v22[16 * v24];
  *((void *)v25 + 4) = v20;
  *((void *)v25 + 5) = v21;
  uint64_t v26 = v14;
  uint64_t v27 = v14 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult;
  swift_beginAccess();
  sub_10003B694(v27, (uint64_t)v6, (uint64_t *)&unk_1007AC740);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_1007AC740);
  }
  else
  {
    sub_10062EF24((uint64_t)v6, (uint64_t)v10, type metadata accessor for TTRICollectionViewHitTestResult);
    unint64_t v29 = *((void *)v22 + 2);
    unint64_t v28 = *((void *)v22 + 3);
    if (v29 >= v28 >> 1) {
      char v22 = sub_100022F98((char *)(v28 > 1), v29 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v29 + 1;
    double v30 = &v22[16 * v29];
    *((void *)v30 + 4) = 0xD000000000000015;
    *((void *)v30 + 5) = 0x80000001006C1BB0;
    uint64_t v31 = sub_100518828();
    uint64_t v33 = v32;
    unint64_t v35 = *((void *)v22 + 2);
    unint64_t v34 = *((void *)v22 + 3);
    if (v35 >= v34 >> 1) {
      char v22 = sub_100022F98((char *)(v34 > 1), v35 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v35 + 1;
    BOOL v36 = &v22[16 * v35];
    *((void *)v36 + 4) = v31;
    *((void *)v36 + 5) = v33;
    sub_10062EEC4((uint64_t)v10, type metadata accessor for TTRICollectionViewHitTestResult);
  }
  uint64_t v37 = v14 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall;
  swift_beginAccess();
  uint64_t v38 = v87;
  sub_10003B694(v37, v87, &qword_1007870B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v38, 1, v88) == 1)
  {
    sub_10003B6F8(v38, &qword_1007870B0);
    goto LABEL_21;
  }
  size_t v39 = v85;
  sub_10062EF24(v38, (uint64_t)v85, type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
  unint64_t v89 = 0;
  unint64_t v90 = 0xE000000000000000;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  unint64_t v89 = 0x203A6769724F2020;
  unint64_t v90 = 0xE800000000000000;
  type metadata accessor for IndexPath();
  sub_1003538B0();
  v40._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v40);
  swift_bridgeObjectRelease();
  v41._countAndFlagsBits = 0x203A72727543202CLL;
  v41._object = (void *)0xE800000000000000;
  String.append(_:)(v41);
  v42._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  unint64_t v43 = v90;
  unint64_t v87 = v89;
  unint64_t v89 = 0;
  unint64_t v90 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  unint64_t v89 = 0x203A706F72502020;
  unint64_t v90 = 0xE800000000000000;
  v44._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v44);
  swift_bridgeObjectRelease();
  v45._countAndFlagsBits = 0x203A74655220202CLL;
  v45._object = (void *)0xE800000000000000;
  String.append(_:)(v45);
  v46._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v47 = &v89;
  String.append(_:)(v46);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 8236;
  v48._object = (void *)0xE200000000000000;
  String.append(_:)(v48);
  uint64_t v49 = *v39;
  uint64_t v50 = (void *)v39[1];
  swift_bridgeObjectRetain();
  v51._countAndFlagsBits = v49;
  v51._object = v50;
  String.append(_:)(v51);
  swift_bridgeObjectRelease();
  int64_t v52 = *((void *)v22 + 2);
  int64_t v53 = v52 + 3;
  if (__OFADD__(v52, 3))
  {
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v49 = v89;
  uint64_t v47 = (unint64_t *)v90;
  unint64_t v54 = *((void *)v22 + 3);
  unint64_t v55 = v54 >> 1;
  if ((uint64_t)(v54 >> 1) < v53)
  {
LABEL_35:
    if (v52 <= v53) {
      int64_t v83 = v52 + 3;
    }
    else {
      int64_t v83 = v52;
    }
    char v22 = sub_100022F98((char *)1, v83, 1, v22);
    int64_t v52 = *((void *)v22 + 2);
    unint64_t v54 = *((void *)v22 + 3);
    unint64_t v55 = v54 >> 1;
  }
  unint64_t v56 = v52 + 1;
  if (v55 <= v52) {
    char v22 = sub_100022F98((char *)(v54 > 1), v52 + 1, 1, v22);
  }
  *((void *)v22 + 2) = v56;
  unsigned int v57 = &v22[16 * v52];
  *((void *)v57 + 4) = 0xD000000000000021;
  *((void *)v57 + 5) = 0x80000001006C1B80;
  unint64_t v58 = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  if (v56 >= v58 >> 1) {
    char v22 = sub_100022F98((char *)(v58 > 1), v52 + 2, 1, v22);
  }
  *((void *)v22 + 2) = v52 + 2;
  uint64_t v59 = &v22[16 * v56];
  *((void *)v59 + 4) = v87;
  *((void *)v59 + 5) = v43;
  unint64_t v60 = *((void *)v22 + 2);
  unint64_t v61 = *((void *)v22 + 3);
  swift_bridgeObjectRetain();
  if (v60 >= v61 >> 1) {
    char v22 = sub_100022F98((char *)(v61 > 1), v60 + 1, 1, v22);
  }
  *((void *)v22 + 2) = v60 + 1;
  unint64_t v62 = &v22[16 * v60];
  *((void *)v62 + 4) = v49;
  *((void *)v62 + 5) = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10062EEC4((uint64_t)v85, type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
LABEL_21:
  unsigned int v63 = *(void **)(v26 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastReturnedProposal);
  if (v63)
  {
    unint64_t v89 = 0;
    unint64_t v90 = 0xE000000000000000;
    id v64 = v63;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    unint64_t v89 = 0x6F7270207473616CLL;
    unint64_t v90 = 0xEF203A6C61736F70;
    [v64 operation];
    v65._countAndFlagsBits = UIDropOperation.debugHUDInfo.getter();
    String.append(_:)(v65);
    swift_bridgeObjectRelease();
    v66._countAndFlagsBits = 8236;
    v66._object = (void *)0xE200000000000000;
    String.append(_:)(v66);
    [v64 intent];
    v67._countAndFlagsBits = UICollectionViewDropIntent.debugHUDInfo.getter();
    String.append(_:)(v67);
    swift_bridgeObjectRelease();
    unint64_t v68 = v89;
    unint64_t v69 = v90;
    unint64_t v71 = *((void *)v22 + 2);
    unint64_t v70 = *((void *)v22 + 3);
    if (v71 >= v70 >> 1) {
      char v22 = sub_100022F98((char *)(v70 > 1), v71 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v71 + 1;
    unsigned int v72 = &v22[16 * v71];
    *((void *)v72 + 4) = v68;
    *((void *)v72 + 5) = v69;
  }
  unint64_t v89 = 0;
  unint64_t v90 = 0xE000000000000000;
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  unint64_t v89 = 0xD000000000000025;
  unint64_t v90 = 0x80000001006C1B50;
  if (*(unsigned char *)(v26
                + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates))
    uint64_t v73 = 1702195828;
  else {
    uint64_t v73 = 0x65736C6166;
  }
  if (*(unsigned char *)(v26
                + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_collectionViewHasUncommittedUpdates))
    unint64_t v74 = 0xE400000000000000;
  else {
    unint64_t v74 = 0xE500000000000000;
  }
  unint64_t v75 = v74;
  String.append(_:)(*(Swift::String *)&v73);
  swift_bridgeObjectRelease();
  unint64_t v76 = v89;
  unint64_t v77 = v90;
  unint64_t v79 = *((void *)v22 + 2);
  unint64_t v78 = *((void *)v22 + 3);
  if (v79 >= v78 >> 1) {
    char v22 = sub_100022F98((char *)(v78 > 1), v79 + 1, 1, v22);
  }
  *((void *)v22 + 2) = v79 + 1;
  unsigned int v80 = &v22[16 * v79];
  *((void *)v80 + 4) = v76;
  *((void *)v80 + 5) = v77;
  unint64_t v89 = (unint64_t)v22;
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v81 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v81;
}

uint64_t sub_10062D0DC()
{
  sub_10003B6F8(v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastDropSessionDidUpdateInput, &qword_10078E8F0);
  sub_10003B6F8(v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastHitTestResult, (uint64_t *)&unk_1007AC740);
  sub_10003B6F8(v0 + OBJC_IVAR____TtCC9Reminders29TTRIRemindersBoardDropContext9DebugInfo_lastTargetIndexPathForMoveCall, &qword_1007870B0);

  return swift_deallocClassInstance();
}

uint64_t sub_10062D188()
{
  sub_10062EEC4(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_columnID, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
  swift_unknownObjectRelease();
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal, (uint64_t *)&unk_10078C860);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10062D238()
{
  return type metadata accessor for TTRIRemindersBoardDropContext(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDropContext(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007AC3E8);
}

void sub_10062D260()
{
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  if (v0 <= 0x3F)
  {
    sub_10062D518(319, (unint64_t *)&unk_10078C780, (void (*)(uint64_t))type metadata accessor for TTRIRemindersBoardDropProposal);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardDropProposal(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007AC700);
}

uint64_t sub_10062D384()
{
  return type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo(0);
}

uint64_t type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007AC4C0);
}

void sub_10062D3AC()
{
  sub_10062D518(319, qword_10078E7E0, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  if (v0 <= 0x3F)
  {
    sub_10062D518(319, &qword_1007AC4D8, (void (*)(uint64_t))type metadata accessor for TTRICollectionViewHitTestResult);
    if (v1 <= 0x3F)
    {
      sub_10062D518(319, (unint64_t *)&unk_1007AC4E0, (void (*)(uint64_t))type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10062D518(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardDropContext.DebugInfo.LastTargetIndexPathForMoveCall(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007AC658);
}

char *sub_10062D58C(char *a1, char *a2, int *a3)
{
  unint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *(void *)a2;
    *(void *)unint64_t v4 = *(void *)a2;
    unint64_t v4 = (char *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = &a1[v8];
    uint64_t v10 = &a2[v8];
    uint64_t v11 = type metadata accessor for IndexPath();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v12(&v4[a3[6]], &a2[a3[6]], v11);
    v12(&v4[a3[7]], &a2[a3[7]], v11);
    v12(&v4[a3[8]], &a2[a3[8]], v11);
  }
  return v4;
}

uint64_t sub_10062D6D8(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  v8(a1 + a2[6], v5);
  v8(a1 + a2[7], v5);
  uint64_t v6 = a1 + a2[8];

  return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v5);
}

char *sub_10062D7C0(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  return a1;
}

char *sub_10062D8BC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  return a1;
}

char *sub_10062D9C0(char *a1, char *a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v10(&a1[a3[6]], &a2[a3[6]], v9);
  v10(&a1[a3[7]], &a2[a3[7]], v9);
  v10(&a1[a3[8]], &a2[a3[8]], v9);
  return a1;
}

char *sub_10062DAAC(char *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for IndexPath();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  v11(&a1[a3[6]], &a2[a3[6]], v10);
  v11(&a1[a3[7]], &a2[a3[7]], v10);
  v11(&a1[a3[8]], &a2[a3[8]], v10);
  return a1;
}

uint64_t sub_10062DBA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10062DBB4);
}

uint64_t sub_10062DBB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IndexPath();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10062DC64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062DC78);
}

uint64_t sub_10062DC78(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for IndexPath();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10062DD20()
{
  uint64_t result = type metadata accessor for IndexPath();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10062DDBC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = *(int *)(a3 + 24);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for TTRICollectionViewDropIntent(0);
    swift_unknownObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v15 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v9, v10, v15);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v13 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v9, v10, v13);
      uint64_t v14 = sub_10003B754(&qword_1007AC6A0);
      v9[*(int *)(v14 + 48)] = v10[*(int *)(v14 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return v5;
}

uint64_t sub_10062DF84(uint64_t a1, uint64_t a2)
{
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for TTRICollectionViewDropIntent(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v6 = type metadata accessor for IndexPath();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v4, v6);
  }
  return result;
}

void *sub_10062E03C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for TTRICollectionViewDropIntent(0);
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v13 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v11 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
    uint64_t v12 = sub_10003B754(&qword_1007AC6A0);
    v7[*(int *)(v12 + 48)] = v8[*(int *)(v12 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10062E1B8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_10062EEC4((uint64_t)a1 + v6, type metadata accessor for TTRICollectionViewDropIntent);
    uint64_t v9 = type metadata accessor for TTRICollectionViewDropIntent(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v7, v8, v11);
      uint64_t v12 = sub_10003B754(&qword_1007AC6A0);
      v7[*(int *)(v12 + 48)] = v8[*(int *)(v12 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10062E380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = type metadata accessor for TTRICollectionViewDropIntent(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v12 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v12 - 8) + 32))(v6, v7, v12);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for IndexPath();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v6, v7, v10);
    uint64_t v11 = sub_10003B754(&qword_1007AC6A0);
    *((unsigned char *)v6 + *(int *)(v11 + 48)) = *((unsigned char *)v7 + *(int *)(v11 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_10062E4C4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_unknownObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_10062EEC4((uint64_t)a1 + v6, type metadata accessor for TTRICollectionViewDropIntent);
    uint64_t v9 = type metadata accessor for TTRICollectionViewDropIntent(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v13 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v7, v8, v13);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for IndexPath();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v7, v8, v11);
      uint64_t v12 = sub_10003B754(&qword_1007AC6A0);
      v7[*(int *)(v12 + 48)] = v8[*(int *)(v12 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_10062E66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10062E680);
}

uint64_t sub_10062E680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for TTRICollectionViewDropIntent(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10062E730(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10062E744);
}

uint64_t sub_10062E744(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for TTRICollectionViewDropIntent(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10062E7EC()
{
  uint64_t result = type metadata accessor for TTRICollectionViewDropIntent(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10062E890()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_10078C860);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = 0x44496E6D756C6F63;
  unint64_t v44 = 0xEA0000000000203ALL;
  v9._countAndFlagsBits = TTRRemindersListViewModel.ItemID.description.getter();
  String.append(_:)(v9);
  swift_bridgeObjectRelease();
  uint64_t v10 = v43;
  unint64_t v11 = v44;
  uint64_t v12 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
  unint64_t v14 = *((void *)v12 + 2);
  unint64_t v13 = *((void *)v12 + 3);
  if (v14 >= v13 >> 1) {
    uint64_t v12 = sub_100022F98((char *)(v13 > 1), v14 + 1, 1, v12);
  }
  *((void *)v12 + 2) = v14 + 1;
  uint64_t v15 = &v12[16 * v14];
  *((void *)v15 + 4) = v10;
  *((void *)v15 + 5) = v11;
  uint64_t v16 = v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  swift_beginAccess();
  sub_10003B694(v16, (uint64_t)v4, (uint64_t *)&unk_10078C860);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_10078C860);
  }
  else
  {
    sub_10062EF24((uint64_t)v4, (uint64_t)v8, type metadata accessor for TTRIRemindersBoardDropProposal);
    if (*(unsigned char *)(v1
                  + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection))
      uint64_t v17 = 0x296E657A6F724628;
    else {
      uint64_t v17 = 0;
    }
    if (*(unsigned char *)(v1
                  + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_dropProposalHasBlockingTargetRedirection))
      int v18 = (void *)0xE800000000000000;
    else {
      int v18 = (void *)0xE000000000000000;
    }
    uint64_t v41 = sub_10062C348();
    uint64_t v42 = v19;
    swift_bridgeObjectRetain();
    v20._countAndFlagsBits = v17;
    v20._object = v18;
    String.append(_:)(v20);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v21 = v41;
    uint64_t v22 = v42;
    unint64_t v24 = *((void *)v12 + 2);
    unint64_t v23 = *((void *)v12 + 3);
    if (v24 >= v23 >> 1) {
      uint64_t v12 = sub_100022F98((char *)(v23 > 1), v24 + 1, 1, v12);
    }
    *((void *)v12 + 2) = v24 + 1;
    uint64_t v25 = &v12[16 * v24];
    *((void *)v25 + 4) = v21;
    *((void *)v25 + 5) = v22;
    sub_10062EEC4((uint64_t)v8, type metadata accessor for TTRIRemindersBoardDropProposal);
  }
  uint64_t v26 = sub_10062C708();
  unint64_t v28 = v27;
  uint64_t v29 = HIBYTE(v27) & 0xF;
  if ((v27 & 0x2000000000000000) == 0) {
    uint64_t v29 = v26 & 0xFFFFFFFFFFFFLL;
  }
  if (v29)
  {
    uint64_t v30 = v26;
    unint64_t v32 = *((void *)v12 + 2);
    unint64_t v31 = *((void *)v12 + 3);
    int64_t v33 = v31 >> 1;
    unint64_t v34 = v32 + 1;
    if (v31 >> 1 <= v32)
    {
      uint64_t v12 = sub_100022F98((char *)(v31 > 1), v32 + 1, 1, v12);
      unint64_t v31 = *((void *)v12 + 3);
      int64_t v33 = v31 >> 1;
    }
    *((void *)v12 + 2) = v34;
    unint64_t v35 = &v12[16 * v32];
    *((void *)v35 + 4) = 0xD00000000000002BLL;
    *((void *)v35 + 5) = 0x80000001006C1AF0;
    int64_t v36 = v32 + 2;
    if (v33 < v36) {
      uint64_t v12 = sub_100022F98((char *)(v31 > 1), v36, 1, v12);
    }
    *((void *)v12 + 2) = v36;
    uint64_t v37 = &v12[16 * v34];
    *((void *)v37 + 4) = v30;
    *((void *)v37 + 5) = v28;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v41 = (uint64_t)v12;
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v38 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v38;
}

id sub_10062EC9C()
{
  uint64_t v1 = type metadata accessor for TTRICollectionViewDropIntent(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Reminders29TTRIRemindersBoardDropContext_lastDropProposal;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for TTRIRemindersBoardDropProposal(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    sub_10062EF8C(v4 + *(int *)(v5 + 24), (uint64_t)v3, type metadata accessor for TTRICollectionViewDropIntent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload != 1) {
        goto LABEL_2;
      }
      id v9 = [self greenColor];
      uint64_t v10 = &type metadata accessor for TTRUnadjustedIndexPath;
    }
    else
    {
      id v9 = [self orangeColor];
      uint64_t v10 = &type metadata accessor for TTRAdjustedIndexPath;
    }
    sub_10062EEC4((uint64_t)v3, (uint64_t (*)(void))v10);
    return v9;
  }
LABEL_2:
  id v6 = [self grayColor];

  return v6;
}

uint64_t sub_10062EE7C()
{
  return sub_10062E890();
}

id sub_10062EEA0()
{
  return sub_10062EC9C();
}

uint64_t sub_10062EEC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10062EF24(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10062EF8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

char *sub_10062EFF4(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    a1 = &v10[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
    return a1;
  }
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      uint64_t v11 = *a2;
      *(void *)a1 = *a2;
      uint64_t v12 = v11;
LABEL_22:
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 1:
      uint64_t v55 = v7;
      unint64_t v13 = *a2;
      *(void *)a1 = *a2;
      uint64_t v14 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v15 = (void **)&a1[v14];
      uint64_t v16 = (void **)((char *)a2 + v14);
      uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v18 = *(void *)(v17 - 8);
      uint64_t v19 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v18 + 48);
      Swift::String v20 = v13;
      if (v19(v16, 1, v17))
      {
        uint64_t v21 = sub_10003B754(&qword_10078C890);
        memcpy(v15, v16, *(void *)(*(void *)(v21 - 8) + 64));
        uint64_t v7 = v55;
      }
      else
      {
        uint64_t v7 = v55;
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v26 = *v16;
            *uint64_t v15 = *v16;
            id v27 = v26;
            goto LABEL_20;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v25 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v25 - 8) + 16))(v15, v16, v25);
LABEL_20:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v15, v16, *(void *)(v18 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
      }
      goto LABEL_22;
    case 0:
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          unint64_t v23 = *a2;
          *(void *)a1 = *a2;
          unint64_t v24 = v23;
          goto LABEL_15;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v22 = type metadata accessor for Date();
          (*(void (**)(char *, char **, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
          break;
      }
      goto LABEL_22;
  }
  memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
LABEL_23:
  uint64_t v28 = *(int *)(a3 + 20);
  uint64_t v29 = &a1[v28];
  uint64_t v30 = (char *)a2 + v28;
  uint64_t v31 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  uint64_t v32 = *(int *)(a3 + 24);
  int64_t v33 = (void **)&a1[v32];
  unint64_t v34 = (void **)((char *)a2 + v32);
  int v35 = swift_getEnumCaseMultiPayload();
  switch(v35)
  {
    case 2:
      uint64_t v37 = *v34;
      *int64_t v33 = *v34;
      id v38 = v37;
LABEL_42:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      size_t v39 = *v34;
      *int64_t v33 = *v34;
      uint64_t v40 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v41 = (void **)((char *)v33 + v40);
      uint64_t v42 = (void **)((char *)v34 + v40);
      uint64_t v43 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v44 = *(void *)(v43 - 8);
      Swift::String v45 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v44 + 48);
      id v46 = v39;
      if (v45(v42, 1, v43))
      {
        uint64_t v47 = sub_10003B754(&qword_10078C890);
        memcpy(v41, v42, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            int64_t v52 = *v42;
            *uint64_t v41 = *v42;
            id v53 = v52;
            goto LABEL_40;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v51 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v51 - 8) + 16))(v41, v42, v51);
LABEL_40:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v41, v42, *(void *)(v44 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
      }
      goto LABEL_42;
    case 0:
      uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v49 = *v34;
          *int64_t v33 = *v34;
          id v50 = v49;
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v48 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v48 - 8) + 16))(v33, v34, v48);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v33, v34, *(void *)(*(void *)(v36 - 8) + 64));
          break;
      }
      goto LABEL_42;
  }
  memcpy(v33, v34, *(void *)(*(void *)(v7 - 8) + 64));
  return a1;
}

void sub_10062FCDC(id *a1, uint64_t a2)
{
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_6:
      id v6 = *a1;
LABEL_7:

      break;
    case 1:

      uint64_t v7 = (id *)((char *)a1 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v6 = *v7;
            goto LABEL_7;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v9 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
            break;
          default:
            goto LABEL_11;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_6;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v5 = type metadata accessor for Date();
          (*(void (**)(id *, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
          break;
        default:
          goto LABEL_11;
      }
      break;
  }
LABEL_11:
  uint64_t v10 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v11 = type metadata accessor for IndexPath();
  (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = (id *)((char *)a1 + *(int *)(a2 + 24));
  int v13 = swift_getEnumCaseMultiPayload();
  switch(v13)
  {
    case 2:
LABEL_21:
      id v17 = *v12;

      break;
    case 1:

      uint64_t v12 = (id *)((char *)v12 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v12, 1, v14))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_21;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_18:
            uint64_t v15 = type metadata accessor for Date();
            uint64_t v16 = *(void (**)(id *, uint64_t))(*(void *)(v15 - 8) + 8);
            v16(v12, v15);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_21;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_18;
        default:
          return;
      }
  }
}

void **sub_1006300D8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    id v10 = v9;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v54 = a3;
    uint64_t v11 = v6;
    uint64_t v12 = *a2;
    *a1 = *a2;
    uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v14 = (void **)((char *)a1 + v13);
    uint64_t v15 = (void **)((char *)a2 + v13);
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v17 = *(void *)(v16 - 8);
    uint64_t v18 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v17 + 48);
    id v19 = v12;
    if (v18(v15, 1, v16))
    {
      uint64_t v20 = sub_10003B754(&qword_10078C890);
      memcpy(v14, v15, *(void *)(*(void *)(v20 - 8) + 64));
      uint64_t v6 = v11;
      a3 = v54;
    }
    else
    {
      uint64_t v6 = v11;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v25 = *v15;
          *uint64_t v14 = *v15;
          id v26 = v25;
          goto LABEL_18;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v24 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v14, v15, v24);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(v17 + 64));
          break;
      }
      a3 = v54;
      (*(void (**)(void **, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_21;
    }
    uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 8u:
      case 9u:
        uint64_t v22 = *a2;
        *a1 = *a2;
        id v23 = v22;
        goto LABEL_13;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v21 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_21:
  uint64_t v27 = *(int *)(a3 + 20);
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = *(int *)(a3 + 24);
  uint64_t v32 = (void **)((char *)a1 + v31);
  int64_t v33 = (void **)((char *)a2 + v31);
  int v34 = swift_getEnumCaseMultiPayload();
  switch(v34)
  {
    case 2:
      uint64_t v36 = *v33;
      *uint64_t v32 = *v33;
      id v37 = v36;
LABEL_40:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 1:
      id v38 = *v33;
      *uint64_t v32 = *v33;
      uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v40 = (void **)((char *)v32 + v39);
      uint64_t v41 = (void **)((char *)v33 + v39);
      uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
      id v45 = v38;
      if (v44(v41, 1, v42))
      {
        uint64_t v46 = sub_10003B754(&qword_10078C890);
        memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v51 = *v41;
            *uint64_t v40 = *v41;
            id v52 = v51;
            goto LABEL_38;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v50 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
LABEL_38:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v40, v41, *(void *)(v43 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      }
      goto LABEL_40;
    case 0:
      uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v48 = *v33;
          *uint64_t v32 = *v33;
          id v49 = v48;
          goto LABEL_33;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v47 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(v32, v33, v47);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v32, v33, *(void *)(*(void *)(v35 - 8) + 64));
          break;
      }
      goto LABEL_40;
  }
  memcpy(v32, v33, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

void **sub_100630D78(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10062EEC4((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = *a2;
      *a1 = *a2;
      id v10 = v9;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v11 = *a2;
      *a1 = *a2;
      uint64_t v12 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v13 = (void **)((char *)a1 + v12);
      uint64_t v14 = (void **)((char *)a2 + v12);
      uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v16 + 48);
      id v18 = v11;
      if (v17(v14, 1, v15))
      {
        uint64_t v19 = sub_10003B754(&qword_10078C890);
        memcpy(v13, v14, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v24 = *v14;
            *uint64_t v13 = *v14;
            id v25 = v24;
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v23 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v23 - 8) + 16))(v13, v14, v23);
LABEL_19:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v13, v14, *(void *)(v16 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_22;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v21 = *a2;
          *a1 = *a2;
          id v22 = v21;
          goto LABEL_14;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_22:
  uint64_t v26 = *(int *)(a3 + 20);
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = (char *)a2 + v26;
  uint64_t v29 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 24))(v27, v28, v29);
  if (a1 != a2)
  {
    uint64_t v30 = *(int *)(a3 + 24);
    uint64_t v31 = (void **)((char *)a1 + v30);
    uint64_t v32 = (void **)((char *)a2 + v30);
    sub_10062EEC4((uint64_t)a1 + v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v34 = swift_getEnumCaseMultiPayload();
    switch(v34)
    {
      case 2:
        uint64_t v36 = *v32;
        *uint64_t v31 = *v32;
        id v37 = v36;
LABEL_42:
        swift_storeEnumTagMultiPayload();
        return a1;
      case 1:
        id v38 = *v32;
        *uint64_t v31 = *v32;
        uint64_t v39 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        uint64_t v40 = (void **)((char *)v31 + v39);
        uint64_t v41 = (void **)((char *)v32 + v39);
        uint64_t v42 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v43 = *(void *)(v42 - 8);
        uint64_t v44 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v43 + 48);
        id v45 = v38;
        if (v44(v41, 1, v42))
        {
          uint64_t v46 = sub_10003B754(&qword_10078C890);
          memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              uint64_t v51 = *v41;
              *uint64_t v40 = *v41;
              id v52 = v51;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v50 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v40, v41, v50);
LABEL_40:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(v40, v41, *(void *)(v43 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        goto LABEL_42;
      case 0:
        uint64_t v35 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v48 = *v32;
            *uint64_t v31 = *v32;
            id v49 = v48;
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v47 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v47 - 8) + 16))(v31, v32, v47);
LABEL_35:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
            break;
        }
        goto LABEL_42;
    }
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  return a1;
}

void *sub_100631A60(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    id v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10003B754(&qword_10078C890);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v16 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v10, v11, *(void *)(v13 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v15 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v17 = *(int *)(a3 + 20);
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = *(int *)(a3 + 24);
  id v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  int v24 = swift_getEnumCaseMultiPayload();
  if (v24 == 1)
  {
    *id v22 = *v23;
    uint64_t v26 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v27 = (char *)v22 + v26;
    uint64_t v28 = (char *)v23 + v26;
    uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_10003B754(&qword_10078C890);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v27, v28, v33);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v27, v28, *(void *)(v30 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
    }
    goto LABEL_28;
  }
  if (!v24)
  {
    uint64_t v25 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v32 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v32 - 8) + 32))(v22, v23, v32);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
        break;
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(v22, v23, *(void *)(*(void *)(v6 - 8) + 64));
  return a1;
}

void *sub_1006324F8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10062EEC4((uint64_t)a1, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      uint64_t v9 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
      {
        uint64_t v14 = sub_10003B754(&qword_10078C890);
        memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v16 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v10, v11, v16);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v10, v11, *(void *)(v13 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v15 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  uint64_t v17 = *(int *)(a3 + 20);
  id v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = type metadata accessor for IndexPath();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  if (a1 != a2)
  {
    uint64_t v21 = *(int *)(a3 + 24);
    id v22 = (void *)((char *)a1 + v21);
    uint64_t v23 = (void *)((char *)a2 + v21);
    sub_10062EEC4((uint64_t)a1 + v21, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v24 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v25 = swift_getEnumCaseMultiPayload();
    if (v25 == 1)
    {
      *id v22 = *v23;
      uint64_t v27 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v28 = (char *)v22 + v27;
      uint64_t v29 = (char *)v23 + v27;
      uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_10003B754(&qword_10078C890);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v34 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v28, v29, v34);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v28, v29, *(void *)(v31 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      goto LABEL_30;
    }
    if (!v25)
    {
      uint64_t v26 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v33 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v33 - 8) + 32))(v22, v23, v33);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
          break;
      }
LABEL_30:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
  }
  return a1;
}

uint64_t sub_100632FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100632FF4);
}

uint64_t sub_100632FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for IndexPath();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_1006330EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100633100);
}

uint64_t sub_100633100(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for IndexPath();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemInfo(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007AC7A8);
}

uint64_t sub_100633224()
{
  uint64_t result = type metadata accessor for TTRRemindersListViewModel.ItemID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IndexPath();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_1006332EC(void *a1, void *a2, int *a3)
{
  uint64_t v3 = a2;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) == 0)
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, v3, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (void **)((char *)a1 + v8);
    uint64_t v10 = (void **)((char *)v3 + v8);
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v15 = *v10;
      *uint64_t v9 = *v10;
      id v16 = v15;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v60 = v11;
      uint64_t v17 = *v10;
      *uint64_t v9 = *v10;
      uint64_t v18 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v19 = (void **)((char *)v9 + v18);
      uint64_t v20 = (void **)((char *)v10 + v18);
      uint64_t v21 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v22 = *(void *)(v21 - 8);
      uint64_t v23 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v22 + 48);
      id v24 = v17;
      if (v23(v20, 1, v21))
      {
        uint64_t v25 = sub_10003B754(&qword_10078C890);
        memcpy(v19, v20, *(void *)(*(void *)(v25 - 8) + 64));
        uint64_t v11 = v60;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v30 = *v20;
            *uint64_t v19 = *v20;
            id v31 = v30;
            goto LABEL_20;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v29 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v29 - 8) + 16))(v19, v20, v29);
LABEL_20:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v19, v20, *(void *)(v22 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
        uint64_t v11 = v60;
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v9, v10, *(void *)(*(void *)(v11 - 8) + 64));
        goto LABEL_23;
      }
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v27 = *v10;
          *uint64_t v9 = *v10;
          id v28 = v27;
          goto LABEL_15;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v26 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v26 - 8) + 16))(v9, v10, v26);
LABEL_15:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
LABEL_23:
    uint64_t v32 = a3[6];
    uint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)v3 + v32;
    uint64_t v35 = type metadata accessor for IndexPath();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
    uint64_t v36 = a3[7];
    id v37 = (void **)((char *)a1 + v36);
    id v38 = (void **)((char *)v3 + v36);
    int v39 = swift_getEnumCaseMultiPayload();
    if (v39 == 2)
    {
      uint64_t v41 = *v38;
      void *v37 = *v38;
      id v42 = v41;
    }
    else if (v39 == 1)
    {
      uint64_t v59 = v3;
      uint64_t v43 = *v38;
      void *v37 = *v38;
      uint64_t v44 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v45 = (void **)((char *)v37 + v44);
      uint64_t v46 = (void **)((char *)v38 + v44);
      uint64_t v47 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v48 = *(void *)(v47 - 8);
      id v49 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v48 + 48);
      id v50 = v43;
      if (v49(v46, 1, v47))
      {
        uint64_t v51 = sub_10003B754(&qword_10078C890);
        memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
        uint64_t v3 = v59;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            unint64_t v56 = *v46;
            unsigned __int16 *v45 = *v46;
            id v57 = v56;
            goto LABEL_40;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v55 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v55 - 8) + 16))(v45, v46, v55);
LABEL_40:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v45, v46, *(void *)(v48 + 64));
            break;
        }
        uint64_t v3 = v59;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
    }
    else
    {
      if (v39)
      {
        memcpy(v37, v38, *(void *)(*(void *)(v11 - 8) + 64));
LABEL_43:
        *((unsigned char *)a1 + a3[8]) = *((unsigned char *)v3 + a3[8]);
        return a1;
      }
      uint64_t v40 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v53 = *v38;
          void *v37 = *v38;
          id v54 = v53;
          goto LABEL_35;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v52 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v52 - 8) + 16))(v37, v38, v52);
LABEL_35:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v37, v38, *(void *)(*(void *)(v40 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
    goto LABEL_43;
  }
  uint64_t v14 = *a2;
  *a1 = *a2;
  a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
  swift_retain();
  return a1;
}

void sub_10063403C(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  int v5 = (id *)(a1 + a2[5]);
  type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
LABEL_8:

      break;
    case 1:

      int v5 = (id *)((char *)v5 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v5, 1, v7))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_8;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_7:
            uint64_t v8 = type metadata accessor for Date();
            (*(void (**)(id *, uint64_t))(*(void *)(v8 - 8) + 8))(v5, v8);
            break;
          default:
            goto LABEL_9;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_8;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_7;
        default:
          goto LABEL_9;
      }
  }
LABEL_9:
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (id *)(a1 + a2[7]);
  int v12 = swift_getEnumCaseMultiPayload();
  switch(v12)
  {
    case 2:
LABEL_19:
      id v16 = *v11;

      break;
    case 1:

      uint64_t v11 = (id *)((char *)v11 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_16:
            uint64_t v14 = type metadata accessor for Date();
            uint64_t v15 = *(void (**)(id *, uint64_t))(*(void *)(v14 - 8) + 8);
            v15(v11, v14);
            break;
          default:
            return;
        }
      }
      break;
    case 0:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_19;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_16;
        default:
          return;
      }
  }
}

uint64_t sub_100634440(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void **)(a1 + v7);
  uint64_t v9 = (void **)(a2 + v7);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v13 = *v9;
    *uint64_t v8 = *v9;
    id v14 = v13;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v58 = a2;
    uint64_t v59 = a3;
    uint64_t v15 = *v9;
    *uint64_t v8 = *v9;
    uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v17 = (void **)((char *)v8 + v16);
    uint64_t v18 = (void **)((char *)v9 + v16);
    uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
    id v22 = v15;
    if (v21(v18, 1, v19))
    {
      uint64_t v23 = sub_10003B754(&qword_10078C890);
      memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
      a2 = v58;
      a3 = v59;
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          id v28 = *v18;
          *uint64_t v17 = *v18;
          id v29 = v28;
          goto LABEL_18;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v27 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v17, v18, v27);
LABEL_18:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v17, v18, *(void *)(v20 + 64));
          break;
      }
      a2 = v58;
      (*(void (**)(void **, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      a3 = v59;
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_21;
    }
    uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 8u:
      case 9u:
        uint64_t v25 = *v9;
        *uint64_t v8 = *v9;
        id v26 = v25;
        goto LABEL_13;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v24 = type metadata accessor for Date();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v9, v24);
LABEL_13:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_21:
  uint64_t v30 = a3[6];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
  uint64_t v34 = a3[7];
  uint64_t v35 = (void **)(a1 + v34);
  uint64_t v36 = (void **)(a2 + v34);
  int v37 = swift_getEnumCaseMultiPayload();
  switch(v37)
  {
    case 2:
      int v39 = *v36;
      *uint64_t v35 = *v36;
      id v40 = v39;
LABEL_40:
      swift_storeEnumTagMultiPayload();
      goto LABEL_41;
    case 1:
      uint64_t v41 = *v36;
      *uint64_t v35 = *v36;
      uint64_t v42 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v43 = (void **)((char *)v35 + v42);
      uint64_t v44 = (void **)((char *)v36 + v42);
      uint64_t v45 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v46 = *(void *)(v45 - 8);
      uint64_t v47 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v46 + 48);
      id v48 = v41;
      if (v47(v44, 1, v45))
      {
        uint64_t v49 = sub_10003B754(&qword_10078C890);
        memcpy(v43, v44, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v55 = *v44;
            id v54 = v43;
            *uint64_t v43 = *v44;
            id v56 = v55;
            goto LABEL_38;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v53 = type metadata accessor for Date();
            id v54 = v43;
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(v43, v44, v53);
LABEL_38:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            id v54 = v43;
            memcpy(v43, v44, *(void *)(v46 + 64));
            break;
        }
        (*(void (**)(void **, void, uint64_t, uint64_t))(v46 + 56))(v54, 0, 1, v45);
      }
      goto LABEL_40;
    case 0:
      uint64_t v38 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v51 = *v36;
          *uint64_t v35 = *v36;
          id v52 = v51;
          goto LABEL_33;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v50 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v35, v36, v50);
LABEL_33:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v35, v36, *(void *)(*(void *)(v38 - 8) + 64));
          break;
      }
      goto LABEL_40;
  }
  memcpy(v35, v36, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_41:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100635160(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void **)(a1 + v7);
    uint64_t v9 = (void **)(a2 + v7);
    sub_10062EEC4(a1 + v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = *v9;
      *uint64_t v8 = *v9;
      id v14 = v13;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v58 = a3;
      uint64_t v15 = *v9;
      *uint64_t v8 = *v9;
      uint64_t v16 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v17 = (void **)((char *)v8 + v16);
      uint64_t v18 = (void **)((char *)v9 + v16);
      uint64_t v19 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v20 + 48);
      id v22 = v15;
      if (v21(v18, 1, v19))
      {
        uint64_t v23 = sub_10003B754(&qword_10078C890);
        memcpy(v17, v18, *(void *)(*(void *)(v23 - 8) + 64));
        a3 = v58;
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            id v28 = *v18;
            *uint64_t v17 = *v18;
            id v29 = v28;
            goto LABEL_19;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v27 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v27 - 8) + 16))(v17, v18, v27);
LABEL_19:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v17, v18, *(void *)(v20 + 64));
            break;
        }
        a3 = v58;
        (*(void (**)(void **, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_22;
      }
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          uint64_t v25 = *v9;
          *uint64_t v8 = *v9;
          id v26 = v25;
          goto LABEL_14;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v24 = type metadata accessor for Date();
          (*(void (**)(void **, void **, uint64_t))(*(void *)(v24 - 8) + 16))(v8, v9, v24);
LABEL_14:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_22:
  uint64_t v30 = a3[6];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 24))(v31, v32, v33);
  if (a1 != a2)
  {
    uint64_t v34 = a3[7];
    uint64_t v35 = (void **)(a1 + v34);
    uint64_t v36 = (void **)(a2 + v34);
    sub_10062EEC4(a1 + v34, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v38 = swift_getEnumCaseMultiPayload();
    switch(v38)
    {
      case 2:
        id v40 = *v36;
        *uint64_t v35 = *v36;
        id v41 = v40;
LABEL_42:
        swift_storeEnumTagMultiPayload();
        goto LABEL_43;
      case 1:
        uint64_t v42 = *v36;
        *uint64_t v35 = *v36;
        uint64_t v43 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
        __dst = (void **)((char *)v35 + v43);
        uint64_t v44 = (void **)((char *)v36 + v43);
        uint64_t v45 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        uint64_t v46 = *(void *)(v45 - 8);
        uint64_t v47 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v46 + 48);
        id v48 = v42;
        if (v47(v44, 1, v45))
        {
          uint64_t v49 = sub_10003B754(&qword_10078C890);
          memcpy(__dst, v44, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
            case 8u:
            case 9u:
              id v54 = *v44;
              *__dst = *v44;
              id v55 = v54;
              goto LABEL_40;
            case 2u:
            case 3u:
            case 4u:
            case 5u:
            case 6u:
              uint64_t v53 = type metadata accessor for Date();
              (*(void (**)(void **, void **, uint64_t))(*(void *)(v53 - 8) + 16))(__dst, v44, v53);
LABEL_40:
              swift_storeEnumTagMultiPayload();
              break;
            default:
              memcpy(__dst, v44, *(void *)(v46 + 64));
              break;
          }
          (*(void (**)(void **, void, uint64_t, uint64_t))(v46 + 56))(__dst, 0, 1, v45);
        }
        goto LABEL_42;
      case 0:
        uint64_t v39 = type metadata accessor for TTRRemindersListViewModel.SectionID();
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            uint64_t v51 = *v36;
            *uint64_t v35 = *v36;
            id v52 = v51;
            goto LABEL_35;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v50 = type metadata accessor for Date();
            (*(void (**)(void **, void **, uint64_t))(*(void *)(v50 - 8) + 16))(v35, v36, v50);
LABEL_35:
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
            break;
        }
        goto LABEL_42;
    }
    memcpy(v35, v36, *(void *)(*(void *)(v37 - 8) + 64));
  }
LABEL_43:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_100635EBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v8 = *v9;
    uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    id v14 = (char *)v8 + v13;
    uint64_t v15 = (char *)v9 + v13;
    uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v17 = *(void *)(v16 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
    {
      uint64_t v18 = sub_10003B754(&qword_10078C890);
      memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v20 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v14, v15, v20);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v14, v15, *(void *)(v17 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
    }
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
      goto LABEL_15;
    }
    uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
LABEL_15:
  uint64_t v21 = a3[6];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  uint64_t v25 = a3[7];
  id v26 = (void *)(a1 + v25);
  uint64_t v27 = (void *)(a2 + v25);
  int v28 = swift_getEnumCaseMultiPayload();
  if (v28 == 1)
  {
    *id v26 = *v27;
    uint64_t v30 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
    uint64_t v31 = (char *)v26 + v30;
    uint64_t v32 = (char *)v27 + v30;
    uint64_t v33 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    uint64_t v34 = *(void *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      uint64_t v35 = sub_10003B754(&qword_10078C890);
      memcpy(v31, v32, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v37 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v31, v32, v37);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v31, v32, *(void *)(v34 + 64));
          break;
      }
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    goto LABEL_28;
  }
  if (!v28)
  {
    uint64_t v29 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
      case 3u:
      case 4u:
      case 5u:
      case 6u:
        uint64_t v36 = type metadata accessor for Date();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v36 - 8) + 32))(v26, v27, v36);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v26, v27, *(void *)(*(void *)(v29 - 8) + 64));
        break;
    }
LABEL_28:
    swift_storeEnumTagMultiPayload();
    goto LABEL_29;
  }
  memcpy(v26, v27, *(void *)(*(void *)(v10 - 8) + 64));
LABEL_29:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1006369B0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  if (a1 != a2)
  {
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (void *)(a2 + v7);
    sub_10062EEC4(a1 + v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v8 = *v9;
      uint64_t v13 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      id v14 = (char *)v8 + v13;
      uint64_t v15 = (char *)v9 + v13;
      uint64_t v16 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v17 = *(void *)(v16 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        uint64_t v18 = sub_10003B754(&qword_10078C890);
        memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v20 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v14, v15, v20);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v14, v15, *(void *)(v17 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
        goto LABEL_16;
      }
      uint64_t v12 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v19 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v19 - 8) + 32))(v8, v9, v19);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_16:
  uint64_t v21 = a3[6];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = type metadata accessor for IndexPath();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 40))(v22, v23, v24);
  if (a1 != a2)
  {
    uint64_t v25 = a3[7];
    id v26 = (void *)(a1 + v25);
    uint64_t v27 = (void *)(a2 + v25);
    sub_10062EEC4(a1 + v25, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
    uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    int v29 = swift_getEnumCaseMultiPayload();
    if (v29 == 1)
    {
      *id v26 = *v27;
      uint64_t v31 = *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20);
      uint64_t v32 = (char *)v26 + v31;
      uint64_t v33 = (char *)v27 + v31;
      uint64_t v34 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      uint64_t v35 = *(void *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        uint64_t v36 = sub_10003B754(&qword_10078C890);
        memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
      }
      else
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            uint64_t v38 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v32, v33, v38);
            swift_storeEnumTagMultiPayload();
            break;
          default:
            memcpy(v32, v33, *(void *)(v35 + 64));
            break;
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      goto LABEL_30;
    }
    if (!v29)
    {
      uint64_t v30 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          uint64_t v37 = type metadata accessor for Date();
          (*(void (**)(void *, void *, uint64_t))(*(void *)(v37 - 8) + 32))(v26, v27, v37);
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
          break;
      }
LABEL_30:
      swift_storeEnumTagMultiPayload();
      goto LABEL_31;
    }
    memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
  }
LABEL_31:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1006374F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100637508);
}

uint64_t sub_100637508(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
    {
      uint64_t v8 = v11;
      uint64_t v12 = *(void *)(v11 - 8);
      uint64_t v13 = a3[5];
    }
    else
    {
      uint64_t v14 = type metadata accessor for IndexPath();
      if (*(_DWORD *)(*(void *)(v14 - 8) + 84) != a2)
      {
        unsigned int v16 = *(unsigned __int8 *)(a1 + a3[8]);
        if (v16 >= 2) {
          return ((v16 + 2147483646) & 0x7FFFFFFF) + 1;
        }
        else {
          return 0;
        }
      }
      uint64_t v8 = v14;
      uint64_t v12 = *(void *)(v14 - 8);
      uint64_t v13 = a3[6];
    }
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_100637678(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063768C);
}

uint64_t sub_10063768C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = type metadata accessor for TTRRemindersListViewModel.ItemID();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = type metadata accessor for IndexPath();
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(unsigned char *)(a1 + a4[8]) = a2 + 1;
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for TTRIRemindersBoardDragItemUserInfo(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007AC840);
}

uint64_t sub_100637808()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for TTRRemindersListViewModel.ItemID();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for IndexPath();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

id sub_100637944(void *a1, double *a2)
{
  swift_beginAccess();
  double v4 = a2[2];
  double v5 = a2[3];
  double v6 = a2[4];
  double v7 = a2[5];
  v9.receiver = a1;
  v9.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  return [super setFrame:v4 v5 v6 v7];
}

uint64_t sub_1006379C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v2);
  double v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788E00);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (_OWORD *)((char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess();
  sub_10002F9C0(v15, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_10003B6F8((uint64_t)v7, (uint64_t *)&unk_100788E00);
  }
  sub_10003265C((uint64_t)v7, (uint64_t)v14, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  sub_100032060((uint64_t)v14, (uint64_t)v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10003265C((uint64_t)v11, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    uint64_t v17 = OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState;
    int v18 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState);
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState))
    {
      char v19 = v18 == 1;
      if (v18 == 1) {
        char v20 = 2;
      }
      else {
        char v20 = 1;
      }
      if (swift_unknownObjectWeakLoadStrong())
      {
        char v21 = sub_1003FF190(v19, v4[*(int *)(v2 + 20)]);
        swift_unknownObjectRelease();
        if (v21)
        {
          *(unsigned char *)(v1 + v17) = v20;
          sub_100031EE0();
        }
      }
    }
    sub_10002FA28((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
    return sub_10002FA28((uint64_t)v14, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  }
  else
  {
    sub_10002FA28((uint64_t)v14, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    long long v22 = v11[11];
    v28[10] = v11[10];
    v28[11] = v22;
    v29[0] = v11[12];
    *(_OWORD *)((char *)v29 + 10) = *(_OWORD *)((char *)v11 + 202);
    long long v23 = v11[7];
    v28[6] = v11[6];
    v28[7] = v23;
    long long v24 = v11[9];
    v28[8] = v11[8];
    v28[9] = v24;
    long long v25 = v11[3];
    v28[2] = v11[2];
    v28[3] = v25;
    long long v26 = v11[5];
    v28[4] = v11[4];
    v28[5] = v26;
    long long v27 = v11[1];
    v28[0] = *v11;
    v28[1] = v27;
    return sub_10003B798((uint64_t)v28);
  }
}

UIAccessibilityTraits sub_100637E68()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  unint64_t v1 = [super accessibilityTraits];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkButton];
  if (([v2 isHidden] & 1) != 0 || !objc_msgSend(v2, "isSelected"))
  {
    if ((UIAccessibilityTraitSelected & v1) != 0) {
      return v1 & ~UIAccessibilityTraitSelected;
    }
    else {
      return v1;
    }
  }
  else
  {
    UIAccessibilityTraits v3 = UIAccessibilityTraitSelected;
    if ((UIAccessibilityTraitSelected & ~v1) == 0) {
      UIAccessibilityTraits v3 = 0;
    }
    return v3 | v1;
  }
}

uint64_t sub_100637F90()
{
  unsigned __int8 v1 = [v0 isEditing];
  if (v1)
  {
    uint64_t v2 = (char *)_swiftEmptyArrayStorage;
  }
  else
  {
    UIAccessibilityTraits v3 = (uint64_t *)TTRAccesibility.AccountsList.Hint.List.unsafeMutableAddressor();
    uint64_t v5 = *v3;
    uint64_t v4 = v3[1];
    swift_bridgeObjectRetain_n();
    uint64_t v2 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v7 = *((void *)v2 + 2);
    unint64_t v6 = *((void *)v2 + 3);
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_100022F98((char *)(v6 > 1), v7 + 1, 1, v2);
    }
    *((void *)v2 + 2) = v7 + 1;
    uint64_t v8 = &v2[16 * v7];
    *((void *)v8 + 4) = v5;
    *((void *)v8 + 5) = v4;
  }
  uint64_t v9 = (uint64_t *)TTRAccesibility.AccountsList.Hint.DragAndDrop.unsafeMutableAddressor();
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_100022F98(0, *((void *)v2 + 2) + 1, 1, v2);
  }
  unint64_t v13 = *((void *)v2 + 2);
  unint64_t v12 = *((void *)v2 + 3);
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_100022F98((char *)(v12 > 1), v13 + 1, 1, v2);
  }
  *((void *)v2 + 2) = v13 + 1;
  uint64_t v14 = &v2[16 * v13];
  *((void *)v14 + 4) = v11;
  *((void *)v14 + 5) = v10;
  TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v15 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0) {
    swift_bridgeObjectRelease();
  }
  return v15;
}

id sub_100638188()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_100788E00);
  __chkstk_darwin(v1 - 8);
  UIAccessibilityTraits v3 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (_OWORD *)((char *)&v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess();
  sub_10002F9C0(v11, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_100788E00);
    return 0;
  }
  else
  {
    sub_10003265C((uint64_t)v3, (uint64_t)v10, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    sub_100032060((uint64_t)v10, (uint64_t)v7);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10002FA28((uint64_t)v10, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      sub_10002FA28((uint64_t)v7, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      return 0;
    }
    else
    {
      long long v13 = v7[11];
      v50[10] = v7[10];
      v50[11] = v13;
      v51[0] = v7[12];
      *(_OWORD *)((char *)v51 + 10) = *(_OWORD *)((char *)v7 + 202);
      long long v14 = v7[7];
      v50[6] = v7[6];
      v50[7] = v14;
      long long v15 = v7[9];
      v50[8] = v7[8];
      v50[9] = v15;
      long long v16 = v7[3];
      v50[2] = v7[2];
      v50[3] = v16;
      long long v17 = v7[5];
      v50[4] = v7[4];
      v50[5] = v17;
      long long v18 = v7[1];
      v50[0] = *v7;
      v50[1] = v18;
      sub_10003B798((uint64_t)v50);
      char v19 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_badge);
      id v20 = [v19 accessibilityLabel];
      if (v20)
      {
        char v21 = v20;
        uint64_t v22 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v24 = v23;

        long long v25 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
        unint64_t v27 = *((void *)v25 + 2);
        unint64_t v26 = *((void *)v25 + 3);
        unint64_t v28 = v27 + 1;
        if (v27 >= v26 >> 1)
        {
          unint64_t v48 = v27 + 1;
          uint64_t v46 = sub_100022F98((char *)(v26 > 1), v27 + 1, 1, v25);
          unint64_t v28 = v48;
          long long v25 = v46;
        }
        *((void *)v25 + 2) = v28;
        int v29 = &v25[16 * v27];
        *((void *)v29 + 4) = v22;
        *((void *)v29 + 5) = v24;
      }
      else
      {
        long long v25 = (char *)_swiftEmptyArrayStorage;
      }
      id v30 = [v19 accessibilityValue];
      if (v30)
      {
        uint64_t v31 = v30;
        uint64_t v32 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v34 = v33;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          long long v25 = sub_100022F98(0, *((void *)v25 + 2) + 1, 1, v25);
        }
        unint64_t v36 = *((void *)v25 + 2);
        unint64_t v35 = *((void *)v25 + 3);
        if (v36 >= v35 >> 1) {
          long long v25 = sub_100022F98((char *)(v35 > 1), v36 + 1, 1, v25);
        }
        *((void *)v25 + 2) = v36 + 1;
        uint64_t v37 = &v25[16 * v36];
        *((void *)v37 + 4) = v32;
        *((void *)v37 + 5) = v34;
      }
      uint64_t v49 = v25;
      TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
      swift_bridgeObjectRetain();
      sub_10003B754(&qword_10078E670);
      sub_1000B542C();
      BidirectionalCollection<>.joined(separator:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10003B754(&qword_100793B40);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
      uint64_t v39 = (void **)NSAttributedStringKey.ttriAccessibilityLowPitch.unsafeMutableAddressor();
      id v40 = *v39;
      *(void *)(inited + 32) = *v39;
      *(void *)(inited + 64) = &type metadata for Bool;
      *(unsigned char *)(inited + 40) = 1;
      id v41 = v40;
      sub_100421E1C(inited);
      id v42 = objc_allocWithZone((Class)NSAttributedString);
      NSString v43 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_100032614((unint64_t *)&qword_100793B50, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v12 = [v42 initWithString:v43 attributes:isa];

      sub_10002FA28((uint64_t)v10, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    }
  }
  return v12;
}

void *sub_1006386C4()
{
  uint64_t v1 = v0;
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  id v3 = [Strong view];
  if (v3)
  {
    uint64_t v4 = v3;
    type metadata accessor for TTRIAccountsListsTreeView(0);
    uint64_t v5 = swift_dynamicCastClass();
    if (v5)
    {
      uint64_t v6 = *(void **)(v5 + qword_1007A59E8);
      if (v6)
      {
        unsigned __int8 v7 = [v6 hasActiveDrag];
        swift_unknownObjectRelease();

        if (v7) {
          return _swiftEmptyArrayStorage;
        }
LABEL_7:
        v30.receiver = v0;
        v30.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
        [super accessibilityCustomActions];
        if (v9)
        {
          uint64_t v10 = v9;
          sub_1000368FC(0, (unint64_t *)&unk_10078E660);
          uint64_t v11 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        else
        {
          uint64_t v11 = _swiftEmptyArrayStorage;
        }
        unint64_t v31 = (unint64_t)v11;
        if ([v1 isEditing]
          && [v1 editingAccessoryType] == (id)4
          && *(void *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName
                          + 8])
        {
          sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
          swift_bridgeObjectRetain();
          id v12 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
          uint64_t v13 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v14 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          swift_retain();
          NSString v15 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unint64_t v28 = sub_10063A2F8;
          uint64_t v29 = v13;
          aBlock = _NSConcreteStackBlock;
          uint64_t v25 = 1107296256;
          unint64_t v26 = sub_10040FBBC;
          unint64_t v27 = &unk_100754FF8;
          long long v16 = _Block_copy(&aBlock);
          [v14 initWithName:v15 image:v12 actionHandler:v16];

          _Block_release(v16);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        if (*(void *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName
                          + 8]
          && *(void *)&v1[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName
                          + 8])
        {
          sub_1000368FC(0, (unint64_t *)&unk_10078AC70);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          long long v17 = (void *)static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
          swift_bridgeObjectRelease();
          uint64_t v18 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v19 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
          swift_retain();
          NSString v20 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          unint64_t v28 = sub_10063A2C4;
          uint64_t v29 = v18;
          aBlock = _NSConcreteStackBlock;
          uint64_t v25 = 1107296256;
          unint64_t v26 = sub_10040FBBC;
          unint64_t v27 = &unk_100754FD0;
          char v21 = _Block_copy(&aBlock);
          [v19 initWithName:v20 image:v17 actionHandler:v21];

          _Block_release(v21);
          swift_release();
          swift_release();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        unint64_t v8 = v31;
        if (v31 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v23) {
            return (void *)v8;
          }
        }
        else if (*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          return (void *)v8;
        }
        swift_bridgeObjectRelease();
        return 0;
      }
      __break(1u);
    }
  }
  uint64_t result = (void *)_assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

BOOL sub_100638C44(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      a3(Strong);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
  return Strong != 0;
}

Class sub_100638D08(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  id v6 = a1;
  uint64_t v7 = a3();

  if (v7)
  {
    sub_1000368FC(0, a4);
    v8.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v8.super.Class isa = 0;
  }

  return v8.super.isa;
}

uint64_t sub_100638DA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788E00);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSArray v8 = (_OWORD *)((char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v53 - v10;
  id v12 = (objc_class *)type metadata accessor for TTRIAccountsListsViewListCell(0);
  v62.receiver = v1;
  v62.super_class = v12;
  id v13 = [super accessibilityDropPointDescriptors];
  if (!v13) {
    return 0;
  }
  id v14 = v13;
  sub_1000368FC(0, &qword_1007ACDC8);
  unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v16 = (uint64_t)v1 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem;
  swift_beginAccess();
  sub_10002F9C0(v16, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788E00);
    return v15;
  }
  sub_10003265C((uint64_t)v4, (uint64_t)v11, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
  [v1 center];
  double v19 = v18;
  sub_100032060((uint64_t)v11, (uint64_t)v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_10002FA28((uint64_t)v8, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    goto LABEL_23;
  }
  long long v20 = v8[11];
  long long v59 = v8[10];
  long long v60 = v20;
  v61[0] = v8[12];
  *(_OWORD *)((char *)v61 + 10) = *(_OWORD *)((char *)v8 + 202);
  long long v21 = v8[7];
  v57[6] = v8[6];
  v57[7] = v21;
  long long v22 = v8[9];
  v57[8] = v8[8];
  long long v58 = v22;
  long long v23 = v8[3];
  v57[2] = v8[2];
  v57[3] = v23;
  long long v24 = v8[5];
  v57[4] = v8[4];
  v57[5] = v24;
  long long v25 = v8[1];
  v57[0] = *v8;
  v57[1] = v25;
  sub_10003B798((uint64_t)v57);
  if (BYTE2(v58))
  {
LABEL_23:
    *(void *)&v57[0] = _swiftEmptyArrayStorage;
    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v48 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48)
      {
LABEL_25:
        if (v48 >= 1)
        {
          for (uint64_t i = 0; i != v48; ++i)
          {
            if ((v15 & 0xC000000000000001) != 0) {
              id v50 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v50 = *(id *)(v15 + 8 * i + 32);
            }
            uint64_t v51 = v50;
            [v50 point];
            if (v52 == v19)
            {
            }
            else
            {
              specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
              specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
              specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
              specialized ContiguousArray._endMutation()();
            }
          }
          swift_bridgeObjectRelease();
          long long v17 = *(void **)&v57[0];
          goto LABEL_39;
        }
        __break(1u);
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease();
    long long v17 = _swiftEmptyArrayStorage;
LABEL_39:
    sub_10002FA28((uint64_t)v11, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    return (uint64_t)v17;
  }
  if (!(v15 >> 62))
  {
    uint64_t v26 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_10;
  }
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
LABEL_10:
  long long v17 = _swiftEmptyArrayStorage;
  if (!v26)
  {
LABEL_36:
    sub_10002FA28((uint64_t)v11, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    swift_bridgeObjectRelease();
    return (uint64_t)v17;
  }
  id v54 = v11;
  id v56 = _swiftEmptyArrayStorage;
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v26 & 0x8000000000000000) == 0)
  {
    uint64_t v28 = 0;
    unint64_t v29 = v15 & 0xC000000000000001;
    objc_super v30 = &selRef_loadDataWithTypeIdentifier_forItemProviderCompletionHandler_;
    uint64_t v55 = v26;
    do
    {
      if (v29) {
        id v31 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v31 = *(id *)(v15 + 8 * v28 + 32);
      }
      uint64_t v32 = v31;
      [v31 v30[189]];
      double v34 = v33;
      id v35 = [v32 view];
      if (v35)
      {
        unint64_t v36 = v35;
        if (v34 != v19)
        {
          [v1 frame];
          double v37 = CGRectGetHeight(v63) * 0.4;
          double v38 = -v37;
          if (v34 >= v19) {
            double v38 = v37;
          }
          double v39 = v19 + v38;
          [v32 v30[189]];
          double v41 = v40;
          unint64_t v42 = v29;
          NSString v43 = v1;
          id v44 = [v32 name];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v45 = objc_allocWithZone((Class)UIAccessibilityLocationDescriptor);
          NSString v46 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v47 = v45;
          uint64_t v1 = v43;
          unint64_t v29 = v42;
          uint64_t v26 = v55;
          [v47 initWithName:v46 point:v36 inView:v41];

          objc_super v30 = &selRef_loadDataWithTypeIdentifier_forItemProviderCompletionHandler_;
        }
      }
      ++v28;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
    }
    while (v26 != v28);
    long long v17 = v56;
    uint64_t v11 = v54;
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

void sub_1006393D4(void *a1, uint64_t a2, objc_class *a3, unint64_t *a4, uint64_t a5, SEL *a6)
{
  Class isa = a3;
  if (a3)
  {
    sub_1000368FC(0, a4);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v9 = a1;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v10 = a1;
  }
  v11.receiver = a1;
  v11.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  [super isa];
}

uint64_t sub_100639484()
{
  sub_1000499D4(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate);

  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem, (uint64_t *)&unk_100788E00);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer));

  return swift_bridgeObjectRelease();
}

id sub_10063955C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TTRIAccountsListsViewListCell(0);
  return [super dealloc];
}

uint64_t sub_100639678()
{
  return type metadata accessor for TTRIAccountsListsViewListCell(0);
}

unsigned char *storeEnumTagSinglePayload for TTRIAccountsListsViewListCell.CheckmarkState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063974CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIAccountsListsViewListCell.CheckmarkState()
{
  return &type metadata for TTRIAccountsListsViewListCell.CheckmarkState;
}

char *sub_100639784(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    long long v17 = *a2;
    *(void *)a1 = *a2;
    a1 = &v17[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(char *, char **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
      a1[v7[5]] = *((unsigned char *)a2 + v7[5]);
      *(void *)&a1[v7[6]] = *(char **)((char *)a2 + v7[6]);
      uint64_t v8 = v7[7];
      id v9 = &a1[v8];
      id v10 = (uint64_t *)((char *)a2 + v8);
      uint64_t v12 = *v10;
      uint64_t v11 = v10[1];
      *(void *)id v9 = v12;
      *((void *)v9 + 1) = v11;
      *(void *)&a1[v7[8]] = *(char **)((char *)a2 + v7[8]);
      a1[v7[9]] = *((unsigned char *)a2 + v7[9]);
      uint64_t v13 = v7[10];
      id v14 = &a1[v13];
      unint64_t v15 = (char **)((char *)a2 + v13);
      uint64_t v16 = v15[1];
      *(void *)id v14 = *v15;
      *((void *)v14 + 1) = v16;
      swift_bridgeObjectRetain();
    }
    else
    {
      double v18 = *a2;
      double v19 = a2[1];
      *(void *)a1 = *a2;
      *((void *)a1 + 1) = v19;
      *((void *)a1 + 2) = a2[2];
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 3);
      long long v20 = a2[6];
      *((void *)a1 + 5) = a2[5];
      *((void *)a1 + 6) = v20;
      long long v21 = a2[8];
      *((void *)a1 + 7) = a2[7];
      *((void *)a1 + 8) = v21;
      long long v22 = a2[9];
      uint64_t v23 = (uint64_t)a2[10];
      uint64_t v24 = (uint64_t)a2[11];
      uint64_t v25 = (uint64_t)a2[12];
      uint64_t v35 = (uint64_t)a2[14];
      uint64_t v36 = (uint64_t)a2[13];
      char v34 = *((unsigned char *)a2 + 120);
      uint64_t v26 = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003BED8(v22, v23, v24, v25, v36, v35, v34);
      *((void *)a1 + 9) = v22;
      *((void *)a1 + 10) = v23;
      *((void *)a1 + 11) = v24;
      *((void *)a1 + 12) = v25;
      *((void *)a1 + 13) = v36;
      *((void *)a1 + 14) = v35;
      a1[120] = v34;
      unint64_t v27 = a2[16];
      uint64_t v28 = a2[17];
      LOBYTE(v21) = *((unsigned char *)a2 + 144);
      sub_10003BF34(v27, v28, (char)v21);
      *((void *)a1 + 16) = v27;
      *((void *)a1 + 17) = v28;
      a1[144] = (char)v21;
      *(_DWORD *)(a1 + 145) = *(_DWORD *)((char *)a2 + 145);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      unint64_t v29 = a2[22];
      *((void *)a1 + 21) = a2[21];
      *((void *)a1 + 22) = v29;
      objc_super v30 = a2[24];
      *((void *)a1 + 23) = a2[23];
      *((void *)a1 + 24) = v30;
      id v31 = a2[26];
      *((void *)a1 + 25) = a2[25];
      *((void *)a1 + 26) = v31;
      *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v32 = v30;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100639A10(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_10002FA28(a1, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      int v5 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
      *(unsigned char *)(a1 + v5[5]) = *(unsigned char *)(a2 + v5[5]);
      *(void *)(a1 + v5[6]) = *(void *)(a2 + v5[6]);
      uint64_t v6 = v5[7];
      uint64_t v7 = (void *)(a1 + v6);
      uint64_t v8 = (void *)(a2 + v6);
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      *(void *)(a1 + v5[8]) = *(void *)(a2 + v5[8]);
      *(unsigned char *)(a1 + v5[9]) = *(unsigned char *)(a2 + v5[9]);
      uint64_t v9 = v5[10];
      id v10 = (void *)(a1 + v9);
      uint64_t v11 = (void *)(a2 + v9);
      *id v10 = *v11;
      v10[1] = v11[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v12 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      uint64_t v13 = *(void **)(a2 + 72);
      uint64_t v14 = *(void *)(a2 + 80);
      uint64_t v15 = *(void *)(a2 + 88);
      uint64_t v16 = *(void *)(a2 + 96);
      uint64_t v17 = *(void *)(a2 + 104);
      uint64_t v26 = *(void *)(a2 + 112);
      char v25 = *(unsigned char *)(a2 + 120);
      id v18 = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10003BED8(v13, v14, v15, v16, v17, v26, v25);
      *(void *)(a1 + 72) = v13;
      *(void *)(a1 + 80) = v14;
      *(void *)(a1 + 88) = v15;
      *(void *)(a1 + 96) = v16;
      *(void *)(a1 + 104) = v17;
      *(void *)(a1 + 112) = v26;
      *(unsigned char *)(a1 + 120) = v25;
      double v19 = *(void **)(a2 + 128);
      long long v20 = *(void **)(a2 + 136);
      char v21 = *(unsigned char *)(a2 + 144);
      sub_10003BF34(v19, v20, v21);
      *(void *)(a1 + 128) = v19;
      *(void *)(a1 + 136) = v20;
      *(unsigned char *)(a1 + 144) = v21;
      *(unsigned char *)(a1 + 145) = *(unsigned char *)(a2 + 145);
      *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
      *(unsigned char *)(a1 + 147) = *(unsigned char *)(a2 + 147);
      *(unsigned char *)(a1 + 148) = *(unsigned char *)(a2 + 148);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      long long v22 = *(void **)(a2 + 192);
      *(void *)(a1 + 192) = v22;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(unsigned char *)(a1 + 216) = *(unsigned char *)(a2 + 216);
      *(unsigned char *)(a1 + 217) = *(unsigned char *)(a2 + 217);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = v22;
    }
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_100639CE0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
    a1[v7[5]] = a2[v7[5]];
    *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
    *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
    *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
    a1[v7[9]] = a2[v7[9]];
    *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_100639DE8(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_10002FA28((uint64_t)a1, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = (int *)type metadata accessor for TTRAccountsListsViewModel.SmartList();
      a1[v7[5]] = a2[v7[5]];
      *(void *)&a1[v7[6]] = *(void *)&a2[v7[6]];
      *(_OWORD *)&a1[v7[7]] = *(_OWORD *)&a2[v7[7]];
      *(void *)&a1[v7[8]] = *(void *)&a2[v7[8]];
      a1[v7[9]] = a2[v7[9]];
      *(_OWORD *)&a1[v7[10]] = *(_OWORD *)&a2[v7[10]];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unint64_t sub_100639F18()
{
  unint64_t result = qword_1007ACDB8;
  if (!qword_1007ACDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007ACDB8);
  }
  return result;
}

uint64_t sub_100639F6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRAccountsListsViewModel.SmartList();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  uint64_t v8 = __chkstk_darwin(v7);
  id v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (_OWORD *)((char *)v32 - v11);
  uint64_t v13 = sub_10003B754(&qword_1007ACDC0);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_100032060(a1, (uint64_t)v16);
  sub_100032060(a2, (uint64_t)v17);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_100032060((uint64_t)v16, (uint64_t)v10);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_10003265C((uint64_t)v17, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      char v18 = static TTRAccountsListsViewModel.SmartList.__derived_struct_equals(_:_:)();
      sub_10002FA28((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
      sub_10002FA28((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
LABEL_9:
      sub_10002FA28((uint64_t)v16, type metadata accessor for TTRIAccountsListsViewListCell.ListItem);
      return v18 & 1;
    }
    sub_10002FA28((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRAccountsListsViewModel.SmartList);
  }
  else
  {
    sub_100032060((uint64_t)v16, (uint64_t)v12);
    long long v19 = v12[11];
    v32[10] = v12[10];
    v32[11] = v19;
    v33[0] = v12[12];
    *(_OWORD *)((char *)v33 + 10) = *(_OWORD *)((char *)v12 + 202);
    long long v20 = v12[7];
    v32[6] = v12[6];
    v32[7] = v20;
    long long v21 = v12[9];
    v32[8] = v12[8];
    v32[9] = v21;
    long long v22 = v12[3];
    v32[2] = v12[2];
    v32[3] = v22;
    long long v23 = v12[5];
    v32[4] = v12[4];
    v32[5] = v23;
    long long v24 = v12[1];
    v32[0] = *v12;
    v32[1] = v24;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      long long v25 = *((_OWORD *)v17 + 11);
      v34[10] = *((_OWORD *)v17 + 10);
      v34[11] = v25;
      v35[0] = *((_OWORD *)v17 + 12);
      *(_OWORD *)((char *)v35 + 10) = *(_OWORD *)(v17 + 202);
      long long v26 = *((_OWORD *)v17 + 7);
      v34[6] = *((_OWORD *)v17 + 6);
      v34[7] = v26;
      long long v27 = *((_OWORD *)v17 + 9);
      v34[8] = *((_OWORD *)v17 + 8);
      v34[9] = v27;
      long long v28 = *((_OWORD *)v17 + 3);
      v34[2] = *((_OWORD *)v17 + 2);
      v34[3] = v28;
      long long v29 = *((_OWORD *)v17 + 5);
      v34[4] = *((_OWORD *)v17 + 4);
      v34[5] = v29;
      long long v30 = *((_OWORD *)v17 + 1);
      v34[0] = *(_OWORD *)v17;
      v34[1] = v30;
      char v18 = static TTRAccountsListsViewModel.List.__derived_struct_equals(_:_:)();
      sub_10003B798((uint64_t)v34);
      sub_10003B798((uint64_t)v32);
      goto LABEL_9;
    }
    sub_10003B798((uint64_t)v32);
  }
  sub_10003B6F8((uint64_t)v16, &qword_1007ACDC0);
  char v18 = 0;
  return v18 & 1;
}

uint64_t sub_10063A28C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

BOOL sub_10063A2C4(uint64_t a1)
{
  return sub_100638C44(a1, v1, (void (*)(void *))sub_100086748);
}

BOOL sub_10063A2F8(uint64_t a1)
{
  return sub_100638C44(a1, v1, (void (*)(void *))sub_1000864FC);
}

uint64_t sub_10063A32C()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10063A33C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_10063A37C()
{
  return sub_100637944(*(void **)(v0 + 16), *(double **)(v0 + 24));
}

uint64_t sub_10063A384()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_10063A394()
{
  *(void *)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listsViewListCellDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_listItem];
  uint64_t v2 = type metadata accessor for TTRIAccountsListsViewListCell.ListItem(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  int v3 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityEditingCustomActionName];
  *int v3 = 0;
  v3[1] = 0;
  uint64_t v4 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionName];
  *uint64_t v4 = 0;
  v4[1] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_ttriAccessibilityShareListActionSFSymbolName];
  *uint64_t v5 = 0;
  v5[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_hidePredefinedSmartListGestureRecognizer] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyphImageCache] = 0;
  uint64_t v6 = &v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_dynamicGlyph];
  *uint64_t v6 = 0;
  v6[1] = 0;
  v0[OBJC_IVAR____TtC9Reminders29TTRIAccountsListsViewListCell_checkmarkState] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063A640);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.UndoRedoItemsStates;
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.CenterItemID(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10063A744);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.CenterItemID()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.CenterItemID;
}

uint64_t destroy for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ProcessedConfiguration;
}

void destroy for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1)
{
}

uint64_t _s9Reminders39TTRIRemindersListNavigationBarViewModelO38ReminderPropertyEditingItemsInfoSourceOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000652A0(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1000652A0(*(id *)a2, v4, v5);
  unsigned int v6 = *(void **)a1;
  BOOL v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100065314(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100065314(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3F && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 63);
  }
  unsigned int v3 = ((*(unsigned __int8 *)(a1 + 16) >> 1) & 0x3E | (*(unsigned __int8 *)(a1 + 16) >> 7)) ^ 0x3F;
  if (v3 >= 0x3E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3E)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 63;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3F) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2)
    {
      *(void *)unint64_t result = 0;
      *(void *)(result + 8) = 0;
      *(unsigned char *)(result + 16) = 4 * (((-a2 >> 1) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_10063AAD8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16) >> 7;
}

uint64_t sub_10063AAE4(uint64_t result)
{
  *(unsigned char *)(result + 16) &= ~0x80u;
  return result;
}

uint64_t sub_10063AAF4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = *(unsigned char *)(result + 16) & 3 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfoSource;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel;
}

uint64_t *sub_10063AB28(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_10003B754(&qword_100787468);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v44 = v8;
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_10003B754(&qword_100787460);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *uint64_t v13 = *v14;
        *(_WORD *)(v13 + 1) = *(_WORD *)(v14 + 1);
        uint64_t v18 = *(int *)(v15 + 28);
        unint64_t v42 = &v13[v18];
        long long v19 = &v14[v18];
        uint64_t v20 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v40 = *(void *)(v20 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v19, 1, v20))
        {
          uint64_t v21 = sub_10003B754(&qword_100791C80);
          memcpy(v42, v19, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          uint64_t v22 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(v42, v19, v22);
          uint64_t v23 = *(int *)(v20 + 20);
          long long v24 = *(void **)&v19[v23];
          *(void *)&v42[v23] = v24;
          double v41 = *(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56);
          id v25 = v24;
          v41(v42, 0, 1, v20);
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      uint64_t v26 = v11[6];
      long long v27 = (char *)a1 + v26;
      long long v28 = (char *)a2 + v26;
      uint64_t v29 = type metadata accessor for TTRTemplatePublicLinkData();
      uint64_t v30 = *(void *)(v29 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
      {
        uint64_t v31 = sub_10003B754(&qword_10079BAB0);
        memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
      }
      else
      {
        uint64_t v32 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v43 = *(void *)(v32 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v28, 1, v32))
        {
          uint64_t v33 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v27, v28, *(void *)(*(void *)(v33 - 8) + 64));
        }
        else
        {
          uint64_t v34 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v27, v28, v34);
          v27[*(int *)(v32 + 20)] = v28[*(int *)(v32 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v27, 0, 1, v32);
        }
        *(void *)&v27[*(int *)(v29 + 20)] = *(void *)&v28[*(int *)(v29 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      }
      uint64_t v35 = v11[7];
      uint64_t v36 = (char *)a1 + v35;
      double v37 = (char *)a2 + v35;
      uint64_t v38 = *((void *)v37 + 1);
      if (v38 == 1)
      {
        *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
        v36[16] = v37[16];
      }
      else
      {
        *(void *)uint64_t v36 = *(void *)v37;
        *((void *)v36 + 1) = v38;
        v36[16] = v37[16];
        swift_bridgeObjectRetain();
      }
      *((unsigned char *)a1 + v11[8]) = *((unsigned char *)a2 + v11[8]);
      *((unsigned char *)a1 + v11[9]) = *((unsigned char *)a2 + v11[9]);
      *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007ACFD8);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007ACF40);
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007ACED8);
}

unsigned char *sub_10063B134(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v44 = v7;
    *a1 = *a2;
    uint64_t v9 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10003B754(&qword_100787460);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      *uint64_t v11 = *v12;
      *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
      uint64_t v16 = *(int *)(v13 + 28);
      __dst = &v11[v16];
      uint64_t v42 = a3;
      uint64_t v17 = &v12[v16];
      uint64_t v18 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_10003B754(&qword_100791C80);
        memcpy(__dst, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(__dst, v17, v21);
        uint64_t v22 = *(int *)(v18 + 20);
        uint64_t v23 = *(void **)&v17[v22];
        *(void *)&__dst[v22] = v23;
        long long v24 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
        id v25 = v23;
        v24(__dst, 0, 1, v18);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      a3 = v42;
    }
    uint64_t v26 = v9[6];
    long long v27 = &a1[v26];
    long long v28 = &a2[v26];
    uint64_t v29 = type metadata accessor for TTRTemplatePublicLinkData();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
    {
      uint64_t v31 = sub_10003B754(&qword_10079BAB0);
      memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v43 = a3;
      uint64_t v32 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v33 = *(void *)(v32 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v28, 1, v32))
      {
        uint64_t v34 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v27, v28, *(void *)(*(void *)(v34 - 8) + 64));
      }
      else
      {
        uint64_t v35 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v27, v28, v35);
        v27[*(int *)(v32 + 20)] = v28[*(int *)(v32 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v27, 0, 1, v32);
      }
      *(void *)&v27[*(int *)(v29 + 20)] = *(void *)&v28[*(int *)(v29 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
      a3 = v43;
    }
    uint64_t v36 = v9[7];
    double v37 = &a1[v36];
    uint64_t v38 = &a2[v36];
    uint64_t v39 = *((void *)v38 + 1);
    if (v39 == 1)
    {
      *(_OWORD *)double v37 = *(_OWORD *)v38;
      v37[16] = v38[16];
    }
    else
    {
      *(void *)double v37 = *(void *)v38;
      *((void *)v37 + 1) = v39;
      v37[16] = v38[16];
      swift_bridgeObjectRetain();
    }
    a1[v9[8]] = a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v44 + 56))(a1, 0, 1, v6);
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

unsigned char *sub_10063B698(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v114 = a3;
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_10003B754(&qword_100787460);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        uint64_t v33 = *(int *)(v15 + 28);
        unsigned int v112 = &v13[v33];
        uint64_t v34 = &v14[v33];
        uint64_t v35 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v108 = *(void *)(v35 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v34, 1, v35))
        {
          uint64_t v36 = sub_10003B754(&qword_100791C80);
          memcpy(v112, v34, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
          uint64_t v40 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v112, v34, v40);
          uint64_t v41 = *(int *)(v35 + 20);
          uint64_t v42 = *(void **)&v34[v41];
          *(void *)&v112[v41] = v42;
          uint64_t v109 = *(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56);
          id v43 = v42;
          v109(v112, 0, 1, v35);
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      uint64_t v44 = v11[6];
      id v45 = &a1[v44];
      NSString v46 = &a2[v44];
      uint64_t v47 = type metadata accessor for TTRTemplatePublicLinkData();
      uint64_t v48 = *(void *)(v47 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
      {
        uint64_t v49 = sub_10003B754(&qword_10079BAB0);
        memcpy(v45, v46, *(void *)(*(void *)(v49 - 8) + 64));
      }
      else
      {
        uint64_t v50 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v113 = *(void *)(v50 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v46, 1, v50))
        {
          uint64_t v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v45, v46, *(void *)(*(void *)(v51 - 8) + 64));
        }
        else
        {
          uint64_t v52 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v52 - 8) + 16))(v45, v46, v52);
          v45[*(int *)(v50 + 20)] = v46[*(int *)(v50 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v45, 0, 1, v50);
        }
        *(void *)&v45[*(int *)(v47 + 20)] = *(void *)&v46[*(int *)(v47 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
      }
      a3 = v114;
      uint64_t v53 = v11[7];
      id v54 = &a1[v53];
      uint64_t v55 = &a2[v53];
      if (*((void *)v55 + 1) == 1)
      {
        long long v56 = *(_OWORD *)v55;
        v54[16] = v55[16];
        *(_OWORD *)id v54 = v56;
      }
      else
      {
        *(void *)id v54 = *(void *)v55;
        *((void *)v54 + 1) = *((void *)v55 + 1);
        v54[16] = v55[16];
        swift_bridgeObjectRetain();
      }
      a1[v11[8]] = a2[v11[8]];
      a1[v11[9]] = a2[v11[9]];
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_63;
    }
LABEL_7:
    uint64_t v18 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_63;
  }
  if (v10)
  {
    sub_10003B6F8((uint64_t)a1, &qword_100787468);
    goto LABEL_7;
  }
  uint64_t v115 = a3;
  *a1 = *a2;
  BOOL v111 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  uint64_t v19 = v111[5];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v23 = *(void *)(v22 - 8);
  long long v24 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      *uint64_t v20 = *v21;
      v20[1] = v21[1];
      v20[2] = v21[2];
      uint64_t v57 = *(int *)(v22 + 28);
      uint64_t v58 = (uint64_t)&v20[v57];
      long long v59 = &v21[v57];
      uint64_t v60 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v61 = *(void *)(v60 - 8);
      objc_super v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v61 + 48);
      int v63 = v62(v58, 1, v60);
      int v64 = v62((uint64_t)v59, 1, v60);
      if (v63)
      {
        if (!v64)
        {
          uint64_t v65 = type metadata accessor for URL();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v65 - 8) + 16))(v58, v59, v65);
          uint64_t v66 = *(int *)(v60 + 20);
          Swift::String v67 = *(void **)&v59[v66];
          *(void *)(v58 + v66) = v67;
          unint64_t v68 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56);
          id v69 = v67;
          v68(v58, 0, 1, v60);
          goto LABEL_35;
        }
      }
      else
      {
        if (!v64)
        {
          uint64_t v102 = type metadata accessor for URL();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v102 - 8) + 24))(v58, v59, v102);
          uint64_t v103 = *(int *)(v60 + 20);
          int v104 = *(void **)&v59[v103];
          unsigned int v105 = *(void **)(v58 + v103);
          *(void *)(v58 + v103) = v104;
          id v106 = v104;

          goto LABEL_35;
        }
        sub_10063C4B0(v58, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      size_t v37 = *(void *)(*(void *)(sub_10003B754(&qword_100791C80) - 8) + 64);
      uint64_t v38 = (void *)v58;
      uint64_t v39 = v59;
LABEL_17:
      memcpy(v38, v39, v37);
      goto LABEL_35;
    }
    sub_10063C4B0((uint64_t)v20, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_16:
    size_t v37 = *(void *)(*(void *)(sub_10003B754(&qword_100787460) - 8) + 64);
    uint64_t v38 = v20;
    uint64_t v39 = v21;
    goto LABEL_17;
  }
  if (v26) {
    goto LABEL_16;
  }
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  v20[2] = v21[2];
  uint64_t v27 = *(int *)(v22 + 28);
  long long v28 = &v20[v27];
  uint64_t v29 = &v21[v27];
  uint64_t v30 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    uint64_t v32 = sub_10003B754(&qword_100791C80);
    memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    uint64_t v70 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16))(v28, v29, v70);
    uint64_t v71 = *(int *)(v30 + 20);
    unsigned int v72 = *(void **)&v29[v71];
    *(void *)&v28[v71] = v72;
    uint64_t v73 = *(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56);
    id v74 = v72;
    v73(v28, 0, 1, v30);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_35:
  uint64_t v75 = v111[6];
  unint64_t v76 = &a1[v75];
  unint64_t v77 = &a2[v75];
  uint64_t v78 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v79 = *(void *)(v78 - 8);
  unsigned int v80 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v79 + 48);
  int v81 = v80(v76, 1, v78);
  int v82 = v80(v77, 1, v78);
  if (!v81)
  {
    if (v82)
    {
      sub_10063C4B0((uint64_t)v76, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
      goto LABEL_41;
    }
    uint64_t v87 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v110 = *(void *)(v87 - 8);
    uint64_t v88 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v110 + 48);
    int v89 = v88(v76, 1, v87);
    int v90 = v88(v77, 1, v87);
    if (v89)
    {
      if (!v90)
      {
        uint64_t v91 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 16))(v76, v77, v91);
        v76[*(int *)(v87 + 20)] = v77[*(int *)(v87 + 20)];
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v110 + 56))(v76, 0, 1, v87);
LABEL_53:
        a3 = v115;
        *(void *)&v76[*(int *)(v78 + 20)] = *(void *)&v77[*(int *)(v78 + 20)];
        goto LABEL_54;
      }
    }
    else
    {
      if (!v90)
      {
        uint64_t v107 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v107 - 8) + 24))(v76, v77, v107);
        v76[*(int *)(v87 + 20)] = v77[*(int *)(v87 + 20)];
        goto LABEL_53;
      }
      sub_10063C4B0((uint64_t)v76, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    }
    uint64_t v93 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v76, v77, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_53;
  }
  if (v82)
  {
LABEL_41:
    uint64_t v86 = sub_10003B754(&qword_10079BAB0);
    memcpy(v76, v77, *(void *)(*(void *)(v86 - 8) + 64));
    a3 = v115;
    goto LABEL_54;
  }
  uint64_t v83 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  uint64_t v84 = *(void *)(v83 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v84 + 48))(v77, 1, v83))
  {
    uint64_t v85 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v76, v77, *(void *)(*(void *)(v85 - 8) + 64));
  }
  else
  {
    uint64_t v92 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v92 - 8) + 16))(v76, v77, v92);
    v76[*(int *)(v83 + 20)] = v77[*(int *)(v83 + 20)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v84 + 56))(v76, 0, 1, v83);
  }
  a3 = v115;
  *(void *)&v76[*(int *)(v78 + 20)] = *(void *)&v77[*(int *)(v78 + 20)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v79 + 56))(v76, 0, 1, v78);
LABEL_54:
  uint64_t v94 = v111[7];
  uint64_t v95 = (uint64_t)&a1[v94];
  int v96 = &a2[v94];
  uint64_t v97 = *(void *)&a1[v94 + 8];
  uint64_t v98 = *(void *)&a2[v94 + 8];
  if (v97 == 1)
  {
    if (v98 == 1)
    {
      long long v99 = *(_OWORD *)v96;
      *(unsigned char *)(v95 + 16) = v96[16];
      *(_OWORD *)uint64_t v95 = v99;
    }
    else
    {
      *(void *)uint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *((void *)v96 + 1);
      *(unsigned char *)(v95 + 16) = v96[16];
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v98 == 1)
    {
      sub_10063C510(v95);
      char v100 = v96[16];
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
    }
    else
    {
      *(void *)uint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *((void *)v96 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v100 = v96[16];
    }
    *(unsigned char *)(v95 + 16) = v100;
  }
  a1[v111[8]] = a2[v111[8]];
  a1[v111[9]] = a2[v111[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
LABEL_63:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_10063C4B0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10063C510(uint64_t a1)
{
  return a1;
}

unsigned char *sub_10063C564(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v38 = a3;
    *a1 = *a2;
    int v9 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v10 = v9[5];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      uint64_t v15 = sub_10003B754(&qword_100787460);
      memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      uint64_t v35 = v7;
      *uint64_t v11 = *v12;
      *(_WORD *)(v11 + 1) = *(_WORD *)(v12 + 1);
      uint64_t v16 = *(int *)(v13 + 28);
      uint64_t v36 = &v11[v16];
      uint64_t v17 = &v12[v16];
      uint64_t v18 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v19 = *(void *)(v18 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
      {
        uint64_t v20 = sub_10003B754(&qword_100791C80);
        memcpy(v36, v17, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        uint64_t v21 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v36, v17, v21);
        *(void *)&v36[*(int *)(v18 + 20)] = *(void *)&v17[*(int *)(v18 + 20)];
        (*(void (**)(void))(v19 + 56))();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      uint64_t v7 = v35;
    }
    uint64_t v22 = v9[6];
    uint64_t v23 = &a1[v22];
    long long v24 = &a2[v22];
    uint64_t v25 = type metadata accessor for TTRTemplatePublicLinkData();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      uint64_t v27 = sub_10003B754(&qword_10079BAB0);
      memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v37 = *(void *)(v28 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v24, 1, v28))
      {
        uint64_t v29 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v23, v24, *(void *)(*(void *)(v29 - 8) + 64));
      }
      else
      {
        uint64_t v30 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v23, v24, v30);
        v23[*(int *)(v28 + 20)] = v24[*(int *)(v28 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v23, 0, 1, v28);
      }
      *(void *)&v23[*(int *)(v25 + 20)] = *(void *)&v24[*(int *)(v25 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    uint64_t v31 = v9[7];
    uint64_t v32 = &a1[v31];
    uint64_t v33 = &a2[v31];
    *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
    v32[16] = v33[16];
    a1[v9[8]] = a2[v9[8]];
    a1[v9[9]] = a2[v9[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    a3 = v38;
  }
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

unsigned char *sub_10063CA94(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10003B6F8((uint64_t)a1, &qword_100787468);
      goto LABEL_7;
    }
    uint64_t v98 = a3;
    *a1 = *a2;
    uint64_t v94 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v19 = *(int *)(v94 + 20);
    uint64_t v20 = &a1[v19];
    uint64_t v21 = &a2[v19];
    uint64_t v22 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v23 = *(void *)(v22 - 8);
    long long v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
    int v25 = v24(v20, 1, v22);
    int v26 = v24(v21, 1, v22);
    if (v25)
    {
      if (!v26)
      {
        *uint64_t v20 = *v21;
        *(_WORD *)(v20 + 1) = *(_WORD *)(v21 + 1);
        uint64_t v27 = *(int *)(v22 + 28);
        __dst = &v20[v27];
        uint64_t v28 = &v21[v27];
        uint64_t v29 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v30 = *(void *)(v29 - 8);
        uint64_t v31 = v94;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          uint64_t v32 = sub_10003B754(&qword_100791C80);
          memcpy(__dst, v28, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          uint64_t v60 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 32))(__dst, v28, v60);
          *(void *)&__dst[*(int *)(v29 + 20)] = *(void *)&v28[*(int *)(v29 + 20)];
          (*(void (**)(void))(v30 + 56))();
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_34:
        uint64_t v62 = *(int *)(v31 + 24);
        int v63 = &a1[v62];
        int v64 = &a2[v62];
        uint64_t v65 = type metadata accessor for TTRTemplatePublicLinkData();
        uint64_t v66 = *(void *)(v65 - 8);
        Swift::String v67 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 48);
        int v68 = v67(v63, 1, v65);
        int v69 = v67(v64, 1, v65);
        if (v68)
        {
          if (!v69)
          {
            uint64_t v70 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
            uint64_t v71 = *(void *)(v70 - 8);
            unsigned int v72 = (int *)v94;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v64, 1, v70))
            {
              uint64_t v73 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
              memcpy(v63, v64, *(void *)(*(void *)(v73 - 8) + 64));
            }
            else
            {
              uint64_t v80 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v80 - 8) + 32))(v63, v64, v80);
              v63[*(int *)(v70 + 20)] = v64[*(int *)(v70 + 20)];
              (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(v63, 0, 1, v70);
            }
            a3 = v98;
            *(void *)&v63[*(int *)(v65 + 20)] = *(void *)&v64[*(int *)(v65 + 20)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v66 + 56))(v63, 0, 1, v65);
LABEL_50:
            uint64_t v82 = v72[7];
            uint64_t v83 = (uint64_t)&a1[v82];
            uint64_t v84 = &a2[v82];
            if (*(void *)&a1[v82 + 8] != 1)
            {
              uint64_t v85 = *((void *)v84 + 1);
              if (v85 != 1)
              {
                *(void *)uint64_t v83 = *(void *)v84;
                *(void *)(v83 + 8) = v85;
                swift_bridgeObjectRelease();
                goto LABEL_55;
              }
              sub_10063C510(v83);
            }
            *(_OWORD *)uint64_t v83 = *(_OWORD *)v84;
LABEL_55:
            *(unsigned char *)(v83 + 16) = v84[16];
            a1[v72[8]] = a2[v72[8]];
            a1[v72[9]] = a2[v72[9]];
            a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
            goto LABEL_56;
          }
LABEL_40:
          uint64_t v74 = sub_10003B754(&qword_10079BAB0);
          memcpy(v63, v64, *(void *)(*(void *)(v74 - 8) + 64));
          unsigned int v72 = (int *)v94;
          a3 = v98;
          goto LABEL_50;
        }
        if (v69)
        {
          sub_10063C4B0((uint64_t)v63, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
          goto LABEL_40;
        }
        uint64_t v75 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        __dsta = *(void **)(v75 - 8);
        unint64_t v76 = (uint64_t (*)(char *, uint64_t, uint64_t))__dsta[6];
        int v77 = v76(v63, 1, v75);
        int v78 = v76(v64, 1, v75);
        if (v77)
        {
          if (!v78)
          {
            uint64_t v79 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v63, v64, v79);
            v63[*(int *)(v75 + 20)] = v64[*(int *)(v75 + 20)];
            ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v63, 0, 1, v75);
LABEL_49:
            unsigned int v72 = (int *)v94;
            a3 = v98;
            *(void *)&v63[*(int *)(v65 + 20)] = *(void *)&v64[*(int *)(v65 + 20)];
            goto LABEL_50;
          }
        }
        else
        {
          if (!v78)
          {
            uint64_t v90 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v90 - 8) + 40))(v63, v64, v90);
            v63[*(int *)(v75 + 20)] = v64[*(int *)(v75 + 20)];
            goto LABEL_49;
          }
          sub_10063C4B0((uint64_t)v63, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
        }
        uint64_t v81 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v63, v64, *(void *)(*(void *)(v81 - 8) + 64));
        goto LABEL_49;
      }
    }
    else
    {
      if (!v26)
      {
        *uint64_t v20 = *v21;
        v20[1] = v21[1];
        v20[2] = v21[2];
        uint64_t v51 = *(int *)(v22 + 28);
        uint64_t v52 = &v20[v51];
        uint64_t v53 = &v21[v51];
        uint64_t v54 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v55 = *(void *)(v54 - 8);
        long long v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
        int v57 = v56(v52, 1, v54);
        int v58 = v56(v53, 1, v54);
        if (v57)
        {
          uint64_t v31 = v94;
          if (!v58)
          {
            uint64_t v59 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(v52, v53, v59);
            *(void *)&v52[*(int *)(v54 + 20)] = *(void *)&v53[*(int *)(v54 + 20)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v31 = v94;
          if (!v58)
          {
            uint64_t v87 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v87 - 8) + 40))(v52, v53, v87);
            uint64_t v88 = *(int *)(v54 + 20);
            int v89 = *(void **)&v52[v88];
            *(void *)&v52[v88] = *(void *)&v53[v88];

            goto LABEL_34;
          }
          sub_10063C4B0((uint64_t)v52, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        }
        uint64_t v61 = sub_10003B754(&qword_100791C80);
        memcpy(v52, v53, *(void *)(*(void *)(v61 - 8) + 64));
        goto LABEL_34;
      }
      sub_10063C4B0((uint64_t)v20, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
    }
    uint64_t v37 = sub_10003B754(&qword_100787460);
    memcpy(v20, v21, *(void *)(*(void *)(v37 - 8) + 64));
    uint64_t v31 = v94;
    goto LABEL_34;
  }
  if (v10)
  {
LABEL_7:
    uint64_t v18 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
    memcpy(a1, a2, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_56;
  }
  *a1 = *a2;
  uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v97 = a3;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10003B754(&qword_100787460);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    *(_WORD *)(v13 + 1) = *(_WORD *)(v14 + 1);
    uint64_t v33 = *(int *)(v15 + 28);
    uint64_t v95 = &v13[v33];
    uint64_t v34 = &v14[v33];
    uint64_t v35 = type metadata accessor for TTRSharedWithYouHighlight();
    uint64_t v91 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v91 + 48))(v34, 1, v35))
    {
      uint64_t v36 = sub_10003B754(&qword_100791C80);
      memcpy(v95, v34, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      uint64_t v38 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v95, v34, v38);
      *(void *)&v95[*(int *)(v35 + 20)] = *(void *)&v34[*(int *)(v35 + 20)];
      (*(void (**)(void))(v91 + 56))();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v39 = v11[6];
  uint64_t v40 = &a1[v39];
  uint64_t v41 = &a2[v39];
  uint64_t v42 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v43 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
  {
    uint64_t v44 = sub_10003B754(&qword_10079BAB0);
    memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v96 = *(void *)(v45 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v41, 1, v45))
    {
      uint64_t v46 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
      memcpy(v40, v41, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v47 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v47 - 8) + 32))(v40, v41, v47);
      v40[*(int *)(v45 + 20)] = v41[*(int *)(v45 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v96 + 56))(v40, 0, 1, v45);
    }
    *(void *)&v40[*(int *)(v42 + 20)] = *(void *)&v41[*(int *)(v42 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
  }
  a3 = v97;
  uint64_t v48 = v11[7];
  uint64_t v49 = &a1[v48];
  uint64_t v50 = &a2[v48];
  *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
  v49[16] = v50[16];
  a1[v11[8]] = a2[v11[8]];
  a1[v11[9]] = a2[v11[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_56:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_10063D818(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10063D82C);
}

uint64_t sub_10063D82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return v10 - 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_10063D8E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10063D8FC);
}

uint64_t sub_10063D8FC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration(uint64_t a1)
{
  return sub_100030FD4(a1, qword_1007ACE30);
}

uint64_t sub_10063D9D8()
{
  uint64_t result = type metadata accessor for TTRIRemindersListNavigationBarViewModel.Configuration.Mode(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_10063DA6C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10003B754(&qword_100787468);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      unsigned int v10 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      uint64_t v11 = v10[5];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      uint64_t v15 = *(void *)(v14 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
      {
        uint64_t v16 = sub_10003B754(&qword_100787460);
        memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        *uint64_t v12 = *v13;
        *(_WORD *)(v12 + 1) = *(_WORD *)(v13 + 1);
        uint64_t v17 = *(int *)(v14 + 28);
        __dst = &v12[v17];
        uint64_t v43 = v8;
        uint64_t v18 = &v13[v17];
        uint64_t v19 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
        {
          uint64_t v21 = sub_10003B754(&qword_100791C80);
          memcpy(__dst, v18, *(void *)(*(void *)(v21 - 8) + 64));
        }
        else
        {
          uint64_t v22 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16))(__dst, v18, v22);
          uint64_t v23 = *(int *)(v19 + 20);
          long long v24 = *(void **)&v18[v23];
          *(void *)&__dst[v23] = v24;
          int v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56);
          id v26 = v24;
          v25(__dst, 0, 1, v19);
        }
        uint64_t v8 = v43;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      uint64_t v27 = v10[6];
      uint64_t v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      uint64_t v30 = type metadata accessor for TTRTemplatePublicLinkData();
      uint64_t v31 = *(void *)(v30 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
      {
        uint64_t v32 = sub_10003B754(&qword_10079BAB0);
        memcpy(v28, v29, *(void *)(*(void *)(v32 - 8) + 64));
      }
      else
      {
        uint64_t v44 = v8;
        uint64_t v33 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v34 = *(void *)(v33 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v29, 1, v33))
        {
          uint64_t v35 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v36 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v28, v29, v36);
          v28[*(int *)(v33 + 20)] = v29[*(int *)(v33 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v28, 0, 1, v33);
        }
        uint64_t v8 = v44;
        *(void *)&v28[*(int *)(v30 + 20)] = *(void *)&v29[*(int *)(v30 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      }
      uint64_t v37 = v10[7];
      uint64_t v38 = (char *)a1 + v37;
      uint64_t v39 = (char *)a2 + v37;
      uint64_t v40 = *((void *)v39 + 1);
      if (v40 == 1)
      {
        *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
        v38[16] = v39[16];
      }
      else
      {
        *(void *)uint64_t v38 = *(void *)v39;
        *((void *)v38 + 1) = v40;
        v38[16] = v39[16];
        swift_bridgeObjectRetain();
      }
      *((unsigned char *)a1 + v10[8]) = *((unsigned char *)a2 + v10[8]);
      *((unsigned char *)a1 + v10[9]) = *((unsigned char *)a2 + v10[9]);
      *((unsigned char *)a1 + *(int *)(v7 + 48)) = *((unsigned char *)a2 + *(int *)(v7 + 48));
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_10063DFF0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100787468);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v5 = a1 + v4[5];
    uint64_t v6 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
    {
      uint64_t v7 = v5 + *(int *)(v6 + 28);
      uint64_t v8 = type metadata accessor for TTRSharedWithYouHighlight();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8))
      {
        uint64_t v9 = type metadata accessor for URL();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
      }
    }
    uint64_t v10 = a1 + v4[6];
    uint64_t v11 = type metadata accessor for TTRTemplatePublicLinkData();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      uint64_t v12 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12))
      {
        uint64_t v13 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v10, v13);
      }
    }
    uint64_t result = *(void *)(a1 + v4[7] + 8);
    if (result != 1)
    {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

unsigned char *sub_10063E238(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v9 = v8[5];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10003B754(&qword_100787460);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      *uint64_t v10 = *v11;
      *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
      uint64_t v15 = *(int *)(v12 + 28);
      __dst = &v10[v15];
      uint64_t v41 = v7;
      uint64_t v16 = &v11[v15];
      uint64_t v17 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_100791C80);
        memcpy(__dst, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(__dst, v16, v20);
        uint64_t v21 = *(int *)(v17 + 20);
        uint64_t v22 = *(void **)&v16[v21];
        *(void *)&__dst[v21] = v22;
        uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
        id v24 = v22;
        v23(__dst, 0, 1, v17);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      uint64_t v7 = v41;
    }
    uint64_t v25 = v8[6];
    id v26 = &a1[v25];
    uint64_t v27 = &a2[v25];
    uint64_t v28 = type metadata accessor for TTRTemplatePublicLinkData();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10003B754(&qword_10079BAB0);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v42 = v7;
      uint64_t v31 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 1, v31))
      {
        uint64_t v33 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        uint64_t v34 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v26, v27, v34);
        v26[*(int *)(v31 + 20)] = v27[*(int *)(v31 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v31);
      }
      uint64_t v7 = v42;
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v35 = v8[7];
    uint64_t v36 = &a1[v35];
    uint64_t v37 = &a2[v35];
    uint64_t v38 = *((void *)v37 + 1);
    if (v38 == 1)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
    }
    else
    {
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      v36[16] = v37[16];
      swift_bridgeObjectRetain();
    }
    a1[v8[8]] = a2[v8[8]];
    a1[v8[9]] = a2[v8[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

unsigned char *sub_10063E780(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *a1 = *a2;
      uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
      uint64_t v12 = v11[5];
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
      uint64_t v16 = *(void *)(v15 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
      {
        uint64_t v17 = sub_10003B754(&qword_100787460);
        memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        *uint64_t v13 = *v14;
        v13[1] = v14[1];
        v13[2] = v14[2];
        uint64_t v32 = *(int *)(v15 + 28);
        unsigned int v112 = &v13[v32];
        uint64_t v33 = &v14[v32];
        uint64_t v34 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v108 = *(void *)(v34 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v33, 1, v34))
        {
          uint64_t v35 = sub_10003B754(&qword_100791C80);
          memcpy(v112, v33, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
          uint64_t v38 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v112, v33, v38);
          uint64_t v39 = *(int *)(v34 + 20);
          uint64_t v40 = *(void **)&v33[v39];
          *(void *)&v112[v39] = v40;
          uint64_t v109 = *(void (**)(char *, void, uint64_t, uint64_t))(v108 + 56);
          id v41 = v40;
          v109(v112, 0, 1, v34);
        }
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
      }
      uint64_t v42 = v11[6];
      uint64_t v43 = &a1[v42];
      uint64_t v44 = &a2[v42];
      uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData();
      uint64_t v46 = *(void *)(v45 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48))(v44, 1, v45))
      {
        uint64_t v47 = sub_10003B754(&qword_10079BAB0);
        memcpy(v43, v44, *(void *)(*(void *)(v47 - 8) + 64));
      }
      else
      {
        uint64_t v48 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        uint64_t v113 = *(void *)(v48 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48))(v44, 1, v48))
        {
          uint64_t v49 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
          memcpy(v43, v44, *(void *)(*(void *)(v49 - 8) + 64));
        }
        else
        {
          uint64_t v50 = type metadata accessor for Date();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v43, v44, v50);
          v43[*(int *)(v48 + 20)] = v44[*(int *)(v48 + 20)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v113 + 56))(v43, 0, 1, v48);
        }
        *(void *)&v43[*(int *)(v45 + 20)] = *(void *)&v44[*(int *)(v45 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v43, 0, 1, v45);
      }
      uint64_t v51 = v11[7];
      uint64_t v52 = &a1[v51];
      uint64_t v53 = &a2[v51];
      if (*((void *)v53 + 1) == 1)
      {
        long long v54 = *(_OWORD *)v53;
        v52[16] = v53[16];
        *(_OWORD *)uint64_t v52 = v54;
      }
      else
      {
        *(void *)uint64_t v52 = *(void *)v53;
        *((void *)v52 + 1) = *((void *)v53 + 1);
        v52[16] = v53[16];
        swift_bridgeObjectRetain();
      }
      a1[v11[8]] = a2[v11[8]];
      a1[v11[9]] = a2[v11[9]];
      a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v10)
  {
    sub_10003B6F8((uint64_t)a1, &qword_100787468);
    goto LABEL_7;
  }
  *a1 = *a2;
  uint64_t v111 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  uint64_t v18 = *(int *)(v111 + 20);
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  uint64_t v21 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      *uint64_t v19 = *v20;
      v19[1] = v20[1];
      v19[2] = v20[2];
      uint64_t v55 = *(int *)(v21 + 28);
      long long v56 = &v19[v55];
      int v57 = &v20[v55];
      uint64_t v58 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v59 = *(void *)(v58 - 8);
      uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 48);
      int v61 = v60(v56, 1, v58);
      int v62 = v60(v57, 1, v58);
      if (v61)
      {
        uint64_t v37 = v111;
        if (!v62)
        {
          uint64_t v63 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 16))(v56, v57, v63);
          uint64_t v64 = *(int *)(v58 + 20);
          uint64_t v65 = *(void **)&v57[v64];
          *(void *)&v56[v64] = v65;
          uint64_t v66 = *(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56);
          id v67 = v65;
          v66(v56, 0, 1, v58);
          goto LABEL_37;
        }
      }
      else
      {
        uint64_t v37 = v111;
        if (!v62)
        {
          uint64_t v102 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v102 - 8) + 24))(v56, v57, v102);
          uint64_t v103 = *(int *)(v58 + 20);
          int v104 = *(void **)&v57[v103];
          unsigned int v105 = *(void **)&v56[v103];
          *(void *)&v56[v103] = v104;
          id v106 = v104;

          goto LABEL_37;
        }
        sub_10063C4B0((uint64_t)v56, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      uint64_t v73 = sub_10003B754(&qword_100791C80);
      memcpy(v56, v57, *(void *)(*(void *)(v73 - 8) + 64));
      goto LABEL_37;
    }
    sub_10063C4B0((uint64_t)v19, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_16:
    uint64_t v36 = sub_10003B754(&qword_100787460);
    memcpy(v19, v20, *(void *)(*(void *)(v36 - 8) + 64));
    uint64_t v37 = v111;
    goto LABEL_37;
  }
  if (v25) {
    goto LABEL_16;
  }
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  v19[2] = v20[2];
  uint64_t v26 = *(int *)(v21 + 28);
  uint64_t v27 = &v19[v26];
  uint64_t v28 = &v20[v26];
  uint64_t v29 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v30 = *(void *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = sub_10003B754(&qword_100791C80);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    uint64_t v68 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16))(v27, v28, v68);
    uint64_t v69 = *(int *)(v29 + 20);
    uint64_t v70 = *(void **)&v28[v69];
    *(void *)&v27[v69] = v70;
    uint64_t v71 = *(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56);
    id v72 = v70;
    v71(v27, 0, 1, v29);
  }
  uint64_t v37 = v111;
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_37:
  uint64_t v74 = *(int *)(v37 + 24);
  uint64_t v75 = &a1[v74];
  unint64_t v76 = &a2[v74];
  uint64_t v77 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v78 + 48);
  int v80 = v79(v75, 1, v77);
  int v81 = v79(v76, 1, v77);
  if (!v80)
  {
    if (v81)
    {
      sub_10063C4B0((uint64_t)v75, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
      goto LABEL_43;
    }
    uint64_t v87 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v110 = *(void *)(v87 - 8);
    uint64_t v88 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v110 + 48);
    int v89 = v88(v75, 1, v87);
    int v90 = v88(v76, 1, v87);
    if (v89)
    {
      if (!v90)
      {
        uint64_t v91 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v91 - 8) + 16))(v75, v76, v91);
        v75[*(int *)(v87 + 20)] = v76[*(int *)(v87 + 20)];
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v110 + 56))(v75, 0, 1, v87);
LABEL_52:
        uint64_t v86 = (int *)v111;
        *(void *)&v75[*(int *)(v77 + 20)] = *(void *)&v76[*(int *)(v77 + 20)];
        goto LABEL_53;
      }
    }
    else
    {
      if (!v90)
      {
        uint64_t v107 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v107 - 8) + 24))(v75, v76, v107);
        v75[*(int *)(v87 + 20)] = v76[*(int *)(v87 + 20)];
        goto LABEL_52;
      }
      sub_10063C4B0((uint64_t)v75, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    }
    uint64_t v93 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v75, v76, *(void *)(*(void *)(v93 - 8) + 64));
    goto LABEL_52;
  }
  if (v81)
  {
LABEL_43:
    uint64_t v85 = sub_10003B754(&qword_10079BAB0);
    memcpy(v75, v76, *(void *)(*(void *)(v85 - 8) + 64));
    uint64_t v86 = (int *)v111;
    goto LABEL_53;
  }
  uint64_t v82 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  uint64_t v83 = *(void *)(v82 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v83 + 48))(v76, 1, v82))
  {
    uint64_t v84 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v75, v76, *(void *)(*(void *)(v84 - 8) + 64));
  }
  else
  {
    uint64_t v92 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v92 - 8) + 16))(v75, v76, v92);
    v75[*(int *)(v82 + 20)] = v76[*(int *)(v82 + 20)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v83 + 56))(v75, 0, 1, v82);
  }
  uint64_t v86 = (int *)v111;
  *(void *)&v75[*(int *)(v77 + 20)] = *(void *)&v76[*(int *)(v77 + 20)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v78 + 56))(v75, 0, 1, v77);
LABEL_53:
  uint64_t v94 = v86[7];
  uint64_t v95 = (uint64_t)&a1[v94];
  uint64_t v96 = &a2[v94];
  uint64_t v97 = *(void *)&a1[v94 + 8];
  uint64_t v98 = *(void *)&a2[v94 + 8];
  if (v97 == 1)
  {
    if (v98 == 1)
    {
      long long v99 = *(_OWORD *)v96;
      *(unsigned char *)(v95 + 16) = v96[16];
      *(_OWORD *)uint64_t v95 = v99;
    }
    else
    {
      *(void *)uint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *((void *)v96 + 1);
      *(unsigned char *)(v95 + 16) = v96[16];
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v98 == 1)
    {
      sub_10063C510(v95);
      char v100 = v96[16];
      *(_OWORD *)uint64_t v95 = *(_OWORD *)v96;
    }
    else
    {
      *(void *)uint64_t v95 = *(void *)v96;
      *(void *)(v95 + 8) = *((void *)v96 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v100 = v96[16];
    }
    *(unsigned char *)(v95 + 16) = v100;
  }
  a1[v86[8]] = a2[v86[8]];
  a1[v86[9]] = a2[v86[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  return a1;
}

unsigned char *sub_10063F584(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    uint64_t v8 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v9 = v8[5];
    int v10 = &a1[v9];
    uint64_t v11 = &a2[v9];
    uint64_t v12 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = sub_10003B754(&qword_100787460);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v34 = v7;
      *int v10 = *v11;
      *(_WORD *)(v10 + 1) = *(_WORD *)(v11 + 1);
      uint64_t v15 = *(int *)(v12 + 28);
      uint64_t v35 = &v10[v15];
      uint64_t v16 = &v11[v15];
      uint64_t v17 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_100791C80);
        memcpy(v35, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v35, v16, v20);
        *(void *)&v35[*(int *)(v17 + 20)] = *(void *)&v16[*(int *)(v17 + 20)];
        (*(void (**)(void))(v18 + 56))();
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      uint64_t v7 = v34;
    }
    uint64_t v21 = v8[6];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = type metadata accessor for TTRTemplatePublicLinkData();
    uint64_t v25 = *(void *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      uint64_t v26 = sub_10003B754(&qword_10079BAB0);
      memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    }
    else
    {
      uint64_t v27 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v36 = *(void *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v23, 1, v27))
      {
        uint64_t v28 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v22, v23, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        uint64_t v29 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v22, v23, v29);
        v22[*(int *)(v27 + 20)] = v23[*(int *)(v27 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v22, 0, 1, v27);
      }
      *(void *)&v22[*(int *)(v24 + 20)] = *(void *)&v23[*(int *)(v24 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    uint64_t v30 = v8[7];
    uint64_t v31 = &a1[v30];
    uint64_t v32 = &a2[v30];
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    v31[16] = v32[16];
    a1[v8[8]] = a2[v8[8]];
    a1[v8[9]] = a2[v8[9]];
    a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

unsigned char *sub_10063FA98(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_10003B6F8((uint64_t)a1, &qword_100787468);
      goto LABEL_7;
    }
    *a1 = *a2;
    uint64_t v93 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
    uint64_t v18 = *(int *)(v93 + 20);
    uint64_t v19 = &a1[v18];
    uint64_t v20 = &a2[v18];
    uint64_t v21 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
    int v24 = v23(v19, 1, v21);
    int v25 = v23(v20, 1, v21);
    if (v24)
    {
      if (!v25)
      {
        *uint64_t v19 = *v20;
        *(_WORD *)(v19 + 1) = *(_WORD *)(v20 + 1);
        uint64_t v26 = *(int *)(v21 + 28);
        __dst = &v19[v26];
        uint64_t v27 = &v20[v26];
        uint64_t v28 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v29 = *(void *)(v28 - 8);
        uint64_t v30 = v93;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
        {
          uint64_t v31 = sub_10003B754(&qword_100791C80);
          memcpy(__dst, v27, *(void *)(*(void *)(v31 - 8) + 64));
        }
        else
        {
          uint64_t v59 = type metadata accessor for URL();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v59 - 8) + 32))(__dst, v27, v59);
          *(void *)&__dst[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
          (*(void (**)(void))(v29 + 56))();
        }
        (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_34:
        uint64_t v61 = *(int *)(v30 + 24);
        int v62 = &a1[v61];
        uint64_t v63 = &a2[v61];
        uint64_t v64 = type metadata accessor for TTRTemplatePublicLinkData();
        uint64_t v65 = *(void *)(v64 - 8);
        uint64_t v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
        int v67 = v66(v62, 1, v64);
        int v68 = v66(v63, 1, v64);
        if (v67)
        {
          if (!v68)
          {
            uint64_t v69 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
            uint64_t v70 = *(void *)(v69 - 8);
            uint64_t v71 = (int *)v93;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v63, 1, v69))
            {
              uint64_t v72 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
              memcpy(v62, v63, *(void *)(*(void *)(v72 - 8) + 64));
            }
            else
            {
              uint64_t v79 = type metadata accessor for Date();
              (*(void (**)(char *, char *, uint64_t))(*(void *)(v79 - 8) + 32))(v62, v63, v79);
              v62[*(int *)(v69 + 20)] = v63[*(int *)(v69 + 20)];
              (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v62, 0, 1, v69);
            }
            *(void *)&v62[*(int *)(v64 + 20)] = *(void *)&v63[*(int *)(v64 + 20)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
LABEL_50:
            uint64_t v81 = v71[7];
            uint64_t v82 = (uint64_t)&a1[v81];
            uint64_t v83 = &a2[v81];
            if (*(void *)&a1[v81 + 8] != 1)
            {
              uint64_t v84 = *((void *)v83 + 1);
              if (v84 != 1)
              {
                *(void *)uint64_t v82 = *(void *)v83;
                *(void *)(v82 + 8) = v84;
                swift_bridgeObjectRelease();
                goto LABEL_55;
              }
              sub_10063C510(v82);
            }
            *(_OWORD *)uint64_t v82 = *(_OWORD *)v83;
LABEL_55:
            *(unsigned char *)(v82 + 16) = v83[16];
            a1[v71[8]] = a2[v71[8]];
            a1[v71[9]] = a2[v71[9]];
            a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
            return a1;
          }
LABEL_40:
          uint64_t v73 = sub_10003B754(&qword_10079BAB0);
          memcpy(v62, v63, *(void *)(*(void *)(v73 - 8) + 64));
          uint64_t v71 = (int *)v93;
          goto LABEL_50;
        }
        if (v68)
        {
          sub_10063C4B0((uint64_t)v62, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
          goto LABEL_40;
        }
        uint64_t v74 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
        __dsta = *(void **)(v74 - 8);
        uint64_t v75 = (uint64_t (*)(char *, uint64_t, uint64_t))__dsta[6];
        int v76 = v75(v62, 1, v74);
        int v77 = v75(v63, 1, v74);
        if (v76)
        {
          if (!v77)
          {
            uint64_t v78 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v78 - 8) + 32))(v62, v63, v78);
            v62[*(int *)(v74 + 20)] = v63[*(int *)(v74 + 20)];
            ((void (*)(char *, void, uint64_t, uint64_t))__dsta[7])(v62, 0, 1, v74);
LABEL_49:
            uint64_t v71 = (int *)v93;
            *(void *)&v62[*(int *)(v64 + 20)] = *(void *)&v63[*(int *)(v64 + 20)];
            goto LABEL_50;
          }
        }
        else
        {
          if (!v77)
          {
            uint64_t v89 = type metadata accessor for Date();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v89 - 8) + 40))(v62, v63, v89);
            v62[*(int *)(v74 + 20)] = v63[*(int *)(v74 + 20)];
            goto LABEL_49;
          }
          sub_10063C4B0((uint64_t)v62, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
        }
        uint64_t v80 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v62, v63, *(void *)(*(void *)(v80 - 8) + 64));
        goto LABEL_49;
      }
    }
    else
    {
      if (!v25)
      {
        *uint64_t v19 = *v20;
        v19[1] = v20[1];
        v19[2] = v20[2];
        uint64_t v50 = *(int *)(v21 + 28);
        uint64_t v51 = &v19[v50];
        uint64_t v52 = &v20[v50];
        uint64_t v53 = type metadata accessor for TTRSharedWithYouHighlight();
        uint64_t v54 = *(void *)(v53 - 8);
        uint64_t v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
        int v56 = v55(v51, 1, v53);
        int v57 = v55(v52, 1, v53);
        if (v56)
        {
          uint64_t v30 = v93;
          if (!v57)
          {
            uint64_t v58 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 32))(v51, v52, v58);
            *(void *)&v51[*(int *)(v53 + 20)] = *(void *)&v52[*(int *)(v53 + 20)];
            (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v30 = v93;
          if (!v57)
          {
            uint64_t v86 = type metadata accessor for URL();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v86 - 8) + 40))(v51, v52, v86);
            uint64_t v87 = *(int *)(v53 + 20);
            uint64_t v88 = *(void **)&v51[v87];
            *(void *)&v51[v87] = *(void *)&v52[v87];

            goto LABEL_34;
          }
          sub_10063C4B0((uint64_t)v51, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        }
        uint64_t v60 = sub_10003B754(&qword_100791C80);
        memcpy(v51, v52, *(void *)(*(void *)(v60 - 8) + 64));
        goto LABEL_34;
      }
      sub_10063C4B0((uint64_t)v19, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
    }
    uint64_t v36 = sub_10003B754(&qword_100787460);
    memcpy(v19, v20, *(void *)(*(void *)(v36 - 8) + 64));
    uint64_t v30 = v93;
    goto LABEL_34;
  }
  if (v10)
  {
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  *a1 = *a2;
  uint64_t v11 = (int *)type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(0);
  uint64_t v12 = v11[5];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    uint64_t v17 = sub_10003B754(&qword_100787460);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    *uint64_t v13 = *v14;
    *(_WORD *)(v13 + 1) = *(_WORD *)(v14 + 1);
    uint64_t v32 = *(int *)(v15 + 28);
    uint64_t v94 = &v13[v32];
    uint64_t v33 = &v14[v32];
    uint64_t v34 = type metadata accessor for TTRSharedWithYouHighlight();
    uint64_t v90 = *(void *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v90 + 48))(v33, 1, v34))
    {
      uint64_t v35 = sub_10003B754(&qword_100791C80);
      memcpy(v94, v33, *(void *)(*(void *)(v35 - 8) + 64));
    }
    else
    {
      uint64_t v37 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 32))(v94, v33, v37);
      *(void *)&v94[*(int *)(v34 + 20)] = *(void *)&v33[*(int *)(v34 + 20)];
      (*(void (**)(void))(v90 + 56))();
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v38 = v11[6];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    uint64_t v43 = sub_10003B754(&qword_10079BAB0);
    memcpy(v39, v40, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v44 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v95 = *(void *)(v44 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v40, 1, v44))
    {
      uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
      memcpy(v39, v40, *(void *)(*(void *)(v45 - 8) + 64));
    }
    else
    {
      uint64_t v46 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v46 - 8) + 32))(v39, v40, v46);
      v39[*(int *)(v44 + 20)] = v40[*(int *)(v44 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v95 + 56))(v39, 0, 1, v44);
    }
    *(void *)&v39[*(int *)(v41 + 20)] = *(void *)&v40[*(int *)(v41 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  uint64_t v47 = v11[7];
  uint64_t v48 = &a1[v47];
  uint64_t v49 = &a2[v47];
  *(_OWORD *)uint64_t v48 = *(_OWORD *)v49;
  v48[16] = v49[16];
  a1[v11[8]] = a2[v11[8]];
  a1[v11[9]] = a2[v11[9]];
  a1[*(int *)(v6 + 48)] = a2[*(int *)(v6 + 48)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1006407F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10064080C);
}

uint64_t sub_10064080C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100787468);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_10064087C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100640890);
}

uint64_t sub_100640890(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10003B754(&qword_100787468);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100640914(uint64_t a1, uint64_t a2)
{
  return sub_100644FE4(a1, a2, &qword_100787468, 1);
}

uint64_t sub_100640924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100645060(a1, a2, a3, &qword_100787468, 1);
}

uint64_t sub_100640934()
{
  uint64_t result = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void *sub_1006409C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_WORD *)(a1 + 1) = *(_WORD *)((char *)a2 + 1);
    uint64_t v5 = *(int *)(a3 + 28);
    uint64_t v6 = (char *)(a1 + v5);
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for TTRSharedWithYouHighlight();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = sub_10003B754(&qword_100791C80);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v6, v7, v12);
      uint64_t v13 = *(int *)(v8 + 20);
      uint64_t v14 = *(void **)&v7[v13];
      *(void *)&v6[v13] = v14;
      uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
      id v16 = v14;
      v15(v6, 0, 1, v8);
    }
  }
  return v3;
}

void sub_100640B60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 28);
  uint64_t v3 = type metadata accessor for TTRSharedWithYouHighlight();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3))
  {
    uint64_t v4 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v2, v4);
    uint64_t v5 = *(void **)(v2 + *(int *)(v3 + 20));
  }
}

uint64_t sub_100640C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10003B754(&qword_100791C80);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v5, v6, v10);
    uint64_t v11 = *(int *)(v7 + 20);
    uint64_t v12 = *(void **)&v6[v11];
    *(void *)&v5[v11] = v12;
    uint64_t v13 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
    id v14 = v12;
    v13(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_100640D6C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v19 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 24))(v5, v6, v19);
      uint64_t v20 = *(int *)(v7 + 20);
      uint64_t v21 = *(void **)&v6[v20];
      uint64_t v22 = *(void **)&v5[v20];
      *(void *)&v5[v20] = v21;
      id v23 = v21;

      return a1;
    }
    sub_10063C4B0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v17 = sub_10003B754(&qword_100791C80);
    memcpy(v5, v6, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v5, v6, v12);
  uint64_t v13 = *(int *)(v7 + 20);
  id v14 = *(void **)&v6[v13];
  *(void *)&v5[v13] = v14;
  uint64_t v15 = *(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56);
  id v16 = v14;
  v15(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_100640F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_WORD *)(a1 + 1) = *(_WORD *)(a2 + 1);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = sub_10003B754(&qword_100791C80);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v5, v6, v10);
    *(void *)&v5[*(int *)(v7 + 20)] = *(void *)&v6[*(int *)(v7 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

unsigned char *sub_1006410A0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = &a1[v4];
  uint64_t v6 = &a2[v4];
  uint64_t v7 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(v5, 1, v7);
  int v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v5, v6, v15);
      uint64_t v16 = *(int *)(v7 + 20);
      uint64_t v17 = *(void **)&v5[v16];
      *(void *)&v5[v16] = *(void *)&v6[v16];

      return a1;
    }
    sub_10063C4B0((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    uint64_t v13 = sub_10003B754(&qword_100791C80);
    memcpy(v5, v6, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  uint64_t v12 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v5, v6, v12);
  *(void *)&v5[*(int *)(v7 + 20)] = *(void *)&v6[*(int *)(v7 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_100641288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10064129C);
}

uint64_t sub_10064129C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *a1;
    BOOL v5 = v4 >= 2;
    int v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5) {
      return (v6 + 1);
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v10 = sub_10003B754(&qword_100791C80);
    int v11 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = &a1[*(int *)(a3 + 28)];
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100641350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100641364);
}

unsigned char *sub_100641364(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  BOOL v5 = result;
  if (a3 == 254)
  {
    *uint64_t result = a2 + 1;
  }
  else
  {
    uint64_t v7 = sub_10003B754(&qword_100791C80);
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 28)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_10064140C()
{
  sub_100643818(319, &qword_10079BA78, (void (*)(uint64_t))&type metadata accessor for TTRSharedWithYouHighlight);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void *sub_1006414C4(unsigned char *a1, void *a2, int *a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = sub_10003B754(&qword_100787460);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      *uint64_t v8 = *v9;
      *(_WORD *)(v8 + 1) = *(_WORD *)(v9 + 1);
      uint64_t v14 = *(int *)(v10 + 28);
      uint64_t v15 = &v8[v14];
      uint64_t v16 = &v9[v14];
      uint64_t v17 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v18 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
      {
        uint64_t v19 = sub_10003B754(&qword_100791C80);
        memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        uint64_t v20 = type metadata accessor for URL();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(v15, v16, v20);
        uint64_t v21 = *(int *)(v17 + 20);
        uint64_t v22 = *(void **)&v16[v21];
        *(void *)&v15[v21] = v22;
        id v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
        id v24 = v22;
        v23(v15, 0, 1, v17);
      }
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v25 = a3[6];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (char *)a2 + v25;
    uint64_t v28 = type metadata accessor for TTRTemplatePublicLinkData();
    uint64_t v29 = *(void *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      uint64_t v30 = sub_10003B754(&qword_10079BAB0);
      memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      uint64_t v31 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v32 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v27, 1, v31))
      {
        uint64_t v33 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v26, v27, *(void *)(*(void *)(v33 - 8) + 64));
      }
      else
      {
        uint64_t v34 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v26, v27, v34);
        v26[*(int *)(v31 + 20)] = v27[*(int *)(v31 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v26, 0, 1, v31);
      }
      *(void *)&v26[*(int *)(v28 + 20)] = *(void *)&v27[*(int *)(v28 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
    }
    uint64_t v35 = a3[7];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (char *)a2 + v35;
    uint64_t v38 = *((void *)v37 + 1);
    if (v38 == 1)
    {
      *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
      v36[16] = v37[16];
    }
    else
    {
      *(void *)uint64_t v36 = *(void *)v37;
      *((void *)v36 + 1) = v38;
      v36[16] = v37[16];
      swift_bridgeObjectRetain();
    }
    uint64_t v39 = a3[9];
    *((unsigned char *)v4 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *((unsigned char *)v4 + v39) = *((unsigned char *)a2 + v39);
  }
  return v4;
}

uint64_t sub_100641964(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    uint64_t v6 = v4 + *(int *)(v5 + 28);
    uint64_t v7 = type metadata accessor for TTRSharedWithYouHighlight();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
    {
      uint64_t v8 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
    }
  }
  uint64_t v9 = a1 + a2[6];
  uint64_t v10 = type metadata accessor for TTRTemplatePublicLinkData();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    uint64_t v11 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11))
    {
      uint64_t v12 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v9, v12);
    }
  }
  uint64_t result = *(void *)(a1 + a2[7] + 8);
  if (result != 1)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unsigned char *sub_100641B60(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10003B754(&qword_100787460);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_WORD *)(v7 + 1) = *(_WORD *)(v8 + 1);
    uint64_t v12 = *(int *)(v9 + 28);
    uint64_t v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = type metadata accessor for TTRSharedWithYouHighlight();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10003B754(&qword_100791C80);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v13, v14, v18);
      uint64_t v19 = *(int *)(v15 + 20);
      uint64_t v20 = *(void **)&v14[v19];
      *(void *)&v13[v19] = v20;
      uint64_t v21 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
      id v22 = v20;
      v21(v13, 0, 1, v15);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v23 = a3[6];
  id v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  uint64_t v26 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    uint64_t v28 = sub_10003B754(&qword_10079BAB0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    uint64_t v29 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v30 = *(void *)(v29 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v25, 1, v29))
    {
      uint64_t v31 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
      memcpy(v24, v25, *(void *)(*(void *)(v31 - 8) + 64));
    }
    else
    {
      uint64_t v32 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v24, v25, v32);
      v24[*(int *)(v29 + 20)] = v25[*(int *)(v29 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v24, 0, 1, v29);
    }
    *(void *)&v24[*(int *)(v26 + 20)] = *(void *)&v25[*(int *)(v26 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  uint64_t v33 = a3[7];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  uint64_t v36 = *((void *)v35 + 1);
  if (v36 == 1)
  {
    *(_OWORD *)uint64_t v34 = *(_OWORD *)v35;
    v34[16] = v35[16];
  }
  else
  {
    *(void *)uint64_t v34 = *(void *)v35;
    *((void *)v34 + 1) = v36;
    v34[16] = v35[16];
    swift_bridgeObjectRetain();
  }
  uint64_t v37 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v37] = a2[v37];
  return a1;
}

unsigned char *sub_100641FB0(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v23 = *(int *)(v9 + 28);
      uint64_t v24 = (uint64_t)&v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      int v29 = v28(v24, 1, v26);
      int v30 = v28((uint64_t)v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          uint64_t v31 = type metadata accessor for URL();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 16))(v24, v25, v31);
          uint64_t v32 = *(int *)(v26 + 20);
          uint64_t v33 = *(void **)&v25[v32];
          *(void *)(v24 + v32) = v33;
          uint64_t v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56);
          id v35 = v33;
          v34(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          uint64_t v68 = type metadata accessor for URL();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v68 - 8) + 24))(v24, v25, v68);
          uint64_t v69 = *(int *)(v26 + 20);
          uint64_t v70 = *(void **)&v25[v69];
          uint64_t v71 = *(void **)(v24 + v69);
          *(void *)(v24 + v69) = v70;
          id v72 = v70;

          goto LABEL_14;
        }
        sub_10063C4B0(v24, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      size_t v20 = *(void *)(*(void *)(sub_10003B754(&qword_100791C80) - 8) + 64);
      uint64_t v21 = (void *)v24;
      id v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_10063C4B0((uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_10003B754(&qword_100787460) - 8) + 64);
    uint64_t v21 = v7;
    id v22 = v8;
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t v14 = *(int *)(v9 + 28);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10003B754(&qword_100791C80);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v36 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v15, v16, v36);
    uint64_t v37 = *(int *)(v17 + 20);
    uint64_t v38 = *(void **)&v16[v37];
    *(void *)&v15[v37] = v38;
    uint64_t v39 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
    id v40 = v38;
    v39(v15, 0, 1, v17);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v41 = a3[6];
  uint64_t v42 = &a1[v41];
  uint64_t v43 = &a2[v41];
  uint64_t v44 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  int v47 = v46(v42, 1, v44);
  int v48 = v46(v43, 1, v44);
  if (v47)
  {
    if (!v48)
    {
      uint64_t v49 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      uint64_t v50 = *(void *)(v49 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v43, 1, v49))
      {
        uint64_t v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
        memcpy(v42, v43, *(void *)(*(void *)(v51 - 8) + 64));
      }
      else
      {
        uint64_t v58 = type metadata accessor for Date();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v42, v43, v58);
        v42[*(int *)(v49 + 20)] = v43[*(int *)(v49 + 20)];
        (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v42, 0, 1, v49);
      }
      *(void *)&v42[*(int *)(v44 + 20)] = *(void *)&v43[*(int *)(v44 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
      goto LABEL_33;
    }
    goto LABEL_20;
  }
  if (v48)
  {
    sub_10063C4B0((uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
LABEL_20:
    uint64_t v52 = sub_10003B754(&qword_10079BAB0);
    memcpy(v42, v43, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_33;
  }
  uint64_t v53 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  uint64_t v74 = *(void *)(v53 - 8);
  uint64_t v54 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v74 + 48);
  int v55 = v54(v42, 1, v53);
  int v56 = v54(v43, 1, v53);
  if (!v55)
  {
    if (!v56)
    {
      uint64_t v73 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v73 - 8) + 24))(v42, v43, v73);
      v42[*(int *)(v53 + 20)] = v43[*(int *)(v53 + 20)];
      goto LABEL_32;
    }
    sub_10063C4B0((uint64_t)v42, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    goto LABEL_31;
  }
  if (v56)
  {
LABEL_31:
    uint64_t v59 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v42, v43, *(void *)(*(void *)(v59 - 8) + 64));
    goto LABEL_32;
  }
  uint64_t v57 = type metadata accessor for Date();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v42, v43, v57);
  v42[*(int *)(v53 + 20)] = v43[*(int *)(v53 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v42, 0, 1, v53);
LABEL_32:
  *(void *)&v42[*(int *)(v44 + 20)] = *(void *)&v43[*(int *)(v44 + 20)];
LABEL_33:
  uint64_t v60 = a3[7];
  uint64_t v61 = (uint64_t)&a1[v60];
  int v62 = &a2[v60];
  uint64_t v63 = *(void *)&a1[v60 + 8];
  uint64_t v64 = *(void *)&a2[v60 + 8];
  if (v63 == 1)
  {
    if (v64 == 1)
    {
      long long v65 = *(_OWORD *)v62;
      *(unsigned char *)(v61 + 16) = v62[16];
      *(_OWORD *)uint64_t v61 = v65;
    }
    else
    {
      *(void *)uint64_t v61 = *(void *)v62;
      *(void *)(v61 + 8) = *((void *)v62 + 1);
      *(unsigned char *)(v61 + 16) = v62[16];
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v64 == 1)
    {
      sub_10063C510(v61);
      char v66 = v62[16];
      *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    }
    else
    {
      *(void *)uint64_t v61 = *(void *)v62;
      *(void *)(v61 + 8) = *((void *)v62 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      char v66 = v62[16];
    }
    *(unsigned char *)(v61 + 16) = v66;
  }
  a1[a3[8]] = a2[a3[8]];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

unsigned char *sub_100642848(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_10003B754(&qword_100787460);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    *uint64_t v7 = *v8;
    *(_WORD *)(v7 + 1) = *(_WORD *)(v8 + 1);
    uint64_t v12 = *(int *)(v9 + 28);
    int v13 = &v7[v12];
    uint64_t v14 = &v8[v12];
    uint64_t v15 = type metadata accessor for TTRSharedWithYouHighlight();
    uint64_t v16 = *(void *)(v15 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
    {
      uint64_t v17 = sub_10003B754(&qword_100791C80);
      memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      uint64_t v18 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v13, v14, v18);
      *(void *)&v13[*(int *)(v15 + 20)] = *(void *)&v14[*(int *)(v15 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
    }
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v19 = a3[6];
  size_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = sub_10003B754(&qword_10079BAB0);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    uint64_t v25 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v26 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v21, 1, v25))
    {
      uint64_t v27 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
      memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    }
    else
    {
      uint64_t v28 = type metadata accessor for Date();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v20, v21, v28);
      v20[*(int *)(v25 + 20)] = v21[*(int *)(v25 + 20)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v20, 0, 1, v25);
    }
    *(void *)&v20[*(int *)(v22 + 20)] = *(void *)&v21[*(int *)(v22 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v29 = a3[7];
  uint64_t v30 = a3[8];
  uint64_t v31 = &a1[v29];
  uint64_t v32 = &a2[v29];
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  v31[16] = v32[16];
  a1[v30] = a2[v30];
  a1[a3[9]] = a2[a3[9]];
  return a1;
}

unsigned char *sub_100642C70(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      v7[2] = v8[2];
      uint64_t v23 = *(int *)(v9 + 28);
      uint64_t v24 = (uint64_t)&v7[v23];
      uint64_t v25 = &v8[v23];
      uint64_t v26 = type metadata accessor for TTRSharedWithYouHighlight();
      uint64_t v27 = *(void *)(v26 - 8);
      uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48);
      int v29 = v28(v24, 1, v26);
      int v30 = v28((uint64_t)v25, 1, v26);
      if (v29)
      {
        if (!v30)
        {
          uint64_t v31 = type metadata accessor for URL();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v31 - 8) + 32))(v24, v25, v31);
          *(void *)(v24 + *(int *)(v26 + 20)) = *(void *)&v25[*(int *)(v26 + 20)];
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v30)
        {
          uint64_t v58 = type metadata accessor for URL();
          (*(void (**)(uint64_t, unsigned char *, uint64_t))(*(void *)(v58 - 8) + 40))(v24, v25, v58);
          uint64_t v59 = *(int *)(v26 + 20);
          uint64_t v60 = *(void **)(v24 + v59);
          *(void *)(v24 + v59) = *(void *)&v25[v59];

          goto LABEL_14;
        }
        sub_10063C4B0(v24, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
      }
      size_t v20 = *(void *)(*(void *)(sub_10003B754(&qword_100791C80) - 8) + 64);
      uint64_t v21 = (void *)v24;
      uint64_t v22 = v25;
LABEL_8:
      memcpy(v21, v22, v20);
      goto LABEL_14;
    }
    sub_10063C4B0((uint64_t)v7, type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
LABEL_7:
    size_t v20 = *(void *)(*(void *)(sub_10003B754(&qword_100787460) - 8) + 64);
    uint64_t v21 = v7;
    uint64_t v22 = v8;
    goto LABEL_8;
  }
  if (v13) {
    goto LABEL_7;
  }
  *uint64_t v7 = *v8;
  *(_WORD *)(v7 + 1) = *(_WORD *)(v8 + 1);
  uint64_t v14 = *(int *)(v9 + 28);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  uint64_t v17 = type metadata accessor for TTRSharedWithYouHighlight();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_10003B754(&qword_100791C80);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v32 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v15, v16, v32);
    *(void *)&v15[*(int *)(v17 + 20)] = *(void *)&v16[*(int *)(v17 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_14:
  uint64_t v33 = a3[6];
  uint64_t v34 = &a1[v33];
  id v35 = &a2[v33];
  uint64_t v36 = type metadata accessor for TTRTemplatePublicLinkData();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v37 + 48);
  int v39 = v38(v34, 1, v36);
  int v40 = v38(v35, 1, v36);
  if (!v39)
  {
    if (v40)
    {
      sub_10063C4B0((uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData);
      goto LABEL_20;
    }
    uint64_t v45 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
    uint64_t v62 = *(void *)(v45 - 8);
    uint64_t v46 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v62 + 48);
    int v47 = v46(v34, 1, v45);
    int v48 = v46(v35, 1, v45);
    if (v47)
    {
      if (!v48)
      {
        uint64_t v49 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v49 - 8) + 32))(v34, v35, v49);
        v34[*(int *)(v45 + 20)] = v35[*(int *)(v45 + 20)];
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v62 + 56))(v34, 0, 1, v45);
LABEL_32:
        *(void *)&v34[*(int *)(v36 + 20)] = *(void *)&v35[*(int *)(v36 + 20)];
        goto LABEL_33;
      }
    }
    else
    {
      if (!v48)
      {
        uint64_t v61 = type metadata accessor for Date();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v61 - 8) + 40))(v34, v35, v61);
        v34[*(int *)(v45 + 20)] = v35[*(int *)(v45 + 20)];
        goto LABEL_32;
      }
      sub_10063C4B0((uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription);
    }
    uint64_t v51 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v34, v35, *(void *)(*(void *)(v51 - 8) + 64));
    goto LABEL_32;
  }
  if (v40)
  {
LABEL_20:
    uint64_t v44 = sub_10003B754(&qword_10079BAB0);
    memcpy(v34, v35, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_33;
  }
  uint64_t v41 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
  uint64_t v42 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v42 + 48))(v35, 1, v41))
  {
    uint64_t v43 = type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
    memcpy(v34, v35, *(void *)(*(void *)(v43 - 8) + 64));
  }
  else
  {
    uint64_t v50 = type metadata accessor for Date();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v50 - 8) + 32))(v34, v35, v50);
    v34[*(int *)(v41 + 20)] = v35[*(int *)(v41 + 20)];
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v42 + 56))(v34, 0, 1, v41);
  }
  *(void *)&v34[*(int *)(v36 + 20)] = *(void *)&v35[*(int *)(v36 + 20)];
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
LABEL_33:
  uint64_t v52 = a3[7];
  uint64_t v53 = (uint64_t)&a1[v52];
  uint64_t v54 = &a2[v52];
  if (*(void *)&a1[v52 + 8] != 1)
  {
    uint64_t v55 = *((void *)v54 + 1);
    if (v55 != 1)
    {
      *(void *)uint64_t v53 = *(void *)v54;
      *(void *)(v53 + 8) = v55;
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    sub_10063C510(v53);
  }
  *(_OWORD *)uint64_t v53 = *(_OWORD *)v54;
LABEL_38:
  *(unsigned char *)(v53 + 16) = v54[16];
  uint64_t v56 = a3[9];
  a1[a3[8]] = a2[a3[8]];
  a1[v56] = a2[v56];
  return a1;
}

uint64_t sub_1006434A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1006434B4);
}

uint64_t sub_1006434B4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787460);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_10003B754(&qword_10079BAB0);
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[6];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[7] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 - 1) & ~(((int)v13 - 1) >> 31);
}

uint64_t sub_1006435D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1006435E8);
}

uint64_t sub_1006435E8(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_10003B754(&qword_100787460);
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_10003B754(&qword_10079BAB0);
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[7] + 8) = (a2 + 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[6];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

void sub_100643700()
{
  sub_100643818(319, &qword_1007ACFE8, (void (*)(uint64_t))type metadata accessor for TTRIRemindersListNavigationBarViewModel.GeneralItemsInfo.ListSharingInfo);
  if (v0 <= 0x3F)
  {
    sub_100643818(319, (unint64_t *)&unk_1007ACFF0, (void (*)(uint64_t))&type metadata accessor for TTRTemplatePublicLinkData);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_100643818(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_10064386C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  int v2 = *a1;
  char v3 = v2 == 2;
  int v4 = *a2;
  if (v4 != 2) {
    char v3 = 0;
  }
  if (v2 != 2 && v4 != 2) {
    char v3 = ((v2 & 1) == 0) ^ v4;
  }
  return v3 & 1;
}

uint64_t sub_1006438A4(unsigned __int16 *a1, unsigned __int16 *a2)
{
  return sub_100643F2C(*a1 | ((unint64_t)*(unsigned int *)(a1 + 1) << 16), *a2 | ((unint64_t)*(unsigned int *)(a2 + 1) << 16));
}

uint64_t sub_1006438C0(uint64_t a1, uint64_t a2)
{
  return sub_1006440B0(*(void *)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void **)(a2 + 8), *(unsigned char *)(a2 + 16));
}

void sub_1006438DC(void *a1@<X8>)
{
  *a1 = &off_100734B90;
}

uint64_t sub_1006438F0(uint64_t *a1, uint64_t *a2)
{
  return sub_100643EB8(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_100643904(__int16 *a1, _WORD *a2)
{
  __int16 v2 = *a1;
  int v3 = *a1;
  uint64_t result = *a2 == 2 && v3 == 2;
  if (v3 != 2 && *a2 != 2) {
    return (((v2 & 1) == 0) ^ (unsigned __int16)*a2) & (((v2 & 0x100) == 0) ^ ((unsigned __int16)(*a2 & 0x100) >> 8));
  }
  return result;
}

uint64_t sub_100643954(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_100643A58((uint64_t)v5, (uint64_t)v7) & 1;
}

unint64_t sub_1006439A4()
{
  unint64_t result = qword_1007AD030;
  if (!qword_1007AD030)
  {
    sub_100039710(&qword_1007AD038);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD030);
  }
  return result;
}

unint64_t sub_100643A04()
{
  unint64_t result = qword_1007AD040;
  if (!qword_1007AD040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD040);
  }
  return result;
}

uint64_t sub_100643A58(uint64_t a1, uint64_t a2)
{
  BOOL v4 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v5 = 0x736E6D756C6F63;
  }
  else {
    uint64_t v5 = 1953720684;
  }
  if (v4) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE700000000000000;
  }
  if (*(unsigned char *)a2) {
    uint64_t v7 = 0x736E6D756C6F63;
  }
  else {
    uint64_t v7 = 1953720684;
  }
  if (*(unsigned char *)a2) {
    unint64_t v8 = 0xE700000000000000;
  }
  else {
    unint64_t v8 = 0xE400000000000000;
  }
  if (v5 == v7 && v6 == v8)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  if (!sub_1000B9214(*(void *)(a1 + 8), *(void *)(a2 + 8))
    || (sub_1000B92C0(*(void *)(a1 + 16), *(void *)(a2 + 16)) & 1) == 0
    || (sub_1000B9784(*(void *)(a1 + 24), *(void *)(a2 + 24)) & 1) == 0)
  {
    return 0;
  }
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(void *)(a2 + 32);

  return sub_1000B9848(v11, v12);
}

uint64_t sub_100643B70(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRSharedWithYouHighlight();
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_1007894E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v12[*(int *)(v13 + 56)];
  sub_1006442EC(a1, (uint64_t)v12);
  sub_1006442EC(a2, v14);
  uint64_t v15 = sub_10003B754(&qword_100787470);
  uint64_t v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48);
  switch(v16((uint64_t)v12, 5, v15))
  {
    case 1u:
      if (v16(v14, 5, v15) != 1) {
        goto LABEL_13;
      }
      goto LABEL_5;
    case 2u:
      if (v16(v14, 5, v15) != 2) {
        goto LABEL_13;
      }
      goto LABEL_5;
    case 3u:
      if (v16(v14, 5, v15) != 3) {
        goto LABEL_13;
      }
      goto LABEL_5;
    case 4u:
      if (v16(v14, 5, v15) != 4) {
        goto LABEL_13;
      }
      goto LABEL_5;
    case 5u:
      if (v16(v14, 5, v15) != 5) {
        goto LABEL_13;
      }
LABEL_5:
      sub_10063C4B0((uint64_t)v12, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
      char v17 = 1;
      break;
    default:
      sub_1006442EC((uint64_t)v12, (uint64_t)v9);
      if (v16(v14, 5, v15))
      {
        sub_10063C4B0((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
LABEL_13:
        sub_10003B6F8((uint64_t)v12, &qword_1007894E8);
        char v17 = 0;
      }
      else
      {
        sub_1000A734C(v14, (uint64_t)v6);
        char v17 = static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)();
        sub_10063C4B0((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        sub_10063C4B0((uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for TTRSharedWithYouHighlight);
        sub_10063C4B0((uint64_t)v12, type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem);
      }
      break;
  }
  return v17 & 1;
}

uint64_t sub_100643EB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 == 1)
  {
    if (a4 == 1) {
      return 1;
    }
  }
  else if (a4 != 1)
  {
    if (a2)
    {
      if (a4 && (a1 == a3 && a2 == a4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)) {
        return 1;
      }
    }
    else
    {
      if (!a4) {
        return 1;
      }
      sub_10006566C(a1, 0);
    }
  }
  return 0;
}

uint64_t sub_100643F2C(uint64_t a1, unint64_t a2)
{
  if (a1 == 2)
  {
    if (a2 != 2) {
      return 0;
    }
  }
  else if (a2 == 2 || ((((a1 & 1) == 0) ^ a2) & 1) == 0)
  {
    return 0;
  }
  if ((a1 & 0xFF00) == 0x200)
  {
    if (BYTE1(a2) != 2) {
      return 0;
    }
  }
  else if (BYTE1(a2) == 2 || ((a1 & 0x100) == 0) == ((a2 >> 8) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000) == 0x20000)
  {
    if (BYTE2(a2) != 2) {
      return 0;
    }
  }
  else if (BYTE2(a2) == 2 || ((a1 & 0x10000) == 0) == ((a2 >> 16) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF000000) == 0x2000000)
  {
    if (BYTE3(a2) != 2) {
      return 0;
    }
  }
  else if (BYTE3(a2) == 2 || ((a1 & 0x1000000) == 0) == ((a2 >> 24) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF00000000) == 0x200000000)
  {
    if (BYTE4(a2) != 2) {
      return 0;
    }
  }
  else if (BYTE4(a2) == 2 || ((a1 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(a2) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000000000) == 0x20000000000)
  {
    if (BYTE5(a2) == 2) {
      return 1;
    }
  }
  else if (BYTE5(a2) != 2 && ((a1 & 0x10000000000) == 0) != ((a2 >> 40) & 1))
  {
    return 1;
  }
  return 0;
}

uint64_t sub_1006440B0(unint64_t a1, void *a2, char a3, unint64_t a4, void *a5, char a6)
{
  if ((a3 & 0x80) == 0)
  {
    if ((a6 & 0x80) == 0)
    {
      sub_1000652A0((id)a1, a2, a3);
      sub_1000652A0((id)a4, a5, a6);
      char v12 = sub_1005B1404((void *)a1, a2, a3, (void *)a4, a5, a6);
      sub_100065314((void *)a4, a5, a6);
      sub_100065314((void *)a1, a2, a3);
      return v12 & 1;
    }
    return 0;
  }
  if ((a6 & 0x80) == 0) {
    return 0;
  }
  if (a1 == 2)
  {
    if (a4 != 2) {
      return 0;
    }
  }
  else if (a4 == 2 || ((((a1 & 1) == 0) ^ a4) & 1) == 0)
  {
    return 0;
  }
  if ((a1 & 0xFF00) == 0x200)
  {
    if (BYTE1(a4) != 2) {
      return 0;
    }
  }
  else if (BYTE1(a4) == 2 || ((a1 & 0x100) == 0) == ((a4 >> 8) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000) == 0x20000)
  {
    if (BYTE2(a4) != 2) {
      return 0;
    }
  }
  else if (BYTE2(a4) == 2 || ((a1 & 0x10000) == 0) == ((a4 >> 16) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF000000) == 0x2000000)
  {
    if (BYTE3(a4) != 2) {
      return 0;
    }
  }
  else if (BYTE3(a4) == 2 || ((a1 & 0x1000000) == 0) == ((a4 >> 24) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF00000000) == 0x200000000)
  {
    if (BYTE4(a4) != 2) {
      return 0;
    }
  }
  else if (BYTE4(a4) == 2 || ((a1 & (unint64_t)&_mh_execute_header) == 0) == (BYTE4(a4) & 1))
  {
    return 0;
  }
  if ((a1 & 0xFF0000000000) == 0x20000000000)
  {
    if (BYTE5(a4) != 2) {
      return 0;
    }
  }
  else if (BYTE5(a4) == 2 || ((a1 & 0x10000000000) == 0) == ((a4 >> 40) & 1))
  {
    return 0;
  }
  return 1;
}

uint64_t type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(uint64_t a1)
{
  return sub_100030FD4(a1, (uint64_t *)&unk_1007AD0B8);
}

uint64_t sub_1006442EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRIRemindersListNavigationBarViewModel.TrailingItem(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.LeadingItem(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 65282;
    if (a2 + 65282 <= 0xFFFEFFFF) {
      unsigned int v3 = 2;
    }
    else {
      unsigned int v3 = 4;
    }
    if (v2 < 0xFF0000) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x10000) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = *((unsigned __int8 *)a1 + 2);
        if (!*((unsigned char *)a1 + 2)) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      case 2:
        int v5 = a1[1];
        if (a1[1]) {
          return (*a1 | (v5 << 16)) - 65282;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x100644410);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 16)) - 65282;
      default:
        break;
    }
  }
  unsigned int v7 = *(unsigned __int8 *)a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.LeadingItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 65282;
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v4 = 2;
  }
  else {
    int v4 = 4;
  }
  if (v3 < 0xFF0000) {
    int v4 = 1;
  }
  if (v3 >= 0x10000) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 254;
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = v7;
        break;
      case 2:
        *(_WORD *)(result + 2) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1006444F8);
      case 4:
        *(_DWORD *)(result + 2) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *(unsigned char *)unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

_WORD *sub_100644520(_WORD *result, unsigned int a2)
{
  if (a2 > 0xFE)
  {
    *unint64_t result = a2 - 255;
  }
  else if (a2)
  {
    *(unsigned char *)unint64_t result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.LeadingItem()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.LeadingItem;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.FixedTrailingItem;
}

uint64_t *sub_10064461C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_10003B754(&qword_100787470);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 5, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight() + 20);
      char v12 = *(void **)((char *)a2 + v11);
      *(uint64_t *)((char *)a1 + v11) = (uint64_t)v12;
      uint64_t v13 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56);
      id v14 = v12;
      v13(a1, 0, 5, v7);
    }
  }
  return a1;
}

void sub_1006447A0(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_100787470);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 5, v2))
  {
    uint64_t v3 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
    int v4 = *(void **)(a1 + *(int *)(type metadata accessor for TTRSharedWithYouHighlight() + 20));
  }
}

char *sub_100644868(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787470);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
    uint64_t v9 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight() + 20);
    uint64_t v10 = *(void **)&a2[v9];
    *(void *)&a1[v9] = v10;
    uint64_t v11 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
    id v12 = v10;
    v11(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_1006449B0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787470);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v17 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(a1, a2, v17);
      uint64_t v18 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight() + 20);
      uint64_t v19 = *(void **)&a2[v18];
      size_t v20 = *(void **)&a1[v18];
      *(void *)&a1[v18] = v19;
      id v21 = v19;

      return a1;
    }
    sub_10003B6F8((uint64_t)a1, &qword_100787470);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  uint64_t v12 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight() + 20);
  uint64_t v13 = *(void **)&a2[v12];
  *(void *)&a1[v12] = v13;
  id v14 = *(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56);
  id v15 = v13;
  v14(a1, 0, 5, v6);
  return a1;
}

char *sub_100644B94(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787470);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 5, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
    uint64_t v9 = type metadata accessor for TTRSharedWithYouHighlight();
    *(void *)&a1[*(int *)(v9 + 20)] = *(void *)&a2[*(int *)(v9 + 20)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  }
  return a1;
}

char *sub_100644CD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_10003B754(&qword_100787470);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 5, v6);
  int v10 = v8(a2, 5, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v14 = type metadata accessor for URL();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(a1, a2, v14);
      uint64_t v15 = *(int *)(type metadata accessor for TTRSharedWithYouHighlight() + 20);
      uint64_t v16 = *(void **)&a1[v15];
      *(void *)&a1[v15] = *(void *)&a2[v15];

      return a1;
    }
    sub_10003B6F8((uint64_t)a1, &qword_100787470);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  uint64_t v12 = type metadata accessor for TTRSharedWithYouHighlight();
  *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 5, v6);
  return a1;
}

uint64_t sub_100644EB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100644EC8);
}

uint64_t sub_100644EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_100787470);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 6) {
    return v5 - 5;
  }
  else {
    return 0;
  }
}

uint64_t sub_100644F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100644F4C);
}

uint64_t sub_100644F4C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 5);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_10003B754(&qword_100787470);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_100644FD4(uint64_t a1, uint64_t a2)
{
  return sub_100644FE4(a1, a2, &qword_100787470, 5);
}

uint64_t sub_100644FE4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v6 = sub_10003B754(a3);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a4, v6);
}

uint64_t sub_100645050(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100645060(a1, a2, a3, &qword_100787470, 5);
}

uint64_t sub_100645060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v8 = sub_10003B754(a4);
  int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);

  return v9(a1, a2, a5, v8);
}

uint64_t sub_1006450DC()
{
  uint64_t result = type metadata accessor for TTRSharedWithYouHighlight();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && a1[6]) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *a1;
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_WORD *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 6) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 6) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE)
  {
    unsigned int v2 = a2 + 2;
    if (a2 + 2 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 2;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1006452C4);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 2;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 2;
  unsigned int v9 = (v7 + 2147483646) & 0x7FFFFFFF;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 2;
  if (a3 + 2 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v7 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x1006453ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState()
{
  return &type metadata for TTRIRemindersListNavigationBarViewModel.ReminderPropertyEditingItemsInfo.ItemState;
}

Swift::Int sub_1006453E8()
{
  Hasher.init(_seed:)();
  sub_1001DC898(v0, (uint64_t)v5);
  if (v7)
  {
    v3[0] = v5[0];
    v3[1] = v5[1];
    uint64_t v4 = v6;
    Hasher._combine(_:)(1uLL);
    AnyHashable.hash(into:)();
    sub_100055AE8((uint64_t)v3);
  }
  else
  {
    Swift::UInt v1 = LOBYTE(v5[0]);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void sub_100645488(void *a1@<X8>)
{
  *a1 = &off_100735158;
}

void sub_10064549C()
{
  sub_1001DC898(v0, (uint64_t)v4);
  if (v6)
  {
    v2[0] = v4[0];
    v2[1] = v4[1];
    uint64_t v3 = v5;
    Hasher._combine(_:)(1uLL);
    AnyHashable.hash(into:)();
    sub_100055AE8((uint64_t)v2);
  }
  else
  {
    Swift::UInt v1 = LOBYTE(v4[0]);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
}

Swift::Int sub_10064552C()
{
  Hasher.init(_seed:)();
  sub_1001DC898(v0, (uint64_t)v5);
  if (v7)
  {
    v3[0] = v5[0];
    v3[1] = v5[1];
    uint64_t v4 = v6;
    Hasher._combine(_:)(1uLL);
    AnyHashable.hash(into:)();
    sub_100055AE8((uint64_t)v3);
  }
  else
  {
    Swift::UInt v1 = LOBYTE(v5[0]);
    Hasher._combine(_:)(0);
    Hasher._combine(_:)(v1);
  }
  return Hasher._finalize()();
}

void *sub_1006455CC()
{
  uint64_t result = sub_1006455EC();
  qword_1007BBDB0 = (uint64_t)result;
  return result;
}

void *sub_1006455EC()
{
  uint64_t v0 = 7;
  BOOL v8 = _swiftEmptyArrayStorage;
  sub_1004D37A0(0, 7, 0);
  Swift::UInt v1 = &byte_100735178;
  unsigned int v2 = _swiftEmptyArrayStorage;
  do
  {
    char v3 = *v1++;
    v7[0] = v3;
    v7[40] = 0;
    BOOL v8 = v2;
    unint64_t v5 = v2[2];
    unint64_t v4 = v2[3];
    if (v5 >= v4 >> 1)
    {
      sub_1004D37A0(v4 > 1, v5 + 1, 1);
      unsigned int v2 = v8;
    }
    _OWORD v2[2] = v5 + 1;
    sub_1002F0FE0((uint64_t)v7, (uint64_t)&v2[6 * v5 + 4]);
    --v0;
  }
  while (v0);
  return v2;
}

uint64_t sub_1006456C0@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1006456C8(uint64_t a1, uint64_t a2)
{
  sub_1001DC898(a1, (uint64_t)v8);
  sub_1001DC898(a2, (uint64_t)v9);
  if ((v8[40] & 1) == 0)
  {
    sub_1001DC898((uint64_t)v8, (uint64_t)v7);
    if ((v11 & 1) == 0)
    {
      char v3 = v7[0] == LOBYTE(v9[0]);
      goto LABEL_6;
    }
LABEL_8:
    sub_1006457A8((uint64_t)v8);
    char v3 = 0;
    return v3 & 1;
  }
  sub_1001DC898((uint64_t)v8, (uint64_t)v7);
  if (v11 != 1)
  {
    sub_100055AE8((uint64_t)v7);
    goto LABEL_8;
  }
  v5[0] = v9[0];
  v5[1] = v9[1];
  uint64_t v6 = v10;
  char v3 = static AnyHashable.== infix(_:_:)();
  sub_100055AE8((uint64_t)v5);
  sub_100055AE8((uint64_t)v7);
LABEL_6:
  sub_1002F103C((uint64_t)v8);
  return v3 & 1;
}

uint64_t sub_1006457A8(uint64_t a1)
{
  uint64_t v2 = sub_10003B754(&qword_1007AD0C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListActionMenuItems()
{
  return &type metadata for TTRIRemindersListActionMenuItems;
}

uint64_t destroy for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 40);
  if (v1 >= 2) {
    unsigned int v1 = *(_DWORD *)a1 + 2;
  }
  if (v1 == 1) {
    return sub_100038CD8(a1);
  }
  return a1;
}

uint64_t initializeWithCopy for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, uint64_t a2)
{
  unsigned int v3 = *(unsigned __int8 *)(a2 + 40);
  if (v3 >= 2) {
    unsigned int v3 = *(_DWORD *)a2 + 2;
  }
  if (v3 == 1)
  {
    long long v4 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 24) = v4;
    (**(void (***)(uint64_t))(v4 - 8))(a1);
    char v5 = 1;
  }
  else
  {
    char v5 = 0;
    *(unsigned char *)a1 = *(unsigned char *)a2;
  }
  *(unsigned char *)(a1 + 40) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      sub_100038CD8(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      uint64_t v6 = *(void *)(a2 + 24);
      *(void *)(a1 + 24) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      *(unsigned char *)a1 = *(unsigned char *)a2;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 40);
    if (v4 >= 2) {
      unsigned int v4 = *(_DWORD *)a1 + 2;
    }
    if (v4 == 1) {
      sub_100038CD8(a1);
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 40);
    if (v5 >= 2) {
      unsigned int v5 = *(_DWORD *)a2 + 2;
    }
    if (v5 == 1)
    {
      long long v6 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v6;
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
      *(unsigned char *)a1 = *(unsigned char *)a2;
    }
    *(unsigned char *)(a1 + 40) = v7;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIRemindersListActionMenuItems.MenuItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 >= 2) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TTRIRemindersListActionMenuItems.MenuItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 25) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100645AB4(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 40);
  if (result >= 2) {
    return (*(_DWORD *)a1 + 2);
  }
  return result;
}

uint64_t sub_100645AD0(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(void *)(result + 32) = 0;
    *(_OWORD *)uint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)uint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 40) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListActionMenuItems.MenuItem()
{
  return &type metadata for TTRIRemindersListActionMenuItems.MenuItem;
}

unsigned char *storeEnumTagSinglePayload for TTRIRemindersListActionMenuItems.StandardMenuItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100645BD8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIRemindersListActionMenuItems.StandardMenuItem()
{
  return &type metadata for TTRIRemindersListActionMenuItems.StandardMenuItem;
}

unint64_t sub_100645C14()
{
  unint64_t result = qword_1007AD0D0;
  if (!qword_1007AD0D0)
  {
    sub_100039710(&qword_1007AD0D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD0D0);
  }
  return result;
}

unint64_t sub_100645C74()
{
  unint64_t result = qword_1007AD0E0;
  if (!qword_1007AD0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD0E0);
  }
  return result;
}

uint64_t sub_100645CC8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100018C30(v0, qword_1007AD0E8);
  uint64_t v1 = sub_100018BF8(v0, (uint64_t)qword_1007AD0E8);
  if (qword_100785500 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100018BF8(v0, (uint64_t)qword_1007BBAE0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100645D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 89) = a6;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = type metadata accessor for MainActor();
  *(void *)(v6 + 32) = static MainActor.shared.getter();
  *(void *)(v6 + 40) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 48) = v8;
  *(void *)(v6 + 56) = v7;
  return _swift_task_switch(sub_100645E3C, v8, v7);
}

uint64_t sub_100645E3C()
{
  char v1 = *(unsigned char *)(v0 + 89);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = static MainActor.shared.getter();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)(v4 + 16) = v2;
  *(unsigned char *)(v4 + 24) = 1;
  *(unsigned char *)(v4 + 25) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_100645F60;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 88, v3, &protocol witness table for MainActor, 0xD00000000000001DLL, 0x80000001006AB2F0, sub_10017F4E0, v4, &type metadata for Bool);
}

uint64_t sub_100645F60()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_1006460C0, v3, v2);
}

uint64_t sub_1006460C0()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100060304, v1, v0);
}

uint64_t sub_100646144()
{
  swift_unknownObjectWeakDestroy();
  swift_unknownObjectWeakDestroy();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for TTRITemplatesListRouter()
{
  return self;
}

unint64_t sub_1006461B0(Swift::String string)
{
  object = string._object;
  v2._countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100735180, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 7) {
    return 7;
  }
  else {
    return v3;
  }
}

uint64_t sub_1006461FC(uint64_t a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16)) {
    goto LABEL_9;
  }
  unint64_t v9 = sub_100009B88(0x656C746974, 0xE500000000000000);
  if ((v10 & 1) == 0 || !*(void *)(a1 + 16)) {
    goto LABEL_9;
  }
  uint64_t v11 = *(void *)(*(void *)(a1 + 56) + 16 * v9);
  swift_bridgeObjectRetain();
  unint64_t v12 = sub_100009B88(0x676E697274536469, 0xE800000000000000);
  if ((v13 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_9:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v14 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v12);
  uint64_t v16 = *v14;
  uint64_t v15 = (void *)v14[1];
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = v16;
  v23._object = v15;
  if (sub_1006461B0(v23) != 7)
  {
    swift_bridgeObjectRelease();
    return v11;
  }
  URL.init(string:)();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_bridgeObjectRelease();
    sub_1002527B4((uint64_t)v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  URL._bridgeToObjectiveC()(v18);
  size_t v20 = v19;
  id v21 = [self objectIDWithURL:v19];

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v21)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v11;
}

UIMenu sub_1006464BC()
{
  v0._countAndFlagsBits = 0xD00000000000002CLL;
  v0._object = (void *)0x80000001006C24B0;
  v1._countAndFlagsBits = 0x696D65522077654ELL;
  v1._object = (void *)0xEC0000007265646ELL;
  TTRLocalizedString(_:comment:)(v1, v0);
  sub_1000368FC(0, &qword_100788E60);
  swift_bridgeObjectRetain();
  uint64_t v2 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v3._countAndFlagsBits = 0xD000000000000028;
  v3._object = (void *)0x80000001006C24E0;
  v4._countAndFlagsBits = 0x7473694C2077654ELL;
  v4._object = (void *)0xE800000000000000;
  TTRLocalizedString(_:comment:)(v4, v3);
  swift_bridgeObjectRetain();
  uint64_t v5 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  uint64_t v6 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  uint64_t v7 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v8._countAndFlagsBits = 0xD000000000000026;
  v8._object = (void *)0x80000001006C2510;
  v9._countAndFlagsBits = 0x746E697250;
  v9._object = (void *)0xE500000000000000;
  uint64_t children = TTRLocalizedString(_:comment:)(v9, v8)._countAndFlagsBits;
  swift_bridgeObjectRetain();
  uint64_t v11 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  sub_1000368FC(0, &qword_1007894E0);
  v12._object = (void *)0x80000001006C2540;
  v13._countAndFlagsBits = 1701603654;
  v13._object = (void *)0xE400000000000000;
  v12._countAndFlagsBits = 0xD000000000000013;
  Swift::String v14 = TTRLocalizedString(_:comment:)(v13, v12);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100671100;
  *(void *)(v15 + 32) = v2;
  *(void *)(v15 + 40) = v5;
  *(void *)(v15 + 48) = v6;
  *(void *)(v15 + 56) = v7;
  *(void *)(v15 + 64) = v11;
  UIMenuElementSize preferredElementSize = v15;
  specialized Array._endMutation()();
  v18.value.super.Class isa = 0;
  v18.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v14, (Swift::String_optional)0, v18, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)children);
}

Class sub_1006467F0()
{
  v0._uint64_t countAndFlagsBits = 0xD000000000000030;
  v0._object = (void *)0x80000001006C2090;
  v1._uint64_t countAndFlagsBits = 0x6574656C6544;
  v1._object = (void *)0xE600000000000000;
  TTRLocalizedString(_:comment:)(v1, v0);
  sub_1000368FC(0, &qword_100788E60);
  UIKeyCommand.inputBackspace.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v81 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v2._uint64_t countAndFlagsBits = 0xD000000000000046;
  v2._object = (void *)0x80000001006C20D0;
  v3._uint64_t countAndFlagsBits = 0x7961646F54;
  v3._object = (void *)0xE500000000000000;
  TTRLocalizedString(_:comment:)(v3, v2);
  v4._uint64_t countAndFlagsBits = 0xD00000000000003ELL;
  v4._object = (void *)0x80000001006ABEC0;
  v5._uint64_t countAndFlagsBits = 0x65754420656B614DLL;
  v5._object = (void *)0xEE007961646F5420;
  TTRLocalizedString(_:comment:)(v5, v4);
  uint64_t v79 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v6._uint64_t countAndFlagsBits = 0xD000000000000049;
  v6._object = (void *)0x80000001006C2120;
  v7._uint64_t countAndFlagsBits = 0x776F72726F6D6F54;
  v7._object = (void *)0xE800000000000000;
  TTRLocalizedString(_:comment:)(v7, v6);
  v8._uint64_t countAndFlagsBits = 0xD000000000000011;
  v9._uint64_t countAndFlagsBits = 0xD000000000000041;
  v8._object = (void *)0x80000001006ABE50;
  v9._object = (void *)0x80000001006ABE70;
  TTRLocalizedString(_:comment:)(v8, v9);
  char v10 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v11._uint64_t countAndFlagsBits = 0x646E656B656557;
  v11._object = (void *)0xE700000000000000;
  v12._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
  v12._object = (void *)0x80000001006C2170;
  TTRLocalizedString(_:comment:)(v11, v12);
  v13._uint64_t countAndFlagsBits = 0xD000000000000015;
  v14._uint64_t countAndFlagsBits = 0xD000000000000045;
  v13._object = (void *)0x80000001006ABDE0;
  v14._object = (void *)0x80000001006ABE00;
  TTRLocalizedString(_:comment:)(v13, v14);
  uint64_t v15 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v16._uint64_t countAndFlagsBits = 0x656557207478654ELL;
  v16._object = (void *)0xE90000000000006BLL;
  v17._uint64_t countAndFlagsBits = 0xD00000000000004DLL;
  v17._object = (void *)0x80000001006C2170;
  TTRLocalizedString(_:comment:)(v16, v17);
  v18._uint64_t countAndFlagsBits = 0xD000000000000012;
  v19._uint64_t countAndFlagsBits = 0xD000000000000042;
  v18._object = (void *)0x80000001006ABD00;
  v19._object = (void *)0x80000001006ABD20;
  TTRLocalizedString(_:comment:)(v18, v19);
  size_t v20 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v21._uint64_t countAndFlagsBits = 0xD000000000000060;
  v22._object = (void *)0x80000001006C21C0;
  v21._object = (void *)0x80000001006C21E0;
  v22._uint64_t countAndFlagsBits = 0xD000000000000019;
  TTRLocalizedString(_:comment:)(v22, v21);
  v23._uint64_t countAndFlagsBits = 0xD000000000000058;
  v24._object = (void *)0x80000001006C2250;
  v23._object = (void *)0x80000001006C2270;
  v24._uint64_t countAndFlagsBits = 0xD000000000000019;
  uint64_t children = TTRLocalizedString(_:comment:)(v24, v23)._countAndFlagsBits;
  uint64_t v25 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  sub_1000368FC(0, &qword_1007894E0);
  v26._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v27._object = (void *)0x80000001006C22D0;
  v26._object = (void *)0x80000001006C22F0;
  v27._uint64_t countAndFlagsBits = 0xD000000000000010;
  Swift::String v28 = TTRLocalizedString(_:comment:)(v27, v26);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_100671100;
  *(void *)(v29 + 32) = v79;
  *(void *)(v29 + 40) = v10;
  *(void *)(v29 + 48) = v15;
  *(void *)(v29 + 56) = v20;
  *(void *)(v29 + 64) = v25;
  UIMenuElementSize preferredElementSize = v29;
  specialized Array._endMutation()();
  id v80 = v79;
  id v78 = v10;
  id v77 = v15;
  id v76 = v20;
  id v75 = v25;
  v85.value.super.Class isa = 0;
  v85.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v28, (Swift::String_optional)0, v85, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)children).super.super.isa;
  v30._uint64_t countAndFlagsBits = 0xD000000000000032;
  v31._object = (void *)0x80000001006AC930;
  v30._object = (void *)0x80000001006B6B00;
  v31._uint64_t countAndFlagsBits = 0xD000000000000011;
  TTRLocalizedString(_:comment:)(v31, v30);
  swift_bridgeObjectRetain();
  _ = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v32._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v32._object = (void *)0x80000001006C2310;
  v33._uint64_t countAndFlagsBits = 0x5220746E65646E49;
  v33._object = (void *)0xEF7265646E696D65;
  TTRLocalizedString(_:comment:)(v33, v32);
  swift_bridgeObjectRetain();
  uint64_t v71 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v34._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  v35._object = (void *)0x80000001006B69E0;
  v34._object = (void *)0x80000001006C2340;
  v35._uint64_t countAndFlagsBits = 0xD000000000000010;
  TTRLocalizedString(_:comment:)(v35, v34);
  swift_bridgeObjectRetain();
  uint64_t v69 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v36._uint64_t countAndFlagsBits = 0xD000000000000025;
  v36._object = (void *)0x80000001006B6980;
  v37._uint64_t countAndFlagsBits = 1734437958;
  v37._object = (void *)0xE400000000000000;
  TTRLocalizedString(_:comment:)(v37, v36);
  swift_bridgeObjectRetain();
  uint64_t v68 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v38._object = (void *)0x80000001006C2370;
  v39._uint64_t countAndFlagsBits = 0x67615420646441;
  v39._object = (void *)0xE700000000000000;
  v38._uint64_t countAndFlagsBits = 0xD000000000000037;
  TTRLocalizedString(_:comment:)(v39, v38);
  swift_bridgeObjectRetain();
  int v67 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v40._uint64_t countAndFlagsBits = 0xD000000000000024;
  v40._object = (void *)0x80000001006C23B0;
  v41._uint64_t countAndFlagsBits = 1684957510;
  v41._object = (void *)0xE400000000000000;
  TTRLocalizedString(_:comment:)(v41, v40);
  swift_bridgeObjectRetain();
  uint64_t v42 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v43._uint64_t countAndFlagsBits = 0xD00000000000003FLL;
  v43._object = (void *)0x80000001006C23E0;
  v44._uint64_t countAndFlagsBits = 0x6445207472617453;
  v44._object = (void *)0xED0000676E697469;
  TTRLocalizedString(_:comment:)(v44, v43);
  UIKeyCommand.inputReturn.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  v45._object = (void *)0x80000001006C2420;
  v46._uint64_t countAndFlagsBits = 0x6445207472617453;
  v46._object = (void *)0xED0000676E697469;
  v45._uint64_t countAndFlagsBits = 0xD000000000000037;
  TTRLocalizedString(_:comment:)(v46, v45);
  char v66 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v47._uint64_t countAndFlagsBits = 0xD00000000000002CLL;
  v47._object = (void *)0x80000001006C2460;
  v48._uint64_t countAndFlagsBits = 0x7469644520646E45;
  v48._object = (void *)0xEB00000000676E69;
  uint64_t countAndFlagsBits = TTRLocalizedString(_:comment:)(v48, v47)._countAndFlagsBits;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_bridgeObjectRetain();
  childrena._rawValue = (void *)countAndFlagsBits;
  long long v65 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v50._uint64_t countAndFlagsBits = 0xD000000000000013;
  v50._object = (void *)0x80000001006C2490;
  v51._uint64_t countAndFlagsBits = 1953064005;
  v51._object = (void *)0xE400000000000000;
  Swift::String v52 = TTRLocalizedString(_:comment:)(v51, v50);
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_10067FFD0;
  *(void *)(v53 + 32) = v81;
  *(void *)(v53 + 40) = isa;
  *(void *)(v53 + 48) = _;
  *(void *)(v53 + 56) = v71;
  *(void *)(v53 + 64) = v69;
  *(void *)(v53 + 72) = v68;
  *(void *)(v53 + 80) = v67;
  *(void *)(v53 + 88) = v42;
  *(void *)(v53 + 96) = v66;
  *(void *)(v53 + 104) = v65;
  UIMenuElementSize v84 = v53;
  specialized Array._endMutation()();
  id v82 = v81;
  __8 = isa;
  id _a = _;
  id v54 = v71;
  id v55 = v69;
  id v56 = v68;
  id v57 = v67;
  id v58 = v42;
  id v59 = v66;
  id v60 = v65;
  v86.value.super.Class isa = 0;
  v86.is_nil = 0;
  Class v61 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v52, (Swift::String_optional)0, v86, 0, 0xFFFFFFFFFFFFFFFFLL, v84, childrena).super.super.isa;

  return v61;
}

UIMenu sub_10064737C(uint64_t a1)
{
  uint64_t v55 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  id v54 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v65 = (unint64_t)_swiftEmptyArrayStorage;
  unint64_t v4 = *(void *)(a1 + 16);
  if (v4 >= 9) {
    unint64_t v4 = 9;
  }
  Class isa = (Class)v4;
  if (v4)
  {
    uint64_t v5 = sub_1000368FC(0, &qword_100788E60);
    id v59 = "showListAction:";
    uint64_t v60 = v5;
    uint64_t v53 = (void (**)(char *, uint64_t))(v2 + 8);
    swift_bridgeObjectRetain();
    Swift::String v6 = 0;
    uint64_t v52 = a1;
    Swift::String v7 = (char *)(a1 + 56);
    long long v58 = xmmword_10066C680;
    id v57 = (void *)0x80000001006C1EC0;
    long long v56 = xmmword_10066C6F0;
    do
    {
      uint64_t v8 = *((void *)v7 - 3);
      uint64_t v9 = *((void *)v7 - 2);
      char v10 = (void *)*((void *)v7 - 1);
      char v11 = *v7;
      Swift::String v6 = (objc_class *)((char *)v6 + 1);
      *(void *)&long long v63 = v6;
      swift_bridgeObjectRetain_n();
      sub_100096248(v10, v11);
      uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
      if (v11)
      {
        id v12 = v10;
        id v13 = [v12 urlRepresentation:v52];
        Swift::String v14 = v54;
        static URL._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v15 = URL.absoluteString.getter();
        unint64_t v17 = v16;
        sub_100096190(v10, 1);
        (*v53)(v14, v55);
      }
      else
      {
        unint64_t v17 = 0xE500000000000000;
        uint64_t v15 = 0x7961646F74;
        switch((char)v10)
        {
          case 1:
            uint64_t v15 = 0x656C756465686373;
            goto LABEL_14;
          case 2:
            unint64_t v17 = 0xE300000000000000;
            uint64_t v15 = 7105633;
            break;
          case 3:
            unint64_t v17 = 0xE700000000000000;
            uint64_t v15 = 0x64656767616C66;
            break;
          case 4:
            unint64_t v17 = 0xE800000000000000;
            uint64_t v15 = 0x64656E6769737361;
            break;
          case 5:
            unint64_t v17 = 0xEF737070416E4964;
            uint64_t v15 = 0x6E756F4669726973;
            break;
          case 6:
            uint64_t v15 = 0x6574656C706D6F63;
LABEL_14:
            unint64_t v17 = 0xE900000000000064;
            break;
          default:
            break;
        }
      }
      sub_10003B754(&qword_100794B88);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v58;
      *(void *)(inited + 32) = 0x656C746974;
      *(void *)(inited + 40) = 0xE500000000000000;
      *(void *)(inited + 48) = v8;
      *(void *)(inited + 56) = v9;
      *(void *)(inited + 64) = 0x676E697274536469;
      *(void *)(inited + 72) = 0xE800000000000000;
      *(void *)(inited + 80) = v15;
      *(void *)(inited + 88) = v17;
      swift_bridgeObjectRetain();
      unint64_t v19 = sub_1004229CC(inited);
      *((void *)&v64 + 1) = sub_10003B754(&qword_100788E68);
      *(void *)&long long v63 = v19;
      v20._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      v21._uint64_t countAndFlagsBits = 0x4025206F74206F47;
      v21._object = (void *)0xED00007473694C20;
      v20._object = v57;
      TTRLocalizedString(_:comment:)(v21, v20);
      sub_10003B754((uint64_t *)&unk_100788EE0);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = v56;
      *(void *)(v22 + 56) = &type metadata for String;
      *(void *)(v22 + 64) = sub_1000965C8();
      *(void *)(v22 + 32) = v8;
      *(void *)(v22 + 40) = v9;
      swift_bridgeObjectRetain();
      String.init(format:_:)();
      swift_bridgeObjectRelease();
      id v23 = (id)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      swift_bridgeObjectRelease();

      sub_100096190(v10, v11);
      v7 += 32;
    }
    while (isa != v6);
    swift_bridgeObjectRelease();
    UIMenuElementSize v24 = v65;
  }
  else
  {
    UIMenuElementSize v24 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  }
  v25._uint64_t countAndFlagsBits = 0xD000000000000014;
  v25._object = (void *)0x80000001006C1EF0;
  v26._uint64_t countAndFlagsBits = 0x6F54206F47;
  v26._object = (void *)0xE500000000000000;
  Swift::String v27 = TTRLocalizedString(_:comment:)(v26, v25);
  if ((unint64_t)v24 >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    swift_bridgeObjectRetain();
    UIMenuElementSize v28 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    UIMenuElementSize v28 = v24;
  }
  swift_bridgeObjectRelease();
  uint64_t v62 = sub_1000368FC(0, &qword_1007894E0);
  v66.value.super.Class isa = 0;
  v66.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v27, (Swift::String_optional)0, v66, 0, 0xFFFFFFFFFFFFFFFFLL, v28, v50).super.super.isa;
  static TTRLocalizableStrings.RemindersList.showCompletedRemindersButtonText.getter();
  sub_1000368FC(0, &qword_100788E60);
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain();
  uint64_t v60 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v29._object = (void *)0x80000001006C1F10;
  v30._object = (void *)0x80000001006C1F30;
  v29._uint64_t countAndFlagsBits = 0xD000000000000011;
  v30._uint64_t countAndFlagsBits = 0xD000000000000023;
  TTRLocalizedString(_:comment:)(v29, v30);
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain();
  id v59 = (const char *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v31._object = (void *)0x80000001006C1F60;
  v32._object = (void *)0x80000001006C1F80;
  v31._uint64_t countAndFlagsBits = 0xD000000000000011;
  v32._uint64_t countAndFlagsBits = 0xD000000000000023;
  TTRLocalizedString(_:comment:)(v31, v32);
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain();
  *(void *)&long long v58 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v33._object = (void *)0x80000001006C1FB0;
  v34._uint64_t countAndFlagsBits = 0x62755320776F6853;
  v34._object = (void *)0xED0000736B736174;
  v33._uint64_t countAndFlagsBits = 0xD000000000000031;
  TTRLocalizedString(_:comment:)(v34, v33);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain_n();
  *(void *)&long long v56 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  [(id)v56 setWantsPriorityOverSystemBehavior:1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain();
  id v57 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v35._object = (void *)0x80000001006C1FF0;
  v36._uint64_t countAndFlagsBits = 0x6275532065646948;
  v36._object = (void *)0xED0000736B736174;
  v35._uint64_t countAndFlagsBits = 0xD000000000000031;
  TTRLocalizedString(_:comment:)(v36, v35);
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain_n();
  Swift::String v37 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  [v37 setWantsPriorityOverSystemBehavior:1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain();
  uint64_t v38 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v39._uint64_t countAndFlagsBits = 0xD000000000000033;
  v40._object = (void *)0xE90000000000006FLL;
  v39._object = (void *)0x80000001006C2030;
  v40._uint64_t countAndFlagsBits = 0x666E4920776F6853;
  TTRLocalizedString(_:comment:)(v40, v39);
  long long v63 = 0u;
  long long v64 = 0u;
  swift_bridgeObjectRetain();
  uint64_t v41 = UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  v42._uint64_t countAndFlagsBits = 0xD000000000000013;
  v42._object = (void *)0x80000001006C2070;
  v43._uint64_t countAndFlagsBits = 2003134806;
  v43._object = (void *)0xE400000000000000;
  Swift::String v44 = TTRLocalizedString(_:comment:)(v43, v42);
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_10067FFE0;
  uint64_t v46 = v60;
  *(void *)(v45 + 32) = isa;
  *(void *)(v45 + 40) = v46;
  uint64_t v47 = v58;
  *(void *)(v45 + 48) = v59;
  *(void *)(v45 + 56) = v47;
  Swift::String v48 = v57;
  *(void *)(v45 + 64) = v56;
  *(void *)(v45 + 72) = v48;
  *(void *)(v45 + 80) = v37;
  *(void *)(v45 + 88) = v38;
  *(void *)(v45 + 96) = v41;
  *(void *)&long long v63 = v45;
  specialized Array._endMutation()();
  v67.value.super.Class isa = 0;
  v67.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v44, (Swift::String_optional)0, v67, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v63, v51);
}

Class sub_100647F0C()
{
  static TTRLocalizableStrings.ReminderNoteEditingStyles.bulletedListMenuItem.getter();
  sub_1000368FC(0, &qword_100788E60);
  swift_bridgeObjectRetain();
  Swift::String v0 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  static TTRLocalizableStrings.ReminderNoteEditingStyles.dashedListMenuItem.getter();
  swift_bridgeObjectRetain();
  Swift::String v1 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  uint64_t v2 = static TTRLocalizableStrings.ReminderNoteEditingStyles.orderedListMenuItem.getter();
  swift_bridgeObjectRetain();
  children._rawValue = (void *)v2;
  uint64_t v3 = (void *)UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_10066D460;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 48) = v3;
  UIMenuElementSize v16 = v4;
  specialized Array._endMutation()();
  if ((unint64_t)v16 >> 62)
  {
    sub_1000368FC(0, &qword_10079AF80);
    id v12 = v0;
    id v13 = v1;
    id v14 = v3;
    swift_bridgeObjectRetain();
    UIMenuElementSize preferredElementSize = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v5 = v0;
    id v6 = v1;
    id v7 = v3;
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_1000368FC(0, &qword_10079AF80);
    UIMenuElementSize preferredElementSize = v16;
  }
  swift_bridgeObjectRelease();
  sub_1000368FC(0, &qword_1007894E0);
  v9._uint64_t countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v17.value.super.Class isa = 0;
  v17.is_nil = 0;
  Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v17, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;

  return isa;
}

ValueMetadata *type metadata accessor for TTRIKeyboardShortcuts()
{
  return &type metadata for TTRIKeyboardShortcuts;
}

void destroy for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);

  sub_100096190(v2, v3);
}

uint64_t initializeWithCopy for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void **)(a2 + 16);
  char v5 = *(unsigned char *)(a2 + 24);
  swift_bridgeObjectRetain();
  sub_100096248(v4, v5);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return a1;
}

uint64_t assignWithCopy for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, void *a2)
{
  uint64_t v2 = a2;
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)v2[2];
  LOBYTE(v2) = *((unsigned char *)v2 + 24);
  sub_100096248(v4, (char)v2);
  char v5 = *(void **)(a1 + 16);
  char v6 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = (_BYTE)v2;
  sub_100096190(v5, v6);
  return a1;
}

uint64_t assignWithTake for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  char v5 = *(unsigned char *)(a2 + 24);
  char v6 = *(void **)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = v5;
  sub_100096190(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TTRIKeyboardShortcuts.ListNavigationShortcutItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TTRIKeyboardShortcuts.ListNavigationShortcutItem()
{
  return &type metadata for TTRIKeyboardShortcuts.ListNavigationShortcutItem;
}

uint64_t initializeBufferWithCopyOfBuffer for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100096248(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1)
{
}

uint64_t assignWithCopy for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_100096248(*(id *)a2, v4);
  char v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100096190(v5, v6);
  return a1;
}

uint64_t assignWithTake for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  char v4 = *((unsigned char *)a2 + 8);
  char v5 = *(void **)a1;
  char v6 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  sub_100096190(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier()
{
  return &type metadata for TTRIKeyboardShortcuts.ListNavigationShortcutItem.ListIdentifier;
}

void sub_1006484B8()
{
  qword_1007BBDB8 = 0x4020000000000000;
}

void sub_1006484C8()
{
  qword_1007BBDC0 = 0x4000000000000000;
}

double sub_1006484D8()
{
  if (qword_1007857B0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_1007BBDE8;
  qword_1007BBDD0 = 0;
  qword_1007BBDD8 = 0;
  qword_1007BBDC8 = 0;
  qword_1007BBDE0 = qword_1007BBDE8;
  return result;
}

void sub_100648538()
{
  qword_1007BBDE8 = 0x4022000000000000;
}

void sub_100648548(uint64_t a1)
{
  uint64_t v90 = a1;
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_1007AD380);
  __chkstk_darwin(v2 - 8);
  uint64_t v87 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  char v6 = (char *)&v77 - v5;
  __chkstk_darwin(v7);
  uint64_t v82 = (uint64_t)&v77 - v8;
  uint64_t v9 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v83 = *(void *)(v9 - 8);
  uint64_t v84 = v9;
  __chkstk_darwin(v9);
  char v11 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_10003B754(&qword_10078C518);
  __chkstk_darwin(v12 - 8);
  UIImage_optional v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v14);
  UIMenuElementSize v16 = (char *)&v77 - v15;
  __chkstk_darwin(v17);
  unint64_t v19 = (char *)&v77 - v18;
  uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  Swift::String v26 = (char *)&v77 - v25;
  uint64_t v88 = v1;
  uint64_t v27 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess();
  uint64_t v28 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  uint64_t v29 = *(void *)(v28 - 8);
  Swift::String v30 = *(uint64_t (**)(uint64_t, uint64_t))(v29 + 48);
  uint64_t v89 = v28;
  uint64_t v92 = v29 + 48;
  int v31 = v30(v27, 1);
  uint64_t v91 = v30;
  uint64_t v86 = v27;
  if (!v31)
  {
    uint64_t v79 = v16;
    id v78 = (void **)v23;
    uint64_t v81 = (void **)v26;
    id v80 = v11;
    sub_10003B694(v27, (uint64_t)v19, &qword_10078C518);
    Swift::String v34 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    uint64_t v32 = v20;
    uint64_t v33 = v21;
    if (v34(v19, 1, v20) == 1) {
      goto LABEL_4;
    }
    UIImage_optional v85 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v34;
    uint64_t v53 = v81;
    sub_10064D43C((uint64_t)v19, (uint64_t)v81);
    Swift::String v39 = v88;
    id v54 = &v88[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
    swift_beginAccess();
    uint64_t v56 = v83;
    uint64_t v55 = v84;
    (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v80, v54, v84);
    id v57 = (char *)v53 + *(int *)(v20 + 20);
    swift_beginAccess();
    long long v58 = v54;
    Swift::String v30 = v91;
    (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v58, v57, v55);
    swift_endAccess();
    uint64_t v59 = v82;
    sub_10003B694(v90, v82, (uint64_t *)&unk_1007AD380);
    uint64_t v36 = v89;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v30)(v59, 1, v89) == 1)
    {
      sub_10003B6F8(v59, (uint64_t *)&unk_1007AD380);
      uint64_t v60 = (uint64_t)v79;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v79, 1, 1, v20);
      uint64_t v38 = (uint64_t)v87;
      goto LABEL_31;
    }
    uint64_t v60 = (uint64_t)v79;
    sub_10003B694(v59, (uint64_t)v79, &qword_10078C518);
    sub_10064D528(v59, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
    int v63 = v85(v60, 1, v20);
    uint64_t v38 = (uint64_t)v87;
    if (v63 == 1)
    {
LABEL_31:
      sub_10003B6F8(v60, &qword_10078C518);
      uint64_t v64 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      uint64_t v65 = *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v65 | 1;
      uint64_t v35 = v90;
      uint64_t v40 = v86;
      uint64_t v66 = v84;
      UIImage_optional v67 = v80;
      if ((v65 | 1) != v65)
      {
        [v39 setNeedsLayout];
        if ((v39[v64] & 5) != 0) {
          [v39 invalidateIntrinsicContentSize];
        }
      }
      (*(void (**)(char *, uint64_t))(v83 + 8))(v67, v66);
      sub_10064D528((uint64_t)v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
      goto LABEL_8;
    }
    uint64_t v68 = v60;
    uint64_t v69 = v78;
    sub_10064D43C(v68, (uint64_t)v78);
    char v70 = sub_1000BAA44(*v81, *v69);
    uint64_t v35 = v90;
    uint64_t v40 = v86;
    uint64_t v71 = v84;
    id v72 = v80;
    if (v70)
    {
      sub_10064D358((unint64_t *)&qword_100788D40, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
      char v73 = dispatch thunk of static Equatable.== infix(_:_:)();
      Swift::String v30 = v91;
      if (v73)
      {
LABEL_42:
        sub_10064D528((uint64_t)v78, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
        (*(void (**)(char *, uint64_t))(v83 + 8))(v72, v71);
        sub_10064D528((uint64_t)v81, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
        goto LABEL_8;
      }
      uint64_t v74 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      uint64_t v75 = *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      uint64_t v76 = v75 | 2;
    }
    else
    {
      uint64_t v74 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      uint64_t v75 = *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      uint64_t v76 = v75 | 1;
    }
    *(void *)&v39[v74] = v76;
    if (v76 != v75)
    {
      [v39 setNeedsLayout];
      if ((v39[v74] & 5) != 0) {
        [v39 invalidateIntrinsicContentSize];
      }
    }
    goto LABEL_42;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v19, 1, 1, v20);
  uint64_t v32 = v20;
  uint64_t v33 = v21;
LABEL_4:
  sub_10003B6F8((uint64_t)v19, &qword_10078C518);
  uint64_t v35 = v90;
  sub_10003B694(v90, (uint64_t)v6, (uint64_t *)&unk_1007AD380);
  uint64_t v36 = v89;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v30)(v6, 1, v89) == 1)
  {
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_1007AD380);
    Swift::String v37 = v85;
    (*(void (**)(uint64_t (*)(uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v33 + 56))(v85, 1, 1, v32);
LABEL_7:
    sub_10003B6F8((uint64_t)v37, &qword_10078C518);
    uint64_t v38 = (uint64_t)v87;
    Swift::String v39 = v88;
    uint64_t v40 = v86;
    goto LABEL_8;
  }
  Swift::String v37 = v85;
  sub_10003B694((uint64_t)v6, (uint64_t)v85, &qword_10078C518);
  sub_10064D528((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
  if ((*(unsigned int (**)(void, uint64_t, uint64_t))(v33 + 48))(v37, 1, v32) == 1) {
    goto LABEL_7;
  }
  sub_10003B6F8((uint64_t)v37, &qword_10078C518);
  uint64_t v51 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
  uint64_t v38 = (uint64_t)v87;
  Swift::String v39 = v88;
  uint64_t v52 = *(void *)&v88[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  *(void *)&v88[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v52 | 1;
  uint64_t v40 = v86;
  if ((v52 | 1) != v52)
  {
    [v39 setNeedsLayout];
    if ((v39[v51] & 5) != 0) {
      [v39 invalidateIntrinsicContentSize];
    }
  }
LABEL_8:
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v30)(v40, 1, v36))
  {
    uint64_t v41 = 0;
    uint64_t v42 = 0;
    Swift::String v43 = 0;
  }
  else
  {
    Swift::String v44 = (uint64_t *)(v40 + *(int *)(v36 + 20));
    uint64_t v41 = *v44;
    uint64_t v42 = v44[1];
    Swift::String v43 = (void *)v44[2];
    sub_10064D4E8(*v44, v42, v43);
  }
  sub_10003B694(v35, v38, (uint64_t *)&unk_1007AD380);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v91)(v38, 1, v36) == 1)
  {
    sub_10003B6F8(v38, (uint64_t *)&unk_1007AD380);
    if (!v42) {
      return;
    }
LABEL_18:
    swift_bridgeObjectRelease();

    goto LABEL_26;
  }
  uint64_t v45 = (uint64_t *)(v38 + *(int *)(v36 + 20));
  uint64_t v47 = *v45;
  uint64_t v46 = v45[1];
  Swift::String v48 = (void *)v45[2];
  sub_10064D4E8(*v45, v46, v48);
  sub_10064D528(v38, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagsState);
  if (v42)
  {
    if (v46)
    {
      id v49 = v43;
      swift_bridgeObjectRetain();
      char v50 = static TTRRemindersListViewModel.HashtagSelectionDescription.__derived_struct_equals(_:_:)();
      swift_bridgeObjectRelease();

      sub_100234AFC(v41, v42, v43);
      swift_bridgeObjectRelease();
      if (v50) {
        return;
      }
      goto LABEL_26;
    }
    goto LABEL_18;
  }
  if (!v46) {
    return;
  }
  sub_100234AFC(v47, v46, v48);
LABEL_26:
  uint64_t v61 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
  uint64_t v62 = *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  *(void *)&v39[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v62 | 4;
  if ((v62 | 4) != v62)
  {
    [v39 setNeedsLayout];
    if ((v39[v61] & 5) != 0) {
      [v39 invalidateIntrinsicContentSize];
    }
  }
}

id sub_100648F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v8 = &v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_allowsExcludedSelection] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel] = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  v10[1] = 0;
  v10[2] = 0;
  *uint64_t v10 = 0;
  char v11 = v4;
  static REMHashtagLabelSpecifier.labels(_:)();
  *(void *)&v11[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 7;
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v13 = [self containerBoxViewWithArrangedSubviews:isa];

  [v13 setLayoutMarginsRelativeArrangement:1];
  [v13 setPreservesSuperviewLayoutMargins:0];
  [v13 setHorizontalAlignment:0];
  [v13 setVerticalAlignment:0];
  [v13 setDebugBoundingBoxesEnabled:0];
  *(void *)&v11[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_labelBoxView] = v13;
  id v14 = v13;

  if (a3)
  {
    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v15 = 0;
  }
  v37.receiver = v11;
  v37.super_class = ObjectType;
  id v16 = [super initWithStyle:a1 reuseIdentifier:v15];

  id v17 = v16;
  uint64_t v18 = [v17 containerView];
  (*(void (**)(uint64_t (*)(), void))((swift_isaMask & *v18) + 0x60))(sub_1006494C0, 0);

  id v19 = [v17 containerView];
  [v19 setLayoutMarginsRelativeArrangement:0];

  id v20 = [v17 containerView];
  [v20 setPreservesSuperviewLayoutMargins:1];

  id v21 = [v17 containerView];
  [v21 setAxis:1];

  id v22 = [v17 containerView];
  [v22 setSpacing:0.0];

  id v23 = [v17 containerView];
  [v23 setAlignment:0];

  id v24 = [v17 containerView];
  [v24 setDistribution:0];

  id v25 = [v17 containerView];
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_10066D470;
  *(void *)(v26 + 32) = v14;
  v36[0] = v26;
  specialized Array._endMutation()();
  id v27 = v14;
  Class v28 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v25 setArrangedSubviews:v28, v36[0]];

  id v29 = [v17 containerView];
  [v29 setDelegate:v17];

  id v30 = v17;
  UITableViewCell.setSeparatorInsetType(_:)();

  id v31 = v30;
  UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()();

  v36[3] = ObjectType;
  v36[0] = v31;
  id v32 = v31;
  static UIAccessibility.addAccessibilityStatusChangeObserver(_:selector:)();
  sub_100038CD8((uint64_t)v36);
  sub_10003B754(&qword_100789500);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_10066C6F0;
  *(void *)(v33 + 32) = type metadata accessor for UITraitHorizontalSizeClass();
  *(void *)(v33 + 40) = &protocol witness table for UITraitHorizontalSizeClass;
  id v34 = v32;
  UIView.registerForTraitChanges<A>(_:handler:)();

  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v34;
}

uint64_t sub_1006494C0()
{
  uint64_t v0 = TTRIMarginTransferAction.init(edgesToReceiveMargins:redirectedTarget:)();
  uint64_t v2 = v1;
  self;
  uint64_t v3 = (void *)swift_dynamicCastObjCClass();
  if (v3)
  {
    [v3 documentView];
  }
  return v0;
}

id sub_1006495B4()
{
  ObjectType = (objc_class *)swift_getObjectType();
  v5[3] = ObjectType;
  v5[0] = v0;
  id v2 = v0;
  static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)();
  sub_100038CD8((uint64_t)v5);
  v4.receiver = v2;
  v4.super_class = ObjectType;
  return [super dealloc];
}

uint64_t sub_100649750()
{
  return type metadata accessor for TTRIRemindersListHashtagCollectionCell();
}

uint64_t type metadata accessor for TTRIRemindersListHashtagCollectionCell()
{
  uint64_t result = qword_1007AD218;
  if (!qword_1007AD218) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1006497A4()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  if (v2)
  {
    *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 0;
    if (v2)
    {
      sub_1006499C0();
      if ((v2 & 2) == 0)
      {
        sub_100649DA8();
        if ((v2 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
    }
    else if ((v2 & 2) == 0)
    {
      if ((v2 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    sub_100649DA8();
LABEL_10:
    sub_10064A0E8();
  }
LABEL_11:
  v4.receiver = v0;
  v4.super_class = ObjectType;
  return [super layoutSubviews];
}

id sub_100649880(double a1, double a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  if (v6)
  {
    *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 0;
    if (v6)
    {
      sub_1006499C0();
      if ((v6 & 2) == 0)
      {
        sub_100649DA8();
        if ((v6 & 4) == 0) {
          goto LABEL_11;
        }
        goto LABEL_10;
      }
    }
    else if ((v6 & 2) == 0)
    {
      if ((v6 & 4) == 0) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    sub_100649DA8();
LABEL_10:
    sub_10064A0E8();
  }
LABEL_11:
  v8.receiver = v2;
  v8.super_class = ObjectType;
  return [super sizeThatFits:a1, a2];
}

uint64_t sub_100649980@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_10064D09C(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_1006499C0()
{
  Swift::String v1 = v0;
  uint64_t v2 = sub_10003B754(&qword_10078C518);
  __chkstk_darwin(v2 - 8);
  objc_super v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  objc_super v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess();
  uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
LABEL_4:
    sub_10003B6F8((uint64_t)v4, &qword_10078C518);
LABEL_5:
    char v11 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
    uint64_t v12 = *(void **)v11;
    if (*(void *)v11)
    {
      [v12 removeFromSuperview];
      uint64_t v12 = *(void **)v11;
    }
    id v13 = (void *)*((void *)v11 + 1);
    *((void *)v11 + 1) = 0;
    *((void *)v11 + 2) = 0;
    *(void *)char v11 = 0;
    return sub_10064D3F4(v12, v13);
  }
  sub_10003B694(v9, (uint64_t)v4, &qword_10078C518);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1) {
    goto LABEL_4;
  }
  sub_10064D43C((uint64_t)v4, (uint64_t)v8);
  id v15 = [v1 traitCollection];
  id v16 = [v15 horizontalSizeClass];

  if (v16 != (id)1)
  {
    sub_10064D528((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
    goto LABEL_5;
  }
  id v17 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  uint64_t v18 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  id v19 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 8];
  uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 16];
  if (v18)
  {
    id v31 = *(id *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
    id v21 = v19;
    uint64_t v22 = v20;
  }
  else
  {
    id v31 = sub_10064A8DC(v1);
    id v21 = v23;
    uint64_t v22 = v24;
  }
  swift_bridgeObjectRetain();
  sub_10064D4A0(v18, v19);
  static TTRLocalizableStrings.Hashtags.allTagsText.getter();
  id v25 = v21;
  id v26 = [v21 arrangedSubviews];
  if (v26)
  {
    id v27 = v26;
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
  }
  TTRHashtagCollectionViewPopulator.updateButtons(toShow:allTagsButtonState:addTagButtonState:reusing:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v28 = v31;
  id v29 = [v31 superview];

  if (!v29)
  {
    id v30 = [v1 containerView];
    [v30 insertArrangedSubview:v28 atIndex:0];
  }
  sub_10064D528((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
  uint64_t v12 = *(void **)v17;
  id v13 = (void *)*((void *)v17 + 1);
  *(void *)id v17 = v28;
  *((void *)v17 + 1) = v25;
  *((void *)v17 + 2) = v22;
  return sub_10064D3F4(v12, v13);
}

uint64_t sub_100649DA8()
{
  uint64_t v1 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  objc_super v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_10003B754(&qword_10078C518);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel;
  swift_beginAccess();
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9);
  if (!result)
  {
    sub_10003B694(v8, (uint64_t)v7, &qword_10078C518);
    uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v7, 1, v11) == 1)
    {
      return sub_10003B6F8((uint64_t)v7, &qword_10078C518);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10064D528((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
      uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector);
      if (v12)
      {
        id v13 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 8);
        id v19 = v12;
        id v14 = v13;
        swift_retain();
        id v15 = [v14 arrangedSubviews];
        if (v15)
        {
          id v16 = v15;
          sub_1000368FC(0, (unint64_t *)&qword_100788600);
          static Array._unconditionallyBridgeFromObjectiveC(_:)();
        }
        uint64_t v17 = v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection;
        swift_beginAccess();
        (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v17, v1);
        TTRHashtagCollectionViewPopulator.updateSelection(for:hashtagLabels:selection:dropState:animation:)();
        swift_bridgeObjectRelease();
        swift_release();

        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void sub_10064A0E8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess();
  uint64_t v7 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  uint64_t v8 = 0;
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7))
  {
    uint64_t v9 = (uint64_t *)&v6[*(int *)(v7 + 20)];
    uint64_t v10 = v9[1];
    if (v10)
    {
      uint64_t v53 = v2;
      uint64_t v11 = *v9;
      uint64_t v12 = (void *)v9[2];
      id v13 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel];
      uint64_t v54 = v3;
      id v14 = v12;
      if (v13)
      {
        uint64_t v15 = swift_bridgeObjectRetain();
        uint64_t v8 = v13;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v15 = (uint64_t)sub_10064AB80();
        uint64_t v8 = (void *)v15;
      }
      __chkstk_darwin(v15);
      *(&v53 - 4) = v11;
      *(&v53 - 3) = v10;
      *(&v53 - 2) = (uint64_t)v12;
      __chkstk_darwin(v16);
      *(&v53 - 4) = v11;
      *(&v53 - 3) = v10;
      *(&v53 - 2) = (uint64_t)v12;
      uint64_t v17 = v13;
      id v55 = v12;
      uint64_t v18 = TTRRemindersListViewModel.HashtagSelectionDescription.attributedPreferredDescription(baseAttributes:emphasizedAttributes:)();
      if (v18)
      {
        id v19 = (id)v18;
        uint64_t v20 = 2;
      }
      else
      {
        sub_10003B754(&qword_100793B40);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_10066C680;
        *(void *)(inited + 32) = NSFontAttributeName;
        uint64_t v22 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
        swift_bridgeObjectRetain();
        id v23 = NSFontAttributeName;
        *(void *)(inited + 40) = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
        *(void *)(inited + 64) = v22;
        *(void *)(inited + 72) = NSForegroundColorAttributeName;
        uint64_t v24 = self;
        id v25 = NSForegroundColorAttributeName;
        id v26 = [v24 secondaryLabelColor];
        *(void *)(inited + 104) = sub_1000368FC(0, (unint64_t *)&qword_10078E640);
        *(void *)(inited + 80) = v26;
        sub_100421E1C(inited);
        id v27 = objc_allocWithZone((Class)NSAttributedString);
        NSString v28 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_10064D358((unint64_t *)&qword_100793B50, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v19 = [v27 initWithString:v28 attributes:isa];

        uint64_t v20 = 0;
      }
      uint64_t v30 = v53;
      id v31 = [v1 traitCollection:v53];
      id v32 = [v31 horizontalSizeClass];

      uint64_t v33 = v54;
      if (v32 == (id)1) {
        char v34 = 0;
      }
      else {
        char v34 = static UIAccessibility.ttriIsAccessibilityRunning.getter() ^ 1;
      }
      uint64_t v35 = (char *)v8 + *(void *)((swift_isaMask & *v8) + 0x68);
      swift_beginAccess();
      *uint64_t v35 = v34 & 1;
      uint64_t v36 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v5, v36, v30);
      int v37 = (*(uint64_t (**)(char *, uint64_t))(v33 + 88))(v5, v30);
      if (v37 == enum case for REMHashtagLabelSpecifier.labels(_:))
      {
        (*(void (**)(char *, uint64_t))(v33 + 96))(v5, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v38 = &v5[*(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64)];
        uint64_t v39 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
        int v40 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v39 - 8) + 88))(v38, v39);
        if (v40 == enum case for REMHashtagLabelSpecifier.Operation.or(_:))
        {
          char v41 = 0;
LABEL_21:
          LOBYTE(v56) = v41;
          TTRIInlineButtonAttachmentTextView.selectedItem.setter();
          TTRIInlineButtonAttachmentTextView.applyAttributedText(_:forceUpdate:)((NSAttributedString)v19, 0);
          id v42 = [v8 textContainer];
          [v42 setMaximumNumberOfLines:v20];

          swift_bridgeObjectRelease();
          goto LABEL_22;
        }
        if (v40 == enum case for REMHashtagLabelSpecifier.Operation.and(_:))
        {
          char v41 = 1;
          goto LABEL_21;
        }
      }
      else
      {
        char v41 = 1;
        if (v37 == enum case for REMHashtagLabelSpecifier.allLabels(_:)
          || v37 == enum case for REMHashtagLabelSpecifier.noLabels(_:))
        {
          goto LABEL_21;
        }
      }
      _diagnoseUnexpectedEnumCase<A>(type:)();
      __break(1u);
      return;
    }
    uint64_t v8 = 0;
  }
LABEL_22:
  Swift::String v43 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel];
  *(void *)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel] = v8;
  Swift::String v44 = v8;

  if (v8)
  {
    sub_10003B754((uint64_t *)&unk_1007894B0);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_10066D470;
    *(void *)(v45 + 32) = v44;
    uint64_t v56 = (void *)v45;
    specialized Array._endMutation()();
    uint64_t v46 = v56;
  }
  else
  {
    uint64_t v46 = _swiftEmptyArrayStorage;
  }
  uint64_t v47 = *(void **)&v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_labelBoxView];
  Swift::String v48 = v44;
  id v49 = [v47 arrangedSubviews];
  if (!v49) {
    goto LABEL_29;
  }
  char v50 = v49;
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  static Array._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  unint64_t v51 = swift_bridgeObjectRetain();
  LOBYTE(v50) = sub_1000BA3F0(v51, (uint64_t)v46);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if (v50)
  {
    swift_bridgeObjectRelease();
    if (!v8)
    {
LABEL_28:
      [v47 layoutMargins];
      [v47 setLayoutMargins:8.0];
      return;
    }
  }
  else
  {
LABEL_29:
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    Class v52 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v47 setArrangedSubviews:v52];

    if (!v8) {
      goto LABEL_28;
    }
  }
  [v47 layoutMargins];
  [v47 setLayoutMargins:7.0];
}

id sub_10064A8DC(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for HorizontalStackView());
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v4 = [v2 initWithArrangedSubviews:isa];

  [v4 setAxis:0];
  [v4 setSpacing:8.0];
  [v4 setAlignment:2];
  [v4 setDistribution:0];
  [v4 layoutMargins];
  [v4 setLayoutMargins:6.0];
  [v4 setLayoutMarginsRelativeArrangement:1];
  [v4 setDebugBoundingBoxesEnabled:0];
  [v4 setDelegate:a1];
  id v5 = [objc_allocWithZone((Class)NUIContentScrollView) initWithDocumentView:v4];
  [v5 setHorizontalAlignment:1];
  [v5 setVerticalAlignment:3];
  [v5 setCanScrollDocumentViewVertically:0];
  [v5 setCanScrollDocumentViewHorizontally:1];
  [v5 setShowsHorizontalScrollIndicator:0];
  [v5 setContentInsetAdjustmentBehavior:2];
  [v5 setContentInset:UIEdgeInsetsZero.top, UIEdgeInsetsZero.left, UIEdgeInsetsZero.bottom, UIEdgeInsetsZero.right];
  [v5 setTtrFocusGroupIdentifier:0];
  type metadata accessor for TTRIHashtagCollectionViewAdaptor();
  swift_allocObject();
  v4;
  id v6 = v5;
  id v7 = a1;
  TTRIHashtagCollectionViewAdaptor.init(target:addTagButtonAction:hashtagButtonAction:buttonFocusDelegate:containerView:)();
  sub_10003B754((uint64_t *)&unk_1007AD370);
  swift_allocObject();
  TTRHashtagCollectionViewPopulator.init(adaptor:)();
  return v6;
}

void *sub_10064AB80()
{
  sub_10003B754(&qword_1007AD350);
  uint64_t v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  static UIFont.roundedSubheadlineFont.getter();
  TTRIInlineButtonAttachmentTextView.font.setter();
  sub_10003B754(&qword_1007AD358);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_10066C680;
  TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions.localizedOptionString.getter();
  LOBYTE(v5) = 0;
  sub_10064D3A0();
  TTRIMenuItem.init(title:image:item:selectedTitle:)();
  *(_OWORD *)(v1 + 32) = v9;
  *(void *)(v1 + 48) = v10;
  *(void *)(v1 + 56) = v11;
  *(_OWORD *)(v1 + 64) = v12;
  TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions.localizedOptionString.getter();
  TTRIMenuItem.init(title:image:item:selectedTitle:)();
  *(_OWORD *)(v1 + 80) = v5;
  *(void *)(v1 + 96) = v6;
  *(void *)(v1 + 104) = v7;
  *(_OWORD *)(v1 + 112) = v8;
  TTRIInlineButtonAttachmentTextView.menuOptions.setter();
  TTRIInlineButtonAttachmentTextView.selectedItem.setter();
  id v2 = (void *)((char *)v0 + *(void *)((swift_isaMask & *v0) + 0x60));
  swift_beginAccess();
  *id v2 = 0xD000000000000020;
  v2[1] = 0x80000001006C0080;
  swift_bridgeObjectRelease();
  uint64_t v3 = (char *)v0 + *(void *)((swift_isaMask & *v0) + 0x80);
  swift_beginAccess();
  *((void *)v3 + 1) = &off_100755988;
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_10064ADC0(uint64_t a1)
{
  id v2 = v1;
  uint64_t v4 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unsigned __int8 v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = sub_10003B754(&qword_10078C518);
  __chkstk_darwin(v11 - 8);
  id v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = (uint64_t)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  swift_beginAccess();
  uint64_t v15 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15);
  if (!result)
  {
    sub_10003B694(v14, (uint64_t)v13, &qword_10078C518);
    uint64_t v17 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v13, 1, v17) == 1)
    {
      return sub_10003B6F8((uint64_t)v13, &qword_10078C518);
    }
    else
    {
      swift_bridgeObjectRetain();
      sub_10064D528((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState);
      if (*(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector])
      {
        uint64_t v28 = a1;
        uint64_t v18 = &v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
        swift_beginAccess();
        id v29 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
        v29(v7, v18, v4);
        swift_retain();
        TTRHashtagCollectionViewPopulator.modifySelection(_:forUserSelectedHashtagButton:hashtagLabels:allowsEmptySelection:allowsExcludedSelection:)();
        swift_bridgeObjectRelease();
        uint64_t v28 = v5;
        id v19 = *(void (**)(char *, uint64_t))(v5 + 8);
        v19(v7, v4);
        v29(v7, v18, v4);
        uint64_t v20 = v19;
        sub_10064D358((unint64_t *)&qword_100788D40, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
        char v21 = dispatch thunk of static Equatable.== infix(_:_:)();
        v19(v7, v4);
        if (v21)
        {
          v20(v10, v4);
          return swift_release();
        }
        else
        {
          swift_beginAccess();
          (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v18, v10, v4);
          swift_endAccess();
          uint64_t v22 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
          uint64_t v23 = *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
          *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v23 | 2;
          if ((v23 | 2) != v23)
          {
            [v2 setNeedsLayout];
            if ((v2[v22] & 5) != 0) {
              [v2 invalidateIntrinsicContentSize];
            }
          }
          uint64_t Strong = swift_unknownObjectWeakLoadStrong();
          if (Strong)
          {
            uint64_t v25 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(char *, uint64_t))(*(void *)(v25 + 8) + 824))(v10, ObjectType);
            swift_release();
            swift_unknownObjectRelease();
          }
          else
          {
            swift_release();
          }
          return ((uint64_t (*)(char *, uint64_t))v20)(v10, v4);
        }
      }
      else
      {
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

void *sub_10064B344()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector);
  if (v1)
  {
    uint64_t v12 = sub_1000368FC(0, &qword_1007AD368);
    *(void *)&long long v11 = v1;
    id v2 = v1;
    uint64_t v3 = sub_1005714BC(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v5 = v3[2];
    unint64_t v4 = v3[3];
    if (v5 >= v4 >> 1) {
      uint64_t v3 = sub_1005714BC((void *)(v4 > 1), v5 + 1, 1, v3);
    }
    _OWORD v3[2] = v5 + 1;
    sub_100038E1C(&v11, &v3[4 * v5 + 4]);
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (v6)
  {
    uint64_t v12 = sub_10003B754(&qword_1007AD350);
    *(void *)&long long v11 = v6;
    id v7 = v6;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v3 = sub_1005714BC(0, v3[2] + 1, 1, v3);
    }
    unint64_t v9 = v3[2];
    unint64_t v8 = v3[3];
    if (v9 >= v8 >> 1) {
      uint64_t v3 = sub_1005714BC((void *)(v8 > 1), v9 + 1, 1, v3);
    }
    _OWORD v3[2] = v9 + 1;
    sub_100038E1C(&v11, &v3[4 * v9 + 4]);
  }
  if (!v3[2])
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void *sub_10064B4E4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  if ((TTRIInlineButtonAttachmentTextView.hasButtonAttachment.getter() & 1) == 0) {
    goto LABEL_6;
  }
  type metadata accessor for TTRIInlineButtonAttachmentTextViewButton();
  uint64_t v3 = (void *)UIView.firstDescendantView<A>(ofType:passing:)();
  unint64_t v4 = v3;
  if (!v3)
  {

    return v4;
  }
  id v5 = [v3 accessibilityLabel];

  if (!v5)
  {
LABEL_6:

    return 0;
  }
  unint64_t v4 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();

  return v4;
}

void sub_10064B5EC()
{
  sub_10064B6F8();
  if (v0 <= 0x3F)
  {
    type metadata accessor for REMHashtagLabelSpecifier();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10064B6F8()
{
  if (!qword_1007AD228)
  {
    type metadata accessor for TTRRemindersListViewModel.HashtagsState();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007AD228);
    }
  }
}

uint64_t sub_10064B7D0(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::String v48 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  unint64_t v8 = (char *)&v40 - v7;
  __chkstk_darwin(v9);
  long long v11 = (char *)&v40 - v10;
  __chkstk_darwin(v12);
  uint64_t v47 = (char *)&v40 - v13;
  uint64_t v14 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100038DC0(a1, (uint64_t)v50);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    id v19 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.and(_:);
    if (!v49) {
      id v19 = (unsigned int *)&enum case for REMHashtagLabelSpecifier.Operation.or(_:);
    }
    (*(void (**)(char *, void, uint64_t))(v15 + 104))(v17, *v19, v14);
    char v41 = v1;
    uint64_t v20 = &v1[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection];
    swift_beginAccess();
    char v21 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    Swift::String v43 = v20;
    v21(v11, v20, v3);
    id v42 = v21;
    v21(v8, v11, v3);
    uint64_t v22 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v8, v3);
    uint64_t v23 = v4;
    uint64_t v24 = v22;
    uint64_t v45 = v15;
    uint64_t v46 = v14;
    Swift::String v44 = v17;
    if (v22 == enum case for REMHashtagLabelSpecifier.labels(_:))
    {
      (*(void (**)(char *, uint64_t))(v23 + 96))(v8, v3);
      uint64_t v25 = *(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64);
      int v40 = &v8[v25];
      id v26 = v47;
      uint64_t v27 = &v47[v25];
      *(_OWORD *)uint64_t v47 = *(_OWORD *)v8;
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v27, v17, v14);
      (*(void (**)(char *, uint64_t, uint64_t))(v23 + 104))(v26, v24, v3);
      (*(void (**)(char *, uint64_t))(v15 + 8))(v40, v14);
    }
    else
    {
      if (v22 != enum case for REMHashtagLabelSpecifier.allLabels(_:)
        && v22 != enum case for REMHashtagLabelSpecifier.noLabels(_:))
      {
        uint64_t result = _diagnoseUnexpectedEnumCase<A>(type:)();
        __break(1u);
        return result;
      }
      id v26 = v47;
      (*(void (**)(char *))(v23 + 104))(v47);
    }
    uint64_t v28 = v23;
    id v29 = *(void (**)(char *, uint64_t))(v23 + 8);
    v29(v11, v3);
    uint64_t v30 = v48;
    id v31 = v43;
    v42(v48, v43, v3);
    sub_10064D358((unint64_t *)&qword_100788D40, (void (*)(uint64_t))&type metadata accessor for REMHashtagLabelSpecifier);
    char v32 = dispatch thunk of static Equatable.== infix(_:_:)();
    v29(v30, v3);
    if (v32)
    {
      v29(v26, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v44, v46);
    }
    else
    {
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v28 + 24))(v31, v26, v3);
      swift_endAccess();
      uint64_t v33 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
      char v34 = v41;
      uint64_t v35 = *(void *)&v41[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
      *(void *)&v41[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v35 | 2;
      uint64_t v36 = v45;
      if ((v35 | 2) != v35)
      {
        [v34 setNeedsLayout];
        if ((*((unsigned char *)v34 + v33) & 5) != 0) {
          [v34 invalidateIntrinsicContentSize];
        }
      }
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v38 = *(void *)(Strong + OBJC_IVAR____TtC9Reminders38TTRIRemindersListContentViewController_presenter + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, uint64_t))(*(void *)(v38 + 8) + 824))(v26, ObjectType);
        swift_unknownObjectRelease();
      }
      v29(v26, v3);
      return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v44, v46);
    }
  }
  return result;
}

id sub_10064BD64()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = type metadata accessor for REMHashtagLabelSpecifier();
  uint64_t v3 = *(void *)(v2 - 8);
  double v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (!v7) {
    return 0;
  }
  id v8 = [v7 attributedText:v4];
  if (!v8) {
    return 0;
  }
  uint64_t v9 = v8;
  id v10 = objc_allocWithZone((Class)NSMutableAttributedString);
  id v11 = v9;
  id v12 = [v10 initWithAttributedString:v11];
  uint64_t v13 = v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_internalSelection;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v13, v2);
  if ((*(unsigned int (**)(char *, uint64_t))(v3 + 88))(v6, v2) == enum case for REMHashtagLabelSpecifier.labels(_:))
  {
    (*(void (**)(char *, uint64_t))(v3 + 96))(v6, v2);
    uint64_t v14 = &v6[*(int *)(sub_10003B754((uint64_t *)&unk_1007AD340) + 64)];
    id v15 = v12;
    uint64_t v16 = NSAttributedString.ttrAccessibilityConvertedToHaveVoiceOverReadableTagList(withIncludedTags:andExcludedTags:)();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v12 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v16];

    uint64_t v17 = type metadata accessor for REMHashtagLabelSpecifier.Operation();
    (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v14, v17);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  }
  uint64_t v18 = sub_10064B4E4();
  if (v19)
  {
    uint64_t v20 = (uint64_t)v18;
    char v21 = v19;
    id v22 = v12;
    v23._uint64_t countAndFlagsBits = v20;
    v23._object = v21;
    v24.super.Class isa = TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)((NSAttributedString)v22, v23).super.isa;

    swift_bridgeObjectRelease();
    id v12 = [objc_allocWithZone((Class)NSMutableAttributedString) initWithAttributedString:v24.super.isa];
  }
  else
  {
    v24.super.Class isa = (Class)v11;
  }

  return v12;
}

uint64_t sub_10064C064()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel);
  if (v2
    && (id v3 = v2,
        char v4 = TTRIInlineButtonAttachmentTextView.hasButtonAttachment.getter(),
        v3,
        (v4 & 1) != 0))
  {
    uint64_t v5 = (uint64_t *)TTRAccesibility.General.Hint.AnyOrAllMenuHint.unsafeMutableAddressor();
    uint64_t v7 = *v5;
    uint64_t v6 = v5[1];
    swift_bridgeObjectRetain();
    id v8 = sub_100022F98(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v10 = *((void *)v8 + 2);
    unint64_t v9 = *((void *)v8 + 3);
    if (v10 >= v9 >> 1) {
      id v8 = sub_100022F98((char *)(v9 > 1), v10 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v10 + 1;
    id v11 = &v8[16 * v10];
    *((void *)v11 + 4) = v7;
    *((void *)v11 + 5) = v6;
    if (!UIAccessibilityIsVoiceOverRunning()) {
      goto LABEL_9;
    }
  }
  else
  {
    id v8 = (char *)_swiftEmptyArrayStorage;
    if (!UIAccessibilityIsVoiceOverRunning()) {
      goto LABEL_9;
    }
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector))
  {
    uint64_t v13 = (uint64_t *)TTRAccesibility.Hashtags.GoToHashtagHint.unsafeMutableAddressor();
    uint64_t v15 = *v13;
    uint64_t v14 = v13[1];
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v8 = sub_100022F98(0, *((void *)v8 + 2) + 1, 1, v8);
    }
    unint64_t v17 = *((void *)v8 + 2);
    unint64_t v16 = *((void *)v8 + 3);
    if (v17 >= v16 >> 1) {
      id v8 = sub_100022F98((char *)(v16 > 1), v17 + 1, 1, v8);
    }
    *((void *)v8 + 2) = v17 + 1;
    uint64_t v18 = &v8[16 * v17];
    *((void *)v18 + 4) = v15;
    *((void *)v18 + 5) = v14;
    if (*((void *)v8 + 2)) {
      goto LABEL_10;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
LABEL_9:
  if (!*((void *)v8 + 2)) {
    goto LABEL_16;
  }
LABEL_10:
  TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
  swift_bridgeObjectRetain();
  sub_10003B754(&qword_10078E670);
  sub_1000B542C();
  uint64_t v12 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10064C254()
{
  if (!UIAccessibilityIsVoiceOverRunning()) {
    return 0;
  }
  if (*(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector]) {
    return 0;
  }
  id v2 = [v0 window];
  if (!v2) {
    return 0;
  }
  id v3 = v2;
  type metadata accessor for TTRIHashtagButton();
  uint64_t v4 = UIView.firstDescendantView<A>(ofType:passing:)();

  return v4;
}

unint64_t sub_10064C2E4()
{
  sub_10003B754(&qword_100793B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v1 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v2 = NSFontAttributeName;
  *(void *)(inited + 40) = static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  *(void *)(inited + 64) = v1;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  id v3 = self;
  uint64_t v4 = NSForegroundColorAttributeName;
  id v5 = [v3 secondaryLabelColor];
  *(void *)(inited + 104) = sub_1000368FC(0, (unint64_t *)&qword_10078E640);
  *(void *)(inited + 80) = v5;
  return sub_100421E1C(inited);
}

unint64_t sub_10064C3F0()
{
  sub_10003B754(&qword_100793B40);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C6F0;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v1 = sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v2 = NSFontAttributeName;
  id v3 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  Class isa = UIFont.withBoldTrait()().super.isa;

  *(void *)(inited + 64) = v1;
  *(void *)(inited + 40) = isa;
  return sub_100421E1C(inited);
}

id sub_10064C71C(uint64_t a1, double a2, double a3)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  double v8 = 0.0;
  if ((v3[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth + 8] & 1) == 0)
  {
    double v9 = *(double *)&v3[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth];
    [v3 layoutMargins];
    double v11 = v9 - v10;
    [v3 layoutMargins];
    double v8 = v11 - v12;
  }
  if (v8 >= a2) {
    double v8 = a2;
  }
  v14.receiver = v3;
  v14.super_class = ObjectType;
  return [super contentLayoutSizeFittingSize:a1 forArrangedSubview:v8];
}

double sub_10064C844(double a1, double a2)
{
  id v3 = v2;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v7 = *(void *)&v2[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth];
  char v8 = v2[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth + 8];
  double v9 = &v2[OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_sizeCache];
  swift_beginAccess();
  uint64_t v10 = *(void *)v9;
  if (*(void *)(*(void *)v9 + 16) && (unint64_t v11 = sub_10035C948(v7, v8, a1, a2), (v12 & 1) != 0))
  {
    double v13 = *(double *)(*(void *)(v10 + 56) + 16 * v11);
  }
  else
  {
    swift_endAccess();
    v20.receiver = v3;
    v20.super_class = ObjectType;
    [super effectiveLayoutSizeFittingSize:a1, a2];
    double v13 = v14;
    double v16 = v15;
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *(void *)v9;
    *(void *)double v9 = 0x8000000000000000;
    sub_1000BC86C(v7, v8, isUniquelyReferenced_nonNull_native, v13, v16, a1, a2);
    *(void *)double v9 = v19;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  return v13;
}

Swift::Int sub_10064CAA0(Swift::UInt64 a1, char a2, double a3, double a4)
{
  Hasher.init(_seed:)();
  if (a2)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = a1;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    Hasher._combine(_:)(v8);
  }
  if ((*(void *)&a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v9 = *(void *)&a3;
  }
  else {
    Swift::UInt64 v9 = 0;
  }
  Hasher._combine(_:)(v9);
  if ((*(void *)&a4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = *(void *)&a4;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  Hasher._combine(_:)(v10);
  return Hasher._finalize()();
}

Swift::Int sub_10064CB48()
{
  return sub_10064CAA0(*(void *)v0, *(unsigned char *)(v0 + 8), *(double *)(v0 + 16), *(double *)(v0 + 24));
}

void sub_10064CB60()
{
  double v1 = *(double *)(v0 + 16);
  double v2 = *(double *)(v0 + 24);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Swift::UInt64 v3 = *(void *)v0;
    Hasher._combine(_:)(1u);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = v3;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    Hasher._combine(_:)(v4);
  }

  sub_10064D048(v1, v2);
}

Swift::Int sub_10064CBE8()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  double v3 = *(double *)(v0 + 16);
  double v4 = *(double *)(v0 + 24);
  Hasher.init(_seed:)();
  if (v2 == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    Hasher._combine(_:)(1u);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = v1;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    Hasher._combine(_:)(v5);
  }
  sub_10064D048(v3, v4);
  return Hasher._finalize()();
}

BOOL sub_10064CC78(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)a1 != *(double *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return *(double *)(a1 + 24) == *(double *)(a2 + 24) && *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

uint64_t sub_10064CCC8()
{
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for HorizontalStackView()
{
  return self;
}

ValueMetadata *type metadata accessor for HorizontalStackView.CacheKey()
{
  return &type metadata for HorizontalStackView.CacheKey;
}

ValueMetadata *type metadata accessor for TTRIRemindersListHashtagCollectionCell.UpdateFlags()
{
  return &type metadata for TTRIRemindersListHashtagCollectionCell.UpdateFlags;
}

uint64_t destroy for TTRIRemindersListHashtagCollectionCell.HashtagSelector(id *a1)
{
  return swift_release();
}

void *_s9Reminders38TTRIRemindersListHashtagCollectionCellC15HashtagSelectorVwCP_0(void *a1, uint64_t a2)
{
  double v3 = *(void **)a2;
  double v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  a1[2] = *(void *)(a2 + 16);
  id v5 = v3;
  id v6 = v4;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TTRIRemindersListHashtagCollectionCell.HashtagSelector(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  uint64_t v7 = *(void **)(a2 + 8);
  Swift::UInt64 v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TTRIRemindersListHashtagCollectionCell.HashtagSelector(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TTRIRemindersListHashtagCollectionCell.HashtagSelector()
{
  return &type metadata for TTRIRemindersListHashtagCollectionCell.HashtagSelector;
}

unint64_t sub_10064CE94()
{
  unint64_t result = qword_1007AD318;
  if (!qword_1007AD318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD318);
  }
  return result;
}

unint64_t sub_10064CEEC()
{
  unint64_t result = qword_1007AD320;
  if (!qword_1007AD320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD320);
  }
  return result;
}

unint64_t sub_10064CF44()
{
  unint64_t result = qword_1007AD328;
  if (!qword_1007AD328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD328);
  }
  return result;
}

unint64_t sub_10064CF9C()
{
  unint64_t result = qword_1007AD330;
  if (!qword_1007AD330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD330);
  }
  return result;
}

unint64_t sub_10064CFF4()
{
  unint64_t result = qword_1007AD338;
  if (!qword_1007AD338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD338);
  }
  return result;
}

void sub_10064D048(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  Hasher._combine(_:)(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  Hasher._combine(_:)(v4);
}

uint64_t sub_10064D09C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  Swift::UInt64 v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

char *sub_10064D0D4(char *result)
{
  uint64_t v1 = result;
  uint64_t v2 = OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags;
  uint64_t v3 = *(void *)&result[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags];
  *(void *)&result[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = v3 | 1;
  if ((v3 | 1) != v3)
  {
    uint64_t result = (char *)[result setNeedsLayout];
    uint64_t v3 = *(void *)&v1[v2];
    if ((v3 & 5) != 0)
    {
      uint64_t result = (char *)[v1 invalidateIntrinsicContentSize];
      uint64_t v3 = *(void *)&v1[v2];
    }
  }
  *(void *)&v1[v2] = v3 | 4;
  if ((v3 | 4) != v3)
  {
    uint64_t result = (char *)[v1 setNeedsLayout];
    if ((v1[v2] & 5) != 0)
    {
      return (char *)[v1 invalidateIntrinsicContentSize];
    }
  }
  return result;
}

void sub_10064D19C()
{
  *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v1 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_viewModel];
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.HashtagsState();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_allowsExcludedSelection] = 0;
  *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_selectionDescriptionLabel] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector];
  v3[1] = 0;
  _OWORD v3[2] = 0;
  *uint64_t v3 = 0;
  static REMHashtagLabelSpecifier.labels(_:)();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_updateFlags] = 7;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_10064D2B8(id a1, double a2)
{
  id v5 = [v2 containerView];

  if (v5 == a1)
  {
    if (*(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector])
    {
      uint64_t v6 = *(void *)&v2[OBJC_IVAR____TtC9Reminders38TTRIRemindersListHashtagCollectionCell_hashtagSelector + 8]
         + OBJC_IVAR____TtC9RemindersP33_A9D13F37E55CE2918CCED93628D156D919HorizontalStackView_rootStackViewWidth;
      *(double *)uint64_t v6 = a2;
      *(unsigned char *)(v6 + 8) = 0;
    }
  }
}

unint64_t sub_10064D340()
{
  return sub_10064C2E4();
}

unint64_t sub_10064D34C()
{
  return sub_10064C3F0();
}

uint64_t sub_10064D358(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10064D3A0()
{
  unint64_t result = qword_1007AD360;
  if (!qword_1007AD360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007AD360);
  }
  return result;
}

void *sub_10064D3F4(void *result, void *a2)
{
  if (result)
  {

    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_10064D43C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_10064D4A0(void *result, void *a2)
{
  if (result)
  {
    id v3 = result;
    id v4 = a2;
    return (void *)swift_retain();
  }
  return result;
}

uint64_t sub_10064D4E8(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    id v3 = a3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_10064D528(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10064D588()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakAssign();
  uint64_t v1 = swift_unknownObjectWeakLoadStrong();
  if (v1)
  {
    uint64_t v2 = v1;
    swift_unknownObjectRelease();
    if (Strong) {
      BOOL v3 = v2 == Strong;
    }
    else {
      BOOL v3 = 0;
    }
    if (v3)
    {
      swift_unknownObjectRelease();
      goto LABEL_10;
    }
  }
  else if (!Strong)
  {
    goto LABEL_10;
  }
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  sub_10064D644(v4);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
LABEL_10:

  return swift_unknownObjectRelease();
}

void sub_10064D644(uint64_t a1)
{
  id v3 = [v1 contentView];
  uint64_t v4 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction];
  swift_beginAccess();
  id v5 = *(void **)v4;
  if (*(void *)v4)
  {
    [v3 removeInteraction:*(void *)v4];

    *(void *)uint64_t v4 = 0;
  }
  if (a1)
  {
    sub_1000368FC(0, (unint64_t *)&unk_1007AD540);
    ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain_n();
    id v7 = [objc_allocWithZone(ObjCClassFromMetadata) initWithDelegate:a1];
    swift_unknownObjectRelease();
    [v7 _setLiftMoveHysteresis:1.0];
    [v7 _setPointerLiftMoveHysteresis:1.0];
    [v7 _setCancellationTimerEnabled:0];
    id v8 = v7;
    [v3 addInteraction:v8];

    swift_unknownObjectRelease();
    *(void *)uint64_t v4 = v8;
  }
  swift_endAccess();

  id v9 = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_100650354);
  Swift::UInt64 v10 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_reorderControlDragInteraction];
  swift_beginAccess();
  unint64_t v11 = *(void **)v10;
  if (*(void *)v10)
  {
    [v9 removeInteraction:*(void *)v10];

    *(void *)Swift::UInt64 v10 = 0;
  }
  if (a1)
  {
    sub_1000368FC(0, (unint64_t *)&unk_1007AD540);
    char v12 = (objc_class *)swift_getObjCClassFromMetadata();
    swift_unknownObjectRetain_n();
    id v13 = [objc_allocWithZone(v12) initWithDelegate:a1];
    swift_unknownObjectRelease();
    [v13 _setLiftMoveHysteresis:1.0];
    [v13 _setPointerLiftMoveHysteresis:1.0];
    [v13 _setCancellationTimerEnabled:0];
    [v13 _setLiftDelay:0.04];
    [v13 _setPointerLiftDelay:0.04];
    id v14 = v13;
    [v9 addInteraction:v14];

    swift_unknownObjectRelease();
    *(void *)Swift::UInt64 v10 = v14;
  }
  swift_endAccess();
}

id sub_10064D908()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView);
  }
  else
  {
    id v4 = sub_10064FA34(v0);
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_10064D96C()
{
  uint64_t v1 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  id v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v6);
  unint64_t v11 = (char *)&v28 - v10;
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver);
  if (!v12)
  {
    __break(1u);
    return result;
  }
  uint64_t v13 = v12 + *(void *)(*(void *)v12 + 88);
  swift_beginAccess();
  uint64_t v14 = type metadata accessor for TTRBoardEditableColumnHeaderViewModel();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v13, 1, v14);
  if (!result)
  {
    sub_100520C78(v13 + *(int *)(v14 + 20), (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    sub_100652918((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    id v15 = sub_10064D908();
    id v16 = [v15 text];

    if (!v16) {
      goto LABEL_9;
    }
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v19 = v18;

    objc_super v20 = &v11[*(int *)(v4 + 20)];
    if (v17 == *(void *)v20 && v19 == *((void *)v20 + 1))
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v22 & 1) == 0)
      {
LABEL_9:
        Swift::String v23 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule);
        swift_beginAccess();
        uint64_t v24 = *v23;
        if (v24)
        {
          sub_100520C78((uint64_t)v11, (uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
          uint64_t v25 = v24 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
          swift_beginAccess();
          swift_unknownObjectRetain();
          sub_1004CE3B4((uint64_t)v3, v25, (uint64_t *)&unk_10079CA20);
          swift_endAccess();
          sub_10051F58C();
          sub_10003B6F8((uint64_t)v3, (uint64_t *)&unk_10079CA20);
          swift_unknownObjectRelease();
        }
        else
        {
          id v26 = sub_10064D908();
          NSString v27 = String._bridgeToObjectiveC()();
          [v26 setText:v27];
        }
      }
    }
    return sub_100652980((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
  }
  return result;
}

id sub_10064DD24(double a1, double a2, double a3, double a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v4[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver] = 0;
  *(void *)&v4[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_unsupportedTextDropHandler;
  id v11 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler());
  uint64_t v12 = v4;
  *(void *)&v4[v10] = [v11 init];
  *(void *)&v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction] = 0;
  *(void *)&v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_reorderControlDragInteraction] = 0;
  uint64_t v13 = &v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
  *(_OWORD *)uint64_t v13 = 0u;
  *((_OWORD *)v13 + 1) = 0u;
  *((_OWORD *)v13 + 2) = 0u;
  v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode] = 0;
  *(void *)&v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView] = 0;
  *(void *)&v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox] = 0;
  *(void *)&v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton] = 0;
  *(void *)&v12[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl] = 0;

  v16.receiver = v12;
  v16.super_class = ObjectType;
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  sub_10064DE98();

  return v14;
}

uint64_t sub_10064DE98()
{
  uint64_t v1 = sub_10003B754(&qword_100789178);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754(&qword_100789970);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_10003B754((uint64_t *)&unk_1007AD530);
  swift_allocObject();
  *(void *)&v0[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver] = TTRViewModelObserver.init(didReceiveNewValue:)();
  swift_release();
  static UIBackgroundConfiguration.clear()();
  uint64_t v11 = type metadata accessor for UIConfigurationColorTransformer();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
  UIBackgroundConfiguration.backgroundColorTransformer.setter();
  [v0 setAutomaticallyUpdatesBackgroundConfiguration:0];
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v3, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
  UICollectionViewCell.backgroundConfiguration.setter();
  id v12 = [v0 containerView];
  [v12 setDebugBoundingBoxesEnabled:0];

  sub_10065063C();
  sub_10064EBD0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

id sub_10064E184(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver] = 0;
  *(void *)&v2[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  uint64_t v5 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_unsupportedTextDropHandler;
  id v6 = objc_allocWithZone((Class)type metadata accessor for TTRIUnsupportedTextDropHandler());
  uint64_t v7 = v2;
  *(void *)&v2[v5] = [v6 init];
  *(void *)&v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_reorderControlDragInteraction] = 0;
  uint64_t v8 = &v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
  *(_OWORD *)uint64_t v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___nameTextView] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl] = 0;

  v13.receiver = v7;
  v13.super_class = ObjectType;
  [super initWithCoder:a1];
  id v10 = v9;
  if (v9)
  {
    id v11 = v9;
    sub_10064DE98();
  }
  return v10;
}

uint64_t sub_10064E308()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10003B754((uint64_t *)&unk_10079CA20);
  double v4 = __chkstk_darwin(v3 - 8);
  id v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14.receiver = v1;
  v14.super_class = ObjectType;
  uint64_t result = (uint64_t)[v14 prepareForReuse:v4];
  if (*(void *)&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver])
  {
    swift_retain();
    TTRViewModelObserver.unsubscribe()();
    swift_release();
    id v8 = sub_10064D908();
    [v8 setText:0];

    id v9 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
    uint64_t result = swift_beginAccess();
    uint64_t v10 = *(void *)v9;
    if (v10)
    {
      uint64_t v11 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v6, 1, 1, v11);
      uint64_t v12 = v10 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
      swift_beginAccess();
      swift_unknownObjectRetain();
      sub_1004CE3B4((uint64_t)v6, v12, (uint64_t *)&unk_10079CA20);
      swift_endAccess();
      sub_10051F58C();
      sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_10079CA20);
      return swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10064E4FC()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_10003B754(&qword_100789178);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v17 - v7;
  Class isa = UICellConfigurationState._bridgeToObjectiveC()().super.super.isa;
  v17.receiver = v1;
  v17.super_class = ObjectType;
  [super _bridgedUpdateConfigurationUsingState:isa];

  UICollectionViewCell.backgroundConfiguration.getter();
  uint64_t v10 = type metadata accessor for UIBackgroundConfiguration();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10))
  {
    sub_10003B694((uint64_t)v8, (uint64_t)v5, &qword_100789178);
    UICollectionViewCell.backgroundConfiguration.setter();
    sub_10003B6F8((uint64_t)v8, &qword_100789178);
  }
  else
  {
    char v11 = UICellConfigurationState.isPinned.getter();
    uint64_t v12 = self;
    objc_super v13 = &selRef_systemBackgroundColor;
    if ((v11 & 1) == 0) {
      objc_super v13 = &selRef_clearColor;
    }
    id v14 = [v12 *v13];
    UIBackgroundConfiguration.backgroundColor.setter();
    UICollectionViewCell.backgroundConfiguration.setter();
  }
  char v15 = UICellConfigurationState.isEditing.getter();
  int v16 = v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode];
  v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode] = v15 & 1;
  if ((v15 & 1) != v16) {
    sub_10064EBD0();
  }
}

uint64_t sub_10064E7BC()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100652114;
  *(void *)(v3 + 24) = v2;
  v8[4] = sub_1000499FC;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100021888;
  v8[3] = &unk_100755AD0;
  uint64_t v4 = _Block_copy(v8);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performWithoutAnimation:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10064E964()
{
  uint64_t v1 = self;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_1006520F8;
  *(void *)(v3 + 24) = v2;
  v8[4] = sub_1000218B0;
  v8[5] = v3;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_100021888;
  v8[3] = &unk_100755A58;
  uint64_t v4 = _Block_copy(v8);
  id v5 = v0;
  swift_retain();
  swift_release();
  [v1 performWithoutAnimation:v4];
  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10064EB0C(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule);
  swift_beginAccess();
  sub_1004CE3B4(a1, (uint64_t)v3, (uint64_t *)&unk_1007AD520);
  swift_endAccess();
  uint64_t v4 = *v3;
  if (v4)
  {
    *(void *)(v4 + 40) = &off_1007559C8;
    swift_unknownObjectWeakAssign();
    swift_unknownObjectRetain();
    id v5 = (char *)sub_10064D908();
    sub_100520368(v5, 1);
    swift_unknownObjectRelease();
  }
  return sub_10003B6F8(a1, (uint64_t *)&unk_1007AD520);
}

void sub_10064EBD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TTRRemindersListViewModel.ItemID();
  __chkstk_darwin(v2 - 8);
  uint64_t v91 = (char *)&v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v88 = (uint64_t)&v86 - v8;
  uint64_t v9 = sub_10003B754((uint64_t *)&unk_100788DC0);
  __chkstk_darwin(v9 - 8);
  uint64_t v90 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v11);
  objc_super v13 = (char *)&v86 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.Item();
  uint64_t v89 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v96 = (uint64_t)&v86 - v18;
  uint64_t v94 = (void *)type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t v95 = (unsigned __int8 *)*(v94 - 1);
  __chkstk_darwin(v94);
  uint64_t v93 = (uint64_t)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = v19;
  __chkstk_darwin(v20);
  uint64_t v98 = (uint64_t)&v86 - v21;
  uint64_t v22 = sub_10003B754((uint64_t *)&unk_1007AD510);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for TTRBoardEditableColumnHeaderViewModel();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v97 = (unsigned __int8 *)&v86 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void *)&v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver];
  if (!v28) {
    goto LABEL_35;
  }
  uint64_t v29 = v28 + *(void *)(*(void *)v28 + 88);
  swift_beginAccess();
  sub_10003B694(v29, (uint64_t)v24, (uint64_t *)&unk_1007AD510);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25) != 1)
  {
    uint64_t v34 = (uint64_t)v97;
    sub_100652918((uint64_t)v24, (uint64_t)v97, (uint64_t (*)(void))&type metadata accessor for TTRBoardEditableColumnHeaderViewModel);
    uint64_t v35 = v98;
    sub_100520C78(v34 + *(int *)(v25 + 20), v98, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    uint64_t v36 = v96;
    sub_100520C78(v35, v96, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    sub_100520C78(v36, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_100652918((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      int v37 = v13[*(int *)(v11 + 32)];
      sub_100652980((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
      if (v37 == 1)
      {
        uint64_t v38 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_delegate];
        uint64_t Strong = swift_unknownObjectWeakLoadStrong();
        int v40 = v94;
        if (Strong)
        {
          uint64_t v87 = *((void *)v38 + 1);
          char v41 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
          swift_beginAccess();
          if (*(void *)v41)
          {
            uint64_t v42 = *(void *)v41 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
            swift_beginAccess();
            uint64_t v43 = v88;
            sub_10003B694(v42, v88, (uint64_t *)&unk_10079CA20);
            if ((*((unsigned int (**)(uint64_t, uint64_t, void *))v95 + 6))(v43, 1, v40))
            {
              swift_unknownObjectRetain();
              sub_10003B6F8(v43, (uint64_t *)&unk_10079CA20);
              uint64_t v44 = v90;
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v90, 1, 1, v14);
            }
            else
            {
              uint64_t v82 = v93;
              sub_100520C78(v43, v93, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
              swift_unknownObjectRetain();
              sub_10003B6F8(v43, (uint64_t *)&unk_10079CA20);
              uint64_t v44 = v90;
              sub_100520C78(v82, v90, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
              sub_100652980(v82, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v89 + 56))(v44, 0, 1, v14);
            }
            swift_unknownObjectRelease();
          }
          else
          {
            uint64_t v44 = v90;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56))(v90, 1, 1, v14);
          }
          uint64_t ObjectType = swift_getObjectType();
          uint64_t v84 = *(void *)(v87 + 8);
          char v85 = (*(uint64_t (**)(char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 8))(v1, &off_1007559C8, v36, v44, ObjectType, v84);
          sub_10003B6F8(v44, (uint64_t *)&unk_100788DC0);
          if (v85)
          {
            (*(void (**)(long long *__return_ptr, char *, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v84 + 16))(&v100, v1, &off_1007559C8, v36, ObjectType, v84);
            sub_10064EB0C((uint64_t)&v100);
          }
          swift_unknownObjectRelease();
          LODWORD(v90) = 1;
          uint64_t v35 = v98;
          goto LABEL_15;
        }
        LODWORD(v90) = 1;
        uint64_t v35 = v98;
LABEL_14:
        long long v101 = 0u;
        long long v102 = 0u;
        long long v100 = 0u;
        sub_10064EB0C((uint64_t)&v100);
LABEL_15:
        uint64_t v45 = v97;
        uint64_t v46 = v35 + *((int *)v40 + 5);
        long long v47 = *(_OWORD *)(v46 + 64);
        long long v48 = *(_OWORD *)(v46 + 96);
        long long v105 = *(_OWORD *)(v46 + 80);
        *(_OWORD *)id v106 = v48;
        *(_OWORD *)&v106[10] = *(_OWORD *)(v46 + 106);
        long long v49 = *(_OWORD *)(v46 + 16);
        long long v100 = *(_OWORD *)v46;
        long long v50 = *(_OWORD *)(v46 + 32);
        long long v51 = *(_OWORD *)(v46 + 48);
        long long v101 = v49;
        long long v102 = v50;
        long long v103 = v51;
        long long v104 = v47;
        sub_100050EC4((uint64_t)&v100);
        TTRRemindersListEditableSectionNameViewModel.placeholderTitle(listLayout:)();
        if (v52)
        {
          id v53 = objc_allocWithZone((Class)NSAttributedString);
          NSString v54 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          uint64_t v94 = [v53 initWithString:v54];
        }
        else
        {
          uint64_t v94 = 0;
        }
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v55 = (uint64_t)v91;
          TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
          if (swift_unknownObjectWeakLoadStrong())
          {
            Class v56 = sub_1000C86F0(v55);
            swift_unknownObjectRelease();
          }
          else
          {
            Class v56 = 0;
          }
          swift_unknownObjectRelease();
          sub_100652980(v55, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.ItemID);
        }
        else
        {
          Class v56 = 0;
        }
        id v57 = [v1 containerView];
        [v57 setUserInteractionEnabled:*v45];

        id v58 = [v1 containerView];
        uint64_t v59 = v93;
        sub_100520C78(v98, v93, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
        unint64_t v60 = (v95[80] + 153) & ~(unint64_t)v95[80];
        unint64_t v61 = (v92 + v60 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v62 = swift_allocObject();
        long long v63 = v105;
        long long v64 = *(_OWORD *)v106;
        long long v65 = v103;
        *(_OWORD *)(v62 + 80) = v104;
        *(_OWORD *)(v62 + 96) = v63;
        *(_OWORD *)(v62 + 112) = v64;
        *(_OWORD *)(v62 + 122) = *(_OWORD *)&v106[10];
        long long v66 = v101;
        long long v67 = v102;
        *(_OWORD *)(v62 + 16) = v100;
        *(_OWORD *)(v62 + 32) = v66;
        *(_OWORD *)(v62 + 48) = v67;
        *(_OWORD *)(v62 + 64) = v65;
        *(void *)(v62 + 144) = v1;
        *(unsigned char *)(v62 + 152) = v90;
        sub_100652918(v59, v62 + v60, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
        uint64_t v68 = v94;
        *(void *)(v62 + v61) = v94;
        *(void *)(v62 + ((v61 + 15) & 0xFFFFFFFFFFFFFFF8)) = v56;
        uint64_t v69 = swift_allocObject();
        *(void *)(v69 + 16) = sub_100652864;
        *(void *)(v69 + 24) = v62;
        aBlock[4] = sub_1000499FC;
        aBlock[5] = v69;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_100021888;
        aBlock[3] = &unk_100755B48;
        char v70 = _Block_copy(aBlock);
        sub_100050EC4((uint64_t)&v100);
        uint64_t v71 = v56;
        swift_retain();
        id v72 = v1;
        char v73 = v68;
        swift_release();
        [v58 performBatchUpdates:v70];

        _Block_release(v70);
        LOBYTE(v68) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v68 & 1) == 0)
        {
          id v74 = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_100650354);
          v75._object = (void *)0x80000001006C28C0;
          v76._uint64_t countAndFlagsBits = 0x20726564726F6552;
          v76._object = (void *)0xEA00000000004025;
          v75._uint64_t countAndFlagsBits = 0xD000000000000066;
          TTRLocalizedString(_:comment:)(v76, v75);
          sub_10003B754((uint64_t *)&unk_100788EE0);
          uint64_t v77 = swift_allocObject();
          *(_OWORD *)(v77 + 16) = xmmword_10066C6F0;
          uint64_t v95 = v73;
          id v78 = v71;
          uint64_t v79 = *(void *)v46;
          uint64_t v80 = *(void *)(v46 + 8);
          *(void *)(v77 + 56) = &type metadata for String;
          *(void *)(v77 + 64) = sub_1000965C8();
          *(void *)(v77 + 32) = v79;
          *(void *)(v77 + 40) = v80;
          swift_bridgeObjectRetain();
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          NSString v81 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v74 setAccessibilityLabel:v81];

          sub_100651224();
          sub_10005102C((uint64_t)&v100);

          sub_100652980(v96, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
          sub_100652980(v98, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
          sub_100652980((uint64_t)v97, (uint64_t (*)(void))&type metadata accessor for TTRBoardEditableColumnHeaderViewModel);
          swift_release();
          return;
        }
        __break(1u);
LABEL_35:
        __break(1u);
        return;
      }
    }
    else
    {
      sub_100652980((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
    }
    LODWORD(v90) = 0;
    int v40 = v94;
    goto LABEL_14;
  }
  sub_10003B6F8((uint64_t)v24, (uint64_t *)&unk_1007AD510);
  id v30 = sub_10064D908();
  [v30 setText:0];

  id v31 = &v1[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule];
  swift_beginAccess();
  uint64_t v32 = *(void *)v31;
  if (v32)
  {
    (*((void (**)(char *, uint64_t, uint64_t, void *))v95 + 7))(v6, 1, 1, v94);
    uint64_t v33 = v32 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1004CE3B4((uint64_t)v6, v33, (uint64_t *)&unk_10079CA20);
    swift_endAccess();
    sub_10051F58C();
    sub_10003B6F8((uint64_t)v6, (uint64_t *)&unk_10079CA20);
    swift_unknownObjectRelease();
  }
  sub_100650A40(0, 0, (uint64_t)v1);
}

id sub_10064FA34(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for TTRIRemindersListEditableSectionNameTextView());
  uint64_t v3 = (void *)TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  id v4 = v3;
  uint64_t v5 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  [v4 setFont:v5];

  id v6 = [v4 textContainer];
  [v6 setLineBreakMode:4];

  id v7 = [v4 textContainer];
  [v7 setWidthTracksTextView:1];

  sub_1000368FC(0, (unint64_t *)&unk_1007885D0);
  UITextDraggable<>.disableDragInteraction_rdar93793341()();
  [v4 setTextDropDelegate:*(void *)(a1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_unsupportedTextDropHandler)];
  UIAccessibilityTraits v8 = UIAccessibilityTraitHeader;
  id v9 = v4;
  unint64_t v10 = (unint64_t)[v9 accessibilityTraits];
  if ((v8 & ~v10) != 0) {
    UIAccessibilityTraits v11 = v8;
  }
  else {
    UIAccessibilityTraits v11 = 0;
  }
  [v9 setAccessibilityTraits:v11 | v10];

  LODWORD(v12) = 1132068864;
  [v9 setLayoutSize:NUIContainerViewSizeUnbounded[0] withContentPriority:NUIContainerViewSizeUnbounded[1] v12];
  return v9;
}

id sub_10064FC00()
{
  uint64_t v1 = OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___accessoryBox);
  }
  else
  {
    type metadata accessor for AccessoryBoxView();
    id v4 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    [v4 setVerticalAlignment:3];
    [v4 setHorizontalAlignment:0];
    [v4 setCustomAlignmentRectInsets:5.0, 0.0, 5.0, 0.0];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    id v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_10064FCC0()
{
  uint64_t v0 = type metadata accessor for UIButton.Configuration.CornerStyle();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v10 = (char *)&v19 - v9;
  static UIButton.Configuration.plain()();
  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [self systemImageNamed:v11];

  UIButton.Configuration.image.setter();
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  objc_super v13 = (void *)static UIFont.roundedSubheadlineSemiboldFont.getter();
  id v14 = [self configurationWithFont:v13];

  UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
  id v15 = [self tertiaryLabelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v0);
  UIButton.Configuration.cornerStyle.setter();
  type metadata accessor for TTRIExpandedHitTestButton();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v7, v10, v4);
  int v16 = (void *)UIButton.init(configuration:primaryAction:)();
  [v16 setShowsMenuAsPrimaryAction:1];
  [v16 setPointerInteractionEnabled:1];
  id v17 = v16;
  UIButton.pointerStyleProvider.setter();

  (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  return v17;
}

uint64_t sub_10064FFBC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_10003B754(&qword_10078ED38);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for UIPointerEffect();
  uint64_t v7 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UIPointerShape();
  uint64_t v11 = *(void *)(v10 - 8);
  double v12 = __chkstk_darwin(v10);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  [a1 bounds];
  CGRect v36 = CGRectInset(v35, -3.0, -3.0);
  double x = v36.origin.x;
  double y = v36.origin.y;
  double width = v36.size.width;
  double height = v36.size.height;
  uint64_t v19 = (void *)UIPointerEffect.preview.getter();
  id v20 = [v19 target];

  id v21 = [v20 container];
  [a1 convertRect:v21 toCoordinateSpace:x, y, width, height];
  CGFloat v23 = v22;
  CGFloat v25 = v24;
  CGFloat v27 = v26;
  CGFloat v29 = v28;

  v37.origin.double x = v23;
  v37.origin.double y = v25;
  v37.size.double width = v27;
  v37.size.double height = v29;
  CGFloat v30 = CGRectGetHeight(v37);
  *(CGFloat *)id v14 = v23;
  *((CGFloat *)v14 + 1) = v25;
  *((CGFloat *)v14 + 2) = v27;
  *((CGFloat *)v14 + 3) = v29;
  *((CGFloat *)v14 + 4) = v30 * 0.5;
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for UIPointerShape.roundedRect(_:), v10);
  sub_1000368FC(0, &qword_10078ED40);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v34);
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v6, v14, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v6, 0, 1, v10);
  uint64_t v31 = UIPointerStyle.init(effect:shape:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v31;
}

id sub_1006502F4(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v6 = (void *)a2();
    uint64_t v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    uint64_t v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100650354()
{
  NSString v0 = String._bridgeToObjectiveC()();
  id v1 = [self _systemImageNamed:v0];

  id v2 = [objc_allocWithZone((Class)type metadata accessor for TTRIExpandedHitTestImageView()) initWithImage:v1];
  CGAffineTransformMakeRotation(&v20, 1.57079633);
  [v2 setTransform:&v20];
  uint64_t v3 = self;
  id v4 = v2;
  id v5 = [v3 tertiaryLabelColor];
  [v4 setTintColor:v5];

  [v4 setIsAccessibilityElement:1];
  id v6 = v4;
  v7._uint64_t countAndFlagsBits = 0xD000000000000038;
  v8._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v7._object = (void *)0x80000001006C2950;
  v8._object = (void *)0x80000001006C2990;
  TTRLocalizedString(_:comment:)(v7, v8);
  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v6 setAccessibilityHint:v9];

  sub_10003B754((uint64_t *)&unk_100791C60);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_10066C6F0;
  id v11 = v6;
  v12._uint64_t countAndFlagsBits = 0xD000000000000031;
  v12._object = (void *)0x80000001006C29D0;
  v13._uint64_t countAndFlagsBits = 0x726564726F6552;
  v13._object = (void *)0xE700000000000000;
  *(Swift::String *)(v10 + 32) = TTRLocalizedString(_:comment:)(v13, v12);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v11 setAccessibilityUserInputLabels:isa];

  [v11 setAccessibilityRespondsToUserInteraction:1];
  UIAccessibilityTraits v15 = UIAccessibilityTraitImage;
  id v16 = v11;
  unint64_t v17 = (unint64_t)[v16 accessibilityTraits];
  uint64_t v18 = -1;
  if ((v17 & v15) != 0) {
    uint64_t v18 = ~v15;
  }
  [v16 setAccessibilityTraits:v18 & v17];

  return v16;
}

void sub_1006505E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    sub_10064EBD0();
  }
}

uint64_t sub_10065063C()
{
  id v1 = [v0 containerView];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100652A60;
  *(void *)(v3 + 24) = v2;
  v9[4] = sub_1000499FC;
  v9[5] = v3;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  _OWORD v9[2] = sub_100021888;
  v9[3] = &unk_100755BE8;
  id v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  swift_retain();
  swift_release();
  [v5 performBatchUpdates:v4];

  _Block_release(v4);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1006507B8(void *a1)
{
  [a1 setAxis:0];
  [a1 setAlignment:3];
  [a1 setArrangedSubviewRemovalPolicy:2];
  [a1 setSpacing:12.0];
  [a1 setDirectionalLayoutMargins:12.0, 0.0, 8.0, 0.0];
  id v2 = sub_10064FC00();
  sub_10003B754((uint64_t *)&unk_1007894B0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_10066C430;
  *(void *)(v3 + 32) = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton, (uint64_t (*)(void))sub_10064FCC0);
  *(void *)(v3 + 40) = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_100650354);
  specialized Array._endMutation()();
  sub_1000368FC(0, (unint64_t *)&qword_100788600);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v2 setArrangedSubviews:isa];

  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_10066C430;
  *(void *)(v5 + 32) = sub_10064D908();
  *(void *)(v5 + 40) = sub_10064FC00();
  specialized Array._endMutation()();
  Class v6 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [a1 setArrangedSubviews:v6];

  sub_10003B754((uint64_t *)&unk_1007A3EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = sub_10064D908();
  *(_DWORD *)(inited + 40) = 1132068864;
  *(void *)(inited + 48) = sub_10064FC00();
  *(_DWORD *)(inited + 56) = 1148846080;
  static UIView.setContentPriorities(_:for:)();
  swift_setDeallocating();
  sub_10003B754((uint64_t *)&unk_10078E650);
  return swift_arrayDestroy();
}

void sub_100650A40(uint64_t a1, char a2, uint64_t a3)
{
  id v6 = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton, (uint64_t (*)(void))sub_10064FCC0);
  Swift::String v7 = v6;
  if (a1) {
    uint64_t v8 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode);
  }
  else {
    uint64_t v8 = 1;
  }
  [v6 setHidden:v8];

  id v9 = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___menuButton, (uint64_t (*)(void))sub_10064FCC0);
  [v9 setMenu:a1];

  id v10 = sub_1006502F4(&OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader____lazy_storage___reorderControl, (uint64_t (*)(void))sub_100650354);
  id v11 = v10;
  if (a2) {
    char v12 = 1;
  }
  else {
    char v12 = *(unsigned char *)(a3 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode) ^ 1;
  }
  [v10 setHidden:v12 & 1];

  id v18 = sub_10064FC00();
  id v13 = sub_10064FC00();
  id v14 = [v13 visibleArrangedSubviews];

  if (v14)
  {
    sub_1000368FC(0, (unint64_t *)&qword_100788600);
    unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    BOOL v17 = v16 == 0;
  }
  else
  {
    BOOL v17 = 1;
  }
  [v18 setHidden:v17];
}

void sub_100650C2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v45 = a6;
  uint64_t v42 = a5;
  uint64_t v43 = a4;
  uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem();
  __chkstk_darwin(v9 - 8);
  id v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v42 - v13;
  uint64_t v15 = sub_10003B754(&qword_10078C890);
  __chkstk_darwin(v15 - 8);
  BOOL v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_10003B754((uint64_t *)&unk_10079CA20);
  __chkstk_darwin(v18 - 8);
  CGAffineTransform v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = [self *off_100755C10[*(char *)(a1 + 66)]];
  sub_1000368FC(0, (unint64_t *)&qword_100792CC0);
  double v22 = (void *)static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
  v23.super.Class isa = UIFont.withBoldTrait()().super.isa;

  id v24 = sub_10064D908();
  [v24 setFont:v23.super.isa];

  id v25 = sub_10064D908();
  id v44 = v21;
  [v25 setTextColor:v21];

  id v26 = sub_10064D908();
  id v27 = [self clearColor];
  [v26 setBackgroundColor:v27];

  id v28 = sub_10064D908();
  [v28 setUserInteractionEnabled:a3 & 1];

  CGFloat v29 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_nameModule);
  swift_beginAccess();
  uint64_t v30 = *v29;
  if (v30)
  {
    sub_100520C78(v43, (uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    uint64_t v31 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v20, 0, 1, v31);
    uint64_t v32 = v30 + OBJC_IVAR____TtC9Reminders45TTRIRemindersListEditableSectionNamePresenter_viewModel;
    swift_beginAccess();
    swift_unknownObjectRetain();
    sub_1004CE3B4((uint64_t)v20, v32, (uint64_t *)&unk_10079CA20);
    swift_endAccess();
    sub_10051F58C();
    sub_10003B6F8((uint64_t)v20, (uint64_t *)&unk_10079CA20);
    swift_unknownObjectRelease();
  }
  else
  {
    id v33 = sub_10064D908();
    type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
    NSString v34 = String._bridgeToObjectiveC()();
    [v33 setText:v34];
  }
  id v35 = sub_10064D908();
  [v35 setAttributedPlaceholder:v42];

  TTRRemindersListViewModel.Item.sectionCasesOnly.getter();
  sub_100520C78((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  uint64_t v36 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v36 - 8) + 48))(v11, 1, v36) == 1)
  {
    uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 1, 1, v37);
  }
  else
  {
    sub_100520C78((uint64_t)v11, (uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    sub_100652980((uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
    uint64_t v37 = type metadata accessor for TTRRemindersListViewModel.SectionID();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v17, 0, 1, v37);
  }
  sub_100652980((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem);
  type metadata accessor for TTRRemindersListViewModel.SectionID();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v17, 1, v37) == 1)
  {
    sub_10003B6F8((uint64_t)v17, &qword_10078C890);
LABEL_11:
    char v41 = 0;
  }
  else
  {
    uint64_t v38 = (void *)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
    char v40 = v39;
    sub_100652980((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionID);
    char v41 = 0;
    switch(v40)
    {
      case 1:

        char v41 = 1;
        break;
      case 3:
        break;
      default:

        goto LABEL_11;
    }
  }
  sub_100650A40(v45, v41, a2);
}

uint64_t sub_100651224()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SectionEntityID();
  uint64_t v49 = *(void *)(v2 - 8);
  uint64_t v50 = v2;
  __chkstk_darwin(v2);
  long long v47 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = type metadata accessor for AppEntityID();
  uint64_t v46 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v45 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TTRRemindersListViewModel.Item();
  __chkstk_darwin(v5);
  Swift::String v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v51 = (uint64_t)&v44 - v12;
  uint64_t v13 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v52 = (uint64_t)&v44 - v17;
  uint64_t v18 = type metadata accessor for REMFeatureFlags();
  uint64_t v19 = *(void *)(v18 - 8);
  double v20 = __chkstk_darwin(v18);
  double v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, double))(v19 + 104))(v22, enum case for REMFeatureFlags.viewAnnotation(_:), v18, v20);
  char v23 = REMFeatureFlags.isEnabled.getter();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v22, v18);
  if (v23)
  {
    uint64_t v25 = *(void *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_viewModelObserver);
    if (!v25)
    {
      __break(1u);
      JUMPOUT(0x10065181CLL);
    }
    uint64_t v26 = v25 + *(void *)(*(void *)v25 + 88);
    swift_beginAccess();
    uint64_t v27 = type metadata accessor for TTRBoardEditableColumnHeaderViewModel();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27);
    if (!result)
    {
      sub_100520C78(v26 + *(int *)(v27 + 20), (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      uint64_t v28 = (uint64_t)v15;
      uint64_t v29 = v52;
      sub_100652918(v28, v52, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
      sub_100520C78(v29, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_100652918((uint64_t)v7, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v30 = v51;
        sub_100652918((uint64_t)v10, v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        uint64_t v31 = *(void **)(v30 + *(int *)(v8 + 44));
        if (v31)
        {
          id v32 = v31;
          id v33 = (id)TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
          switch(v34)
          {
            case 1:
              id v35 = (unsigned int *)&enum case for SectionEntityID.sectionless(_:);
              goto LABEL_13;
            case 2:

              goto LABEL_11;
            case 3:
LABEL_11:
              id v33 = v32;
              goto LABEL_12;
            default:
LABEL_12:
              id v35 = (unsigned int *)&enum case for SectionEntityID.sectioned(_:);
LABEL_13:
              id v36 = v33;
              uint64_t v37 = v45;
              AppEntityID.init(objectID:)();
              uint64_t v39 = v46;
              uint64_t v38 = v47;
              uint64_t v40 = v48;
              (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v47, v37, v48);
              uint64_t v41 = *v35;
              uint64_t v43 = v49;
              uint64_t v42 = v50;
              (*(void (**)(char *, uint64_t, uint64_t))(v49 + 104))(v38, v41, v50);
              type metadata accessor for SectionEntity();
              sub_1004CE1D4();
              UIView.setAssociatedAppEntity<A>(entityType:identifier:)();

              (*(void (**)(char *, uint64_t))(v43 + 8))(v38, v42);
              (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v40);
              sub_100652980(v51, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
              uint64_t v29 = v52;
              break;
          }
        }
        else
        {
          sub_100652980(v30, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.SectionHeader);
        }
      }
      else
      {
        sub_100652980((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListViewModel.Item);
      }
      return sub_100652980(v29, (uint64_t (*)(void))&type metadata accessor for TTRRemindersListEditableSectionNameViewModel);
    }
  }
  return result;
}

uint64_t type metadata accessor for TTRIBoardEditableColumnHeader()
{
  return self;
}

id sub_100651934@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id result = (id)swift_getObjectType();
  char v8 = 1;
  double v9 = 0.0;
  double v10 = 0.0;
  double v11 = 0.0;
  double v12 = 0.0;
  switch(a1)
  {
    case 1:
      id v18 = sub_10064D908();
      TTRIShowRemindersEditableCellScrollingTargetProviding<>.rectForScrolling(to:)();
      double v9 = v19;
      double v10 = v20;
      double v11 = v21;
      double v12 = v22;

      goto LABEL_6;
    case 2:
      id v17 = sub_10064D908();
      TTRIShowRemindersEditableCellScrollingTargetProviding<>.rectForScrolling(toCaretIn:)();
      double v9 = *(double *)v27;
      double v10 = *(double *)&v27[1];
      double v11 = *(double *)&v27[2];
      double v12 = *(double *)&v27[3];
      char v8 = v28;

      id result = (id)sub_100347954((uint64_t)v27, (uint64_t)v29);
      if (v29[32]) {
        goto LABEL_7;
      }
      goto LABEL_6;
    case 3:
    case 4:
      goto LABEL_7;
    default:
      [v3 bounds];
      double v9 = v13;
      double v10 = v14;
      double v11 = v15;
      double v12 = v16;
LABEL_6:
      id result = [a2 convertRect:v3 fromCoordinateSpace:v9, v10, v11, v12];
      double v9 = v23;
      double v10 = v24;
      double v11 = v25;
      double v12 = v26;
      char v8 = 0;
LABEL_7:
      *(double *)a3 = v9;
      *(double *)(a3 + 8) = v10;
      *(double *)(a3 + 16) = v11;
      *(double *)(a3 + 24) = v12;
      *(unsigned char *)(a3 + 32) = v8;
      return result;
  }
}

void sub_100651AB4()
{
  id v0 = sub_10064D908();
  type metadata accessor for TTRIRemindersListEditableSectionNameTextView();
  UITextInput<>.ttrBeginEditing()();
}

uint64_t sub_100651B04@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  sub_100651934(a1, a2, (uint64_t)v5);
  return sub_100347954((uint64_t)v5, a3);
}

id sub_100651B44(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100652000(a3);
}

uint64_t type metadata accessor for AccessoryBoxView()
{
  return self;
}

id sub_100651D40@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = sub_10064D908();
  id v5 = [v4 snapshotViewAfterScreenUpdates:0];

  uint64_t v6 = 0;
  if (!v5)
  {
    uint64_t v30 = 0;
    id v31 = 0;
    id result = 0;
    unint64_t v8 = 0;
LABEL_12:
    double v25 = 0;
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v39 = 0;
    uint64_t v42 = 0;
    uint64_t v44 = 0;
    uint64_t v46 = 0;
    uint64_t v48 = 0;
    goto LABEL_13;
  }
  id v7 = sub_10064D908();
  unint64_t v8 = (unint64_t)UIView.snapshotImage()();

  if (!v8)
  {

    uint64_t v30 = 0;
    id v31 = 0;
    id v5 = 0;
    id result = 0;
    goto LABEL_12;
  }
  id v9 = sub_10064FC00();
  unsigned __int8 v10 = [v9 isHidden];

  if ((v10 & 1) != 0
    || (id v11 = sub_10064FC00(),
        id v12 = [v11 snapshotViewAfterScreenUpdates:0],
        v11,
        !v12))
  {
    double v25 = _swiftEmptyArrayStorage;
  }
  else
  {
    id v13 = v12;
    id v14 = sub_10064FC00();
    [v14 bounds];
    uint64_t v16 = v15;
    uint64_t v18 = v17;
    uint64_t v20 = v19;
    uint64_t v22 = v21;

    id v23 = sub_10064FC00();
    char v24 = v2[OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_isEditMode];
    double v25 = sub_100570E44(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v26 = v25[2];
    unint64_t v27 = v25[3];
    unint64_t v28 = v26 + 1;
    if (v26 >= v27 >> 1)
    {
      unint64_t v52 = v26 + 1;
      uint64_t v49 = v25;
      unint64_t v50 = v25[2];
      uint64_t v51 = sub_100570E44((void *)(v27 > 1), v26 + 1, 1, v49);
      unint64_t v26 = v50;
      unint64_t v28 = v52;
      double v25 = v51;
    }
    v25[2] = v28;
    uint64_t v29 = &v25[7 * v26];
    v29[4] = v13;
    v29[5] = v16;
    v29[6] = v18;
    v29[7] = v20;
    v29[8] = v22;
    v29[9] = v23;
    *((unsigned char *)v29 + 80) = v24 ^ 1;
  }
  id v31 = [self systemBackgroundColor];
  [v2 bounds];
  uint64_t v6 = v33;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v30 = v2;
  id v40 = sub_10064D908();
  [v40 bounds];
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;

  id result = sub_10064D908();
LABEL_13:
  *a1 = v6;
  a1[1] = v35;
  a1[2] = v37;
  a1[3] = v39;
  a1[4] = v30;
  a1[5] = v31;
  a1[6] = v5;
  a1[7] = v42;
  a1[8] = v44;
  a1[9] = v46;
  a1[10] = v48;
  a1[11] = result;
  a1[12] = v8;
  a1[13] = v25;
  return result;
}

id sub_100652000(id result)
{
  switch((char)result)
  {
    case 1:
      uint64_t v2 = (id *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction);
      swift_beginAccess();
      id result = *v2;
      if (*v2)
      {
        uint64_t v3 = 0;
        goto LABEL_6;
      }
      break;
    case 3:
      id v4 = (id *)(v1 + OBJC_IVAR____TtC9Reminders29TTRIBoardEditableColumnHeader_dragInteraction);
      swift_beginAccess();
      id result = *v4;
      if (*v4)
      {
        uint64_t v3 = 1;
LABEL_6:
        id result = [result setEnabled:v3];
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1006520C0()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_1006520F8()
{
  return sub_100652120((SEL *)&selRef_layoutSubviews);
}

uint64_t sub_100652104()
{
  return _swift_deallocObject(v0, 32, 7);
}

id sub_100652114()
{
  return sub_100652120((SEL *)&selRef_invalidateIntrinsicContentSize);
}

id sub_100652120(SEL *a1)
{
  v4.receiver = *(id *)(v1 + 16);
  v4.super_class = (Class)swift_getObjectType();
  return [super a1];
}

uint64_t sub_100652164()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100652174()
{
  uint64_t v1 = type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 153) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_bridgeObjectRelease();
  sub_1000510EC(*(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));
  int v5 = *(unsigned __int8 *)(v0 + 136);
  if (v5 != 255) {
    sub_10003B9C0(*(void **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), v5 & 1);
  }

  uint64_t v6 = v0 + v3;
  type metadata accessor for TTRRemindersListViewModel.Item();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
          goto LABEL_25;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
          goto LABEL_6;
        default:
          goto LABEL_26;
      }
      goto LABEL_26;
    case 1u:
      type metadata accessor for TTRRemindersListViewModel.SectionID();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 8u:
        case 9u:
LABEL_25:

          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
        case 6u:
LABEL_6:
          uint64_t v7 = type metadata accessor for Date();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v0 + v3, v7);
          break;
        default:
          break;
      }
LABEL_26:
      uint64_t v20 = type metadata accessor for TTRRemindersListViewModel.SectionHeader();
      uint64_t v21 = v6 + *(int *)(v20 + 20);
      if (*(void *)(v21 + 8))
      {
        swift_bridgeObjectRelease();
        sub_1000510EC(*(void **)(v21 + 16), *(void *)(v21 + 24), *(void *)(v21 + 32), *(void *)(v21 + 40), *(void *)(v21 + 48), *(void *)(v21 + 56), *(unsigned char *)(v21 + 64));
        int v22 = *(unsigned __int8 *)(v21 + 120);
        if (v22 != 255) {
          sub_10003B9C0(*(void **)(v21 + 72), *(void *)(v21 + 80), *(void *)(v21 + 88), *(void *)(v21 + 96), *(void *)(v21 + 104), *(void *)(v21 + 112), v22 & 1);
        }
      }
      id v13 = *(id *)(v6 + *(int *)(v20 + 44));
      goto LABEL_30;
    case 2u:

      unint64_t v8 = (id *)(v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v9 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v8, 1, v9))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_36;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_13;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 3u:

      unint64_t v8 = (id *)(v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v10 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
            goto LABEL_36;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
            goto LABEL_13;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 4u:

      unint64_t v8 = (id *)(v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.ReminderID() + 20));
      uint64_t v11 = type metadata accessor for TTRRemindersListViewModel.SectionID();
      if (!(*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v8, 1, v11))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
          case 8u:
          case 9u:
LABEL_36:
            id v13 = *v8;
            goto LABEL_30;
          case 2u:
          case 3u:
          case 4u:
          case 5u:
          case 6u:
LABEL_13:
            uint64_t v12 = type metadata accessor for Date();
            goto LABEL_23;
          default:
            goto LABEL_31;
        }
      }
      goto LABEL_31;
    case 5u:
      id v13 = *(id *)(v6 + 16);
      goto LABEL_30;
    case 6u:
      id v13 = *(id *)v6;
      goto LABEL_30;
    case 7u:
      uint64_t v14 = type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v0 + v3, 1, v14))
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = v6 + *(int *)(v14 + 20);
        uint64_t v16 = type metadata accessor for REMHashtagLabelSpecifier();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      }
      uint64_t v17 = v6 + *(int *)(type metadata accessor for TTRRemindersListViewModel.HashtagsState() + 20);
      if (!*(void *)(v17 + 8)) {
        goto LABEL_31;
      }
      swift_bridgeObjectRelease();
      id v13 = *(id *)(v17 + 16);
LABEL_30:

LABEL_31:
      uint64_t v23 = v6 + *(int *)(v1 + 20);
      swift_bridgeObjectRelease();
      sub_1000510EC(*(void **)(v23 + 16), *(void *)(v23 + 24), *(void *)(v23 + 32), *(void *)(v23 + 40), *(void *)(v23 + 48), *(void *)(v23 + 56), *(unsigned char *)(v23 + 64));
      int v24 = *(unsigned __int8 *)(v23 + 120);
      if (v24 != 255) {
        sub_10003B9C0(*(void **)(v23 + 72), *(void *)(v23 + 80), *(void *)(v23 + 88), *(void *)(v23 + 96), *(void *)(v23 + 104), *(void *)(v23 + 112), v24 & 1);
      }
      unint64_t v25 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;

      return _swift_deallocObject(v0, v26 + 8, v2 | 7);
    case 8u:
      uint64_t v18 = type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v0 + v3, 1, v18))
      {
        uint64_t v19 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v0 + v3, v19);
      }
      goto LABEL_31;
    case 9u:
      unint64_t v8 = (id *)(v6 + *(int *)(type metadata accessor for TTRRemindersListTips() + 20));
      uint64_t v12 = type metadata accessor for AnyTip();
LABEL_23:
      (*(void (**)(id *, uint64_t))(*(void *)(v12 - 8) + 8))(v8, v12);
      goto LABEL_31;
    default:
      goto LABEL_31;
  }
}

void sub_100652864()
{
  uint64_t v1 = *(void *)(type metadata accessor for TTRRemindersListEditableSectionNameViewModel() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 153) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 144);
  char v5 = *(unsigned char *)(v0 + 152);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_100650C2C(v0 + 16, v4, v5, v0 + v2, v6, v7);
}

uint64_t sub_100652908()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100652918(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100652980(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1006529E0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_100652A18()
{
}

uint64_t sub_100652A20()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100652A60()
{
  return sub_1006507B8(*(void **)(v0 + 16));
}

uint64_t sub_100652A68()
{
  return _swift_deallocObject(v0, 32, 7);
}

BOOL sub_100652A94(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface;
  swift_beginAccess();
  sub_10003B694(v5, (uint64_t)&v15, &qword_100799F30);
  if (*((void *)&v16 + 1))
  {
    sub_100038ED8(&v15, (uint64_t)v17);
    if (*(void *)(a2 + 16))
    {
      uint64_t v6 = UIApplicationOpenURLOptionsSourceApplicationKey;
      uint64_t v7 = sub_10035C1CC();
      if (v8)
      {
        sub_100038DC0(*(void *)(a2 + 56) + 32 * v7, (uint64_t)&v15);
      }
      else
      {
        long long v15 = 0u;
        long long v16 = 0u;
      }

      if (*((void *)&v16 + 1))
      {
        if (swift_dynamicCast())
        {
          if (v13 == 0xD000000000000023 && v14 == 0x80000001006C2AE0)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            uint64_t v10 = 2;
            goto LABEL_15;
          }
          char v12 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v12) {
            goto LABEL_18;
          }
        }
LABEL_14:
        uint64_t v10 = 0;
LABEL_15:
        sub_100038D28(v17, v17[3]);
        BOOL v9 = sub_100308894(a1, v10);
        sub_100038CD8((uint64_t)v17);
        return v9;
      }
    }
    else
    {
      long long v15 = 0u;
      long long v16 = 0u;
    }
    sub_10003B6F8((uint64_t)&v15, &qword_100788D60);
    goto LABEL_14;
  }
  sub_10003B6F8((uint64_t)&v15, &qword_100799F30);
  return 0;
}

BOOL sub_100652C58(void *a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v32 = *(void *)(v5 - 8);
  uint64_t v33 = v5;
  __chkstk_darwin(v5);
  id v31 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Logger();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100785518 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_100018BF8(v7, (uint64_t)qword_1007BBB28);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v11, v7);
  sub_10003B754((uint64_t *)&unk_100788E30);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10066C680;
  *(void *)(inited + 32) = 1701869940;
  *(void *)(inited + 40) = 0xE400000000000000;
  id v13 = [a1 type];
  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v16;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x6F666E4972657375;
  *(void *)(inited + 88) = 0xE800000000000000;
  id v17 = [a1 userInfo];
  if (v17)
  {
    uint64_t v18 = v17;
    sub_10003B754((uint64_t *)&unk_1007AD710);
    uint64_t v19 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else
  {
    uint64_t v19 = 0;
  }
  uint64_t v34 = v19;
  sub_10003B754(&qword_1007AD708);
  uint64_t v20 = String.init<A>(describing:)();
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v20;
  *(void *)(inited + 104) = v21;
  sub_10003D820(inited);
  sub_10001A078();
  swift_bridgeObjectRelease();
  UIApplicationShortcutItem.actionURL.getter();
  uint64_t v23 = v32;
  uint64_t v22 = v33;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v4, 1, v33) == 1)
  {
    sub_10003B6F8((uint64_t)v4, (uint64_t *)&unk_100788DF0);
    int v24 = Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v24, v25))
    {
      unint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Unable to determine action URL for shortcut item", v26, 2u);
      swift_slowDealloc();
    }

    BOOL v27 = 0;
  }
  else
  {
    uint64_t v28 = (uint64_t)v31;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v31, v4, v22);
    unint64_t v29 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
    BOOL v27 = sub_100652A94(v28, v29);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v28, v22);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v27;
}

uint64_t sub_1006530B4(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_1007AD550);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    v24[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v9 = v5;
    id v10 = [v5 actionIdentifier];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    id v5 = v9;
    sub_1000385A8(v11, v13, v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Handling UNNotificationResponse {actionIdentifier: %s}", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t result = swift_allocObject();
  *(unsigned char *)(result + 16) = 0;
  uint64_t v15 = *(void **)&v2[OBJC_IVAR___TTRIWindowSceneController_store];
  if (v15)
  {
    uint64_t v16 = result;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v16;
    *(void *)(v17 + 24) = v2;
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v16;
    *(void *)(v18 + 24) = v2;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v16;
    *(void *)(v19 + 24) = v2;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = v16;
    *(void *)(v20 + 24) = v2;
    v24[0] = (uint64_t)v15;
    v24[1] = (uint64_t)sub_100658C20;
    v24[2] = v17;
    v24[3] = (uint64_t)sub_100658C2C;
    v24[4] = v18;
    v24[5] = (uint64_t)sub_100658C38;
    v24[6] = v19;
    v24[7] = (uint64_t)sub_100658C44;
    v24[8] = v20;
    swift_retain_n();
    uint64_t v21 = v2;
    id v22 = v15;
    sub_100425FB0(v5);
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_beginAccess();
    uint64_t v23 = *(unsigned __int8 *)(v16 + 16);
    swift_release();
    return v23;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100653408(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (uint64_t *)((char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10003B754((uint64_t *)&unk_10078AC20);
  *unint64_t v12 = a1;
  id v13 = a1;
  static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.reminder(_:), v9);
  REMNavigationSpecifier.url.getter();
  unint64_t v14 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a1) = sub_100652A94((uint64_t)v8, v14);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a2 + 16) = a1 & 1;
  return result;
}

uint64_t sub_10065361C(void *a1, uint64_t a2, uint64_t a3)
{
  v19[2] = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (void *)((char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19[1] = a2 + 16;
  id v13 = (char *)v12 + *(int *)(sub_10003B754((uint64_t *)&unk_1007AD760) + 48);
  *unint64_t v12 = a1;
  uint64_t v14 = enum case for REMNavigationSpecifier.ListPathSpecifier.showContents(_:);
  uint64_t v15 = type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v13, v14, v15);
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.list(_:), v9);
  id v16 = a1;
  REMNavigationSpecifier.url.getter();
  unint64_t v17 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a1) = sub_100652A94((uint64_t)v8, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a2 + 16) = a1 & 1;
  return result;
}

uint64_t sub_100653874(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a3;
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (uint64_t *)((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  *unint64_t v12 = a1;
  uint64_t v13 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.select(_:);
  uint64_t v14 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  (*(void (**)(void *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  (*(void (**)(void *, void, uint64_t))(v10 + 104))(v12, enum case for REMNavigationSpecifier.today(_:), v9);
  id v15 = a1;
  REMNavigationSpecifier.url.getter();
  unint64_t v16 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(a1) = sub_100652A94((uint64_t)v8, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(void *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a2 + 16) = a1 & 1;
  return result;
}

uint64_t sub_100653AB4(uint64_t a1, uint64_t a2)
{
  uint64_t v15 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = enum case for REMNavigationSpecifier.SmartListPathSpecifier.showContents(_:);
  uint64_t v12 = type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 104))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for REMNavigationSpecifier.today(_:), v7);
  REMNavigationSpecifier.url.getter();
  unint64_t v13 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
  LOBYTE(v11) = sub_100652A94((uint64_t)v6, v13);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t result = swift_beginAccess();
  *(unsigned char *)(a1 + 16) = v11 & 1;
  return result;
}

uint64_t sub_100653CE8()
{
  uint64_t v0 = type metadata accessor for URL();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  REMNavigationSpecifier.url.getter();
  unint64_t v4 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
  sub_100652A94((uint64_t)v3, v4);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_100653DF0(uint64_t a1, uint64_t a2, unint64_t a3)
{
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100018BF8(v5, (uint64_t)qword_1007AD550);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  oslog = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    swift_bridgeObjectRetain();
    sub_1000385A8(a2, a3, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v7 + 12) = 2112;
    uint64_t v10 = _convertErrorToNSError(_:)();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v8 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Failed to navigate to Spotlight identifier %s, error: %@", (uint8_t *)v7, 0x16u);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
}

uint64_t sub_100654068(void *a1)
{
  uint64_t v168 = type metadata accessor for REMiCloudSharedItemSpecifier();
  uint64_t v167 = *(void *)(v168 - 8);
  uint64_t v2 = __chkstk_darwin(v168);
  unsigned int v171 = (char *)&v165 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unsigned int v166 = (char *)&v165 - v4;
  uint64_t v5 = sub_10003B754((uint64_t *)&unk_100788DF0);
  __chkstk_darwin(v5 - 8);
  int v173 = (char *)&v165 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_10003B754(&qword_1007AD728);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v165 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TTRUserActivityListPayload();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v177 = (void (*)(char *, char *, uint64_t))((char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v179 = *(void *)(v13 - 8);
  uint64_t v180 = v13;
  __chkstk_darwin(v13);
  unsigned int v178 = (uint64_t *)((char *)&v165 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for URL();
  uint64_t v181 = *(void *)(v15 - 8);
  uint64_t v182 = v15;
  uint64_t v16 = __chkstk_darwin(v15);
  unsigned int v170 = (char *)&v165 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  unsigned int v169 = (char *)&v165 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v172 = (char *)&v165 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  unsigned int v174 = (char *)&v165 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  unint64_t v26 = (char *)&v165 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v176 = (uint64_t)&v165 - v28;
  uint64_t v29 = __chkstk_darwin(v27);
  id v31 = (char *)&v165 - v30;
  __chkstk_darwin(v29);
  unsigned int v175 = (char *)&v165 - v32;
  uint64_t v33 = sub_10003B754((uint64_t *)&unk_1007AD730);
  __chkstk_darwin(v33 - 8);
  uint64_t v35 = (char *)&v165 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
  uint64_t v37 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v39 = (char *)&v165 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = NSUserActivity.ttrUserActivityType.getter();
  if (result == 2)
  {
    id v41 = [a1 activityType];
    uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v44 = v43;

    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v42 && v45 == v44)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    char v51 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v51)
    {
LABEL_12:
      swift_bridgeObjectRelease();
      id v52 = [a1 userInfo];
      if (v52)
      {
        id v53 = v52;
        uint64_t v54 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v185 = v55;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v54 + 16) && (unint64_t v56 = sub_10035C79C((uint64_t)&v186), (v57 & 1) != 0))
        {
          sub_100038DC0(*(void *)(v54 + 56) + 32 * v56, (uint64_t)&v189);
        }
        else
        {
          long long v189 = 0u;
          long long v190 = 0u;
        }
        sub_100055AE8((uint64_t)&v186);
        swift_bridgeObjectRelease();
        if (*((void *)&v190 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v64 = v186;
            unint64_t v63 = v187;
            if (qword_1007857B8 != -1) {
              swift_once();
            }
            uint64_t v65 = type metadata accessor for Logger();
            sub_100018BF8(v65, (uint64_t)qword_1007AD550);
            swift_bridgeObjectRetain_n();
            long long v66 = Logger.logObject.getter();
            os_log_type_t v67 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v66, v67))
            {
              uint64_t v68 = (uint8_t *)swift_slowAlloc();
              uint64_t v186 = swift_slowAlloc();
              *(_DWORD *)uint64_t v68 = 136315138;
              swift_bridgeObjectRetain();
              *(void *)&long long v189 = sub_1000385A8(v64, v63, &v186);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v66, v67, "Continuing user activity of CSSearchableItemActionType {uniqueIdentifier: %s}", v68, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            static REMNavigationSpecifier.from(spotlightItemIdentifier:)();
            sub_1000368FC(0, (unint64_t *)&qword_100788E40);
            unsigned int v122 = (void *)static OS_dispatch_queue.main.getter();
            uint64_t v123 = swift_allocObject();
            char v124 = v183;
            *(void *)(v123 + 16) = v183;
            int v125 = v124;
            dispatch thunk of Promise.then<A>(on:closure:)();
            swift_release();

            swift_release();
            uint64_t v126 = swift_allocObject();
            *(void *)(v126 + 16) = v64;
            *(void *)(v126 + 24) = v63;
            swift_bridgeObjectRetain();
            int v127 = (void *)zalgo.getter();
            dispatch thunk of Promise.error(on:closure:)();
            swift_bridgeObjectRelease();
            swift_release();
            swift_release();
            swift_release();

            return 1;
          }
          goto LABEL_31;
        }
      }
      else
      {
        long long v189 = 0u;
        long long v190 = 0u;
      }
      sub_10003B6F8((uint64_t)&v189, &qword_100788D60);
LABEL_31:
      if (qword_1007857B8 != -1) {
        swift_once();
      }
      uint64_t v69 = type metadata accessor for Logger();
      sub_100018BF8(v69, (uint64_t)qword_1007AD550);
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v47, v48)) {
        goto LABEL_76;
      }
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      unint64_t v50 = "Trying to continue user activity of CSSearchableItemActionType, but got no CSSearchableItemActivityIdentifier.";
      goto LABEL_74;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v42 && v82 == v44)
    {
      swift_bridgeObjectRelease();
      uint64_t v84 = v181;
      uint64_t v83 = v182;
      goto LABEL_51;
    }
    char v100 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t v84 = v181;
    uint64_t v83 = v182;
    if (v100)
    {
LABEL_51:
      swift_bridgeObjectRelease();
      id v101 = [a1 userInfo];
      if (v101)
      {
        long long v102 = v101;
        uint64_t v103 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v185 = v104;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v103 + 16) && (unint64_t v105 = sub_10035C79C((uint64_t)&v186), (v106 & 1) != 0))
        {
          sub_100038DC0(*(void *)(v103 + 56) + 32 * v105, (uint64_t)&v189);
        }
        else
        {
          long long v189 = 0u;
          long long v190 = 0u;
        }
        sub_100055AE8((uint64_t)&v186);
        swift_bridgeObjectRelease();
        if (*((void *)&v190 + 1))
        {
          if (swift_dynamicCast())
          {
            uint64_t v109 = v186;
            unint64_t v110 = v187;
            if (qword_1007857B8 != -1) {
              swift_once();
            }
            uint64_t v111 = type metadata accessor for Logger();
            sub_100018BF8(v111, (uint64_t)qword_1007AD550);
            unsigned int v112 = Logger.logObject.getter();
            os_log_type_t v113 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v112, v113))
            {
              uint64_t v114 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v114 = 0;
              _os_log_impl((void *)&_mh_execute_header, v112, v113, "Continuing user activity of CSQueryContinuationActionType", v114, 2u);
              swift_slowDealloc();
            }

            uint64_t v115 = v178;
            *unsigned int v178 = v109;
            v115[1] = v110;
            uint64_t v116 = enum case for REMNavigationSpecifier.SearchPathSpecifier.showContents(_:);
            uint64_t v117 = type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
            (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v117 - 8) + 104))(v115, v116, v117);
            uint64_t v119 = v179;
            uint64_t v118 = v180;
            (*(void (**)(uint64_t *, void, uint64_t))(v179 + 104))(v115, enum case for REMNavigationSpecifier.search(_:), v180);
            uint64_t v120 = (uint64_t)v174;
            REMNavigationSpecifier.url.getter();
            unint64_t v121 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
            BOOL v99 = sub_100652A94(v120, v121);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v120, v83);
            (*(void (**)(uint64_t *, uint64_t))(v119 + 8))(v115, v118);
            return v99;
          }
          goto LABEL_70;
        }
      }
      else
      {
        long long v189 = 0u;
        long long v190 = 0u;
      }
      sub_10003B6F8((uint64_t)&v189, &qword_100788D60);
LABEL_70:
      if (qword_1007857B8 != -1) {
        swift_once();
      }
      uint64_t v128 = type metadata accessor for Logger();
      sub_100018BF8(v128, (uint64_t)qword_1007AD550);
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v47, v48)) {
        goto LABEL_76;
      }
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      unint64_t v50 = "Trying to continue user activity of CSQueryContinuationActionType, but got no CSSearchQueryString.";
      goto LABEL_74;
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v42 && v129 == v44)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v130 = (uint64_t)v173;
    }
    else
    {
      char v131 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v130 = (uint64_t)v173;
      if ((v131 & 1) == 0)
      {
        if (qword_1007857B8 != -1) {
          swift_once();
        }
        uint64_t v148 = type metadata accessor for Logger();
        sub_100018BF8(v148, (uint64_t)qword_1007AD550);
        id v149 = a1;
        uint64_t v47 = Logger.logObject.getter();
        os_log_type_t v150 = static os_log_type_t.error.getter();
        if (!os_log_type_enabled(v47, v150))
        {

          return 0;
        }
        uint64_t v151 = (uint8_t *)swift_slowAlloc();
        uint64_t v186 = swift_slowAlloc();
        *(_DWORD *)uint64_t v151 = 136315138;
        id v152 = [v149 activityType];
        uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v155 = v154;

        *(void *)&long long v189 = sub_1000385A8(v153, v155, &v186);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v47, v150, "Trying to continue unsupported user activity {activityType: %s}", v151, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_75;
      }
    }
    id v132 = [a1 webpageURL];
    if (v132)
    {
      unsigned int v133 = v132;
      unsigned int v134 = v174;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      int v135 = *(void (**)(uint64_t, char *, uint64_t))(v84 + 32);
      v135(v130, v134, v83);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v84 + 56))(v130, 0, 1, v83);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v84 + 48))(v130, 1, v83) != 1)
      {
        unsigned int v136 = v172;
        v135((uint64_t)v172, (char *)v130, v83);
        uint64_t v137 = v83;
        if (qword_1007857B8 != -1) {
          swift_once();
        }
        uint64_t v138 = type metadata accessor for Logger();
        uint64_t v139 = sub_100018BF8(v138, (uint64_t)qword_1007AD550);
        int v140 = v169;
        int v177 = *(void (**)(char *, char *, uint64_t))(v84 + 16);
        v177(v169, v136, v137);
        uint64_t v176 = v139;
        int v141 = Logger.logObject.getter();
        os_log_type_t v142 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v141, v142))
        {
          unsigned int v143 = (uint8_t *)swift_slowAlloc();
          uint64_t v186 = swift_slowAlloc();
          *(_DWORD *)unsigned int v143 = 136315138;
          uint64_t v144 = URL.description.getter();
          *(void *)&long long v189 = sub_1000385A8(v144, v145, &v186);
          unsigned int v136 = v172;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          int v146 = *(void (**)(char *, uint64_t))(v84 + 8);
          v146(v140, v182);
          _os_log_impl((void *)&_mh_execute_header, v141, v142, "Continuing user activity of NSUserActivityTypeBrowsingWeb {webpageURL: %s}", v143, 0xCu);
          swift_arrayDestroy();
          uint64_t v137 = v182;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          int v146 = *(void (**)(char *, uint64_t))(v84 + 8);
          v146(v140, v137);
        }

        v177(v170, v136, v137);
        uint64_t v156 = v171;
        REMiCloudSharedItemSpecifier.init(url:)();
        int v183 = v146;
        uint64_t v157 = v167;
        uint64_t v158 = v137;
        uint64_t v159 = v166;
        uint64_t v160 = v168;
        (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v166, v156, v168);
        int v161 = v178;
        REMiCloudSharedItemSpecifier.navigationSpecifier.getter();
        uint64_t v162 = (uint64_t)v174;
        REMNavigationSpecifier.url.getter();
        (*(void (**)(uint64_t *, uint64_t))(v179 + 8))(v161, v180);
        unint64_t v163 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
        BOOL v99 = sub_100652A94(v162, v163);
        swift_bridgeObjectRelease();
        char v164 = v183;
        v183((char *)v162, v158);
        (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v160);
        v164(v136, v158);
        return v99;
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v84 + 56))(v130, 1, 1, v83);
    }
    sub_10003B6F8(v130, (uint64_t *)&unk_100788DF0);
    if (qword_1007857B8 != -1) {
      swift_once();
    }
    uint64_t v147 = type metadata accessor for Logger();
    sub_100018BF8(v147, (uint64_t)qword_1007AD550);
    uint64_t v47 = Logger.logObject.getter();
    os_log_type_t v48 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v47, v48)) {
      goto LABEL_76;
    }
    uint64_t v49 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v49 = 0;
    unint64_t v50 = "Missing webpageURL from NSUserActivityTypeBrowsingWeb user activity";
LABEL_74:
    _os_log_impl((void *)&_mh_execute_header, v47, v48, v50, v49, 2u);
LABEL_75:
    swift_slowDealloc();
LABEL_76:

    return 0;
  }
  if (result)
  {
    id v58 = *(void **)((char *)v183 + OBJC_IVAR___TTRIWindowSceneController_store);
    if (v58)
    {
      id v59 = v58;
      NSUserActivity.listPayload(with:)();

      int v60 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
      uint64_t v61 = v182;
      if (v60 != 1)
      {
        sub_100658B44((uint64_t)v9, (uint64_t)v177, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityListPayload);
        char v85 = v178;
        TTRUserActivityListPayload.navigationSpecifier.getter();
        uint64_t v86 = v176;
        REMNavigationSpecifier.url.getter();
        (*(void (**)(uint64_t *, uint64_t))(v179 + 8))(v85, v180);
        if (qword_1007857B8 != -1) {
          swift_once();
        }
        uint64_t v87 = type metadata accessor for Logger();
        sub_100018BF8(v87, (uint64_t)qword_1007AD550);
        uint64_t v88 = v181;
        (*(void (**)(char *, uint64_t, uint64_t))(v181 + 16))(v26, v86, v61);
        uint64_t v89 = Logger.logObject.getter();
        os_log_type_t v90 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v186 = swift_slowAlloc();
          *(_DWORD *)uint64_t v91 = 136315138;
          uint64_t v92 = URL.description.getter();
          *(void *)&long long v189 = sub_1000385A8(v92, v93, &v186);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          uint64_t v94 = *(void (**)(char *, uint64_t))(v88 + 8);
          v94(v26, v61);
          _os_log_impl((void *)&_mh_execute_header, v89, v90, "Continuing user activity of .list {url: %s}", v91, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          uint64_t v94 = *(void (**)(char *, uint64_t))(v88 + 8);
          v94(v26, v61);
        }

        unint64_t v107 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
        uint64_t v108 = v176;
        BOOL v99 = sub_100652A94(v176, v107);
        swift_bridgeObjectRelease();
        v94((char *)v108, v61);
        sub_100658BAC((uint64_t)v177, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityListPayload);
        return v99;
      }
      sub_10003B6F8((uint64_t)v9, &qword_1007AD728);
      if (qword_1007857B8 != -1) {
        swift_once();
      }
      uint64_t v62 = type metadata accessor for Logger();
      sub_100018BF8(v62, (uint64_t)qword_1007AD550);
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v47, v48)) {
        goto LABEL_76;
      }
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      unint64_t v50 = "Trying to continue user activity of .list, but got no listPayload.";
      goto LABEL_74;
    }
    __break(1u);
  }
  else
  {
    NSUserActivity.windowSceneRestorationPayload.getter();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36) == 1)
    {
      sub_10003B6F8((uint64_t)v35, (uint64_t *)&unk_1007AD730);
      if (qword_1007857B8 != -1) {
        swift_once();
      }
      uint64_t v46 = type metadata accessor for Logger();
      sub_100018BF8(v46, (uint64_t)qword_1007AD550);
      uint64_t v47 = Logger.logObject.getter();
      os_log_type_t v48 = static os_log_type_t.error.getter();
      if (!os_log_type_enabled(v47, v48)) {
        goto LABEL_76;
      }
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      unint64_t v50 = "Trying to continue user activity of .windowSceneRestoration, but got no windowSceneRestorationPayload.";
      goto LABEL_74;
    }
    sub_100658B44((uint64_t)v35, (uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
    char v70 = v178;
    TTRUserActivityWindowSceneRestorationPayload.navigationSpecifier.getter();
    uint64_t v71 = v175;
    REMNavigationSpecifier.url.getter();
    (*(void (**)(uint64_t *, uint64_t))(v179 + 8))(v70, v180);
    if (qword_1007857B8 != -1) {
      swift_once();
    }
    uint64_t v72 = type metadata accessor for Logger();
    sub_100018BF8(v72, (uint64_t)qword_1007AD550);
    uint64_t v74 = v181;
    uint64_t v73 = v182;
    (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v31, v71, v182);
    Swift::String v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v186 = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 136315138;
      uint64_t v78 = URL.description.getter();
      *(void *)&long long v189 = sub_1000385A8(v78, v79, &v186);
      uint64_t v80 = v181;
      uint64_t v73 = v182;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      NSString v81 = *(void (**)(char *, uint64_t))(v80 + 8);
      v81(v31, v73);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "Continuing user activity of .windowSceneRestoration {url: %s}", v77, 0xCu);
      swift_arrayDestroy();
      uint64_t v71 = v175;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      NSString v81 = *(void (**)(char *, uint64_t))(v74 + 8);
      v81(v31, v73);
    }

    uint64_t v95 = (uint64_t)v183;
    uint64_t v96 = (uint64_t)v183 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface;
    swift_beginAccess();
    if (!*(void *)(v96 + 24))
    {
      v81(v71, v73);
      sub_100658BAC((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
      return 0;
    }
    sub_1000145EC(v96, (uint64_t)&v186);
    uint64_t result = (uint64_t)sub_100038D28(&v186, v188);
    uint64_t v97 = *(void **)(v95 + OBJC_IVAR___TTRIWindowSceneController_store);
    if (v97)
    {
      id v98 = v97;
      BOOL v99 = sub_100309524((uint64_t)v39, v98, v95);

      v81(v71, v73);
      sub_100658BAC((uint64_t)v39, (uint64_t (*)(void))&type metadata accessor for TTRUserActivityWindowSceneRestorationPayload);
      sub_100038CD8((uint64_t)&v186);
      return v99;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100655CC8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100018BF8(v8, (uint64_t)qword_1007AD550);
  id v9 = a1;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v28 = v4;
    uint64_t v14 = (void *)v13;
    uint64_t v26 = v2;
    uint64_t v27 = v7;
    *(_DWORD *)uint64_t v12 = 138412290;
    *(void *)&long long v31 = v9;
    id v15 = v9;
    uint64_t v7 = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Opening URL context {urlContext: %@}", v12, 0xCu);
    sub_10003B754(&qword_10078AC60);
    swift_arrayDestroy();
    uint64_t v4 = v28;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v16 = [v9 options];
  id v17 = [v16 sourceApplication];

  uint64_t v18 = &_swiftEmptyDictionarySingleton;
  if (v17)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    uint64_t v32 = &type metadata for String;
    *(void *)&long long v31 = v19;
    *((void *)&v31 + 1) = v21;
    sub_100038E1C(&v31, v30);
    uint64_t v22 = UIApplicationOpenURLOptionsSourceApplicationKey;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = &_swiftEmptyDictionarySingleton;
    sub_1000BC9E4(v30, v22, isUniquelyReferenced_nonNull_native);
    uint64_t v18 = v29;

    swift_bridgeObjectRelease();
  }
  id v24 = [v9 URL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  LOBYTE(v24) = sub_100652A94((uint64_t)v7, (uint64_t)v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v24 & 1;
}

void sub_100656014(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for URL();
  os_log_t v7 = *(os_log_t *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_10003B754(&qword_1007AD700);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for REMNavigationSpecifier();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v65 - v17;
  if (a1)
  {
    swift_errorRetain();
    if (qword_1007857B8 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100018BF8(v19, (uint64_t)qword_1007AD550);
    id v20 = a2;
    swift_errorRetain();
    id v74 = v20;
    swift_errorRetain();
    uint64_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      id v24 = (void *)swift_slowAlloc();
      uint64_t v76 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315394;
      swift_getErrorValue();
      uint64_t v25 = Error.localizedDescription.getter();
      uint64_t v75 = sub_1000385A8(v25, v26, &v76);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v23 + 12) = 2112;
      uint64_t v75 = (uint64_t)v74;
      id v27 = v74;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v24 = v74;

      _os_log_impl((void *)&_mh_execute_header, v21, v22, "Failed to accept share {error: %s, metadata: %@}", (uint8_t *)v23, 0x16u);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();

      id v39 = v74;
    }
  }
  else
  {
    uint64_t v73 = (uint64_t)v12;
    uint64_t v70 = v16;
    if (qword_1007857B8 != -1) {
      swift_once();
    }
    uint64_t v28 = type metadata accessor for Logger();
    uint64_t v29 = (void *)sub_100018BF8(v28, (uint64_t)qword_1007AD550);
    id v30 = a2;
    id v74 = v29;
    long long v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.default.getter();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v71 = v9;
    uint64_t v72 = v18;
    if (v33)
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v67 = a3;
      uint64_t v35 = (uint8_t *)v34;
      long long v66 = (void *)swift_slowAlloc();
      uint64_t v69 = v6;
      *(_DWORD *)uint64_t v35 = 138412290;
      uint64_t v76 = (uint64_t)v30;
      id v36 = v30;
      os_log_t v68 = v7;
      uint64_t v37 = v13;
      id v38 = v36;
      uint64_t v6 = v69;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v66 = v30;

      uint64_t v13 = v37;
      os_log_t v7 = v68;
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Share accepted {metadata: %@}", v35, 0xCu);
      sub_10003B754(&qword_10078AC60);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v40 = [v30 hierarchicalRootRecordID];
    if (v40)
    {
      id v41 = v40;
      id v42 = [v40 recordName];

      static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v43 = v73;
      static REMNavigationSpecifier.from(cloudKitRecordName:)();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v43, 1, v13) != 1)
      {
        uint64_t v47 = v72;
        (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v72, v43, v13);
        uint64_t v48 = (uint64_t)v71;
        REMNavigationSpecifier.url.getter();
        unint64_t v49 = sub_100422D40((uint64_t)_swiftEmptyArrayStorage);
        LODWORD(v73) = sub_100652A94(v48, v49);
        swift_bridgeObjectRelease();
        Class isa = (void (*)(uint64_t, uint64_t))v7[1].isa;
        isa(v48, v6);
        uint64_t v51 = v70;
        (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v70, v47, v13);
        id v52 = Logger.logObject.getter();
        os_log_type_t v53 = static os_log_type_t.default.getter();
        int v54 = v53;
        if (os_log_type_enabled(v52, v53))
        {
          uint64_t v55 = swift_slowAlloc();
          LODWORD(v69) = v54;
          uint64_t v56 = v55;
          id v74 = (id)swift_slowAlloc();
          uint64_t v76 = (uint64_t)v74;
          *(_DWORD *)uint64_t v56 = 136315394;
          uint64_t v67 = v56 + 4;
          os_log_t v68 = v52;
          REMNavigationSpecifier.url.getter();
          sub_100658A58();
          uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
          unint64_t v59 = v58;
          isa(v48, v6);
          uint64_t v75 = sub_1000385A8(v57, v59, &v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          int v60 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
          v60(v51, v13);
          *(_WORD *)(v56 + 12) = 2080;
          if (v73) {
            uint64_t v61 = 7562617;
          }
          else {
            uint64_t v61 = 28526;
          }
          if (v73) {
            unint64_t v62 = 0xE300000000000000;
          }
          else {
            unint64_t v62 = 0xE200000000000000;
          }
          uint64_t v75 = sub_1000385A8(v61, v62, &v76);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          os_log_t v63 = v68;
          _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v69, "Share navigation handled {url: %s, handled: %s}", (uint8_t *)v56, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          v60((uint64_t)v72, v13);
        }
        else
        {

          uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
          v64(v51, v13);
          v64((uint64_t)v47, v13);
        }
        return;
      }
      sub_10003B6F8(v43, &qword_1007AD700);
    }
    uint64_t v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v44, v45))
    {
      uint64_t v46 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v46 = 0;
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Could not find listID from CKShare.Metatdata", v46, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100656A2C(void *a1)
{
  uint64_t v2 = sub_10003B754((uint64_t *)&unk_100791C20);
  __chkstk_darwin(v2 - 8);
  os_log_type_t v32 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100018BF8(v4, (uint64_t)qword_1007AD550);
  id v5 = a1;
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    v31[1] = v8 + 4;
    id v9 = [v5 session];
    id v10 = [v9 persistentIdentifier];

    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v13 = v12;

    uint64_t v34 = sub_1000385A8(v11, v13, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "sceneDidDisconnect {scene: %s}", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v14 = v5;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315138;
    id v18 = [v14 session];
    id v19 = [v18 persistentIdentifier];

    uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v22 = v21;

    uint64_t v34 = sub_1000385A8(v20, v22, &v35);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "Clearing lastSelectedListInWindow for scene {scene: %s}", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v23 = v33;
  uint64_t v24 = *(void *)(v33 + OBJC_IVAR___TTRIWindowSceneController_lastSelectedListStorage + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v26 = type metadata accessor for TTRListType();
  id v27 = v32;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v32, 1, 1, v26);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v27, ObjectType, v24);
  uint64_t v28 = OBJC_IVAR___TTRIWindowSceneController_mainWindow;
  uint64_t v29 = *(void **)(v23 + OBJC_IVAR___TTRIWindowSceneController_mainWindow);
  if (v29)
  {
    [v29 setHidden:1];
    id v30 = *(void **)(v23 + v28);
    *(void *)(v23 + v28) = 0;
  }
}

uint64_t sub_100656EE8(void *a1)
{
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_1007AD550);
  id v3 = a1;
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    id v7 = [v3 session];
    id v8 = [v7 persistentIdentifier];

    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    sub_1000385A8(v9, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "sceneWillResignActive {scene: %s}", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t result = swift_unknownObjectWeakLoadStrong();
    if (result) {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100657184(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_10003B754(&qword_100799F20);
  __chkstk_darwin(v4 - 8);
  uint64_t v43 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)v38 - v7;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100018BF8(v13, (uint64_t)qword_1007AD550);
  id v14 = a1;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v46[0] = v39;
    id v42 = v12;
    *(_DWORD *)uint64_t v17 = 136315138;
    v38[1] = v17 + 4;
    id v18 = [v14 session];
    uint64_t v40 = v2;
    id v19 = v18;
    id v20 = [v18 persistentIdentifier];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v41 = v8;
    uint64_t v22 = v10;
    uint64_t v23 = v9;
    unint64_t v25 = v24;

    uint64_t v26 = v21;
    uint64_t v2 = v40;
    v47[0] = sub_1000385A8(v26, v25, v46);
    unint64_t v12 = v42;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v9 = v23;
    uint64_t v10 = v22;
    id v8 = v41;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "sceneDidEnterBackground {scene: %s}", v17, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  self;
  uint64_t result = swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    id v29 = v14;
    if (Strong)
    {
      sub_1002F4BB0();
      swift_unknownObjectRelease();
    }
    id v30 = (void *)(v2 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface);
    swift_beginAccess();
    uint64_t v31 = v30[3];
    if (v31)
    {
      os_log_type_t v32 = sub_100038D28(v30, v31);
      uint64_t v33 = *sub_100038D28((void *)(*v32 + 48), *(void *)(*v32 + 72)) + 96;
      swift_beginAccess();
      sub_100016AFC(v33, (uint64_t)v46);
      sub_100016A10((uint64_t)&v44);
      sub_100016998((uint64_t)v46);
      if (v45)
      {
        sub_100038ED8(&v44, (uint64_t)v47);
        uint64_t v34 = v48;
        uint64_t v35 = v49;
        sub_100038D28(v47, v48);
        (*(void (**)(uint64_t, uint64_t))(v35 + 144))(v34, v35);
        sub_100038CD8((uint64_t)v47);
      }
      else
      {
        sub_10003B6F8((uint64_t)&v44, (uint64_t *)&unk_1007AD740);
      }
    }
    uint64_t v36 = v2 + OBJC_IVAR___TTRIWindowSceneController_lastEnterForegroundDate;
    swift_beginAccess();
    sub_10003B694(v36, (uint64_t)v8, &qword_100799F20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
    {

      return sub_10003B6F8((uint64_t)v8, &qword_100799F20);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
      Date.timeIntervalSinceNow.getter();
      type metadata accessor for Analytics();
      static Analytics.postEvent(_:payload:duration:)();

      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
      uint64_t v37 = (uint64_t)v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v43, 1, 1, v9);
      swift_beginAccess();
      sub_10000A550(v37, v36, &qword_100799F20);
      return swift_endAccess();
    }
  }
  return result;
}

char *sub_100657794(void *a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR___TTRIWindowSceneController_rootModuleInterface);
  swift_beginAccess();
  uint64_t v4 = v3[3];
  if (v4)
  {
    uint64_t v5 = sub_100038D28(v3, v4);
    sub_100038D28((void *)(*v5 + 48), *(void *)(*v5 + 72));
    uint64_t v6 = sub_10034D3C4();
  }
  else
  {
    uint64_t v6 = 0;
  }
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100018BF8(v7, (uint64_t)qword_1007AD550);
  id v8 = a1;
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    unint64_t v12 = v6;
    id v13 = [v8 session];
    id v14 = [v13 persistentIdentifier];

    uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v17 = v16;

    uint64_t v18 = v15;
    uint64_t v6 = v12;
    sub_1000385A8(v18, v17, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Returning stateRestorationActivity {scene: %s}", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v19 = v6;
  id v20 = v8;
  uint64_t v21 = v19;
  id v22 = v20;
  uint64_t v23 = Logger.logObject.getter();
  os_log_type_t v24 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315394;
    id v26 = [v22 session];
    id v27 = [v26 persistentIdentifier];

    uint64_t v28 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v29 = v6;
    unint64_t v31 = v30;

    sub_1000385A8(v28, v31, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v6 = v29;
    swift_bridgeObjectRelease();
    *(_WORD *)(v25 + 12) = 2080;
    if (v29)
    {
      uint64_t v32 = NSUserActivity.ttrDescription.getter();
      unint64_t v34 = v33;
    }
    else
    {
      unint64_t v34 = 0xE300000000000000;
      uint64_t v32 = 7104878;
    }
    sub_1000385A8(v32, v34, &v36);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Returning activity for state saving for window scene {windowSceneIdentifier: %s, userActivity: %s}", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return v6;
}

void sub_100657CAC(void *a1, void *a2)
{
  uint64_t v3 = v2;
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_1007AD550);
  id v7 = a1;
  id v8 = a2;
  id v9 = v7;
  id v10 = v8;
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    id v14 = [v9 session];
    id v15 = [v14 persistentIdentifier];

    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v18 = v17;

    sub_1000385A8(v16, v18, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v19 = NSUserActivity.ttrDescription.getter();
    sub_1000385A8(v19, v20, &v25);
    uint64_t v3 = v2;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "scene continue userActivity {scene: %s, userActivity: %s}", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  int v21 = *(_DWORD *)(v3 + OBJC_IVAR___TTRIWindowSceneController_applicationRunProperties);
  if (v21 == 2)
  {
    __break(1u);
  }
  else if ((v21 & 0x10000) != 0)
  {
    sub_100654068(v10);
  }
  else
  {
    id v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v24 = 0;
      _os_log_impl((void *)&_mh_execute_header, v22, v23, "scene continue userActivity not allowed by applicationRunProperties", v24, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_100658038(void *a1)
{
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100018BF8(v2, (uint64_t)qword_1007AD550);
  id v3 = a1;
  swift_bridgeObjectRetain_n();
  id v4 = v3;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315394;
    id v8 = [v4 session];
    id v9 = [v8 persistentIdentifier];

    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v12 = v11;

    sub_1000385A8(v10, v12, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 12) = 2080;
    sub_1000368FC(0, &qword_1007A8DE0);
    sub_100020484(&qword_1007AD720, &qword_1007A8DE0);
    swift_bridgeObjectRetain();
    uint64_t v13 = Set.description.getter();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1000385A8(v13, v15, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "scene openURLContexts {scene: %s, urlContexts: %s}", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = (void *)sub_10003D6C8(v16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    sub_100655CC8(v17);
  }
}

uint64_t sub_100658508()
{
  sub_10003B6F8(v0 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow, (uint64_t *)&unk_100791C20);

  return swift_deallocClassInstance();
}

uint64_t sub_100658574()
{
  return type metadata accessor for PerWindowLastSelectedListStorage(0);
}

uint64_t sub_10065857C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Reminders32PerWindowLastSelectedListStorage_lastSelectedListInWindow;
  swift_beginAccess();
  sub_10000A550(a1, v3, (uint64_t *)&unk_100791C20);
  return swift_endAccess();
}

uint64_t (*sub_1006585E0())()
{
  return j__swift_endAccess_0;
}

void sub_10065863C(void *a1, uint64_t a2, unint64_t a3)
{
  if (qword_1007857B8 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100018BF8(v6, (uint64_t)qword_1007AD550);
  id v7 = a1;
  swift_bridgeObjectRetain_n();
  id v16 = v7;
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    id v11 = [v16 session];
    id v12 = [v11 persistentIdentifier];

    uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v15 = v14;

    sub_1000385A8(v13, v15, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_1000385A8(a2, a3, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "scene willContinueUserActivityWithType {scene: %s, userActivityType: %s}", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1006588D0(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [objc_allocWithZone((Class)REMStore) initUserInteractive:1];
  sub_1000368FC(0, (unint64_t *)&qword_100788E40);
  uint64_t v5 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = v2;
  v10[4] = sub_100658A50;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_100009ADC;
  v10[3] = &unk_100755C88;
  id v7 = _Block_copy(v10);
  id v8 = a1;
  id v9 = v2;
  swift_release();
  [v4 acceptShareWithMetadata:v8 queue:v5 completion:v7];
  _Block_release(v7);
}

uint64_t sub_100658A10()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_100658A50(uint64_t a1)
{
  sub_100656014(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_100658A58()
{
  unint64_t result = qword_10079B138;
  if (!qword_10079B138)
  {
    type metadata accessor for URL();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10079B138);
  }
  return result;
}

uint64_t sub_100658AB0()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100658AE8()
{
  return sub_100653CE8();
}

uint64_t sub_100658B04()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_100658B3C(uint64_t a1)
{
  sub_100653DF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100658B44(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100658BAC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100658C0C()
{
  return _swift_deallocObject(v0, 17, 7);
}

uint64_t sub_100658C20(void *a1)
{
  return sub_100653408(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100658C2C(void *a1)
{
  return sub_10065361C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100658C38(void *a1)
{
  return sub_100653874(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100658C44()
{
  return sub_100653AB4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100658C5C()
{
  uint64_t v0 = sub_10003B754(&qword_10079AF90);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v5 = v4;
    }
    else {
      uint64_t v5 = 0;
    }
    if (v5)
    {
      uint64_t v6 = qword_1007851D8;
      swift_retain();
      if (v6 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100018BF8(v7, (uint64_t)qword_100788648);
      sub_10003D820((uint64_t)_swiftEmptyArrayStorage);
      sub_10001A078();
      swift_bridgeObjectRelease();
      uint64_t v8 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v9 = static MainActor.shared.getter();
      uint64_t v10 = (void *)swift_allocObject();
      v10[2] = v9;
      v10[3] = &protocol witness table for MainActor;
      v10[4] = v5;
      sub_1000286A4((uint64_t)v2, (uint64_t)&unk_100793D40, (uint64_t)v10);
      swift_release();
      swift_unknownObjectRelease();
      return swift_release();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_100658E78()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_100658E88()
{
  sub_10019B470();
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100658EFC()
{
  return type metadata accessor for TTRIShowPublicTemplatePreviewPresenter();
}

uint64_t type metadata accessor for TTRIShowPublicTemplatePreviewPresenter()
{
  uint64_t result = qword_1007AD820;
  if (!qword_1007AD820) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100658F50()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100658F94()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void sub_100658FF8(void *a1, NSObject *a2)
{
  uint64_t v3 = [a1 softwareVersion];
  int v4 = 138412290;
  uint64_t v5 = v3;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "Failed to scan softwareVersion: %@", (uint8_t *)&v4, 0xCu);
}

void sub_100659090(uint64_t a1, NSObject *a2)
{
  int v2 = 138412290;
  uint64_t v3 = a1;
  _os_log_error_impl((void *)&_mh_execute_header, a2, OS_LOG_TYPE_ERROR, "CloudKit device list request failed {error: %@}", (uint8_t *)&v2, 0xCu);
}

void sub_100659108(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Device list request was already torn down.", v1, 2u);
}

void sub_10065914C(os_log_t log)
{
  *(_WORD *)uint64_t v1 = 0;
  _os_log_error_impl((void *)&_mh_execute_header, log, OS_LOG_TYPE_ERROR, "Timed out waiting for both device lists", v1, 2u);
}

uint64_t AppDependency.wrappedValue.getter()
{
  return AppDependency.wrappedValue.getter();
}

uint64_t AppDependency.__allocating_init(key:manager:)()
{
  return AppDependency.__allocating_init(key:manager:)();
}

uint64_t AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)()
{
  return AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
}

uint64_t AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)()
{
  return AppShortcutPhrase.StringInterpolation.appendInterpolation<A, B>(_:)();
}

Swift::Void __swiftcall AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t AppShortcutPhrase.init(stringInterpolation:)()
{
  return AppShortcutPhrase.init(stringInterpolation:)();
}

uint64_t static AppShortcutsBuilder.buildBlock(_:)()
{
  return static AppShortcutsBuilder.buildBlock(_:)();
}

uint64_t static AppShortcutsBuilder.buildExpression(_:)()
{
  return static AppShortcutsBuilder.buildExpression(_:)();
}

uint64_t AppDependencyManager.ttrAdd(dependency:)()
{
  return AppDependencyManager.ttrAdd(dependency:)();
}

{
  return AppDependencyManager.ttrAdd(dependency:)();
}

uint64_t static AppDependencyManager.shared.getter()
{
  return static AppDependencyManager.shared.getter();
}

uint64_t type metadata accessor for AppDependencyManager()
{
  return type metadata accessor for AppDependencyManager();
}

uint64_t static AppShortcutsProvider.updateAppShortcutParameters()()
{
  return static AppShortcutsProvider.updateAppShortcutParameters()();
}

uint64_t static AppShortcutsProvider.shortcutTileColor.getter()
{
  return static AppShortcutsProvider.shortcutTileColor.getter();
}

uint64_t type metadata accessor for AppShortcutPhraseToken()
{
  return type metadata accessor for AppShortcutPhraseToken();
}

uint64_t AppShortcutOptionsCollection.init(_:title:systemImageName:)()
{
  return AppShortcutOptionsCollection.init(_:title:systemImageName:)();
}

uint64_t AppShortcutParameterPresentation.init<A>(for:summary:optionsCollections:)()
{
  return AppShortcutParameterPresentation.init<A>(for:summary:optionsCollections:)();
}

uint64_t AppShortcutParameterPresentationSummary.init(_:table:)()
{
  return AppShortcutParameterPresentationSummary.init(_:table:)();
}

uint64_t AppShortcutParameterPresentationSummaryString.StringInterpolation.appendInterpolation(_:)()
{
  return AppShortcutParameterPresentationSummaryString.StringInterpolation.appendInterpolation(_:)();
}

Swift::Void __swiftcall AppShortcutParameterPresentationSummaryString.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t AppShortcutParameterPresentationSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return AppShortcutParameterPresentationSummaryString.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t AppShortcutParameterPresentationSummaryString.init(stringInterpolation:)()
{
  return AppShortcutParameterPresentationSummaryString.init(stringInterpolation:)();
}

uint64_t static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A, B>(_:_:)()
{
  return static AppShortcutOptionsCollectionSpecificationBuilder.buildBlock<A, B>(_:_:)();
}

uint64_t AppIntent.postAnalytics(category:)()
{
  return AppIntent.postAnalytics(category:)();
}

uint64_t static AppIntent.isDiscoverable.getter()
{
  return static AppIntent.isDiscoverable.getter();
}

uint64_t static AppIntent.parameterSummary.getter()
{
  return static AppIntent.parameterSummary.getter();
}

uint64_t static AppIntent.authenticationPolicy.getter()
{
  return static AppIntent.authenticationPolicy.getter();
}

uint64_t AppShortcut.init<A, B, C, D>(intent:phrases:shortTitle:systemImageName:parameterPresentation:)()
{
  return AppShortcut.init<A, B, C, D>(intent:phrases:shortTitle:systemImageName:parameterPresentation:)();
}

uint64_t AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)()
{
  return AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
}

uint64_t type metadata accessor for AppShortcut()
{
  return type metadata accessor for AppShortcut();
}

uint64_t type metadata accessor for IntentDialog()
{
  return type metadata accessor for IntentDialog();
}

uint64_t static IntentResult.result<>()()
{
  return static IntentResult.result<>()();
}

uint64_t IntentParameter.wrappedValue.modify()
{
  return IntentParameter.wrappedValue.modify();
}

uint64_t IntentParameter.wrappedValue.getter()
{
  return IntentParameter.wrappedValue.getter();
}

uint64_t IntentParameter.wrappedValue.setter()
{
  return IntentParameter.wrappedValue.setter();
}

uint64_t IntentParameter.projectedValue.getter()
{
  return IntentParameter.projectedValue.getter();
}

uint64_t IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)()
{
  return IntentParameter<>.init(title:description:default:requestValueDialog:requestDisambiguationDialog:inputConnectionBehavior:)();
}

uint64_t type metadata accessor for IntentDescription()
{
  return type metadata accessor for IntentDescription();
}

uint64_t IntentDescription.init(_:categoryName:searchKeywords:)()
{
  return IntentDescription.init(_:categoryName:searchKeywords:)();
}

uint64_t DisplayRepresentation.init(title:subtitle:image:)()
{
  return DisplayRepresentation.init(title:subtitle:image:)();
}

uint64_t static DynamicOptionsProvider.useForParameterResolution.getter()
{
  return static DynamicOptionsProvider.useForParameterResolution.getter();
}

uint64_t type metadata accessor for InputConnectionBehavior()
{
  return type metadata accessor for InputConnectionBehavior();
}

uint64_t static PersistentlyIdentifiable.persistentIdentifier.getter()
{
  return static PersistentlyIdentifiable.persistentIdentifier.getter();
}

uint64_t TypeDisplayRepresentation.init(name:numericFormat:)()
{
  return TypeDisplayRepresentation.init(name:numericFormat:)();
}

uint64_t type metadata accessor for TypeDisplayRepresentation()
{
  return type metadata accessor for TypeDisplayRepresentation();
}

uint64_t NSNotFound.getter()
{
  return NSNotFound.getter();
}

uint64_t static CharacterSet.whitespaces.getter()
{
  return static CharacterSet.whitespaces.getter();
}

uint64_t static CharacterSet.alphanumerics.getter()
{
  return static CharacterSet.alphanumerics.getter();
}

uint64_t static CharacterSet.controlCharacters.getter()
{
  return static CharacterSet.controlCharacters.getter();
}

Swift::Bool __swiftcall CharacterSet.containsUnicodeScalars(of:)(Swift::String of)
{
  return CharacterSet.containsUnicodeScalars(of:)(of._countAndFlagsBits, of._object);
}

uint64_t static CharacterSet.hashtagTokenAllowedCharacters.getter()
{
  return static CharacterSet.hashtagTokenAllowedCharacters.getter();
}

uint64_t static CharacterSet.whitespacesAndNewlines.getter()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t type metadata accessor for CharacterSet()
{
  return type metadata accessor for CharacterSet();
}

NSNotification __swiftcall Notification._bridgeToObjectiveC()()
{
  return (NSNotification)Notification._bridgeToObjectiveC()();
}

uint64_t static Notification._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Notification._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Notification.init(name:object:userInfo:)()
{
  return Notification.init(name:object:userInfo:)();
}

uint64_t Notification.object.getter()
{
  return Notification.object.getter();
}

uint64_t Notification.userInfo.getter()
{
  return Notification.userInfo.getter();
}

uint64_t type metadata accessor for Notification()
{
  return type metadata accessor for Notification();
}

uint64_t DateComponents.rem_allDayDateComponents()()
{
  return DateComponents.rem_allDayDateComponents()();
}

uint64_t static DateComponents.== infix(_:_:)()
{
  return static DateComponents.== infix(_:_:)();
}

uint64_t static DateComponents._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static DateComponents._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t DateComponents.day.getter()
{
  return DateComponents.day.getter();
}

uint64_t DateComponents.hour.setter()
{
  return DateComponents.hour.setter();
}

uint64_t DateComponents.year.getter()
{
  return DateComponents.year.getter();
}

uint64_t DateComponents.month.getter()
{
  return DateComponents.month.getter();
}

uint64_t DateComponents.minute.setter()
{
  return DateComponents.minute.setter();
}

uint64_t DateComponents.second.setter()
{
  return DateComponents.second.setter();
}

uint64_t DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t DateComponents.timeZone.setter()
{
  return DateComponents.timeZone.setter();
}

uint64_t type metadata accessor for DateComponents()
{
  return type metadata accessor for DateComponents();
}

uint64_t AttributeScopes.UIKitAttributes.foregroundColor.getter()
{
  return AttributeScopes.UIKitAttributes.foregroundColor.getter();
}

uint64_t AttributeScopes.UIKitAttributes.font.getter()
{
  return AttributeScopes.UIKitAttributes.font.getter();
}

uint64_t type metadata accessor for AttributedString()
{
  return type metadata accessor for AttributedString();
}

uint64_t AttributedString.init(_:attributes:)()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t AttributedString.init(_:)()
{
  return AttributedString.init(_:)();
}

Swift::String __swiftcall NSLocalizedString(_:tableName:bundle:value:comment:)(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  uint64_t v5 = NSLocalizedString(_:tableName:bundle:value:comment:)(_._countAndFlagsBits, _._object, tableName.value._countAndFlagsBits, tableName.value._object, bundle.super.isa, value._countAndFlagsBits, value._object, comment._countAndFlagsBits);
  result._object = v6;
  result._uint64_t countAndFlagsBits = v5;
  return result;
}

uint64_t URLResourceValues.contentType.getter()
{
  return URLResourceValues.contentType.getter();
}

uint64_t type metadata accessor for URLResourceValues()
{
  return type metadata accessor for URLResourceValues();
}

uint64_t AttributeContainer.subscript.setter()
{
  return AttributeContainer.subscript.setter();
}

uint64_t AttributeContainer.init()()
{
  return AttributeContainer.init()();
}

uint64_t type metadata accessor for AttributeContainer()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t type metadata accessor for NSKeyValueObservation()
{
  return type metadata accessor for NSKeyValueObservation();
}

uint64_t AttributeDynamicLookup.subscript.getter()
{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t _convertErrorToNSError(_:)()
{
  return _convertErrorToNSError(_:)();
}

uint64_t _convertNSErrorToError(_:)()
{
  return _convertNSErrorToError(_:)();
}

uint64_t type metadata accessor for LocalizedStringResource.BundleDescription()
{
  return type metadata accessor for LocalizedStringResource.BundleDescription();
}

uint64_t LocalizedStringResource.init(stringInterpolation:)()
{
  return LocalizedStringResource.init(stringInterpolation:)();
}

uint64_t type metadata accessor for LocalizedStringResource()
{
  return type metadata accessor for LocalizedStringResource();
}

uint64_t LocalizedStringResource.init(_:table:locale:bundle:comment:)()
{
  return LocalizedStringResource.init(_:table:locale:bundle:comment:)();
}

uint64_t NSKeyValueObservedChange.newValue.getter()
{
  return NSKeyValueObservedChange.newValue.getter();
}

uint64_t NSKeyValueObservedChange.oldValue.getter()
{
  return NSKeyValueObservedChange.oldValue.getter();
}

uint64_t _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)()
{
  return _KeyValueCodingAndObserving.observe<A>(_:options:changeHandler:)();
}

uint64_t URL.isFileURL.getter()
{
  return URL.isFileURL.getter();
}

uint64_t URL.description.getter()
{
  return URL.description.getter();
}

uint64_t URL.absoluteString.getter()
{
  return URL.absoluteString.getter();
}

uint64_t URL.resourceValues(forKeys:)()
{
  return URL.resourceValues(forKeys:)();
}

uint64_t URL.isHTTPOrHTTPSURL.getter()
{
  return URL.isHTTPOrHTTPSURL.getter();
}

uint64_t URL.domain.getter()
{
  return URL.domain.getter();
}

Swift::Void __swiftcall URL.open()()
{
}

void __swiftcall URL._bridgeToObjectiveC()(NSURL *__return_ptr retstr)
{
}

Swift::Void __swiftcall URL.stopAccessingSecurityScopedResource()()
{
}

uint64_t static URL._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

Swift::Bool __swiftcall URL.startAccessingSecurityScopedResource()()
{
  return URL.startAccessingSecurityScopedResource()();
}

uint64_t URL.host.getter()
{
  return URL.host.getter();
}

uint64_t URL.init(string:)()
{
  return URL.init(string:)();
}

uint64_t type metadata accessor for URL()
{
  return type metadata accessor for URL();
}

uint64_t Data.init(contentsOf:options:)()
{
  return Data.init(contentsOf:options:)();
}

NSData __swiftcall Data._bridgeToObjectiveC()()
{
  return (NSData)Data._bridgeToObjectiveC()();
}

uint64_t static Data._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Date.description.getter()
{
  return Date.description.getter();
}

uint64_t static Date.distantPast.getter()
{
  return static Date.distantPast.getter();
}

uint64_t Date.init(timeInterval:since:)()
{
  return Date.init(timeInterval:since:)();
}

uint64_t Date.rem_localizedAccessibilityDueDateIconString.getter()
{
  return Date.rem_localizedAccessibilityDueDateIconString.getter();
}

uint64_t Date.rem_isToday.getter()
{
  return Date.rem_isToday.getter();
}

uint64_t static Date.rem_startOfTomorrow.getter()
{
  return static Date.rem_startOfTomorrow.getter();
}

uint64_t Date.rem_localizedTodayString.getter()
{
  return Date.rem_localizedTodayString.getter();
}

uint64_t Date.timeIntervalSince(_:)()
{
  return Date.timeIntervalSince(_:)();
}

NSDate __swiftcall Date._bridgeToObjectiveC()()
{
  return (NSDate)Date._bridgeToObjectiveC()();
}

uint64_t static Date.> infix(_:_:)()
{
  return static Date.> infix(_:_:)();
}

uint64_t static Date.< infix(_:_:)()
{
  return static Date.< infix(_:_:)();
}

uint64_t static Date.+ infix(_:_:)()
{
  return static Date.+ infix(_:_:)();
}

uint64_t Date.timeIntervalSinceNow.getter()
{
  return Date.timeIntervalSinceNow.getter();
}

uint64_t static Date.== infix(_:_:)()
{
  return static Date.== infix(_:_:)();
}

uint64_t static Date._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t static Date.now.getter()
{
  return static Date.now.getter();
}

uint64_t Date.init()()
{
  return Date.init()();
}

uint64_t type metadata accessor for Date()
{
  return type metadata accessor for Date();
}

uint64_t UUID.init(uuidString:)()
{
  return UUID.init(uuidString:)();
}

uint64_t UUID.uuidString.getter()
{
  return UUID.uuidString.getter();
}

NSUUID __swiftcall UUID._bridgeToObjectiveC()()
{
  return (NSUUID)UUID._bridgeToObjectiveC()();
}

uint64_t static UUID.== infix(_:_:)()
{
  return static UUID.== infix(_:_:)();
}

uint64_t static UUID._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UUID._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UUID.init()()
{
  return UUID.init()();
}

uint64_t type metadata accessor for UUID()
{
  return type metadata accessor for UUID();
}

uint64_t Locale.identifier.getter()
{
  return Locale.identifier.getter();
}

uint64_t static Locale.remPreferredLocalizations.getter()
{
  return static Locale.remPreferredLocalizations.getter();
}

uint64_t static Locale.autoupdatingCurrent.getter()
{
  return static Locale.autoupdatingCurrent.getter();
}

uint64_t static Locale.current.getter()
{
  return static Locale.current.getter();
}

uint64_t type metadata accessor for Locale()
{
  return type metadata accessor for Locale();
}

uint64_t Calendar.isDateInToday(_:)()
{
  return Calendar.isDateInToday(_:)();
}

uint64_t Calendar.dateComponents(_:from:)()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t static Calendar._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Calendar._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Calendar.date(from:)()
{
  return Calendar.date(from:)();
}

uint64_t static Calendar.current.getter()
{
  return static Calendar.current.getter();
}

uint64_t type metadata accessor for Calendar.Component()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t type metadata accessor for Calendar()
{
  return type metadata accessor for Calendar();
}

uint64_t IndexSet.endIndex.getter()
{
  return IndexSet.endIndex.getter();
}

uint64_t static IndexSet.Index.== infix(_:_:)()
{
  return static IndexSet.Index.== infix(_:_:)();
}

uint64_t type metadata accessor for IndexSet.Index()
{
  return type metadata accessor for IndexSet.Index();
}

uint64_t IndexSet.makeIterator()()
{
  return IndexSet.makeIterator()();
}

void __swiftcall IndexSet._bridgeToObjectiveC()(NSIndexSet *__return_ptr retstr)
{
}

uint64_t IndexSet.index(after:)()
{
  return IndexSet.index(after:)();
}

Swift::tuple_inserted_Bool_memberAfterInsert_Int __swiftcall IndexSet.insert(_:)(Swift::Int a1)
{
  char v1 = IndexSet.insert(_:)(a1);
  result.memberAfterInsert = v2;
  result.inserted = v1;
  return result;
}

Swift::Int_optional __swiftcall IndexSet.remove(_:)(Swift::Int a1)
{
  Swift::Int v1 = IndexSet.remove(_:)(a1);
  result.value = v1;
  result.is_nil = v2;
  return result;
}

uint64_t IndexSet.isEmpty.getter()
{
  return IndexSet.isEmpty.getter();
}

uint64_t IndexSet.RangeView.makeIterator()()
{
  return IndexSet.RangeView.makeIterator()();
}

uint64_t type metadata accessor for IndexSet.RangeView()
{
  return type metadata accessor for IndexSet.RangeView();
}

uint64_t IndexSet.rangeView.getter()
{
  return IndexSet.rangeView.getter();
}

uint64_t IndexSet.init()()
{
  return IndexSet.init()();
}

uint64_t type metadata accessor for IndexSet()
{
  return type metadata accessor for IndexSet();
}

uint64_t IndexSet.subscript.getter()
{
  return IndexSet.subscript.getter();
}

uint64_t static TimeZone.current.getter()
{
  return static TimeZone.current.getter();
}

uint64_t type metadata accessor for TimeZone()
{
  return type metadata accessor for TimeZone();
}

uint64_t IndexPath.description.getter()
{
  return IndexPath.description.getter();
}

NSIndexPath __swiftcall IndexPath._bridgeToObjectiveC()()
{
  return (NSIndexPath)IndexPath._bridgeToObjectiveC()();
}

uint64_t static IndexPath.< infix(_:_:)()
{
  return static IndexPath.< infix(_:_:)();
}

uint64_t static IndexPath.== infix(_:_:)()
{
  return static IndexPath.== infix(_:_:)();
}

uint64_t static IndexPath._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t IndexPath.init(row:section:)()
{
  return IndexPath.init(row:section:)();
}

uint64_t IndexPath.row.modify()
{
  return IndexPath.row.modify();
}

uint64_t IndexPath.row.getter()
{
  return IndexPath.row.getter();
}

uint64_t IndexPath.init(item:section:)()
{
  return IndexPath.init(item:section:)();
}

uint64_t IndexPath.item.modify()
{
  return IndexPath.item.modify();
}

uint64_t IndexPath.item.getter()
{
  return IndexPath.item.getter();
}

uint64_t IndexPath.section.getter()
{
  return IndexPath.section.getter();
}

uint64_t IndexPath.init(indexes:)()
{
  return IndexPath.init(indexes:)();
}

uint64_t type metadata accessor for IndexPath()
{
  return type metadata accessor for IndexPath();
}

uint64_t static Selector.== infix(_:_:)()
{
  return static Selector.== infix(_:_:)();
}

uint64_t CGFloat.nuiUseDefault.unsafeMutableAddressor()
{
  return CGFloat.nuiUseDefault.unsafeMutableAddressor();
}

uint64_t TTRShowAllRemindersWithSectionsDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowAllRemindersWithSectionsDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowAllRemindersWithSectionsDataModelSource()
{
  return type metadata accessor for TTRShowAllRemindersWithSectionsDataModelSource();
}

uint64_t TTRRemindersListListType.localizedOptionString.getter()
{
  return TTRRemindersListListType.localizedOptionString.getter();
}

uint64_t TTRITextCellTextFieldTextArea.init(textField:)()
{
  return TTRITextCellTextFieldTextArea.init(textField:)();
}

uint64_t type metadata accessor for TTRITextCellTextFieldTextArea()
{
  return type metadata accessor for TTRITextCellTextFieldTextArea();
}

uint64_t type metadata accessor for TTRIInlineButtonAttachmentTextViewButton()
{
  return type metadata accessor for TTRIInlineButtonAttachmentTextViewButton();
}

uint64_t TTRMoveRemindersToListPresenterCapability.TargetList.init(listOrCustomSmartList:)()
{
  return TTRMoveRemindersToListPresenterCapability.TargetList.init(listOrCustomSmartList:)();
}

uint64_t TTRMoveRemindersToListPresenterCapability.showSmartListAddInfoAlertIfNeeded(_:)()
{
  return TTRMoveRemindersToListPresenterCapability.showSmartListAddInfoAlertIfNeeded(_:)();
}

uint64_t TTRMoveRemindersToListPresenterCapability.paramsForDropping(_:into:reminderForDragItem:)()
{
  return TTRMoveRemindersToListPresenterCapability.paramsForDropping(_:into:reminderForDragItem:)();
}

uint64_t TTRShowRemindersInListWithSectionsDataModelSource.init(store:list:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)()
{
  return TTRShowRemindersInListWithSectionsDataModelSource.init(store:list:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)();
}

uint64_t type metadata accessor for TTRShowRemindersInListWithSectionsDataModelSource()
{
  return type metadata accessor for TTRShowRemindersInListWithSectionsDataModelSource();
}

uint64_t TTRIShowRemindersEditableCell.attachmentAndView(at:)()
{
  return TTRIShowRemindersEditableCell.attachmentAndView(at:)();
}

uint64_t TTRIShowRemindersEditableCellScrollingTarget.resolvedTargetsToTry.getter()
{
  return TTRIShowRemindersEditableCellScrollingTarget.resolvedTargetsToTry.getter();
}

uint64_t TTRIShowRemindersDragPreviewParametersProvidingCell.dragPreviewParameters.getter()
{
  return TTRIShowRemindersDragPreviewParametersProvidingCell.dragPreviewParameters.getter();
}

uint64_t TTRIShowRemindersEditableCellScrollingTargetProviding<>.rectForScrolling(to:)()
{
  return TTRIShowRemindersEditableCellScrollingTargetProviding<>.rectForScrolling(to:)();
}

uint64_t TTRIShowRemindersEditableCellScrollingTargetProviding<>.rectForScrolling(toCaretIn:)()
{
  return TTRIShowRemindersEditableCellScrollingTargetProviding<>.rectForScrolling(toCaretIn:)();
}

uint64_t TTRDeleteRemindersPresenterCapability.init(interactor:)()
{
  return TTRDeleteRemindersPresenterCapability.init(interactor:)();
}

uint64_t type metadata accessor for TTRDeleteRemindersPresenterCapability()
{
  return type metadata accessor for TTRDeleteRemindersPresenterCapability();
}

uint64_t static RemindersUICoreBundleLookupObject.bundle.getter()
{
  return static RemindersUICoreBundleLookupObject.bundle.getter();
}

uint64_t type metadata accessor for RemindersUICoreBundleLookupObject()
{
  return type metadata accessor for RemindersUICoreBundleLookupObject();
}

uint64_t TTRHashtag.init(name:type:)()
{
  return TTRHashtag.init(name:type:)();
}

uint64_t TTRSection.displayName.getter()
{
  return TTRSection.displayName.getter();
}

uint64_t static TTRSection.__derived_enum_equals(_:_:)()
{
  return static TTRSection.__derived_enum_equals(_:_:)();
}

uint64_t TTRSection.init(with:store:)()
{
  return TTRSection.init(with:store:)();
}

uint64_t TTRSection.objectID.getter()
{
  return TTRSection.objectID.getter();
}

uint64_t TTRSection.parentID.getter()
{
  return TTRSection.parentID.getter();
}

uint64_t TTRSection.sectionID.getter()
{
  return TTRSection.sectionID.getter();
}

uint64_t TTRListType.PredefinedSmartListType.remSmartListType.getter()
{
  return TTRListType.PredefinedSmartListType.remSmartListType.getter();
}

uint64_t TTRListType.PredefinedSmartListType.smartList(in:)()
{
  return TTRListType.PredefinedSmartListType.smartList(in:)();
}

uint64_t TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter()
{
  return TTRListType.PredefinedSmartListType.fallbackSortingStyle.getter();
}

uint64_t TTRListType.PredefinedSmartListType.color.getter()
{
  return TTRListType.PredefinedSmartListType.color.getter();
}

uint64_t TTRListType.PredefinedSmartListType.glyph.getter()
{
  return TTRListType.PredefinedSmartListType.glyph.getter();
}

uint64_t TTRListType.PredefinedSmartListType.title.getter()
{
  return TTRListType.PredefinedSmartListType.title.getter();
}

uint64_t TTRListType.PredefinedSmartListType.longTitle.getter()
{
  return TTRListType.PredefinedSmartListType.longTitle.getter();
}

uint64_t TTRListType.description.getter()
{
  return TTRListType.description.getter();
}

uint64_t TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)()
{
  return TTRListType.SortingCapability.init(canChangeSortingStyle:canSortByManual:initialSortingStyle:)();
}

uint64_t TTRListType.SortingCapability.supportedSortingStyles.getter()
{
  return TTRListType.SortingCapability.supportedSortingStyles.getter();
}

uint64_t type metadata accessor for TTRListType.SortingCapability()
{
  return type metadata accessor for TTRListType.SortingCapability();
}

uint64_t TTRListType.PredefinedSmartListVisibilityOptions.merging(with:)()
{
  return TTRListType.PredefinedSmartListVisibilityOptions.merging(with:)();
}

uint64_t type metadata accessor for TTRListType()
{
  return type metadata accessor for TTRListType();
}

uint64_t static TTRIKeyboard.isInFloatingKeyboardMode.getter()
{
  return static TTRIKeyboard.isInFloatingKeyboardMode.getter();
}

uint64_t static TTRIMenuItem.== infix(_:_:)()
{
  return static TTRIMenuItem.== infix(_:_:)();
}

uint64_t TTRIMenuItem.init(title:image:item:selectedTitle:)()
{
  return TTRIMenuItem.init(title:image:item:selectedTitle:)();
}

uint64_t type metadata accessor for TTRIMenuItem()
{
  return type metadata accessor for TTRIMenuItem();
}

uint64_t TTRSectionID.remObjectID.getter()
{
  return TTRSectionID.remObjectID.getter();
}

uint64_t TTRSectionID.description.getter()
{
  return TTRSectionID.description.getter();
}

uint64_t static TTRSectionID.__derived_enum_equals(_:_:)()
{
  return static TTRSectionID.__derived_enum_equals(_:_:)();
}

uint64_t TTRSectionID.hash(into:)()
{
  return TTRSectionID.hash(into:)();
}

uint64_t TTRAssignment.assignmentString.getter()
{
  return TTRAssignment.assignmentString.getter();
}

uint64_t TTRAssignment.originatorString.getter()
{
  return TTRAssignment.originatorString.getter();
}

uint64_t TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor()
{
  return TTRHelpAnchor.IOSHelpTopic.defaultVersion.unsafeMutableAddressor();
}

uint64_t TTRISeparator.backgroundColor.setter()
{
  return TTRISeparator.backgroundColor.setter();
}

uint64_t TTRISeparator.init(axis:)()
{
  return TTRISeparator.init(axis:)();
}

uint64_t TTRISeparator.dotted.setter()
{
  return TTRISeparator.dotted.setter();
}

uint64_t TTRISeparator.thickness.setter()
{
  return TTRISeparator.thickness.setter();
}

uint64_t type metadata accessor for TTRISeparator()
{
  return type metadata accessor for TTRISeparator();
}

uint64_t TTRITableCell.isHidden.setter()
{
  return TTRITableCell.isHidden.setter();
}

uint64_t TTRITableCell.init(_:)()
{
  return TTRITableCell.init(_:)();
}

uint64_t static TTRListColors.availableColors(for:)()
{
  return static TTRListColors.availableColors(for:)();
}

uint64_t TTRListColors.defaultColor.unsafeMutableAddressor()
{
  return TTRListColors.defaultColor.unsafeMutableAddressor();
}

uint64_t static TTRListColors.searchResult.getter()
{
  return static TTRListColors.searchResult.getter();
}

uint64_t static TTRListColors.recentlyDeleted.getter()
{
  return static TTRListColors.recentlyDeleted.getter();
}

uint64_t TTRListColors.Color.nativeColor.getter()
{
  return TTRListColors.Color.nativeColor.getter();
}

uint64_t TTRListColors.Color.description.getter()
{
  return TTRListColors.Color.description.getter();
}

uint64_t TTRListColors.Color.localizedDescription.getter()
{
  return TTRListColors.Color.localizedDescription.getter();
}

uint64_t static TTRListColors.Color.__derived_enum_equals(_:_:)()
{
  return static TTRListColors.Color.__derived_enum_equals(_:_:)();
}

uint64_t static TTRListColors.color(for:)()
{
  return static TTRListColors.color(for:)();
}

{
  return static TTRListColors.color(for:)();
}

uint64_t static TTRListColors.tagged.getter()
{
  return static TTRListColors.tagged.getter();
}

uint64_t static TTRListColors.remColor(for:list:)()
{
  return static TTRListColors.remColor(for:list:)();
}

uint64_t static TTRListColors.SmartList.siriFoundInApps.getter()
{
  return static TTRListColors.SmartList.siriFoundInApps.getter();
}

uint64_t static TTRListColors.SmartList.all.getter()
{
  return static TTRListColors.SmartList.all.getter();
}

uint64_t static TTRListColors.SmartList.today.getter()
{
  return static TTRListColors.SmartList.today.getter();
}

uint64_t static TTRListColors.SmartList.flagged.getter()
{
  return static TTRListColors.SmartList.flagged.getter();
}

uint64_t static TTRListColors.SmartList.assigned.getter()
{
  return static TTRListColors.SmartList.assigned.getter();
}

uint64_t static TTRListColors.SmartList.completed.getter()
{
  return static TTRListColors.SmartList.completed.getter();
}

uint64_t static TTRListColors.SmartList.scheduled.getter()
{
  return static TTRListColors.SmartList.scheduled.getter();
}

uint64_t type metadata accessor for TTRListColors()
{
  return type metadata accessor for TTRListColors();
}

uint64_t TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)()
{
  return TTRListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();
}

uint64_t TTRListEditor.deleteSection(_:)()
{
  return TTRListEditor.deleteSection(_:)();
}

uint64_t static TTRListEditor.actualOperation(forChangingParentListOf:to:)()
{
  return static TTRListEditor.actualOperation(forChangingParentListOf:to:)();
}

uint64_t static TTRListEditor.filterOutSubtasksWithParents(in:)()
{
  return static TTRListEditor.filterOutSubtasksWithParents(in:)();
}

Swift::Void __swiftcall TTRListEditor.edit(badgeEmoji:)(Swift::String badgeEmoji)
{
}

Swift::Void __swiftcall TTRListEditor.edit(badgeEmblem:)(__C::REMListBadgeEmblem badgeEmblem)
{
}

Swift::Void __swiftcall TTRListEditor.edit(showingLargeAttachments:)(Swift::Bool showingLargeAttachments)
{
}

Swift::Void __swiftcall TTRListEditor.edit(shouldCategorizeGroceryItems:)(Swift::Bool shouldCategorizeGroceryItems)
{
}

Swift::Void __swiftcall TTRListEditor.edit(name:)(Swift::String name)
{
}

uint64_t TTRListEditor.edit(color:)()
{
  return TTRListEditor.edit(color:)();
}

uint64_t TTRListEditor.store.getter()
{
  return TTRListEditor.store.getter();
}

uint64_t type metadata accessor for TTRListEditor()
{
  return type metadata accessor for TTRListEditor();
}

uint64_t TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor()
{
  return TTRCommonAsset.Color.hashtagTokenTextColor.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Color.remindersColor1.unsafeMutableAddressor()
{
  return TTRCommonAsset.Color.remindersColor1.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Color.emblemPickerForeground.unsafeMutableAddressor()
{
  return TTRCommonAsset.Color.emblemPickerForeground.unsafeMutableAddressor();
}

uint64_t static TTRCommonAsset.Color.RowAction.flagOrUnflag.getter()
{
  return static TTRCommonAsset.Color.RowAction.flagOrUnflag.getter();
}

uint64_t static TTRCommonAsset.Color.RowAction.indentOrOutdent.getter()
{
  return static TTRCommonAsset.Color.RowAction.indentOrOutdent.getter();
}

uint64_t static TTRCommonAsset.Color.RowAction.customDateAndTime.getter()
{
  return static TTRCommonAsset.Color.RowAction.customDateAndTime.getter();
}

uint64_t static TTRCommonAsset.Color.RowAction.move.getter()
{
  return static TTRCommonAsset.Color.RowAction.move.getter();
}

uint64_t static TTRCommonAsset.Color.RowAction.details.getter()
{
  return static TTRCommonAsset.Color.RowAction.details.getter();
}

uint64_t static TTRCommonAsset.Color.RowAction.weekend.getter()
{
  return static TTRCommonAsset.Color.RowAction.weekend.getter();
}

uint64_t static TTRCommonAsset.Color.RowAction.tomorrow.getter()
{
  return static TTRCommonAsset.Color.RowAction.tomorrow.getter();
}

uint64_t TTRCommonAsset.Image.columnsIcon.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.columnsIcon.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.sectionIcon.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Image.locationPinHome.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.locationPinHome.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Image.locationPinWork.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.locationPinWork.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Image.newReminderPlus.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.newReminderPlus.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Image.locationPinVehicle.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.locationPinVehicle.unsafeMutableAddressor();
}

uint64_t TTRCommonAsset.Image.emojiIcon.unsafeMutableAddressor()
{
  return TTRCommonAsset.Image.emojiIcon.unsafeMutableAddressor();
}

uint64_t TTRITableGroup.move(_:to:at:)()
{
  return TTRITableGroup.move(_:to:at:)();
}

uint64_t type metadata accessor for TTRITableGroup()
{
  return type metadata accessor for TTRITableGroup();
}

uint64_t TTRModuleState.modelLoaded.getter()
{
  return TTRModuleState.modelLoaded.getter();
}

Swift::Void __swiftcall TTRModuleState.modelDidLoad(defersResolveOverride:)(Swift::Bool_optional defersResolveOverride)
{
}

uint64_t TTRModuleState.readyPromise.getter()
{
  return TTRModuleState.readyPromise.getter();
}

Swift::Void __swiftcall TTRModuleState.viewDidAppear()()
{
}

Swift::Void __swiftcall TTRModuleState.modelWillUnload()()
{
}

Swift::Void __swiftcall TTRModuleState.modelWillRefresh()()
{
}

Swift::Void __swiftcall TTRModuleState.viewWillDisappear()()
{
}

uint64_t TTRModuleState.readyAndModelIsUpToDatePromise.getter()
{
  return TTRModuleState.readyAndModelIsUpToDatePromise.getter();
}

uint64_t TTRModuleState.init(name:)()
{
  return TTRModuleState.init(name:)();
}

uint64_t TTRModuleState.isReady.getter()
{
  return TTRModuleState.isReady.getter();
}

uint64_t type metadata accessor for TTRModuleState()
{
  return type metadata accessor for TTRModuleState();
}

uint64_t TTRRectCorners.allCorners.unsafeMutableAddressor()
{
  return TTRRectCorners.allCorners.unsafeMutableAddressor();
}

CACornerMask __swiftcall TTRRectCorners.cornerMask(layoutDirection:isFlipped:)(UIUserInterfaceLayoutDirection layoutDirection, Swift::Bool isFlipped)
{
  return TTRRectCorners.cornerMask(layoutDirection:isFlipped:)(layoutDirection, isFlipped);
}

uint64_t TTRSectionLite.init(sectionType:)()
{
  return TTRSectionLite.init(sectionType:)();
}

uint64_t static TTRSectionLite.__derived_struct_equals(_:_:)()
{
  return static TTRSectionLite.__derived_struct_equals(_:_:)();
}

uint64_t TTRUndoContext.registerUndo(forEditing:action:)()
{
  return TTRUndoContext.registerUndo(forEditing:action:)();
}

uint64_t TTRAccesibility.RemindersList.AutoCategorization.SingleItemCategorizationFormat.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.AutoCategorization.SingleItemCategorizationFormat.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.AutoCategorization.ProbableUserCategorizationError.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.AutoCategorization.ProbableUserCategorizationError.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.AutoCategorization.MultipleItemsMultipleSectionsCategorizationFormat.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.AutoCategorization.MultipleItemsMultipleSectionsCategorizationFormat.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.AutoCategorization.MultipleItemSingleSectionCategorizationFormat.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.AutoCategorization.MultipleItemSingleSectionCategorizationFormat.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.AutoCategorization.AutoCategorizationOverlayHint.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.AutoCategorization.AutoCategorizationOverlayHint.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.ID.RemindersTable.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.ID.RemindersTable.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Label.EditDetails.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Label.EditDetails.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Label.More.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Label.More.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Rotor.OverdueTasks.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Rotor.OverdueTasks.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Rotor.CompletedTasks.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Rotor.CompletedTasks.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Rotor.IncompleteTasks.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Rotor.IncompleteTasks.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.ShowSubtasksInList.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.ShowSubtasksInList.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.GoToAppSourceUnknownApp.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.GoToAppSourceUnknownApp.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.EnterDetail.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.EnterDetail.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.PreviewImages.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.PreviewImages.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.ExpandSubtasks.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.ExpandSubtasks.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.OpenLinkFormat.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.OpenLinkFormat.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.AssignmentDetail.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.AssignmentDetail.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.CollapseSubtasks.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.CollapseSubtasks.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.CreateReminderHint.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.CreateReminderHint.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.GoToAppSourceFormat.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.GoToAppSourceFormat.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.AddNote.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.AddNote.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.EditNote.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.EditNote.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.RemindersList.Action.EditTitle.unsafeMutableAddressor()
{
  return TTRAccesibility.RemindersList.Action.EditTitle.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Attributes.Upgradable.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Attributes.Upgradable.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Attributes.Pinned.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Attributes.Pinned.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Attributes.Expanded.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Attributes.Expanded.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Attributes.Collapsed.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Attributes.Collapsed.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.ID.AccountsListTable.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.ID.AccountsListTable.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.List.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.List.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.DragAndDrop.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.DragAndDrop.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.GroupEditing.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.GroupEditing.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.HeadingExpand.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.HeadingExpand.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.HeadingUpgrade.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.HeadingUpgrade.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.HeadingCollapse.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.HeadingCollapse.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Hint.Group.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Hint.Group.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Label.SmartList.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Label.SmartList.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Label.Migrate.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Label.Migrate.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.ManageSharedList.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.ManageSharedList.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.ShareList.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.ShareList.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.SmartListInfo.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.SmartListInfo.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.ListInfo.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.ListInfo.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.Expand.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.Expand.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.Collapse.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.Collapse.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Action.GroupInfo.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Action.GroupInfo.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Format.Name_ItemCount.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Format.GroupName_ItemCount.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Format.GroupName_ItemCount.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Format.GroupMemberName_ItemCount.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Format.GroupMemberName_ItemCount.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Format.GroupName.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Format.GroupName.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.AccountsList.Format.ItemCount.unsafeMutableAddressor()
{
  return TTRAccesibility.AccountsList.Format.ItemCount.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.ImagePlaceholders.DifferentiateWithoutColors_Overdue.unsafeMutableAddressor()
{
  return TTRAccesibility.ImagePlaceholders.DifferentiateWithoutColors_Overdue.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.DifferentiateWithoutColorsIcons.OverdueReminder.unsafeMutableAddressor()
{
  return TTRAccesibility.DifferentiateWithoutColorsIcons.OverdueReminder.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Announcements.OptionsChanged.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Announcements.OptionsChanged.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Announcements.MoreOptionsShown.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Announcements.MoreOptionsShown.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Announcements.FewerOptionsShown.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Announcements.FewerOptionsShown.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Hint.AnyOrAllMenuHint.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Hint.AnyOrAllMenuHint.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Hint.Edit.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Hint.Edit.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Label.SentenceEnd.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Label.On.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Label.On.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Label.Off.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Label.Off.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Label.Untitled.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.General.Label.Separator.unsafeMutableAddressor()
{
  return TTRAccesibility.General.Label.Separator.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.Hashtags.GoToHashtagHint.unsafeMutableAddressor()
{
  return TTRAccesibility.Hashtags.GoToHashtagHint.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.Sections.EmptySection.unsafeMutableAddressor()
{
  return TTRAccesibility.Sections.EmptySection.unsafeMutableAddressor();
}

uint64_t TTRAccesibility.Templates.Details.unsafeMutableAddressor()
{
  return TTRAccesibility.Templates.Details.unsafeMutableAddressor();
}

uint64_t TTRUserDefaults.appUserDefaults.unsafeMutableAddressor()
{
  return TTRUserDefaults.appUserDefaults.unsafeMutableAddressor();
}

uint64_t TTRUserDefaults.activitySessionId.getter()
{
  return TTRUserDefaults.activitySessionId.getter();
}

uint64_t TTRUserDefaults.activitySessionId.setter()
{
  return TTRUserDefaults.activitySessionId.setter();
}

uint64_t TTRUserDefaults.todayListIsGrouped.getter()
{
  return TTRUserDefaults.todayListIsGrouped.getter();
}

uint64_t TTRUserDefaults.todayListIsGrouped.setter()
{
  return TTRUserDefaults.todayListIsGrouped.setter();
}

uint64_t TTRUserDefaults.groceryTipDismissed.getter()
{
  return TTRUserDefaults.groceryTipDismissed.getter();
}

uint64_t static TTRUserDefaults.WelcomeScreenVersion.current.getter()
{
  return static TTRUserDefaults.WelcomeScreenVersion.current.getter();
}

uint64_t TTRUserDefaults.publicSharingEnabled.getter()
{
  return TTRUserDefaults.publicSharingEnabled.getter();
}

uint64_t TTRUserDefaults.hasCreatedGroceryList.modify()
{
  return TTRUserDefaults.hasCreatedGroceryList.modify();
}

uint64_t TTRUserDefaults.hasCreatedGroceryList.getter()
{
  return TTRUserDefaults.hasCreatedGroceryList.getter();
}

uint64_t TTRUserDefaults.hasCreatedGroceryList.setter()
{
  return TTRUserDefaults.hasCreatedGroceryList.setter();
}

uint64_t TTRUserDefaults.migrationTipDismissed.setter()
{
  return TTRUserDefaults.migrationTipDismissed.setter();
}

uint64_t TTRUserDefaults.iCloudSyncTipDismissed.setter()
{
  return TTRUserDefaults.iCloudSyncTipDismissed.setter();
}

uint64_t TTRUserDefaults.SmartListVersionWarning.init(creationDate:supportedVersion:)()
{
  return TTRUserDefaults.SmartListVersionWarning.init(creationDate:supportedVersion:)();
}

uint64_t type metadata accessor for TTRUserDefaults.SmartListVersionWarning()
{
  return type metadata accessor for TTRUserDefaults.SmartListVersionWarning();
}

uint64_t TTRUserDefaults.showingLargeAttachments(forType:)()
{
  return TTRUserDefaults.showingLargeAttachments(forType:)();
}

uint64_t TTRUserDefaults.activitySessionBeginTime.getter()
{
  return TTRUserDefaults.activitySessionBeginTime.getter();
}

uint64_t TTRUserDefaults.activitySessionBeginTime.setter()
{
  return TTRUserDefaults.activitySessionBeginTime.setter();
}

uint64_t TTRUserDefaults.animationSlowModeEnabled.getter()
{
  return TTRUserDefaults.animationSlowModeEnabled.getter();
}

uint64_t TTRUserDefaults.animationSlowModeEnabled.setter()
{
  return TTRUserDefaults.animationSlowModeEnabled.setter();
}

uint64_t TTRUserDefaults.smartListVersionWarnings.modify()
{
  return TTRUserDefaults.smartListVersionWarnings.modify();
}

uint64_t TTRUserDefaults.smartListVersionWarnings.getter()
{
  return TTRUserDefaults.smartListVersionWarnings.getter();
}

uint64_t TTRUserDefaults.smartListVersionWarnings.setter()
{
  return TTRUserDefaults.smartListVersionWarnings.setter();
}

uint64_t TTRUserDefaults.migrationFailureAlertShown.getter()
{
  return TTRUserDefaults.migrationFailureAlertShown.getter();
}

uint64_t TTRUserDefaults.setShowingLargeAttachments(value:forType:)()
{
  return TTRUserDefaults.setShowingLargeAttachments(value:forType:)();
}

uint64_t TTRUserDefaults.lastSeenWelcomeScreenVersion.getter()
{
  return TTRUserDefaults.lastSeenWelcomeScreenVersion.getter();
}

uint64_t TTRUserDefaults.lastSeenWelcomeScreenVersion.setter()
{
  return TTRUserDefaults.lastSeenWelcomeScreenVersion.setter();
}

uint64_t TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.getter()
{
  return TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.getter();
}

uint64_t TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.setter()
{
  return TTRUserDefaults.showUpgradeWhenICloudSyncEnabled.setter();
}

uint64_t TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)()
{
  return TTRUserDefaults.shouldHideEmptySectionsInGroceryList(with:)();
}

uint64_t type metadata accessor for TTRUserDefaults()
{
  return type metadata accessor for TTRUserDefaults();
}

uint64_t TTRWidgetCenter.shared.unsafeMutableAddressor()
{
  return TTRWidgetCenter.shared.unsafeMutableAddressor();
}

uint64_t TTRAccountEditor.move(list:topLevelPosition:)()
{
  return TTRAccountEditor.move(list:topLevelPosition:)();
}

uint64_t TTRAccountEditor.move(list:to:positionWithinGroup:)()
{
  return TTRAccountEditor.move(list:to:positionWithinGroup:)();
}

uint64_t type metadata accessor for TTRAccountEditor()
{
  return type metadata accessor for TTRAccountEditor();
}

uint64_t TTRCheapTreeDiff<A>(source:target:sourceChildrenGetter:targetChildrenGetter:contentEqualityChecker:)()
{
  return TTRCheapTreeDiff<A>(source:target:sourceChildrenGetter:targetChildrenGetter:contentEqualityChecker:)();
}

uint64_t TTRITableSection.footer.setter()
{
  return TTRITableSection.footer.setter();
}

uint64_t TTRITableSection.init(header:footer:items:)()
{
  return TTRITableSection.init(header:footer:items:)();
}

uint64_t TTRITableSection.header.setter()
{
  return TTRITableSection.header.setter();
}

uint64_t TTRITableSection.isHidden.setter()
{
  return TTRITableSection.isHidden.setter();
}

uint64_t type metadata accessor for TTRITableSection()
{
  return type metadata accessor for TTRITableSection();
}

Swift::Void __swiftcall TTRITipKitSignal.donate(signalContext:)(Swift::String_optional signalContext)
{
}

uint64_t TTRListBadgeView.ImageParams.init(color:blendMode:contentMode:)()
{
  return TTRListBadgeView.ImageParams.init(color:blendMode:contentMode:)();
}

uint64_t static TTRListBadgeView.ShadowParams.defaultShadowOpacity.getter()
{
  return static TTRListBadgeView.ShadowParams.defaultShadowOpacity.getter();
}

uint64_t TTRListBadgeView.ShadowParams.init(offset:radius:opacity:)()
{
  return TTRListBadgeView.ShadowParams.init(offset:radius:opacity:)();
}

Swift::Void __swiftcall TTRListBadgeView.enableCursorInteraction()()
{
}

uint64_t TTRListBadgeView.enableHoverEffectIfApplicable(padding:)()
{
  return TTRListBadgeView.enableHoverEffectIfApplicable(padding:)();
}

uint64_t TTRListBadgeView.Shape.customSmartListInListRowView.unsafeMutableAddressor()
{
  return TTRListBadgeView.Shape.customSmartListInListRowView.unsafeMutableAddressor();
}

uint64_t TTRListBadgeView.Shape.customSmartListInListDetailView.unsafeMutableAddressor()
{
  return TTRListBadgeView.Shape.customSmartListInListDetailView.unsafeMutableAddressor();
}

uint64_t TTRListBadgeView.configure(with:customSmartListShape:)()
{
  return TTRListBadgeView.configure(with:customSmartListShape:)();
}

uint64_t type metadata accessor for TTRListBadgeView()
{
  return type metadata accessor for TTRListBadgeView();
}

uint64_t AlertStyleBuilder.primaryButtonTitle.getter()
{
  return AlertStyleBuilder.primaryButtonTitle.getter();
}

uint64_t AlertStyleBuilder.title.getter()
{
  return AlertStyleBuilder.title.getter();
}

uint64_t AlertStyleBuilder.message.getter()
{
  return AlertStyleBuilder.message.getter();
}

uint64_t AlertStyleBuilder.init(alertInfo:actionSheetInfo:alertPreferredStyle:popoverAnchor:)()
{
  return AlertStyleBuilder.init(alertInfo:actionSheetInfo:alertPreferredStyle:popoverAnchor:)();
}

uint64_t type metadata accessor for TTRDateChangeType()
{
  return type metadata accessor for TTRDateChangeType();
}

Swift::Void __swiftcall TTRDeferredAction.scheduleNextRunLoop(reason:)(Swift::String reason)
{
}

Swift::Void __swiftcall TTRDeferredAction.drain(reason:)(Swift::String reason)
{
}

uint64_t TTRDeferredAction.init(queue:)()
{
  return TTRDeferredAction.init(queue:)();
}

uint64_t type metadata accessor for TTRDeferredAction()
{
  return type metadata accessor for TTRDeferredAction();
}

uint64_t type metadata accessor for TTRIHashtagButton()
{
  return type metadata accessor for TTRIHashtagButton();
}

uint64_t static TTRIPopoverAnchor.sourceItem(_:permittedArrowDirections:)()
{
  return static TTRIPopoverAnchor.sourceItem(_:permittedArrowDirections:)();
}

uint64_t static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)()
{
  return static TTRIPopoverAnchor.sourceView(_:permittedArrowDirections:)();
}

uint64_t static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)()
{
  return static TTRIPopoverAnchor.barButtonItem(_:permittedArrowDirections:)();
}

uint64_t static TTRIPopoverAnchor.trailingPortion(in:permittedArrowDirections:)()
{
  return static TTRIPopoverAnchor.trailingPortion(in:permittedArrowDirections:)();
}

uint64_t TTRIPopoverAnchor.withPermittedArrowDirectionsIfNil(_:)()
{
  return TTRIPopoverAnchor.withPermittedArrowDirectionsIfNil(_:)();
}

uint64_t static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)()
{
  return static TTROneshotEditing.oneshotEdit(_:undoManager:editBlock:)();
}

uint64_t TTROneshotEditing.init(item:saveRequest:undoManager:)()
{
  return TTROneshotEditing.init(item:saveRequest:undoManager:)();
}

uint64_t TTRPrivacyChecker.dismissInlineRequest(for:)()
{
  return TTRPrivacyChecker.dismissInlineRequest(for:)();
}

Swift::Void __swiftcall TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(Swift::OpaquePointer a1)
{
}

{
  TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded(for:)(a1._rawValue);
}

Swift::Void __swiftcall TTRPrivacyChecker.showReminderDeletePrivacyWarningIfNeeded()()
{
}

uint64_t TTRReminderEditor.addHashtag(_:)()
{
  return TTRReminderEditor.addHashtag(_:)();
}

uint64_t TTRReminderEditor.__allocating_init(changeItem:undoContext:)()
{
  return TTRReminderEditor.__allocating_init(changeItem:undoContext:)();
}

uint64_t TTRReminderEditor.addAssignment(assigneeID:originatorID:)()
{
  return TTRReminderEditor.addAssignment(assigneeID:originatorID:)();
}

uint64_t TTRReminderEditor.updateHashtags(toMatchLabels:)()
{
  return TTRReminderEditor.updateHashtags(toMatchLabels:)();
}

uint64_t static TTRReminderEditor.dueDateComponents(from:isAllDay:)()
{
  return static TTRReminderEditor.dueDateComponents(from:isAllDay:)();
}

Swift::Void __swiftcall TTRReminderEditor.removeAllAssignments()()
{
}

uint64_t static TTRReminderEditor.todayDueDateComponents(now:)()
{
  return static TTRReminderEditor.todayDueDateComponents(now:)();
}

uint64_t static TTRReminderEditor.weekendDueDateComponents(now:)()
{
  return static TTRReminderEditor.weekendDueDateComponents(now:)();
}

uint64_t static TTRReminderEditor.tomorrowDueDateComponents(now:)()
{
  return static TTRReminderEditor.tomorrowDueDateComponents(now:)();
}

uint64_t static TTRReminderEditor.thisWeekendDueDateComponents(now:)()
{
  return static TTRReminderEditor.thisWeekendDueDateComponents(now:)();
}

Swift::Void __swiftcall TTRReminderEditor.add(attachments:)(Swift::OpaquePointer attachments)
{
}

uint64_t TTRReminderEditor.edit(vehicleTrigger:)()
{
  return TTRReminderEditor.edit(vehicleTrigger:)();
}

uint64_t TTRReminderEditor.edit(locationTrigger:)()
{
  return TTRReminderEditor.edit(locationTrigger:)();
}

Swift::Void __swiftcall TTRReminderEditor.edit(recurrenceRules:shouldCopyRecurrenceEnd:)(Swift::OpaquePointer_optional recurrenceRules, Swift::Bool shouldCopyRecurrenceEnd)
{
}

uint64_t TTRReminderEditor.edit(dueDateComponents:)()
{
  return TTRReminderEditor.edit(dueDateComponents:)();
}

uint64_t TTRReminderEditor.edit(dueDateComponentsUsing:)()
{
  return TTRReminderEditor.edit(dueDateComponentsUsing:)();
}

uint64_t TTRReminderEditor.edit(toMatch:now:)()
{
  return TTRReminderEditor.edit(toMatch:now:)();
}

Swift::Void __swiftcall TTRReminderEditor.edit(isFlagged:)(Swift::Bool isFlagged)
{
}

uint64_t type metadata accessor for TTRReminderEditor()
{
  return type metadata accessor for TTRReminderEditor();
}

uint64_t TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)()
{
  return TTRTemplateEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();
}

Swift::Void __swiftcall TTRTemplateEditor.edit(badgeEmoji:)(Swift::String badgeEmoji)
{
}

Swift::Void __swiftcall TTRTemplateEditor.edit(badgeEmblem:)(__C::REMListBadgeEmblem badgeEmblem)
{
}

Swift::Void __swiftcall TTRTemplateEditor.edit(showingLargeAttachments:)(Swift::Bool showingLargeAttachments)
{
}

Swift::Void __swiftcall TTRTemplateEditor.edit(name:)(Swift::String name)
{
}

uint64_t TTRTemplateEditor.edit(color:)()
{
  return TTRTemplateEditor.edit(color:)();
}

uint64_t type metadata accessor for TTRTemplateEditor()
{
  return type metadata accessor for TTRTemplateEditor();
}

uint64_t TTRTreeDiffResult.insertedElements.getter()
{
  return TTRTreeDiffResult.insertedElements.getter();
}

uint64_t TTRValueBasedMenu.buildMenu(selectionHandler:)()
{
  return TTRValueBasedMenu.buildMenu(selectionHandler:)();
}

uint64_t TTRDataViewMonitor.init<A>(initialData:dataView:delegate:queue:backgroundQueue:userInteractiveBackgroundQueue:environmentInfo:)()
{
  return TTRDataViewMonitor.init<A>(initialData:dataView:delegate:queue:backgroundQueue:userInteractiveBackgroundQueue:environmentInfo:)();
}

Swift::Void __swiftcall TTRDataViewMonitor.pause()()
{
}

Swift::Void __swiftcall TTRDataViewMonitor.resume(userInteractive:)(Swift::Bool userInteractive)
{
}

Swift::Void __swiftcall TTRDebouncedAction.drain()()
{
}

uint64_t TTRDebouncedAction.init(interval:queue:)()
{
  return TTRDebouncedAction.init(interval:queue:)();
}

Swift::Void __swiftcall TTRDebouncedAction.schedule()()
{
}

uint64_t type metadata accessor for TTRDebouncedAction()
{
  return type metadata accessor for TTRDebouncedAction();
}

uint64_t type metadata accessor for TTRIInsetTextField()
{
  return type metadata accessor for TTRIInsetTextField();
}

uint64_t TTRIPrivacyChecker.openSettingsApp(for:)()
{
  return TTRIPrivacyChecker.openSettingsApp(for:)();
}

uint64_t TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)()
{
  return TTRIPrivacyChecker.init(delegate:unUserNotificationCenter:geoService:notificationsService:userDefaults:)();
}

uint64_t type metadata accessor for TTRIPrivacyChecker()
{
  return type metadata accessor for TTRIPrivacyChecker();
}

uint64_t static TTRListBadgeEmblem.allBadges.getter()
{
  return static TTRListBadgeEmblem.allBadges.getter();
}

uint64_t type metadata accessor for TTRListBadgeEmblem()
{
  return type metadata accessor for TTRListBadgeEmblem();
}

Swift::String __swiftcall TTRLocalizedString(_:value:comment:)(Swift::String _, Swift::String value, Swift::String comment)
{
  uint64_t v3 = TTRLocalizedString(_:value:comment:)(_._countAndFlagsBits, _._object, value._countAndFlagsBits, value._object, comment._countAndFlagsBits, comment._object);
  result._object = v4;
  result._uint64_t countAndFlagsBits = v3;
  return result;
}

Swift::String __swiftcall TTRLocalizedString(_:comment:)(Swift::String _, Swift::String comment)
{
  uint64_t v2 = TTRLocalizedString(_:comment:)(_._countAndFlagsBits, _._object, comment._countAndFlagsBits, comment._object);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)()
{
  return TTRSmartListEditor.updateMembershipsOfReminders(withReminderIDs:destinationSectionID:initialSectionIDByReminderID:)();
}

Swift::Void __swiftcall TTRSmartListEditor.edit(badgeEmoji:)(Swift::String badgeEmoji)
{
}

Swift::Void __swiftcall TTRSmartListEditor.edit(badgeEmblem:)(__C::REMListBadgeEmblem badgeEmblem)
{
}

Swift::Void __swiftcall TTRSmartListEditor.edit(showingLargeAttachments:)(Swift::Bool showingLargeAttachments)
{
}

Swift::Void __swiftcall TTRSmartListEditor.edit(name:)(Swift::String name)
{
}

uint64_t TTRSmartListEditor.edit(color:)()
{
  return TTRSmartListEditor.edit(color:)();
}

uint64_t TTRSmartListEditor.edit(filter:)()
{
  return TTRSmartListEditor.edit(filter:)();
}

uint64_t type metadata accessor for TTRSmartListEditor()
{
  return type metadata accessor for TTRSmartListEditor();
}

uint64_t TTRTreeStorageItem.treeItemDescription.getter()
{
  return TTRTreeStorageItem.treeItemDescription.getter();
}

uint64_t static TTRTypedController<>.instantiateFromStoryboard(with:)()
{
  return static TTRTypedController<>.instantiateFromStoryboard(with:)();
}

uint64_t static TTRTypedController.currentArgument.getter()
{
  return static TTRTypedController.currentArgument.getter();
}

uint64_t TTRUndoableEditing.init(changeItem:undoManager:)()
{
  return TTRUndoableEditing.init(changeItem:undoManager:)();
}

uint64_t TTRUndoableEditing.undoManager.getter()
{
  return TTRUndoableEditing.undoManager.getter();
}

uint64_t static TTRUndoableEditing.reapplyActions(in:overridingTargetWith:sourceChangeItemID:)()
{
  return static TTRUndoableEditing.reapplyActions(in:overridingTargetWith:sourceChangeItemID:)();
}

uint64_t TTRWidgetRefresher.init(widgetCenter:)()
{
  return TTRWidgetRefresher.init(widgetCenter:)();
}

Swift::Void __swiftcall TTRWidgetRefresher.reloadWidgetTimelines()()
{
}

uint64_t TTRWidgetRefresher.setUpSubscriptionToReloadWidgetTimelinesUponStoreChange<A>(refreshScheduler:debounceInterval:)()
{
  return TTRWidgetRefresher.setUpSubscriptionToReloadWidgetTimelinesUponStoreChange<A>(refreshScheduler:debounceInterval:)();
}

Swift::Void __swiftcall TTRWidgetRefresher.tearDownSubscriptionToReloadWidgetTimelinesUponStoreChange()()
{
}

uint64_t type metadata accessor for TTRWidgetRefresher()
{
  return type metadata accessor for TTRWidgetRefresher();
}

uint64_t static TTRAppDelegateUtils.triggerSync(store:reason:)()
{
  return static TTRAppDelegateUtils.triggerSync(store:reason:)();
}

uint64_t TTRIDetailCellState.init(icon:title:titleTextColor:subtitle:detailText:detailTextColor:shortenedDetailText:checkmarkState:accessibilityLabel:accessibilityValue:accessibilityHint:accessibilityDifferentiateWithoutColorsIcon:)()
{
  return TTRIDetailCellState.init(icon:title:titleTextColor:subtitle:detailText:detailTextColor:shortenedDetailText:checkmarkState:accessibilityLabel:accessibilityValue:accessibilityHint:accessibilityDifferentiateWithoutColorsIcon:)();
}

uint64_t TTRIListCellContent.init(state:)()
{
  return TTRIListCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIListCellContent()
{
  return type metadata accessor for TTRIListCellContent();
}

uint64_t TTRIMenuCellContent.init(state:)()
{
  return TTRIMenuCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIMenuCellContent()
{
  return type metadata accessor for TTRIMenuCellContent();
}

Swift::Void __swiftcall TTRITextCellContent.setTextIfNotEditing(_:)(Swift::String a1)
{
}

uint64_t TTRITextCellContent.init(textAutocapitalizationType:keyboardType:state:stateChangeEvent:)()
{
  return TTRITextCellContent.init(textAutocapitalizationType:keyboardType:state:stateChangeEvent:)();
}

uint64_t TTRParticipantModel.contactHandles.getter()
{
  return TTRParticipantModel.contactHandles.getter();
}

uint64_t TTRParticipantModel.init(sharee:)()
{
  return TTRParticipantModel.init(sharee:)();
}

uint64_t TTRReminderProtocol.priorityLevel.getter()
{
  return TTRReminderProtocol.priorityLevel.getter();
}

uint64_t TTRReminderProtocol.mostRelevantVehicleTrigger()()
{
  return TTRReminderProtocol.mostRelevantVehicleTrigger()();
}

uint64_t TTRReminderProtocol.mostRelevantAlarmLocationTrigger()()
{
  return TTRReminderProtocol.mostRelevantAlarmLocationTrigger()();
}

uint64_t TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter()
{
  return TTRReminderProtocol.isRecurringReminderThatCanAdvanceForward.getter();
}

uint64_t TTRReminderProtocol.isSubtask.getter()
{
  return TTRReminderProtocol.isSubtask.getter();
}

uint64_t type metadata accessor for TTRRemindersListTip()
{
  return type metadata accessor for TTRRemindersListTip();
}

uint64_t TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)()
{
  return TTRStartupItemQueue.enqueueItem<A, B>(startupContext:promise:)();
}

uint64_t TTRStartupItemQueue.enqueueItem<A>(target:action:)()
{
  return TTRStartupItemQueue.enqueueItem<A>(target:action:)();
}

Swift::Void __swiftcall TTRStartupItemQueue.start()()
{
}

uint64_t TTRStartupItemQueue.init()()
{
  return TTRStartupItemQueue.init()();
}

uint64_t type metadata accessor for TTRStartupItemQueue()
{
  return type metadata accessor for TTRStartupItemQueue();
}

uint64_t TTRUserActivityType.activityType.getter()
{
  return TTRUserActivityType.activityType.getter();
}

uint64_t TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)()
{
  return TTRAdjustedIndexPath.unadjusted(forOriginalItemIndexPaths:)();
}

uint64_t TTRAdjustedIndexPath.description.getter()
{
  return TTRAdjustedIndexPath.description.getter();
}

uint64_t static TTRAdjustedIndexPath.__derived_struct_equals(_:_:)()
{
  return static TTRAdjustedIndexPath.__derived_struct_equals(_:_:)();
}

uint64_t type metadata accessor for TTRAdjustedIndexPath()
{
  return type metadata accessor for TTRAdjustedIndexPath();
}

uint64_t TTRAdjustedIndexPath.init(_:)()
{
  return TTRAdjustedIndexPath.init(_:)();
}

Swift::Void __swiftcall TTRIFontCustomizable.replaceFontWithRounded()()
{
}

uint64_t TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)()
{
  return TTRITableCellContent.init(state:prototypeCellView:reuseIdentifier:)();
}

uint64_t TTRITableCellContent.state.setter()
{
  return TTRITableCellContent.state.setter();
}

uint64_t TTRKeyboardAvoidance<>.stopAvoidingKeyboard()()
{
  return TTRKeyboardAvoidance<>.stopAvoidingKeyboard()();
}

uint64_t TTRKeyboardAvoidance<>.startAvoidingKeyboard()()
{
  return TTRKeyboardAvoidance<>.startAvoidingKeyboard()();
}

uint64_t TTRReminderCellStyle.placeholder.unsafeMutableAddressor()
{
  return TTRReminderCellStyle.placeholder.unsafeMutableAddressor();
}

uint64_t TTRReminderCellStyle.publicTemplate.unsafeMutableAddressor()
{
  return TTRReminderCellStyle.publicTemplate.unsafeMutableAddressor();
}

uint64_t TTRReminderCellStyle.recentlyDeleted.unsafeMutableAddressor()
{
  return TTRReminderCellStyle.recentlyDeleted.unsafeMutableAddressor();
}

uint64_t TTRReminderCellStyle.siriFoundInApps.unsafeMutableAddressor()
{
  return TTRReminderCellStyle.siriFoundInApps.unsafeMutableAddressor();
}

uint64_t TTRReminderCellStyle.normal.unsafeMutableAddressor()
{
  return TTRReminderCellStyle.normal.unsafeMutableAddressor();
}

uint64_t TTRReminderCellStyle.template.unsafeMutableAddressor()
{
  return TTRReminderCellStyle.template.unsafeMutableAddressor();
}

uint64_t TTRRemindersListTips.TipID.assetColor.getter()
{
  return TTRRemindersListTips.TipID.assetColor.getter();
}

uint64_t TTRRemindersListTips.init(tipID:tip:)()
{
  return TTRRemindersListTips.init(tipID:tip:)();
}

uint64_t type metadata accessor for TTRRemindersListTips()
{
  return type metadata accessor for TTRRemindersListTips();
}

Swift::Void __swiftcall TTRViewModelObserver.unsubscribe()()
{
}

uint64_t TTRViewModelObserver.subscribeIfNeeded(to:)()
{
  return TTRViewModelObserver.subscribeIfNeeded(to:)();
}

uint64_t TTRViewModelObserver.init(didReceiveNewValue:)()
{
  return TTRViewModelObserver.init(didReceiveNewValue:)();
}

uint64_t static TTRDebugMenuUtilities.objectIDContextualActions(provideObjectID:)()
{
  return static TTRDebugMenuUtilities.objectIDContextualActions(provideObjectID:)();
}

uint64_t static TTRGeoLocationService.newService(authorizationSource:)()
{
  return static TTRGeoLocationService.newService(authorizationSource:)();
}

uint64_t TTRGeoLocationService.authorizationStatusPublisher.getter()
{
  return TTRGeoLocationService.authorizationStatusPublisher.getter();
}

uint64_t type metadata accessor for TTRGeoLocationService()
{
  return type metadata accessor for TTRGeoLocationService();
}

uint64_t TTRIActionCellContent.init(state:)()
{
  return TTRIActionCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIActionCellContent()
{
  return type metadata accessor for TTRIActionCellContent();
}

UISpringTimingParameters __swiftcall TTRIAnimationSlowMode.adjust(_:)(UISpringTimingParameters a1)
{
  return (UISpringTimingParameters)TTRIAnimationSlowMode.adjust(_:)(a1.super.isa);
}

uint64_t type metadata accessor for TTRIAnimationSlowMode()
{
  return type metadata accessor for TTRIAnimationSlowMode();
}

uint64_t TTRIButtonCellContent.init(state:)()
{
  return TTRIButtonCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIButtonCellContent()
{
  return type metadata accessor for TTRIButtonCellContent();
}

uint64_t TTRIDateIconGenerator.generateDueDateMenuIcon(for:)()
{
  return TTRIDateIconGenerator.generateDueDateMenuIcon(for:)();
}

UIImage __swiftcall TTRIDateIconGenerator.generateTodaySmartListTemplateIcon(withText:)(Swift::String withText)
{
  return (UIImage)TTRIDateIconGenerator.generateTodaySmartListTemplateIcon(withText:)(withText._countAndFlagsBits, withText._object);
}

uint64_t type metadata accessor for TTRIDateIconGenerator()
{
  return type metadata accessor for TTRIDateIconGenerator();
}

uint64_t TTRIDetailCellContent.init(state:)()
{
  return TTRIDetailCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIDetailCellContent()
{
  return type metadata accessor for TTRIDetailCellContent();
}

uint64_t TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)()
{
  return TTRIExpandingTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:textContainer:)();
}

uint64_t TTRIExpandingTextView.forceContentOffset(_:)()
{
  return TTRIExpandingTextView.forceContentOffset(_:)();
}

uint64_t TTRISliderCellContent.init(state:)()
{
  return TTRISliderCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRISliderCellContent()
{
  return type metadata accessor for TTRISliderCellContent();
}

uint64_t TTRIToggleCellContent.init(state:)()
{
  return TTRIToggleCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIToggleCellContent()
{
  return type metadata accessor for TTRIToggleCellContent();
}

uint64_t static TTRLocalizableStrings.RemindersList.createSmartList.getter()
{
  return static TTRLocalizableStrings.RemindersList.createSmartList.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.hideCompletedRemindersButtonText.getter()
{
  return static TTRLocalizableStrings.RemindersList.hideCompletedRemindersButtonText.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.showCompletedRemindersButtonText.getter()
{
  return static TTRLocalizableStrings.RemindersList.showCompletedRemindersButtonText.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteCompletedRemindersConfirmationText(withCount:isForGroceries:supportRecentlyDeletedList:)()
{
  return static TTRLocalizableStrings.RemindersList.deleteCompletedRemindersConfirmationText(withCount:isForGroceries:supportRecentlyDeletedList:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter()
{
  return static TTRLocalizableStrings.RemindersList.deleteCustomSmartListActionText.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteRemindersConfirmationText(withCount:isForGroceries:)()
{
  return static TTRLocalizableStrings.RemindersList.deleteRemindersConfirmationText(withCount:isForGroceries:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteList.getter()
{
  return static TTRLocalizableStrings.RemindersList.deleteList.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.deleteListActionText.getter()
{
  return static TTRLocalizableStrings.RemindersList.deleteListActionText.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.indentRemindersText(withCount:isForGroceries:)()
{
  return static TTRLocalizableStrings.RemindersList.indentRemindersText(withCount:isForGroceries:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.selectReminders.getter()
{
  return static TTRLocalizableStrings.RemindersList.selectReminders.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.outdentRemindersText(withCount:isForGroceries:)()
{
  return static TTRLocalizableStrings.RemindersList.outdentRemindersText(withCount:isForGroceries:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.selectedCountText(withCount:)()
{
  return static TTRLocalizableStrings.RemindersList.selectedCountText(withCount:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.moveToSectionFormat()()
{
  return static TTRLocalizableStrings.RemindersList.moveToSectionFormat()();
}

uint64_t static TTRLocalizableStrings.RemindersList.addNotePlaceholderText.getter()
{
  return static TTRLocalizableStrings.RemindersList.addNotePlaceholderText.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)()
{
  return static TTRLocalizableStrings.RemindersList.editSectionsActionText(listLayout:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.manageSectionsActionText(listLayout:)()
{
  return static TTRLocalizableStrings.RemindersList.manageSectionsActionText(listLayout:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.clearCompletedButtonTitle.getter()
{
  return static TTRLocalizableStrings.RemindersList.clearCompletedButtonTitle.getter();
}

uint64_t static TTRLocalizableStrings.RemindersList.confirmationAlertTitleForDeletingSections(isDeletingMoreThanOneSection:currentLayout:)()
{
  return static TTRLocalizableStrings.RemindersList.confirmationAlertTitleForDeletingSections(isDeletingMoreThanOneSection:currentLayout:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.keyCommandTitleForAddingStructuredHashtag(hasExistingStructuredHashtags:)()
{
  return static TTRLocalizableStrings.RemindersList.keyCommandTitleForAddingStructuredHashtag(hasExistingStructuredHashtags:)();
}

uint64_t static TTRLocalizableStrings.RemindersList.confirmationAlertMessageForDeletingSections(isDeletingMoreThanOneSection:hasCompletedReminders:currentLayout:)()
{
  return static TTRLocalizableStrings.RemindersList.confirmationAlertMessageForDeletingSections(isDeletingMoreThanOneSection:hasCompletedReminders:currentLayout:)();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveReminders(count:)()
{
  return static TTRLocalizableStrings.UndoAction.moveReminders(count:)();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveReminders.getter()
{
  return static TTRLocalizableStrings.UndoAction.moveReminders.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeList.getter()
{
  return static TTRLocalizableStrings.UndoAction.changeList.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameList.getter()
{
  return static TTRLocalizableStrings.UndoAction.renameList.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.addReminder.getter()
{
  return static TTRLocalizableStrings.UndoAction.addReminder.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteGroup.getter()
{
  return static TTRLocalizableStrings.UndoAction.deleteGroup.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameGroup.getter()
{
  return static TTRLocalizableStrings.UndoAction.renameGroup.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.editReminder.getter()
{
  return static TTRLocalizableStrings.UndoAction.editReminder.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteSection.getter()
{
  return static TTRLocalizableStrings.UndoAction.deleteSection.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.dueDateChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.dueDateChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.flaggedChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.flaggedChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.hashtagChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.hashtagChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.addAttachments.getter()
{
  return static TTRLocalizableStrings.UndoAction.addAttachments.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.assigneeChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.assigneeChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeReminder.getter()
{
  return static TTRLocalizableStrings.UndoAction.changeReminder.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.changeTemplate.getter()
{
  return static TTRLocalizableStrings.UndoAction.changeTemplate.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.deleteReminder.getter()
{
  return static TTRLocalizableStrings.UndoAction.deleteReminder.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.hashtagsChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.hashtagsChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.locationChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.locationChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.priorityChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.priorityChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.renameTemplate.getter()
{
  return static TTRLocalizableStrings.UndoAction.renameTemplate.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.batchChangeTags.getter()
{
  return static TTRLocalizableStrings.UndoAction.batchChangeTags.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.recoverReminder.getter()
{
  return static TTRLocalizableStrings.UndoAction.recoverReminder.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.completionChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.completionChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.batchChangeDueDate.getter()
{
  return static TTRLocalizableStrings.UndoAction.batchChangeDueDate.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.markOverdueToToday.getter()
{
  return static TTRLocalizableStrings.UndoAction.markOverdueToToday.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.recurrenceRuleChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.recurrenceRuleChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.addListWithNameFormat.getter()
{
  return static TTRLocalizableStrings.UndoAction.addListWithNameFormat.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.batchChangeAssignment.getter()
{
  return static TTRLocalizableStrings.UndoAction.batchChangeAssignment.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.dropOnCustomSmartList.getter()
{
  return static TTRLocalizableStrings.UndoAction.dropOnCustomSmartList.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.moveListWithNameFormat.getter()
{
  return static TTRLocalizableStrings.UndoAction.moveListWithNameFormat.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.addSectionWithNameFormat.getter()
{
  return static TTRLocalizableStrings.UndoAction.addSectionWithNameFormat.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.addSiriSuggestedReminder.getter()
{
  return static TTRLocalizableStrings.UndoAction.addSiriSuggestedReminder.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.removeListWithNameFormat.getter()
{
  return static TTRLocalizableStrings.UndoAction.removeListWithNameFormat.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.customSmartListFilterChange.getter()
{
  return static TTRLocalizableStrings.UndoAction.customSmartListFilterChange.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.addList.getter()
{
  return static TTRLocalizableStrings.UndoAction.addList.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.pinList.getter()
{
  return static TTRLocalizableStrings.UndoAction.pinList.getter();
}

uint64_t static TTRLocalizableStrings.UndoAction.unpinList.getter()
{
  return static TTRLocalizableStrings.UndoAction.unpinList.getter();
}

uint64_t static TTRLocalizableStrings.Assignments.assigneePickerNoneOption.getter()
{
  return static TTRLocalizableStrings.Assignments.assigneePickerNoneOption.getter();
}

uint64_t static TTRLocalizableStrings.GroupDetail.showGroupInfoActionText.getter()
{
  return static TTRLocalizableStrings.GroupDetail.showGroupInfoActionText.getter();
}

uint64_t static TTRLocalizableStrings.GroupDetail.deleteGroupActionText.getter()
{
  return static TTRLocalizableStrings.GroupDetail.deleteGroupActionText.getter();
}

uint64_t static TTRLocalizableStrings.GroupDetail.includedListsCountText(withCount:)()
{
  return static TTRLocalizableStrings.GroupDetail.includedListsCountText(withCount:)();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertTitle.getter()
{
  return static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertMessage.getter()
{
  return static TTRLocalizableStrings.AccountsList.cantShowSmartListAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter()
{
  return static TTRLocalizableStrings.AccountsList.hidePredefinedSmartListText.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.showListInfoText.getter()
{
  return static TTRLocalizableStrings.AccountsList.showListInfoText.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertTitle.getter()
{
  return static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertMessage.getter()
{
  return static TTRLocalizableStrings.AccountsList.addingRemindersToSmartListAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.deleteListUndoAction.getter()
{
  return static TTRLocalizableStrings.AccountsList.deleteListUndoAction.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantPinListAlertTitle.getter()
{
  return static TTRLocalizableStrings.AccountsList.cantPinListAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.cantPinListAlertMessage.getter()
{
  return static TTRLocalizableStrings.AccountsList.cantPinListAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter()
{
  return static TTRLocalizableStrings.AccountsList.showSmartListInfoText.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.pinText.getter()
{
  return static TTRLocalizableStrings.AccountsList.pinText.getter();
}

uint64_t static TTRLocalizableStrings.AccountsList.unpinText.getter()
{
  return static TTRLocalizableStrings.AccountsList.unpinText.getter();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.settingsButtonTitle.getter()
{
  return static TTRLocalizableStrings.PrivacyAlert.settingsButtonTitle.getter();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingTitle.getter()
{
  return static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingTitle.getter();
}

uint64_t static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingMessage.getter()
{
  return static TTRLocalizableStrings.PrivacyAlert.enableICloudSyncingMessage.getter();
}

uint64_t static TTRLocalizableStrings.CompletedList.completed(dateString:)()
{
  return static TTRLocalizableStrings.CompletedList.completed(dateString:)();
}

uint64_t static TTRLocalizableStrings.LocationPicker.vehicleEventText(_:)()
{
  return static TTRLocalizableStrings.LocationPicker.vehicleEventText(_:)();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerLowText.getter()
{
  return static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerLowText.getter();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerHighText.getter()
{
  return static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerHighText.getter();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerNoneText.getter()
{
  return static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerNoneText.getter();
}

uint64_t static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerMediumText.getter()
{
  return static TTRLocalizableStrings.ReminderDetail.priorityLevelPickerMediumText.getter();
}

uint64_t static TTRLocalizableStrings.hideButtonTitle.getter()
{
  return static TTRLocalizableStrings.hideButtonTitle.getter();
}

uint64_t static TTRLocalizableStrings.showButtonTitle.getter()
{
  return static TTRLocalizableStrings.showButtonTitle.getter();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.singleItemTitle.getter()
{
  return static TTRLocalizableStrings.AutoCategorization.singleItemTitle.getter();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.multipleItemsTitle(withCount:)()
{
  return static TTRLocalizableStrings.AutoCategorization.multipleItemsTitle(withCount:)();
}

uint64_t static TTRLocalizableStrings.AutoCategorization.multipleItemsSubtitle.getter()
{
  return static TTRLocalizableStrings.AutoCategorization.multipleItemsSubtitle.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeletedReminderWithSubtasksConfirmationAlertMessage(isDeletingMoreThanOneReminder:)()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeletedReminderWithSubtasksConfirmationAlertMessage(isDeletingMoreThanOneReminder:)();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.genericRecentlyDeletedTitle.getter()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.genericRecentlyDeletedTitle.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.disclaimerString.getter()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.disclaimerString.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.deleteAllActionText.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertTitle.getter()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertMessage.getter()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.recoverReminderAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.deleteAllConfirmationAlertMessage(withCount:)();
}

uint64_t static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeleteReminderConfirmationMessage(withCount:discardRemindersCountIfNeeded:)()
{
  return static TTRLocalizableStrings.RecentlyDeletedList.permanentlyDeleteReminderConfirmationMessage(withCount:discardRemindersCountIfNeeded:)();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.dashedListMenuItem.getter()
{
  return static TTRLocalizableStrings.ReminderNoteEditingStyles.dashedListMenuItem.getter();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.orderedListMenuItem.getter()
{
  return static TTRLocalizableStrings.ReminderNoteEditingStyles.orderedListMenuItem.getter();
}

uint64_t static TTRLocalizableStrings.ReminderNoteEditingStyles.bulletedListMenuItem.getter()
{
  return static TTRLocalizableStrings.ReminderNoteEditingStyles.bulletedListMenuItem.getter();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.detailsForFooter.getter()
{
  return static TTRLocalizableStrings.ConvertToCustomSmartListAlert.detailsForFooter.getter();
}

uint64_t static TTRLocalizableStrings.ConvertToCustomSmartListAlert.makeConfirmButtonString.getter()
{
  return static TTRLocalizableStrings.ConvertToCustomSmartListAlert.makeConfirmButtonString.getter();
}

uint64_t static TTRLocalizableStrings.Alerts.deleteReminderConfirmationTitle(isDeletingMoreThanOneReminder:)()
{
  return static TTRLocalizableStrings.Alerts.deleteReminderConfirmationTitle(isDeletingMoreThanOneReminder:)();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderConfirmationTitle(isUpdatingMoreThanOneReminder:)()
{
  return static TTRLocalizableStrings.Alerts.updateRecurringReminderConfirmationTitle(isUpdatingMoreThanOneReminder:)();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderThisInstanceButton(isUpdatingMoreThanOneReminder:)()
{
  return static TTRLocalizableStrings.Alerts.updateRecurringReminderThisInstanceButton(isUpdatingMoreThanOneReminder:)();
}

uint64_t static TTRLocalizableStrings.Alerts.deleteReminderWithSubtasksConfirmationTitle(isDeletingMoreThanOneReminder:)()
{
  return static TTRLocalizableStrings.Alerts.deleteReminderWithSubtasksConfirmationTitle(isDeletingMoreThanOneReminder:)();
}

uint64_t static TTRLocalizableStrings.Alerts.updateRecurringReminderAllFutureInstancesButton.getter()
{
  return static TTRLocalizableStrings.Alerts.updateRecurringReminderAllFutureInstancesButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.doneButton.getter()
{
  return static TTRLocalizableStrings.Common.doneButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.moveButton.getter()
{
  return static TTRLocalizableStrings.Common.moveButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.saveButton.getter()
{
  return static TTRLocalizableStrings.Common.saveButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.createButton.getter()
{
  return static TTRLocalizableStrings.Common.createButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.deleteButton.getter()
{
  return static TTRLocalizableStrings.Common.deleteButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.dotSeparator.getter()
{
  return static TTRLocalizableStrings.Common.dotSeparator.getter();
}

uint64_t static TTRLocalizableStrings.Common.notNowButton.getter()
{
  return static TTRLocalizableStrings.Common.notNowButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.renameButton.getter()
{
  return static TTRLocalizableStrings.Common.renameButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.updateButton.getter()
{
  return static TTRLocalizableStrings.Common.updateButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.alertOKButton.getter()
{
  return static TTRLocalizableStrings.Common.alertOKButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.recoverButton.getter()
{
  return static TTRLocalizableStrings.Common.recoverButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.continueButton.getter()
{
  return static TTRLocalizableStrings.Common.continueButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.settingsButton.getter()
{
  return static TTRLocalizableStrings.Common.settingsButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.learnMoreButton.getter()
{
  return static TTRLocalizableStrings.Common.learnMoreButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.recurrenceFormat.getter()
{
  return static TTRLocalizableStrings.Common.recurrenceFormat.getter();
}

uint64_t static TTRLocalizableStrings.Common.alertCancelButton.getter()
{
  return static TTRLocalizableStrings.Common.alertCancelButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.alertDeleteButton.getter()
{
  return static TTRLocalizableStrings.Common.alertDeleteButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)()
{
  return static TTRLocalizableStrings.Common.remindersCountText(withCount:isForGroceries:)();
}

uint64_t static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter()
{
  return static TTRLocalizableStrings.Common.alertDiscardChangesButton.getter();
}

uint64_t static TTRLocalizableStrings.Common.dueDateAndRecurrenceFormat.getter()
{
  return static TTRLocalizableStrings.Common.dueDateAndRecurrenceFormat.getter();
}

uint64_t static TTRLocalizableStrings.Common.defaultTitleForBlankReminder(effectiveParentList:)()
{
  return static TTRLocalizableStrings.Common.defaultTitleForBlankReminder(effectiveParentList:)();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableAddedItemNotifications.getter()
{
  return static TTRLocalizableStrings.Sharing.Notifications.enableAddedItemNotifications.getter();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableAddedReminderNotifications.getter()
{
  return static TTRLocalizableStrings.Sharing.Notifications.enableAddedReminderNotifications.getter();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableCompletedItemNotifications.getter()
{
  return static TTRLocalizableStrings.Sharing.Notifications.enableCompletedItemNotifications.getter();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.enableCompletedReminderNotifications.getter()
{
  return static TTRLocalizableStrings.Sharing.Notifications.enableCompletedReminderNotifications.getter();
}

uint64_t static TTRLocalizableStrings.Sharing.Notifications.sectionHeaderTitle.getter()
{
  return static TTRLocalizableStrings.Sharing.Notifications.sectionHeaderTitle.getter();
}

uint64_t static TTRLocalizableStrings.Sharing.sharedListSummaryForShareSheet.getter()
{
  return static TTRLocalizableStrings.Sharing.sharedListSummaryForShareSheet.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.allTagsText.getter()
{
  return static TTRLocalizableStrings.Hashtags.allTagsText.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.showLessText.getter()
{
  return static TTRLocalizableStrings.Hashtags.showLessText.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.showMoreText.getter()
{
  return static TTRLocalizableStrings.Hashtags.showMoreText.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListName(forSelectedLabelCount:)()
{
  return static TTRLocalizableStrings.Hashtags.taggedListName(forSelectedLabelCount:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagAlertTitle.getter()
{
  return static TTRLocalizableStrings.Hashtags.addTagAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)()
{
  return static TTRLocalizableStrings.Hashtags.deleteTagMenuItem(tagCount:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter()
{
  return static TTRLocalizableStrings.Hashtags.renameTagMenuItem.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.showMoreCountText(withCount:)()
{
  return static TTRLocalizableStrings.Hashtags.showMoreCountText(withCount:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.deletingTagMessage(hashtags:)()
{
  return static TTRLocalizableStrings.Hashtags.deletingTagMessage(hashtags:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.renamingTagMessage.getter()
{
  return static TTRLocalizableStrings.Hashtags.renamingTagMessage.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagAlertAddButton.getter()
{
  return static TTRLocalizableStrings.Hashtags.addTagAlertAddButton.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.addTagPromptPlaceholder.getter()
{
  return static TTRLocalizableStrings.Hashtags.addTagPromptPlaceholder.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsMessage(from:to:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)()
{
  return static TTRLocalizableStrings.Hashtags.tagAlreadyExistsMessage(from:to:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListNameForAllTags.getter()
{
  return static TTRLocalizableStrings.Hashtags.taggedListNameForAllTags.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertTitle(smartListCount:)()
{
  return static TTRLocalizableStrings.Hashtags.deleteSmartListAlertTitle(smartListCount:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.taggedListNameForUntagged.getter()
{
  return static TTRLocalizableStrings.Hashtags.taggedListNameForUntagged.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertTitle.getter()
{
  return static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertMessage(hashtagCount:smartListNames:)()
{
  return static TTRLocalizableStrings.Hashtags.deleteSmartListAlertMessage(hashtagCount:smartListNames:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteTagConfirmationMessage(hashtags:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)()
{
  return static TTRLocalizableStrings.Hashtags.deleteTagConfirmationMessage(hashtags:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.renameTagConfirmationMessage(hashtag:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)()
{
  return static TTRLocalizableStrings.Hashtags.renameTagConfirmationMessage(hashtag:numberOfRemindersToBeUpdated:numberOfCustomSmartListsToBeUpdated:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.deleteSmartListAlertDeleteButton(hashtagCount:smartListCount:)()
{
  return static TTRLocalizableStrings.Hashtags.deleteSmartListAlertDeleteButton(hashtagCount:smartListCount:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionAllTags.getter()
{
  return static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionAllTags.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertDiscardButton.getter()
{
  return static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertDiscardButton.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertReplaceButton.getter()
{
  return static TTRLocalizableStrings.Hashtags.tagAlreadyExistsAlertReplaceButton.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionUntagged.getter()
{
  return static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionUntagged.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.genericHashtagSelectionWithMenuDescription(forLabelCount:)()
{
  return static TTRLocalizableStrings.Hashtags.genericHashtagSelectionWithMenuDescription(forLabelCount:)();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForOneTagFormat.getter()
{
  return static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForOneTagFormat.getter();
}

uint64_t static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForTwoTagsFormat.getter()
{
  return static TTRLocalizableStrings.Hashtags.hashtagSelectionDescriptionWithMenuForTwoTagsFormat.getter();
}

uint64_t static TTRLocalizableStrings.Sections.editSectionsTitle(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.editSectionsTitle(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.hideEmptySectionsSubtitle(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.hideEmptySectionsSubtitle(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.moveToSectionText(withSelectedRemindersCount:listLayout:)()
{
  return static TTRLocalizableStrings.Sections.moveToSectionText(withSelectedRemindersCount:listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.addSectionActionText(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.addSectionActionText(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.newSectionActionText(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.sectionsCanonicalName(name:)()
{
  return static TTRLocalizableStrings.Sections.sectionsCanonicalName(name:)();
}

uint64_t static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.newSectionWithSelection(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.suggestedSectionHeaderText(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.suggestedSectionHeaderText(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.newSectionWithSelectionText(withSelectedRemindersCount:listLayout:)()
{
  return static TTRLocalizableStrings.Sections.newSectionWithSelectionText(withSelectedRemindersCount:listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.suggestedSectionHeaderDescriptionText(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.suggestedSectionHeaderDescriptionText(listLayout:)();
}

uint64_t static TTRLocalizableStrings.Sections.hideEmpty(listLayout:)()
{
  return static TTRLocalizableStrings.Sections.hideEmpty(listLayout:)();
}

uint64_t static TTRLocalizableStrings.LearnMore.addRemindersToSmartLists.getter()
{
  return static TTRLocalizableStrings.LearnMore.addRemindersToSmartLists.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.howToAddRemindersToSmartLists.getter()
{
  return static TTRLocalizableStrings.LearnMore.howToAddRemindersToSmartLists.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsAdding.getter()
{
  return static TTRLocalizableStrings.LearnMore.tagsAdding.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsBrowser.getter()
{
  return static TTRLocalizableStrings.LearnMore.tagsBrowser.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsSummary.getter()
{
  return static TTRLocalizableStrings.LearnMore.tagsSummary.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsCreating.getter()
{
  return static TTRLocalizableStrings.LearnMore.tagsCreating.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.filteringTags.getter()
{
  return static TTRLocalizableStrings.LearnMore.filteringTags.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.usingTagsBody.getter()
{
  return static TTRLocalizableStrings.LearnMore.usingTagsBody.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.whySmartLists.getter()
{
  return static TTRLocalizableStrings.LearnMore.whySmartLists.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.smartListsBody.getter()
{
  return static TTRLocalizableStrings.LearnMore.smartListsBody.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.makeSmartListBody.getter()
{
  return static TTRLocalizableStrings.LearnMore.makeSmartListBody.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.whySmartListsExampleBody.getter()
{
  return static TTRLocalizableStrings.LearnMore.whySmartListsExampleBody.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.tagsTap.getter()
{
  return static TTRLocalizableStrings.LearnMore.tagsTap.getter();
}

uint64_t static TTRLocalizableStrings.LearnMore.whyTags.getter()
{
  return static TTRLocalizableStrings.LearnMore.whyTags.getter();
}

uint64_t static TTRLocalizableStrings.Templates.includeCompletedReminders.getter()
{
  return static TTRLocalizableStrings.Templates.includeCompletedReminders.getter();
}

uint64_t static TTRLocalizableStrings.Templates.includeCompletedRemindersDescription(completedCount:)()
{
  return static TTRLocalizableStrings.Templates.includeCompletedRemindersDescription(completedCount:)();
}

uint64_t static TTRLocalizableStrings.Templates.noTemplates.getter()
{
  return static TTRLocalizableStrings.Templates.noTemplates.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertStopSharingButton.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertStopSharingButton.getter();
}

uint64_t static TTRLocalizableStrings.Templates.manageLink.getter()
{
  return static TTRLocalizableStrings.Templates.manageLink.getter();
}

uint64_t static TTRLocalizableStrings.Templates.updateLink.getter()
{
  return static TTRLocalizableStrings.Templates.updateLink.getter();
}

uint64_t static TTRLocalizableStrings.Templates.includeText.getter()
{
  return static TTRLocalizableStrings.Templates.includeText.getter();
}

uint64_t static TTRLocalizableStrings.Templates.showPreview.getter()
{
  return static TTRLocalizableStrings.Templates.showPreview.getter();
}

uint64_t static TTRLocalizableStrings.Templates.stopSharing.getter()
{
  return static TTRLocalizableStrings.Templates.stopSharing.getter();
}

uint64_t static TTRLocalizableStrings.Templates.editTemplate.getter()
{
  return static TTRLocalizableStrings.Templates.editTemplate.getter();
}

uint64_t static TTRLocalizableStrings.Templates.shareTemplate.getter()
{
  return static TTRLocalizableStrings.Templates.shareTemplate.getter();
}

uint64_t static TTRLocalizableStrings.Templates.copyIcloudLink.getter()
{
  return static TTRLocalizableStrings.Templates.copyIcloudLink.getter();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplate.getter()
{
  return static TTRLocalizableStrings.Templates.deleteTemplate.getter();
}

uint64_t static TTRLocalizableStrings.Templates.templatePreview.getter()
{
  return static TTRLocalizableStrings.Templates.templatePreview.getter();
}

uint64_t static TTRLocalizableStrings.Templates.savingDescription.getter()
{
  return static TTRLocalizableStrings.Templates.savingDescription.getter();
}

uint64_t static TTRLocalizableStrings.Templates.templatesListTitle.getter()
{
  return static TTRLocalizableStrings.Templates.templatesListTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.namePlaceholderText.getter()
{
  return static TTRLocalizableStrings.Templates.namePlaceholderText.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCreating.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateCreating.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateDeleting.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdating.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateUpdating.getter();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusTemplate.getter()
{
  return static TTRLocalizableStrings.Templates.templateStatusTemplate.getter();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplateAlertTitle(templateName:)()
{
  return static TTRLocalizableStrings.Templates.deleteTemplateAlertTitle(templateName:)();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateDownloading.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateDownloading.getter();
}

uint64_t static TTRLocalizableStrings.Templates.tagsLinkOptionDescription.getter()
{
  return static TTRLocalizableStrings.Templates.tagsLinkOptionDescription.getter();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusSharedTemplate.getter()
{
  return static TTRLocalizableStrings.Templates.templateStatusSharedTemplate.getter();
}

uint64_t static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.locationsLinkOptionDescription.getter()
{
  return static TTRLocalizableStrings.Templates.locationsLinkOptionDescription.getter();
}

uint64_t static TTRLocalizableStrings.Templates.updateSharedTemplateAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.updateSharedTemplateAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.addListFromPublicTemplateButton.getter()
{
  return static TTRLocalizableStrings.Templates.addListFromPublicTemplateButton.getter();
}

uint64_t static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.cantMarkAsCompletedAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.dateAndTimeLinkOptionDescription.getter()
{
  return static TTRLocalizableStrings.Templates.dateAndTimeLinkOptionDescription.getter();
}

uint64_t static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.updateSharedTemplateAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.updateSharedTemplateAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.failedToDeleteTemplateAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateContainsNoImagesText.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateContainsNoImagesText.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.templateStatusUpdateSharedTemplate.getter()
{
  return static TTRLocalizableStrings.Templates.templateStatusUpdateSharedTemplate.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateSharingOfflineMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.title.getter()
{
  return static TTRLocalizableStrings.Templates.PublicTemplateIncludePropertiesAlert.title.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotSupportedAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateNotSupportedAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingErrorAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateSharingErrorAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateUpdateLinkAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateStopSharingAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateNotAvailableAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.deleteTemplateWithPublicLinkAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.deleteTemplateWithPublicLinkAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateIncludeLocationsAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateStopSharingErrorAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingRetryLaterErrorAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateSharingRetryLaterErrorAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateCannotOpenDueToNetworkFailureAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertTitle.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertTitle.getter();
}

uint64_t static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertMessage.getter()
{
  return static TTRLocalizableStrings.Templates.publicTemplateSharingMaxReminderCountExceededAlertMessage.getter();
}

uint64_t static TTRLocalizableStrings.Templates.sendLink.getter()
{
  return static TTRLocalizableStrings.Templates.sendLink.getter();
}

uint64_t static TTRLocalizableStrings.TodayList.groupByTime.getter()
{
  return static TTRLocalizableStrings.TodayList.groupByTime.getter();
}

uint64_t static TTRLocalizableStrings.TodayList.nearbySectionName.getter()
{
  return static TTRLocalizableStrings.TodayList.nearbySectionName.getter();
}

uint64_t TTRMutableTreeStorage.debugTreeDescription.getter()
{
  return TTRMutableTreeStorage.debugTreeDescription.getter();
}

uint64_t TTRMutableTreeStorage.deleteItems(at:in:)()
{
  return TTRMutableTreeStorage.deleteItems(at:in:)();
}

uint64_t TTRMutableTreeStorage.descendants(of:)()
{
  return TTRMutableTreeStorage.descendants(of:)();
}

uint64_t TTRMutableTreeStorage.isTemporary(_:)()
{
  return TTRMutableTreeStorage.isTemporary(_:)();
}

uint64_t TTRMutableTreeStorage.auxiliaryData(for:)()
{
  return TTRMutableTreeStorage.auxiliaryData(for:)();
}

uint64_t TTRMutableTreeStorage.insertNewItem(with:in:at:)()
{
  return TTRMutableTreeStorage.insertNewItem(with:in:at:)();
}

uint64_t TTRMutableTreeStorage.numberOfChildren(of:)()
{
  return TTRMutableTreeStorage.numberOfChildren(of:)();
}

uint64_t TTRMutableTreeStorage.editAuxiliaryData(for:using:)()
{
  return TTRMutableTreeStorage.editAuxiliaryData(for:using:)();
}

uint64_t TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)()
{
  return TTRMutableTreeStorage.__allocating_init(topLevelNodeValues:)();
}

uint64_t TTRMutableTreeStorage.insertTemporaryItem(with:)()
{
  return TTRMutableTreeStorage.insertTemporaryItem(with:)();
}

uint64_t TTRMutableTreeStorage.temporaryNodeValues.getter()
{
  return TTRMutableTreeStorage.temporaryNodeValues.getter();
}

uint64_t TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)()
{
  return TTRMutableTreeStorage.relativeInsertionPosition(forInsertingAt:skipping:)();
}

uint64_t static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)()
{
  return static TTRMutableTreeStorage.unadjustInsertionLocation<A>(_:forMovingItemsAt:)();
}

uint64_t TTRMutableTreeStorage.copy()()
{
  return TTRMutableTreeStorage.copy()();
}

uint64_t TTRMutableTreeStorage.item(withID:)()
{
  return TTRMutableTreeStorage.item(withID:)();
}

uint64_t TTRMutableTreeStorage.child(_:of:)()
{
  return TTRMutableTreeStorage.child(_:of:)();
}

uint64_t TTRMutableTreeStorage.steps(forMoving:to:)()
{
  return TTRMutableTreeStorage.steps(forMoving:to:)();
}

uint64_t static TTRMutableTreeStorage.steps<A>(forMoving:to:)()
{
  return static TTRMutableTreeStorage.steps<A>(forMoving:to:)();
}

uint64_t TTRMutableTreeStorage.delete(_:)()
{
  return TTRMutableTreeStorage.delete(_:)();
}

{
  return TTRMutableTreeStorage.delete(_:)();
}

uint64_t TTRMutableTreeStorage.parent(of:)()
{
  return TTRMutableTreeStorage.parent(of:)();
}

uint64_t TTRMutableTreeStorage.resolve(_:)()
{
  return TTRMutableTreeStorage.resolve(_:)();
}

uint64_t TTRMutableTreeStorage.children(of:)()
{
  return TTRMutableTreeStorage.children(of:)();
}

uint64_t TTRMutableTreeStorage.moveItem(at:in:to:in:)()
{
  return TTRMutableTreeStorage.moveItem(at:in:to:in:)();
}

uint64_t static TTRProcessEnvironment.currentProcessEnvironment.getter()
{
  return static TTRProcessEnvironment.currentProcessEnvironment.getter();
}

uint64_t TTRProcessEnvironment.targetNavigationURL.getter()
{
  return TTRProcessEnvironment.targetNavigationURL.getter();
}

uint64_t TTRProcessEnvironment.assertOnMainThreadFetches.getter()
{
  return TTRProcessEnvironment.assertOnMainThreadFetches.getter();
}

uint64_t TTRProcessEnvironment.isolatedStoreContainerToken.getter()
{
  return TTRProcessEnvironment.isolatedStoreContainerToken.getter();
}

uint64_t TTRThumbnailGenerator.init(queue:backgroundQueue:)()
{
  return TTRThumbnailGenerator.init(queue:backgroundQueue:)();
}

uint64_t type metadata accessor for TTRThumbnailGenerator()
{
  return type metadata accessor for TTRThumbnailGenerator();
}

uint64_t TTRValueBasedMenuItem.init(title:image:state:value:)()
{
  return TTRValueBasedMenuItem.init(title:image:state:value:)();
}

uint64_t TTRAppBundleIdentifier.unsafeMutableAddressor()
{
  return TTRAppBundleIdentifier.unsafeMutableAddressor();
}

uint64_t static TTRDebugExampleInserts.makeSomeExampleInserts(saveRequest:accounts:lists:reminders:subtasks:)()
{
  return static TTRDebugExampleInserts.makeSomeExampleInserts(saveRequest:accounts:lists:reminders:subtasks:)();
}

uint64_t static TTRDebugExampleInserts.makeSomeExampleInsertsToCloudKitAccount(saveRequest:lists:reminders:)()
{
  return static TTRDebugExampleInserts.makeSomeExampleInsertsToCloudKitAccount(saveRequest:lists:reminders:)();
}

uint64_t TTRDerivedTreeLocation.description.getter()
{
  return TTRDerivedTreeLocation.description.getter();
}

uint64_t static TTRIQuickEntryAssembly.createViewController(initialListForReminderCreation:reminderChangeItem:style:delegate:)()
{
  return static TTRIQuickEntryAssembly.createViewController(initialListForReminderCreation:reminderChangeItem:style:delegate:)();
}

uint64_t static TTRIQuickEntryAssembly.fetchInitialListForReminderCreation(store:style:)()
{
  return static TTRIQuickEntryAssembly.fetchInitialListForReminderCreation(store:style:)();
}

uint64_t TTRObservableViewModel.init(value:)()
{
  return TTRObservableViewModel.init(value:)();
}

uint64_t TTRObservableViewModel<A>.update(with:forcePublish:)()
{
  return TTRObservableViewModel<A>.update(with:forcePublish:)();
}

uint64_t type metadata accessor for TTRPostponementWeekend()
{
  return type metadata accessor for TTRPostponementWeekend();
}

uint64_t static TTRProcessMoveSubjects.process<A>(moveSubjects:disallowOverride:moveFilters:)()
{
  return static TTRProcessMoveSubjects.process<A>(moveSubjects:disallowOverride:moveFilters:)();
}

uint64_t type metadata accessor for TTRProcessMoveSubjects()
{
  return type metadata accessor for TTRProcessMoveSubjects();
}

uint64_t TTRRecurrenceRuleModel.init(sourceRule:)()
{
  return TTRRecurrenceRuleModel.init(sourceRule:)();
}

uint64_t type metadata accessor for TTRRecurrenceRuleModel()
{
  return type metadata accessor for TTRRecurrenceRuleModel();
}

uint64_t TTRUnadjustedIndexPath.description.getter()
{
  return TTRUnadjustedIndexPath.description.getter();
}

uint64_t static TTRUnadjustedIndexPath.__derived_struct_equals(_:_:)()
{
  return static TTRUnadjustedIndexPath.__derived_struct_equals(_:_:)();
}

uint64_t TTRUnadjustedIndexPath.adjusted(forOriginalItemIndexPaths:)()
{
  return TTRUnadjustedIndexPath.adjusted(forOriginalItemIndexPaths:)();
}

uint64_t type metadata accessor for TTRUnadjustedIndexPath()
{
  return type metadata accessor for TTRUnadjustedIndexPath();
}

uint64_t TTRUnadjustedIndexPath.init(_:)()
{
  return TTRUnadjustedIndexPath.init(_:)();
}

uint64_t TTRILocationCellContent.init(state:)()
{
  return TTRILocationCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRILocationCellContent()
{
  return type metadata accessor for TTRILocationCellContent();
}

uint64_t TTRINavigationBarConfig.init(tintColor:)()
{
  return TTRINavigationBarConfig.init(tintColor:)();
}

uint64_t TTRITableDataController.performBatchUpdates(by:updates:)()
{
  return TTRITableDataController.performBatchUpdates(by:updates:)();
}

uint64_t TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)()
{
  return TTRITableDataController.init(tableView:sections:rowInsertionAnimationType:collapseSectionIfItemsAreHidden:)();
}

uint64_t type metadata accessor for TTRITableDataController()
{
  return type metadata accessor for TTRITableDataController();
}

uint64_t TTRITipKitSignalContext.RemindersList.keyboardShortcut.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.RemindersList.keyboardShortcut.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.RemindersList.MoreMenu.smartList.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.RemindersList.MoreMenu.smartList.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.RemindersList.MoreMenu.showCompleted.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.RemindersList.MoreMenu.showCompleted.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.RemindersList.MoreMenu.list.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.RemindersList.MoreMenu.list.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.ListDetail.convertList.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.ListDetail.convertList.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.ListDetail.editFilters.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.ListDetail.editFilters.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.AccountsList.SwipeCell.smartList.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.AccountsList.SwipeCell.smartList.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.AccountsList.SwipeCell.list.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.AccountsList.SwipeCell.list.unsafeMutableAddressor();
}

uint64_t TTRITipKitSignalContext.ReminderDetail.AnyField.unsafeMutableAddressor()
{
  return TTRITipKitSignalContext.ReminderDetail.AnyField.unsafeMutableAddressor();
}

uint64_t TTRRemindersInteraction.donateReminderUpdate(_:)()
{
  return TTRRemindersInteraction.donateReminderUpdate(_:)();
}

uint64_t TTRRemindersInteraction.donateReminderCreation(_:)()
{
  return TTRRemindersInteraction.donateReminderCreation(_:)();
}

uint64_t TTRRemindersInteraction.init(queue:)()
{
  return TTRRemindersInteraction.init(queue:)();
}

uint64_t type metadata accessor for TTRRemindersInteraction()
{
  return type metadata accessor for TTRRemindersInteraction();
}

Swift::Void __swiftcall TTRAssigneeCandidateData.setLoadedContact(_:)(CNContact a1)
{
}

Swift::Void __swiftcall TTRAssigneeCandidateData.setUnknownContact()()
{
}

uint64_t TTRAssigneeCandidateData.displayDescription.getter()
{
  return TTRAssigneeCandidateData.displayDescription.getter();
}

uint64_t TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)()
{
  return TTRAssigneeCandidateData.init(id:contact:contactInfo:isMe:avatarImage:)();
}

uint64_t TTREditSectionsViewModel.__allocating_init(shouldHideEmptySections:sections:shouldCategorizeGroceryItems:)()
{
  return TTREditSectionsViewModel.__allocating_init(shouldHideEmptySections:sections:shouldCategorizeGroceryItems:)();
}

uint64_t static TTREditSectionsViewModel.SectionItem.__derived_struct_equals(_:_:)()
{
  return static TTREditSectionsViewModel.SectionItem.__derived_struct_equals(_:_:)();
}

uint64_t TTREditSectionsViewModel.OptimisticApply.init(sectionOrdering:renamedSections:)()
{
  return TTREditSectionsViewModel.OptimisticApply.init(sectionOrdering:renamedSections:)();
}

uint64_t type metadata accessor for TTREditSectionsViewModel.OptimisticApply()
{
  return type metadata accessor for TTREditSectionsViewModel.OptimisticApply();
}

uint64_t TTREditSectionsViewModel.isEmpty.getter()
{
  return TTREditSectionsViewModel.isEmpty.getter();
}

uint64_t TTREditSectionsViewModel.section(with:)()
{
  return TTREditSectionsViewModel.section(with:)();
}

uint64_t TTREditSectionsViewModel.applying(_:)()
{
  return TTREditSectionsViewModel.applying(_:)();
}

uint64_t TTREditSectionsViewModel.snapshot(previousViewModel:)()
{
  return TTREditSectionsViewModel.snapshot(previousViewModel:)();
}

uint64_t type metadata accessor for TTREditSectionsViewModel()
{
  return type metadata accessor for TTREditSectionsViewModel();
}

uint64_t TTRIMarginTransferAction.init(edgesToReceiveMargins:redirectedTarget:)()
{
  return TTRIMarginTransferAction.init(edgesToReceiveMargins:redirectedTarget:)();
}

uint64_t TTRIMenuCellContentState.init(title:menu:)()
{
  return TTRIMenuCellContentState.init(title:menu:)();
}

uint64_t TTRITextCellContentState.init(attributedText:placeholder:)()
{
  return TTRITextCellContentState.init(attributedText:placeholder:)();
}

uint64_t TTRITextCellContentState.text.getter()
{
  return TTRITextCellContentState.text.getter();
}

uint64_t TTRListOrCustomSmartList.groceryContext.getter()
{
  return TTRListOrCustomSmartList.groceryContext.getter();
}

uint64_t static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)()
{
  return static TTRListOrCustomSmartList.__derived_enum_equals(_:_:)();
}

uint64_t TTRListOrCustomSmartList.hash(into:)()
{
  return TTRListOrCustomSmartList.hash(into:)();
}

uint64_t TTRListOrCustomSmartList.isGroup.getter()
{
  return TTRListOrCustomSmartList.isGroup.getter();
}

uint64_t TTRListOrCustomSmartList.objectID.getter()
{
  return TTRListOrCustomSmartList.objectID.getter();
}

uint64_t TTRReminderCopyPasteItem.pasteboardTypeString.unsafeMutableAddressor()
{
  return TTRReminderCopyPasteItem.pasteboardTypeString.unsafeMutableAddressor();
}

uint64_t TTRReminderCopyPasteItem.Reminder.init(reminder:children:)()
{
  return TTRReminderCopyPasteItem.Reminder.init(reminder:children:)();
}

uint64_t type metadata accessor for TTRReminderCopyPasteItem()
{
  return type metadata accessor for TTRReminderCopyPasteItem();
}

uint64_t TTRReminderCopyPasteItem.init(_:)()
{
  return TTRReminderCopyPasteItem.init(_:)();
}

uint64_t TTRReminderDetailSubject.init(reminderChangeItemSubject:)()
{
  return TTRReminderDetailSubject.init(reminderChangeItemSubject:)();
}

uint64_t TTRReminderDetailSubject.init(reminderChangeItem:)()
{
  return TTRReminderDetailSubject.init(reminderChangeItem:)();
}

uint64_t TTRSharedWithYouProvider.postNotice(for:with:)()
{
  return TTRSharedWithYouProvider.postNotice(for:with:)();
}

uint64_t TTRSharedWithYouProvider.highlightInfo(for:)()
{
  return TTRSharedWithYouProvider.highlightInfo(for:)();
}

uint64_t TTRSharedWithYouProvider.init(store:invocationQueue:backgroundQueue:highlightCenter:customFetchShareForSharedList:)()
{
  return TTRSharedWithYouProvider.init(store:invocationQueue:backgroundQueue:highlightCenter:customFetchShareForSharedList:)();
}

uint64_t type metadata accessor for TTRSharedWithYouProvider()
{
  return type metadata accessor for TTRSharedWithYouProvider();
}

uint64_t TTRTreeContentsQueryable<>.diff(with:contentEqualityChecker:)()
{
  return TTRTreeContentsQueryable<>.diff(with:contentEqualityChecker:)();
}

uint64_t TTRTreeContentsQueryable.childIndex(of:inParent:)()
{
  return TTRTreeContentsQueryable.childIndex(of:inParent:)();
}

uint64_t TTRTreeContentsQueryable.sortByIndexPath(_:unknownIndexPathTreatment:)()
{
  return TTRTreeContentsQueryable.sortByIndexPath(_:unknownIndexPathTreatment:)();
}

uint64_t TTRTreeContentsQueryable.ancestorsToExpand<A>(forRevealing:transform:isExpanded:itemExpandedStateIsUnknownIfParentIsCollapsed:)()
{
  return TTRTreeContentsQueryable.ancestorsToExpand<A>(forRevealing:transform:isExpanded:itemExpandedStateIsUnknownIfParentIsCollapsed:)();
}

uint64_t TTRTreeContentsQueryable.childrenCollection(of:)()
{
  return TTRTreeContentsQueryable.childrenCollection(of:)();
}

uint64_t TTRTreeContentsQueryable.allItems.getter()
{
  return TTRTreeContentsQueryable.allItems.getter();
}

uint64_t TTRTreeContentsQueryable.contains(_:inSubtreeAtRoot:)()
{
  return TTRTreeContentsQueryable.contains(_:inSubtreeAtRoot:)();
}

uint64_t TTRTreeContentsQueryable.indexPath(for:)()
{
  return TTRTreeContentsQueryable.indexPath(for:)();
}

uint64_t TTRURLMetadataInteractor.init()()
{
  return TTRURLMetadataInteractor.init()();
}

uint64_t type metadata accessor for TTRURLMetadataInteractor()
{
  return type metadata accessor for TTRURLMetadataInteractor();
}

uint64_t TTRUndoNavigationRequest.description.getter()
{
  return TTRUndoNavigationRequest.description.getter();
}

uint64_t TTRUndoNavigationRequest.navigationSpecifier.getter()
{
  return TTRUndoNavigationRequest.navigationSpecifier.getter();
}

uint64_t type metadata accessor for TTRUndoNavigationRequest()
{
  return type metadata accessor for TTRUndoNavigationRequest();
}

uint64_t static TTRValueBasedMenuElement.__derived_enum_equals(_:_:)()
{
  return static TTRValueBasedMenuElement.__derived_enum_equals(_:_:)();
}

uint64_t TTRAccountsListsViewModel.activePinnedListsDisplayOrder()()
{
  return TTRAccountsListsViewModel.activePinnedListsDisplayOrder()();
}

uint64_t TTRAccountsListsViewModel.visiblePinnedLists.getter()
{
  return TTRAccountsListsViewModel.visiblePinnedLists.getter();
}

uint64_t TTRAccountsListsViewModel.pinnedListInnerList(with:)()
{
  return TTRAccountsListsViewModel.pinnedListInnerList(with:)();
}

uint64_t TTRAccountsListsViewModel.fallbackSelectionForEmptySelection(lastSelectedListInWindow:globalLastSelectedList:)()
{
  return TTRAccountsListsViewModel.fallbackSelectionForEmptySelection(lastSelectedListInWindow:globalLastSelectedList:)();
}

Swift::Bool __swiftcall TTRAccountsListsViewModel.exceedsMaximumNumberOfPinnedListsAdding(count:)(Swift::Int count)
{
  return TTRAccountsListsViewModel.exceedsMaximumNumberOfPinnedListsAdding(count:)(count);
}

uint64_t TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)()
{
  return TTRAccountsListsViewModel.remListsOrCustomSmartLists(in:)();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.PinnedLists()
{
  return type metadata accessor for TTRAccountsListsViewModel.PinnedLists();
}

uint64_t TTRAccountsListsViewModel.pinnedListsSectionItems.getter()
{
  return TTRAccountsListsViewModel.pinnedListsSectionItems.getter();
}

uint64_t TTRAccountsListsViewModel.pinnedListsItem(containingListFor:)()
{
  return TTRAccountsListsViewModel.pinnedListsItem(containingListFor:)();
}

{
  return TTRAccountsListsViewModel.pinnedListsItem(containingListFor:)();
}

uint64_t TTRAccountsListsViewModel.ModelCreationOption.platformDefault.unsafeMutableAddressor()
{
  return TTRAccountsListsViewModel.ModelCreationOption.platformDefault.unsafeMutableAddressor();
}

uint64_t static TTRAccountsListsViewModel.PinnedList.__derived_enum_equals(_:_:)()
{
  return static TTRAccountsListsViewModel.PinnedList.__derived_enum_equals(_:_:)();
}

uint64_t TTRAccountsListsViewModel.PinnedList.id.getter()
{
  return TTRAccountsListsViewModel.PinnedList.id.getter();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.PinnedList()
{
  return type metadata accessor for TTRAccountsListsViewModel.PinnedList();
}

uint64_t TTRAccountsListsViewModel.canDisplay(_:)()
{
  return TTRAccountsListsViewModel.canDisplay(_:)();
}

uint64_t TTRAccountsListsViewModel.remAccount(for:)()
{
  return TTRAccountsListsViewModel.remAccount(for:)();
}

{
  return TTRAccountsListsViewModel.remAccount(for:)();
}

Swift::Void __swiftcall TTRAccountsListsViewModel.performMoves(_:)(Swift::OpaquePointer a1)
{
}

uint64_t TTRAccountsListsViewModel.remSmartList(for:)()
{
  return TTRAccountsListsViewModel.remSmartList(for:)();
}

uint64_t static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)()
{
  return static TTRAccountsListsViewModel.ItemIdentifier.__derived_enum_equals(_:_:)();
}

uint64_t TTRAccountsListsViewModel.ItemIdentifier.hash(into:)()
{
  return TTRAccountsListsViewModel.ItemIdentifier.hash(into:)();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier()
{
  return type metadata accessor for TTRAccountsListsViewModel.ItemIdentifier();
}

uint64_t TTRAccountsListsViewModel.HashtagsSection.title.getter()
{
  return TTRAccountsListsViewModel.HashtagsSection.title.getter();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.HashtagsSection()
{
  return type metadata accessor for TTRAccountsListsViewModel.HashtagsSection();
}

uint64_t TTRAccountsListsViewModel.customSmartList(with:)()
{
  return TTRAccountsListsViewModel.customSmartList(with:)();
}

uint64_t TTRAccountsListsViewModel.numberOfChildren(of:)()
{
  return TTRAccountsListsViewModel.numberOfChildren(of:)();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.FallbackSelection()
{
  return type metadata accessor for TTRAccountsListsViewModel.FallbackSelection();
}

uint64_t TTRAccountsListsViewModel.remCustomSmartList(for:)()
{
  return TTRAccountsListsViewModel.remCustomSmartList(for:)();
}

uint64_t TTRAccountsListsViewModel.AccountsCapabilities.supportsGroups.unsafeMutableAddressor()
{
  return TTRAccountsListsViewModel.AccountsCapabilities.supportsGroups.unsafeMutableAddressor();
}

uint64_t TTRAccountsListsViewModel.AccountsCapabilities.supportsAddList.unsafeMutableAddressor()
{
  return TTRAccountsListsViewModel.AccountsCapabilities.supportsAddList.unsafeMutableAddressor();
}

uint64_t TTRAccountsListsViewModel.AccountsCapabilities.supportsTemplates.unsafeMutableAddressor()
{
  return TTRAccountsListsViewModel.AccountsCapabilities.supportsTemplates.unsafeMutableAddressor();
}

uint64_t TTRAccountsListsViewModel.AccountsCapabilities.supportsAddReminder.unsafeMutableAddressor()
{
  return TTRAccountsListsViewModel.AccountsCapabilities.supportsAddReminder.unsafeMutableAddressor();
}

uint64_t TTRAccountsListsViewModel.listOrCustomSmartList(for:)()
{
  return TTRAccountsListsViewModel.listOrCustomSmartList(for:)();
}

uint64_t TTRAccountsListsViewModel.HashtagFilterOperation.Option.localizedOptionString.getter()
{
  return TTRAccountsListsViewModel.HashtagFilterOperation.Option.localizedOptionString.getter();
}

uint64_t TTRAccountsListsViewModel.HashtagFilterOperation.Option.init(selection:)()
{
  return TTRAccountsListsViewModel.HashtagFilterOperation.Option.init(selection:)();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation()
{
  return type metadata accessor for TTRAccountsListsViewModel.HashtagFilterOperation();
}

uint64_t TTRAccountsListsViewModel.remAccountForTemplates.getter()
{
  return TTRAccountsListsViewModel.remAccountForTemplates.getter();
}

uint64_t TTRAccountsListsViewModel.validateHashtagSelection(_:allowsLenientFallback:)()
{
  return TTRAccountsListsViewModel.validateHashtagSelection(_:allowsLenientFallback:)();
}

uint64_t TTRAccountsListsViewModel.unadjustInsertionLocation(_:forMoving:)()
{
  return TTRAccountsListsViewModel.unadjustInsertionLocation(_:forMoving:)();
}

uint64_t TTRAccountsListsViewModel.Item.treeItemIdentifier.getter()
{
  return TTRAccountsListsViewModel.Item.treeItemIdentifier.getter();
}

uint64_t TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter()
{
  return TTRAccountsListsViewModel.Item.listOrCustomSmartList.getter();
}

uint64_t TTRAccountsListsViewModel.Item.accessibilityIdentifier.getter()
{
  return TTRAccountsListsViewModel.Item.accessibilityIdentifier.getter();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.Item()
{
  return type metadata accessor for TTRAccountsListsViewModel.Item();
}

uint64_t static TTRAccountsListsViewModel.List.__derived_struct_equals(_:_:)()
{
  return static TTRAccountsListsViewModel.List.__derived_struct_equals(_:_:)();
}

uint64_t TTRAccountsListsViewModel.diff(with:)()
{
  return TTRAccountsListsViewModel.diff(with:)();
}

uint64_t TTRAccountsListsViewModel.item(with:)()
{
  return TTRAccountsListsViewModel.item(with:)();
}

{
  return TTRAccountsListsViewModel.item(with:)();
}

uint64_t TTRAccountsListsViewModel.list(with:)()
{
  return TTRAccountsListsViewModel.list(with:)();
}

uint64_t TTRAccountsListsViewModel.child(_:of:)()
{
  return TTRAccountsListsViewModel.child(_:of:)();
}

uint64_t TTRAccountsListsViewModel.group(with:)()
{
  return TTRAccountsListsViewModel.group(with:)();
}

uint64_t TTRAccountsListsViewModel.init(model:shouldSelectListByDefault:options:accountMigrationState:cloudKitNetworkActivity:smartListsDisplayOrder:smartListsVisibility:pinnedListsContactsData:currentHashtagSelection:isEditing:tip:permissionRequest:accountForUpgradeHint:)()
{
  return TTRAccountsListsViewModel.init(model:shouldSelectListByDefault:options:accountMigrationState:cloudKitNetworkActivity:smartListsDisplayOrder:smartListsVisibility:pinnedListsContactsData:currentHashtagSelection:isEditing:tip:permissionRequest:accountForUpgradeHint:)();
}

uint64_t TTRAccountsListsViewModel.account(with:)()
{
  return TTRAccountsListsViewModel.account(with:)();
}

uint64_t TTRAccountsListsViewModel.remList(for:)()
{
  return TTRAccountsListsViewModel.remList(for:)();
}

{
  return TTRAccountsListsViewModel.remList(for:)();
}

{
  return TTRAccountsListsViewModel.remList(for:)();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.Hashtags()
{
  return type metadata accessor for TTRAccountsListsViewModel.Hashtags();
}

uint64_t TTRAccountsListsViewModel.accounts.getter()
{
  return TTRAccountsListsViewModel.accounts.getter();
}

uint64_t static TTRAccountsListsViewModel.SmartList.__derived_struct_equals(_:_:)()
{
  return static TTRAccountsListsViewModel.SmartList.__derived_struct_equals(_:_:)();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel.SmartList()
{
  return type metadata accessor for TTRAccountsListsViewModel.SmartList();
}

uint64_t TTRAccountsListsViewModel.init()()
{
  return TTRAccountsListsViewModel.init()();
}

uint64_t type metadata accessor for TTRAccountsListsViewModel()
{
  return type metadata accessor for TTRAccountsListsViewModel();
}

uint64_t TTREditSectionsInteractor.init(editSectionsEditor:store:undoManager:committer:)()
{
  return TTREditSectionsInteractor.init(editSectionsEditor:store:undoManager:committer:)();
}

uint64_t TTREditSectionsListEditor.init(list:undoManager:committer:userDefaults:)()
{
  return TTREditSectionsListEditor.init(list:undoManager:committer:userDefaults:)();
}

uint64_t type metadata accessor for TTREditSectionsListEditor()
{
  return type metadata accessor for TTREditSectionsListEditor();
}

uint64_t TTRIDynamicDateGlyphCache.fetch(dayString:_:)()
{
  return TTRIDynamicDateGlyphCache.fetch(dayString:_:)();
}

uint64_t TTRIDynamicDateGlyphCache.init()()
{
  return TTRIDynamicDateGlyphCache.init()();
}

uint64_t type metadata accessor for TTRIDynamicDateGlyphCache()
{
  return type metadata accessor for TTRIDynamicDateGlyphCache();
}

uint64_t type metadata accessor for TTRIExpandedHitTestButton()
{
  return type metadata accessor for TTRIExpandedHitTestButton();
}

uint64_t TTRIHashtagCollectionCell.setSelection(_:animated:)()
{
  return TTRIHashtagCollectionCell.setSelection(_:animated:)();
}

uint64_t TTRIHashtagCollectionCell.hashtagLabels.setter()
{
  return TTRIHashtagCollectionCell.hashtagLabels.setter();
}

uint64_t TTRIHashtagCollectionCell.hashtagFocusStyle.setter()
{
  return TTRIHashtagCollectionCell.hashtagFocusStyle.setter();
}

uint64_t TTRIHashtagCollectionCell.allTagsButtonState.setter()
{
  return TTRIHashtagCollectionCell.allTagsButtonState.setter();
}

uint64_t TTRIHashtagCollectionCell.allowsEmptySelection.setter()
{
  return TTRIHashtagCollectionCell.allowsEmptySelection.setter();
}

uint64_t TTRIHashtagCollectionCell.allowsExcludedSelection.setter()
{
  return TTRIHashtagCollectionCell.allowsExcludedSelection.setter();
}

uint64_t TTRIHashtagCollectionCell.isEnabled.setter()
{
  return TTRIHashtagCollectionCell.isEnabled.setter();
}

uint64_t type metadata accessor for TTRIHashtagCollectionCell()
{
  return type metadata accessor for TTRIHashtagCollectionCell();
}

uint64_t static TTRIHashtagEditorAssembly.createViewController(style:reminderChangeItem:previousModuleState:delegate:undoManager:)()
{
  return static TTRIHashtagEditorAssembly.createViewController(style:reminderChangeItem:previousModuleState:delegate:undoManager:)();
}

uint64_t type metadata accessor for TTRIHashtagEditorAssembly()
{
  return type metadata accessor for TTRIHashtagEditorAssembly();
}

uint64_t TTRIOptionMenuCellContent.init(state:menuImageProvider:)()
{
  return TTRIOptionMenuCellContent.init(state:menuImageProvider:)();
}

uint64_t TTRIReminderTitleTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:hashtagTokenEditingBehavior:)()
{
  return TTRIReminderTitleTextView.init(isForUseInNUIContainerView:lineIndexWhereClippingBegins:hashtagTokenEditingBehavior:)();
}

uint64_t type metadata accessor for TTRIReminderTitleTextView()
{
  return type metadata accessor for TTRIReminderTitleTextView();
}

uint64_t TTRIValueBasedAlertAction.init(title:style:value:)()
{
  return TTRIValueBasedAlertAction.init(title:style:value:)();
}

uint64_t type metadata accessor for TTRIValueBasedAlertAction()
{
  return type metadata accessor for TTRIValueBasedAlertAction();
}

uint64_t TTRListAppearanceGridView.minimumGap.setter()
{
  return TTRListAppearanceGridView.minimumGap.setter();
}

uint64_t TTRListAppearanceGridView.arrangedSubviews.getter()
{
  return TTRListAppearanceGridView.arrangedSubviews.getter();
}

uint64_t TTRListAppearanceGridView.arrangedSubviews.setter()
{
  return TTRListAppearanceGridView.arrangedSubviews.setter();
}

uint64_t TTRListAppearanceGridView.horizontalMargins.setter()
{
  return TTRListAppearanceGridView.horizontalMargins.setter();
}

uint64_t TTRListAppearanceGridView.height(forWidth:)()
{
  return TTRListAppearanceGridView.height(forWidth:)();
}

uint64_t TTRListAppearanceGridView.badgeSize.setter()
{
  return TTRListAppearanceGridView.badgeSize.setter();
}

uint64_t TTRListAppearanceGridView.topMargin.setter()
{
  return TTRListAppearanceGridView.topMargin.setter();
}

uint64_t static TTRPostponementCalculator.postponementWeekendType(relativeTo:now:calendar:)()
{
  return static TTRPostponementCalculator.postponementWeekendType(relativeTo:now:calendar:)();
}

uint64_t static TTRPostponementCalculator.allowedPostponementTypes(relativeTo:now:calendar:)()
{
  return static TTRPostponementCalculator.allowedPostponementTypes(relativeTo:now:calendar:)();
}

uint64_t static TTRRemindersListViewModel.makeListSharingInfo(_:)()
{
  return static TTRRemindersListViewModel.makeListSharingInfo(_:)();
}

uint64_t TTRRemindersListViewModel.EmptyListMessagingType.helpAnchor.getter()
{
  return TTRRemindersListViewModel.EmptyListMessagingType.helpAnchor.getter();
}

uint64_t TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)()
{
  return TTRRemindersListViewModel.EmptyListMessagingType.localizedTitle(withTextFormat:)();
}

uint64_t TTRRemindersListViewModel.EmptyListMessagingType.localizedSubtitle(currentLayout:)()
{
  return TTRRemindersListViewModel.EmptyListMessagingType.localizedSubtitle(currentLayout:)();
}

uint64_t TTRRemindersListViewModel.CompletedRemindersState.countText.getter()
{
  return TTRRemindersListViewModel.CompletedRemindersState.countText.getter();
}

uint64_t static TTRRemindersListViewModel.ListSharingInfo.__derived_struct_equals(_:_:)()
{
  return static TTRRemindersListViewModel.ListSharingInfo.__derived_struct_equals(_:_:)();
}

uint64_t TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)()
{
  return TTRRemindersListViewModel.ListInfo.completedRemindersState(completedRowHasShowHide:)();
}

uint64_t static TTRRemindersListViewModel.ListInfo.__derived_struct_equals(_:_:)()
{
  return static TTRRemindersListViewModel.ListInfo.__derived_struct_equals(_:_:)();
}

uint64_t TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)()
{
  return TTRRemindersListViewModel.ListInfo.init(listType:name:color:reminderCount:sharingInfo:canCreateNewReminder:canToggleCompletedReminderVisbility:canAddSection:canClearCompletedReminders:canSaveAsTemplate:supportsEditableSections:canBePrinted:completedRemindersShown:hasDefaultNewReminderButton:completedRemindersCount:canBeDeleted:collapsedStatesAutosaveName:canCreateCustomSmartListForHashtagsState:hashtagsStateToShow:templateStatus:isOriginOfExistingTemplate:isPublicTemplatePreview:shouldCategorizeGroceryItems:isRecentlyDeletedList:iOS:macOS:)();
}

uint64_t TTRRemindersListViewModel.ListInfo.init()()
{
  return TTRRemindersListViewModel.ListInfo.init()();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.ListInfo()
{
  return type metadata accessor for TTRRemindersListViewModel.ListInfo();
}

uint64_t TTRRemindersListViewModel.PersonData.init(name:contact:)()
{
  return TTRRemindersListViewModel.PersonData.init(name:contact:)();
}

uint64_t TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)()
{
  return TTRRemindersListViewModel.ReminderID.init(objectID:groupID:)();
}

uint64_t static TTRRemindersListViewModel.ReminderID.__derived_struct_equals(_:_:)()
{
  return static TTRRemindersListViewModel.ReminderID.__derived_struct_equals(_:_:)();
}

uint64_t TTRRemindersListViewModel.ReminderID.hash(into:)()
{
  return TTRRemindersListViewModel.ReminderID.hash(into:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.ReminderID()
{
  return type metadata accessor for TTRRemindersListViewModel.ReminderID();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.DisplayDate()
{
  return type metadata accessor for TTRRemindersListViewModel.DisplayDate();
}

uint64_t TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions.localizedOptionString.getter()
{
  return TTRRemindersListViewModel.HashtagsState.FilterOperatorOptions.localizedOptionString.getter();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.HashtagsState()
{
  return type metadata accessor for TTRRemindersListViewModel.HashtagsState();
}

uint64_t TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)()
{
  return TTRRemindersListViewModel.SectionHeader.init(id:title:isVisible:isTappable:isTitleEditable:isCollapsable:isCustomSmartList:listObjectID:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.SectionHeader()
{
  return type metadata accessor for TTRRemindersListViewModel.SectionHeader();
}

uint64_t TTRRemindersListViewModel.AssignmentData.VisibleElements.originatorString.unsafeMutableAddressor()
{
  return TTRRemindersListViewModel.AssignmentData.VisibleElements.originatorString.unsafeMutableAddressor();
}

uint64_t TTRRemindersListViewModel.AssignmentData.VisibleElements.avatar.unsafeMutableAddressor()
{
  return TTRRemindersListViewModel.AssignmentData.VisibleElements.avatar.unsafeMutableAddressor();
}

uint64_t TTRRemindersListViewModel.LinkAttachment.init(attachmentID:url:metadata:)()
{
  return TTRRemindersListViewModel.LinkAttachment.init(attachmentID:url:metadata:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.LinkAttachment()
{
  return type metadata accessor for TTRRemindersListViewModel.LinkAttachment();
}

uint64_t TTRRemindersListViewModel.ImageAttachment.init(attachmentID:fileURL:image:)()
{
  return TTRRemindersListViewModel.ImageAttachment.init(attachmentID:fileURL:image:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.ImageAttachment()
{
  return type metadata accessor for TTRRemindersListViewModel.ImageAttachment();
}

uint64_t TTRRemindersListViewModel.SectionHeaderTitle.attributedTitleText(baseAttributes:secondaryTextAttributes:)()
{
  return TTRRemindersListViewModel.SectionHeaderTitle.attributedTitleText(baseAttributes:secondaryTextAttributes:)();
}

uint64_t TTRRemindersListViewModel.SectionHeaderTitle.attributedSubtitleText(baseAttributes:secondaryTextAttributes:)()
{
  return TTRRemindersListViewModel.SectionHeaderTitle.attributedSubtitleText(baseAttributes:secondaryTextAttributes:)();
}

uint64_t static TTRRemindersListViewModel.SectionHeaderTitle.__derived_struct_equals(_:_:)()
{
  return static TTRRemindersListViewModel.SectionHeaderTitle.__derived_struct_equals(_:_:)();
}

uint64_t static TTRRemindersListViewModel.reminderDescription(baseAttributes:dateAttributes:listNameToShow:subtaskString:dateString:recurrenceString:assignmentString:ttrAccessibilityOverdueIconString:)()
{
  return static TTRRemindersListViewModel.reminderDescription(baseAttributes:dateAttributes:listNameToShow:subtaskString:dateString:recurrenceString:assignmentString:ttrAccessibilityOverdueIconString:)();
}

uint64_t TTRRemindersListViewModel.DeleteCompletedMenuItem.completeBeforeDateFromNow()()
{
  return TTRRemindersListViewModel.DeleteCompletedMenuItem.completeBeforeDateFromNow()();
}

uint64_t TTRRemindersListViewModel.HashtagLabelSelectorState.init(labels:selection:)()
{
  return TTRRemindersListViewModel.HashtagLabelSelectorState.init(labels:selection:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState()
{
  return type metadata accessor for TTRRemindersListViewModel.HashtagLabelSelectorState();
}

uint64_t TTRRemindersListViewModel.HashtagSelectionDescription.attributedPreferredDescription(baseAttributes:emphasizedAttributes:)()
{
  return TTRRemindersListViewModel.HashtagSelectionDescription.attributedPreferredDescription(baseAttributes:emphasizedAttributes:)();
}

uint64_t static TTRRemindersListViewModel.HashtagSelectionDescription.__derived_struct_equals(_:_:)()
{
  return static TTRRemindersListViewModel.HashtagSelectionDescription.__derived_struct_equals(_:_:)();
}

uint64_t TTRRemindersListViewModel.HashtagSelectionDescription.init(generic:preferred:)()
{
  return TTRRemindersListViewModel.HashtagSelectionDescription.init(generic:preferred:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.SectionCasesItem();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.iOSListCasesInItem();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.BaseTreeCasesInItem();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.EditableCasesInItem();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.ReminderCasesInItem();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.SectionsContainersAndSectionCasesItem();
}

uint64_t TTRRemindersListViewModel.Item.treeItemIdentifier.getter()
{
  return TTRRemindersListViewModel.Item.treeItemIdentifier.getter();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem()
{
  return type metadata accessor for TTRRemindersListViewModel.Item.BoardViewCasesInItem();
}

uint64_t TTRRemindersListViewModel.Item.boardViewCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.boardViewCasesOnly.getter();
}

uint64_t static TTRRemindersListViewModel.Item.contentsEqual(_:_:)()
{
  return static TTRRemindersListViewModel.Item.contentsEqual(_:_:)();
}

uint64_t static TTRRemindersListViewModel.Item.itemTypesEqual(_:_:)()
{
  return static TTRRemindersListViewModel.Item.itemTypesEqual(_:_:)();
}

uint64_t TTRRemindersListViewModel.Item.debugDescription.getter()
{
  return TTRRemindersListViewModel.Item.debugDescription.getter();
}

uint64_t TTRRemindersListViewModel.Item.iOSListCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.iOSListCasesOnly.getter();
}

uint64_t TTRRemindersListViewModel.Item.reminderObjectID.getter()
{
  return TTRRemindersListViewModel.Item.reminderObjectID.getter();
}

uint64_t TTRRemindersListViewModel.Item.sectionCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.sectionCasesOnly.getter();
}

uint64_t TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.baseTreeCasesOnly.getter();
}

uint64_t TTRRemindersListViewModel.Item.editableCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.editableCasesOnly.getter();
}

uint64_t TTRRemindersListViewModel.Item.reminderCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.reminderCasesOnly.getter();
}

uint64_t TTRRemindersListViewModel.Item.isEligibleForAutoCompleteReminder.getter()
{
  return TTRRemindersListViewModel.Item.isEligibleForAutoCompleteReminder.getter();
}

uint64_t TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter()
{
  return TTRRemindersListViewModel.Item.sectionsContainerAndSectionCasesOnly.getter();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Item()
{
  return type metadata accessor for TTRRemindersListViewModel.Item();
}

uint64_t TTRRemindersListViewModel.ItemID.description.getter()
{
  return TTRRemindersListViewModel.ItemID.description.getter();
}

uint64_t static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)()
{
  return static TTRRemindersListViewModel.ItemID.__derived_enum_equals(_:_:)();
}

uint64_t TTRRemindersListViewModel.ItemID.hash(into:)()
{
  return TTRRemindersListViewModel.ItemID.hash(into:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.ItemID()
{
  return type metadata accessor for TTRRemindersListViewModel.ItemID();
}

uint64_t TTRRemindersListViewModel.AppLink.init(icon:name:)()
{
  return TTRRemindersListViewModel.AppLink.init(icon:name:)();
}

uint64_t static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)()
{
  return static TTRRemindersListViewModel.Reminder.displayDate(from:dateHidden:)();
}

uint64_t static TTRRemindersListViewModel.Reminder.completionDateString(from:completionHidden:forAccessibility:)()
{
  return static TTRRemindersListViewModel.Reminder.completionDateString(from:completionHidden:forAccessibility:)();
}

uint64_t TTRRemindersListViewModel.Reminder.localizedDescription.getter()
{
  return TTRRemindersListViewModel.Reminder.localizedDescription.getter();
}

uint64_t static TTRRemindersListViewModel.Reminder.recurrenceDescription(from:displayDate:)()
{
  return static TTRRemindersListViewModel.Reminder.recurrenceDescription(from:displayDate:)();
}

uint64_t TTRRemindersListViewModel.Reminder.priorityLevelDisplayString.getter()
{
  return TTRRemindersListViewModel.Reminder.priorityLevelDisplayString.getter();
}

uint64_t TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)()
{
  return TTRRemindersListViewModel.Reminder.init(item:reminderAndList:precomputedProperties:overrides:)();
}

uint64_t TTRRemindersListViewModel.Reminder.init(item:objectID:)()
{
  return TTRRemindersListViewModel.Reminder.init(item:objectID:)();
}

uint64_t TTRRemindersListViewModel.Reminder.title.getter()
{
  return TTRRemindersListViewModel.Reminder.title.getter();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Reminder.Override()
{
  return type metadata accessor for TTRRemindersListViewModel.Reminder.Override();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.Reminder()
{
  return type metadata accessor for TTRRemindersListViewModel.Reminder();
}

uint64_t TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter()
{
  return TTRRemindersListViewModel.SectionID.editableSectionCasesOnly.getter();
}

uint64_t TTRRemindersListViewModel.SectionID.EraAndYear.init(dateComponents:)()
{
  return TTRRemindersListViewModel.SectionID.EraAndYear.init(dateComponents:)();
}

uint64_t TTRRemindersListViewModel.SectionID.description.getter()
{
  return TTRRemindersListViewModel.SectionID.description.getter();
}

uint64_t static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)()
{
  return static TTRRemindersListViewModel.SectionID.__derived_enum_equals(_:_:)();
}

uint64_t TTRRemindersListViewModel.SectionID.hash(into:)()
{
  return TTRRemindersListViewModel.SectionID.hash(into:)();
}

uint64_t type metadata accessor for TTRRemindersListViewModel.SectionID()
{
  return type metadata accessor for TTRRemindersListViewModel.SectionID();
}

uint64_t type metadata accessor for TTRRemindersListViewModel()
{
  return type metadata accessor for TTRRemindersListViewModel();
}

uint64_t static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)()
{
  return static TTRSharedWithYouHighlight.__derived_struct_equals(_:_:)();
}

uint64_t type metadata accessor for TTRSharedWithYouHighlight()
{
  return type metadata accessor for TTRSharedWithYouHighlight();
}

uint64_t TTRTemplatePublicLinkData.Capabilities.createLink.unsafeMutableAddressor()
{
  return TTRTemplatePublicLinkData.Capabilities.createLink.unsafeMutableAddressor();
}

uint64_t TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor()
{
  return TTRTemplatePublicLinkData.Capabilities.updateLink.unsafeMutableAddressor();
}

uint64_t TTRTemplatePublicLinkData.Capabilities.stopSharing.unsafeMutableAddressor()
{
  return TTRTemplatePublicLinkData.Capabilities.stopSharing.unsafeMutableAddressor();
}

uint64_t type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay()
{
  return type metadata accessor for TTRTemplatePublicLinkData.StateToDisplay();
}

NSAttributedString_optional __swiftcall TTRTemplatePublicLinkData.attributedStatusText(baseAttributes:forAccessibility:)(Swift::OpaquePointer baseAttributes, Swift::Bool forAccessibility)
{
  uint64_t v2 = (objc_class *)TTRTemplatePublicLinkData.attributedStatusText(baseAttributes:forAccessibility:)(baseAttributes._rawValue, forAccessibility);
  result.value.super.Class isa = v2;
  result.is_nil = v3;
  return result;
}

uint64_t type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription()
{
  return type metadata accessor for TTRTemplatePublicLinkData.CreatedStateDescription();
}

uint64_t static TTRTemplatePublicLinkData.__derived_struct_equals(_:_:)()
{
  return static TTRTemplatePublicLinkData.__derived_struct_equals(_:_:)();
}

uint64_t TTRTemplatePublicLinkData.init(template:now:)()
{
  return TTRTemplatePublicLinkData.init(template:now:)();
}

uint64_t type metadata accessor for TTRTemplatePublicLinkData()
{
  return type metadata accessor for TTRTemplatePublicLinkData();
}

uint64_t TTRTemplatesListViewModel.init(isPlaceholder:)()
{
  return TTRTemplatesListViewModel.init(isPlaceholder:)();
}

uint64_t TTRTemplatesListViewModel.OptimisticApply.init(templateOrdering:deletedTemplateIDs:)()
{
  return TTRTemplatesListViewModel.OptimisticApply.init(templateOrdering:deletedTemplateIDs:)();
}

uint64_t type metadata accessor for TTRTemplatesListViewModel.OptimisticApply()
{
  return type metadata accessor for TTRTemplatesListViewModel.OptimisticApply();
}

uint64_t TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter()
{
  return TTRTemplatesListViewModel.shouldShowContentUnavailableMessage.getter();
}

uint64_t TTRTemplatesListViewModel.isEmpty.getter()
{
  return TTRTemplatesListViewModel.isEmpty.getter();
}

uint64_t static TTRTemplatesListViewModel.Template.__derived_struct_equals(_:_:)()
{
  return static TTRTemplatesListViewModel.Template.__derived_struct_equals(_:_:)();
}

uint64_t type metadata accessor for TTRTemplatesListViewModel.Template()
{
  return type metadata accessor for TTRTemplatesListViewModel.Template();
}

uint64_t TTRTemplatesListViewModel.applying(_:)()
{
  return TTRTemplatesListViewModel.applying(_:)();
}

uint64_t TTRTemplatesListViewModel.snapshot(previousViewModel:)()
{
  return TTRTemplatesListViewModel.snapshot(previousViewModel:)();
}

uint64_t TTRTemplatesListViewModel.template(with:)()
{
  return TTRTemplatesListViewModel.template(with:)();
}

uint64_t TTRTemplatesListViewModel.init(templates:)()
{
  return TTRTemplatesListViewModel.init(templates:)();
}

uint64_t TTRAccountsListsInteractor.init(store:committer:cloudKitMigrationManager:cloudKitNetworkActivityMonitor:perWindowLastSelectedListStorage:userDefaults:)()
{
  return TTRAccountsListsInteractor.init(store:committer:cloudKitMigrationManager:cloudKitNetworkActivityMonitor:perWindowLastSelectedListStorage:userDefaults:)();
}

uint64_t type metadata accessor for TTRAccountsListsInteractor()
{
  return type metadata accessor for TTRAccountsListsInteractor();
}

Swift::Void __swiftcall TTRIDebugDropIndicatorView.stopShowing()()
{
}

uint64_t static TTRIReminderDetailAssembly.createViewController(subject:delegate:style:savesOnCommit:itemCount:pendingMoveContext:ttrSectionLite:manualOrdering:)()
{
  return static TTRIReminderDetailAssembly.createViewController(subject:delegate:style:savesOnCommit:itemCount:pendingMoveContext:ttrSectionLite:manualOrdering:)();
}

uint64_t type metadata accessor for TTRIReminderDetailAssembly()
{
  return type metadata accessor for TTRIReminderDetailAssembly();
}

uint64_t TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)()
{
  return TTRIToggleCellContentState.init(icon:title:subtitle:ttriAccessibilitySubtitle:isOn:isSelectable:isControlHidden:isSeparatorHidden:ttriAccessibilitySimulatesExpandAndCollapse:ttriAccessibilityIsInSimulatedExpandedState:)();
}

Swift::Void __swiftcall TTRMainActorDeferredAction.scheduleNextRunLoop(reason:)(Swift::String reason)
{
}

uint64_t TTRMainActorDeferredAction.init()()
{
  return TTRMainActorDeferredAction.init()();
}

uint64_t type metadata accessor for TTRMainActorDeferredAction()
{
  return type metadata accessor for TTRMainActorDeferredAction();
}

uint64_t static TTRPermissionConfiguration.notificationPermissionRequest()()
{
  return static TTRPermissionConfiguration.notificationPermissionRequest()();
}

uint64_t static TTRPermissionConfiguration.notificationPermissionDisabled()()
{
  return static TTRPermissionConfiguration.notificationPermissionDisabled()();
}

uint64_t static TTRPermissionConfiguration.Action.__derived_enum_equals(_:_:)()
{
  return static TTRPermissionConfiguration.Action.__derived_enum_equals(_:_:)();
}

uint64_t static TTRPermissionConfiguration.Header.__derived_struct_equals(_:_:)()
{
  return static TTRPermissionConfiguration.Header.__derived_struct_equals(_:_:)();
}

uint64_t TTRReminderDetailViewModel.BadgeViewModel.init(listProtocol:)()
{
  return TTRReminderDetailViewModel.BadgeViewModel.init(listProtocol:)();
}

uint64_t TTRRemindersListInteractor.init(store:canChangeSortingStyle:defaultListType:committer:undoContext:)()
{
  return TTRRemindersListInteractor.init(store:canChangeSortingStyle:defaultListType:committer:undoContext:)();
}

uint64_t type metadata accessor for TTRRemindersListInteractor()
{
  return type metadata accessor for TTRRemindersListInteractor();
}

uint64_t type metadata accessor for TTRSingleColorGradientView()
{
  return type metadata accessor for TTRSingleColorGradientView();
}

uint64_t TTRTemplateSavingViewModel.init(sourceList:name:templateConfiguration:completedReminderCount:allowsCommit:)()
{
  return TTRTemplateSavingViewModel.init(sourceList:name:templateConfiguration:completedReminderCount:allowsCommit:)();
}

uint64_t TTRTemplateSavingViewModel.init()()
{
  return TTRTemplateSavingViewModel.init()();
}

Swift::Void __swiftcall TTRTemplatesListInteractor.start()()
{
}

uint64_t TTRTemplatesListInteractor.init(account:undoManager:committer:)()
{
  return TTRTemplatesListInteractor.init(account:undoManager:committer:)();
}

uint64_t type metadata accessor for TTRTemplatesListInteractor()
{
  return type metadata accessor for TTRTemplatesListInteractor();
}

Swift::Void __swiftcall TTRTreeViewAnimationByType.useReloadAnimationForRecurrentReminders()()
{
}

uint64_t TTRTreeViewAnimationByType.none.unsafeMutableAddressor()
{
  return TTRTreeViewAnimationByType.none.unsafeMutableAddressor();
}

uint64_t TTRTreeViewAnimationByType.fading.unsafeMutableAddressor()
{
  return TTRTreeViewAnimationByType.fading.unsafeMutableAddressor();
}

uint64_t TTRUserActivityListPayload.navigationSpecifier.getter()
{
  return TTRUserActivityListPayload.navigationSpecifier.getter();
}

uint64_t type metadata accessor for TTRUserActivityListPayload.State()
{
  return type metadata accessor for TTRUserActivityListPayload.State();
}

uint64_t type metadata accessor for TTRUserActivityListPayload()
{
  return type metadata accessor for TTRUserActivityListPayload();
}

uint64_t static CNAvatarViewControllerUtils.ttrDescriptorForRequiredKeys.getter()
{
  return static CNAvatarViewControllerUtils.ttrDescriptorForRequiredKeys.getter();
}

uint64_t TTRCloudKitMigrationManager.MigrationState.description.getter()
{
  return TTRCloudKitMigrationManager.MigrationState.description.getter();
}

uint64_t static TTRCloudKitMigrationManager.MigrationState.== infix(_:_:)()
{
  return static TTRCloudKitMigrationManager.MigrationState.== infix(_:_:)();
}

uint64_t TTRCloudKitMigrationManager.shared.unsafeMutableAddressor()
{
  return TTRCloudKitMigrationManager.shared.unsafeMutableAddressor();
}

uint64_t TTRDirectlySavableImageData.init(data:)()
{
  return TTRDirectlySavableImageData.init(data:)();
}

uint64_t TTRDirectlySavableImageData.init(image:sourceUTI:)()
{
  return TTRDirectlySavableImageData.init(image:sourceUTI:)();
}

uint64_t type metadata accessor for TTRDirectlySavableImageData()
{
  return type metadata accessor for TTRDirectlySavableImageData();
}

uint64_t static TTRIRemindersListBackground.backgroundConfiguration(for:compatibleWith:)()
{
  return static TTRIRemindersListBackground.backgroundConfiguration(for:compatibleWith:)();
}

uint64_t static TTRIRemindersListBackground.color(for:)()
{
  return static TTRIRemindersListBackground.color(for:)();
}

uint64_t TTRListDetailBadgeViewModel.init(listProtocol:badgeDisplayStyle:)()
{
  return TTRListDetailBadgeViewModel.init(listProtocol:badgeDisplayStyle:)();
}

uint64_t TTRListDetailBadgeViewModel.init(listOrCustomSmartListChangeItem:)()
{
  return TTRListDetailBadgeViewModel.init(listOrCustomSmartListChangeItem:)();
}

uint64_t TTRListDetailBadgeViewModel.init()()
{
  return TTRListDetailBadgeViewModel.init()();
}

uint64_t TTRRemindersListUndoContext.init(undoManager:listType:)()
{
  return TTRRemindersListUndoContext.init(undoManager:listType:)();
}

uint64_t TTRRemindersListUndoContext.undoManager.getter()
{
  return TTRRemindersListUndoContext.undoManager.getter();
}

uint64_t type metadata accessor for TTRRemindersListUndoContext()
{
  return type metadata accessor for TTRRemindersListUndoContext();
}

uint64_t TTRTemplateSavingInteractor.init(sourceList:undoManager:completedReminderCountState:)()
{
  return TTRTemplateSavingInteractor.init(sourceList:undoManager:completedReminderCountState:)();
}

Swift::Void __swiftcall TTRTemplateSavingInteractor.start()()
{
}

uint64_t type metadata accessor for TTRTemplateSavingInteractor()
{
  return type metadata accessor for TTRTemplateSavingInteractor();
}

uint64_t TTRTemplateSharingViewModel.makePublicLinkConfiguration()()
{
  return TTRTemplateSharingViewModel.makePublicLinkConfiguration()();
}

uint64_t TTRTemplateSharingViewModel.localizedMessageForIncludePropertiesAlert.getter()
{
  return TTRTemplateSharingViewModel.localizedMessageForIncludePropertiesAlert.getter();
}

uint64_t TTRTemplateSharingViewModel.Purpose.viewTitle.getter()
{
  return TTRTemplateSharingViewModel.Purpose.viewTitle.getter();
}

Swift::Void __swiftcall TTRIChromelessToolbarUpdater.updateForToolbarVisibilityChange()()
{
}

uint64_t TTRIChromelessToolbarUpdater.init(scrollView:)()
{
  return TTRIChromelessToolbarUpdater.init(scrollView:)();
}

uint64_t type metadata accessor for TTRIChromelessToolbarUpdater()
{
  return type metadata accessor for TTRIChromelessToolbarUpdater();
}

uint64_t type metadata accessor for TTRIExpandedHitTestImageView()
{
  return type metadata accessor for TTRIExpandedHitTestImageView();
}

uint64_t type metadata accessor for TTRIHashtagEditorModuleState()
{
  return type metadata accessor for TTRIHashtagEditorModuleState();
}

uint64_t TTRIReminderCompletionButton.prefersFadedAppearance.setter()
{
  return TTRIReminderCompletionButton.prefersFadedAppearance.setter();
}

uint64_t TTRIReminderCompletionButton.preferredSymbolConfiguration.setter()
{
  return TTRIReminderCompletionButton.preferredSymbolConfiguration.setter();
}

uint64_t TTRIReminderCompletionButton.icon.setter()
{
  return TTRIReminderCompletionButton.icon.setter();
}

uint64_t type metadata accessor for TTRIReminderCompletionButton()
{
  return type metadata accessor for TTRIReminderCompletionButton();
}

uint64_t TTRITableSectionHeaderFooter.init<A>(contentProvider:height:)()
{
  return TTRITableSectionHeaderFooter.init<A>(contentProvider:height:)();
}

uint64_t TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)()
{
  return TTRITableSectionHeaderFooter.init(listContentConfiguration:height:)();
}

uint64_t TTRITableSectionHeaderFooter.init(title:height:)()
{
  return TTRITableSectionHeaderFooter.init(title:height:)();
}

uint64_t TTRListShareeContextProtocol.assignableSharees.getter()
{
  return TTRListShareeContextProtocol.assignableSharees.getter();
}

uint64_t TTRParticipantAvatarProvider.init(contactsProvider:contactStoreCreator:queue:)()
{
  return TTRParticipantAvatarProvider.init(contactsProvider:contactStoreCreator:queue:)();
}

uint64_t type metadata accessor for TTRParticipantAvatarProvider()
{
  return type metadata accessor for TTRParticipantAvatarProvider();
}

uint64_t TTRRelativeInsertionPosition.optionalMapSibling<A>(_:)()
{
  return TTRRelativeInsertionPosition.optionalMapSibling<A>(_:)();
}

uint64_t TTRRelativeInsertionPosition.init(sibling:isAfter:)()
{
  return TTRRelativeInsertionPosition.init(sibling:isAfter:)();
}

uint64_t static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)()
{
  return static TTRRelativeInsertionPosition<A>.__derived_enum_equals(_:_:)();
}

uint64_t TTRRemindersListEditingState.isEditing(_:)()
{
  return TTRRemindersListEditingState.isEditing(_:)();
}

uint64_t TTRRemindersListEditingState.isEditingItem.getter()
{
  return TTRRemindersListEditingState.isEditingItem.getter();
}

uint64_t TTRRemindersListEditingState.editingItem.getter()
{
  return TTRRemindersListEditingState.editingItem.getter();
}

uint64_t TTRRemindersListPostponeType.dateChangeType.getter()
{
  return TTRRemindersListPostponeType.dateChangeType.getter();
}

uint64_t TTRRemindersListPostponeType.localizedDescription.getter()
{
  return TTRRemindersListPostponeType.localizedDescription.getter();
}

uint64_t TTRRemindersListPostponeType.init(date:)()
{
  return TTRRemindersListPostponeType.init(date:)();
}

uint64_t static TTRRemindersListPostponeType.allCases.getter()
{
  return static TTRRemindersListPostponeType.allCases.getter();
}

uint64_t TTRShowTaggedDataModelSource.init(store:initialHashtagLabels:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowTaggedDataModelSource.init(store:initialHashtagLabels:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowTaggedDataModelSource()
{
  return type metadata accessor for TTRShowTaggedDataModelSource();
}

uint64_t TTRTemplateSharingInteractor.init(template:)()
{
  return TTRTemplateSharingInteractor.init(template:)();
}

uint64_t type metadata accessor for TTRTemplateSharingInteractor()
{
  return type metadata accessor for TTRTemplateSharingInteractor();
}

Swift::Void __swiftcall TTRDeferredViewActionProvider.viewWillLayoutSubviews()()
{
}

uint64_t TTRDeferredViewActionProvider.init(view:)()
{
  return TTRDeferredViewActionProvider.init(view:)();
}

uint64_t TTRDeferredViewActionProvider.trigger.getter()
{
  return TTRDeferredViewActionProvider.trigger.getter();
}

Swift::Void __swiftcall TTRDeferredViewActionProvider.schedule()()
{
}

uint64_t type metadata accessor for TTRDeferredViewActionProvider()
{
  return type metadata accessor for TTRDeferredViewActionProvider();
}

uint64_t TTREditTodaySectionsPresenter.init(interactor:router:undoManager:needsDiscardChangesConfirmation:)()
{
  return TTREditTodaySectionsPresenter.init(interactor:router:undoManager:needsDiscardChangesConfirmation:)();
}

uint64_t type metadata accessor for TTREditTodaySectionsPresenter()
{
  return type metadata accessor for TTREditTodaySectionsPresenter();
}

uint64_t type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel()
{
  return type metadata accessor for TTREditTodaySectionsViewModel.CellViewModel();
}

uint64_t TTREditTodaySectionsViewModel.cellViewModels.getter()
{
  return TTREditTodaySectionsViewModel.cellViewModels.getter();
}

uint64_t TTRICalendarPickerCellContent.init(state:)()
{
  return TTRICalendarPickerCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRICalendarPickerCellContent()
{
  return type metadata accessor for TTRICalendarPickerCellContent();
}

uint64_t static TTRIReminderCellNotesAssembly.createViewController(item:isSingleReminderEditingMode:quickBar:ownerModule:hostViewController:inCellPresenterManager:moduleDelegate:)()
{
  return static TTRIReminderCellNotesAssembly.createViewController(item:isSingleReminderEditingMode:quickBar:ownerModule:hostViewController:inCellPresenterManager:moduleDelegate:)();
}

uint64_t static TTRIReminderCellTitleAssembly.createViewController(item:titleAttributesInteractor:quickBar:augmentationSplitter:ownerModule:hostViewController:inCellPresenterManager:isSingleReminderEditingMode:returnKeyType:moduleDelegate:)()
{
  return static TTRIReminderCellTitleAssembly.createViewController(item:titleAttributesInteractor:quickBar:augmentationSplitter:ownerModule:hostViewController:inCellPresenterManager:isSingleReminderEditingMode:returnKeyType:moduleDelegate:)();
}

uint64_t TTRIRemindersListReminderCell.notesModule.setter()
{
  return TTRIRemindersListReminderCell.notesModule.setter();
}

uint64_t TTRIRemindersListReminderCell.titleModule.setter()
{
  return TTRIRemindersListReminderCell.titleModule.setter();
}

uint64_t TTRIRemindersListReminderCell.hashtagModule.setter()
{
  return TTRIRemindersListReminderCell.hashtagModule.setter();
}

uint64_t static TTRIRemindersListReminderCell.ignoreDragging(view:)()
{
  return static TTRIRemindersListReminderCell.ignoreDragging(view:)();
}

uint64_t TTRIRemindersListReminderCell.attributedTitle.getter()
{
  return TTRIRemindersListReminderCell.attributedTitle.getter();
}

uint64_t TTRIRemindersListReminderCell.isViewModelValid.getter()
{
  return TTRIRemindersListReminderCell.isViewModelValid.getter();
}

uint64_t TTRIRemindersListReminderCell.inputViewForPencilInput.getter()
{
  return TTRIRemindersListReminderCell.inputViewForPencilInput.getter();
}

uint64_t TTRIRemindersListReminderCell.viewForAnchoringPopover.getter()
{
  return TTRIRemindersListReminderCell.viewForAnchoringPopover.getter();
}

Swift::Void __swiftcall TTRIRemindersListReminderCell.createAndStartEditingNewHashtag()()
{
}

uint64_t TTRIRemindersListReminderCell.hideSeparatorDueToLastItemInSection.setter()
{
  return TTRIRemindersListReminderCell.hideSeparatorDueToLastItemInSection.setter();
}

uint64_t TTRIRemindersListReminderCell.viewModel.getter()
{
  return TTRIRemindersListReminderCell.viewModel.getter();
}

uint64_t TTRIRemindersListReminderCell.viewModel.setter()
{
  return TTRIRemindersListReminderCell.viewModel.setter();
}

uint64_t type metadata accessor for TTRIRemindersListReminderCell()
{
  return type metadata accessor for TTRIRemindersListReminderCell();
}

uint64_t TTRReminderCellTitleViewModel.init(reminder:font:)()
{
  return TTRReminderCellTitleViewModel.init(reminder:font:)();
}

uint64_t type metadata accessor for TTRReminderCellTitleViewModel()
{
  return type metadata accessor for TTRReminderCellTitleViewModel();
}

uint64_t TTRReminderPrintingInteractor.init(dataModelSource:participantAvatarProvider:participantAvatarProviderInvocationQueue:)()
{
  return TTRReminderPrintingInteractor.init(dataModelSource:participantAvatarProvider:participantAvatarProviderInvocationQueue:)();
}

uint64_t type metadata accessor for TTRReminderPrintingInteractor()
{
  return type metadata accessor for TTRReminderPrintingInteractor();
}

uint64_t TTRShowFlaggedDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:fetchSubtasks:)()
{
  return TTRShowFlaggedDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:fetchSubtasks:)();
}

uint64_t type metadata accessor for TTRShowFlaggedDataModelSource()
{
  return type metadata accessor for TTRShowFlaggedDataModelSource();
}

uint64_t TTRAttachmentThumbnailsManager.thumbnails(for:scale:)()
{
  return TTRAttachmentThumbnailsManager.thumbnails(for:scale:)();
}

uint64_t TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)()
{
  return TTRAttachmentThumbnailsManager.init(thumbnailSizeProvider:thumbnailGenerator:)();
}

uint64_t TTRAttachmentThumbnailsManager.Result.attachmentID.getter()
{
  return TTRAttachmentThumbnailsManager.Result.attachmentID.getter();
}

uint64_t TTRAttachmentThumbnailsManager.Result.image.getter()
{
  return TTRAttachmentThumbnailsManager.Result.image.getter();
}

uint64_t type metadata accessor for TTRAttachmentThumbnailsManager()
{
  return type metadata accessor for TTRAttachmentThumbnailsManager();
}

uint64_t TTREditSectionsSmartListEditor.init(list:undoManager:committer:userDefaults:)()
{
  return TTREditSectionsSmartListEditor.init(list:undoManager:committer:userDefaults:)();
}

uint64_t type metadata accessor for TTREditSectionsSmartListEditor()
{
  return type metadata accessor for TTREditSectionsSmartListEditor();
}

Swift::Void __swiftcall TTREditTodaySectionsInteractor.start()()
{
}

uint64_t TTREditTodaySectionsInteractor.init(store:undoManager:)()
{
  return TTREditTodaySectionsInteractor.init(store:undoManager:)();
}

uint64_t type metadata accessor for TTREditTodaySectionsInteractor()
{
  return type metadata accessor for TTREditTodaySectionsInteractor();
}

uint64_t TTRIQuickLookPreviewController.__allocating_init(previewItemURLs:)()
{
  return TTRIQuickLookPreviewController.__allocating_init(previewItemURLs:)();
}

uint64_t TTRIQuickLookPreviewController.init(ttr_previewItems:)()
{
  return TTRIQuickLookPreviewController.init(ttr_previewItems:)();
}

uint64_t TTRIQuickLookPreviewController.transitionDelegate.setter()
{
  return TTRIQuickLookPreviewController.transitionDelegate.setter();
}

uint64_t type metadata accessor for TTRIQuickLookPreviewController()
{
  return type metadata accessor for TTRIQuickLookPreviewController();
}

uint64_t TTRIReminderCellNotesViewModel.init(item:allowsEditing:notes:baseTextStyles:inlineHashtagVisibility:supportsStyling:)()
{
  return TTRIReminderCellNotesViewModel.init(item:allowsEditing:notes:baseTextStyles:inlineHashtagVisibility:supportsStyling:)();
}

uint64_t type metadata accessor for TTRIReminderCellNotesViewModel()
{
  return type metadata accessor for TTRIReminderCellNotesViewModel();
}

uint64_t static TTRIReminderListPickerAssembly.createViewController(mode:action:store:selectedListID:showingInstructionsForMovingReminders:modalPresentationStyle:)()
{
  return static TTRIReminderListPickerAssembly.createViewController(mode:action:store:selectedListID:showingInstructionsForMovingReminders:modalPresentationStyle:)();
}

uint64_t type metadata accessor for TTRIReminderListPickerAssembly()
{
  return type metadata accessor for TTRIReminderListPickerAssembly();
}

uint64_t type metadata accessor for TTRIUnsupportedTextDropHandler()
{
  return type metadata accessor for TTRIUnsupportedTextDropHandler();
}

uint64_t TTRReminderListPickerViewModel.remListOrCustomSmartList(at:inSectionAt:)()
{
  return TTRReminderListPickerViewModel.remListOrCustomSmartList(at:inSectionAt:)();
}

Swift::Int __swiftcall TTRReminderListPickerViewModel.numberOfLists(inSectionAt:)(Swift::Int inSectionAt)
{
  return TTRReminderListPickerViewModel.numberOfLists(inSectionAt:)(inSectionAt);
}

uint64_t TTRReminderListPickerViewModel.sectionHeader(at:)()
{
  return TTRReminderListPickerViewModel.sectionHeader(at:)();
}

uint64_t TTRReminderListPickerViewModel.numberOfSections.getter()
{
  return TTRReminderListPickerViewModel.numberOfSections.getter();
}

uint64_t TTRReminderListPickerViewModel.list(at:inSectionAt:)()
{
  return TTRReminderListPickerViewModel.list(at:inSectionAt:)();
}

uint64_t TTRReminderListPickerViewModel.init(accounts:allowedCustomSmartListAccountID:disabledListID:)()
{
  return TTRReminderListPickerViewModel.init(accounts:allowedCustomSmartListAccountID:disabledListID:)();
}

uint64_t TTRRemindersListEditingSession.reminderAndList.getter()
{
  return TTRRemindersListEditingSession.reminderAndList.getter();
}

uint64_t TTRRemindersListEditingSession.effectiveParentList.getter()
{
  return TTRRemindersListEditingSession.effectiveParentList.getter();
}

uint64_t TTRRemindersListEditingSession.setTitleWithOptionalUndo(_:locale:undoRegistration:canMarkHasSetTitle:)()
{
  return TTRRemindersListEditingSession.setTitleWithOptionalUndo(_:locale:undoRegistration:canMarkHasSetTitle:)();
}

uint64_t TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)()
{
  return TTRRemindersListInteractorType.newReminderChangeItem(objectID:title:targetContainer:position:remindersBeingSaved:)();
}

uint64_t TTRRemindersListInteractorType.move(reminders:to:position:)()
{
  return TTRRemindersListInteractorType.move(reminders:to:position:)();
}

uint64_t type metadata accessor for TTRRemindersPrintingHTMLResult()
{
  return type metadata accessor for TTRRemindersPrintingHTMLResult();
}

uint64_t TTRShowAssignedDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowAssignedDataModelSource.init(store:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowAssignedDataModelSource()
{
  return type metadata accessor for TTRShowAssignedDataModelSource();
}

uint64_t TTRTemplatesListInteractorType.template(with:)()
{
  return TTRTemplatesListInteractorType.template(with:)();
}

uint64_t TTRUndoNavigationEditingTarget.init(reminderIDs:)()
{
  return TTRUndoNavigationEditingTarget.init(reminderIDs:)();
}

uint64_t TTRUndoNavigationEditingTarget.init(id:itemType:)()
{
  return TTRUndoNavigationEditingTarget.init(id:itemType:)();
}

uint64_t TTRAutoCompleteReminderProvider.__allocating_init(store:)()
{
  return TTRAutoCompleteReminderProvider.__allocating_init(store:)();
}

uint64_t type metadata accessor for TTRAutoCompleteReminderProvider()
{
  return type metadata accessor for TTRAutoCompleteReminderProvider();
}

uint64_t TTREditTodaySectionsModelObject.viewModel.getter()
{
  return TTREditTodaySectionsModelObject.viewModel.getter();
}

uint64_t TTREditTodaySectionsModelObject.init()()
{
  return TTREditTodaySectionsModelObject.init()();
}

uint64_t type metadata accessor for TTREditTodaySectionsModelObject()
{
  return type metadata accessor for TTREditTodaySectionsModelObject();
}

uint64_t TTRHashtagAssociationInteractor.init(store:backgroundTaskPerformer:)()
{
  return TTRHashtagAssociationInteractor.init(store:backgroundTaskPerformer:)();
}

uint64_t type metadata accessor for TTRHashtagAssociationInteractor()
{
  return type metadata accessor for TTRHashtagAssociationInteractor();
}

uint64_t TTRIDetailDisclosureCellContent.init(state:)()
{
  return TTRIDetailDisclosureCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIDetailDisclosureCellContent()
{
  return type metadata accessor for TTRIDetailDisclosureCellContent();
}

uint64_t static TTRIReminderCellHashtagAssembly.createViewController(item:quickBar:ownerModule:hostViewController:inCellPresenterManager:moduleDelegate:)()
{
  return static TTRIReminderCellHashtagAssembly.createViewController(item:quickBar:ownerModule:hostViewController:inCellPresenterManager:moduleDelegate:)();
}

uint64_t TTRIRemindersListDisclosureView.isExpanded.setter()
{
  return TTRIRemindersListDisclosureView.isExpanded.setter();
}

uint64_t TTRIRemindersListDisclosureView.tintColor.setter()
{
  return TTRIRemindersListDisclosureView.tintColor.setter();
}

uint64_t type metadata accessor for TTRIRemindersListDisclosureView()
{
  return type metadata accessor for TTRIRemindersListDisclosureView();
}

uint64_t TTRIStaticTableViewStandardCell.extraAccessoryView.getter()
{
  return TTRIStaticTableViewStandardCell.extraAccessoryView.getter();
}

uint64_t TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)()
{
  return TTRIStaticTableViewStandardCell.RoundRectIcon.init(image:tintColor:backgroundColor:)();
}

uint64_t TTRIStaticTableViewStandardCell.performBatchUpdates(_:)()
{
  return TTRIStaticTableViewStandardCell.performBatchUpdates(_:)();
}

uint64_t static TTRIStaticTableViewStandardCell.Icon.__derived_enum_equals(_:_:)()
{
  return static TTRIStaticTableViewStandardCell.Icon.__derived_enum_equals(_:_:)();
}

uint64_t TTRIStaticTableViewStandardCell.icon.setter()
{
  return TTRIStaticTableViewStandardCell.icon.setter();
}

uint64_t TTRITitledDatePickerCellContent.init(state:)()
{
  return TTRITitledDatePickerCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRITitledDatePickerCellContent()
{
  return type metadata accessor for TTRITitledDatePickerCellContent();
}

uint64_t TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)()
{
  return TTRListContentsPrefetchExtender.init(prefetchCountNeeded:)();
}

uint64_t TTRListContentsPrefetchExtender.extendFetchIndexPaths(_:sectionCountProvider:rowCountProvider:)()
{
  return TTRListContentsPrefetchExtender.extendFetchIndexPaths(_:sectionCountProvider:rowCountProvider:)();
}

uint64_t type metadata accessor for TTRListContentsPrefetchExtender()
{
  return type metadata accessor for TTRListContentsPrefetchExtender();
}

uint64_t TTRLocationQuickPicksInteractor.init(geoService:locationOptionsProvider:)()
{
  return TTRLocationQuickPicksInteractor.init(geoService:locationOptionsProvider:)();
}

uint64_t type metadata accessor for TTRLocationQuickPicksInteractor()
{
  return type metadata accessor for TTRLocationQuickPicksInteractor();
}

uint64_t type metadata accessor for TTRNoAnimationContainerGridView()
{
  return type metadata accessor for TTRNoAnimationContainerGridView();
}

uint64_t TTRReminderListPickerInteractor.init(store:)()
{
  return TTRReminderListPickerInteractor.init(store:)();
}

uint64_t type metadata accessor for TTRReminderListPickerInteractor()
{
  return type metadata accessor for TTRReminderListPickerInteractor();
}

uint64_t TTRRemindersListAttributeEditor.setList(_:)()
{
  return TTRRemindersListAttributeEditor.setList(_:)();
}

uint64_t TTRRemindersListAttributeEditor.init(editorProvider:)()
{
  return TTRRemindersListAttributeEditor.init(editorProvider:)();
}

uint64_t type metadata accessor for TTRRemindersListAttributeEditor()
{
  return type metadata accessor for TTRRemindersListAttributeEditor();
}

uint64_t type metadata accessor for TTRRemindersListHighlightTarget.TargetItem()
{
  return type metadata accessor for TTRRemindersListHighlightTarget.TargetItem();
}

uint64_t TTRRemindersListHighlightTarget.description.getter()
{
  return TTRRemindersListHighlightTarget.description.getter();
}

uint64_t TTRRemindersListHighlightTarget.targetItems.getter()
{
  return TTRRemindersListHighlightTarget.targetItems.getter();
}

uint64_t TTRRemindersListHighlightTarget.firstItem.getter()
{
  return TTRRemindersListHighlightTarget.firstItem.getter();
}

uint64_t type metadata accessor for TTRRemindersListHighlightTarget()
{
  return type metadata accessor for TTRRemindersListHighlightTarget();
}

uint64_t static TTRRemindersListImportedContent.undoActionNameForApplyToExistingReminder(_:)()
{
  return static TTRRemindersListImportedContent.undoActionNameForApplyToExistingReminder(_:)();
}

uint64_t TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)()
{
  return TTRRemindersListImportedContent.init(title:notes:url:userActivity:image:)();
}

uint64_t type metadata accessor for TTRRemindersListImportedContent()
{
  return type metadata accessor for TTRRemindersListImportedContent();
}

uint64_t static TTRRemindersListTargetContainer.TargetList.__derived_enum_equals(_:_:)()
{
  return static TTRRemindersListTargetContainer.TargetList.__derived_enum_equals(_:_:)();
}

uint64_t TTRTreeStorageNodeAuxiliaryData.treeAuxiliaryDataDescription.getter()
{
  return TTRTreeStorageNodeAuxiliaryData.treeAuxiliaryDataDescription.getter();
}

uint64_t TTRAutoCategorizationOverlayView.init(titleString:subtitleString:shouldShowArrow:tapHandler:)()
{
  return TTRAutoCategorizationOverlayView.init(titleString:subtitleString:shouldShowArrow:tapHandler:)();
}

uint64_t type metadata accessor for TTRAutoCategorizationOverlayView()
{
  return type metadata accessor for TTRAutoCategorizationOverlayView();
}

uint64_t type metadata accessor for TTRAutoCompleteReminderListScope()
{
  return type metadata accessor for TTRAutoCompleteReminderListScope();
}

uint64_t TTRBoardColumnDiffableDataSource.columnItem.getter()
{
  return TTRBoardColumnDiffableDataSource.columnItem.getter();
}

uint64_t TTRBoardColumnDiffableDataSource.itemLocation(forInsertingAt:localItemIDsToBeMoved:)()
{
  return TTRBoardColumnDiffableDataSource.itemLocation(forInsertingAt:localItemIDsToBeMoved:)();
}

uint64_t TTRBoardColumnDiffableDataSource.itemLocation(forItemAt:)()
{
  return TTRBoardColumnDiffableDataSource.itemLocation(forItemAt:)();
}

uint64_t TTRBoardColumnDiffableDataSource.init(collectionView:cellProvider:)()
{
  return TTRBoardColumnDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t TTRBoardColumnDiffableDataSource.indexPath(forInsertingAt:)()
{
  return TTRBoardColumnDiffableDataSource.indexPath(forInsertingAt:)();
}

uint64_t type metadata accessor for TTRBoardColumnDiffableDataSource()
{
  return type metadata accessor for TTRBoardColumnDiffableDataSource();
}

uint64_t TTRICurrentTextInputModeObserver.currentTextInputMode.getter()
{
  return TTRICurrentTextInputModeObserver.currentTextInputMode.getter();
}

Swift::Void __swiftcall TTRICurrentTextInputModeObserver.stopObserving()()
{
}

Swift::Void __swiftcall TTRICurrentTextInputModeObserver.startObserving()()
{
}

uint64_t TTRICurrentTextInputModeObserver.init()()
{
  return TTRICurrentTextInputModeObserver.init()();
}

uint64_t type metadata accessor for TTRICurrentTextInputModeObserver()
{
  return type metadata accessor for TTRICurrentTextInputModeObserver();
}

uint64_t TTRIHashtagCollectionCellContent.init(state:)()
{
  return TTRIHashtagCollectionCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRIHashtagCollectionCellContent()
{
  return type metadata accessor for TTRIHashtagCollectionCellContent();
}

uint64_t TTRIHashtagCollectionViewAdaptor.init(target:addTagButtonAction:hashtagButtonAction:buttonFocusDelegate:containerView:)()
{
  return TTRIHashtagCollectionViewAdaptor.init(target:addTagButtonAction:hashtagButtonAction:buttonFocusDelegate:containerView:)();
}

uint64_t type metadata accessor for TTRIHashtagCollectionViewAdaptor()
{
  return type metadata accessor for TTRIHashtagCollectionViewAdaptor();
}

uint64_t type metadata accessor for TTRIMenuButtonAttachmentProvider()
{
  return type metadata accessor for TTRIMenuButtonAttachmentProvider();
}

uint64_t type metadata accessor for TTRInteractorAsyncEditsCommitter()
{
  return type metadata accessor for TTRInteractorAsyncEditsCommitter();
}

uint64_t type metadata accessor for TTRNoAnimationContainerStackView()
{
  return type metadata accessor for TTRNoAnimationContainerStackView();
}

uint64_t TTRObservableViewModelCollection.observableViewModel(forItemID:)()
{
  return TTRObservableViewModelCollection.observableViewModel(forItemID:)();
}

uint64_t TTRObservableViewModelCollection.init(makeViewModel:)()
{
  return TTRObservableViewModelCollection.init(makeViewModel:)();
}

uint64_t TTRObservableViewModelCollection.updateAndPublishAll(using:)()
{
  return TTRObservableViewModelCollection.updateAndPublishAll(using:)();
}

uint64_t TTRObservableViewModelCollection.prune(keeping:)()
{
  return TTRObservableViewModelCollection.prune(keeping:)();
}

uint64_t TTRRemindersListAttributeEditing.setDueDate(_:)()
{
  return TTRRemindersListAttributeEditing.setDueDate(_:)();
}

uint64_t TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)()
{
  return TTRRemindersListItemStateTracker.makePromise(tracking:of:cancelsExistingPromise:)();
}

uint64_t TTRRemindersListItemStateTracker.fullfil(_:of:)()
{
  return TTRRemindersListItemStateTracker.fullfil(_:of:)();
}

uint64_t TTRRemindersListItemStateTracker.init()()
{
  return TTRRemindersListItemStateTracker.init()();
}

uint64_t type metadata accessor for TTRRemindersListItemStateTracker()
{
  return type metadata accessor for TTRRemindersListItemStateTracker();
}

uint64_t TTRUserActivityMetadataInterator.init()()
{
  return TTRUserActivityMetadataInterator.init()();
}

uint64_t type metadata accessor for TTRUserActivityMetadataInterator()
{
  return type metadata accessor for TTRUserActivityMetadataInterator();
}

uint64_t TTRBoardColumnItemClusterAdjuster.init(presentationToDataSource:)()
{
  return TTRBoardColumnItemClusterAdjuster.init(presentationToDataSource:)();
}

uint64_t TTRBoardColumnItemClusterAdjuster.adjust(_:)()
{
  return TTRBoardColumnItemClusterAdjuster.adjust(_:)();
}

uint64_t type metadata accessor for TTRBoardColumnItemClusterAdjuster()
{
  return type metadata accessor for TTRBoardColumnItemClusterAdjuster();
}

uint64_t TTRBoardReminderInCellModuleState.consume()()
{
  return TTRBoardReminderInCellModuleState.consume()();
}

uint64_t TTRBoardReminderInCellModuleState.receive(_:)()
{
  return TTRBoardReminderInCellModuleState.receive(_:)();
}

uint64_t type metadata accessor for TTRBoardReminderInCellModuleState()
{
  return type metadata accessor for TTRBoardReminderInCellModuleState();
}

uint64_t TTRCloudKitNetworkActivityMonitor.shared.unsafeMutableAddressor()
{
  return TTRCloudKitNetworkActivityMonitor.shared.unsafeMutableAddressor();
}

uint64_t TTRDataViewMonitorEnvironmentInfo.init()()
{
  return TTRDataViewMonitorEnvironmentInfo.init()();
}

uint64_t TTRHashtagCollectionViewPopulator.updateButtons(toShow:allTagsButtonState:addTagButtonState:reusing:)()
{
  return TTRHashtagCollectionViewPopulator.updateButtons(toShow:allTagsButtonState:addTagButtonState:reusing:)();
}

uint64_t TTRHashtagCollectionViewPopulator.modifySelection(_:forUserSelectedHashtagButton:hashtagLabels:allowsEmptySelection:allowsExcludedSelection:)()
{
  return TTRHashtagCollectionViewPopulator.modifySelection(_:forUserSelectedHashtagButton:hashtagLabels:allowsEmptySelection:allowsExcludedSelection:)();
}

uint64_t TTRHashtagCollectionViewPopulator.updateSelection(for:hashtagLabels:selection:dropState:animation:)()
{
  return TTRHashtagCollectionViewPopulator.updateSelection(for:hashtagLabels:selection:dropState:animation:)();
}

uint64_t TTRHashtagCollectionViewPopulator.init(adaptor:)()
{
  return TTRHashtagCollectionViewPopulator.init(adaptor:)();
}

uint64_t TTRIAttachmentImportingController.createPicker(of:)()
{
  return TTRIAttachmentImportingController.createPicker(of:)();
}

uint64_t static TTRIAttachmentImportingController.availableSources.getter()
{
  return static TTRIAttachmentImportingController.availableSources.getter();
}

uint64_t type metadata accessor for TTRIAttachmentImportingController()
{
  return type metadata accessor for TTRIAttachmentImportingController();
}

uint64_t type metadata accessor for TTRIReminderTitleAttributesStyler()
{
  return type metadata accessor for TTRIReminderTitleAttributesStyler();
}

uint64_t TTRIRemindersListCellAssigneeView.contact.setter()
{
  return TTRIRemindersListCellAssigneeView.contact.setter();
}

uint64_t type metadata accessor for TTRIRemindersListCellAssigneeView()
{
  return type metadata accessor for TTRIRemindersListCellAssigneeView();
}

uint64_t TTRListToCustomSmartListConverter.init(store:committer:)()
{
  return TTRListToCustomSmartListConverter.init(store:committer:)();
}

uint64_t type metadata accessor for TTRListToCustomSmartListConverter()
{
  return type metadata accessor for TTRListToCustomSmartListConverter();
}

uint64_t TTRShowTodayGroupsDataModelSource.init(store:smartList:grouped:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowTodayGroupsDataModelSource.init(store:smartList:grouped:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowTodayGroupsDataModelSource()
{
  return type metadata accessor for TTRShowTodayGroupsDataModelSource();
}

uint64_t TTRTreeStorageDerivedRerootedTree.init(upstreamTree:rootItem:)()
{
  return TTRTreeStorageDerivedRerootedTree.init(upstreamTree:rootItem:)();
}

uint64_t type metadata accessor for TTRAttachmentThumbnailSizeProvider()
{
  return type metadata accessor for TTRAttachmentThumbnailSizeProvider();
}

uint64_t type metadata accessor for TTRBoardColumnItemLayoutAttributes()
{
  return type metadata accessor for TTRBoardColumnItemLayoutAttributes();
}

uint64_t type metadata accessor for TTRBoardReminderCellOptionalUpdate()
{
  return type metadata accessor for TTRBoardReminderCellOptionalUpdate();
}

Swift::Int __swiftcall TTRCounterBasedIdentifierGenerator.allocID()()
{
  return TTRCounterBasedIdentifierGenerator.allocID()();
}

uint64_t TTRCounterBasedIdentifierGenerator.__allocating_init()()
{
  return TTRCounterBasedIdentifierGenerator.__allocating_init()();
}

uint64_t type metadata accessor for TTRCounterBasedIdentifierGenerator()
{
  return type metadata accessor for TTRCounterBasedIdentifierGenerator();
}

uint64_t TTRICalendarPickerCellContentState.init(date:)()
{
  return TTRICalendarPickerCellContentState.init(date:)();
}

uint64_t type metadata accessor for TTRICalendarPickerCellContentState()
{
  return type metadata accessor for TTRICalendarPickerCellContentState();
}

Swift::Void __swiftcall TTRIInlineButtonAttachmentTextView.applyAttributedText(_:forceUpdate:)(NSAttributedString _, Swift::Bool forceUpdate)
{
}

uint64_t TTRIInlineButtonAttachmentTextView.hasButtonAttachment.getter()
{
  return TTRIInlineButtonAttachmentTextView.hasButtonAttachment.getter();
}

Swift::Void __swiftcall TTRIInlineButtonAttachmentTextView.applyText(_:)(Swift::String a1)
{
}

uint64_t TTRIInlineButtonAttachmentTextView.menuOptions.setter()
{
  return TTRIInlineButtonAttachmentTextView.menuOptions.setter();
}

uint64_t TTRIInlineButtonAttachmentTextView.selectedItem.setter()
{
  return TTRIInlineButtonAttachmentTextView.selectedItem.setter();
}

uint64_t TTRIInlineButtonAttachmentTextView.font.setter()
{
  return TTRIInlineButtonAttachmentTextView.font.setter();
}

uint64_t type metadata accessor for TTRIInlineButtonAttachmentTextView.Option()
{
  return type metadata accessor for TTRIInlineButtonAttachmentTextView.Option();
}

uint64_t type metadata accessor for TTRIInlineButtonAttachmentTextView()
{
  return type metadata accessor for TTRIInlineButtonAttachmentTextView();
}

uint64_t TTRIInlinePermissionHeaderViewCell.configuration.setter()
{
  return TTRIInlinePermissionHeaderViewCell.configuration.setter();
}

uint64_t type metadata accessor for TTRIInlinePermissionHeaderViewCell()
{
  return type metadata accessor for TTRIInlinePermissionHeaderViewCell();
}

uint64_t static TTRIQuickBarInputAccessoryAssembly.createViewController(supportedIdioms:allowsClearingDueDate:store:locationOptionsProvider:contactsProvider:contactStoreCreator:)()
{
  return static TTRIQuickBarInputAccessoryAssembly.createViewController(supportedIdioms:allowsClearingDueDate:store:locationOptionsProvider:contactsProvider:contactStoreCreator:)();
}

uint64_t static TTRIReminderLocationPickerAssembly.createViewController(reminderChangeItem:showsDoneButton:savesOnCommit:delegate:undoManager:)()
{
  return static TTRIReminderLocationPickerAssembly.createViewController(reminderChangeItem:showsDoneButton:savesOnCommit:delegate:undoManager:)();
}

uint64_t static TTRIReminderLocationPickerAssembly.createViewController(filter:store:showsDoneButton:savesOnCommit:delegate:undoManager:save:)()
{
  return static TTRIReminderLocationPickerAssembly.createViewController(filter:store:showsDoneButton:savesOnCommit:delegate:undoManager:save:)();
}

uint64_t TTRListOrCustomSmartListChangeItem.parentListID.getter()
{
  return TTRListOrCustomSmartListChangeItem.parentListID.getter();
}

uint64_t TTRListOrCustomSmartListChangeItem.displayName.getter()
{
  return TTRListOrCustomSmartListChangeItem.displayName.getter();
}

uint64_t TTRListOrCustomSmartListChangeItem.canBeIncludedInGroup.getter()
{
  return TTRListOrCustomSmartListChangeItem.canBeIncludedInGroup.getter();
}

uint64_t static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)()
{
  return static TTRListOrCustomSmartListChangeItem.__derived_enum_equals(_:_:)();
}

uint64_t TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter()
{
  return TTRListOrCustomSmartListChangeItem.mergeableOrderingNode.getter();
}

uint64_t TTRListOrCustomSmartListChangeItem.hash(into:)()
{
  return TTRListOrCustomSmartListChangeItem.hash(into:)();
}

uint64_t TTRListOrCustomSmartListChangeItem.objectID.getter()
{
  return TTRListOrCustomSmartListChangeItem.objectID.getter();
}

uint64_t TTRReminderLocationOptionsProvider.init(store:meCardProvider:geoService:)()
{
  return TTRReminderLocationOptionsProvider.init(store:meCardProvider:geoService:)();
}

uint64_t type metadata accessor for TTRReminderLocationOptionsProvider()
{
  return type metadata accessor for TTRReminderLocationOptionsProvider();
}

uint64_t TTRReminderProtocolWithPendingMove.effectiveParentList.getter()
{
  return TTRReminderProtocolWithPendingMove.effectiveParentList.getter();
}

uint64_t TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)()
{
  return TTRReminderProtocolWithPendingMove.init(reminder:pendingMoveTargetList:)();
}

uint64_t TTRRemindersBoardPresentationTrees.isCollapsible(_:)()
{
  return TTRRemindersBoardPresentationTrees.isCollapsible(_:)();
}

uint64_t TTRRemindersBoardPresentationTrees.ancestorsToExpand(forRevealing:isCollapsed:)()
{
  return TTRRemindersBoardPresentationTrees.ancestorsToExpand(forRevealing:isCollapsed:)();
}

uint64_t TTRRemindersBoardPresentationTrees.init(baseTree:isCollapsed:shouldhideEmptySectionless:placeholderRemindersAreHidden:cellPresentationStates:)()
{
  return TTRRemindersBoardPresentationTrees.init(baseTree:isCollapsed:shouldhideEmptySectionless:placeholderRemindersAreHidden:cellPresentationStates:)();
}

uint64_t type metadata accessor for TTRRemindersBoardPresentationTrees()
{
  return type metadata accessor for TTRRemindersBoardPresentationTrees();
}

uint64_t type metadata accessor for TTRRemindersListCellViewModelState()
{
  return type metadata accessor for TTRRemindersListCellViewModelState();
}

uint64_t TTRShowSearchResultDataModelSource.init(store:searchTerm:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowSearchResultDataModelSource.init(store:searchTerm:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowSearchResultDataModelSource()
{
  return type metadata accessor for TTRShowSearchResultDataModelSource();
}

uint64_t TTRAccountsListsDeleteArgumentsType.allListsToDelete()()
{
  return TTRAccountsListsDeleteArgumentsType.allListsToDelete()();
}

uint64_t type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam()
{
  return type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.MovingParam();
}

uint64_t type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject()
{
  return type metadata accessor for TTRAccountsListsPresenterCapability.RemindersInsertionPlan.PinnableListMoveSubject();
}

Swift::OpaquePointer_optional __swiftcall TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateOptimisticMoves()()
{
  uint64_t v0 = (void *)TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateOptimisticMoves()();
  result.value._rawValue = v0;
  result.is_nil = v1;
  return result;
}

uint64_t TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateParamsForSaving()()
{
  return TTRAccountsListsPresenterCapability.RemindersInsertionPlan.generateParamsForSaving()();
}

uint64_t TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)()
{
  return TTRAccountsListsPresenterCapability.paramsForMoving(_:into:atUnadjustedIndex:containerIsInEditMode:)();
}

uint64_t TTRAccountsListsPresenterCapability.init(contactsProvider:)()
{
  return TTRAccountsListsPresenterCapability.init(contactsProvider:)();
}

uint64_t TTRAccountsListsPresenterCapability.groupCreationParams(for:)()
{
  return TTRAccountsListsPresenterCapability.groupCreationParams(for:)();
}

uint64_t TTRAccountsListsPresenterCapability.paramsForCreatingGroup(byDropping:into:)()
{
  return TTRAccountsListsPresenterCapability.paramsForCreatingGroup(byDropping:into:)();
}

uint64_t TTRAccountsListsPresenterCapability.customSmartListCreationParams(forHashtagLabels:)()
{
  return TTRAccountsListsPresenterCapability.customSmartListCreationParams(forHashtagLabels:)();
}

uint64_t TTRAccountsListsPresenterCapability.loadSharingContactsDataIfNeeded(for:contactsDidLoad:)()
{
  return TTRAccountsListsPresenterCapability.loadSharingContactsDataIfNeeded(for:contactsDidLoad:)();
}

uint64_t type metadata accessor for TTRAccountsListsPresenterCapability()
{
  return type metadata accessor for TTRAccountsListsPresenterCapability();
}

uint64_t static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter()
{
  return static TTRAttachmentThumbnailSizeProviding<>.remindersList.getter();
}

uint64_t TTRIHostingControllerWithCustomUndo.init(rootView:undoManager:)()
{
  return TTRIHostingControllerWithCustomUndo.init(rootView:undoManager:)();
}

uint64_t TTRILocationQuickPickersCellContent.init(state:)()
{
  return TTRILocationQuickPickersCellContent.init(state:)();
}

uint64_t type metadata accessor for TTRILocationQuickPickersCellContent()
{
  return type metadata accessor for TTRILocationQuickPickersCellContent();
}

uint64_t TTRITextCellContentStateChangeEvent.editingChanged.unsafeMutableAddressor()
{
  return TTRITextCellContentStateChangeEvent.editingChanged.unsafeMutableAddressor();
}

uint64_t TTRItemFetchingInteractorCapability.fetchAccount(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchAccount(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchSection(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchSection(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchReminder(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchReminder(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchCustomSmartList(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchCustomSmartList(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchSmartListSection(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchSmartListSection(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchListSynchronously(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchListSynchronously(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchCustomSmartListSynchronously(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchCustomSmartListSynchronously(for:)();
}

uint64_t TTRItemFetchingInteractorCapability.fetchList(for:)()
{
  return TTRItemFetchingInteractorCapability.fetchList(for:)();
}

uint64_t TTRPublicTemplateFallbackProperties.init(listName:listColor:)()
{
  return TTRPublicTemplateFallbackProperties.init(listName:listColor:)();
}

uint64_t TTRReminderTitleAttributesHarvester.init(queue:backgroundQueue:locationOptionsProvider:contactsProvider:store:excludedSuggestedAttributes:locale:timeZone:now:forTesting:)()
{
  return TTRReminderTitleAttributesHarvester.init(queue:backgroundQueue:locationOptionsProvider:contactsProvider:store:excludedSuggestedAttributes:locale:timeZone:now:forTesting:)();
}

uint64_t type metadata accessor for TTRReminderTitleAttributesHarvester()
{
  return type metadata accessor for TTRReminderTitleAttributesHarvester();
}

uint64_t TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor()
{
  return TTRRemindersListReminderSaveOptions.skipsUndoRegistration.unsafeMutableAddressor();
}

uint64_t TTRRemindersListSetCompletedOptions.init(afterDateProviderForAdvancingForwardRecurrence:editBeforeAdvancingForwardRecurrence:orderClonedInSmartList:updateClonedMemberships:concludeEditing:)()
{
  return TTRRemindersListSetCompletedOptions.init(afterDateProviderForAdvancingForwardRecurrence:editBeforeAdvancingForwardRecurrence:orderClonedInSmartList:updateClonedMemberships:concludeEditing:)();
}

uint64_t type metadata accessor for TTRTreeStorageTemporaryNodeLocation()
{
  return type metadata accessor for TTRTreeStorageTemporaryNodeLocation();
}

uint64_t TTRBoardReminderCellURLConfiguration.Attachment.init(url:attachmentID:metadata:)()
{
  return TTRBoardReminderCellURLConfiguration.Attachment.init(url:attachmentID:metadata:)();
}

uint64_t type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment()
{
  return type metadata accessor for TTRBoardReminderCellURLConfiguration.Attachment();
}

uint64_t type metadata accessor for TTRIConstraintBasedLayoutHostingView()
{
  return type metadata accessor for TTRIConstraintBasedLayoutHostingView();
}

uint64_t TTRIReminderCellNotesModuleInterface.editableReminderCell.getter()
{
  return TTRIReminderCellNotesModuleInterface.editableReminderCell.getter();
}

uint64_t TTRIReminderCellNotesModuleInterface.item.getter()
{
  return TTRIReminderCellNotesModuleInterface.item.getter();
}

uint64_t TTRIReminderCellTitleModuleInterface.editableReminderCell.getter()
{
  return TTRIReminderCellTitleModuleInterface.editableReminderCell.getter();
}

uint64_t TTRIReminderCellTitleModuleInterface.item.getter()
{
  return TTRIReminderCellTitleModuleInterface.item.getter();
}

uint64_t TTRITitledDatePickerCellContentState.init(icon:title:date:datePickerMode:)()
{
  return TTRITitledDatePickerCellContentState.init(icon:title:date:datePickerMode:)();
}

uint64_t type metadata accessor for TTRITitledDatePickerCellContentState()
{
  return type metadata accessor for TTRITitledDatePickerCellContentState();
}

uint64_t TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)()
{
  return TTRPotentiallyLongOperationPerformer.init(longOperationDurationThreshold:debugForceShowActivityUI:showActivityUI:hideActivityUI:)();
}

uint64_t type metadata accessor for TTRPotentiallyLongOperationPerformer()
{
  return type metadata accessor for TTRPotentiallyLongOperationPerformer();
}

uint64_t TTRReminderTitleAttributesInteractor.init(harvester:styler:contactsProvider:locationOptionsProvider:)()
{
  return TTRReminderTitleAttributesInteractor.init(harvester:styler:contactsProvider:locationOptionsProvider:)();
}

uint64_t type metadata accessor for TTRReminderTitleAttributesInteractor()
{
  return type metadata accessor for TTRReminderTitleAttributesInteractor();
}

uint64_t TTRRemindersBoardItemCollapsedStates.toggleCollapsed(for:)()
{
  return TTRRemindersBoardItemCollapsedStates.toggleCollapsed(for:)();
}

Swift::Void __swiftcall TTRRemindersListCurrentTipCapability.requestSetCurrentTipHidden(_:)(Swift::Bool a1)
{
}

uint64_t TTRRemindersListCurrentTipCapability.requestShowTip(_:)()
{
  return TTRRemindersListCurrentTipCapability.requestShowTip(_:)();
}

Swift::Void __swiftcall TTRRemindersListCurrentTipCapability.requestDismissTip()()
{
}

uint64_t TTRRemindersListCurrentTipCapability.visibleTip.getter()
{
  return TTRRemindersListCurrentTipCapability.visibleTip.getter();
}

uint64_t TTRRemindersListCurrentTipCapability.init()()
{
  return TTRRemindersListCurrentTipCapability.init()();
}

uint64_t type metadata accessor for TTRRemindersListCurrentTipCapability()
{
  return type metadata accessor for TTRRemindersListCurrentTipCapability();
}

uint64_t TTRRemoveTemplatePresenterCapability.init(interactor:)()
{
  return TTRRemoveTemplatePresenterCapability.init(interactor:)();
}

uint64_t type metadata accessor for TTRRemoveTemplatePresenterCapability()
{
  return type metadata accessor for TTRRemoveTemplatePresenterCapability();
}

uint64_t TTRShowPublicTemplateDataModelSource.init(store:publicTemplateObjectID:fallbackProperties:)()
{
  return TTRShowPublicTemplateDataModelSource.init(store:publicTemplateObjectID:fallbackProperties:)();
}

uint64_t type metadata accessor for TTRShowPublicTemplateDataModelSource()
{
  return type metadata accessor for TTRShowPublicTemplateDataModelSource();
}

uint64_t TTRUndoNavigationPresenterCapability.init(undoManager:)()
{
  return TTRUndoNavigationPresenterCapability.init(undoManager:)();
}

uint64_t type metadata accessor for TTRUndoNavigationPresenterCapability()
{
  return type metadata accessor for TTRUndoNavigationPresenterCapability();
}

uint64_t type metadata accessor for TTRBoardEditableColumnHeaderViewModel()
{
  return type metadata accessor for TTRBoardEditableColumnHeaderViewModel();
}

uint64_t TTRGridViewPredefinedContentPopulator.init(gridView:)()
{
  return TTRGridViewPredefinedContentPopulator.init(gridView:)();
}

uint64_t TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)()
{
  return TTRGridViewPredefinedContentPopulator.makeViewHiddenOnRemoval(for:createIfNeeded:)();
}

uint64_t TTRGridViewPredefinedContentPopulator.existingView(for:)()
{
  return TTRGridViewPredefinedContentPopulator.existingView(for:)();
}

uint64_t TTRGridViewPredefinedContentPopulator.performUpdates(newGridSpecification:subviewUpdateHandler:)()
{
  return TTRGridViewPredefinedContentPopulator.performUpdates(newGridSpecification:subviewUpdateHandler:)();
}

uint64_t TTRGridViewPredefinedContentPopulator.SubviewUpdateResult.init(view:userInfo:horizontalAlignment:verticalAlignment:)()
{
  return TTRGridViewPredefinedContentPopulator.SubviewUpdateResult.init(view:userInfo:horizontalAlignment:verticalAlignment:)();
}

uint64_t TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)()
{
  return TTRGridViewPredefinedContentPopulator.SubviewUpdateContext.cachedView<A>(ofType:for:)();
}

uint64_t TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)()
{
  return TTRGridViewPredefinedContentPopulator.GridRow.init(_:alignment:beforeSpacing:)();
}

uint64_t TTRIHashtagCollectionCellContentState.init(selection:hashtagLabels:allTagsButtonState:addTagButtonState:allowsExcludedSelection:maxRowCount:)()
{
  return TTRIHashtagCollectionCellContentState.init(selection:hashtagLabels:allTagsButtonState:addTagButtonState:allowsExcludedSelection:maxRowCount:)();
}

uint64_t type metadata accessor for TTRIHashtagCollectionCellContentState()
{
  return type metadata accessor for TTRIHashtagCollectionCellContentState();
}

uint64_t TTRIRemindersListReminderCellLinkView.init(url:attachmentID:)()
{
  return TTRIRemindersListReminderCellLinkView.init(url:attachmentID:)();
}

uint64_t type metadata accessor for TTRIRemindersListReminderCellLinkView()
{
  return type metadata accessor for TTRIRemindersListReminderCellLinkView();
}

uint64_t TTRShowRecentlyDeletedDataModelSource.init(store:account:sortingStyle:)()
{
  return TTRShowRecentlyDeletedDataModelSource.init(store:account:sortingStyle:)();
}

uint64_t type metadata accessor for TTRShowRecentlyDeletedDataModelSource()
{
  return type metadata accessor for TTRShowRecentlyDeletedDataModelSource();
}

uint64_t TTRShowSiriFoundInAppsDataModelSource.init(store:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowSiriFoundInAppsDataModelSource.init(store:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowSiriFoundInAppsDataModelSource()
{
  return type metadata accessor for TTRShowSiriFoundInAppsDataModelSource();
}

uint64_t TTRTemplateSharingPresenterCapability.init(interactor:)()
{
  return TTRTemplateSharingPresenterCapability.init(interactor:)();
}

uint64_t TTRTemplateSharingPresenterCapability.alertNeededForCommittingLink(viewModel:)()
{
  return TTRTemplateSharingPresenterCapability.alertNeededForCommittingLink(viewModel:)();
}

LPLinkMetadata __swiftcall TTRTemplateSharingPresenterCapability.templateLinkMetadataForShareSheet()()
{
  return (LPLinkMetadata)TTRTemplateSharingPresenterCapability.templateLinkMetadataForShareSheet()();
}

uint64_t type metadata accessor for TTRTemplateSharingPresenterCapability()
{
  return type metadata accessor for TTRTemplateSharingPresenterCapability();
}

uint64_t type metadata accessor for TTRBoardReminderCellNotesConfiguration()
{
  return type metadata accessor for TTRBoardReminderCellNotesConfiguration();
}

uint64_t TTRIReminderCellHashtagModuleInterface.tableCell.getter()
{
  return TTRIReminderCellHashtagModuleInterface.tableCell.getter();
}

uint64_t TTRReminderPrintingPresenterCapability.init(interactor:)()
{
  return TTRReminderPrintingPresenterCapability.init(interactor:)();
}

uint64_t TTRReminderPrintingPresenterCapability.fetchAndGenerateHTML(configuration:)()
{
  return TTRReminderPrintingPresenterCapability.fetchAndGenerateHTML(configuration:)();
}

uint64_t TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration.init(isRightToLeft:timestamp:)()
{
  return TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration.init(isRightToLeft:timestamp:)();
}

uint64_t type metadata accessor for TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration()
{
  return type metadata accessor for TTRReminderPrintingPresenterCapability.ViewModelGenerationConfiguration();
}

uint64_t type metadata accessor for TTRReminderPrintingPresenterCapability()
{
  return type metadata accessor for TTRReminderPrintingPresenterCapability();
}

uint64_t TTRRemindersBoardColumnWidthCalculator.columnWidth(for:)()
{
  return TTRRemindersBoardColumnWidthCalculator.columnWidth(for:)();
}

uint64_t TTRRemindersBoardColumnWidthCalculator.init(contentSize:edgeInsets:interColumnSpacing:displayScale:columnWidthRange:peekPercentage:)()
{
  return TTRRemindersBoardColumnWidthCalculator.init(contentSize:edgeInsets:interColumnSpacing:displayScale:columnWidthRange:peekPercentage:)();
}

uint64_t TTRRemindersBoardColumnWidthCalculator.description.getter()
{
  return TTRRemindersBoardColumnWidthCalculator.description.getter();
}

uint64_t TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)()
{
  return TTRAnyTreeViewCollapsedStatesPersisting.saveCollapsedTreeViewItemIDs(_:)();
}

uint64_t TTRAnyTreeViewCollapsedStatesPersisting.fetchCollapsedTreeViewItemIDs()()
{
  return TTRAnyTreeViewCollapsedStatesPersisting.fetchCollapsedTreeViewItemIDs()();
}

uint64_t TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter()
{
  return TTRAnyTreeViewCollapsedStatesPersisting.collapsedTreeViewItemIDsChangePublisher.getter();
}

uint64_t TTRAnyTreeViewCollapsedStatesPersisting.__allocating_init<A>(base:)()
{
  return TTRAnyTreeViewCollapsedStatesPersisting.__allocating_init<A>(base:)();
}

uint64_t TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)()
{
  return TTRAnyTreeViewCollapsedStatesPersisting.init<A>(base:)();
}

uint64_t type metadata accessor for TTRAnyTreeViewCollapsedStatesPersisting()
{
  return type metadata accessor for TTRAnyTreeViewCollapsedStatesPersisting();
}

uint64_t type metadata accessor for TTRBoardColumnItemIntermediateViewModel()
{
  return type metadata accessor for TTRBoardColumnItemIntermediateViewModel();
}

uint64_t TTRIQuickLookImageAttachmentPreviewItem.init(attachmentID:fileURL:)()
{
  return TTRIQuickLookImageAttachmentPreviewItem.init(attachmentID:fileURL:)();
}

uint64_t type metadata accessor for TTRIQuickLookImageAttachmentPreviewItem()
{
  return type metadata accessor for TTRIQuickLookImageAttachmentPreviewItem();
}

uint64_t type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView()
{
  return type metadata accessor for TTRIWhitespaceSelectionAvoidingTextView();
}

uint64_t TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterDidFinishEditing(_:)()
{
  return TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterDidFinishEditing(_:)();
}

uint64_t TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterWillBeginEditing(_:)()
{
  return TTRInCellEditingPresenterManagingHelper.nonReminderInCellEditingPresenterWillBeginEditing(_:)();
}

Swift::Void __swiftcall TTRInCellEditingPresenterManagingHelper.updateReminderEditingComponentsFor(_:)(Swift::OpaquePointer a1)
{
}

uint64_t TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterDidFinishEditing(_:editingSession:)()
{
  return TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterDidFinishEditing(_:editingSession:)();
}

uint64_t TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterWillBeginEditing(_:)()
{
  return TTRInCellEditingPresenterManagingHelper.inCellEditingPresenterWillBeginEditing(_:)();
}

uint64_t TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)()
{
  return TTRInCellEditingPresenterManagingHelper.activeInCellTitleEditingPresenter(editing:)();
}

uint64_t TTRInCellEditingPresenterManagingHelper.activeInCellEditingPresenter(editing:)()
{
  return TTRInCellEditingPresenterManagingHelper.activeInCellEditingPresenter(editing:)();
}

uint64_t TTRInCellEditingPresenterManagingHelper.init(reminderEditingComponents:)()
{
  return TTRInCellEditingPresenterManagingHelper.init(reminderEditingComponents:)();
}

uint64_t type metadata accessor for TTRInCellEditingPresenterManagingHelper()
{
  return type metadata accessor for TTRInCellEditingPresenterManagingHelper();
}

uint64_t TTRParticipantAvatarRenderConfiguration.init(width:height:scales:rightToLeft:)()
{
  return TTRParticipantAvatarRenderConfiguration.init(width:height:scales:rightToLeft:)();
}

uint64_t type metadata accessor for TTRRemindersBoardCellPresentationStates()
{
  return type metadata accessor for TTRRemindersBoardCellPresentationStates();
}

uint64_t TTRRemindersBoardMainDiffableDataSource.init(collectionView:cellProvider:)()
{
  return TTRRemindersBoardMainDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t TTRRemindersBoardMainDiffableDataSource.allColumnIDsPublisher.getter()
{
  return TTRRemindersBoardMainDiffableDataSource.allColumnIDsPublisher.getter();
}

uint64_t TTRRemindersBoardMainDiffableDataSource.sortByItemVisualLocation<A, B>(_:itemID:)()
{
  return TTRRemindersBoardMainDiffableDataSource.sortByItemVisualLocation<A, B>(_:itemID:)();
}

uint64_t TTRRemindersBoardMainDiffableDataSource.childrenExcludingCollapsed(of:)()
{
  return TTRRemindersBoardMainDiffableDataSource.childrenExcludingCollapsed(of:)();
}

uint64_t TTRRemindersBoardMainDiffableDataSource.items<A>(withIDs:)()
{
  return TTRRemindersBoardMainDiffableDataSource.items<A>(withIDs:)();
}

uint64_t TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)()
{
  return TTRRemindersBoardMainDiffableDataSource.columnID(containingItemID:)();
}

uint64_t type metadata accessor for TTRRemindersBoardMainDiffableDataSource()
{
  return type metadata accessor for TTRRemindersBoardMainDiffableDataSource();
}

uint64_t TTRRemindersListSectionMenuCapabilities.canSupportEditSections.getter()
{
  return TTRRemindersListSectionMenuCapabilities.canSupportEditSections.getter();
}

uint64_t TTRShowGroupWithSectionsDataModelSource.init(group:store:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowGroupWithSectionsDataModelSource.init(group:store:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowGroupWithSectionsDataModelSource()
{
  return type metadata accessor for TTRShowGroupWithSectionsDataModelSource();
}

uint64_t TTRBoardColumnCollectionViewLayoutHelper.collectionViewContentSize(baseSize:)()
{
  return TTRBoardColumnCollectionViewLayoutHelper.collectionViewContentSize(baseSize:)();
}

uint64_t TTRBoardColumnCollectionViewLayoutHelper.init(topLevelItemSpacing:subtaskSpacing:)()
{
  return TTRBoardColumnCollectionViewLayoutHelper.init(topLevelItemSpacing:subtaskSpacing:)();
}

uint64_t TTRBoardColumnCollectionViewLayoutHelper.layoutAttributesForItem(at:baseAttributes:)()
{
  return TTRBoardColumnCollectionViewLayoutHelper.layoutAttributesForItem(at:baseAttributes:)();
}

uint64_t TTRBoardColumnCollectionViewLayoutHelper.layoutAttributesForElements(in:baseLayoutAttributesForElementsInRect:)()
{
  return TTRBoardColumnCollectionViewLayoutHelper.layoutAttributesForElements(in:baseLayoutAttributesForElementsInRect:)();
}

uint64_t type metadata accessor for TTRBoardColumnCollectionViewLayoutHelper()
{
  return type metadata accessor for TTRBoardColumnCollectionViewLayoutHelper();
}

uint64_t TTRBoardReminderCellAppLinkConfiguration.init(icon:name:onAppLinkPress:)()
{
  return TTRBoardReminderCellAppLinkConfiguration.init(icon:name:onAppLinkPress:)();
}

uint64_t TTRHashtagAssociationPresenterCapability.init(interactor:)()
{
  return TTRHashtagAssociationPresenterCapability.init(interactor:)();
}

Swift::String_optional __swiftcall TTRHashtagAssociationPresenterCapability.validateNewHashtagName(_:hasMarkedText:)(Swift::String _, Swift::Bool hasMarkedText)
{
  uint64_t v2 = TTRHashtagAssociationPresenterCapability.validateNewHashtagName(_:hasMarkedText:)(_._countAndFlagsBits, _._object, hasMarkedText);
  result.value._object = v3;
  result.value._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t type metadata accessor for TTRHashtagAssociationPresenterCapability()
{
  return type metadata accessor for TTRHashtagAssociationPresenterCapability();
}

uint64_t TTRILocationQuickPickersCellContentState.init(items:selected:ttriAccessiblityProximity:ttriAccessibilityCurrentLocation:)()
{
  return TTRILocationQuickPickersCellContentState.init(items:selected:ttriAccessiblityProximity:ttriAccessibilityCurrentLocation:)();
}

uint64_t TTRIMarginTransferringContainerStackView.marginTransferActionForArrangedSubview.setter()
{
  return TTRIMarginTransferringContainerStackView.marginTransferActionForArrangedSubview.setter();
}

uint64_t type metadata accessor for TTRIMarginTransferringContainerStackView()
{
  return type metadata accessor for TTRIMarginTransferringContainerStackView();
}

uint64_t type metadata accessor for TTRRemindersBoardPresentationTreeUpdates()
{
  return type metadata accessor for TTRRemindersBoardPresentationTreeUpdates();
}

uint64_t TTRRemindersListEditingSessionProperties.init()()
{
  return TTRRemindersListEditingSessionProperties.init()();
}

uint64_t TTRAccountsListsInteractorDeleteArguments.description.getter()
{
  return TTRAccountsListsInteractorDeleteArguments.description.getter();
}

uint64_t TTRAccountsListsInteractorDeleteArguments.init(items:viewModel:currentList:)()
{
  return TTRAccountsListsInteractorDeleteArguments.init(items:viewModel:currentList:)();
}

uint64_t TTRBoardReminderCellAssigneeConfiguration.init(contact:name:onAssigneePress:)()
{
  return TTRBoardReminderCellAssigneeConfiguration.init(contact:name:onAssigneePress:)();
}

uint64_t TTRBoardReminderCellLocationConfiguration.init(icon:attributedDescription:)()
{
  return TTRBoardReminderCellLocationConfiguration.init(icon:attributedDescription:)();
}

uint64_t TTRGeoLocationAuthorizationStatusObserver.init(authorizationStatusPublisher:initialValue:)()
{
  return TTRGeoLocationAuthorizationStatusObserver.init(authorizationStatusPublisher:initialValue:)();
}

uint64_t TTRGeoLocationAuthorizationStatusObserver.setUp(transform:valueDidChange:)()
{
  return TTRGeoLocationAuthorizationStatusObserver.setUp(transform:valueDidChange:)();
}

uint64_t TTRHashtagAssociationDeleteTagPreferences.init(intentBySmartListID:)()
{
  return TTRHashtagAssociationDeleteTagPreferences.init(intentBySmartListID:)();
}

uint64_t TTRIInlinePermissionPrimaryButtonViewCell.configuration.setter()
{
  return TTRIInlinePermissionPrimaryButtonViewCell.configuration.setter();
}

uint64_t type metadata accessor for TTRIInlinePermissionPrimaryButtonViewCell()
{
  return type metadata accessor for TTRIInlinePermissionPrimaryButtonViewCell();
}

uint64_t TTRIQuickBarInputAccessorySupportedIdioms.default.unsafeMutableAddressor()
{
  return TTRIQuickBarInputAccessorySupportedIdioms.default.unsafeMutableAddressor();
}

NSAttributedString __swiftcall TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)(NSAttributedString _, Swift::String replacementStringForButton)
{
  return (NSAttributedString)TTRInlineButtonAttachmentTextViewDelegate.ttrAccessibilityAttributedLabelWith(_:replacementStringForButton:)(_.super.isa, replacementStringForButton._countAndFlagsBits, replacementStringForButton._object);
}

uint64_t TTRRemindersListReminderInsertionPosition.init(relativePosition:)()
{
  return TTRRemindersListReminderInsertionPosition.init(relativePosition:)();
}

uint64_t TTRIRemindersListLargeImageAttachmentsView.ViewModel.init(image:attachmentID:)()
{
  return TTRIRemindersListLargeImageAttachmentsView.ViewModel.init(image:attachmentID:)();
}

uint64_t TTRIRemindersListLargeImageAttachmentsView.viewModels.setter()
{
  return TTRIRemindersListLargeImageAttachmentsView.viewModels.setter();
}

uint64_t TTRIRemindersListLargeImageAttachmentsView.cornerRadius.setter()
{
  return TTRIRemindersListLargeImageAttachmentsView.cornerRadius.setter();
}

uint64_t type metadata accessor for TTRIRemindersListLargeImageAttachmentsView()
{
  return type metadata accessor for TTRIRemindersListLargeImageAttachmentsView();
}

uint64_t TTRRemindersPrintingPageRenderingUtilities.drawFooter(pageNumber:pageCount:in:)()
{
  return TTRRemindersPrintingPageRenderingUtilities.drawFooter(pageNumber:pageCount:in:)();
}

uint64_t TTRRemindersPrintingPageRenderingUtilities.init(footerText:footerFont:footerTextColor:isFlipped:isRightToLeft:)()
{
  return TTRRemindersPrintingPageRenderingUtilities.init(footerText:footerFont:footerTextColor:isFlipped:isRightToLeft:)();
}

uint64_t static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)()
{
  return static TTRRemindersPrintingPageRenderingUtilities.extraMargin(neededFor:toReach:)();
}

uint64_t TTRRemindersPrintingPageRenderingUtilities.footerHeight.getter()
{
  return TTRRemindersPrintingPageRenderingUtilities.footerHeight.getter();
}

uint64_t TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor()
{
  return TTRRemindersPrintingPageRenderingUtilities.preferredMinMargin.unsafeMutableAddressor();
}

uint64_t type metadata accessor for TTRRemindersPrintingPageRenderingUtilities()
{
  return type metadata accessor for TTRRemindersPrintingPageRenderingUtilities();
}

uint64_t TTRSetReminderCompletedPresenterCapability.init(interactor:)()
{
  return TTRSetReminderCompletedPresenterCapability.init(interactor:)();
}

uint64_t type metadata accessor for TTRSetReminderCompletedPresenterCapability()
{
  return type metadata accessor for TTRSetReminderCompletedPresenterCapability();
}

uint64_t TTRShowTemplateWithSectionsDataModelSource.init(store:template:listRepresentation:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowTemplateWithSectionsDataModelSource.init(store:template:listRepresentation:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowTemplateWithSectionsDataModelSource()
{
  return type metadata accessor for TTRShowTemplateWithSectionsDataModelSource();
}

uint64_t TTRBoardReminderCellInfoButtonConfiguration.init(infoButtonState:tintColor:onInfoPressed:)()
{
  return TTRBoardReminderCellInfoButtonConfiguration.init(infoButtonState:tintColor:onInfoPressed:)();
}

uint64_t TTRListToCustomSmartListConverterValidation.alertTitleString.getter()
{
  return TTRListToCustomSmartListConverterValidation.alertTitleString.getter();
}

uint64_t TTRListToCustomSmartListConverterValidation.alertDetailString.getter()
{
  return TTRListToCustomSmartListConverterValidation.alertDetailString.getter();
}

uint64_t TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)()
{
  return TTRShowCompletedSectionHeaderTitleFormatter.title(for:isFirst:)();
}

uint64_t TTRShowCompletedSectionHeaderTitleFormatter.title(for:)()
{
  return TTRShowCompletedSectionHeaderTitleFormatter.title(for:)();
}

uint64_t TTRShowCompletedSectionHeaderTitleFormatter.init(locale:calendar:allowsRelativeDates:referenceDateForYearAndEra:)()
{
  return TTRShowCompletedSectionHeaderTitleFormatter.init(locale:calendar:allowsRelativeDates:referenceDateForYearAndEra:)();
}

uint64_t type metadata accessor for TTRShowCompletedSectionHeaderTitleFormatter()
{
  return type metadata accessor for TTRShowCompletedSectionHeaderTitleFormatter();
}

uint64_t TTRShowScheduledSectionHeaderTitleFormatter.title(for:hasVisibleReminders:)()
{
  return TTRShowScheduledSectionHeaderTitleFormatter.title(for:hasVisibleReminders:)();
}

uint64_t TTRShowScheduledSectionHeaderTitleFormatter.title(for:isFirst:hasVisibleReminders:)()
{
  return TTRShowScheduledSectionHeaderTitleFormatter.title(for:isFirst:hasVisibleReminders:)();
}

uint64_t TTRShowScheduledSectionHeaderTitleFormatter.init(locale:calendar:allowsRelativeDates:referenceDateForYearAndEra:)()
{
  return TTRShowScheduledSectionHeaderTitleFormatter.init(locale:calendar:allowsRelativeDates:referenceDateForYearAndEra:)();
}

uint64_t type metadata accessor for TTRShowScheduledSectionHeaderTitleFormatter()
{
  return type metadata accessor for TTRShowScheduledSectionHeaderTitleFormatter();
}

uint64_t TTRTemplateSharingTemplateContentAttributes.dateAndTime.unsafeMutableAddressor()
{
  return TTRTemplateSharingTemplateContentAttributes.dateAndTime.unsafeMutableAddressor();
}

uint64_t TTRTemplateSharingTemplateContentAttributes.tags.unsafeMutableAddressor()
{
  return TTRTemplateSharingTemplateContentAttributes.tags.unsafeMutableAddressor();
}

uint64_t TTRTemplateSharingTemplateContentAttributes.images.unsafeMutableAddressor()
{
  return TTRTemplateSharingTemplateContentAttributes.images.unsafeMutableAddressor();
}

uint64_t TTRTemplateSharingTemplateContentAttributes.locations.unsafeMutableAddressor()
{
  return TTRTemplateSharingTemplateContentAttributes.locations.unsafeMutableAddressor();
}

uint64_t TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.urlIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.appLinkIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.assigneeIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.listNameIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.listNameIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.infoButtonVisibility.getter()
{
  return TTRBoardReminderCellContentConfigurationType.infoButtonVisibility.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.subtaskCountIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.hashtagsLabelIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.hashtagsLabelIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.locationLabelIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.locationLabelIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.descriptionLabelIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.descriptionLabelIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.priorityIndicatorIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.priorityIndicatorIsHidden.getter();
}

uint64_t TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter()
{
  return TTRBoardReminderCellContentConfigurationType.showSubtasksButtonIsHidden.getter();
}

uint64_t TTRIHelpLinkHeaderFooterContentConfiguration.init(listContentConfiguration:help:learnMore:)()
{
  return TTRIHelpLinkHeaderFooterContentConfiguration.init(listContentConfiguration:help:learnMore:)();
}

uint64_t type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration()
{
  return type metadata accessor for TTRIHelpLinkHeaderFooterContentConfiguration();
}

uint64_t TTRRemindersListDataModelSourceLayoutContext.__allocating_init(listOrSmartListChangeItem:userDefaults:)()
{
  return TTRRemindersListDataModelSourceLayoutContext.__allocating_init(listOrSmartListChangeItem:userDefaults:)();
}

uint64_t TTRRemindersListDataModelSourceLayoutContext.init(supportedLayouts:userDefaults:userDefaultsKey:)()
{
  return TTRRemindersListDataModelSourceLayoutContext.init(supportedLayouts:userDefaults:userDefaultsKey:)();
}

uint64_t type metadata accessor for TTRRemindersListDataModelSourceLayoutContext()
{
  return type metadata accessor for TTRRemindersListDataModelSourceLayoutContext();
}

uint64_t TTRRemindersListEditableSectionNameViewModel.placeholderTitle(listLayout:)()
{
  return TTRRemindersListEditableSectionNameViewModel.placeholderTitle(listLayout:)();
}

uint64_t type metadata accessor for TTRRemindersListEditableSectionNameViewModel()
{
  return type metadata accessor for TTRRemindersListEditableSectionNameViewModel();
}

uint64_t TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor()
{
  return TTRRemindersListEditingSessionDisplayTargets.reminderEditingComponents.unsafeMutableAddressor();
}

uint64_t TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor()
{
  return TTRRemindersListEditingSessionDisplayTargets.cell.unsafeMutableAddressor();
}

uint64_t TTRShowCompletedByDateBucketsDataModelSource.init(store:countCompleted:)()
{
  return TTRShowCompletedByDateBucketsDataModelSource.init(store:countCompleted:)();
}

uint64_t type metadata accessor for TTRShowCompletedByDateBucketsDataModelSource()
{
  return type metadata accessor for TTRShowCompletedByDateBucketsDataModelSource();
}

uint64_t TTRShowScheduledByDateBucketsDataModelSource.init(store:style:countCompleted:sortingStyle:canChangeSortingStyle:)()
{
  return TTRShowScheduledByDateBucketsDataModelSource.init(store:style:countCompleted:sortingStyle:canChangeSortingStyle:)();
}

uint64_t type metadata accessor for TTRShowScheduledByDateBucketsDataModelSource()
{
  return type metadata accessor for TTRShowScheduledByDateBucketsDataModelSource();
}

uint64_t TTRUserActivityWindowSceneRestorationPayload.navigationSpecifier.getter()
{
  return TTRUserActivityWindowSceneRestorationPayload.navigationSpecifier.getter();
}

uint64_t type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State()
{
  return type metadata accessor for TTRUserActivityWindowSceneRestorationPayload.State();
}

uint64_t type metadata accessor for TTRUserActivityWindowSceneRestorationPayload()
{
  return type metadata accessor for TTRUserActivityWindowSceneRestorationPayload();
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.showSubtasksButtonTitle.getter()
{
  return TTRBoardReminderCellShowSubtasksConfiguration.showSubtasksButtonTitle.getter();
}

uint64_t TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)()
{
  return TTRBoardReminderCellShowSubtasksConfiguration.init(isShowingSubtasks:subtaskCount:tintColor:onShowSubtasksButtonPress:)();
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCount:displayStyle:tintColor:onSubtaskCountPressed:)()
{
  return TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCount:displayStyle:tintColor:onSubtaskCountPressed:)();
}

uint64_t TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCountString:tintColor:onSubtaskCountPressed:)()
{
  return TTRBoardReminderCellSubtaskCountConfiguration.init(subtaskCountString:tintColor:onSubtaskCountPressed:)();
}

uint64_t TTRIHashtagAssociationBackgroundTaskPerformer.init(app:)()
{
  return TTRIHashtagAssociationBackgroundTaskPerformer.init(app:)();
}

uint64_t type metadata accessor for TTRIHashtagAssociationBackgroundTaskPerformer()
{
  return type metadata accessor for TTRIHashtagAssociationBackgroundTaskPerformer();
}

uint64_t TTRRemindersListEditableSectionNameInteractor.init(store:undoManager:committer:)()
{
  return TTRRemindersListEditableSectionNameInteractor.init(store:undoManager:committer:)();
}

uint64_t type metadata accessor for TTRRemindersListEditableSectionNameInteractor()
{
  return type metadata accessor for TTRRemindersListEditableSectionNameInteractor();
}

uint64_t TTRRemindersListEditingSessionFinishingOption.markedForDeletion.unsafeMutableAddressor()
{
  return TTRRemindersListEditingSessionFinishingOption.markedForDeletion.unsafeMutableAddressor();
}

uint64_t TTRRemindersListEditingSessionFinishingOption.deletesIfTitleIsInvalid.unsafeMutableAddressor()
{
  return TTRRemindersListEditingSessionFinishingOption.deletesIfTitleIsInvalid.unsafeMutableAddressor();
}

uint64_t TTRRemindersListEditingSessionFinishingOption.doNotSave.unsafeMutableAddressor()
{
  return TTRRemindersListEditingSessionFinishingOption.doNotSave.unsafeMutableAddressor();
}

uint64_t TTRTreeViewCollapsedStatesInMemoryPersistence.__allocating_init()()
{
  return TTRTreeViewCollapsedStatesInMemoryPersistence.__allocating_init()();
}

uint64_t TTRTreeViewCollapsedStatesInMemoryPersistence.init()()
{
  return TTRTreeViewCollapsedStatesInMemoryPersistence.init()();
}

uint64_t type metadata accessor for TTRTreeViewCollapsedStatesInMemoryPersistence()
{
  return type metadata accessor for TTRTreeViewCollapsedStatesInMemoryPersistence();
}

Swift::Void __swiftcall TTRAccessibilityReminderAutoCompleteAnnouncing.ttrAccessibilitySetUpAccessibilityStatusChangeObservationForAutoCompleteAnnouncements()()
{
}

Swift::Void __swiftcall TTRAccessibilityReminderAutoCompleteAnnouncing.ttrAccessibilityAnnounceAutocompletionSuggestionChanges(_:)(Swift::OpaquePointer a1)
{
}

uint64_t TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)()
{
  return TTRBoardReminderCellCompletedButtonConfiguration.init(isCompleted:tintColor:style:preferredSymbolConfiguration:onCompletedPressed:)();
}

uint64_t TTRReminderDetailPendingMoveInteractorCapability.PendingMoveContext.init(persistLastSelectedListID:customSmartListToMatch:)()
{
  return TTRReminderDetailPendingMoveInteractorCapability.PendingMoveContext.init(persistLastSelectedListID:customSmartListToMatch:)();
}

uint64_t TTRRemindersListDataModelSourceLayoutContextType.nextSelectableLayout.getter()
{
  return TTRRemindersListDataModelSourceLayoutContextType.nextSelectableLayout.getter();
}

uint64_t TTRRemindersListDataModelSourceLayoutContextType.forceListLayoutIfNeeded(forNavigatingTo:persistingPreferencesIfPossible:)()
{
  return TTRRemindersListDataModelSourceLayoutContextType.forceListLayoutIfNeeded(forNavigatingTo:persistingPreferencesIfPossible:)();
}

uint64_t TTRIRemindersListReminderCellAccessibilityElement.cell.getter()
{
  return TTRIRemindersListReminderCellAccessibilityElement.cell.getter();
}

uint64_t type metadata accessor for TTRIRemindersListReminderCellAccessibilityElement()
{
  return type metadata accessor for TTRIRemindersListReminderCellAccessibilityElement();
}

uint64_t static TTRQuickEntryReminderCreationInteractorCapability.createReminder(objectID:initialList:)()
{
  return static TTRQuickEntryReminderCreationInteractorCapability.createReminder(objectID:initialList:)();
}

uint64_t type metadata accessor for TTRQuickEntryReminderCreationInteractorCapability()
{
  return type metadata accessor for TTRQuickEntryReminderCreationInteractorCapability();
}

uint64_t TTRRemindersListChangeItemAttributeEditorProvider.init(reminderChangeItems:undoContext:)()
{
  return TTRRemindersListChangeItemAttributeEditorProvider.init(reminderChangeItems:undoContext:)();
}

uint64_t type metadata accessor for TTRRemindersListChangeItemAttributeEditorProvider()
{
  return type metadata accessor for TTRRemindersListChangeItemAttributeEditorProvider();
}

uint64_t TTRShowCustomSmartListWithSectionsDataModelSource.init(store:smartList:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)()
{
  return TTRShowCustomSmartListWithSectionsDataModelSource.init(store:smartList:countCompleted:sortingStyle:canChangeSortingStyle:userDefaults:)();
}

uint64_t type metadata accessor for TTRShowCustomSmartListWithSectionsDataModelSource()
{
  return type metadata accessor for TTRShowCustomSmartListWithSectionsDataModelSource();
}

uint64_t TTRTreeViewCollapsedStatesUserDefaultsPersistence.__allocating_init(autosaveName:userDefaults:)()
{
  return TTRTreeViewCollapsedStatesUserDefaultsPersistence.__allocating_init(autosaveName:userDefaults:)();
}

uint64_t ceil(_:toScale:)()
{
  return ceil(_:toScale:)();
}

uint64_t TTRRemindersListInteractorSectionsCapabilityTarget.objectID.getter()
{
  return TTRRemindersListInteractorSectionsCapabilityTarget.objectID.getter();
}

uint64_t TTRRemindersBoardCollapsedStatesPresenterCapability.isCollapsed(_:)()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.isCollapsed(_:)();
}

uint64_t TTRRemindersBoardCollapsedStatesPresenterCapability.collapsedStatesPersistence.setter()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.collapsedStatesPersistence.setter();
}

uint64_t TTRRemindersBoardCollapsedStatesPresenterCapability.pruneNonExistentItemIDs(with:)()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.pruneNonExistentItemIDs(with:)();
}

uint64_t TTRRemindersBoardCollapsedStatesPresenterCapability.expand<A>(_:)()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.expand<A>(_:)();
}

uint64_t TTRRemindersBoardCollapsedStatesPresenterCapability.collapse<A>(_:)()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.collapse<A>(_:)();
}

uint64_t TTRRemindersBoardCollapsedStatesPresenterCapability.init()()
{
  return TTRRemindersBoardCollapsedStatesPresenterCapability.init()();
}

uint64_t type metadata accessor for TTRRemindersBoardCollapsedStatesPresenterCapability()
{
  return type metadata accessor for TTRRemindersBoardCollapsedStatesPresenterCapability();
}

uint64_t TTRRemindersListEditableSectionNameEditingPresenter.init(item:interactor:presenterManager:)()
{
  return TTRRemindersListEditableSectionNameEditingPresenter.init(item:interactor:presenterManager:)();
}

uint64_t type metadata accessor for TTRRemindersListEditableSectionNameEditingPresenter()
{
  return type metadata accessor for TTRRemindersListEditableSectionNameEditingPresenter();
}

uint64_t TTRTreeStorageDerivedTreeWithDesignatedInitialItems.init(upstreamTree:designatedItemTree:)()
{
  return TTRTreeStorageDerivedTreeWithDesignatedInitialItems.init(upstreamTree:designatedItemTree:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.cachedView<A>(ofType:at:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.cachedView<A>(ofType:at:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.init(listLayout:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.init(listLayout:)();
}

Swift::Void __swiftcall TTRIRemindersListCellAutoCompleteSuggestionsStackView.makeHidden(at:)(Swift::Int at)
{
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.makeVisible(_:at:alignment:beforeSpacing:bottomMarginIfLast:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.makeVisible(_:at:alignment:beforeSpacing:bottomMarginIfLast:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.RowConfiguration.init(suggestion:query:isLast:leftInset:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.RowConfiguration.init(suggestion:query:isLast:leftInset:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.handleIfNecessary(_:for:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.handleIfNecessary(_:for:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.performSubviewUpdates(block:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.performSubviewUpdates(block:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.setExclusiveHighlighted(on:)()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.setExclusiveHighlighted(on:)();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row.configuration.setter()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row.configuration.setter();
}

uint64_t type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row()
{
  return type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView.Row();
}

uint64_t TTRIRemindersListCellAutoCompleteSuggestionsStackView.createRow()()
{
  return TTRIRemindersListCellAutoCompleteSuggestionsStackView.createRow()();
}

uint64_t type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView()
{
  return type metadata accessor for TTRIRemindersListCellAutoCompleteSuggestionsStackView();
}

uint64_t TTRBoardColumnPresentationTreesManagementViewCapability.init(dataSource:)()
{
  return TTRBoardColumnPresentationTreesManagementViewCapability.init(dataSource:)();
}

uint64_t type metadata accessor for TTRBoardColumnPresentationTreesManagementViewCapability()
{
  return type metadata accessor for TTRBoardColumnPresentationTreesManagementViewCapability();
}

uint64_t TTRRemindersListDataModelSourceShowCompletedContextType.setShowCompletedIfNeeded(forRevealing:pathSpecifier:subtaskDisplayStyle:persistingPreferencesIfPossible:)()
{
  return TTRRemindersListDataModelSourceShowCompletedContextType.setShowCompletedIfNeeded(forRevealing:pathSpecifier:subtaskDisplayStyle:persistingPreferencesIfPossible:)();
}

uint64_t TTRRemindersBoardCellPresentationStatesPresenterCapability.editingItemID.setter()
{
  return TTRRemindersBoardCellPresentationStatesPresenterCapability.editingItemID.setter();
}

uint64_t TTRRemindersBoardCellPresentationStatesPresenterCapability.isMultiSelectMode.setter()
{
  return TTRRemindersBoardCellPresentationStatesPresenterCapability.isMultiSelectMode.setter();
}

uint64_t TTRRemindersBoardCellPresentationStatesPresenterCapability.prepareToInsertAndEdit(_:)()
{
  return TTRRemindersBoardCellPresentationStatesPresenterCapability.prepareToInsertAndEdit(_:)();
}

uint64_t TTRRemindersBoardCellPresentationStatesPresenterCapability.itemIDWithAnchoredPopover.setter()
{
  return TTRRemindersBoardCellPresentationStatesPresenterCapability.itemIDWithAnchoredPopover.setter();
}

uint64_t TTRRemindersBoardCellPresentationStatesPresenterCapability.init(showsInfoButtonWhenSelected:)()
{
  return TTRRemindersBoardCellPresentationStatesPresenterCapability.init(showsInfoButtonWhenSelected:)();
}

Swift::Void __swiftcall TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleContextMenuStateChange(_:)(Swift::OpaquePointer_optional a1)
{
}

Swift::Void __swiftcall TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleDragAndDropActiveStateChange(_:)(Swift::Bool a1)
{
}

Swift::Void __swiftcall TTRRemindersBoardCellPresentationStatesPresenterCapability.requestHandleColumnReorderingActiveStateChange(_:)(Swift::Bool a1)
{
}

uint64_t type metadata accessor for TTRRemindersBoardCellPresentationStatesPresenterCapability()
{
  return type metadata accessor for TTRRemindersBoardCellPresentationStatesPresenterCapability();
}

uint64_t TTRRemindersBoardPresentationTreesManagementViewCapability.applyPresentationTrees(with:)()
{
  return TTRRemindersBoardPresentationTreesManagementViewCapability.applyPresentationTrees(with:)();
}

uint64_t TTRRemindersBoardPresentationTreesManagementViewCapability.init(mainDataSource:makeUpdatesForReloadingView:)()
{
  return TTRRemindersBoardPresentationTreesManagementViewCapability.init(mainDataSource:makeUpdatesForReloadingView:)();
}

Swift::Void __swiftcall TTRRemindersBoardPresentationTreesManagementViewCapability.reload()()
{
}

uint64_t type metadata accessor for TTRRemindersBoardPresentationTreesManagementViewCapability()
{
  return type metadata accessor for TTRRemindersBoardPresentationTreesManagementViewCapability();
}

Swift::Void __swiftcall TTRIRemindersListReminderCellAccessibilityElementContaining.ttriCreateReminderAccessibilityElement()()
{
}

uint64_t TTRIRemindersListReminderCellAccessibilityElementContaining.moveToSuggestedSectionAccessibilityAction(viewModel:image:mainHandler:)()
{
  return TTRIRemindersListReminderCellAccessibilityElementContaining.moveToSuggestedSectionAccessibilityAction(viewModel:image:mainHandler:)();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.scheduleUpdate(for:)()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.scheduleUpdate(for:)();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.presentationTree.getter();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.DeferredUpdateFlags.placeholderReminderVisibilityChange.unsafeMutableAddressor()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.DeferredUpdateFlags.placeholderReminderVisibilityChange.unsafeMutableAddressor();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForMoves()()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForMoves()();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForUpdatedItems(_:)()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForUpdatedItems(_:)();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForReloadingView()()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForReloadingView()();
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForDataModelUpdate(shouldReload:itemIDsToForceUpdate:animated:)()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.makeUpdatesForDataModelUpdate(shouldReload:itemIDsToForceUpdate:animated:)();
}

Swift::Void __swiftcall TTRRemindersBoardPresentationTreesManagementPresenterCapability.performPendingUpdatesImmediately()()
{
}

uint64_t TTRRemindersBoardPresentationTreesManagementPresenterCapability.init()()
{
  return TTRRemindersBoardPresentationTreesManagementPresenterCapability.init()();
}

uint64_t type metadata accessor for TTRRemindersBoardPresentationTreesManagementPresenterCapability()
{
  return type metadata accessor for TTRRemindersBoardPresentationTreesManagementPresenterCapability();
}

uint64_t static TTRIAsset.Image.MoveToList.moveToListIcon.getter()
{
  return static TTRIAsset.Image.MoveToList.moveToListIcon.getter();
}

uint64_t static TTRIAsset.Image.WelcomeBullet.collaboration.getter()
{
  return static TTRIAsset.Image.WelcomeBullet.collaboration.getter();
}

uint64_t static TTRIAsset.Image.WelcomeBullet.one.getter()
{
  return static TTRIAsset.Image.WelcomeBullet.one.getter();
}

uint64_t static TTRIAsset.Image.WelcomeBullet.two.getter()
{
  return static TTRIAsset.Image.WelcomeBullet.two.getter();
}

uint64_t static TTRIAsset.Image.WelcomeBullet.four.getter()
{
  return static TTRIAsset.Image.WelcomeBullet.four.getter();
}

uint64_t static TTRIAsset.Image.WelcomeBullet.three.getter()
{
  return static TTRIAsset.Image.WelcomeBullet.three.getter();
}

uint64_t static TTRIAsset.Image.WelcomeBullet.smiling.getter()
{
  return static TTRIAsset.Image.WelcomeBullet.smiling.getter();
}

uint64_t static TTRIAsset.Image.WhatsNewBullet.one.getter()
{
  return static TTRIAsset.Image.WhatsNewBullet.one.getter();
}

uint64_t static TTRIAsset.Image.WhatsNewBullet.two.getter()
{
  return static TTRIAsset.Image.WhatsNewBullet.two.getter();
}

uint64_t static TTRIAsset.Image.WhatsNewBullet.four.getter()
{
  return static TTRIAsset.Image.WhatsNewBullet.four.getter();
}

uint64_t static TTRIAsset.Image.WhatsNewBullet.three.getter()
{
  return static TTRIAsset.Image.WhatsNewBullet.three.getter();
}

uint64_t static TTRIAsset.Image.UpgradeWarmingSheet.upgradeHeader.getter()
{
  return static TTRIAsset.Image.UpgradeWarmingSheet.upgradeHeader.getter();
}

uint64_t OrderedSet.init(_:)()
{
  return OrderedSet.init(_:)();
}

uint64_t zalgoIfMain.getter()
{
  return zalgoIfMain.getter();
}

uint64_t type metadata accessor for PromiseError()
{
  return type metadata accessor for PromiseError();
}

uint64_t throwingCast<A>(_:as:failureMessage:)()
{
  return throwingCast<A>(_:as:failureMessage:)();
}

uint64_t DeferredPromise.reject(_:)()
{
  return DeferredPromise.reject(_:)();
}

uint64_t DeferredPromise.promise.getter()
{
  return DeferredPromise.promise.getter();
}

uint64_t DeferredPromise.resolve(_:)()
{
  return DeferredPromise.resolve(_:)();
}

uint64_t DeferredPromise.init()()
{
  return DeferredPromise.init()();
}

uint64_t REMFeatureFlags.isEnabled.getter()
{
  return REMFeatureFlags.isEnabled.getter();
}

uint64_t type metadata accessor for REMFeatureFlags()
{
  return type metadata accessor for REMFeatureFlags();
}

uint64_t type metadata accessor for REMList_Codable()
{
  return type metadata accessor for REMList_Codable();
}

uint64_t static REM_os_activity.labelUserAction(_:dso:)()
{
  return static REM_os_activity.labelUserAction(_:dso:)();
}

uint64_t static RDIDispatchQueue.backgroundQueue.getter()
{
  return static RDIDispatchQueue.backgroundQueue.getter();
}

uint64_t static RDIDispatchQueue.storeUserInteractiveQueue.getter()
{
  return static RDIDispatchQueue.storeUserInteractiveQueue.getter();
}

uint64_t static RDIDispatchQueue.storeQueue.getter()
{
  return static RDIDispatchQueue.storeQueue.getter();
}

uint64_t static RDIDispatchQueue.utilityQueue.getter()
{
  return static RDIDispatchQueue.utilityQueue.getter();
}

uint64_t type metadata accessor for RDIDispatchQueue()
{
  return type metadata accessor for RDIDispatchQueue();
}

uint64_t type metadata accessor for REMUserOperation()
{
  return type metadata accessor for REMUserOperation();
}

uint64_t type metadata accessor for REMAnalyticsEvent()
{
  return type metadata accessor for REMAnalyticsEvent();
}

uint64_t REMContactAndName.name.getter()
{
  return REMContactAndName.name.getter();
}

uint64_t REMContactAndName.contact.getter()
{
  return REMContactAndName.contact.getter();
}

uint64_t type metadata accessor for REMContactAndName()
{
  return type metadata accessor for REMContactAndName();
}

uint64_t REMAnalyticsManager.post(event:)()
{
  return REMAnalyticsManager.post(event:)();
}

uint64_t static REMAnalyticsManager.shared.getter()
{
  return static REMAnalyticsManager.shared.getter();
}

uint64_t type metadata accessor for REMAnalyticsManager()
{
  return type metadata accessor for REMAnalyticsManager();
}

uint64_t REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)()
{
  return REMContactsProvider.init(contactStoreCreator:queue:backgroundQueue:)();
}

uint64_t type metadata accessor for REMContactsProvider()
{
  return type metadata accessor for REMContactsProvider();
}

uint64_t type metadata accessor for REMObjectID_Codable()
{
  return type metadata accessor for REMObjectID_Codable();
}

uint64_t static REMGroceryDummyModel.isSupported(localeIdentifier:)()
{
  return static REMGroceryDummyModel.isSupported(localeIdentifier:)();
}

uint64_t type metadata accessor for REMGroceryDummyModel()
{
  return type metadata accessor for REMGroceryDummyModel();
}

uint64_t type metadata accessor for REMSmartList_Codable()
{
  return type metadata accessor for REMSmartList_Codable();
}

uint64_t type metadata accessor for REMListPickerDataView.PickerMode()
{
  return type metadata accessor for REMListPickerDataView.PickerMode();
}

uint64_t RDUserNotificationType.init(notificationContent:)()
{
  return RDUserNotificationType.init(notificationContent:)();
}

uint64_t type metadata accessor for RDUserNotificationType()
{
  return type metadata accessor for RDUserNotificationType();
}

uint64_t type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.SearchPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.TaggedPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.AccountPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.NewListPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.SectionPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.SmartListPathSpecifier();
}

uint64_t REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)()
{
  return REMNavigationSpecifier.CommonListPathSpecifier.init(listPathSpecifier:)();
}

uint64_t REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)()
{
  return REMNavigationSpecifier.CommonListPathSpecifier.init(smartListPathSpecifier:)();
}

uint64_t type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.CommonListPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection()
{
  return type metadata accessor for REMNavigationSpecifier.ListPathSpecifier.DetailSection();
}

uint64_t type metadata accessor for REMNavigationSpecifier.ListPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.ListPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.RootPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.RootPathSpecifier();
}

uint64_t type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.ShowInListPathSpecifier();
}

uint64_t static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter()
{
  return static REMNavigationSpecifier.ReminderPathSpecifier.showInList.getter();
}

uint64_t type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection()
{
  return type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier.DetailSection();
}

uint64_t type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier.ReminderPathSpecifier();
}

uint64_t static REMNavigationSpecifier.from(cloudKitRecordName:)()
{
  return static REMNavigationSpecifier.from(cloudKitRecordName:)();
}

uint64_t static REMNavigationSpecifier.from(spotlightItemIdentifier:)()
{
  return static REMNavigationSpecifier.from(spotlightItemIdentifier:)();
}

uint64_t REMNavigationSpecifier.url.getter()
{
  return REMNavigationSpecifier.url.getter();
}

uint64_t type metadata accessor for REMNavigationSpecifier()
{
  return type metadata accessor for REMNavigationSpecifier();
}

uint64_t REMNavigationSpecifier.init(_:)()
{
  return REMNavigationSpecifier.init(_:)();
}

uint64_t static REMAccountsListDataView.fetchModel(store:diffingAgainst:options:)()
{
  return static REMAccountsListDataView.fetchModel(store:diffingAgainst:options:)();
}

uint64_t REMAccountsListDataView.FetchOptions.init(fetchAccounts:fetchReminderCounts:fetchHashtagLabels:fetchSmartListHashtagLabels:fetchUserDefinedVisibilityOfPredefinedSmartLists:fetchOrderedPinnedLists:)()
{
  return REMAccountsListDataView.FetchOptions.init(fetchAccounts:fetchReminderCounts:fetchHashtagLabels:fetchSmartListHashtagLabels:fetchUserDefinedVisibilityOfPredefinedSmartLists:fetchOrderedPinnedLists:)();
}

uint64_t type metadata accessor for REMAccountsListDataView.FetchOptions()
{
  return type metadata accessor for REMAccountsListDataView.FetchOptions();
}

uint64_t static REMAccountsListDataView.fetchAccounts(store:diffingAgainst:)()
{
  return static REMAccountsListDataView.fetchAccounts(store:diffingAgainst:)();
}

uint64_t type metadata accessor for REMAccountsListDataView.CachablePropertyFetchStyle()
{
  return type metadata accessor for REMAccountsListDataView.CachablePropertyFetchStyle();
}

uint64_t type metadata accessor for REMAccountsListDataView.Model.PinnedList()
{
  return type metadata accessor for REMAccountsListDataView.Model.PinnedList();
}

uint64_t type metadata accessor for REMAccountsListDataView.Model.GroupChild()
{
  return type metadata accessor for REMAccountsListDataView.Model.GroupChild();
}

uint64_t type metadata accessor for REMAccountsListDataView.Model.AccountChild()
{
  return type metadata accessor for REMAccountsListDataView.Model.AccountChild();
}

uint64_t REMAccountsListDataView.Model.orderedPinnedLists.getter()
{
  return REMAccountsListDataView.Model.orderedPinnedLists.getter();
}

uint64_t REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter()
{
  return REMAccountsListDataView.Model.userDefinedVisibilityOfPredefinedSmartLists.getter();
}

uint64_t REMAccountsListDataView.Model.Group.list.getter()
{
  return REMAccountsListDataView.Model.Group.list.getter();
}

uint64_t REMAccountsListDataView.Model.Group.lists.getter()
{
  return REMAccountsListDataView.Model.Group.lists.getter();
}

uint64_t type metadata accessor for REMAccountsListDataView.Model.Group()
{
  return type metadata accessor for REMAccountsListDataView.Model.Group();
}

uint64_t REMAccountsListDataView.Model.Account.account.getter()
{
  return REMAccountsListDataView.Model.Account.account.getter();
}

uint64_t REMAccountsListDataView.Model.Account.children.getter()
{
  return REMAccountsListDataView.Model.Account.children.getter();
}

uint64_t type metadata accessor for REMAccountsListDataView.Model.Account()
{
  return type metadata accessor for REMAccountsListDataView.Model.Account();
}

uint64_t REMAccountsListDataView.Model.accounts.getter()
{
  return REMAccountsListDataView.Model.accounts.getter();
}

uint64_t type metadata accessor for REMAccountsListDataView.Model()
{
  return type metadata accessor for REMAccountsListDataView.Model();
}

uint64_t REMAccountsListDataView.Result.model.getter()
{
  return REMAccountsListDataView.Result.model.getter();
}

uint64_t type metadata accessor for REMAccountsListDataView.Result()
{
  return type metadata accessor for REMAccountsListDataView.Result();
}

uint64_t type metadata accessor for REMAccountsListDataView()
{
  return type metadata accessor for REMAccountsListDataView();
}

uint64_t dispatch thunk of REMContactsProviderType.contactAndName(matching:keys:)()
{
  return dispatch thunk of REMContactsProviderType.contactAndName(matching:keys:)();
}

uint64_t REMContactsProviderType.loadContact(for:keys:updateHandler:)()
{
  return REMContactsProviderType.loadContact(for:keys:updateHandler:)();
}

uint64_t dispatch thunk of REMContactsProviderType.contact(matching:keys:)()
{
  return dispatch thunk of REMContactsProviderType.contact(matching:keys:)();
}

uint64_t type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle()
{
  return type metadata accessor for REMHashtagLabelDataView.HashtagLabelInFilterFetchStyle();
}

uint64_t static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)()
{
  return static REMHashtagLabelDataView.fetchAllHashtagLabels(store:sortingStyle:includeDetails:)();
}

uint64_t type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle()
{
  return type metadata accessor for REMHashtagLabelDataView.AllHashtagLabelsInvocation.SortingStyle();
}

uint64_t static REMHashtagLabelDataView.fetchSmartListHashtagLabels(store:fetchStyle:)()
{
  return static REMHashtagLabelDataView.fetchSmartListHashtagLabels(store:fetchStyle:)();
}

uint64_t type metadata accessor for REMHashtagLabelDataView()
{
  return type metadata accessor for REMHashtagLabelDataView();
}

uint64_t RDUserNotificationAction.rawValue.getter()
{
  return RDUserNotificationAction.rawValue.getter();
}

uint64_t type metadata accessor for RDUserNotificationAction()
{
  return type metadata accessor for RDUserNotificationAction();
}

uint64_t REMAsyncOperationManager.operationStateStartingIfNeeded(for:)()
{
  return REMAsyncOperationManager.operationStateStartingIfNeeded(for:)();
}

uint64_t REMAsyncOperationManager.__allocating_init(queue:backgroundQueue:syncPerformOperationFunc:operationDidFinish:)()
{
  return REMAsyncOperationManager.__allocating_init(queue:backgroundQueue:syncPerformOperationFunc:operationDidFinish:)();
}

uint64_t REMHashtagLabelSpecifier.description.getter()
{
  return REMHashtagLabelSpecifier.description.getter();
}

uint64_t static REMHashtagLabelSpecifier.empty.getter()
{
  return static REMHashtagLabelSpecifier.empty.getter();
}

uint64_t static REMHashtagLabelSpecifier.labels(_:)()
{
  return static REMHashtagLabelSpecifier.labels(_:)();
}

uint64_t REMHashtagLabelSpecifier.isEmpty.getter()
{
  return REMHashtagLabelSpecifier.isEmpty.getter();
}

uint64_t REMHashtagLabelSpecifier.adjusted(toBeCompatibleWith:allowsLenientFallback:)()
{
  return REMHashtagLabelSpecifier.adjusted(toBeCompatibleWith:allowsLenientFallback:)();
}

uint64_t type metadata accessor for REMHashtagLabelSpecifier.Operation()
{
  return type metadata accessor for REMHashtagLabelSpecifier.Operation();
}

uint64_t type metadata accessor for REMHashtagLabelSpecifier()
{
  return type metadata accessor for REMHashtagLabelSpecifier();
}

uint64_t REMRemindersListDataView.ReminderLite.isCompleted.getter()
{
  return REMRemindersListDataView.ReminderLite.isCompleted.getter();
}

uint64_t REMRemindersListDataView.ReminderLite.subtaskCount.getter()
{
  return REMRemindersListDataView.ReminderLite.subtaskCount.getter();
}

uint64_t REMRemindersListDataView.ReminderLite.objectID.getter()
{
  return REMRemindersListDataView.ReminderLite.objectID.getter();
}

uint64_t REMRemindersListDataView.ReminderLite.subtasks.getter()
{
  return REMRemindersListDataView.ReminderLite.subtasks.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.ReminderLite()
{
  return type metadata accessor for REMRemindersListDataView.ReminderLite();
}

uint64_t REMRemindersListDataView.GroupModel.listsModel.getter()
{
  return REMRemindersListDataView.GroupModel.listsModel.getter();
}

uint64_t REMRemindersListDataView.ListsModel.hasCompletedReminders.getter()
{
  return REMRemindersListDataView.ListsModel.hasCompletedReminders.getter();
}

uint64_t REMRemindersListDataView.ListsModel.completedRemindersCount.getter()
{
  return REMRemindersListDataView.ListsModel.completedRemindersCount.getter();
}

uint64_t REMRemindersListDataView.ListsModel.groups.getter()
{
  return REMRemindersListDataView.ListsModel.groups.getter();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.isCustomSmartList.getter()
{
  return REMRemindersListDataView.ListsModel.Sublist.isCustomSmartList.getter();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.listID.getter()
{
  return REMRemindersListDataView.ListsModel.Sublist.listID.getter();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.listName.getter()
{
  return REMRemindersListDataView.ListsModel.Sublist.listName.getter();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.listColor.getter()
{
  return REMRemindersListDataView.ListsModel.Sublist.listColor.getter();
}

uint64_t REMRemindersListDataView.ListsModel.Sublist.reminders.getter()
{
  return REMRemindersListDataView.ListsModel.Sublist.reminders.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.ListsModel.Sublist()
{
  return type metadata accessor for REMRemindersListDataView.ListsModel.Sublist();
}

uint64_t type metadata accessor for REMRemindersListDataView.ListsModel()
{
  return type metadata accessor for REMRemindersListDataView.ListsModel();
}

uint64_t type metadata accessor for REMRemindersListDataView.SectionLite.SectionType()
{
  return type metadata accessor for REMRemindersListDataView.SectionLite.SectionType();
}

uint64_t REMRemindersListDataView.SectionLite.type.getter()
{
  return REMRemindersListDataView.SectionLite.type.getter();
}

uint64_t REMRemindersListDataView.SectionLite.isEmpty.getter()
{
  return REMRemindersListDataView.SectionLite.isEmpty.getter();
}

uint64_t REMRemindersListDataView.SectionLite.reminders.getter()
{
  return REMRemindersListDataView.SectionLite.reminders.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.SectionLite()
{
  return type metadata accessor for REMRemindersListDataView.SectionLite();
}

uint64_t REMRemindersListDataView.TaggedModel.taggedSmartList.getter()
{
  return REMRemindersListDataView.TaggedModel.taggedSmartList.getter();
}

uint64_t REMRemindersListDataView.TaggedModel.flatModel.getter()
{
  return REMRemindersListDataView.TaggedModel.flatModel.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.TaggedModel()
{
  return type metadata accessor for REMRemindersListDataView.TaggedModel();
}

uint64_t REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter()
{
  return REMRemindersListDataView.FlaggedModel.flaggedSmartList.getter();
}

uint64_t REMRemindersListDataView.FlaggedModel.flatModel.getter()
{
  return REMRemindersListDataView.FlaggedModel.flatModel.getter();
}

uint64_t static REMRemindersListDataView.SortingStyle.fallbackForCustomSmartList.getter()
{
  return static REMRemindersListDataView.SortingStyle.fallbackForCustomSmartList.getter();
}

uint64_t static REMRemindersListDataView.SortingStyle.fallbackForTaggedSmartList.getter()
{
  return static REMRemindersListDataView.SortingStyle.fallbackForTaggedSmartList.getter();
}

Swift::String __swiftcall REMRemindersListDataView.SortingStyle.labelTextForSortingDirection()()
{
  uint64_t v0 = REMRemindersListDataView.SortingStyle.labelTextForSortingDirection()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::String __swiftcall REMRemindersListDataView.SortingStyle.labelTextForSortingStyle()()
{
  uint64_t v0 = REMRemindersListDataView.SortingStyle.labelTextForSortingStyle()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)()
{
  return static REMRemindersListDataView.SortingStyle.sortingStyle(for:fallback:)();
}

uint64_t static REMRemindersListDataView.SortingStyle.fallbackForREMList.getter()
{
  return static REMRemindersListDataView.SortingStyle.fallbackForREMList.getter();
}

uint64_t static REMRemindersListDataView.SortingStyle.fallbackForTemplate.getter()
{
  return static REMRemindersListDataView.SortingStyle.fallbackForTemplate.getter();
}

uint64_t static REMRemindersListDataView.SortingStyle.defaultForSearchResult.getter()
{
  return static REMRemindersListDataView.SortingStyle.defaultForSearchResult.getter();
}

uint64_t REMRemindersListDataView.SortingStyle.isEqualIgnoringDirection(_:)()
{
  return REMRemindersListDataView.SortingStyle.isEqualIgnoringDirection(_:)();
}

uint64_t static REMRemindersListDataView.SortingStyle.== infix(_:_:)()
{
  return static REMRemindersListDataView.SortingStyle.== infix(_:_:)();
}

uint64_t REMRemindersListDataView.SortingStyle.cloned(withSortingDirection:)()
{
  return REMRemindersListDataView.SortingStyle.cloned(withSortingDirection:)();
}

uint64_t REMRemindersListDataView.SortingStyle.flipped()()
{
  return REMRemindersListDataView.SortingStyle.flipped()();
}

uint64_t type metadata accessor for REMRemindersListDataView.SortingStyle()
{
  return type metadata accessor for REMRemindersListDataView.SortingStyle();
}

uint64_t REMRemindersListDataView.AssignedModel.assignedSmartList.getter()
{
  return REMRemindersListDataView.AssignedModel.assignedSmartList.getter();
}

uint64_t REMRemindersListDataView.AssignedModel.listsModel.getter()
{
  return REMRemindersListDataView.AssignedModel.listsModel.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.FetchSubtasks()
{
  return type metadata accessor for REMRemindersListDataView.FetchSubtasks();
}

uint64_t REMRemindersListDataView.SectionsModel.remindersCount.getter()
{
  return REMRemindersListDataView.SectionsModel.remindersCount.getter();
}

uint64_t REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter()
{
  return REMRemindersListDataView.SectionsModel.hasIncompleteOrCompletedReminders.getter();
}

uint64_t REMRemindersListDataView.SectionsModel.sections.getter()
{
  return REMRemindersListDataView.SectionsModel.sections.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.SectionsModel()
{
  return type metadata accessor for REMRemindersListDataView.SectionsModel();
}

uint64_t REMRemindersListDataView.TodayGroupModel.todaySmartList.getter()
{
  return REMRemindersListDataView.TodayGroupModel.todaySmartList.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType()
{
  return type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group.GroupType();
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.groupType.getter()
{
  return REMRemindersListDataView.TodayGroupModel.Group.groupType.getter();
}

uint64_t REMRemindersListDataView.TodayGroupModel.Group.reminders.getter()
{
  return REMRemindersListDataView.TodayGroupModel.Group.reminders.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group()
{
  return type metadata accessor for REMRemindersListDataView.TodayGroupModel.Group();
}

uint64_t REMRemindersListDataView.TodayGroupModel.remindersCount.getter()
{
  return REMRemindersListDataView.TodayGroupModel.remindersCount.getter();
}

uint64_t REMRemindersListDataView.TodayGroupModel.currentLocation.getter()
{
  return REMRemindersListDataView.TodayGroupModel.currentLocation.getter();
}

uint64_t REMRemindersListDataView.TodayGroupModel.groups.getter()
{
  return REMRemindersListDataView.TodayGroupModel.groups.getter();
}

uint64_t REMRemindersListDataView.CountByCompleted.incomplete.getter()
{
  return REMRemindersListDataView.CountByCompleted.incomplete.getter();
}

uint64_t REMRemindersListDataView.CountByCompleted.completed.getter()
{
  return REMRemindersListDataView.CountByCompleted.completed.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.CountByCompleted()
{
  return type metadata accessor for REMRemindersListDataView.CountByCompleted();
}

uint64_t REMRemindersListDataView.DateBucketsModel.RepresentativeDate.date.getter()
{
  return REMRemindersListDataView.DateBucketsModel.RepresentativeDate.date.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate()
{
  return type metadata accessor for REMRemindersListDataView.DateBucketsModel.RepresentativeDate();
}

uint64_t type metadata accessor for REMRemindersListDataView.SortingDirection()
{
  return type metadata accessor for REMRemindersListDataView.SortingDirection();
}

uint64_t type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType()
{
  return type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List.ListType();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.listID.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.List.listID.getter();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.listName.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.List.listName.getter();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.listType.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.List.listType.getter();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.sections.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.List.sections.getter();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.List.listColor.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.List.listColor.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List()
{
  return type metadata accessor for REMRemindersListDataView.ListsSectionsModel.List();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.completedRemindersCount.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.completedRemindersCount.getter();
}

uint64_t REMRemindersListDataView.ListsSectionsModel.lists.getter()
{
  return REMRemindersListDataView.ListsSectionsModel.lists.getter();
}

uint64_t REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter()
{
  return REMRemindersListDataView.TemplateSectionsModel.sectionsModel.getter();
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.remindersCount.getter()
{
  return REMRemindersListDataView.CompletedDateBucketsModel.remindersCount.getter();
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter()
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Day.date.getter();
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter()
{
  return REMRemindersListDataView.CompletedDateBucketsModel.Day.reminders.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day()
{
  return type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Day();
}

uint64_t type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket()
{
  return type metadata accessor for REMRemindersListDataView.CompletedDateBucketsModel.Bucket();
}

uint64_t REMRemindersListDataView.CompletedDateBucketsModel.buckets.getter()
{
  return REMRemindersListDataView.CompletedDateBucketsModel.buckets.getter();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.remindersCount.getter()
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.remindersCount.getter();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.date.getter()
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Day.date.getter();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter()
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.Day.reminders.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day()
{
  return type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Day();
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket()
{
  return type metadata accessor for REMRemindersListDataView.ScheduledDateBucketsModel.Bucket();
}

uint64_t REMRemindersListDataView.ScheduledDateBucketsModel.buckets.getter()
{
  return REMRemindersListDataView.ScheduledDateBucketsModel.buckets.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle()
{
  return type metadata accessor for REMRemindersListDataView.ScheduledByDateBucketsStyle();
}

uint64_t static REMRemindersListDataView.GroceryAutoCategorizationMessage.coalesceRecent(encodedMessageStrings:)()
{
  return static REMRemindersListDataView.GroceryAutoCategorizationMessage.coalesceRecent(encodedMessageStrings:)();
}

uint64_t type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage()
{
  return type metadata accessor for REMRemindersListDataView.GroceryAutoCategorizationMessage();
}

uint64_t REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter()
{
  return REMRemindersListDataView.Diff.newReminderMembershipsViaAutomation.getter();
}

uint64_t REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)()
{
  return REMRemindersListDataView.Diff.init(updatedReminderObjectIDs:insertedReminderObjectIDs:updatedListObjectIDs:updatedSectionObjectIDs:newReminderMembershipsViaAutomation:)();
}

uint64_t REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter()
{
  return REMRemindersListDataView.Diff.updatedReminderObjectIDs.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.Diff()
{
  return type metadata accessor for REMRemindersListDataView.Diff();
}

uint64_t REMRemindersListDataView.FlatModel.remindersCount.getter()
{
  return REMRemindersListDataView.FlatModel.remindersCount.getter();
}

uint64_t REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter()
{
  return REMRemindersListDataView.FlatModel.hasIncompleteOrCompletedReminders.getter();
}

uint64_t REMRemindersListDataView.FlatModel.reminders.getter()
{
  return REMRemindersListDataView.FlatModel.reminders.getter();
}

uint64_t type metadata accessor for REMRemindersListDataView.FlatModel()
{
  return type metadata accessor for REMRemindersListDataView.FlatModel();
}

uint64_t REMHashtagLabelCollection.isDisjoint(with:)()
{
  return REMHashtagLabelCollection.isDisjoint(with:)();
}

uint64_t REMHashtagLabelCollection.isSuperset(of:)()
{
  return REMHashtagLabelCollection.isSuperset(of:)();
}

uint64_t REMHashtagLabelCollection.subtracting(_:)()
{
  return REMHashtagLabelCollection.subtracting(_:)();
}

uint64_t static REMHashtagLabelCollection.sortedLabels<A>(from:)()
{
  return static REMHashtagLabelCollection.sortedLabels<A>(from:)();
}

Swift::String_optional __swiftcall REMHashtagLabelCollection.label(matchingHashtagName:)(Swift::String matchingHashtagName)
{
  uint64_t v1 = REMHashtagLabelCollection.label(matchingHashtagName:)(matchingHashtagName._countAndFlagsBits, matchingHashtagName._object);
  result.value._object = v2;
  result.value._uint64_t countAndFlagsBits = v1;
  return result;
}

uint64_t REMHashtagLabelCollection.union(_:)()
{
  return REMHashtagLabelCollection.union(_:)();
}

uint64_t REMHashtagLabelCollection.init(labels:)()
{
  return REMHashtagLabelCollection.init(labels:)();
}

uint64_t REMHashtagLabelCollection.labels.getter()
{
  return REMHashtagLabelCollection.labels.getter();
}

uint64_t REMHashtagLabelCollection.isEmpty.getter()
{
  return REMHashtagLabelCollection.isEmpty.getter();
}

uint64_t REMHashtagLabelCollection.matches(_:)()
{
  return REMHashtagLabelCollection.matches(_:)();
}

Swift::Bool __swiftcall REMHashtagLabelCollection.contains(matchOfHashtagName:)(Swift::String matchOfHashtagName)
{
  return REMHashtagLabelCollection.contains(matchOfHashtagName:)(matchOfHashtagName._countAndFlagsBits, matchOfHashtagName._object);
}

uint64_t REMHashtagLabelCollection.init<A>(hashtags:)()
{
  return REMHashtagLabelCollection.init<A>(hashtags:)();
}

uint64_t type metadata accessor for REMHashtagLabelCollection()
{
  return type metadata accessor for REMHashtagLabelCollection();
}

uint64_t type metadata accessor for REMNotificationIdentifier()
{
  return type metadata accessor for REMNotificationIdentifier();
}

uint64_t type metadata accessor for REMRDLUserOperationDetail()
{
  return type metadata accessor for REMRDLUserOperationDetail();
}

uint64_t static REMSuggestedAttributeOutput.Pipeline.allCases.getter()
{
  return static REMSuggestedAttributeOutput.Pipeline.allCases.getter();
}

uint64_t REMSuggestedAttributeOutput.Pipeline.rawValue.getter()
{
  return REMSuggestedAttributeOutput.Pipeline.rawValue.getter();
}

uint64_t type metadata accessor for REMSuggestedAttributeOutput.Pipeline()
{
  return type metadata accessor for REMSuggestedAttributeOutput.Pipeline();
}

uint64_t type metadata accessor for REMContactAndNameFetchResult()
{
  return type metadata accessor for REMContactAndNameFetchResult();
}

uint64_t REMiCloudSharedItemSpecifier.navigationSpecifier.getter()
{
  return REMiCloudSharedItemSpecifier.navigationSpecifier.getter();
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.name.getter()
{
  return REMiCloudSharedItemSpecifier.PublicTemplate.name.getter();
}

uint64_t REMiCloudSharedItemSpecifier.PublicTemplate.uuid.getter()
{
  return REMiCloudSharedItemSpecifier.PublicTemplate.uuid.getter();
}

uint64_t type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate()
{
  return type metadata accessor for REMiCloudSharedItemSpecifier.PublicTemplate();
}

uint64_t REMiCloudSharedItemSpecifier.init(url:)()
{
  return REMiCloudSharedItemSpecifier.init(url:)();
}

uint64_t type metadata accessor for REMiCloudSharedItemSpecifier()
{
  return type metadata accessor for REMiCloudSharedItemSpecifier();
}

uint64_t type metadata accessor for REMRemindersOpenUserOperation.SmartListType()
{
  return type metadata accessor for REMRemindersOpenUserOperation.SmartListType();
}

uint64_t type metadata accessor for REMRemindersOpenUserOperation()
{
  return type metadata accessor for REMRemindersOpenUserOperation();
}

uint64_t static REMSuggestedAttributesElector.ExcludedAttributes.nonAssignableLists.getter()
{
  return static REMSuggestedAttributesElector.ExcludedAttributes.nonAssignableLists.getter();
}

uint64_t static REMSuggestedAttributesElector.ExcludedAttributes.listsFromOtherAccounts.getter()
{
  return static REMSuggestedAttributesElector.ExcludedAttributes.listsFromOtherAccounts.getter();
}

uint64_t static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter()
{
  return static REMSuggestedAttributesElector.ExcludedAttributes.lists.getter();
}

uint64_t static REMSuggestedAttributesElector.ExcludedAttributes.dueDates.getter()
{
  return static REMSuggestedAttributesElector.ExcludedAttributes.dueDates.getter();
}

uint64_t type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes()
{
  return type metadata accessor for REMSuggestedAttributesElector.ExcludedAttributes();
}

uint64_t static REMSuggestedAttributesHarvester.modelPipelineValueFromUserDefaults(for:)()
{
  return static REMSuggestedAttributesHarvester.modelPipelineValueFromUserDefaults(for:)();
}

uint64_t static REMSuggestedAttributesHarvester.setModelPipelineValueInUserDefaults(for:value:)()
{
  return static REMSuggestedAttributesHarvester.setModelPipelineValueInUserDefaults(for:value:)();
}

uint64_t type metadata accessor for REMSuggestedAttributesHarvester()
{
  return type metadata accessor for REMSuggestedAttributesHarvester();
}

uint64_t type metadata accessor for REMSharedListUserOperationDetail()
{
  return type metadata accessor for REMSharedListUserOperationDetail();
}

uint64_t InitiallyEmptyCurrentValueSubject.send(_:)()
{
  return InitiallyEmptyCurrentValueSubject.send(_:)();
}

uint64_t InitiallyEmptyCurrentValueSubject.init()()
{
  return InitiallyEmptyCurrentValueSubject.init()();
}

uint64_t REMCustomSmartListFilterDescriptor.enabledFilterCount.getter()
{
  return REMCustomSmartListFilterDescriptor.enabledFilterCount.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.includePastDue.getter()
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.includePastDue.getter();
}

uint64_t static REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.== infix(_:_:)()
{
  return static REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.== infix(_:_:)();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Units();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter()
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.units.getter();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.Direction();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)()
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.init(direction:magnitude:units:includePastDue:)();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter()
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.direction.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter()
{
  return REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange.magnitude.getter();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate.RelativeRange();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterDate();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterTime();
}

uint64_t REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)()
{
  return REMCustomSmartListFilterDescriptor.FilterLists.alternateTargetList(for:defaultListID:)();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLists();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterHashtags();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.FilterLocation();
}

uint64_t REMCustomSmartListFilterDescriptor.priorities.getter()
{
  return REMCustomSmartListFilterDescriptor.priorities.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(reminder:forEvaluatingAgainst:)()
{
  return REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder.init(reminder:forEvaluatingAgainst:)();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.PostFetchPredicate.FilterableReminder();
}

uint64_t REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)()
{
  return REMCustomSmartListFilterDescriptor.postFetchPredicates(for:reminderIDsWithMatchingHashtagsProvider:)();
}

uint64_t REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter()
{
  return REMCustomSmartListFilterDescriptor.minimumSupportedVersion.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter()
{
  return REMCustomSmartListFilterDescriptor.requiresSydneyRomeKincaid.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.excludedSuggestedAttributes.getter()
{
  return REMCustomSmartListFilterDescriptor.excludedSuggestedAttributes.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.date.getter()
{
  return REMCustomSmartListFilterDescriptor.date.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.time.getter()
{
  return REMCustomSmartListFilterDescriptor.time.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.lists.getter()
{
  return REMCustomSmartListFilterDescriptor.lists.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:priorities:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:priorities:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:date:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:date:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:time:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:time:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:lists:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:lists:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:flagged:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:flagged:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:hashtags:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:hashtags:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:location:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:location:)();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init(source:operation:)()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init(source:operation:)();
}

uint64_t REMCustomSmartListFilterDescriptor.flagged.getter()
{
  return REMCustomSmartListFilterDescriptor.flagged.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.isEmpty.getter()
{
  return REMCustomSmartListFilterDescriptor.isEmpty.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.hashtags.getter()
{
  return REMCustomSmartListFilterDescriptor.hashtags.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.location.getter()
{
  return REMCustomSmartListFilterDescriptor.location.getter();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor.Operation()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor.Operation();
}

uint64_t REMCustomSmartListFilterDescriptor.operation.getter()
{
  return REMCustomSmartListFilterDescriptor.operation.getter();
}

uint64_t REMCustomSmartListFilterDescriptor.__allocating_init()()
{
  return REMCustomSmartListFilterDescriptor.__allocating_init()();
}

uint64_t type metadata accessor for REMCustomSmartListFilterDescriptor()
{
  return type metadata accessor for REMCustomSmartListFilterDescriptor();
}

uint64_t type metadata accessor for REMRemindersCreateListUserOperation()
{
  return type metadata accessor for REMRemindersCreateListUserOperation();
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType()
{
  return type metadata accessor for REMRemindersListBatchDeleteInvocation.ListType();
}

uint64_t REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.hasReminders(completedBefore:)()
{
  return REMRemindersListBatchDeleteInvocation.CompletionDatePredicate.hasReminders(completedBefore:)();
}

uint64_t type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate()
{
  return type metadata accessor for REMRemindersListBatchDeleteInvocation.CompletionDatePredicate();
}

uint64_t zalgo.getter()
{
  return zalgo.getter();
}

uint64_t Promise.errorAsNil()()
{
  return Promise.errorAsNil()();
}

uint64_t static Promise.all<A>(_:)()
{
  return static Promise.all<A>(_:)();
}

uint64_t dispatch thunk of Promise.cast<A>(as:)()
{
  return dispatch thunk of Promise.cast<A>(as:)();
}

uint64_t Promise.__allocating_init(task:)()
{
  return Promise.__allocating_init(task:)();
}

uint64_t dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)()
{
  return dispatch thunk of Promise.then<A>(on:additionalDelay:closure:)();
}

uint64_t dispatch thunk of Promise.then<A>(on:closure:)()
{
  return dispatch thunk of Promise.then<A>(on:closure:)();
}

{
  return dispatch thunk of Promise.then<A>(on:closure:)();
}

uint64_t dispatch thunk of Promise.error(on:closure:)()
{
  return dispatch thunk of Promise.error(on:closure:)();
}

uint64_t Promise.init(error:)()
{
  return Promise.init(error:)();
}

uint64_t Promise.__allocating_init(value:)()
{
  return Promise.__allocating_init(value:)();
}

uint64_t Promise.init(value:)()
{
  return Promise.init(value:)();
}

uint64_t dispatch thunk of Promise.always(on:closure:)()
{
  return dispatch thunk of Promise.always(on:closure:)();
}

uint64_t Promise.init(resolver:)()
{
  return Promise.init(resolver:)();
}

uint64_t dispatch thunk of Promise.cancelled(on:closure:)()
{
  return dispatch thunk of Promise.cancelled(on:closure:)();
}

uint64_t type metadata accessor for Promise()
{
  return type metadata accessor for Promise();
}

uint64_t firstly<A>(closure:)()
{
  return firstly<A>(closure:)();
}

{
  return firstly<A>(closure:)();
}

uint64_t static Analytics.postEvent(_:payload:duration:)()
{
  return static Analytics.postEvent(_:payload:duration:)();
}

uint64_t type metadata accessor for Analytics()
{
  return type metadata accessor for Analytics();
}

uint64_t AppEntityID.init(objectID:)()
{
  return AppEntityID.init(objectID:)();
}

uint64_t type metadata accessor for AppEntityID()
{
  return type metadata accessor for AppEntityID();
}

uint64_t type metadata accessor for RemindersAppIntentCategory()
{
  return type metadata accessor for RemindersAppIntentCategory();
}

uint64_t type metadata accessor for AppIntentsDependencyKey()
{
  return type metadata accessor for AppIntentsDependencyKey();
}

uint64_t AppIntentsServicesRefresher.setUpSubscriptionForRefreshUponStoreChange<A>(refreshScheduler:debounceInterval:)()
{
  return AppIntentsServicesRefresher.setUpSubscriptionForRefreshUponStoreChange<A>(refreshScheduler:debounceInterval:)();
}

uint64_t AppIntentsServicesRefresher.init()()
{
  return AppIntentsServicesRefresher.init()();
}

uint64_t type metadata accessor for AppIntentsServicesRefresher()
{
  return type metadata accessor for AppIntentsServicesRefresher();
}

uint64_t type metadata accessor for ListEntity()
{
  return type metadata accessor for ListEntity();
}

uint64_t ColorEntity.init(list:)()
{
  return ColorEntity.init(list:)();
}

uint64_t type metadata accessor for ColorEntity()
{
  return type metadata accessor for ColorEntity();
}

uint64_t type metadata accessor for GroupEntity()
{
  return type metadata accessor for GroupEntity();
}

uint64_t type metadata accessor for SectionEntity()
{
  return type metadata accessor for SectionEntity();
}

uint64_t SmartListType.init(remSmartListType:)()
{
  return SmartListType.init(remSmartListType:)();
}

uint64_t SmartListType.remSmartListType.getter()
{
  return SmartListType.remSmartListType.getter();
}

uint64_t SmartListType.id.getter()
{
  return SmartListType.id.getter();
}

uint64_t SmartListType.title.getter()
{
  return SmartListType.title.getter();
}

uint64_t type metadata accessor for SmartListType()
{
  return type metadata accessor for SmartListType();
}

uint64_t type metadata accessor for ReminderEntity()
{
  return type metadata accessor for ReminderEntity();
}

uint64_t ListBadgeEntity.init(list:)()
{
  return ListBadgeEntity.init(list:)();
}

uint64_t type metadata accessor for ListBadgeEntity()
{
  return type metadata accessor for ListBadgeEntity();
}

uint64_t type metadata accessor for SectionEntityID()
{
  return type metadata accessor for SectionEntityID();
}

uint64_t type metadata accessor for SmartListEntity()
{
  return type metadata accessor for SmartListEntity();
}

uint64_t AnyListEntityLazyImage.displayRepresentationImage.getter()
{
  return AnyListEntityLazyImage.displayRepresentationImage.getter();
}

uint64_t type metadata accessor for AnyListEntityLazyImage.Parameters()
{
  return type metadata accessor for AnyListEntityLazyImage.Parameters();
}

uint64_t AnyListEntityLazyImage.init(for:)()
{
  return AnyListEntityLazyImage.init(for:)();
}

uint64_t type metadata accessor for AnyListEntityLazyImage()
{
  return type metadata accessor for AnyListEntityLazyImage();
}

uint64_t REMStoreIntentPerformer.init(store:)()
{
  return REMStoreIntentPerformer.init(store:)();
}

uint64_t type metadata accessor for REMStoreIntentPerformer()
{
  return type metadata accessor for REMStoreIntentPerformer();
}

uint64_t UTType.identifier.getter()
{
  return UTType.identifier.getter();
}

uint64_t static UTType.image.getter()
{
  return static UTType.image.getter();
}

uint64_t UTType.conforms(to:)()
{
  return UTType.conforms(to:)();
}

uint64_t type metadata accessor for UTType()
{
  return type metadata accessor for UTType();
}

uint64_t UTType.init(_:)()
{
  return UTType.init(_:)();
}

uint64_t Logger.logObject.getter()
{
  return Logger.logObject.getter();
}

uint64_t type metadata accessor for Logger()
{
  return type metadata accessor for Logger();
}

uint64_t Logger.init(_:)()
{
  return Logger.init(_:)();
}

uint64_t static _UIKitNumericRawRepresentable.+ infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.+ infix(_:_:)();
}

uint64_t static _UIKitNumericRawRepresentable.- infix(_:_:)()
{
  return static _UIKitNumericRawRepresentable.- infix(_:_:)();
}

uint64_t dispatch thunk of UIContentView.configuration.setter()
{
  return dispatch thunk of UIContentView.configuration.setter();
}

uint64_t dispatch thunk of UIContentView.supports(_:)()
{
  return dispatch thunk of UIContentView.supports(_:)();
}

uint64_t type metadata accessor for UIPointerShape()
{
  return type metadata accessor for UIPointerShape();
}

uint64_t type metadata accessor for UICellAccessory.AccessoryType()
{
  return type metadata accessor for UICellAccessory.AccessoryType();
}

uint64_t static UICellAccessory.customView(configuration:)()
{
  return static UICellAccessory.customView(configuration:)();
}

uint64_t UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)()
{
  return UICellAccessory.DeleteOptions.init(isHidden:reservedLayoutWidth:tintColor:backgroundColor:)();
}

uint64_t type metadata accessor for UICellAccessory.DeleteOptions()
{
  return type metadata accessor for UICellAccessory.DeleteOptions();
}

uint64_t UICellAccessory.accessoryType.getter()
{
  return UICellAccessory.accessoryType.getter();
}

uint64_t type metadata accessor for UICellAccessory.DisplayedState()
{
  return type metadata accessor for UICellAccessory.DisplayedState();
}

uint64_t UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)()
{
  return UICellAccessory.ReorderOptions.init(isHidden:reservedLayoutWidth:tintColor:showsVerticalSeparator:)();
}

uint64_t type metadata accessor for UICellAccessory.ReorderOptions()
{
  return type metadata accessor for UICellAccessory.ReorderOptions();
}

uint64_t type metadata accessor for UICellAccessory.LayoutDimension()
{
  return type metadata accessor for UICellAccessory.LayoutDimension();
}

uint64_t UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)()
{
  return UICellAccessory.CustomViewConfiguration.init(customView:placement:isHidden:reservedLayoutWidth:tintColor:maintainsFixedSize:)();
}

uint64_t type metadata accessor for UICellAccessory.CustomViewConfiguration()
{
  return type metadata accessor for UICellAccessory.CustomViewConfiguration();
}

uint64_t static UICellAccessory.delete(displayed:options:actionHandler:)()
{
  return static UICellAccessory.delete(displayed:options:actionHandler:)();
}

uint64_t static UICellAccessory.reorder(displayed:options:)()
{
  return static UICellAccessory.reorder(displayed:options:)();
}

uint64_t type metadata accessor for UICellAccessory.Placement()
{
  return type metadata accessor for UICellAccessory.Placement();
}

uint64_t type metadata accessor for UICellAccessory()
{
  return type metadata accessor for UICellAccessory();
}

uint64_t UIMutableTraits.accessibilityContrast.setter()
{
  return UIMutableTraits.accessibilityContrast.setter();
}

uint64_t UIPointerEffect.preview.getter()
{
  return UIPointerEffect.preview.getter();
}

uint64_t type metadata accessor for UIPointerEffect()
{
  return type metadata accessor for UIPointerEffect();
}

uint64_t type metadata accessor for UITraitDisplayScale()
{
  return type metadata accessor for UITraitDisplayScale();
}

uint64_t dispatch thunk of UIContentConfiguration.makeContentView()()
{
  return dispatch thunk of UIContentConfiguration.makeContentView()();
}

uint64_t type metadata accessor for UICellConfigurationState.DropState()
{
  return type metadata accessor for UICellConfigurationState.DropState();
}

uint64_t UICellConfigurationState.cellDropState.getter()
{
  return UICellConfigurationState.cellDropState.getter();
}

uint64_t UICellConfigurationState.isSelected.getter()
{
  return UICellConfigurationState.isSelected.getter();
}

uint64_t UICellConfigurationState.isHighlighted.getter()
{
  return UICellConfigurationState.isHighlighted.getter();
}

UICellConfigurationState __swiftcall UICellConfigurationState._bridgeToObjectiveC()()
{
  return (UICellConfigurationState)UICellConfigurationState._bridgeToObjectiveC()();
}

uint64_t static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static UICellConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t UICellConfigurationState.isPinned.getter()
{
  return UICellConfigurationState.isPinned.getter();
}

uint64_t UICellConfigurationState.isEditing.getter()
{
  return UICellConfigurationState.isEditing.getter();
}

uint64_t UICellConfigurationState.isFocused.getter()
{
  return UICellConfigurationState.isFocused.getter();
}

uint64_t type metadata accessor for UICellConfigurationState()
{
  return type metadata accessor for UICellConfigurationState();
}

uint64_t UICellConfigurationState.subscript.getter()
{
  return UICellConfigurationState.subscript.getter();
}

uint64_t UICellConfigurationState.subscript.setter()
{
  return UICellConfigurationState.subscript.setter();
}

uint64_t UIBackgroundConfiguration.customView.getter()
{
  return UIBackgroundConfiguration.customView.getter();
}

uint64_t UIBackgroundConfiguration.customView.setter()
{
  return UIBackgroundConfiguration.customView.setter();
}

uint64_t UIBackgroundConfiguration.strokeColor.setter()
{
  return UIBackgroundConfiguration.strokeColor.setter();
}

uint64_t UIBackgroundConfiguration.cornerRadius.getter()
{
  return UIBackgroundConfiguration.cornerRadius.getter();
}

uint64_t UIBackgroundConfiguration.cornerRadius.setter()
{
  return UIBackgroundConfiguration.cornerRadius.setter();
}

uint64_t UIBackgroundConfiguration.backgroundColor.getter()
{
  return UIBackgroundConfiguration.backgroundColor.getter();
}

uint64_t UIBackgroundConfiguration.backgroundColor.setter()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t UIBackgroundConfiguration.backgroundColorTransformer.setter()
{
  return UIBackgroundConfiguration.backgroundColorTransformer.setter();
}

uint64_t static UIBackgroundConfiguration.clear()()
{
  return static UIBackgroundConfiguration.clear()();
}

uint64_t type metadata accessor for UIBackgroundConfiguration()
{
  return type metadata accessor for UIBackgroundConfiguration();
}

uint64_t static UIListContentConfiguration.subtitleCell()()
{
  return static UIListContentConfiguration.subtitleCell()();
}

uint64_t static UIListContentConfiguration.groupedFooter()()
{
  return static UIListContentConfiguration.groupedFooter()();
}

uint64_t UIListContentConfiguration.TextProperties.font.setter()
{
  return UIListContentConfiguration.TextProperties.font.setter();
}

uint64_t UIListContentConfiguration.attributedText.setter()
{
  return UIListContentConfiguration.attributedText.setter();
}

uint64_t UIListContentConfiguration.textProperties.modify()
{
  return UIListContentConfiguration.textProperties.modify();
}

uint64_t UIListContentConfiguration.usingRoundedSystemFont()()
{
  return UIListContentConfiguration.usingRoundedSystemFont()();
}

uint64_t UIListContentConfiguration.secondaryAttributedText.setter()
{
  return UIListContentConfiguration.secondaryAttributedText.setter();
}

uint64_t UIListContentConfiguration.directionalLayoutMargins.modify()
{
  return UIListContentConfiguration.directionalLayoutMargins.modify();
}

uint64_t static UIListContentConfiguration.extraProminentInsetGroupedHeader()()
{
  return static UIListContentConfiguration.extraProminentInsetGroupedHeader()();
}

uint64_t static UIListContentConfiguration.cell()()
{
  return static UIListContentConfiguration.cell()();
}

uint64_t UIListContentConfiguration.text.setter()
{
  return UIListContentConfiguration.text.setter();
}

uint64_t UIListContentConfiguration.image.setter()
{
  return UIListContentConfiguration.image.setter();
}

uint64_t UIListContentConfiguration.updated(for:)()
{
  return UIListContentConfiguration.updated(for:)();
}

uint64_t type metadata accessor for UIListContentConfiguration()
{
  return type metadata accessor for UIListContentConfiguration();
}

uint64_t type metadata accessor for UITraitHorizontalSizeClass()
{
  return type metadata accessor for UITraitHorizontalSizeClass();
}

uint64_t NSDiffableDataSourceTransaction.difference.getter()
{
  return NSDiffableDataSourceTransaction.difference.getter();
}

uint64_t NSDiffableDataSourceTransaction.sectionTransactions.getter()
{
  return NSDiffableDataSourceTransaction.sectionTransactions.getter();
}

uint64_t type metadata accessor for UIConfigurationColorTransformer()
{
  return type metadata accessor for UIConfigurationColorTransformer();
}

uint64_t UIConfigurationColorTransformer.init(_:)()
{
  return UIConfigurationColorTransformer.init(_:)();
}

uint64_t UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)()
{
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();
}

uint64_t UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter()
{
  return UICollectionViewDiffableDataSource.ReorderingHandlers.didReorder.setter();
}

uint64_t UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter()
{
  return UICollectionViewDiffableDataSource.ReorderingHandlers.canReorderItem.setter();
}

uint64_t UICollectionViewDiffableDataSource.reorderingHandlers.modify()
{
  return UICollectionViewDiffableDataSource.reorderingHandlers.modify();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.index(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.index(for:)();
}

uint64_t dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
}

uint64_t NSDiffableDataSourceSectionSnapshot.items.getter()
{
  return NSDiffableDataSourceSectionSnapshot.items.getter();
}

uint64_t UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter()
{
  return UICollectionLayoutListConfiguration.leadingSwipeActionsConfigurationProvider.setter();
}

uint64_t UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter()
{
  return UICollectionLayoutListConfiguration.trailingSwipeActionsConfigurationProvider.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.Appearance()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration.FooterMode()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
}

uint64_t UICollectionLayoutListConfiguration.init(appearance:)()
{
  return UICollectionLayoutListConfiguration.init(appearance:)();
}

uint64_t UICollectionLayoutListConfiguration.footerMode.setter()
{
  return UICollectionLayoutListConfiguration.footerMode.setter();
}

uint64_t type metadata accessor for UICollectionLayoutListConfiguration()
{
  return type metadata accessor for UICollectionLayoutListConfiguration();
}

uint64_t type metadata accessor for UITraitPreferredContentSizeCategory()
{
  return type metadata accessor for UITraitPreferredContentSizeCategory();
}

uint64_t NSDiffableDataSourceSectionTransaction.finalSnapshot.getter()
{
  return NSDiffableDataSourceSectionTransaction.finalSnapshot.getter();
}

uint64_t NSDiffableDataSourceSectionTransaction.initialSnapshot.getter()
{
  return NSDiffableDataSourceSectionTransaction.initialSnapshot.getter();
}

uint64_t type metadata accessor for UIConfigurationTextAttributesTransformer()
{
  return type metadata accessor for UIConfigurationTextAttributesTransformer();
}

uint64_t UIConfigurationTextAttributesTransformer.init(_:)()
{
  return UIConfigurationTextAttributesTransformer.init(_:)();
}

uint64_t AnyTip.id.getter()
{
  return AnyTip.id.getter();
}

uint64_t type metadata accessor for AnyTip()
{
  return type metadata accessor for AnyTip();
}

uint64_t AnyTip.init<A>(_:)()
{
  return AnyTip.init<A>(_:)();
}

uint64_t TipUIView.imageStyle.setter()
{
  return TipUIView.imageStyle.setter();
}

uint64_t type metadata accessor for TipUIView()
{
  return type metadata accessor for TipUIView();
}

uint64_t TipUIView.init(_:arrowEdge:actionHandler:)()
{
  return TipUIView.init(_:arrowEdge:actionHandler:)();
}

uint64_t static Tips.configure(_:)()
{
  return static Tips.configure(_:)();
}

uint64_t static Subscribers.Demand.unlimited.getter()
{
  return static Subscribers.Demand.unlimited.getter();
}

uint64_t type metadata accessor for AnyPublisher()
{
  return type metadata accessor for AnyPublisher();
}

uint64_t AnyCancellable.store(in:)()
{
  return AnyCancellable.store(in:)();
}

Swift::Void __swiftcall AnyCancellable.cancel()()
{
}

uint64_t type metadata accessor for AnyCancellable()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t AnyCancellable.init(_:)()
{
  return AnyCancellable.init(_:)();
}

uint64_t AsyncPublisher.makeAsyncIterator()()
{
  return AsyncPublisher.makeAsyncIterator()();
}

uint64_t PassthroughSubject.send(completion:)()
{
  return PassthroughSubject.send(completion:)();
}

uint64_t PassthroughSubject.send(_:)()
{
  return PassthroughSubject.send(_:)();
}

uint64_t PassthroughSubject.init()()
{
  return PassthroughSubject.init()();
}

uint64_t CurrentValueSubject.send(_:)()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t CurrentValueSubject.value.getter()
{
  return CurrentValueSubject.value.getter();
}

uint64_t CurrentValueSubject.init(_:)()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t dispatch thunk of static SchedulerTimeIntervalConvertible.milliseconds(_:)()
{
  return dispatch thunk of static SchedulerTimeIntervalConvertible.milliseconds(_:)();
}

uint64_t dispatch thunk of static SchedulerTimeIntervalConvertible.seconds(_:)()
{
  return dispatch thunk of static SchedulerTimeIntervalConvertible.seconds(_:)();
}

uint64_t Fail.init(error:)()
{
  return Fail.init(error:)();
}

uint64_t Just.setFailureType<A>(to:)()
{
  return Just.setFailureType<A>(to:)();
}

uint64_t Just.init(_:)()
{
  return Just.init(_:)();
}

uint64_t Future.init(_:)()
{
  return Future.init(_:)();
}

uint64_t Subject<>.send()()
{
  return Subject<>.send()();
}

uint64_t Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)()
{
  return Publisher.sink<A>(weakTarget:receiveValue:receiveCompletion:)();
}

uint64_t Publisher<>.legacyPromise()()
{
  return Publisher<>.legacyPromise()();
}

uint64_t Publisher<>.sinkNextOutput(_:)()
{
  return Publisher<>.sinkNextOutput(_:)();
}

uint64_t Publisher<>.rem_bufferedValues.getter()
{
  return Publisher<>.rem_bufferedValues.getter();
}

uint64_t Publisher.eraseToAnyPublisher()()
{
  return Publisher.eraseToAnyPublisher()();
}

uint64_t Publisher.compactMap<A>(_:)()
{
  return Publisher.compactMap<A>(_:)();
}

uint64_t Publisher.replaceEmpty(with:)()
{
  return Publisher.replaceEmpty(with:)();
}

uint64_t Publisher.replaceError(with:)()
{
  return Publisher.replaceError(with:)();
}

uint64_t Publisher.combineLatest<A>(_:)()
{
  return Publisher.combineLatest<A>(_:)();
}

uint64_t Publisher.map<A>(_:)()
{
  return Publisher.map<A>(_:)();
}

uint64_t Publisher.drop(while:)()
{
  return Publisher.drop(while:)();
}

uint64_t Publisher.sink(receiveCompletion:receiveValue:)()
{
  return Publisher.sink(receiveCompletion:receiveValue:)();
}

uint64_t Publisher.delay<A>(for:tolerance:scheduler:options:)()
{
  return Publisher.delay<A>(for:tolerance:scheduler:options:)();
}

uint64_t Publisher.first()()
{
  return Publisher.first()();
}

uint64_t Publisher.merge(with:)()
{
  return Publisher.merge(with:)();
}

uint64_t Publisher.tryMap<A>(_:)()
{
  return Publisher.tryMap<A>(_:)();
}

uint64_t Publisher.flatMap<A, B>(maxPublishers:_:)()
{
  return Publisher.flatMap<A, B>(maxPublishers:_:)();
}

uint64_t Publisher.receive<A>(on:options:)()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t Publisher.timeout<A>(_:scheduler:options:customError:)()
{
  return Publisher.timeout<A>(_:scheduler:options:customError:)();
}

uint64_t Publisher.debounce<A>(for:scheduler:options:)()
{
  return Publisher.debounce<A>(for:scheduler:options:)();
}

uint64_t Publisher.tryFirst(where:)()
{
  return Publisher.tryFirst(where:)();
}

uint64_t Publisher<>.removeDuplicates()()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t Publisher<>.setFailureType<A>(to:)()
{
  return Publisher<>.setFailureType<A>(to:)();
}

uint64_t Publisher<>.sink(receiveValue:)()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t Publisher<>.flatMap<A>(maxPublishers:_:)()
{
  return Publisher<>.flatMap<A>(maxPublishers:_:)();
}

uint64_t ToolbarItem<>.init(placement:content:)()
{
  return ToolbarItem<>.init(placement:content:)();
}

uint64_t EnvironmentValues.editMode.getter()
{
  return EnvironmentValues.editMode.getter();
}

uint64_t EnvironmentValues.editMode.setter()
{
  return EnvironmentValues.editMode.setter();
}

uint64_t static HorizontalAlignment.leading.getter()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t TupleToolbarContent.init(_:)()
{
  return TupleToolbarContent.init(_:)();
}

uint64_t dispatch thunk of UIHostingController.sizingOptions.setter()
{
  return dispatch thunk of UIHostingController.sizingOptions.setter();
}

uint64_t UIHostingController.safeAreaRegions.setter()
{
  return UIHostingController.safeAreaRegions.setter();
}

uint64_t UIHostingController.init(rootView:)()
{
  return UIHostingController.init(rootView:)();
}

uint64_t dispatch thunk of UIHostingController.rootView.setter()
{
  return dispatch thunk of UIHostingController.rootView.setter();
}

uint64_t static ToolbarItemPlacement.cancellationAction.getter()
{
  return static ToolbarItemPlacement.cancellationAction.getter();
}

uint64_t static ToolbarItemPlacement.confirmationAction.getter()
{
  return static ToolbarItemPlacement.confirmationAction.getter();
}

uint64_t type metadata accessor for ToolbarItemPlacement()
{
  return type metadata accessor for ToolbarItemPlacement();
}

uint64_t InsetGroupedListStyle.init()()
{
  return InsetGroupedListStyle.init()();
}

uint64_t type metadata accessor for InsetGroupedListStyle()
{
  return type metadata accessor for InsetGroupedListStyle();
}

uint64_t static UIHostingControllerSizingOptions.intrinsicContentSize.getter()
{
  return static UIHostingControllerSizingOptions.intrinsicContentSize.getter();
}

uint64_t type metadata accessor for UIHostingControllerSizingOptions()
{
  return type metadata accessor for UIHostingControllerSizingOptions();
}

uint64_t static Font.subheadline.getter()
{
  return static Font.subheadline.getter();
}

uint64_t type metadata accessor for Font.Design()
{
  return type metadata accessor for Font.Design();
}

uint64_t List<>.init(content:)()
{
  return List<>.init(content:)();
}

uint64_t Text.foregroundColor(_:)()
{
  return Text.foregroundColor(_:)();
}

uint64_t Text.font(_:)()
{
  return Text.font(_:)();
}

uint64_t Text.init<A>(_:)()
{
  return Text.init<A>(_:)();
}

uint64_t View.confirmationDialog<A>(for:)()
{
  return View.confirmationDialog<A>(for:)();
}

uint64_t static View._makeView(view:inputs:)()
{
  return static View._makeView(view:inputs:)();
}

uint64_t static View._makeViewList(view:inputs:)()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t View.fontDesign(_:)()
{
  return View.fontDesign(_:)();
}

uint64_t static View._viewListCount(inputs:)()
{
  return static View._viewListCount(inputs:)();
}

uint64_t View.navigationTitle<A>(_:)()
{
  return View.navigationTitle<A>(_:)();
}

uint64_t View.toolbar<A>(content:)()
{
  return View.toolbar<A>(content:)();
}

uint64_t View.listStyle<A>(_:)()
{
  return View.listStyle<A>(_:)();
}

uint64_t static Color.== infix(_:_:)()
{
  return static Color.== infix(_:_:)();
}

uint64_t static Color.secondary.getter()
{
  return static Color.secondary.getter();
}

uint64_t State.init(wrappedValue:)()
{
  return State.init(wrappedValue:)();
}

uint64_t Button<>.init<A>(_:action:)()
{
  return Button<>.init<A>(_:action:)();
}

uint64_t static Binding.constant(_:)()
{
  return static Binding.constant(_:)();
}

uint64_t ForEach<>.init(_:content:)()
{
  return ForEach<>.init(_:content:)();
}

uint64_t Section<>.init(content:)()
{
  return Section<>.init(content:)();
}

uint64_t type metadata accessor for EditMode()
{
  return type metadata accessor for EditMode();
}

uint64_t type metadata accessor for DispatchWorkItemFlags()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t type metadata accessor for DispatchQoS.QoSClass()
{
  return type metadata accessor for DispatchQoS.QoSClass();
}

uint64_t static DispatchQoS.unspecified.getter()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t type metadata accessor for DispatchQoS()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t static DispatchTime.now()()
{
  return static DispatchTime.now()();
}

uint64_t type metadata accessor for DispatchTime()
{
  return type metadata accessor for DispatchTime();
}

uint64_t type metadata accessor for DispatchPredicate()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t + infix(_:_:)()
{
  return + infix(_:_:)();
}

uint64_t _dispatchPreconditionTest(_:)()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t Dictionary.init()()
{
  return Dictionary.init()();
}

uint64_t Array.init()()
{
  return Array.init()();
}

uint64_t Set.init()()
{
  return Set.init()();
}

NSDictionary __swiftcall Dictionary._bridgeToObjectiveC()()
{
  return (NSDictionary)Dictionary._bridgeToObjectiveC()();
}

uint64_t static Dictionary._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Dictionary.description.getter()
{
  return Dictionary.description.getter();
}

uint64_t Dictionary.removeValue(forKey:)()
{
  return Dictionary.removeValue(forKey:)();
}

uint64_t Dictionary.init(dictionaryLiteral:)()
{
  return Dictionary.init(dictionaryLiteral:)();
}

Swift::Void __swiftcall Dictionary.merge(takingValuesIn:)(Swift::OpaquePointer takingValuesIn)
{
}

uint64_t type metadata accessor for Dictionary.Keys()
{
  return type metadata accessor for Dictionary.Keys();
}

uint64_t type metadata accessor for Dictionary.Values()
{
  return type metadata accessor for Dictionary.Values();
}

uint64_t Dictionary.filter(_:)()
{
  return Dictionary.filter(_:)();
}

uint64_t Dictionary.isEmpty.getter()
{
  return Dictionary.isEmpty.getter();
}

uint64_t type metadata accessor for Dictionary._Variant()
{
  return type metadata accessor for Dictionary._Variant();
}

uint64_t Dictionary._Variant.subscript.modify()
{
  return Dictionary._Variant.subscript.modify();
}

uint64_t type metadata accessor for Dictionary()
{
  return type metadata accessor for Dictionary();
}

uint64_t Dictionary.subscript.getter()
{
  return Dictionary.subscript.getter();
}

uint64_t Dictionary.subscript.setter()
{
  return Dictionary.subscript.setter();
}

uint64_t FloatingPoint.rescaledAlmostEqual(to:tolerance:)()
{
  return FloatingPoint.rescaledAlmostEqual(to:tolerance:)();
}

uint64_t dispatch thunk of Hashable._rawHashValue(seed:)()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t dispatch thunk of Hashable.hash(into:)()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t dispatch thunk of Hashable.hashValue.getter()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t BidirectionalCollection<>.starts<A>(with:)()
{
  return BidirectionalCollection<>.starts<A>(with:)();
}

uint64_t dispatch thunk of BidirectionalCollection.formIndex(before:)()
{
  return dispatch thunk of BidirectionalCollection.formIndex(before:)();
}

uint64_t BidirectionalCollection.last.getter()
{
  return BidirectionalCollection.last.getter();
}

uint64_t BidirectionalCollection<>.joined(separator:)()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t dispatch thunk of static Comparable.< infix(_:_:)()
{
  return dispatch thunk of static Comparable.< infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.>= infix(_:_:)()
{
  return dispatch thunk of static Comparable.>= infix(_:_:)();
}

uint64_t dispatch thunk of static Comparable.<= infix(_:_:)()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t dispatch thunk of static Equatable.== infix(_:_:)()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t String.LocalizationValue.init(stringLiteral:)()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(Swift::String a1)
{
}

Swift::Void __swiftcall String.LocalizationValue.StringInterpolation.appendLiteral(_:)(Swift::String a1)
{
}

uint64_t String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)()
{
  return String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
}

uint64_t type metadata accessor for String.LocalizationValue.StringInterpolation()
{
  return type metadata accessor for String.LocalizationValue.StringInterpolation();
}

uint64_t type metadata accessor for String.LocalizationValue()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString __swiftcall String._bridgeToObjectiveC()()
{
  return (NSString)String._bridgeToObjectiveC()();
}

uint64_t static String.localizedStringWithFormat(_:_:)()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t static String._forceBridgeFromObjectiveC(_:result:)()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static String._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t String.init(format:_:)()
{
  return String.init(format:_:)();
}

uint64_t String.init<A>(describing:)()
{
  return String.init<A>(describing:)();
}

Swift::String __swiftcall String.lowercased()()
{
  uint64_t v0 = String.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String._fromSubstring(_:)()
{
  return static String._fromSubstring(_:)();
}

uint64_t String.fullNSRange.getter()
{
  return String.fullNSRange.getter();
}

Swift::tuple_name_String_isValid_Bool __swiftcall String.validatedListName()()
{
  uint64_t v0 = String.validatedListName()();
  result.name._object = v1;
  result.name._uint64_t countAndFlagsBits = v0;
  result.isValid = v2;
  return result;
}

uint64_t String.safeNameForHashtag(locale:)()
{
  return String.safeNameForHashtag(locale:)();
}

Swift::tuple_name_String_isValid_Bool __swiftcall String.validatedSectionName()()
{
  uint64_t v0 = String.validatedSectionName()();
  result.name._object = v1;
  result.name._uint64_t countAndFlagsBits = v0;
  result.isValid = v2;
  return result;
}

Swift::tuple_title_String_isValid_Bool __swiftcall String.validatedReminderTitle()()
{
  uint64_t v0 = String.validatedReminderTitle()();
  result.title._object = v1;
  result.title._uint64_t countAndFlagsBits = v0;
  result.isValid = v2;
  return result;
}

__C::_NSRange_optional __swiftcall String.nsRange(of:)(Swift::String of)
{
  Swift::Int v1 = String.nsRange(of:)(of._countAndFlagsBits, of._object);
  result.value.length = v2;
  result.value.location = v1;
  result.is_nil = v3;
  return result;
}

Swift::String __swiftcall String.addingHashtagPrefix()()
{
  uint64_t v0 = String.addingHashtagPrefix()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t static String.hashtagTokenDefaultPrefix.getter()
{
  return static String.hashtagTokenDefaultPrefix.getter();
}

uint64_t String.hash(into:)()
{
  return String.hash(into:)();
}

uint64_t String.count.getter()
{
  return String.count.getter();
}

uint64_t String.index(_:offsetBy:limitedBy:)()
{
  return String.index(_:offsetBy:limitedBy:)();
}

Swift::Void __swiftcall String.append(_:)(Swift::String a1)
{
}

{
  String.append(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::String_optional __swiftcall String.Iterator.next()()
{
  uint64_t v0 = String.Iterator.next()();
  result.value._object = v1;
  result.value._uint64_t countAndFlagsBits = v0;
  return result;
}

Swift::Int __swiftcall String.UTF8View._foreignCount()()
{
  return String.UTF8View._foreignCount()();
}

Swift::Bool __swiftcall String.hasPrefix(_:)(Swift::String a1)
{
  return String.hasPrefix(_:)(a1._countAndFlagsBits, a1._object);
}

Swift::String __swiftcall String.init(repeating:count:)(Swift::String repeating, Swift::Int count)
{
  uint64_t v2 = String.init(repeating:count:)(repeating._countAndFlagsBits, repeating._object, count);
  result._object = v3;
  result._uint64_t countAndFlagsBits = v2;
  return result;
}

uint64_t dispatch thunk of Sequence.makeIterator()()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t Sequence<>.postFetchPredicateTypes.getter()
{
  return Sequence<>.postFetchPredicateTypes.getter();
}

uint64_t Sequence<>.evaluate(with:)()
{
  return Sequence<>.evaluate(with:)();
}

uint64_t Sequence.removingNils<A>()()
{
  return Sequence.removingNils<A>()();
}

uint64_t Sequence.compactMapToSet<A>(_:)()
{
  return Sequence.compactMapToSet<A>(_:)();
}

uint64_t Sequence.completeCompactMap<A>(_:)()
{
  return Sequence.completeCompactMap<A>(_:)();
}

uint64_t Sequence.elements<A>(ofType:)()
{
  return Sequence.elements<A>(ofType:)();
}

uint64_t Sequence.firstMap<A>(_:)()
{
  return Sequence.firstMap<A>(_:)();
}

uint64_t Sequence.mapToSet<A>(_:)()
{
  return Sequence.mapToSet<A>(_:)();
}

uint64_t Sequence<>.unique()()
{
  return Sequence<>.unique()();
}

uint64_t Sequence<>.sum()()
{
  return Sequence<>.sum()();
}

uint64_t dispatch thunk of Sequence.underestimatedCount.getter()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t Sequence.compactMap<A>(_:)()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t Sequence.enumerated()()
{
  return Sequence.enumerated()();
}

uint64_t Sequence.reduce<A>(_:_:)()
{
  return Sequence.reduce<A>(_:_:)();
}

uint64_t Sequence.contains(where:)()
{
  return Sequence.contains(where:)();
}

uint64_t Sequence.reversed()()
{
  return Sequence.reversed()();
}

uint64_t dispatch thunk of RangeExpression.contains(_:)()
{
  return dispatch thunk of RangeExpression.contains(_:)();
}

uint64_t dispatch thunk of RawRepresentable.rawValue.getter()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t specialized Array._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray __swiftcall Array._bridgeToObjectiveC()()
{
  return (NSArray)Array._bridgeToObjectiveC()();
}

uint64_t static Array._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Array.description.getter()
{
  return Array.description.getter();
}

uint64_t specialized Array._endMutation()()
{
  return specialized Array._endMutation()();
}

uint64_t static Array._adoptStorage(_:count:)()
{
  return static Array._adoptStorage(_:count:)();
}

uint64_t Array<A>.replacingSubtasksWithNil()()
{
  return Array<A>.replacingSubtasksWithNil()();
}

uint64_t Array.chunked(by:)()
{
  return Array.chunked(by:)();
}

uint64_t Array<A>.index<A>(forInsertingAt:where:)()
{
  return Array<A>.index<A>(forInsertingAt:where:)();
}

uint64_t Array<A>.init(pinnedLists:)()
{
  return Array<A>.init(pinnedLists:)();
}

uint64_t Array<A>.removing(lists:)()
{
  return Array<A>.removing(lists:)();
}

uint64_t Array<A>.appending(lists:)()
{
  return Array<A>.appending(lists:)();
}

uint64_t Array<A>.ttrAccessibilitySharingSummary()()
{
  return Array<A>.ttrAccessibilitySharingSummary()();
}

uint64_t Array._checkSubscript(_:wasNativeTypeChecked:)()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

Swift::Void __swiftcall Array.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

Swift::Void __swiftcall Array._makeMutableAndUnique()()
{
}

uint64_t static Array._allocateUninitialized(_:)()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t static Array._allocateBufferUninitialized(minimumCapacity:)()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

Swift::Bool __swiftcall Array._hoistableIsNativeTypeChecked()()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t Array.count.getter()
{
  return Array.count.getter();
}

uint64_t Array.append(_:)()
{
  return Array.append(_:)();
}

uint64_t Array.insert(_:at:)()
{
  return Array.insert(_:at:)();
}

uint64_t Array.remove(at:)()
{
  return Array.remove(at:)();
}

uint64_t Array.endIndex.getter()
{
  return Array.endIndex.getter();
}

Swift::Int __swiftcall Array._getCount()()
{
  return Array._getCount()();
}

Swift::Void __swiftcall Array.removeAll(keepingCapacity:)(Swift::Bool keepingCapacity)
{
}

uint64_t type metadata accessor for Array()
{
  return type metadata accessor for Array();
}

uint64_t static Array<A>.== infix(_:_:)()
{
  return static Array<A>.== infix(_:_:)();
}

uint64_t Array.subscript.getter()
{
  return Array.subscript.getter();
}

{
  return Array.subscript.getter();
}

uint64_t Bool.yesno.getter()
{
  return Bool.yesno.getter();
}

uint64_t dispatch thunk of Actor.unownedExecutor.getter()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t CheckedContinuation.resume(returning:)()
{
  return CheckedContinuation.resume(returning:)();
}

Swift::Void __swiftcall TaskGroup.cancelAll()()
{
}

uint64_t static MainActor.shared.getter()
{
  return static MainActor.shared.getter();
}

uint64_t type metadata accessor for MainActor()
{
  return type metadata accessor for MainActor();
}

uint64_t static TaskPriority.userInitiated.getter()
{
  return static TaskPriority.userInitiated.getter();
}

uint64_t TaskPriority.rawValue.getter()
{
  return TaskPriority.rawValue.getter();
}

uint64_t type metadata accessor for TaskPriority()
{
  return type metadata accessor for TaskPriority();
}

Swift::Void __swiftcall Task.cancel()()
{
}

uint64_t static Task<>.isCancelled.getter()
{
  return static Task<>.isCancelled.getter();
}

uint64_t dispatch thunk of AsyncSequence.makeAsyncIterator()()
{
  return dispatch thunk of AsyncSequence.makeAsyncIterator()();
}

uint64_t Double.description.getter()
{
  return Double.description.getter();
}

NSNumber __swiftcall Float._bridgeToObjectiveC()()
{
  return (NSNumber)Float._bridgeToObjectiveC()();
}

uint64_t static Float._forceBridgeFromObjectiveC(_:result:)()
{
  return static Float._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Float._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Float._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Float._unconditionallyBridgeFromObjectiveC(_:)();
}

NSSet __swiftcall Set._bridgeToObjectiveC()()
{
  return (NSSet)Set._bridgeToObjectiveC()();
}

uint64_t static Set._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Set._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t Set.description.getter()
{
  return Set.description.getter();
}

uint64_t Set.subtracting(_:)()
{
  return Set.subtracting(_:)();
}

uint64_t Set.removeAll(where:)()
{
  return Set.removeAll(where:)();
}

uint64_t Set.init(minimumCapacity:)()
{
  return Set.init(minimumCapacity:)();
}

uint64_t static Set<>.typesSupportedByCustomSmartList.getter()
{
  return static Set<>.typesSupportedByCustomSmartList.getter();
}

uint64_t static Set.== infix(_:_:)()
{
  return static Set.== infix(_:_:)();
}

uint64_t Set.Index._asCocoa.modify()
{
  return Set.Index._asCocoa.modify();
}

uint64_t Set.count.getter()
{
  return Set.count.getter();
}

uint64_t Set.union<A>(_:)()
{
  return Set.union<A>(_:)();
}

uint64_t Set.insert(_:)()
{
  return Set.insert(_:)();
}

uint64_t Set.remove(_:)()
{
  return Set.remove(_:)();
}

uint64_t Set.isEmpty.getter()
{
  return Set.isEmpty.getter();
}

uint64_t Set.Iterator.init(_cocoa:)()
{
  return Set.Iterator.init(_cocoa:)();
}

uint64_t Set.contains(_:)()
{
  return Set.contains(_:)();
}

uint64_t Set.subtract(_:)()
{
  return Set.subtract(_:)();
}

uint64_t Set.formUnion<A>(_:)()
{
  return Set.formUnion<A>(_:)();
}

uint64_t type metadata accessor for Set()
{
  return type metadata accessor for Set();
}

NSNumber __swiftcall Int._bridgeToObjectiveC()()
{
  return (NSNumber)Int._bridgeToObjectiveC()();
}

uint64_t static Int._forceBridgeFromObjectiveC(_:result:)()
{
  return static Int._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._conditionallyBridgeFromObjectiveC(_:result:)()
{
  return static Int._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t static Int._unconditionallyBridgeFromObjectiveC(_:)()
{
  return static Int._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t RandomAccessCollection<>.indices.getter()
{
  return RandomAccessCollection<>.indices.getter();
}

uint64_t dispatch thunk of Collection.startIndex.getter()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t Collection<>.isSingleUncommittedReminder.getter()
{
  return Collection<>.isSingleUncommittedReminder.getter();
}

uint64_t Collection.single.getter()
{
  return Collection.single.getter();
}

uint64_t Collection<>.contains(hashtagOfType:)()
{
  return Collection<>.contains(hashtagOfType:)();
}

uint64_t dispatch thunk of Collection.count.getter()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t dispatch thunk of Collection.index(after:)()
{
  return dispatch thunk of Collection.index(after:)();
}

uint64_t dispatch thunk of Collection.isEmpty.getter()
{
  return dispatch thunk of Collection.isEmpty.getter();
}

uint64_t dispatch thunk of Collection.distance(from:to:)()
{
  return dispatch thunk of Collection.distance(from:to:)();
}

uint64_t dispatch thunk of Collection.endIndex.getter()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t dispatch thunk of Collection.formIndex(after:)()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t Collection.firstIndex(where:)()
{
  return Collection.firstIndex(where:)();
}

uint64_t Collection.first.getter()
{
  return Collection.first.getter();
}

uint64_t Collection.isEmpty.getter()
{
  return Collection.isEmpty.getter();
}

uint64_t dispatch thunk of Collection.subscript.getter()
{
  return dispatch thunk of Collection.subscript.getter();
}

uint64_t dispatch thunk of Collection.subscript.read()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t RangeReplaceableCollection.removeSubrange(_:)()
{
  return RangeReplaceableCollection.removeSubrange(_:)();
}

uint64_t RangeReplaceableCollection.insert<A>(contentsOf:at:)()
{
  return RangeReplaceableCollection.insert<A>(contentsOf:at:)();
}

uint64_t RangeReplaceableCollection<>.removeLast()()
{
  return RangeReplaceableCollection<>.removeLast()();
}

uint64_t Range.contains(_:)()
{
  return Range.contains(_:)();
}

uint64_t static UITableViewHeaderFooterView.headerFooterViewIdentifier.getter()
{
  return static UITableViewHeaderFooterView.headerFooterViewIdentifier.getter();
}

uint64_t UITableViewHeaderFooterView.backgroundConfiguration.setter()
{
  return UITableViewHeaderFooterView.backgroundConfiguration.setter();
}

uint64_t REMAccount.listSharingUIType.getter()
{
  return REMAccount.listSharingUIType.getter();
}

Swift::Bool __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> REMAccount.isConsideredEmpty()()
{
  return REMAccount.isConsideredEmpty()();
}

uint64_t static SGRecordId.createFrom(data:)()
{
  return static SGRecordId.createFrom(data:)();
}

uint64_t UIDragItem.localObject<A>(ofType:forKey:)()
{
  return UIDragItem.localObject<A>(ofType:forKey:)();
}

uint64_t UIDragItem.setLocalObject(_:forKey:)()
{
  return UIDragItem.setLocalObject(_:forKey:)();
}

uint64_t REMObjectID.codable.getter()
{
  return REMObjectID.codable.getter();
}

uint64_t REMReminder.parentReminderID.getter()
{
  return REMReminder.parentReminderID.getter();
}

uint64_t REMReminder.isSiriFoundInApps.getter()
{
  return REMReminder.isSiriFoundInApps.getter();
}

uint64_t REMReminder.ttrFlaggedContext.getter()
{
  return REMReminder.ttrFlaggedContext.getter();
}

uint64_t REMReminder.ttrHashtagContext.getter()
{
  return REMReminder.ttrHashtagContext.getter();
}

uint64_t REMReminder.accountCapabilities.getter()
{
  return REMReminder.accountCapabilities.getter();
}

uint64_t REMReminder.ttrAssignmentContext.getter()
{
  return REMReminder.ttrAssignmentContext.getter();
}

uint64_t REMReminder.ttrList.getter()
{
  return REMReminder.ttrList.getter();
}

uint64_t REMReminder.canAddURL.getter()
{
  return REMReminder.canAddURL.getter();
}

uint64_t REMReminder.codable.getter()
{
  return REMReminder.codable.getter();
}

uint64_t type metadata accessor for REMTemplate.PublicLinkStatus()
{
  return type metadata accessor for REMTemplate.PublicLinkStatus();
}

uint64_t REMTemplate.publicLinkStatus.getter()
{
  return REMTemplate.publicLinkStatus.getter();
}

uint64_t UIResponder.firstResponder.getter()
{
  return UIResponder.firstResponder.getter();
}

uint64_t UITableView.dequeueReusableHeaderFooterView<A>(_:)()
{
  return UITableView.dequeueReusableHeaderFooterView<A>(_:)();
}

uint64_t UITableView.orderedVisibleCell.getter()
{
  return UITableView.orderedVisibleCell.getter();
}

uint64_t UITableView.dequeueReusableCell<A>(_:indexPath:)()
{
  return UITableView.dequeueReusableCell<A>(_:indexPath:)();
}

uint64_t UITableView.dequeueReusableCell<A>(_:)()
{
  return UITableView.dequeueReusableCell<A>(_:)();
}

Swift::Void __swiftcall UITableView.fixUpBackgroundColorLoadedFromNibIfNeeded_workaroundRdar108920406()()
{
}

uint64_t UITextInput<>.ttrBeginEditing()()
{
  return UITextInput<>.ttrBeginEditing()();
}

uint64_t UITextInput<>.textRangeForEndOfDocument.getter()
{
  return UITextInput<>.textRangeForEndOfDocument.getter();
}

uint64_t protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartList()
{
  return protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartList();
}

uint64_t type metadata accessor for REMSmartList.NonCustom()
{
  return type metadata accessor for REMSmartList.NonCustom();
}

uint64_t UIKeyCommand.inputReturn.unsafeMutableAddressor()
{
  return UIKeyCommand.inputReturn.unsafeMutableAddressor();
}

uint64_t UIKeyCommand.inputBackspace.unsafeMutableAddressor()
{
  return UIKeyCommand.inputBackspace.unsafeMutableAddressor();
}

uint64_t UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)()
{
  return UIKeyCommand.init(title:image:action:input:modifierFlags:propertyList:alternates:discoverabilityTitle:attributes:state:)();
}

uint64_t UIPasteboard.setObjects<A>(_:)()
{
  return UIPasteboard.setObjects<A>(_:)();
}

uint64_t UIScrollView.bottomContentInset(forAvoidingKeyboardFrame:)()
{
  return UIScrollView.bottomContentInset(forAvoidingKeyboardFrame:)();
}

Swift::Void __swiftcall UIScrollView.scrollRectToFullyVisibleAnimated(_:)(Swift::OpaquePointer a1)
{
}

uint64_t UIScrollView.iterativelyScrollRectToFullyVisible(with:)()
{
  return UIScrollView.iterativelyScrollRectToFullyVisible(with:)();
}

uint64_t NSUndoManager.registerUndo(handler:)()
{
  return NSUndoManager.registerUndo(handler:)();
}

uint64_t NSUndoManager.registerUndo(draining:groupSavesInto:)()
{
  return NSUndoManager.registerUndo(draining:groupSavesInto:)();
}

uint64_t NSUndoManager.observeChanges<A>(target:handler:)()
{
  return NSUndoManager.observeChanges<A>(target:handler:)();
}

uint64_t static NSUndoManager.removeObserver(with:)()
{
  return static NSUndoManager.removeObserver(with:)();
}

Swift::Void __swiftcall NSUndoManager.addUndoGroupBoundary()()
{
}

uint64_t static os_log_type_t.info.getter()
{
  return static os_log_type_t.info.getter();
}

uint64_t static os_log_type_t.debug.getter()
{
  return static os_log_type_t.debug.getter();
}

uint64_t static os_log_type_t.error.getter()
{
  return static os_log_type_t.error.getter();
}

uint64_t static os_log_type_t.fault.getter()
{
  return static os_log_type_t.fault.getter();
}

uint64_t static os_log_type_t.default.getter()
{
  return static os_log_type_t.default.getter();
}

uint64_t ACAccountStore.MigrationSet.eligibleForAutoCloudKitMigration.getter()
{
  return ACAccountStore.MigrationSet.eligibleForAutoCloudKitMigration.getter();
}

uint64_t ACAccountStore.MigrationSet.calDAV.getter()
{
  return ACAccountStore.MigrationSet.calDAV.getter();
}

uint64_t type metadata accessor for ACAccountStore.MigrationSet()
{
  return type metadata accessor for ACAccountStore.MigrationSet();
}

uint64_t ACAccountStore.rem_migrationSets()()
{
  return ACAccountStore.rem_migrationSets()();
}

uint64_t static CNContactStore.requestContactsAuthorizationIfNeeded()()
{
  return static CNContactStore.requestContactsAuthorizationIfNeeded()();
}

uint64_t NSItemProvider.loadObject<A>(ofType:)()
{
  return NSItemProvider.loadObject<A>(ofType:)();
}

uint64_t NSItemProvider.registerCKShare(container:allowedSharingOptions:preparationHandler:)()
{
  return NSItemProvider.registerCKShare(container:allowedSharingOptions:preparationHandler:)();
}

Swift::Void __swiftcall NSItemProvider.registerCKShare(_:container:allowedSharingOptions:)(CKShare _, CKContainer container, CKAllowedSharingOptions allowedSharingOptions)
{
}

uint64_t NSUserActivity.ttrUserActivityType.getter()
{
  return NSUserActivity.ttrUserActivityType.getter();
}

uint64_t NSUserActivity.setPayload(_:)()
{
  return NSUserActivity.setPayload(_:)();
}

uint64_t NSUserActivity.listPayload(with:)()
{
  return NSUserActivity.listPayload(with:)();
}

uint64_t NSUserActivity.ttrDescription.getter()
{
  return NSUserActivity.ttrDescription.getter();
}

uint64_t static NSUserActivity.forStoringListPayload(for:)()
{
  return static NSUserActivity.forStoringListPayload(for:)();
}

uint64_t NSUserActivity.windowSceneRestorationPayload.getter()
{
  return NSUserActivity.windowSceneRestorationPayload.getter();
}

uint64_t static NSUserActivity.forStoringCustomSmartListPayload(for:)()
{
  return static NSUserActivity.forStoringCustomSmartListPayload(for:)();
}

uint64_t static NSUserActivity.forStoringWindowSceneRestorationPayload()()
{
  return static NSUserActivity.forStoringWindowSceneRestorationPayload()();
}

uint64_t static NSUserActivity.forStoringListPayloadForSmartListsAndSearch()()
{
  return static NSUserActivity.forStoringListPayloadForSmartListsAndSearch()();
}

uint64_t UIPointerStyle.init(effect:shape:)()
{
  return UIPointerStyle.init(effect:shape:)();
}

uint64_t REMSortingStyle.dataViewSortingStyle.getter()
{
  return REMSortingStyle.dataViewSortingStyle.getter();
}

Swift::Void __swiftcall REMUserActivity.launch()()
{
}

uint64_t static UIAccessibility.ttriIsVoiceControlRunning.getter()
{
  return static UIAccessibility.ttriIsVoiceControlRunning.getter();
}

uint64_t static UIAccessibility.ttriIsAccessibilityRunning.getter()
{
  return static UIAccessibility.ttriIsAccessibilityRunning.getter();
}

uint64_t static UIAccessibility.ttriIsFullKeyboardAccessRunning.getter()
{
  return static UIAccessibility.ttriIsFullKeyboardAccessRunning.getter();
}

uint64_t static UIAccessibility.addButtonShapesStatusChangeObserver(_:selector:)()
{
  return static UIAccessibility.addButtonShapesStatusChangeObserver(_:selector:)();
}

uint64_t static UIAccessibility.addAccessibilityStatusChangeObserver(_:selector:)()
{
  return static UIAccessibility.addAccessibilityStatusChangeObserver(_:selector:)();
}

uint64_t static UIAccessibility.removeButtonShapesStatusChangeObserver(_:)()
{
  return static UIAccessibility.removeButtonShapesStatusChangeObserver(_:)();
}

uint64_t static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)()
{
  return static UIAccessibility.removeAccessibilityStatusChangeObserver(_:)();
}

uint64_t UIBarButtonItem.cursorHeightForCustomView.unsafeMutableAddressor()
{
  return UIBarButtonItem.cursorHeightForCustomView.unsafeMutableAddressor();
}

uint64_t UIBarButtonItem.ttr_view.getter()
{
  return UIBarButtonItem.ttr_view.getter();
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItem systemItem, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)UIBarButtonItem.init(systemItem:primaryAction:menu:)(systemItem, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

UIBarButtonItem __swiftcall UIBarButtonItem.init(title:image:primaryAction:menu:)(Swift::String_optional title, UIImage_optional image, UIAction_optional primaryAction, UIMenu_optional menu)
{
  return (UIBarButtonItem)UIBarButtonItem.init(title:image:primaryAction:menu:)(title.value._countAndFlagsBits, title.value._object, image.value.super.isa, *(void *)&image.is_nil, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil, menu.value.super.super.isa, *(void *)&menu.is_nil);
}

uint64_t UIDropOperation.debugHUDInfo.getter()
{
  return UIDropOperation.debugHUDInfo.getter();
}

uint64_t UIDropOperation.isCancelOrForbidden.getter()
{
  return UIDropOperation.isCancelOrForbidden.getter();
}

uint64_t UINavigationBar.apply(_:)()
{
  return UINavigationBar.apply(_:)();
}

uint64_t UIPointerRegion.init(rect:identifier:)()
{
  return UIPointerRegion.init(rect:identifier:)();
}

Swift::Void __swiftcall UITableViewCell.ttr_registerForRemindersListCellBackgroundConfiguration()()
{
}

uint64_t static UITableViewCell.tableViewCellIdentifier.getter()
{
  return static UITableViewCell.tableViewCellIdentifier.getter();
}

uint64_t UITableViewCell.setSeparatorInsetType(_:)()
{
  return UITableViewCell.setSeparatorInsetType(_:)();
}

uint64_t UITableViewCell.contentConfiguration.setter()
{
  return UITableViewCell.contentConfiguration.setter();
}

uint64_t UITextDraggable<>.disableDragInteraction_rdar93793341()()
{
  return UITextDraggable<>.disableDragInteraction_rdar93793341()();
}

Swift::Bool __swiftcall CLCircularRegion.overlaps(_:)(CLCircularRegion a1)
{
  return CLCircularRegion.overlaps(_:)(a1.super.super.isa);
}

uint64_t NSParagraphStyle.withMutations(_:)()
{
  return NSParagraphStyle.withMutations(_:)();
}

Swift::Void __swiftcall NUIContainerView.setArrangedSubviewsIfChanged(_:)(Swift::OpaquePointer a1)
{
}

uint64_t NUIContainerView.ttr_pointIncludingExpandedHitTestInsets(inside:with:)()
{
  return NUIContainerView.ttr_pointIncludingExpandedHitTestInsets(inside:with:)();
}

uint64_t REMSmartListType.title.getter()
{
  return REMSmartListType.title.getter();
}

uint64_t REMSmartListType.longTitle.getter()
{
  return REMSmartListType.longTitle.getter();
}

uint64_t UICollectionView.visibleCellForItem(at:)()
{
  return UICollectionView.visibleCellForItem(at:)();
}

uint64_t UICollectionView.CellRegistration.init(handler:)()
{
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t UICollectionView.SupplementaryRegistration.init(elementKind:handler:)()
{
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)()
{
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

uint64_t UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t UIViewController.topPresentedViewController.getter()
{
  return UIViewController.topPresentedViewController.getter();
}

uint64_t UIViewController.effectiveNavigationControllerForBars.getter()
{
  return UIViewController.effectiveNavigationControllerForBars.getter();
}

uint64_t UIViewController.isIPadIdiom.getter()
{
  return UIViewController.isIPadIdiom.getter();
}

uint64_t UIViewController.futureForPresenting(_:animated:)()
{
  return UIViewController.futureForPresenting(_:animated:)();
}

uint64_t UIViewController.effectiveNavigationBar.getter()
{
  return UIViewController.effectiveNavigationBar.getter();
}

Swift::Void __swiftcall UIViewController.endFirstResponderEditing()()
{
}

uint64_t UIViewController.canPresentDCIDrillinPopover(withAnchor:)()
{
  return UIViewController.canPresentDCIDrillinPopover(withAnchor:)();
}

uint64_t UIViewController.deselectRowsAlongsideTransition(for:animated:)()
{
  return UIViewController.deselectRowsAlongsideTransition(for:animated:)();
}

uint64_t UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)()
{
  return UIViewController.setupForAdaptivePopoverPresentation(anchoredAt:)();
}

Swift::Void __swiftcall UIViewController.scrollContentScrollViewToAvoidPartiallyCollapsedNavBarIfNeeded(_:animated:wantsDispatchAsync:)(UIScrollView _, Swift::Bool animated, Swift::Bool wantsDispatchAsync)
{
}

uint64_t UIViewController.registerForTraitChanges<A>(_:handler:)()
{
  return UIViewController.registerForTraitChanges<A>(_:handler:)();
}

uint64_t UIViewController.unregisterForTraitChanges(_:)()
{
  return UIViewController.unregisterForTraitChanges(_:)();
}

uint64_t OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerOptions()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t OS_dispatch_queue.SchedulerTimeType.Stride.init(integerLiteral:)()
{
  return OS_dispatch_queue.SchedulerTimeType.Stride.init(integerLiteral:)();
}

uint64_t static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)()
{
  return static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t static OS_dispatch_queue.main.getter()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t OS_dispatch_queue.async(group:qos:flags:execute:)()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t static OS_dispatch_queue.global(qos:)()
{
  return static OS_dispatch_queue.global(qos:)();
}

uint64_t REMAlarmProximity.localizedLabelFormatString.getter()
{
  return REMAlarmProximity.localizedLabelFormatString.getter();
}

uint64_t UIAlertController.init(actionSheetOrAlertWithTitle:message:popoverAnchor:canCancel:)()
{
  return UIAlertController.init(actionSheetOrAlertWithTitle:message:popoverAnchor:canCancel:)();
}

uint64_t UIListContentView.configuration.setter()
{
  return UIListContentView.configuration.setter();
}

uint64_t UIListContentView.init(configuration:)()
{
  return UIListContentView.init(configuration:)();
}

UITraitCollection __swiftcall UITraitCollection.modifiedToOnlyDarkenColorsForIncreaseContrast()()
{
  return (UITraitCollection)UITraitCollection.modifiedToOnlyDarkenColorsForIncreaseContrast()();
}

uint64_t UITraitCollection.modifyingTraits(_:)()
{
  return UITraitCollection.modifyingTraits(_:)();
}

uint64_t static UITraitCollection.systemTraitsAffectingColorAppearance.getter()
{
  return static UITraitCollection.systemTraitsAffectingColorAppearance.getter();
}

uint64_t static NSAttributedString.formattedString(format:formatAttributes:attributedStringsToInsert:)()
{
  return static NSAttributedString.formattedString(format:formatAttributes:attributedStringsToInsert:)();
}

uint64_t static NSAttributedString.formattedString(format:formatAttributes:content:contentAttributes:)()
{
  return static NSAttributedString.formattedString(format:formatAttributes:content:contentAttributes:)();
}

uint64_t NSAttributedString.withMutations(_:)()
{
  return NSAttributedString.withMutations(_:)();
}

NSAttributedString_optional __swiftcall NSAttributedString.addingStrikethrough(color:)(UIColor_optional color)
{
  Swift::Int v1 = (objc_class *)NSAttributedString.addingStrikethrough(color:)(color.value.super.isa, *(void *)&color.is_nil);
  result.value.super.Class isa = v1;
  result.is_nil = v2;
  return result;
}

NSAttributedString_optional __swiftcall NSAttributedString.replacePlaceholdersWithSymbols(placeholderToSymbolNames:tintColor:)(Swift::OpaquePointer placeholderToSymbolNames, UIColor tintColor)
{
  Swift::Bool v2 = (objc_class *)NSAttributedString.replacePlaceholdersWithSymbols(placeholderToSymbolNames:tintColor:)(placeholderToSymbolNames._rawValue, tintColor.super.isa);
  result.value.super.Class isa = v2;
  result.is_nil = v3;
  return result;
}

uint64_t NSAttributedString.ttrAccessibilityConvertedToHaveVoiceOverReadableTagList(withIncludedTags:andExcludedTags:)()
{
  return NSAttributedString.ttrAccessibilityConvertedToHaveVoiceOverReadableTagList(withIncludedTags:andExcludedTags:)();
}

uint64_t REMListBadgeEmblem.name.getter()
{
  return REMListBadgeEmblem.name.getter();
}

uint64_t REMListBadgeEmblem.image.getter()
{
  return REMListBadgeEmblem.image.getter();
}

uint64_t UIFocusEnvironment.contains(_:)()
{
  return UIFocusEnvironment.contains(_:)();
}

uint64_t type metadata accessor for REMSmartListSection.PredefinedSectionType.Today()
{
  return type metadata accessor for REMSmartListSection.PredefinedSectionType.Today();
}

uint64_t type metadata accessor for NSNotificationCenter.Publisher()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t NSNotificationCenter.publisher(for:object:)()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)()
{
  return NSNotificationCenter.ttr_addObserver(forName:object:queue:using:)();
}

uint64_t static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)()
{
  return static UIBarButtonItemGroup.optionalGroup(customizationIdentifier:isInDefaultCustomization:representativeItem:items:)();
}

uint64_t UICollectionViewCell.contentConfiguration.getter()
{
  return UICollectionViewCell.contentConfiguration.getter();
}

uint64_t UICollectionViewCell.contentConfiguration.setter()
{
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t UICollectionViewCell.backgroundConfiguration.getter()
{
  return UICollectionViewCell.backgroundConfiguration.getter();
}

uint64_t UICollectionViewCell.backgroundConfiguration.setter()
{
  return UICollectionViewCell.backgroundConfiguration.setter();
}

uint64_t static HLPHelpViewController.viewController(forShowing:)()
{
  return static HLPHelpViewController.viewController(forShowing:)();
}

uint64_t NSAttributedStringKey.ttriAccessibilityLowPitch.unsafeMutableAddressor()
{
  return NSAttributedStringKey.ttriAccessibilityLowPitch.unsafeMutableAddressor();
}

uint64_t NSAttributedStringKey.ttrHashtagSelectionDescriptionEmphasized.unsafeMutableAddressor()
{
  return NSAttributedStringKey.ttrHashtagSelectionDescriptionEmphasized.unsafeMutableAddressor();
}

uint64_t static NSItemProviderWriting.canWriteTypeIdentifier(_:)()
{
  return static NSItemProviderWriting.canWriteTypeIdentifier(_:)();
}

uint64_t REMLocalizedTimeOfDay.creationHour.getter()
{
  return REMLocalizedTimeOfDay.creationHour.getter();
}

uint64_t REMReminderChangeItem.ttrFlaggedContext.getter()
{
  return REMReminderChangeItem.ttrFlaggedContext.getter();
}

uint64_t REMReminderChangeItem.ttrHashtagContext.getter()
{
  return REMReminderChangeItem.ttrHashtagContext.getter();
}

uint64_t REMReminderChangeItem.ttrAssignmentContext.getter()
{
  return REMReminderChangeItem.ttrAssignmentContext.getter();
}

uint64_t REMReminderChangeItem.ttrList.getter()
{
  return REMReminderChangeItem.ttrList.getter();
}

uint64_t REMReminderChangeItem.canAddURL.getter()
{
  return REMReminderChangeItem.canAddURL.getter();
}

uint64_t REMStructuredLocation.clCircularRegion.getter()
{
  return REMStructuredLocation.clCircularRegion.getter();
}

uint64_t REMStructuredLocation.init(title:circularRegion:placemark:)()
{
  return REMStructuredLocation.init(title:circularRegion:placemark:)();
}

uint64_t UIContentSizeCategory.isAccessibilityCategory.getter()
{
  return UIContentSizeCategory.isAccessibilityCategory.getter();
}

Swift::Void __swiftcall LSApplicationWorkspace.showDefaultListInSettings()()
{
}

uint64_t LSApplicationWorkspace.open(universalLink:)()
{
  return LSApplicationWorkspace.open(universalLink:)();
}

uint64_t protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartListChangeItem()
{
  return protocol witness for TTRListProtocol.displayName.getter in conformance REMSmartListChangeItem();
}

uint64_t CKRecordKeyValueSetting.subscript.setter()
{
  return CKRecordKeyValueSetting.subscript.setter();
}

uint64_t NSDirectionalEdgeInsets.resolved(for:)()
{
  return NSDirectionalEdgeInsets.resolved(for:)();
}

UIPopoverArrowDirection __swiftcall UIPopoverArrowDirection.addingRTLFallback()()
{
  return UIPopoverArrowDirection.addingRTLFallback()();
}

uint64_t UICollectionViewListCell.accessories.getter()
{
  return UICollectionViewListCell.accessories.getter();
}

uint64_t UICollectionViewListCell.accessories.setter()
{
  return UICollectionViewListCell.accessories.setter();
}

uint64_t UICollectionViewListCell.defaultContentConfiguration()()
{
  return UICollectionViewListCell.defaultContentConfiguration()();
}

uint64_t static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter()
{
  return static UNUserNotificationCenter.ttr_unUserNotificationCenter.getter();
}

Swift::Void __swiftcall NSMutableAttributedString.formatHashtags(with:)(Swift::OpaquePointer with)
{
}

Swift::Void __swiftcall NSMutableAttributedString.replace(placeholder:with:)(Swift::String placeholder, UIImage with)
{
}

uint64_t REMSmartListCustomContext.filter.getter()
{
  return REMSmartListCustomContext.filter.getter();
}

uint64_t UIApplicationShortcutItem.actionURL.getter()
{
  return UIApplicationShortcutItem.actionURL.getter();
}

uint64_t UICollectionViewDropIntent.debugHUDInfo.getter()
{
  return UICollectionViewDropIntent.debugHUDInfo.getter();
}

uint64_t REMAlarmVehicleTriggerEvent.localizedDescription.getter()
{
  return REMAlarmVehicleTriggerEvent.localizedDescription.getter();
}

uint64_t _SWCollaborationBarButtonItem.setDetailViewListContent<A>(_:)()
{
  return _SWCollaborationBarButtonItem.setDetailViewListContent<A>(_:)();
}

uint64_t UIPopoverPresentationController.setPopoverAnchorSource(_:)()
{
  return UIPopoverPresentationController.setPopoverAnchorSource(_:)();
}

uint64_t REMReminderFlaggedContextChangeItem.isFlagged.getter()
{
  return REMReminderFlaggedContextChangeItem.isFlagged.getter();
}

uint64_t REMSmartListCustomContextChangeItem.filter.getter()
{
  return REMSmartListCustomContextChangeItem.filter.getter();
}

uint64_t REMSmartListCustomContextChangeItem.filter.setter()
{
  return REMSmartListCustomContextChangeItem.filter.setter();
}

uint64_t static UICollectionViewCompositionalLayout.list(using:)()
{
  return static UICollectionViewCompositionalLayout.list(using:)();
}

uint64_t CGRect.bottomLeftPoint(isFlipped:)()
{
  return CGRect.bottomLeftPoint(isFlipped:)();
}

uint64_t CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)()
{
  return CGRect.flippedForRTLIfNeeded(for:inContainerWithWidth:)();
}

uint64_t CGRect.center.getter()
{
  return CGRect.center.getter();
}

uint64_t CGSize.aspectFitting(boundingSize:)()
{
  return CGSize.aspectFitting(boundingSize:)();
}

uint64_t CGSize.nuiUseDefault.unsafeMutableAddressor()
{
  return CGSize.nuiUseDefault.unsafeMutableAddressor();
}

UIFont __swiftcall UIFont.withBoldTrait()()
{
  return (UIFont)UIFont.withBoldTrait()();
}

uint64_t static UIFont.roundedBodyFont(contentSizeCategory:maximumContentSizeCategory:weight:)()
{
  return static UIFont.roundedBodyFont(contentSizeCategory:maximumContentSizeCategory:weight:)();
}

uint64_t static UIFont.roundedBodyFont.getter()
{
  return static UIFont.roundedBodyFont.getter();
}

uint64_t static UIFont.roundedCustomFont(textStyle:contentSizeCategory:maximumContentSizeCategory:weight:)()
{
  return static UIFont.roundedCustomFont(textStyle:contentSizeCategory:maximumContentSizeCategory:weight:)();
}

uint64_t static UIFont.roundedSystemFont(ofSize:weight:)()
{
  return static UIFont.roundedSystemFont(ofSize:weight:)();
}

uint64_t static UIFont.roundedSystemFont.getter()
{
  return static UIFont.roundedSystemFont.getter();
}

UIFont __swiftcall UIFont.withRoundedDesign()()
{
  return (UIFont)UIFont.withRoundedDesign()();
}

uint64_t static UIFont.roundedFootnoteFont.getter()
{
  return static UIFont.roundedFootnoteFont.getter();
}

uint64_t static UIFont.roundedHeadlineFont.getter()
{
  return static UIFont.roundedHeadlineFont.getter();
}

uint64_t static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)()
{
  return static UIFont.preferredRoundedFont(forTextStyle:customWeight:compatibleWith:)();
}

uint64_t static UIFont.roundedSubheadlineFont.getter()
{
  return static UIFont.roundedSubheadlineFont.getter();
}

uint64_t static UIFont.roundedBodyEmphasizedFont.getter()
{
  return static UIFont.roundedBodyEmphasizedFont.getter();
}

uint64_t static UIFont.roundedNavigationTitleFont.getter()
{
  return static UIFont.roundedNavigationTitleFont.getter();
}

uint64_t static UIFont.roundedSubheadlineSemiboldFont.getter()
{
  return static UIFont.roundedSubheadlineSemiboldFont.getter();
}

uint64_t static UIFont.roundedLargeNavigationTitleFont.getter()
{
  return static UIFont.roundedLargeNavigationTitleFont.getter();
}

UIMenu __swiftcall UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t UIView.ancestorView<A>(ofType:)()
{
  return UIView.ancestorView<A>(ofType:)();
}

uint64_t UIView.ancestorViews(includingSelf:)()
{
  return UIView.ancestorViews(includingSelf:)();
}

UIImage_optional __swiftcall UIView.snapshotImage()()
{
  uint64_t v0 = (objc_class *)UIView.snapshotImage()();
  result.value.super.Class isa = v0;
  result.is_nil = v1;
  return result;
}

uint64_t UIView.ttr_displayScale.getter()
{
  return UIView.ttr_displayScale.getter();
}

uint64_t UIView.constraintsEqualTo(_:edges:)()
{
  return UIView.constraintsEqualTo(_:edges:)();
}

uint64_t UIView.firstDescendantView<A>(ofType:passing:)()
{
  return UIView.firstDescendantView<A>(ofType:passing:)();
}

uint64_t static UIView.setContentPriorities(_:for:)()
{
  return static UIView.setContentPriorities(_:for:)();
}

uint64_t UIView.setAssociatedAppEntity<A>(entityType:identifier:)()
{
  return UIView.setAssociatedAppEntity<A>(entityType:identifier:)();
}

uint64_t UIView.firstResponderDescendant.getter()
{
  return UIView.firstResponderDescendant.getter();
}

Swift::Void __swiftcall UIView.removeAssociatedAppEntity()()
{
}

uint64_t UIView.ttr_userInterfaceLayoutDirection.getter()
{
  return UIView.ttr_userInterfaceLayoutDirection.getter();
}

uint64_t UIView.registerForTraitChanges<A>(_:handler:)()
{
  return UIView.registerForTraitChanges<A>(_:handler:)();
}

uint64_t static CKShare.SystemFieldKey.thumbnailImageData.getter()
{
  return static CKShare.SystemFieldKey.thumbnailImageData.getter();
}

uint64_t REMList.ttrGroceryContext.getter()
{
  return REMList.ttrGroceryContext.getter();
}

uint64_t REMList.accountCapabilities.getter()
{
  return REMList.accountCapabilities.getter();
}

uint64_t static UIColor.ttrLinkColor.getter()
{
  return static UIColor.ttrLinkColor.getter();
}

uint64_t static UIColor.ttrLabelColor.getter()
{
  return static UIColor.ttrLabelColor.getter();
}

uint64_t static UIColor.ttrSecondaryLabelColor.getter()
{
  return static UIColor.ttrSecondaryLabelColor.getter();
}

uint64_t UIColor.emojiBadgeHighlightColor.unsafeMutableAddressor()
{
  return UIColor.emojiBadgeHighlightColor.unsafeMutableAddressor();
}

uint64_t UIColor.emojiBadgeSelectionBackgroundColor.unsafeMutableAddressor()
{
  return UIColor.emojiBadgeSelectionBackgroundColor.unsafeMutableAddressor();
}

uint64_t static UIColor.ttr_color(named:in:)()
{
  return static UIColor.ttr_color(named:in:)();
}

uint64_t static UIImage.largeSystemImage(named:)()
{
  return static UIImage.largeSystemImage(named:)();
}

uint64_t static UIImage.ttr_systemSymbolImage(named:)()
{
  return static UIImage.ttr_systemSymbolImage(named:)();
}

uint64_t static UIImage.transformOptionalValue(_:)()
{
  return static UIImage.transformOptionalValue(_:)();
}

uint64_t static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)()
{
  return static UIImage.ttrAccessibilityCustomActionImage(forSymbolName:)();
}

uint64_t static UIImage.image(color:size:)()
{
  return static UIImage.image(color:size:)();
}

uint64_t static UIImage.ttr_image(named:in:)()
{
  return static UIImage.ttr_image(named:in:)();
}

uint64_t NSBundle.remindersUICoreResource.unsafeMutableAddressor()
{
  return NSBundle.remindersUICoreResource.unsafeMutableAddressor();
}

NSNumber __swiftcall NSNumber.init(integerLiteral:)(Swift::Int integerLiteral)
{
  return (NSNumber)NSNumber.init(integerLiteral:)(integerLiteral);
}

Swift::Int __swiftcall NSObject._rawHashValue(seed:)(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t static NSObject.== infix(_:_:)()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t NSObject.hash(into:)()
{
  return NSObject.hash(into:)();
}

uint64_t NSString.init(stringLiteral:)()
{
  return NSString.init(stringLiteral:)();
}

uint64_t REMStore.fetchReminder(notificationIdentifier:includingDueDateDeltaAlerts:)()
{
  return REMStore.fetchReminder(notificationIdentifier:includingDueDateDeltaAlerts:)();
}

uint64_t REMStore.createPublicContentPreview(of:with:completionHandlerQueue:completion:)()
{
  return REMStore.createPublicContentPreview(of:with:completionHandlerQueue:completion:)();
}

uint64_t REMStore.fetchOrCreateNonCustomSmartList(withType:)()
{
  return REMStore.fetchOrCreateNonCustomSmartList(withType:)();
}

uint64_t UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t UIButton.Configuration.preferredSymbolConfigurationForImage.setter()
{
  return UIButton.Configuration.preferredSymbolConfigurationForImage.setter();
}

uint64_t UIButton.Configuration.background.modify()
{
  return UIButton.Configuration.background.modify();
}

uint64_t UIButton.Configuration.background.setter()
{
  return UIButton.Configuration.background.setter();
}

uint64_t static UIButton.Configuration.borderless()()
{
  return static UIButton.Configuration.borderless()();
}

uint64_t UIButton.Configuration.buttonSize.setter()
{
  return UIButton.Configuration.buttonSize.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.CornerStyle()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t UIButton.Configuration.cornerStyle.setter()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t UIButton.Configuration.imagePadding.setter()
{
  return UIButton.Configuration.imagePadding.setter();
}

uint64_t UIButton.Configuration.contentInsets.setter()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.TitleAlignment()
{
  return type metadata accessor for UIButton.Configuration.TitleAlignment();
}

uint64_t UIButton.Configuration.imagePlacement.setter()
{
  return UIButton.Configuration.imagePlacement.setter();
}

uint64_t UIButton.Configuration.titleAlignment.setter()
{
  return UIButton.Configuration.titleAlignment.setter();
}

uint64_t UIButton.Configuration.attributedTitle.setter()
{
  return UIButton.Configuration.attributedTitle.setter();
}

uint64_t UIButton.Configuration.imageReservation.setter()
{
  return UIButton.Configuration.imageReservation.setter();
}

uint64_t UIButton.Configuration.baseBackgroundColor.setter()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t UIButton.Configuration.baseForegroundColor.setter()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t UIButton.Configuration.titleTextAttributesTransformer.setter()
{
  return UIButton.Configuration.titleTextAttributesTransformer.setter();
}

uint64_t type metadata accessor for UIButton.Configuration.Size()
{
  return type metadata accessor for UIButton.Configuration.Size();
}

uint64_t UIButton.Configuration.image.setter()
{
  return UIButton.Configuration.image.setter();
}

uint64_t static UIButton.Configuration.plain()()
{
  return static UIButton.Configuration.plain()();
}

uint64_t UIButton.Configuration.title.getter()
{
  return UIButton.Configuration.title.getter();
}

uint64_t UIButton.Configuration.title.setter()
{
  return UIButton.Configuration.title.setter();
}

uint64_t static UIButton.Configuration.filled()()
{
  return static UIButton.Configuration.filled()();
}

uint64_t type metadata accessor for UIButton.Configuration()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t UIButton.init(configuration:primaryAction:)()
{
  return UIButton.init(configuration:primaryAction:)();
}

uint64_t UIButton.configuration.getter()
{
  return UIButton.configuration.getter();
}

uint64_t UIButton.configuration.setter()
{
  return UIButton.configuration.setter();
}

uint64_t UIButton.pointerStyleProvider.setter()
{
  return UIButton.pointerStyleProvider.setter();
}

UIButton __swiftcall UIButton.init(type:primaryAction:)(UIButtonType type, UIAction_optional primaryAction)
{
  return (UIButton)UIButton.init(type:primaryAction:)(type, primaryAction.value.super.super.isa, *(void *)&primaryAction.is_nil);
}

uint64_t ACAccount.rem_childCalDAVAccountEnabledForReminders.getter()
{
  return ACAccount.rem_childCalDAVAccountEnabledForReminders.getter();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerOptions()
{
  return type metadata accessor for NSRunLoop.SchedulerOptions();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)()
{
  return static NSRunLoop.SchedulerTimeType.Stride.milliseconds(_:)();
}

uint64_t static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)()
{
  return static NSRunLoop.SchedulerTimeType.Stride.seconds(_:)();
}

uint64_t type metadata accessor for NSRunLoop.SchedulerTimeType.Stride()
{
  return type metadata accessor for NSRunLoop.SchedulerTimeType.Stride();
}

uint64_t UIToolbar.toolbarHeightAdjustment_workaround60289707.getter()
{
  return UIToolbar.toolbarHeightAdjustment_workaround60289707.getter();
}

uint64_t Optional.descriptionOrNil.getter()
{
  return Optional.descriptionOrNil.getter();
}

uint64_t type metadata accessor for Optional()
{
  return type metadata accessor for Optional();
}

Swift::String __swiftcall Substring.lowercased()()
{
  uint64_t v0 = Substring.lowercased()();
  result._object = v1;
  result._uint64_t countAndFlagsBits = v0;
  return result;
}

uint64_t dispatch thunk of IteratorProtocol.next()()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t UnsafeMutableRawBufferPointer.copyMemory(from:)()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t UnsafeMutableRawBufferPointer.subscript.setter()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t StringProtocol.components<A>(separatedBy:)()
{
  return StringProtocol.components<A>(separatedBy:)();
}

uint64_t StringProtocol.trimmingCharacters(in:)()
{
  return StringProtocol.trimmingCharacters(in:)();
}

uint64_t StringProtocol.addingPercentEncoding(withAllowedCharacters:)()
{
  return StringProtocol.addingPercentEncoding(withAllowedCharacters:)();
}

uint64_t StringProtocol.contains<A>(_:)()
{
  return StringProtocol.contains<A>(_:)();
}

uint64_t StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)()
{
  return StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
}

uint64_t BinaryInteger.description.getter()
{
  return BinaryInteger.description.getter();
}

uint64_t _bridgeAnyObjectToAny(_:)()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t type metadata accessor for ArraySlice()
{
  return type metadata accessor for ArraySlice();
}

uint64_t dispatch thunk of SetAlgebra.insert(_:)()
{
  return dispatch thunk of SetAlgebra.insert(_:)();
}

uint64_t dispatch thunk of SetAlgebra.formUnion(_:)()
{
  return dispatch thunk of SetAlgebra.formUnion(_:)();
}

uint64_t dispatch thunk of SetAlgebra.init()()
{
  return dispatch thunk of SetAlgebra.init()();
}

uint64_t dispatch thunk of SetAlgebra.init<A>(_:)()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t _HashTable.previousHole(before:)()
{
  return _HashTable.previousHole(before:)();
}

uint64_t _HashTable.nextHole(atOrAfter:)()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t __CocoaSet.startIndex.getter()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t __CocoaSet.makeIterator()()
{
  return __CocoaSet.makeIterator()();
}

uint64_t __CocoaSet.Index.handleBitPattern.getter()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t static __CocoaSet.Index.== infix(_:_:)()
{
  return static __CocoaSet.Index.== infix(_:_:)();
}

uint64_t __CocoaSet.Index.age.getter()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t __CocoaSet.Index.element.getter()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t __CocoaSet.count.getter()
{
  return __CocoaSet.count.getter();
}

uint64_t __CocoaSet.member(for:)()
{
  return __CocoaSet.member(for:)();
}

uint64_t __CocoaSet.element(at:)()
{
  return __CocoaSet.element(at:)();
}

uint64_t __CocoaSet.Iterator.next()()
{
  return __CocoaSet.Iterator.next()();
}

uint64_t __CocoaSet.contains(_:)()
{
  return __CocoaSet.contains(_:)();
}

uint64_t __CocoaSet.endIndex.getter()
{
  return __CocoaSet.endIndex.getter();
}

uint64_t __CocoaSet.formIndex(after:isUnique:)()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int __swiftcall AnyHashable._rawHashValue(seed:)(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t static AnyHashable.== infix(_:_:)()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t AnyHashable.base.getter()
{
  return AnyHashable.base.getter();
}

uint64_t AnyHashable.hash(into:)()
{
  return AnyHashable.hash(into:)();
}

uint64_t AnyHashable.hashValue.getter()
{
  return AnyHashable.hashValue.getter();
}

uint64_t AnyHashable.init<A>(_:)()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t static CommandLine.unsafeArgv.getter()
{
  return static CommandLine.unsafeArgv.getter();
}

uint64_t static CommandLine.argc.getter()
{
  return static CommandLine.argc.getter();
}

uint64_t static _SetStorage.copy(original:)()
{
  return static _SetStorage.copy(original:)();
}

uint64_t static _SetStorage.resize(original:capacity:move:)()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t static _SetStorage.convert(_:capacity:)()
{
  return static _SetStorage.convert(_:capacity:)();
}

uint64_t static _SetStorage.allocate(capacity:)()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t type metadata accessor for _SetStorage()
{
  return type metadata accessor for _SetStorage();
}

Swift::Void __swiftcall _StringGuts.grow(_:)(Swift::Int a1)
{
}

uint64_t _StringGuts.copyUTF8(into:)()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t StaticString.description.getter()
{
  return StaticString.description.getter();
}

Swift::Void __swiftcall _ArrayBuffer._typeCheckSlowPath(_:)(Swift::Int a1)
{
}

uint64_t _ArrayBuffer._getElementSlowPath(_:)()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._getElementSlowPath(_:)()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t _StringObject.sharedUTF8.getter()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t specialized ContiguousArray._endMutation()()
{
  return specialized ContiguousArray._endMutation()();
}

Swift::Void __swiftcall ContiguousArray.reserveCapacity(_:)(Swift::Int a1)
{
}

uint64_t specialized ContiguousArray.reserveCapacity(_:)()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t ContiguousArray.append(_:)()
{
  return ContiguousArray.append(_:)();
}

uint64_t ContiguousArray.init()()
{
  return ContiguousArray.init()();
}

uint64_t type metadata accessor for ContiguousArray()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t type metadata accessor for ContinuousClock.Instant()
{
  return type metadata accessor for ContinuousClock.Instant();
}

uint64_t ContinuousClock.init()()
{
  return ContinuousClock.init()();
}

uint64_t type metadata accessor for ContinuousClock()
{
  return type metadata accessor for ContinuousClock();
}

uint64_t dispatch thunk of InstantProtocol.advanced(by:)()
{
  return dispatch thunk of InstantProtocol.advanced(by:)();
}

uint64_t dispatch thunk of _AnySequenceBox._makeIterator()()
{
  return dispatch thunk of _AnySequenceBox._makeIterator()();
}

uint64_t dispatch thunk of _AnySequenceBox.__copyToContiguousArray()()
{
  return dispatch thunk of _AnySequenceBox.__copyToContiguousArray()();
}

uint64_t dispatch thunk of _AnySequenceBox._filter(_:)()
{
  return dispatch thunk of _AnySequenceBox._filter(_:)();
}

uint64_t _print_unlocked<A, B>(_:_:)()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t __CocoaDictionary.startIndex.getter()
{
  return __CocoaDictionary.startIndex.getter();
}

uint64_t __CocoaDictionary.makeIterator()()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t static __CocoaDictionary.Index.== infix(_:_:)()
{
  return static __CocoaDictionary.Index.== infix(_:_:)();
}

uint64_t __CocoaDictionary.Index.age.getter()
{
  return __CocoaDictionary.Index.age.getter();
}

uint64_t __CocoaDictionary.Index.key.getter()
{
  return __CocoaDictionary.Index.key.getter();
}

uint64_t __CocoaDictionary.count.getter()
{
  return __CocoaDictionary.count.getter();
}

uint64_t __CocoaDictionary.lookup(_:)()
{
  return __CocoaDictionary.lookup(_:)();
}

{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t __CocoaDictionary.Iterator.next()()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t __CocoaDictionary.endIndex.getter()
{
  return __CocoaDictionary.endIndex.getter();
}

uint64_t _assertionFailure(_:_:file:line:flags:)()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t _assertionFailure(_:_:flags:)()
{
  return _assertionFailure(_:_:flags:)();
}

uint64_t _bridgeCocoaArray<A>(_:)()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t EnumeratedSequence.makeIterator()()
{
  return EnumeratedSequence.makeIterator()();
}

uint64_t EnumeratedSequence.Iterator.next()()
{
  return EnumeratedSequence.Iterator.next()();
}

uint64_t type metadata accessor for EnumeratedSequence.Iterator()
{
  return type metadata accessor for EnumeratedSequence.Iterator();
}

uint64_t type metadata accessor for EnumeratedSequence()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t _CocoaArrayWrapper.endIndex.getter()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t _CocoaArrayWrapper.subscript.getter()
{
  return _CocoaArrayWrapper.subscript.getter();
}

{
  return _CocoaArrayWrapper.subscript.getter();
}

uint64_t static _DictionaryStorage.copy(original:)()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t static _DictionaryStorage.resize(original:capacity:move:)()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t static _DictionaryStorage.convert(_:capacity:)()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t static _DictionaryStorage.allocate(capacity:)()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t _fatalErrorMessage(_:_:file:line:flags:)()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t dispatch thunk of _AnyIteratorBoxBase.next()()
{
  return dispatch thunk of _AnyIteratorBoxBase.next()();
}

uint64_t CollectionDifference.insertions.getter()
{
  return CollectionDifference.insertions.getter();
}

uint64_t CollectionDifference.removals.getter()
{
  return CollectionDifference.removals.getter();
}

uint64_t _SwiftNewtypeWrapper<>._toCustomAnyHashable()()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

uint64_t _convertToAnyHashable<A>(_:)()
{
  return _convertToAnyHashable<A>(_:)();
}

Swift::Int __swiftcall _findStringSwitchCase(cases:string:)(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases._rawValue, string._countAndFlagsBits, string._object);
}

Swift::Int __swiftcall _minimumMergeRunLength(_:)(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t dispatch thunk of CustomStringConvertible.description.getter()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t type metadata accessor for _ContiguousArrayStorage()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t _forceBridgeFromObjectiveC<A>(_:_:)()
{
  return _forceBridgeFromObjectiveC<A>(_:_:)();
}

uint64_t _bridgeAnythingToObjectiveC<A>(_:)()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t _diagnoseUnexpectedEnumCase<A>(type:)()
{
  return _diagnoseUnexpectedEnumCase<A>(type:)();
}

uint64_t _stringCompareWithSmolCheck(_:_:expecting:)()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t type metadata accessor for __ContiguousArrayStorageBase()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()
{
  return _bridgeAnythingNonVerbatimToObjectiveC<A>(_:)();
}

uint64_t ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t dispatch thunk of Clock.now.getter()
{
  return dispatch thunk of Clock.now.getter();
}

uint64_t Error.localizedDescription.getter()
{
  return Error.localizedDescription.getter();
}

uint64_t Error.isREMError(withErrorCode:)()
{
  return Error.isREMError(withErrorCode:)();
}

uint64_t Error.rem_errorDescription.getter()
{
  return Error.rem_errorDescription.getter();
}

uint64_t Error._getEmbeddedNSError()()
{
  return Error._getEmbeddedNSError()();
}

uint64_t Error._code.getter()
{
  return Error._code.getter();
}

uint64_t Error._domain.getter()
{
  return Error._domain.getter();
}

uint64_t Error._userInfo.getter()
{
  return Error._userInfo.getter();
}

uint64_t static Hasher._hash(seed:_:)()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t Hasher.init(_seed:)()
{
  return Hasher.init(_seed:)();
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt8 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt32 a1)
{
}

Swift::Void __swiftcall Hasher._combine(_:)(Swift::UInt64 a1)
{
}

Swift::Int __swiftcall Hasher._finalize()()
{
  return Hasher._finalize()();
}

uint64_t static Duration.seconds(_:)()
{
  return static Duration.seconds(_:)();
}

uint64_t dispatch thunk of OptionSet.init(rawValue:)()
{
  return dispatch thunk of OptionSet.init(rawValue:)();
}

uint64_t _typeName(_:qualified:)()
{
  return _typeName(_:qualified:)();
}

uint64_t CEMStringIsSingleEmoji()
{
  return _CEMStringIsSingleEmoji();
}

CGAffineTransform *__cdecl CGAffineTransformMakeRotation(CGAffineTransform *__return_ptr retstr, CGFloat angle)
{
  return _CGAffineTransformMakeRotation(retstr, angle);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformRotate(CGAffineTransform *__return_ptr retstr, CGAffineTransform *t, CGFloat angle)
{
  return _CGAffineTransformRotate(retstr, t, angle);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectContainsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectContainsRect(rect1, rect2);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  return _CGRectGetMaxX(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMidX(CGRect rect)
{
  return _CGRectGetMidX(rect);
}

CGFloat CGRectGetMinX(CGRect rect)
{
  return _CGRectGetMinX(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  return _CGRectInset(rect, dx, dy);
}

CGRect CGRectIntersection(CGRect r1, CGRect r2)
{
  return _CGRectIntersection(r1, r2);
}

BOOL CGRectIntersectsRect(CGRect rect1, CGRect rect2)
{
  return _CGRectIntersectsRect(rect1, rect2);
}

BOOL CGRectIsEmpty(CGRect rect)
{
  return _CGRectIsEmpty(rect);
}

Class NSClassFromString(NSString *aClassName)
{
  return _NSClassFromString(aClassName);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

uint64_t NSStringFromPriorityLevel()
{
  return _NSStringFromPriorityLevel();
}

uint64_t REMCheckedDynamicCast()
{
  return _REMCheckedDynamicCast();
}

uint64_t TTRIAccessibilityKeyboardWindow()
{
  return _TTRIAccessibilityKeyboardWindow();
}

BOOL UIAccessibilityButtonShapesEnabled(void)
{
  return _UIAccessibilityButtonShapesEnabled();
}

BOOL UIAccessibilityIsBoldTextEnabled(void)
{
  return _UIAccessibilityIsBoldTextEnabled();
}

BOOL UIAccessibilityIsSwitchControlRunning(void)
{
  return _UIAccessibilityIsSwitchControlRunning();
}

BOOL UIAccessibilityIsVoiceOverRunning(void)
{
  return _UIAccessibilityIsVoiceOverRunning();
}

void UIAccessibilityPostNotification(UIAccessibilityNotifications notification, id argument)
{
}

BOOL UIAccessibilityShouldDifferentiateWithoutColor(void)
{
  return _UIAccessibilityShouldDifferentiateWithoutColor();
}

int UIApplicationMain(int argc, char **argv, NSString *principalClassName, NSString *delegateClassName)
{
  return _UIApplicationMain(argc, argv, principalClassName, delegateClassName);
}

uint64_t UIEdgeInsetsSubtract()
{
  return _UIEdgeInsetsSubtract();
}

uint64_t UIFloorToScale()
{
  return _UIFloorToScale();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return _UIImagePNGRepresentation(image);
}

uint64_t UIRectRoundToScale()
{
  return _UIRectRoundToScale();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _REMGetLocalizedString()
{
  return __REMGetLocalizedString();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_isClassOrObjCExistentialType()
{
  return __swift_isClassOrObjCExistentialType();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return _dispatch_get_global_queue(identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_group_t dispatch_group_create(void)
{
  return _dispatch_group_create();
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return _dispatch_group_wait(group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return _dispatch_queue_attr_make_with_autorelease_frequency(attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return _dispatch_queue_create(label, attr);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return _dispatch_semaphore_signal(dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return _dispatch_semaphore_wait(dsema, timeout);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return _dispatch_time(when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return _[a1 alloc];
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

uint64_t objc_alloc_init()
{
  return _objc_alloc_init();
}

id objc_autorelease(id a1)
{
  return _objc_autorelease(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return _objc_claimAutoreleasedReturnValue();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return _objc_getProperty(self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return _objc_initWeak(location, val);
}

id objc_loadWeakRetained(id *location)
{
  return _objc_loadWeakRetained(location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t objc_opt_class()
{
  return _objc_opt_class();
}

uint64_t objc_opt_new()
{
  return _objc_opt_new();
}

uint64_t objc_opt_respondsToSelector()
{
  return _objc_opt_respondsToSelector();
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return _objc_storeWeak(location, obj);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

uint64_t rdi_os_crash()
{
  return _rdi_os_crash();
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_continuation_init()
{
  return _swift_continuation_init();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastMetatype()
{
  return _swift_dynamicCastMetatype();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return _swift_dynamicCastObjCClassUnconditional();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getMetatypeMetadata()
{
  return _swift_getMetatypeMetadata();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_projectBox()
{
  return _swift_projectBox();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_unknownObjectUnownedDestroy()
{
  return _swift_unknownObjectUnownedDestroy();
}

uint64_t swift_unknownObjectUnownedInit()
{
  return _swift_unknownObjectUnownedInit();
}

uint64_t swift_unknownObjectUnownedLoadStrong()
{
  return _swift_unknownObjectUnownedLoadStrong();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakCopyAssign()
{
  return _swift_unknownObjectWeakCopyAssign();
}

uint64_t swift_unknownObjectWeakCopyInit()
{
  return _swift_unknownObjectWeakCopyInit();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_unknownObjectWeakTakeAssign()
{
  return _swift_unknownObjectWeakTakeAssign();
}

uint64_t swift_unknownObjectWeakTakeInit()
{
  return _swift_unknownObjectWeakTakeInit();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakAssign()
{
  return _swift_weakAssign();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}

uint64_t swift_willThrowTypedImpl()
{
  return _swift_willThrowTypedImpl();
}

time_t time(time_t *a1)
{
  return _time(a1);
}

id objc_msgSend__hideSearchFieldAndCancelOutstandingSearches_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "_hideSearchFieldAndCancelOutstandingSearches:");
}

id objc_msgSend__interfaceIdiomToUse(void *a1, const char *a2, ...)
{
  return _[a1 _interfaceIdiomToUse];
}

id objc_msgSend__maxScrollerHeight(void *a1, const char *a2, ...)
{
  return _[a1 _maxScrollerHeight];
}

id objc_msgSend__searchManager(void *a1, const char *a2, ...)
{
  return _[a1 _searchManager];
}

id objc_msgSend__searchResultsView(void *a1, const char *a2, ...)
{
  return _[a1 _searchResultsView];
}

id objc_msgSend__shadowView(void *a1, const char *a2, ...)
{
  return _[a1 _shadowView];
}

id objc_msgSend__showSearchField(void *a1, const char *a2, ...)
{
  return _[a1 _showSearchField];
}

id objc_msgSend_account(void *a1, const char *a2, ...)
{
  return _[a1 account];
}

id objc_msgSend_activeKeyboard(void *a1, const char *a2, ...)
{
  return _[a1 activeKeyboard];
}

id objc_msgSend_addAddress_(void *a1, const char *a2, ...)
{
  return [a1 addAddress:];
}

id objc_msgSend_addButton(void *a1, const char *a2, ...)
{
  return _[a1 addButton];
}

id objc_msgSend_addContact_(void *a1, const char *a2, ...)
{
  return [a1 addContact:];
}

id objc_msgSend_addObject_(void *a1, const char *a2, ...)
{
  return [a1 addObject:];
}

id objc_msgSend_addObjectsFromArray_(void *a1, const char *a2, ...)
{
  return [a1 addObjectsFromArray:];
}

id objc_msgSend_addRecipient_(void *a1, const char *a2, ...)
{
  return [a1 addRecipient:];
}

id objc_msgSend_addSubview_(void *a1, const char *a2, ...)
{
  return [a1 addSubview:];
}

id objc_msgSend_allowPhoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 allowPhoneNumbers];
}

id objc_msgSend_animateWithDuration_animations_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:];
}

id objc_msgSend_animateWithDuration_animations_completion_(void *a1, const char *a2, ...)
{
  return [a1 animateWithDuration:animations:completion:];
}

id objc_msgSend_array(void *a1, const char *a2, ...)
{
  return _[a1 array];
}

id objc_msgSend_arrayByAddingObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayByAddingObject:];
}

id objc_msgSend_arrayWithArray_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithArray:];
}

id objc_msgSend_arrayWithObject_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObject:];
}

id objc_msgSend_arrayWithObjects_count_(void *a1, const char *a2, ...)
{
  return [a1 arrayWithObjects:count:];
}

id objc_msgSend_becomeFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 becomeFirstResponder];
}

id objc_msgSend_bounds(void *a1, const char *a2, ...)
{
  return _[a1 bounds];
}

id objc_msgSend_bundleForClass_(void *a1, const char *a2, ...)
{
  return [a1 bundleForClass:];
}

id objc_msgSend_cal_isPhoneNumber(void *a1, const char *a2, ...)
{
  return [a1 cal_isPhoneNumber];
}

id objc_msgSend_cancelTaskWithID_(void *a1, const char *a2, ...)
{
  return [a1 cancelTaskWithID:];
}

id objc_msgSend_clearColor(void *a1, const char *a2, ...)
{
  return _[a1 clearColor];
}

id objc_msgSend_clearText(void *a1, const char *a2, ...)
{
  return _[a1 clearText];
}

id objc_msgSend_collaborationButtonView(void *a1, const char *a2, ...)
{
  return _[a1 collaborationButtonView];
}

id objc_msgSend_combineICloudDevices_withCloudKitDevices_(void *a1, const char *a2, ...)
{
  return [a1 combineICloudDevices:withCloudKitDevices:];
}

id objc_msgSend_composeLabel(void *a1, const char *a2, ...)
{
  return _[a1 composeLabel];
}

id objc_msgSend_composeRecipientViewDidFinishPickingRecipient_(void *a1, const char *a2, ...)
{
  return [a1 composeRecipientViewDidFinishPickingRecipient:];
}

id objc_msgSend_contact(void *a1, const char *a2, ...)
{
  return _[a1 contact];
}

id objc_msgSend_containsObject_(void *a1, const char *a2, ...)
{
  return [a1 containsObject:];
}

id objc_msgSend_controller_didUpdateRecipients_(void *a1, const char *a2, ...)
{
  return [a1 controller:didUpdateRecipients:];
}

id objc_msgSend_convertRect_fromView_(void *a1, const char *a2, ...)
{
  return [a1 convertRect:fromView:];
}

id objc_msgSend_copy(void *a1, const char *a2, ...)
{
  return _[a1 copy];
}

id objc_msgSend_count(void *a1, const char *a2, ...)
{
  return _[a1 count];
}

id objc_msgSend_countByEnumeratingWithState_objects_count_(void *a1, const char *a2, ...)
{
  return [a1 countByEnumeratingWithState:objects:count:];
}

id objc_msgSend_currentDevice(void *a1, const char *a2, ...)
{
  return _[a1 currentDevice];
}

id objc_msgSend_decimalDigitCharacterSet(void *a1, const char *a2, ...)
{
  return _[a1 decimalDigitCharacterSet];
}

id objc_msgSend_defaultHeight(void *a1, const char *a2, ...)
{
  return _[a1 defaultHeight];
}

id objc_msgSend_defaultSize(void *a1, const char *a2, ...)
{
  return _[a1 defaultSize];
}

id objc_msgSend_delegate(void *a1, const char *a2, ...)
{
  return _[a1 delegate];
}

id objc_msgSend_devices(void *a1, const char *a2, ...)
{
  return _[a1 devices];
}

id objc_msgSend_dismissViewControllerAnimated_completion_(void *a1, const char *a2, ...)
{
  return [a1 dismissViewControllerAnimated:YES completion:nil];
}

id objc_msgSend_emailAddresses(void *a1, const char *a2, ...)
{
  return _[a1 emailAddresses];
}

id objc_msgSend_fetchCloudKitDevicesWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 fetchCloudKitDevicesWithCompletionBlock:];
}

id objc_msgSend_fetchICloudDevicesWithCompletionBlock_(void *a1, const char *a2, ...)
{
  return [a1 fetchICloudDevicesWithCompletionBlock:];
}

id objc_msgSend_filteredDevices_(void *a1, const char *a2, ...)
{
  return [a1 filteredDevices:];
}

id objc_msgSend_firstMatchInString_options_range_(void *a1, const char *a2, ...)
{
  return [a1 firstMatchInString:options:range:];
}

id objc_msgSend_frame(void *a1, const char *a2, ...)
{
  return _[a1 frame];
}

id objc_msgSend_hardwareInfo(void *a1, const char *a2, ...)
{
  return _[a1 hardwareInfo];
}

id objc_msgSend_hardwareInfoFromModelId_(void *a1, const char *a2, ...)
{
  return [a1 hardwareInfoFromModelId:];
}

id objc_msgSend_hardwareInfoNameFromString_(void *a1, const char *a2, ...)
{
  return [a1 hardwareInfoNameFromString:];
}

id objc_msgSend_hasPrefix_(void *a1, const char *a2, ...)
{
  return [a1 hasPrefix:];
}

id objc_msgSend_horizontalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 horizontalSizeClass];
}

id objc_msgSend_incompatibleDeviceNames(void *a1, const char *a2, ...)
{
  return _[a1 incompatibleDeviceNames];
}

id objc_msgSend_incompatibleDevices(void *a1, const char *a2, ...)
{
  return _[a1 incompatibleDevices];
}

id objc_msgSend_initWithAccount_(void *a1, const char *a2, ...)
{
  return [a1 initWithAccount:];
}

id objc_msgSend_initWithAutocompleteSearchType_(void *a1, const char *a2, ...)
{
  return [a1 initWithAutocompleteSearchType:];
}

id objc_msgSend_initWithContact_address_kind_(void *a1, const char *a2, ...)
{
  return [a1 initWithContact:address:kind:];
}

id objc_msgSend_initWithFrame_(void *a1, const char *a2, ...)
{
  return [a1 initWithFrame:];
}

id objc_msgSend_initWithName_model_modelDisplayName_softwareVersion_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:model:modelDisplayName:softwareVersion:];
}

id objc_msgSend_initWithName_upgradable_upgraded_(void *a1, const char *a2, ...)
{
  return [a1 initWithName:upgradable:upgraded:];
}

id objc_msgSend_initWithString_(void *a1, const char *a2, ...)
{
  return [a1 initWithString:];
}

id objc_msgSend_integerValue(void *a1, const char *a2, ...)
{
  return _[a1 integerValue];
}

id objc_msgSend_invalidateAtomPresentationOptionsForRecipient_(void *a1, const char *a2, ...)
{
  return [a1 invalidateAtomPresentationOptionsForRecipient:];
}

id objc_msgSend_invertedSet(void *a1, const char *a2, ...)
{
  return _[a1 invertedSet];
}

id objc_msgSend_isDragging(void *a1, const char *a2, ...)
{
  return _[a1 isDragging];
}

id objc_msgSend_isEqual_(void *a1, const char *a2, ...)
{
  return [a1 isEqual:];
}

id objc_msgSend_isEqualToString_(void *a1, const char *a2, ...)
{
  return [a1 isEqualToString:];
}

id objc_msgSend_isFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 isFirstResponder];
}

id objc_msgSend_isHardwareInfoUpgradable_(void *a1, const char *a2, ...)
{
  return [a1 isHardwareInfoUpgradable:];
}

id objc_msgSend_isHardwareInfoUpgradableTo2019OSes_(void *a1, const char *a2, ...)
{
  return [a1 isHardwareInfoUpgradableTo2019OSes];
}

id objc_msgSend_isHardwareInfoUpgradableToSydneyRomeKincaid_(void *a1, const char *a2, ...)
{
  return [a1 isHardwareInfoUpgradableToSydneyRomeKincaid:];
}

id objc_msgSend_isOSXDevice(void *a1, const char *a2, ...)
{
  return _[a1 isOSXDevice];
}

id objc_msgSend_key(void *a1, const char *a2, ...)
{
  return _[a1 key];
}

id objc_msgSend_length(void *a1, const char *a2, ...)
{
  return _[a1 length];
}

id objc_msgSend_loggableDescription(void *a1, const char *a2, ...)
{
  return _[a1 loggableDescription];
}

id objc_msgSend_lowercaseString(void *a1, const char *a2, ...)
{
  return _[a1 lowercaseString];
}

id objc_msgSend_model(void *a1, const char *a2, ...)
{
  return _[a1 model];
}

id objc_msgSend_modelDisplayName(void *a1, const char *a2, ...)
{
  return _[a1 modelDisplayName];
}

id objc_msgSend_name(void *a1, const char *a2, ...)
{
  return _[a1 name];
}

id objc_msgSend_navigationController(void *a1, const char *a2, ...)
{
  return _[a1 navigationController];
}

id objc_msgSend_navigationItem(void *a1, const char *a2, ...)
{
  return _[a1 navigationItem];
}

id objc_msgSend_needUpgradeDeviceNames(void *a1, const char *a2, ...)
{
  return _[a1 needUpgradeDeviceNames];
}

id objc_msgSend_needUpgradeDevices(void *a1, const char *a2, ...)
{
  return _[a1 needUpgradeDevices];
}

id objc_msgSend_numberOfRanges(void *a1, const char *a2, ...)
{
  return _[a1 numberOfRanges];
}

id objc_msgSend_objectAtIndexedSubscript_(void *a1, const char *a2, ...)
{
  return [a1 objectAtIndexedSubscript:];
}

id objc_msgSend_performRequestWithHandler_(void *a1, const char *a2, ...)
{
  return [a1 performRequestWithHandler:];
}

id objc_msgSend_phoneNumbers(void *a1, const char *a2, ...)
{
  return _[a1 phoneNumbers];
}

id objc_msgSend_predicateWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 predicateWithFormat:];
}

id objc_msgSend_preferredHeight(void *a1, const char *a2, ...)
{
  return _[a1 preferredHeight];
}

id objc_msgSend_presentModalViewController_withTransition_(void *a1, const char *a2, ...)
{
  return [a1 presentModalViewController:withTransition:];
}

id objc_msgSend_rangeAtIndex_(void *a1, const char *a2, ...)
{
  return [a1 rangeAtIndex:];
}

id objc_msgSend_recipientFromContact_(void *a1, const char *a2, ...)
{
  return [a1 recipientFromContact:];
}

id objc_msgSend_recipients(void *a1, const char *a2, ...)
{
  return _[a1 recipients];
}

id objc_msgSend_regularExpressionWithPattern_options_error_(void *a1, const char *a2, ...)
{
  return [a1 regularExpressionWithPattern:options:error:];
}

id objc_msgSend_removeAllObjects(void *a1, const char *a2, ...)
{
  return _[a1 removeAllObjects];
}

id objc_msgSend_removeFromSuperview(void *a1, const char *a2, ...)
{
  return _[a1 removeFromSuperview];
}

id objc_msgSend_removeRecipient_(void *a1, const char *a2, ...)
{
  return [a1 removeRecipient:];
}

id objc_msgSend_resignFirstResponder(void *a1, const char *a2, ...)
{
  return _[a1 resignFirstResponder];
}

id objc_msgSend_safeAreaInsets(void *a1, const char *a2, ...)
{
  return _[a1 safeAreaInsets];
}

id objc_msgSend_scanInt_(void *a1, const char *a2, ...)
{
  return [a1 scanInt:];
}

id objc_msgSend_searchForText_withAutocompleteFetchContext_consumer_(void *a1, const char *a2, ...)
{
  return _objc_msgSend(a1, "searchForText:withAutocompleteFetchContext:consumer:");
}

id objc_msgSend_searchWithText_(void *a1, const char *a2, ...)
{
  return [a1 searchWithText:];
}

id objc_msgSend_setAddresses_(void *a1, const char *a2, ...)
{
  return [a1 setAddresses:];
}

id objc_msgSend_setAlpha_(void *a1, const char *a2, ...)
{
  return [a1 setAlpha:];
}

id objc_msgSend_setAutoresizingMask_(void *a1, const char *a2, ...)
{
  return [a1 setAutoresizingMask:];
}

id objc_msgSend_setBackgroundColor_(void *a1, const char *a2, ...)
{
  return [a1 setBackgroundColor:];
}

id objc_msgSend_setCharactersToBeSkipped_(void *a1, const char *a2, ...)
{
  return [a1 setCharactersToBeSkipped:];
}

id objc_msgSend_setContentSize_(void *a1, const char *a2, ...)
{
  return [a1 setContentSize:];
}

id objc_msgSend_setDelegate_(void *a1, const char *a2, ...)
{
  return [a1 setDelegate:];
}

id objc_msgSend_setDevices_(void *a1, const char *a2, ...)
{
  return [a1 setDevices:];
}

id objc_msgSend_setDidGetICloudDeviceList_(void *a1, const char *a2, ...)
{
  return [a1 setDidGetICloudDeviceList:];
}

id objc_msgSend_setDisplayedPropertyKeys_(void *a1, const char *a2, ...)
{
  return [a1 setDisplayedPropertyKeys:];
}

id objc_msgSend_setFrame_(void *a1, const char *a2, ...)
{
  return [a1 setFrame:];
}

id objc_msgSend_setGutterWidth_(void *a1, const char *a2, ...)
{
  return [a1 setGutterWidth:];
}

id objc_msgSend_setLabel_(void *a1, const char *a2, ...)
{
  return [a1 setLabel:];
}

id objc_msgSend_setModalPresentationStyle_(void *a1, const char *a2, ...)
{
  return [a1 setModalPresentationStyle:];
}

id objc_msgSend_setOfDeviceNamesFromDevices_(void *a1, const char *a2, ...)
{
  return [a1 setOfDeviceNamesFromDevices];
}

id objc_msgSend_setPredicateForEnablingContact_(void *a1, const char *a2, ...)
{
  return [a1 setPredicateForEnablingContact:];
}

id objc_msgSend_setPredicateForSelectionOfContact_(void *a1, const char *a2, ...)
{
  return [a1 setPredicateForSelectionOfContact:];
}

id objc_msgSend_setPredicateForSelectionOfProperty_(void *a1, const char *a2, ...)
{
  return [a1 setPredicateForSelectionOfProperty:];
}

id objc_msgSend_setRecipients_(void *a1, const char *a2, ...)
{
  return [a1 setRecipients:];
}

id objc_msgSend_setSearchAccountIDs_(void *a1, const char *a2, ...)
{
  return [a1 setSearchAccountIDs:];
}

id objc_msgSend_setSearchTypes_(void *a1, const char *a2, ...)
{
  return [a1 setSearchTypes:];
}

id objc_msgSend_setSeparatorHidden_(void *a1, const char *a2, ...)
{
  return [a1 setSeparatorHidden:];
}

id objc_msgSend_setShowManageButton_(void *a1, const char *a2, ...)
{
  return [a1 setShowManageButton:];
}

id objc_msgSend_setTitle_(void *a1, const char *a2, ...)
{
  return [a1 setTitle:];
}

id objc_msgSend_setView_(void *a1, const char *a2, ...)
{
  return [a1 setView:];
}

id objc_msgSend_shouldBeHidden(void *a1, const char *a2, ...)
{
  return _[a1 shouldBeHidden];
}

id objc_msgSend_softwareVersion(void *a1, const char *a2, ...)
{
  return _[a1 softwareVersion];
}

id objc_msgSend_stringByAppendingString_(void *a1, const char *a2, ...)
{
  return [a1 stringByAppendingString:];
}

id objc_msgSend_stringValue(void *a1, const char *a2, ...)
{
  return _[a1 stringValue];
}

id objc_msgSend_stringWithFormat_(void *a1, const char *a2, ...)
{
  return [a1 stringWithFormat:];
}

id objc_msgSend_substringWithRange_(void *a1, const char *a2, ...)
{
  return [a1 substringWithRange:];
}

id objc_msgSend_superview(void *a1, const char *a2, ...)
{
  return _[a1 superview];
}

id objc_msgSend_swVersion(void *a1, const char *a2, ...)
{
  return _[a1 swVersion];
}

id objc_msgSend_systemBackgroundColor(void *a1, const char *a2, ...)
{
  return _[a1 systemBackgroundColor];
}

id objc_msgSend_systemName(void *a1, const char *a2, ...)
{
  return _[a1 systemName];
}

id objc_msgSend_systemVersion(void *a1, const char *a2, ...)
{
  return _[a1 systemVersion];
}

id objc_msgSend_tableView(void *a1, const char *a2, ...)
{
  return _[a1 tableView];
}

id objc_msgSend_textView(void *a1, const char *a2, ...)
{
  return _[a1 textView];
}

id objc_msgSend_titleString(void *a1, const char *a2, ...)
{
  return _[a1 titleString];
}

id objc_msgSend_traitCollection(void *a1, const char *a2, ...)
{
  return _[a1 traitCollection];
}

id objc_msgSend_upgradable(void *a1, const char *a2, ...)
{
  return _[a1 upgradable];
}

id objc_msgSend_upgraded(void *a1, const char *a2, ...)
{
  return _[a1 upgraded];
}

id objc_msgSend_utility(void *a1, const char *a2, ...)
{
  return _[a1 utility];
}

id objc_msgSend_value(void *a1, const char *a2, ...)
{
  return _[a1 value];
}

id objc_msgSend_verticalSizeClass(void *a1, const char *a2, ...)
{
  return _[a1 verticalSizeClass];
}

id objc_msgSend_view(void *a1, const char *a2, ...)
{
  return _[a1 view];
}

id objc_msgSend_window(void *a1, const char *a2, ...)
{
  return _[a1 window];
}

id objc_msgSend_workSemaphore(void *a1, const char *a2, ...)
{
  return _[a1 workSemaphore];
}